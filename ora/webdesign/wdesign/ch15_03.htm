<html><head><title>The Basic Form (&lt;form&gt;) (Web Design in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="style/style1.css" />

<meta name="DC.Creator" content="Jennifer Niederst" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001967L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Web Design in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Web Design in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch15_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Web Design in a Nutshell, 2nd Edition</a></td><td align="right" valign="top" width="228"><a href="ch15_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">15.3. The Basic Form (&lt;form&gt;)</h2>

<p>The <tt class="literal">&lt;form&gt;</tt><a name="INDEX-1751" /> tag, which is used to designate a
form, contains the information necessary for interacting with a
program on the server. A form is made up of a number of controls
(checkboxes, menus, text-entry fields, buttons, etc.) used for
entering information. When the user has completed the form and
presses the "submit" button, the browser takes the
information, arranges it into name/value pairs, encodes the
information for transfer, and then sends it off to the server.
</p>

<p>You can have several forms within a single document, but they cannot
be nested, and you must be careful they do not overlap. <a href="ch15_03.htm">Figure 15-1</a> shows a very simple form and its
<tt class="literal">&lt;form&gt;</tt> tag.
</p>

<a name="wdnut2-CHP-15-FIG-1" /><div class="figure"><img height="246" alt="Figure 15-1" src="figs/WDN2_1501.gif" width="338" /></div><h4 class="objtitle">Figure 15-1. A simple form</h4>

<a name="wdnut2-CHP-15-SECT-3.1" /><div class="sect2">
<h3 class="sect2">15.3.1. The action Attribute</h3>

<p>The <a name="INDEX-1752" /><tt class="literal">action</tt> attribute in the
<tt class="literal">&lt;form&gt;</tt> tag provides the URL of the program
to be used for processing the form. In the example in <a href="ch15_03.htm">Figure 15-1</a>, the form information is going to a Perl
script called <em class="citetitle">guestbook.pl</em>, which resides in
the <em class="filename">cgi-bin</em> directory of the current server (by
convention, CGI programs are usually kept in a directory called
<em class="citetitle">cgi-bin</em>).
</p>

</div>
<a name="wdnut2-CHP-15-SECT-3.2" /><div class="sect2">
<h3 class="sect2">15.3.2. The method Attribute</h3>

<p>The <tt class="literal">method</tt><a name="INDEX-1753" /> attribute
specifies one of two methods, either
<tt class="literal">get</tt><a name="INDEX-1754" /> or <tt class="literal">post</tt>, by which the
information from the form can be transmitted to the server. Form
information is typically transferred in a series of
<em class="replaceable">name=value</em> pairs, separated by the
<a name="INDEX-1755" /> <a name="INDEX-1756" />ampersand (<tt class="literal">&amp;</tt>)
character.
</p>

<p>Let's take into consideration a simple form with two fields:
one for entering a name and the other for entering a nickname. If a
user enters "Josephine" in the first field and
"Josie" in the second, that information is transmitted to
the server in the following format:
</p>

<blockquote><pre class="code">name=Josephine&amp;nickname=Josie</pre></blockquote>

<p>With the <tt class="literal">get</tt> method, the browser transfers the
data from the form as part of the URL itself (appended to the end and
separated by a question mark) in a single transmission. The
information gathered from the nickname example would be transferred
via the <tt class="literal">get</tt> method as follows:
</p>

<blockquote><pre class="code">GET http://www.domainname.com/cgi-bin/guestbook.pl?name=Josephine&amp;nickname=Josie</pre></blockquote>

<p>The <tt class="literal">post</tt><a name="INDEX-1757" /> method transmits the form input
information separated from the URL, in essentially a two-part
message. The first part of the message is simply the special header
sent by the browser with each request. This header contains the URL
from the form element, combined with a statement that this is a
<tt class="literal">post</tt> request, plus some other headers we
won't discuss here. This is followed by the actual form data.
When the server sees the word <tt class="literal">post</tt> at the
beginning of the message, it stays tuned for the data. The
information gathered with the name and nickname form would read as
follows using the <tt class="literal">post</tt> method:
</p>

<blockquote><pre class="code">POST http://www.domainname.com/cgi-bin/guestbook.pl HTTP1.0
... [more headers here]
name=Josephine&amp;nickname=Josie</pre></blockquote>

<p>Whether you should use <tt class="literal">post</tt> or
<tt class="literal">get</tt> may rely on the requirements of your server.
In general, if you have a short form with a few short fields, use the
<tt class="literal">get</tt> method. Conversely, long, complex forms are
best sent via <tt class="literal">post</tt>. If security is an issue (such
as when using the <tt class="literal">&lt;input</tt>
<tt class="literal">type=</tt><tt class="literal">"</tt><tt class="literal">password</tt><tt class="literal">"</tt><tt class="literal">&gt;</tt>
tag), use <tt class="literal">post</tt>, because it offers an opportunity
for encryption rather than sending the form data straight away tacked
onto the URL. One advantage of <tt class="literal">get</tt> is that the
request can be bookmarked, since everything in the request is in the
URL. This isn't true with <tt class="literal">post</tt>.
</p>

</div>
<a name="wdnut2-CHP-15-SECT-3.3" /><div class="sect2">
<h3 class="sect2">15.3.3. Encoding</h3>

<p><a name="INDEX-1758" />
<a name="INDEX-1759" />
<a name="INDEX-1760" />Another behind-the-scenes step that
happens in the transaction is that the data gets encoded using
standard URL encoding. This is a method for translating spaces and
other characters not permitted in URLs (such as slashes) into their
hexadecimal equivalents. For example, the space character translates
to <tt class="literal">%20</tt>, and the <a name="INDEX-1761" />
<a name="INDEX-1762" />slash character is transferred as
<tt class="literal">%2F</tt>.
</p>

<p>The default encoding format, the <a name="INDEX-1763" />Internet Media Type
(<tt class="literal">application/x-www-form-urlencoded</tt>), will suffice
for most forms. If your form includes a <tt class="literal">file</tt> input
type (for uploading documents to the server), you should use the
<a name="INDEX-1764" /><tt class="literal">enctype</tt> attribute to set
the encoding to its alternate setting,
<tt class="literal">multipart/form-data.</tt>
</p>

<p>In general, you will need to communicate with your server
administrator to get all the necessary settings for the
<tt class="literal">&lt;form&gt;</tt> tag to enable your form to function
properly.<tt class="sgmltag-element">&lt;&gt;</tt><a name="INDEX-1765" /> 
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch15_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch15_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">15.2. Introduction to Forms</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">15.4. Form Elements</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,0,77,93" shape="rect" /><area href="index.htm" coords="81,0,156,93" shape="rect" /><area href="../xhtml/index.htm" coords="161,0,261,102" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="339,1,433,109" shape="rect" /><area href="../action/index.htm" coords="438,2,540,109" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,694,104" shape="rect" /></map>

</body></html>