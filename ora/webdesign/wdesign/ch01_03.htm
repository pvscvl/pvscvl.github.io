<html><head><title>Design Strategies (Web Design in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="style/style1.css" />

<meta name="DC.Creator" content="Jennifer Niederst" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001967L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Web Design in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Web Design in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Web Design in a Nutshell, 2nd Edition</a></td><td align="right" valign="top" width="228"><a href="ch01_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">1.3. Design Strategies</h2>

<p><a name="INDEX-32" /> <a name="INDEX-33" /> <a name="INDEX-34" /> <a name="INDEX-35" />Faced<a name="INDEX-36" /> with the dilemma of varying browser
capabilities, web designers have developed a variety of design
approaches, some more extreme than others. The "correct"
way to handle a particular site, of course, depends on its use and
audience, but this section should provide a peek into the different
positions in the ongoing debate over where to draw the line.
</p>

<a name="wdnut2-CHP-1-SECT-3.1" /><div class="sect2">
<h3 class="sect2">1.3.1. Lowest Common Denominator Design</h3>

<p><a name="INDEX-37" />One way to make sure your pages are
accessible to everyone is to stick with the safest HTML standard
(such as HTML 3.2) and shun any extras. That way your pages are sure
to work on all browsers, including Lynx and Version 2.0 of the
popular browsers.
</p>

<p>A minority of web developers take the position that the current
embellishments to HTML (Java, JavaScript, DHTML, and plug-in
technologies like Flash) are unnecessary to successful communication
over the Web. Designers who design for the lowest common denominator
may choose not to use any of these technologies in their designs.
This approach reflects the conservative extreme of the range of web
design strategies.
</p>

</div>
<a name="wdnut2-CHP-1-SECT-3.2" /><div class="sect2">
<h3 class="sect2">1.3.2. Current Version Design</h3>

<p><a name="INDEX-38" /> <a name="INDEX-39" />Another
minority, at the other end of the spectrum, are the web developers
who design <em class="emphasis">only</em> for the most current version of
popular browsers (as of this writing, Netscape 6.0 and Internet
Explorer 5.5), with little concern for site performance for other
users. The statement "Tell them to upgrade -- it's
<em class="emphasis">free</em> !" has often been used in defense of
this design tactic. Beyond this, there are even designers who design
for only the most current version of one
<em class="emphasis">particular</em> browser or platform. This may be
perfectly appropriate for intranet design in organizations that have
standardized on a particular version of a single browser, but in
general, it's unrealistic.
</p>

<p>This approach has the obvious disadvantage of alienating a
significant percentage of the audience. If the functionality of a
site depends on a specific trick -- for example, if you
can't get off the front page without DHTML support -- then
your site has problems communicating. On the positive side, these
designers tend to be the ones who forge new territories and put new
technologies to the test. Creating exciting sites that depend on
cutting-edge features does create an incentive for users to keep
themselves up-to-date. Unfortunately, in many cases, upgrading is out
of the control of the end user.
</p>

</div>
<a name="wdnut2-CHP-1-SECT-3.3" /><div class="sect2">
<h3 class="sect2">1.3.3. Splitting the Difference</h3>

<p>Far more commonly, designers take a more balanced approach to web
site creation. Designing web pages that "degrade
gracefully" is the buzz phrase in web design circles. This
design incorporates cutting-edge web technologies, such as DHTML or
JavaScript, but implements them in such a way that the pages are
still fully functional on older browsers.
</p>

<p>One strategy is to design pages that take advantage of technology
supported in the previous version of major browsers. As of this
writing, that would be the Version 4.0 browsers. So, tables, frames,
and much of JavaScript are fine, but DHTML effects may still be a
problem.
</p>

<p>The trick is to code your page such that it degrades well for older
or more simple browsers. Simply being careful about always adding
alternative text for images with the <tt class="literal">ALT</tt> attribute
will make a web page more functional for Lynx users. When tables are
used, they can be constructed so they read logically when scanned by
a text-only browser.
</p>

<p>Once working pages are developed using Version 4.0 technologies
(while keeping an eye on performance on older browsers), the site can
be embellished using the latest techniques and tricks. For instance,
it is possible to create a page that looks just fine for all browsers
but also takes advantage of Cascading Style Sheets for those browsers
that can use them. It doesn't hurt the other browsers; the
up-to-date users just get something extra. The same goes for DHTML
tricks. They're fine as long as they're not used to carry
the crucial message or functionality of the site. Think of these
things as icing on the cake.
</p>

<p>By being mindful of how well elements degrade, you can construct
pages that wow 'em on the current browsers but don't
drive users away if they're using an earlier version.
</p>

</div>
<a name="wdnut2-CHP-1-SECT-3.4" /><div class="sect2">
<h3 class="sect2">1.3.4. Something for Everyone</h3>

<p>An <a name="INDEX-40" />approach that is common (albeit
more labor-intensive) among professional web developers is to create
multiple versions of a site aimed at different levels of users. One
site might incorporate DHTML tricks and JavaScript events. Another
could be a solid HTML 3.2-compliant site with images and attractive
page layouts, but without the bells and whistles. You could create a
text-only version to serve the folks using Lynx, nonvisual browsers,
and browsers on handheld electronic devices. If you were feeling
ambitious, you could provide an all-Flash version of your site for
those who are interested. In most cases, two carefully planned
versions are plenty: one that takes advantage of the full
functionality of the latest graphical browser and another
stripped-down version that serves everyone else.
</p>

<p>Some sites allow their users to decide which version they'd
like to see. It's not uncommon to arrive at a site and be asked
to choose between a souped-up version or a text-only version, or to
choose frames/no-frames or Flash/no Flash. This puts the control in
the hands of the viewer.
</p>

<p>A more sophisticated approach is to automatically serve up an
appropriate version of the page for the browser that is making the
request. JavaScript is capable of performing actions based on the
browser being used (see <a href="ch28_01.htm">Chapter 28, "Introduction to JavaScript"</a>). Pages can also
be assembled on the fly for a particular browser using Server Side
Includes (see <a href="ch18_01.htm">Chapter 18, "Server Side Includes"</a>). Hotwired's
WebMonkey site is a great example of this method in action, plus they
share their secrets, so check it out at <a href="../../../../../../www.webmonkey.com/">http://www.webmonkey.com</a>.
</p>

<p>Of course, this approach takes a bit more time and technical
know-how, but it has its rewards.
</p>

</div>
<a name="wdnut2-CHP-1-SECT-3.5" /><div class="sect2">
<h3 class="sect2">1.3.5. Take Advantage of Tools</h3>

<p>Whether you are designing with particular browsers in mind or with
the goal of reaching the widest browser audience possible, the good
news is that there are tools that can help you. The latest web
<a name="INDEX-41" />
<a name="INDEX-42" />authoring tools, such as
<a name="INDEX-43" />Macromedia Dreamweaver and
<a name="INDEX-44" />
<a name="INDEX-45" />Adobe GoLive,
have functions that ensure that your code will work with your
preferred browsers. They give you a good head start toward creating
HTML properly for your intended audience.
</p>

<p>Dreamweaver 4.0 has a "Check Target Browser" feature that
checks your HTML (but, unfortunately, not scripts) against a list of
browser profiles to see if any tags or attributes are unsupported and
then generates a report with its findings. Go to Macromedia's
site (<a href="../../../../../../www.macromedia.com/">http://www.macromedia.com</a>)
to download browser profile updates as new browsers are released. To
take some of the guesswork out of browser support for scripting,
Dreamweaver allows you to set a target browser, to which it responds
by limiting the behaviors you can select to just those supported in
that browser. There are also built-in functions for doing browser
detection.
</p>

<p>Similarly, Adobe GoLive lets you define a set of browsers you want to
support and automatically lets you know if it finds HTML tags or
attributes that are not supported. Select the set of browsers you
want to support using the Browser Sets option under the Source
category in the Preferences dialog box. In fact, GoLive has a Web
Database feature that lists all the HTML tags and their
browser-support information. You can also select a target browser
when adding scripts to your page and use the Browser Switch icon to
detect the browser version and serve the appropriate script.
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch01_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">1.2. Browser Usage Statistics</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">1.4. Knowing Your Audience</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,0,77,93" shape="rect" /><area href="index.htm" coords="81,0,156,93" shape="rect" /><area href="../xhtml/index.htm" coords="161,0,261,102" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="339,1,433,109" shape="rect" /><area href="../action/index.htm" coords="438,2,540,109" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,694,104" shape="rect" /></map>

</body></html>