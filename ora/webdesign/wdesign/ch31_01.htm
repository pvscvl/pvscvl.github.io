<html><head><title>XHTML (Web Design in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="style/style1.css" />

<meta name="DC.Creator" content="Jennifer Niederst" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001967L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Web Design in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Web Design in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch30_06.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Web Design in a Nutshell, 2nd Edition</a></td><td align="right" valign="top" width="228"><a href="ch31_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />



<h1 class="chapter">Chapter 31. XHTML</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch31_01.htm">XHTML Standards Development</a><br />
<a href="ch31_02.htm">Creating XHTML 1.0 Documents</a><br />
<a href="ch31_03.htm">XHTML Document Declarations</a><br />
<a href="ch31_04.htm">Well-Formed XHTML</a><br />
<a href="ch31_05.htm">Try It Out</a><br /></p></div>

<p>While the HTML 4.01 specification goes a long way in tidying up HTML,
it still suffers from sloppy artifacts of HTML's fast and loose
development. Over the years, little was done to make HTML perfectly
SGML-compliant. As a result, we have a language with quirky features
and browsers that easily forgive basic HTML coding errors.
</p>

<p>With the creation of XML (see <a href="ch30_01.htm">Chapter 30, "Introduction to XML"</a>), the W3C
finally had a standard set of rules for defining markup languages. It
should come as no surprise that one of the first things they did with
their shiny new set of rules is apply them HTML. The resulting
XML-ized HTML standard is known as XHTML.
</p>

<p>XHTML 1.0 is virtually the same as the HTML 4.01 standard, but more
strict. The W3C is aiming eventually to replace HTML with XHTML to
keep it in line with the larger family of XML-based markup languages.
</p>

<p>This chapter reviews the differences and similarities between HTML
4.0 and XHTML.
</p>

<div class="sect1"><a name="wdnut2-CHP-31-SECT-1" />
<h2 class="sect1">31.1. XHTML Standards Development</h2>

<p>Things<a name="INDEX-2991" /> are exciting over at the W3C. Now
that they have XML on their toolbelts, they seem to be on a roll in
rethinking and reshaping document markup. Between January 2000 and
June 2001, they have turned out three XHTML Recommendations: XHTML
1.0, XHTML Basic, and XHTML 1.1 (XHTML 1.1 is still
"Proposed" as of this writing, but since it's on
the verge of approval, I'll count it anyway). This section
looks at each one.
</p>

<a name="wdnut2-CHP-31-SECT-1.1" /><div class="sect2">
<h3 class="sect2">31.1.1. XHTML 1.0</h3>

<p>The XHTML 1.0 Recommendation (released in January 2000) is really
just a reformulation of the HTML 4.01 specification according to the
rules of XML. The XHTML 1.0 standard is the focus of this chapter.
</p>

<p>Like HTML 4, XHTML 1.0 comes in three varieties -- Strict,
Transitional, and Frames -- each defined by a separate DTD. (For
more information on DTDs, see <a href="ch30_01.htm">Chapter 30, "Introduction to XML"</a>). It is
important to specify which version you are using in your document, as
modern browsers (IE 5.5+ and Netscape 6) can use this information to
turn on "strict" standards-compliant formatting, as
opposed to the "quirky" behavior of older, nonstandard
HTML. Of course, if you do specify the DTD, then you must stick to it
exactly so that your document will be valid (i.e., not breaking any
rules defined by the DTD).
</p>

<p>You must also make sure to specify the proper namespace declaration
for XHTML. This is included in the <tt class="literal">&lt;html&gt;</tt>
tag at the start of the document and is discussed later in
<a href="ch31_03.htm">Section 31.3, "XHTML Document Declarations"</a>.
</p>

<a name="wdnut2-CHP-31-SECT-1.1.1" /><div class="sect3">
<h3 class="sect3">31.1.1.1. Strict DTD</h3>

<p>This <a name="INDEX-2992" />version excludes all deprecated tags and
attributes (like <tt class="literal">&lt;font&gt;</tt> and
<tt class="literal">align</tt>) to reinforce the separation of document
structure from presentation. All style information is delegated to
Cascading Style Sheets, which work the same in XHTML as in HTML (see
<a href="ch17_01.htm">Chapter 17, "Cascading Style Sheets"</a> for more information).
</p>

<p>While it is certainly possible to begin constructing web pages and
sites according to the Strict DTD, it poses a greater challenge.
Because there are still millions of web users with older browsers
that don't support style sheets and HTML 4.0, you run the risk
of alienating some users (or providing them with only lowest common
denominator content). Fortunately, there is evidence that things will
get easier in the future. The latest round of major browsers
(Internet Explorer 5.5 for Windows, Internet Explorer 5.0 for
Macintosh, and Netscape 6 on all platforms) snap into perfect
standards-compliance mode when you specify "strict" in
the <tt class="literal">DOCTYPE</tt> declaration.
</p>

</div>

<a name="wdnut2-CHP-31-SECT-1.1.2" /><div class="sect3">
<h3 class="sect3">31.1.1.2. Transitional DTD</h3>

<p>The Transitional DTD includes all the deprecated elements in order to
cater to the legacy behavior of most browsers. Deprecated tags and
elements are permitted but discouraged from use. This DTD provides a
way to ease web authors out of their current habits and toward
abiding by standards. Most web authors today choose to use the
Transitional DTD since it is what works best in most browsers.
</p>

</div>

<a name="wdnut2-CHP-31-SECT-1.1.3" /><div class="sect3">
<h3 class="sect3">31.1.1.3. Frameset DTD</h3>

<p>This specification is exactly the same as the Transitional DTD,
except that it includes the elements for creating framed web pages
(<tt class="literal">&lt;frameset&gt;</tt>,
<tt class="literal">&lt;frame&gt;</tt>, and
<tt class="literal">&lt;noframe&gt;</tt>). The Frameset DTD is kept
separate because the structure of a framed document (where
<tt class="literal">&lt;frameset&gt;</tt> replaces
<tt class="literal">&lt;body&gt;</tt>) is fundamentally different from
regular HTML documents.
</p>

</div>
</div>
<a name="wdnut2-CHP-31-SECT-1.2" /><div class="sect2">
<h3 class="sect2">31.1.2. XHTML Basic</h3>

<p>The XHTML Basic Recommendation (released in December 2000) is a
stripped-down version of XHTML 1.0 aimed at preparing documents for
mobile applications such as cell phones or handheld devices. The
specification is consistent with the XHTML modularization efforts
(discussed next). XHTML Basic contains the minimum elements necessary
to be considered an XHTML document, plus images, forms, basic tables,
and object support. To read more about it, see the W3C's
Recommendation at <a href="../../../../../../www.w3.org/TR/2000/REC-xhtml-basic-20001219/">http://www.w3.org/TR/2000/REC-xhtml-basic-20001219/</a>.
</p>

</div>
<a name="wdnut2-CHP-31-SECT-1.3" /><div class="sect2">
<h3 class="sect2">31.1.3. XHTML 1.1 (Modular XHTML)</h3>

<p>XHTML<a name="INDEX-2993" /> 1.1 (a
proposed recommendation as of this writing) reflects a breakthrough
in the way markup languages are constructed. Instead of one
comprehensive set of elements, this specification is broken up into
task-specific modules. A module is a set of elements that handle one
aspect or type of object in a document. Some modules include the core
module, text, forms, tables, images, imagemaps, objects, and frames.
</p>

<p>In a world where HTML content is being used on devices as varied as
cell phones, desktop computers, refrigerator panels, dashboard
consoles, and more, a "one-size-fits-all" content markup
language will no longer work. Modularization is the solution to this
problem. This recent module approach has a number of benefits:
</p>

<ul><li>
<p>Special devices and applications can "mix and match"
modules based on their requirements and restraints. For instance, a
simple refrigerator console probably doesn't need applet and
multimedia support (although, who knows?). With XHTML 1.1, you can
create a document that uses only the subset of XHTML that meets your
needs.
</p>
</li><li>
<p>It prevents spin-off, device-specific HTML versions. Authors can
create their own XML modules, leaving the XHTML standard unscathed.
</p>
</li><li>
<p>It allows "hybrid" documents in which several DTDs are
used in combination. For instance, it allows web documents to have
SVG (Scalable Vector Graphics) modules or MathML modules mixed in
with the XHTML content.
</p>
</li></ul>
<p>Modularization is the way of the future for markup standards. The
SMIL 2.0 specification is also broken into modules (see <a href="ch27_01.htm">Chapter 27, "Introduction to SMIL"</a>), which can then be used with other languages
like XHTML. You can read more about the<a name="INDEX-2994" /> XHTML 1.1 specification at <a href="../../../../../../www.w3.org/TR/xhtml11/">http://www.w3.org/TR/xhtml11/</a>.
</p>

</div>
</div>










<hr width="684" align="left" />
<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch30_06.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch31_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">30.6. 




Where to Learn More</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">31.2. Creating XHTML 1.0 Documents</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,0,77,93" shape="rect" /><area href="index.htm" coords="81,0,156,93" shape="rect" /><area href="../xhtml/index.htm" coords="161,0,261,102" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="339,1,433,109" shape="rect" /><area href="../action/index.htm" coords="438,2,540,109" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,694,104" shape="rect" /></map>

</body></html>