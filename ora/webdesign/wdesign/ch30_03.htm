<html><head><title>XML Document Syntax (Web Design in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="style/style1.css" />

<meta name="DC.Creator" content="Jennifer Niederst" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001967L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Web Design in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Web Design in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch30_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Web Design in a Nutshell, 2nd Edition</a></td><td align="right" valign="top" width="228"><a href="ch30_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">30.3. XML Document Syntax</h2>

<p>If yo<a name="INDEX-2956" />u are
familiar with HTML, a simple XML document shouldn't be too
difficult to understand.
</p>

<blockquote><pre class="code">&lt;?xml version "1.0" standalone="no"?&gt;
&lt;!DOCTYPE accounts SYSTEM "simple.dtd"&gt;
&lt;accounts&gt;
&lt;customer&gt;
	&lt;name&gt;Bobby Five&lt;/name&gt;
	&lt;accountNumber&gt;4456&lt;/accountNumber&gt;
	&lt;balance&gt;111.32&lt;/balance&gt;
&lt;/customer&gt;
&lt;/accounts&gt;</pre></blockquote>

<p>In the first line, the code between the <tt class="literal">&lt;?xml</tt>
and the <tt class="literal">?&gt;</tt> is called an <em class="firstterm">XML
declaration</em><a name="INDEX-2957" />.
This declaration contains special information for the XML processor
(the program reading the XML) indicating that this document conforms
to Version 1.0 of the XML standard. In addition, the
<tt class="literal">standalone=</tt><tt class="literal">"</tt><tt class="literal">no</tt><tt class="literal">"</tt>
attribute informs the program that an outside DTD is needed to
correctly interpret the document.
</p>

<p>The second line is the
<tt class="literal">DOCTYPE</tt><a name="INDEX-2958" />
declaration. It identifies the <em class="firstterm">root
element</em><a name="INDEX-2959" /> (<tt class="literal">accounts</tt> in our
example) and the DTD for the document. The root element is the
element in the document that contains all other elements. It must be
unique, which means it may be used only once in the document. All XML
documents <em class="emphasis">must</em> have a root element. The root
element in HTML and XHTML documents is <tt class="literal">html</tt>, since
the whole document is contained within
<tt class="literal">&lt;html&gt;</tt> tags.
</p>

<p>The last part of the declaration is a pointer to the DTD itself. The
<tt class="literal">SYSTEM</tt> identifier points to the DTD resource by
location (its URL). In our example, the DTD of the document resides
in a separate local file named <em class="filename">simple.dtd</em>. As an
alternative, some declarations use the <tt class="literal">PUBLIC</tt>
identifier to point to the DTD (or other resource) by a unique name.
The advantage to using <tt class="literal">PUBLIC</tt> is that it is still
valid if the location of the resource changes. Unfortunately, current
browsers do not handle <tt class="literal">PUBLIC</tt> identifiers well, so
it is always good at least to provide a URL as a backup.
</p>

<p>Together, the XML and <tt class="literal">DOCTYPE</tt> declarations are
often referred to as the <em class="firstterm">document prolog,</em>
which is optional in an XML document. The remainder of the example
document contains content tagged according to the elements and rules
of the specified DTD.
</p>

<a name="wdnut2-CHP-30-SECT-3.1" /><div class="sect2">
<h3 class="sect2">30.3.1. Well-Formed XML</h3>

<p>Browsers often recover from sloppily written or illegal HTML. This is
not the case with XML documents. Because XML languages vary, the
rules for coding the document need to be followed to the letter in
order to ensure proper interpretation by the XML client. When a
document follows the XML markup rules, it is said to be
<em class="firstterm">well-formed</em>.
</p>

<p>The primary rules for a well-formed XML document are:</p>

<ul><li>
<p>There may be no white space (character spaces or line returns) before
the XML declaration.
</p>
</li><li>
<p>All element attribute values must be in quotation marks (either
single or double quotes).
</p>
</li><li>
<p>Tags and attributes are case-sensitive; for example,
<tt class="literal">&lt;par&gt;</tt>, <tt class="literal">&lt;PAR&gt;</tt>, and
<tt class="literal">&lt;Par&gt;</tt> are considered to be three different
tags.
</p>
</li><li>
<p>An element must have both an opening and closing tag, unless it is an
empty element.
</p>
</li><li>
<p>If a tag is a standalone empty element, it must contain a closing
slash before the end of the tag (for example,
<tt class="literal">&lt;img/&gt;</tt>)
</p>
</li><li>
<p>All opening and closing tags must nest correctly and not overlap.</p>
</li><li>
<p>The document must have a single root element, a unique element that
encloses the entire document. The root element may be used only once
in the document.
</p>
</li><li>
<p>Isolated markup characters (e.g., <tt class="literal">&lt;</tt>,
<tt class="literal">&amp;</tt>, and <tt class="literal">&gt;</tt>) are not
allowed in text; use a the equivalent standard character entities
instead. <a href="ch30_03.htm">Table 30-1</a> lists the
predefined<a name="INDEX-2960" /> character
entities in XML.
</p>
</li></ul>
<a name="wdnut2-CHP-30-TABLE-1" /><h4 class="objtitle">Table 30-1. Predefined character entities in XML </h4><table cellpadding=3 border="1">




<tr>
<th>
<p>Entity</p>
</th>
<th>
<p>Char</p>
</th>
<th>
<p>Notes</p>
</th>
</tr>


<tr>
<td>
<p><tt class="literal">&amp;amp;</tt></p>
</td>
<td>
<p><tt class="literal">&amp;</tt><a name="INDEX-2961" /> <a name="INDEX-2962" />
</p>
</td>
<td>
<p>Must not be used inside processing instructions</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&amp;lt;</tt></p>
</td>
<td>
<p><tt class="literal">&lt;</tt><a name="INDEX-2963" />
</p>
</td>
<td>
<p>Use inside attribute values quoted with <tt class="literal">"</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&amp;gt;</tt></p>
</td>
<td>
<p><tt class="literal">&gt;</tt><a name="INDEX-2964" />
</p>
</td>
<td>
<p>Use after <tt class="literal">]]</tt> in normal text and inside processing
instructions
</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&amp;quot;</tt></p>
</td>
<td>
<p><a name="INDEX-2965" /><tt class="literal">"</tt>
</p>
</td>
<td>

</td>
</tr>
<tr>
<td>
<p><tt class="literal">&amp;apos;</tt></p>
</td>
<td>
<p><tt class="literal">'</tt><a name="INDEX-2966" />
</p>
</td>
<td>
<p>Use inside attribute values quoted with <tt class="literal">'</tt></p>
</td>
</tr>

</table>

<p>You can check whether the syntax of your XML document is correct
using a well-formedness checker (also called a nonvalidating parser).
Parsers are built into Netscape 6 and Internet Explorer 5.5. You may
also want to check out the list of nonvalidating parsers provided by
the Web Developer's Virtual Library at <a href="../../../../../../wdvl.com/Software/XML/parsers.html">http://wdvl.com/Software/XML/parsers.html</a>.
</p>

</div>
<a name="wdnut2-CHP-30-SECT-3.2" /><div class="sect2">
<h3 class="sect2">30.3.2. Namespaces</h3>

<p>With<a name="INDEX-2967" />
<a name="INDEX-2968" /> XML,
your document may use tags that come from different
"types" of XML documents. For example, you might have an
XHTML document that contains some math expressions written using the
MathML XML dialect. But in this case, how can you differentiate
between an <tt class="literal">&lt;a&gt;</tt> tag coming from XHTML (an
anchor) and an <tt class="literal">&lt;a&gt;</tt> tag that might come from
MathML (an absolute value)?
</p>

<p>The W3C anticipated such "collisions" and responded by
creating the <em class="firstterm">namespace</em> convention. A namespace
is a group of element and attribute names that is unique for each XML
dialect. Namespaces take names that look just like URLs (they are not
links to actual documents, however) to ensure uniqueness and provide
information about the organization that maintains the namespace. When
you reference elements and attributes in your document, the browser
looks them up in the namespace to find out how they should be used.
</p>

<p>Namespaces are declared in an XML document using the
<tt class="literal">xmlns</tt> attribute. You can establish the namespace
for a whole document or an individual element. Typically, the value
of the <tt class="literal">xmlns</tt> attribute is a reference to the
URL-like namespace. This example establishes the default namespace
for the document to be transitional XHTML:
</p>

<blockquote><pre class="code">&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;</pre></blockquote>

<p>If you need to include math markup, you can apply the
<tt class="literal">xmlns</tt> attribute within the specific tag, so the
browser knows to look up the element in the MathML DTD (not XHTML):
</p>

<blockquote><pre class="code">&lt;div xmlns="http://www.w3.org/1998/Math/MathML"&gt;46/100&lt;/div&gt;</pre></blockquote>

<p>If you plan to refer to a namespace repeatedly within a document, you
can declare the namespace and give it a label just once at the
beginning of the document. Then refer to it in each tag by placing
the label before the tag name, separated by a colon (:). For example:
</p>

<blockquote><pre class="code">&lt;html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:math="http://www.w3.org/1998/Math/MathML"&gt;</pre></blockquote>

<p>The full namespace can now be shortened to <tt class="literal">math</tt>
later in the<a name="INDEX-2969" /> document. The result is much tidier
code (and smaller file sizes!):
</p>

<blockquote><pre class="code">&lt;math:div&gt;46/100&lt;/math:div&gt;</pre></blockquote>

</div>


<hr width="684" align="left" />
<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch30_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch30_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">30.2. How It Works</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">30.4. Document Type Definition </td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,0,77,93" shape="rect" /><area href="index.htm" coords="81,0,156,93" shape="rect" /><area href="../xhtml/index.htm" coords="161,0,261,102" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="339,1,433,109" shape="rect" /><area href="../action/index.htm" coords="438,2,540,109" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,694,104" shape="rect" /></map>

</body></html>