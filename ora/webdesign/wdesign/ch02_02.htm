<html><head><title>Fixed Versus Flexible Web Page Design (Web Design in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="style/style1.css" />

<meta name="DC.Creator" content="Jennifer Niederst" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001967L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Web Design in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Web Design in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Web Design in a Nutshell, 2nd Edition</a></td><td align="right" valign="top" width="228"><a href="ch02_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">2.2. Fixed Versus Flexible Web Page Design</h2>

<p><a name="INDEX-82" /> <a name="INDEX-83" /> <a name="INDEX-84" /> <a name="INDEX-85" /> <a name="INDEX-86" /> <a name="INDEX-87" />Closely<a name="INDEX-88" /> related to the issue
of varying monitor resolutions is the question of whether web pages
should be designed to be flexible (resizing and adapting to various
window sizes) or fixed at a particular size (giving the designer more
control of the page's dimensions). There are very strong
opinions on both sides, and there are good reasons for and against
each approach, naturally.
</p>

<a name="wdnut2-CHP-2-FIG-1" /><div class="figure"><img alt="Figure 2-1" src="figs/WDN2_0201a.gif" /><img alt="Figure 2-1" src="figs/WDN2_0201b.gif" /></div><h4 class="objtitle">Figure 2-1. Browser and system measurements </h4>

<p>You may find that you choose a fixed structure for some sites and
allow others to be flexible, or you may have strong convictions that
one or the other approach is the only way to go. Either way, it is
useful to be familiar with the whole picture and the current opinions
of professional web designers. This section attempts to present a
balanced overview of the possibilities and the pitfalls.
</p>

<a name="wdnut2-CHP-2-SECT-2.1" /><div class="sect2">
<h3 class="sect2">2.2.1. Flexible Design</h3>

<p>Web pages are flexible by default. The text and elements in a
straightforward HTML file flow into the browser window, filling all
available space, regardless of the monitor size. When the browser
window is resized, the elements reflow to adapt to the new
dimensions. This is the inherent nature of the Web. Designers who are
initially traumatized by the unpredictability of where page elements
land usually just learn to let go of some control over the page.
</p>

<p>Many designers make a conscious decision to construct pages so they
can adapt to stretching and shrinking browser windows. This approach
comes with advantages and disadvantages.
</p>

<a name="wdnut2-CHP-2-SECT-2.1.1" /><div class="sect3">
<h3 class="sect3">2.2.1.1. Advantages</h3>

<p>The advantages of a flexible design include the following:</p>

<ul><li>
<p>The reality is that web pages <em class="emphasis">are</em> displayed on a
variety of monitor resolutions and conditions; keeping the page
flexible allows it to be "customized" for every display.
</p>
</li><li>
<p>Designing flexible pages is in keeping with the spirit and the nature
of the medium. A "good" web page design by these
standards is one that is functional to the greatest number of users.
</p>
</li><li>
<p>The whole window is filled, without the potentially awkward empty
space left over by many fixed-width designs.
</p>
</li><li>
<p>You don't need to worry about choosing a target monitor
resolution.
</p>
</li></ul>
</div>

<a name="wdnut2-CHP-2-SECT-2.1.2" /><div class="sect3">
<h3 class="sect3">2.2.1.2. Disadvantages</h3>

<p>Keep in mind, though, the following potential pitfalls of a flexible
design:
</p>

<ul><li>
<p>On large monitors, the
<a name="INDEX-89" /> <a name="INDEX-90" />text line length can get out
of hand when the text fills the width of the browser. Long lines of
text are particularly uncomfortable to read on a screen, so allowing
the text to stretch to the full width of the window or frame risks
poor reading conditions for some users.
</p>
</li><li>
<p>Elements float around on large monitors, making the design less
coherent and potentially more difficult to use. Likewise, on very
small monitors, elements can get cramped.
</p>
</li><li>
<p>The results of flexible design are unpredictable, and users will have
varying experiences of your page.
</p>
</li></ul>
</div>

<a name="wdnut2-CHP-2-SECT-2.1.3" /><div class="sect3">
<h3 class="sect3">2.2.1.3. Creating flexible pages</h3>

<p>As noted previously, simple HTML files are flexible by default, so
you don't need to do anything special to ensure flexibility.
However, you can format your page layout and content using relative
measurements so that elements resize in proportion to one another.
</p>

<p>Tables and frames can be used to give the page a flexible structure.
<a name="INDEX-91" />Tables are often used
to create columns of text and to divide the page into logical
sections. By using relative (percentage) measurements for tables and
cells, the table resizes with the browser window; however, the
columns and elements remain proportional to one another. For
instance, two columns with widths of 25% and 75% always retain those
proportions, regardless of the table size. Sizing tables is discussed
in <a href="ch13_01.htm">Chapter 13, "Tables"</a>.
</p>

<p><a name="INDEX-92" />Frames can also be
used to add structure to a flexible design. They, too, can be
specified with percentage values or to automatically fill any
remaining space in the window. For instance, two frames with widths
of 25% and 75% always retain those proportions, regardless of the
size of the window in which they are displayed. The contents within
each frame flow to fill the frame. Frames are discussed in <a href="ch14_01.htm">Chapter 14, "Frames"</a><em class="citetitle">.</em><a name="INDEX-93" /> <a name="INDEX-94" />
</p>

<p>The size of the content (text size, margins, images, etc.) can be set
to relative sizes using Cascading Style Sheets. For instance, style
sheets allow designers to specify measurements in
<em class="firstterm">ems</em><a name="INDEX-95" />, a unit used in printing to refer
to the width of one capital letter "M". On the Web, an em
translates to the font size; in other words, an em unit in 12-point
text will be 12 points square. Using em measurements for text height,
line length, leading, etc. ensures that page elements will scale
proportionally with the user's chosen text preference. See
<a href="ch17_01.htm">Chapter 17, "Cascading Style Sheets"</a> for more information on using style
sheets.
</p>

</div>
</div>
<a name="wdnut2-CHP-2-SECT-2.2" /><div class="sect2">
<h3 class="sect2">2.2.2. Fixed Design</h3>

<p>If you<a name="INDEX-96" /> want more control over the layout of a
page, you may opt to design a web page with a fixed width that stays
the same for all users, regardless of monitor resolution or browser
window size. This approach to web design is based on design
principles learned in print, such as constant grid, relationship of
page elements, and comfortable line lengths.
</p>

<a name="wdnut2-CHP-2-SECT-2.2.1" /><div class="sect3">
<h3 class="sect3">2.2.2.1. Advantages</h3>

<p>These are the advantages of fixed design:</p>

<ul><li>
<p>The basic layout of the page remains the same regardless of monitor
size. This may be a priority for companies interested in presenting a
consistent corporate image for every visitor.
</p>
</li><li>
<p>Fixed-width pages and columns provide better control over line
lengths. Tables can be used to prevent line lengths from becoming too
long when the page is viewed on a large monitor.
</p>
</li></ul>
</div>

<a name="wdnut2-CHP-2-SECT-2.2.2" /><div class="sect3">
<h3 class="sect3">2.2.2.2. Disadvantages</h3>

<p>Consider also these disadvantages:</p>

<ul><li>
<p>If the available browser window is smaller than the grid for the
page, parts of the page will not be visible and may require
horizontal scrolling to be viewed. Horizontal scrolling is nearly
universally considered to be a hindrance to ease of use, so it should
be avoided. (One solution is to choose a page size that serves the
most people, as discussed later in this section.)
</p>
</li><li>
<p>It is still difficult to control
<a name="INDEX-97" /> <a name="INDEX-98" />
<a name="INDEX-99" />
<a name="INDEX-100" />
<a name="INDEX-101" />
<a name="INDEX-102" />
<a name="INDEX-103" />type size in browsers (see
<a href="ch03_01.htm">Chapter 3, "Web Design Principles for Print Designers"</a> for more information), so elements may
shift unpredictably if the browser type is larger or smaller than the
type used in the design process.
</p>
</li><li>
<p>Trying to exert absolute control over the display of a web page is
bucking the medium. The Web is not like print; it has its own
peculiarities and strengths. Advocates of the flexible design
strategy will tell you that fixed web page designs are out of place
on the Web.
</p>
</li></ul>
</div>

<a name="wdnut2-CHP-2-SECT-2.2.3" /><div class="sect3">
<h3 class="sect3">2.2.2.3. Creating fixed pages</h3>

<p>Fixed web page designs are created by putting all the contents of the
page in a structural table with absolute measurements specified in
pixels. Other tricks, such as sized transparent graphics or
Netscape's proprietary
<tt class="literal">&lt;spacer&gt;</tt><a name="INDEX-104" /> tag, may also be used to maintain
consistent element placement or to hold specific amounts of white
space on the page. <a name="INDEX-105" />
<a name="INDEX-106" /> <a name="INDEX-107" />Cascading Style Sheets also provide ways
to set dimensions and placement of web page elements in specific
pixel increments.
</p>

<p>Some visual HTML authoring tools make it easy to create fixed-width
designs. Most notably,
<a name="INDEX-108" />
<a name="INDEX-109" />Adobe
GoLive (<a href="../../../../../../www.adobe.com/products/golive/main.html">http://www.adobe.com/products/golive/main.html</a>)
has an option for laying out your page on a grid as
though it were a page-layout program. GoLive then automatically
generates the corresponding (and often complicated) table.
</p>

</div>

<a name="wdnut2-CHP-2-SECT-2.2.4" /><div class="sect3">
<h3 class="sect3">2.2.2.4. Pop-up windows</h3>

<p><a name="INDEX-110" />Some web
sites take advantage of the ultimate in fixed web page design by
automatically popping up a new window sized precisely for displaying
the contents of the page. The advantage is that all viewers,
regardless of their monitor size, see the page in a browser window
with the proper dimensions (unless the window is set to a size larger
than the monitor resolution). It gives the designer even more control
over the presentation of the page.
</p>

<p>This trick is achieved using <a name="INDEX-111" />JavaScript to launch a window with
specific pixel dimensions, so the obvious disadvantage is that it
will not work for users without JavaScript-enabled browsers.
Furthermore, many users have a strong adverse reaction to having new
windows spontaneously opened for them. It takes control of the
presentation -- and the entire desktop -- away from the end
user, which is unacceptable to many web designers. It can also be
disorienting for users with disabilities. Many users have learned to
automatically close pop-up windows before the content even has time
to load in the window, rendering them ineffective. Finally, because
users may have different font settings, text might wrap or be cut off
in unpredictable ways. See <a href="ch28_01.htm">Chapter 28, "Introduction to JavaScript"</a> for a
window-opening code example.
</p>

</div>
</div>
<a name="wdnut2-CHP-2-SECT-2.3" /><div class="sect2">
<h3 class="sect2">2.2.3. Combination Pages</h3>

<p>Of course, web pages need not be all-fixed or all-flexible. It is
certainly possible to create pages that are a combination of the two.
</p>

<p>One common technique is to create a fixed page layout using a table,
but then to center the table on the page so it is more balanced when
displayed on large monitors (avoiding the "blank right
screen" effect). The drawback to this technique is that when a
table is centered, it can no longer be precisely placed over a
background image. Some sites use color in the background image to
reinforce the columns in a fixed page design, but unfortunately, the
background image remains in the same place even when the table is
allowed to recenter itself on the screen. (One possible solution is
to center the background image using Cascading Style Sheets, but that
trick is not universally supported.)
</p>

<p>Another approach is to use a table or frameset that consists of a
combination of absolute- and relative-sized column or frame
measurements. With this method, when the window is resized, one
column or frame remains the same width while the rest resize and
reflow to fill the new available space. These techniques are outlined
in <a href="ch13_01.htm">Chapter 13, "Tables"</a> and <a href="ch14_01.htm">Chapter 14, "Frames"</a>. 
</p>

</div>
<a name="wdnut2-CHP-2-SECT-2.4" /><div class="sect2">
<h3 class="sect2">2.2.4. Choosing a Page Size</h3>

<p><a name="INDEX-112" />
<a name="INDEX-113" />
<a name="INDEX-114" />Obviously,
if you decide to design a fixed web page, you need to make a decision
regarding which screen size you want it to fit. Common sense dictates
that the page should be accessible (and display properly) to the
greatest possible number of people. The idea is to find the most
common monitor resolution and design pages that safely fill its live
space.
</p>

<a name="wdnut2-CHP-2-SECT-2.4.1" /><div class="sect3">
<h3 class="sect3">2.2.4.1. 640  <img src="figs/U00D7.gif">    480 versus 800  &times;    600</h3>

<p>Although finding the most common monitor resolution sounds fairly
simple, there remains some controversy over which resolution is the
safest. Over the past few years, the number of users with 800 <img src="figs/U00D7.gif">
600 monitors or higher has grown substantially, leading many
designers to believe that it is perfectly safe to create web pages
that fill the 800 <img src="figs/U00D7.gif"> 600 monitor live space. Other designers
disagree, maintaining that 640 <img src="figs/U00D7.gif"> 480 monitor users should still
be taken into consideration.
</p>

</div>

<a name="wdnut2-CHP-2-SECT-2.4.2" /><div class="sect3">
<h3 class="sect3">2.2.4.2. The statistics</h3>

<p>According to TheCounter (<a href="../../../../../../www.thecounter.com/">http://www.thecounter.com</a>), the breakdown of
users browsing the Web with various monitor resolutions in April 2001
is as follows:
</p>

<a name="ch02-19-fm2xml" /><table cellpadding=3 border="1">



<tr>
<td>
<p>640  <img src="figs/U00D7.gif">  480</p>
</td>
<td>
<p>6%</p>
</td>
</tr>
<tr>
<td>
<p>800  <img src="figs/U00D7.gif">  600</p>
</td>
<td>
<p>51%</p>
</td>
</tr>
<tr>
<td>
<p>1024  <img src="figs/U00D7.gif">  768</p>
</td>
<td>
<p>35%</p>
</td>
</tr>
<tr>
<td>
<p>1152  <img src="figs/U00D7.gif">  864</p>
</td>
<td>
<p>1%</p>
</td>
</tr>
<tr>
<td>
<p>1280  <img src="figs/U00D7.gif">  1024</p>
</td>
<td>
<p>3%</p>
</td>
</tr>
<tr>
<td>
<p>1600  <img src="figs/U00D7.gif">  1200</p>
</td>
<td>
<p>0%</p>
</td>
</tr>
<tr>
<td>
<p>unknown</p>
</td>
<td>
<p>1%</p>
</td>
</tr>

</table>

<p>Of course, this is only an approximation based on traffic to a
limited set of web sites. The only worthwhile statistics are those
culled from your own server logs. You can install software to check
browser resolution yourself, or sign up for tracking services such as
TheCounter (free in exchange for ad placement) or for-pay services
such as SuperStats (<a href="../../../../../../www.superstats.com/">http://www.superstats.com</a>) or StatMarket
(<a href="../../../../../../www.statmarket.com/">http://www.statmarket.com</a>).
</p>

</div>

<a name="wdnut2-CHP-2-SECT-2.4.3" /><div class="sect3">
<h3 class="sect3">2.2.4.3. The conventional wisdom</h3>

<p>Because approximately 92% of users view web pages at resolutions of
800 <img src="figs/U00D7.gif"> 600 or higher, professional web designers tend to
consider 800 <img src="figs/U00D7.gif"> 600 to be the standard web page size, as of this
writing. More and more commercial web sites are being designed to
these specifications. (Very few designers create pages for 1024
<img src="figs/U00D7.gif"> 768 resolutions or higher.)
</p>

<p>However, the low-end 640 <img src="figs/U00D7.gif"> 480 monitor users are not being
written off entirely. Even the small percentage of users with 640
<img src="figs/U00D7.gif"> 480 monitors translates to millions of viewers.
</p>

<p>Again, knowledge of your audience can help you make your design
decision. For instance, if you are designing an online resource for
graphic designers, you can be certain they will be using 800 <img src="figs/U00D7.gif">
600 pixel monitors or higher. An 800-pixel page width is also fairly
safe for sites targeting other professional groups because office
hardware is more likely to be upgraded regularly. However, if you are
designing an educational site to be viewed in schools that may not
have the budget for state-of-the-art hardware, the
lowest-common-denominator 640 <img src="figs/U00D7.gif"> 480 is a safer bet. The same
goes for sites that are likely to be viewed in households, libraries,
or other institutions where older hardware setups are still in use.
</p>

<p>Remember that it is possible to use HTML and Cascading Style Sheets
to design flexible pages that will resize to fit any window size. You
don't need to choose one size or another.
</p>

<p>If you are designing a site especially for
<a name="INDEX-115" />WebTV (with its particularly small window
size) or some other display device, you should follow the appropriate
guidelines for those devices. And, as always, test your designs in as
many monitor configurations as you can get your hands on to see
how<a name="INDEX-116" /> your
page holds up under<a name="INDEX-117" /> diverse<a name="INDEX-118" /> <a name="INDEX-119" /> <a name="INDEX-120" /> <a name="INDEX-121" /> conditions.
</p>

</div>
</div>


<hr width="684" align="left" />
<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch02_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">2. Designing for a Variety of Displays</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">2.3. Designing "Above the Fold"</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,0,77,93" shape="rect" /><area href="index.htm" coords="81,0,156,93" shape="rect" /><area href="../xhtml/index.htm" coords="161,0,261,102" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="339,1,433,109" shape="rect" /><area href="../action/index.htm" coords="438,2,540,109" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,694,104" shape="rect" /></map>

</body></html>