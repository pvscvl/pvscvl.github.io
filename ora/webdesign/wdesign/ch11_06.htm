<html><head><title>Imagemaps (Web Design in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="style/style1.css" />

<meta name="DC.Creator" content="Jennifer Niederst" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001967L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Web Design in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Web Design in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Web Design in a Nutshell, 2nd Edition</a></td><td align="right" valign="top" width="228"><a href="ch11_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">11.6. Imagemaps</h2>

<p><a name="INDEX-965" /> <a name="INDEX-966" />
<a name="INDEX-967" /> <a name="INDEX-968" />Ordinarily,
placing an image within anchor tags makes the entire image a link to
a single document when the user clicks anywhere on the image. As an
alternative, you can create multiple links, or "hot
spots," within a single graphic. These graphics are called
<em class="firstterm">imagemaps</em>. The effect is created with HTML
tags and/or text files and scripts on the server; the image itself is
an ordinary graphic file that just serves as a backdrop for the pixel
coordinates.
</p>

<p>There are two types of imagemaps:
<em class="firstterm">client-side</em><a name="INDEX-969" /> and
<em class="firstterm">server-side</em>. For client-side imagemaps, the
coordinate and URL information necessary to create each link is
contained right in the HTML document. The process of putting the
pieces together happens in the browser on the user's machine
(thus, client-side). For <a name="INDEX-970" /> <a name="INDEX-971" />server-side imagemaps, as the name
suggests, the map information resides on the server and is processed
by the server or a separate CGI script.
</p>

<p>Client-side imagemaps are a slightly newer technology and are not
supported by first-version browsers (although nearly all current
browsers know what to do). For this reason, some web developers
create redundant imagemaps (both client- and server-side) so that if
the browser doesn't recognize the client-side map, the
server's imagemap processor can take over.
</p>

<a name="wdnut2-CHP-11-SECT-6.1" /><div class="sect2">
<h3 class="sect2">11.6.1. Creating Imagemaps</h3>

<p>The key to making imagemaps work is a map, based on the image, that
associates pixel coordinates with URLs. This map is handled
differently for client-side and server-side (as outlined in the
following sections), but the outcome is the same. When the user
clicks somewhere within the image, the browser passes the coordinates
of the mouse pointer to the map, which, in turn, generates the
appropriate link.
</p>

<a name="wdnut2-CHP-11-SECT-6.1.1" /><div class="sect3">
<h3 class="sect3">11.6.1.1. Available tools</h3>

<p>Although it is possible to put together imagemap information
manually, it is much easier to use a tool to do it. There are many
imagemap creation tools available as shareware for both Windows and
the Mac. Be sure to look for one that is capable of outputting both
client- and server-side map information, such as the following:
</p>

<dl>
<dt><b>Macintosh</b></dt>
<dd>
<p><a name="INDEX-972" />MapMaker
1.1.2 by Frederic <a name="INDEX-973" />Eriksson, available at <a href="../../../../../../allmacintosh.xs4all.nl/adnload/206185_84149.html">http://allmacintosh.xs4all.nl/adnload/206185_84149.html</a>.
</p>
</dd>

</dl>

<dl>
<dt><b>Windows</b></dt>
<dd>
<p><a name="INDEX-974" />
<a name="INDEX-975" />MapEdit, by
Tom Boutell, available at <a href="../../../../../../www.boutell.com/mapedit/">http://www.boutell.com/mapedit/</a>.MapEdit is
now also available for the Macintosh.
</p>
</dd>

</dl>

<p>The full-featured WYSIWYG web authoring tools (such as Macromedia
Dreamweaver and Adobe GoLive) have imagemap creation tools built in.
This is particularly handy for creating client-side imagemaps right
in the current document.
</p>

</div>

<a name="wdnut2-CHP-11-SECT-6.1.2" /><div class="sect3">
<h3 class="sect3">11.6.1.2. Creating the map</h3>

<p>Regardless of the tool you're using, and regardless of the type
of imagemap you're creating, the process for creating the map
information is basically the same. Read the documentation for your
imagemap tool to learn about features not listed here.
</p>

<ol><li>
<p>Open the image in an imagemap program.</p>
</li><li>
<p>Define areas within the image that will be clickable by using the
appropriate shape tools: rectangle, circle, or polygon (for tracing
irregular shapes).
</p>
</li><li>
<p>While the outline of the area is still highlighted, enter a URL for
that area in the text entry field provided, as shown in <a href="ch11_06.htm">Figure 11-1</a>. 
</p>
</li><li>
<p>Continue adding shapes and their respective URLs for each clickable
area in the image.
</p>
</li><li>
<p>For server-side imagemaps, you also need to define a default URL,
which is the page that displays if users click outside a defined
area. Many tools have a prominent field for entering the default URL,
but on others you may need to look for it under a pull-down menu.
</p>
</li><li>
<p>Select the type of imagemap (client- or server-side) you want to
create.
</p>
</li><li>
<p>Save or export the map information. Server-side imagemaps are saved
in a map definition file (<em class="filename">.map</em>) that resides on
the server. Client-side imagemaps are embedded directly in the HTML
file.
</p>
</li></ol>
<a name="wdnut2-CHP-11-FIG-1" /><div class="figure"><img height="261" alt="Figure 11-1" src="figs/WDN2_1101.gif" width="384" /></div><h4 class="objtitle">Figure 11-1. Creating map information (shown in MapMaker 1.1.2)</h4>
<p>If you do not have an imagemap tool, it is possible to write out the
map information by hand following the examples in this chapter.
Simply note the pixel coordinates of the shapes as indicated in an
image editing program (in Photoshop, they are provided in the Info
palette) and type them into the appropriate place in the map file.
</p>

</div>
</div>
<a name="wdnut2-CHP-11-SECT-6.2" /><div class="sect2">
<h3 class="sect2">11.6.2. Client-Side Imagemaps</h3>

<p><a name="INDEX-976" />Client-side imagemaps have three
components:
</p>

<ul><li>
<p>An ordinary graphic file (<em class="filename">.gif</em>,
<em class="filename">.jpeg</em>, or <em class="filename">.png</em>)
</p>
</li><li>
<p>A map delimited by <tt class="literal">&lt;map&gt;</tt><a name="INDEX-977" /> tags containing the coordinate and URL
information for each area
</p>
</li><li>
<p>The <tt class="literal">usemap</tt><a name="INDEX-978" /> attribute
within the image tag (<tt class="literal">&lt;img&gt;</tt>) that indicates
which map to reference
</p>
</li></ul>
<p>There are many advantages to using client-side imagemaps. They are
self-contained within the HTML document and do not rely on a server
to function. This means you can test the imagemap on your local
machine or make working site demos for distribution on disk. It also
cuts down on the load on your server and improves response times. In
addition, complete URL information displays in the status bar when
the user mouses over the hot spot (server-side imagemaps display only
coordinates).
</p>

<p>The only disadvantage to client-side imagemaps is that because it is
slightly newer technology, they are not universally supported.
Netscape Navigator 1.0 and Internet Explorer 2.0 do not support
client-side imagemaps. Experimental or obscure browser programs may
not either. Fortunately, these browsers make up a miniscule portion
of the current browser population.
</p>

<a name="wdnut2-CHP-11-SECT-6.2.1" /><div class="sect3">
<h3 class="sect3">11.6.2.1. Sample client-side imagemap</h3>

<p><a href="ch11_06.htm">Figure 11-2</a> shows a sample imagemapped graphic.
<a href="ch11_06.htm">Example 11-1</a> provides the HTML document that contains
the client-side imagemap.
</p>

<a name="wdnut2-CHP-11-FIG-2" /><div class="figure"><img height="164" alt="Figure 11-2" src="figs/WDN2_1102.gif" width="420" /></div><h4 class="objtitle">Figure 11-2. Imagemapped graphic</h4>
<a name="wdnut2-CHP-11-EX-1" /><div class="example">
<h4 class="objtitle">Example 11-1. HTML for client-side imagemap </h4>
<blockquote><pre class="code">&lt;HTML&gt;
&lt;HEAD&gt;&lt;TITLE&gt;Client-side Imagemap Sample&lt;/TITLE&gt;&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;MAP NAME="spacey"&gt; (A) 
&lt;AREA SHAPE="RECT" COORDS="203,23,285,106" (B)    
HREF="http://www.lunch.com/orbit/"&gt;
&lt;AREA SHAPE="CIRCLE" COORDS="372,64,40" HREF="mypage.html"&gt; (C)  
&lt;AREA SHAPE="POLY" (D)  
COORDS="99,47,105,41,94,39,98,34,110,35,115,28,120,35,133,38,133,
42,124,42,134,58,146,56,157,58,162,63,158,67,141,68,145,72,155,
73,158,75,159,80,148,83,141,83,113,103,87,83,72,83,64,80,64,76,
68,73,77,72,79,63,70,59,67,53,68,47,78,45,89,45,99,47" 
HREF="yourpage.html"&gt;
&lt;/MAP&gt;
&lt;IMG SRC="orbit.gif" WIDTH=500 HEIGHT=125 BORDER=0 USEMAP="#spacey"&gt; (E)  
&lt;/BODY&gt;
&lt;/HTML&gt;</pre></blockquote>
</div>

<dl>
<dt><b>(A)</b></dt>
<dd>
<p>This marks the beginning of the map. You must give the map a name.
Within the <tt class="literal">&lt;map&gt;</tt>, there are
<tt class="literal">&lt;area&gt;</tt> tags for each hotspot within the
image.
</p>
</dd>

</dl>

<dl>
<dt><b>(B)</b></dt>
<dd>
<p>Each area tag contains the shape identifier
(<tt class="literal">shape</tt>), pixel coordinates
(<tt class="literal">coords</tt>), and the URL for the link
(<tt class="literal">href</tt>). In this case, the shape is the rectangle
(<tt class="literal">rect</tt>) that corresponds to the black square in the
center of the image. The value of the coords attribute identifies the
top-left and bottom-right pixel positions of the rectangle
(<tt class="literal">ooords=</tt><tt class="literal">"</tt><tt class="literal">x1,y1,x2,y2</tt><tt class="literal">"</tt>).
Some browsers also support the nonstandard
<tt class="literal">rectangle</tt> as an equivalent to
<tt class="literal">rect</tt>, but this is not widely supported.
</p>
</dd>

</dl>

<dl>
<dt><b>(C)</b></dt>
<dd>
<p>This area corresponds to the circular area on the right of the image
in <a href="ch11_06.htm">Figure 11-2</a>. Its shape is
<tt class="literal">circle</tt>. For circles, the first two coordinates
identify the position of the center of the circle and the third value
is its radius in pixels
(<tt class="literal">coords=</tt><tt class="literal">"</tt><tt class="literal">x,y,r</tt><tt class="literal">"</tt>).
Some browsers also support the nonstandard <tt class="literal">circ</tt> as
an equivalent to <tt class="literal">circle</tt>.
</p>
</dd>

</dl>

<dl>
<dt><b>(D)</b></dt>
<dd>
<p>This is the area tag for the irregular (polygon) shape on the left of
the image in <a href="ch11_06.htm">Figure 11-2</a>. For polygons, the
coordinates are pairs of x,y coordinates for each point or vertex
along the path that surrounds the area
(<tt class="literal">coords=</tt><tt class="literal">"</tt><tt class="literal">x1,y1,x2,y2,x3,y3...</tt><tt class="literal">"</tt>).
At least three pairs are required to define a triangle; complex
polygons generate a long list of coordinates. Some browsers also
support the nonstandard <tt class="literal">polygon</tt> as an equivalent
to <tt class="literal">poly</tt>.
</p>
</dd>

</dl>

<dl>
<dt><b>(E)</b></dt>
<dd>
<p>The <tt class="literal">USEMAP</tt>
attribute<a name="INDEX-979" /> is required
within the image tag to indicate that this graphic is an imagemap
that uses the <tt class="literal">&lt;map&gt;</tt><a name="INDEX-980" /> named<a name="INDEX-981" /> "spacey".
</p>
</dd>

</dl>

</div>
</div>
<a name="wdnut2-CHP-11-SECT-6.3" /><div class="sect2">
<h3 class="sect2">11.6.3. Server-Side Imagemaps</h3>

<p><a name="INDEX-982" />
<a name="INDEX-983" />
<a name="INDEX-984" />Server-side<a name="INDEX-985" />
imagemaps work with all browsers, but they are a bit more involved to
create. In addition, they rely on the server, which makes them less
portable than their client-side counterparts and increases the load
on the server. For a number of reasons, server-side imagemaps are
going out of style and aren't used nearly as often as their
client-side counterparts.
</p>

<p>Server-side imagemaps have four elements:</p>

<ul><li>
<p>An ordinary graphic file (<em class="filename">.gif</em>,
<em class="filename">.jpeg</em>, or <em class="filename">.png</em>)
</p>
</li><li>
<p>HTML tags in the document: the <tt class="literal">ismap</tt> attribute
within the graphic's <tt class="literal">&lt;img&gt;</tt> tag and an
anchor tag that links the graphic to the <em class="filename">.map</em>
file on the server
</p>
</li><li>
<p>A <a name="INDEX-986" />map definition file
(<em class="filename">.map</em>) containing the pixel coordinate and URL
information for each clickable area; the <em class="filename">.map</em>
file resides on the server and the format is server-dependent
</p>
</li><li>
<p>A CGI script that runs on the server (or a built-in function of the
server software) that interprets the <em class="filename">.map</em> file
and sends the correct URL to the HTTP server
</p>
</li></ul>
<p>Because server-side imagemaps are so dependent on the configuration
of the server, you need to coordinate with your server administrator
if you plan to use them. You'll need to find out what type of
<em class="filename">.map</em> file to create ("NCSA" and
"CERN" are two possibilities, based on the type of
server) as well as the pathname to which the imagemapped graphic
should be linked (this usually includes a
<em class="emphasis">cgi-bin</em> directory).
</p>

<a name="wdnut2-CHP-11-SECT-6.3.1" /><div class="sect3">
<h3 class="sect3">11.6.3.1. Sample map definition file (.map) file</h3>

<p><a href="ch11_06.htm">Example 11-2</a> shows a server-side image map (called
<em class="emphasis">spacey.map</em>) for the imagemapped graphic shown in
<a href="ch11_06.htm">Figure 11-2</a>.
</p>

<a name="wdnut2-CHP-11-EX-2" /><div class="example">
<h4 class="objtitle">Example 11-2. Server-side imagemap </h4>
<blockquote><pre class="code">default index.html (A)  
rect http://www.lunch.com/orbit/ 203,23 285,106 (B) 
circle mypage.html 372,64 412,104
poly yourpage.html 99,47 105,41 94,39 98,34 110,35 115,28 120,35 133,38
133,42 124,42 134,58 146,56 157,58 162,63 158,67 141,68 145,72 155,73
158,75 159,80 148,83 141,83 113,103 87,83 72,83 64,80 64,76 68,73 77,72
79,63 70,59 67,53 68,47 78,45 89,45 99,47</pre></blockquote>
</div>

<dl>
<dt><b>(A)</b></dt>
<dd>
<p>This establishes the default URL, which is what the browser displays
if the user clicks outside one of the clickable areas. Set this to
the current document if you want to give the impression that the
click has no effect.
</p>
</dd>

</dl>

<dl>
<dt><b>(B)</b></dt>
<dd>
<p>Each hot area in the image is defined by a shape name
(<tt class="literal">rect</tt>, <tt class="literal">circle</tt>,
<tt class="literal">poly</tt>), a URL, and a set of pixel coordinates. The
syntax for the coordinates varies by shape and is generally the same
as explained for client-side imagemaps above. The syntax for some
shapes may vary from server to server. In this
<em class="filename">.map</em> file, the coordinates are defined for use
by an Apache server. Note that the coordinates defining the circle
are different than in the client-side example. Apache's syntax
for defining a circle is "<tt class="literal">x1,y1
x2,y2</tt>," which corresponds to the x,y coordinates of
the circle's center point followed by the x,y coordinates for a
point on the circle. Server-side imagemaps do not recognize the
nonstandard shape values <tt class="literal">rectangle</tt>,
<tt class="literal">circ</tt>, and <tt class="literal">polygon</tt>.
</p>
</dd>

</dl>

</div>

<a name="wdnut2-CHP-11-SECT-6.3.2" /><div class="sect3">
<h3 class="sect3">11.6.3.2. The HTML document</h3>

<p>Within the HTML file, the image is treated as shown here:</p>

<blockquote><pre class="code">&lt;HTML&gt;
&lt;HEAD&gt;&lt;TITLE&gt;Server-side Sample&lt;/TITLE&gt;&lt;/HEAD&gt;
&lt;BODY&gt;   
<tt class="userinput"><b>&lt;A HREF="/cgi-bin/imagemap/spacey.map"&gt;</b></tt>
&lt;IMG SRC="orbit.gif" BORDER=0 <tt class="userinput"><b>ISMAP</b></tt>&gt;<tt class="userinput"><b>&lt;/A&gt;</b></tt>
&lt;/BODY&gt;
&lt;/HTML&gt;</pre></blockquote>

<p>The anchor tag links the whole graphic to the map definition file
(<em class="emphasis">spacey.map</em>), which is located within the
<em class="filename">cgi-bin</em> directory on the server. This is a
typical configuration; however, you should follow your server
administrator's instructions.
</p>

<p>The <tt class="literal">ismap</tt> attribute within the image tag tells the
browser that the graphic is an imagemap.
</p>

</div>
</div>
<a name="wdnut2-CHP-11-SECT-6.4" /><div class="sect2">
<h3 class="sect2">11.6.4. When Not to Use Imagemaps</h3>

<p>Imagemaps are not always the best solution and are actually waning
somewhat in popularity as web design evolves. Slicing up a large
image, each slice of which can be linked to a different document, and
holding the pieces together with a table often offers functionality
that an imagemap can't match. This technique is so popular that
it is built into web graphics tools such as Macromedia Fireworks and
Adobe Photoshop 6 and ImageReady. There is also a demonstration in
<a href="ch13_01.htm">Chapter 13, "Tables"</a>.
</p>

<a name="wdnut2-CHP-11-SECT-6.4.1" /><div class="sect3">
<h3 class="sect3">11.6.4.1. Providing complete alternative text</h3>

<p><a name="INDEX-987" />
<a name="INDEX-988" /> <a name="INDEX-989" />
<a name="INDEX-990" /> <a name="INDEX-991" />
<a name="INDEX-992" />When
a user cannot view images (or has chosen to turn them off), the
browser displays the text specified by the <tt class="literal">alt</tt>
attribute within the <tt class="literal">&lt;img&gt;</tt> tag.
Unfortunately, for each imagemap graphic you get only one alternative
text message, which may not be useful for users with non-graphical
browsers (although Lynx can construct a list of links based on the
<tt class="literal">href</tt> values from each <tt class="literal">area</tt>).
</p>

<p>One common solution to this problem is to provide a redundant set of
links in HTML text somewhere else on the page so that users who
cannot view graphics can still navigate the site.
</p>

<p>If the image is divided into pieces rather than using an imagemap,
you can provide alternative text for each linked piece, which
alleviates the need to add the extra line of linked text to your HTML
page.
</p>

</div>

<a name="wdnut2-CHP-11-SECT-6.4.2" /><div class="sect3">
<h3 class="sect3">11.6.4.2. Rollover buttons</h3>

<p><a name="INDEX-993" /> <a name="INDEX-994" />
<a name="INDEX-995" /> <a name="INDEX-996" />
<a name="INDEX-997" />
<a name="INDEX-998" />
<a name="INDEX-999" />Rollover buttons (graphics that
change when the user rolls the mouse over them) are popular effects
that use the power of JavaScript. Although it is possible to have an
entire imagemap graphic change based on mouse-over cues, it is more
efficient to break the image into pieces and swap out only the small
portion that needs to change with the mouseover. You decrease the
download time by preloading only the necessary small graphics. See
<a href="ch28_01.htm">Chapter 28, "Introduction to JavaScript"</a> for sample JavaScript code for creating
rollover effects.<a name="INDEX-1000" /> <a name="INDEX-1001" /> <a name="INDEX-1002" /> <a name="INDEX-1003" />
</p>

</div>
</div>


<hr width="684" align="left" />
<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch11_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">11.5. Targeting Windows</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">11.7. Non-Web Links and Protocols</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,0,77,93" shape="rect" /><area href="index.htm" coords="81,0,156,93" shape="rect" /><area href="../xhtml/index.htm" coords="161,0,261,102" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="339,1,433,109" shape="rect" /><area href="../action/index.htm" coords="438,2,540,109" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,694,104" shape="rect" /></map>

</body></html>