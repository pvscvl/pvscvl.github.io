<html><head><title>Well-Formed XHTML (Web Design in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="style/style1.css" />

<meta name="DC.Creator" content="Jennifer Niederst" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001967L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Web Design in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Web Design in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch31_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Web Design in a Nutshell, 2nd Edition</a></td><td align="right" valign="top" width="228"><a href="ch31_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">31.4. Well-Formed XHTML</h2>

<p>Web browsers are forgiving of sloppy HTML, but XHTML (being an XML
application) requires fastidious attention to every detail. These
requirements were outlined briefly in the XML chapter (<a href="ch30_01.htm">Chapter 30, "Introduction to XML"</a>), but we'll go over them in this section
as they relate specifically to XHTML.
</p>

<a name="wdnut2-CHP-31-SECT-4.1" /><div class="sect2">
<h3 class="sect2">31.4.1. All-Lowercase Element Names</h3>

<p>In XML, all tags and attributes are
<a name="INDEX-2998" />case-sensitive, which means that
<tt class="literal">&lt;img&gt;</tt>, <tt class="literal">&lt;Img&gt;</tt>, and
<tt class="literal">&lt;IMG&gt;</tt> are parsed as different elements. In
the reformulation of HTML into XHTML, all elements were interpreted
to be lowercase. When writing XHTML documents (and their associated
style sheets), be sure that all tags and attributes are written in
lowercase.
</p>

<p>If you want to convert the upper- and mixed-case tags in an existing
HTML file to well-formed, all-lowercase tags, try the Tidy utility
(mentioned previously) or Barebones Software BBEdit (Macintosh only),
which can automate the process.
</p>

</div>
<a name="wdnut2-CHP-31-SECT-4.2" /><div class="sect2">
<h3 class="sect2">31.4.2. Quoted Attribute Values</h3>

<p>XHTML <a name="INDEX-2999" />requires that all attribute values be
contained in double quotation marks. So where previously it was okay
to omit the quotes around single words and numeric values, now you
need to be careful that every value is quoted.
</p>

</div>
<a name="wdnut2-CHP-31-SECT-4.3" /><div class="sect2">
<h3 class="sect2">31.4.3. End Tags</h3>

<p>In HTML, it is okay to omit the end tags for many block elements
(such as <tt class="literal">&lt;p&gt;</tt> and
<tt class="literal">&lt;li&gt;</tt>) because the browser is smart enough to
close a block element when the next one begins. Not so in XHTML. In
order to be well-formed, every container element must have its end
tag, or it registers as an error and renders the document
noncompliant.
</p>

</div>
<a name="wdnut2-CHP-31-SECT-4.4" /><div class="sect2">
<h3 class="sect2">31.4.4. Empty Elements</h3>

<p>This<a name="INDEX-3000" /> <a name="INDEX-3001" /> need for closure extends to empty
(standalone) elements as well. So instead of just inserting a line
break as <tt class="literal">&lt;br&gt;</tt>, XHTML requires the closing
tag as well (<tt class="literal">&lt;br&gt;...&lt;/br&gt;</tt>).
Fortunately, you can "close" empty elements simply by
adding a slash before the closing bracket, indicating its ending. So
in XHTML, a line break can be entered as
<tt class="literal">&lt;br/&gt;</tt>.
</p>

<p>The notion of closing empty elements can cause some browsers to
complain, so to keep your XHTML code safe for current browsers, be
sure to add a space before the closing slash
(<tt class="literal">&lt;br</tt> <tt class="literal">/&gt;</tt>). This allows the
closed empty tag to slide right through.
</p>

<p>Of course, line break tags aren't the only empty element. <a href="ch31_04.htm">Table 31-1</a> shows all the HTML tags in their acceptable
XHTML (transitional DTD) forms.
</p>

<a name="wdnut2-CHP-31-TABLE-1" /><h4 class="objtitle">Table 31-1. Empty tags in XHTML format </h4><table cellpadding=3 border="1">




<tr>
<td>
<p><tt class="literal">&lt;area /&gt;</tt></p>
</td>
<td>
<p><tt class="literal">&lt;frame /&gt;</tt></p>
</td>
<td>
<p><tt class="literal">&lt;isindex /&gt;</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&lt;base /&gt;</tt></p>
</td>
<td>
<p><tt class="literal">&lt;hr /&gt;</tt></p>
</td>
<td>
<p><tt class="literal">&lt;link /&gt;</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&lt;basefont /&gt;</tt></p>
</td>
<td>
<p><tt class="literal">&lt;img /&gt;</tt></p>
</td>
<td>
<p><tt class="literal">&lt;meta /&gt;</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&lt;br /&gt;</tt></p>
</td>
<td>
<p><tt class="literal">&lt;input /&gt;</tt></p>
</td>
<td>
<p><tt class="literal">&lt;param /&gt;</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&lt;col /&gt;</tt></p>
</td>
<td>

</td>
<td>

</td>
</tr>

</table>

</div>
<a name="wdnut2-CHP-31-SECT-4.5" /><div class="sect2">
<h3 class="sect2">31.4.5. Explicit Attribute Values</h3>

<p>In XHTML, every attribute must have an explicit value. There are many
attributes in regular HTML that are standalone instructions that take
no value, such as <tt class="literal">noshade</tt> and
<tt class="literal">ismap</tt>. In XHTML, attributes without values must
now use their own names. Therefore, <tt class="literal">noshade</tt>
becomes
<tt class="literal">noshade=</tt><tt class="literal">"</tt><tt class="literal">noshade</tt><tt class="literal">"</tt>
and <tt class="literal">ismap</tt> is now
<tt class="literal">ismap=</tt><tt class="literal">"</tt><tt class="literal">ismap</tt><tt class="literal">"</tt>.
<a href="ch31_04.htm">Table 31-2</a> lists the attributes which have been
given new values in XHTML.
</p>

<a name="wdnut2-CHP-31-TABLE-2" /><h4 class="objtitle">Table 31-2. Explicit attribute values </h4><table cellpadding=3 border="1">




<tr>
<td>
<p>checked="checked"</p>
</td>
<td>
<p>disabled="disabled"</p>
</td>
<td>
<p>noresize="noresize"</p>
</td>
</tr>
<tr>
<td>
<p>compact="compact"</p>
</td>
<td>
<p>ismap="ismap"</p>
</td>
<td>
<p>nowrap="nowrap"</p>
</td>
</tr>
<tr>
<td>
<p>declare="declare"</p>
</td>
<td>
<p>multiple="multiple"</p>
</td>
<td>
<p>readonly="readonly"</p>
</td>
</tr>
<tr>
<td>
<p>defer="defer"</p>
</td>
<td>
<p>noshade="noshade"</p>
</td>
<td>
<p>selected="selected"</p>
</td>
</tr>

</table>

</div>
<a name="wdnut2-CHP-31-SECT-4.6" /><div class="sect2">
<h3 class="sect2">31.4.6. Nesting Requirements</h3>

<p>It has always been a rule in HTML that tags should be properly nested
within one another. The closing tag of a contained element should
always appear before the closing tag of the element that contains it.
In XHTML, this rule is strictly enforced. So be sure that your
elements are nested correctly, like this:
</p>

<blockquote><pre class="code">&lt;b&gt;I can &lt;i&gt;fly!&lt;/i&gt;&lt;/b&gt;</pre></blockquote>

<p>and not overlapping like this:</p>

<blockquote><pre class="code">&lt;b&gt;I can &lt;i&gt;fly!&lt;/b&gt;&lt;/i&gt;</pre></blockquote>

<p>In addition, XHTML enforces other nesting restrictions that have
always been a part of the HTML specification. While XML provides no
specific way to indicate which elements may <em class="emphasis">not</em>
be contained by a given element (this SGML function was dropped in
order to make XML more manageable), the XHTML DTD includes a special
"Content models for exclusions" note that reinforces the
following:
</p>

<ul><li>
<p>The <tt class="literal">&lt;a&gt;</tt> tag cannot contain another
<tt class="literal">&lt;a&gt;</tt> tag.
</p>
</li><li>
<p>The <tt class="literal">&lt;pre&gt;</tt> tag cannot contain
<tt class="literal">&lt;img&gt;</tt>, <tt class="literal">&lt;object&gt;</tt>,
<tt class="literal">&lt;applet&gt;</tt>, <tt class="literal">&lt;big&gt;</tt>,
<tt class="literal">&lt;small&gt;</tt>, <tt class="literal">&lt;sub&gt;</tt>,
<tt class="literal">&lt;sup&gt;</tt>, <tt class="literal">&lt;font&gt;</tt>, or
<tt class="literal">&lt;basefont&gt;</tt>.
</p>
</li><li>
<p>The <tt class="literal">&lt;form&gt;</tt> element may not contain other
<tt class="literal">&lt;form&gt;</tt> tags.
</p>
</li><li>
<p>The <tt class="literal">&lt;button&gt;</tt> tag cannot contain
<tt class="literal">&lt;a&gt;</tt>, <tt class="literal">&lt;form&gt;</tt>,
<tt class="literal">&lt;input&gt;</tt>, <tt class="literal">&lt;select&gt;</tt>,
<tt class="literal">&lt;textarea&gt;</tt>,
<tt class="literal">&lt;label&gt;</tt>, <tt class="literal">&lt;button&gt;</tt>,
<tt class="literal">&lt;iframe&gt;</tt>, or
<tt class="literal">&lt;isindex&gt;</tt>.
</p>
</li><li>
<p>The <tt class="literal">&lt;label&gt;</tt> tag cannot contain other
<tt class="literal">&lt;label&gt;</tt> tags.
</p>
</li></ul>
</div>
<a name="wdnut2-CHP-31-SECT-4.7" /><div class="sect2">
<h3 class="sect2">31.4.7. Character Entities</h3>

<p><a name="INDEX-3002" /> <a name="INDEX-3003" />XHTML (as a function of XML) is
extremely fussy about special characters such as
<tt class="literal">&lt;</tt>, <tt class="literal">&gt;</tt>,
<tt class="literal">&amp;</tt>, etc. All special characters should be
represented in the XHTML document by their character entities
instead. Common character entities are listed in <a href="ch10_08.htm">Table 10-3</a>, and the complete list appears in <a href="appf_01.htm">Appendix F, "Character Entities"</a>.
</p>

<p>Character entity references should be used in place of characters
such as <tt class="literal">&lt;</tt> and <tt class="literal">&amp;</tt> in
regular text content, as shown in these exmples.
</p>

<blockquote><pre class="code">&lt;p&gt; the value of A &amp;lt; B &lt;/p&gt;
&lt;p&gt; Laverne &amp;amp; Shirley &lt;/p&gt;</pre></blockquote>

<p>Places where it was common to use special characters, such as in the
title of a document or in an attribute value, it is necessary to use
the character entity instead. For instance, the following worked just
fine in HTML:
</p>

<blockquote><pre class="code">&lt;img src="puppets.jpg" alt="Crocco &amp; Lynch"/&gt;</pre></blockquote>

<p>But in XHTML, the value must be written like this:</p>

<blockquote><pre class="code">&lt;img src="puppets.jpg" alt="Crocco &amp;amp; Lynch"/&gt;</pre></blockquote>

</div>
<a name="wdnut2-CHP-31-SECT-4.8" /><div class="sect2">
<h3 class="sect2">31.4.8. Protecting Scripts</h3>

<p>It is common practice to enclose scripts and stylesheets in comments
(between <tt class="literal">&lt;! -- </tt> and
<tt class="literal"> -- &gt;</tt>). Unfortunately, XML software thinks
of comments as unimportant information and may simply remove the
comments from a document before processing it. To avoid this problem,
use an XML CDATA section instead. Content enclosed in
<tt class="literal">&lt;![CDATA[...]]&gt;</tt> is considered simple text
characters and is not parsed as potential document elements. For
example:
</p>

<blockquote><pre class="code">&lt;script language="JavaScript"&gt;
&lt;![CDATA[
...JavaScript here...
]]&gt;
&lt;/script&gt;</pre></blockquote>

<p>The problem with this method is backwards compatibility. HTML
browsers ignore the contents of the XML CDATA tag, while XML browsers
ignore the contents of comment-enclosed scripts and style sheets. So
you can't please everyone! One workaround is to put your
scripts and styles in separate files and reference them in the
document with appropriate external links.
</p>

</div>
<a name="wdnut2-CHP-31-SECT-4.9" /><div class="sect2">
<h3 class="sect2">31.4.9. id and name Attributes</h3>

<p>And finally, while the
<tt class="literal">name</tt><a name="INDEX-3004" /> <a name="INDEX-3005" />
<a name="INDEX-3006" /> attribute is used in HTML to identify
elements such as document fragments, frames, and images so they can
be referenced elsewhere in the document, XHTML prefers the equivalent
(and standards-compliant) <tt class="literal">id</tt> attribute. The
<tt class="literal">name</tt> attribute has been deprecated in the HTML 4.0
specification for the elements that once used it. Now that most
browsers are HTML 4.0-compliant, you can begin making the transition
by using <tt class="literal">id</tt> where you might have used
<tt class="literal">name</tt> (or use them both at the same time with the
same value).
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch31_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch31_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">31.3. XHTML Document Declarations</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">31.5. Try It Out</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,0,77,93" shape="rect" /><area href="index.htm" coords="81,0,156,93" shape="rect" /><area href="../xhtml/index.htm" coords="161,0,261,102" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="339,1,433,109" shape="rect" /><area href="../action/index.htm" coords="438,2,540,109" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,694,104" shape="rect" /></map>

</body></html>