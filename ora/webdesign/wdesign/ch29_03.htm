<html><head><title>The Document Object Model (Web Design in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="style/style1.css" />

<meta name="DC.Creator" content="Jennifer Niederst" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001967L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Web Design in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Web Design in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch29_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Web Design in a Nutshell, 2nd Edition</a></td><td align="right" valign="top" width="228"><a href="ch29_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">29.3. The Document Object Model</h2>

<p>The <a name="INDEX-2908" /> <a name="INDEX-2909" />Document<a name="INDEX-2910" /> Object Model exposes every element of an
HTML page to a scripting language, such as JavaScript. Early
iterations of the DOM, now called DOM Level 0 and retained for
backwards compatibility, gave scripts access to only some objects on
a page, including forms, frames, and images. DOM Level 1 and DOM
Level 2, however, allow you to access and change almost any part of
an HTML (or XHTML) document, so you can modify, add, or remove
attributes or even entire elements. (For more information on the DOM
specifications, see <a href="../../../../../../www.w3.org/DOM/">http://www.w3.org/DOM/</a>.)
</p>

<p>In JavaScript parlance, each element of the page is an
<em class="emphasis">object</em>. The DOM begins with a base object called
the document object, which refers to the HTML page itself and
everything in it. All the elements contained within the HTML page,
such as headings, paragraphs, images, forms, and links, are
represented by separate objects. These objects branch off from the
document object, like branches from a tree trunk, to form a hierarchy
of elements.
</p>

<p>To do something such as changing the appearance of a particular
element in an HTML document, you first have to reference the object
that corresponds to that element. Let's start with a simple
example, where we want to reference a particular image in an HTML
document. Using JavaScript, the general form of the reference is:
</p>

<blockquote><pre class="code">document.images["image_name"]</pre></blockquote>

<p>Say we have HTML code that looks like this:</p>

<blockquote><pre class="code">&lt;IMG SRC="start.gif" NAME="start"&gt;</pre></blockquote>

<p>To refer to this image, we can use the following JavaScript:</p>

<blockquote><pre class="code">document.images["start"]</pre></blockquote>

<p>Images, along with some other common elements, such as forms and
links, get special treatment in the DOM, so they can be referenced
using this simple syntax. For regular HTML elements, like headings
and paragraphs, the technique is a bit different. Consider the
following HTML document:
</p>

<blockquote><pre class="code">&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Sample Document&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;An HTML Document&lt;/h1&gt;
&lt;p id="simple"&gt;This is a simple paragraph.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></blockquote>

<p>To refer to the paragraph element in this document, we can use the
following JavaScript:
</p>

<blockquote><pre class="code">document.getElementById("simple")</pre></blockquote>

<p><tt class="literal">getElementById(
)</tt><a name="INDEX-2911" /> is a
<em class="emphasis">method</em><a name="INDEX-2912" />, or built-in function, of the document
object. It returns the HTML element with the specified
<tt class="literal">id</tt> attribute in the document, which in this case
is the paragraph we are interested in. The document object also has a
number of other methods for accessing HTML elements, such as
<tt class="literal">getElementsByTagName(
)</tt><a name="INDEX-2913" /> <a name="INDEX-2914" /> and
<tt class="literal">getElementsByName( )</tt>.
</p>

<p>Just referencing an object isn't particularly interesting,
however. What we really want to be able to do is manipulate the
object, say by changing its appearance or location. One way to
manipulate an object is to change its
<em class="emphasis">properties</em><a name="INDEX-2915" />, which describe different
characteristics of the object. In most cases, these properties
actually correspond to attributes of the HTML element represented by
the object. For example, an image object has a <tt class="literal">src</tt>
property that corresponds to the <tt class="literal">src</tt> attribute of
the <tt class="literal">&lt;img&gt;</tt> tag. We used this property to
implement image rollovers in <a href="ch28_01.htm">Chapter 28, "Introduction to JavaScript"</a>.
</p>

<p><a href="ch29_03.htm">Table 29-1</a> lists the DOM
<a name="INDEX-2916" />objects for
some common HTML elements, along with some of their properties.
</p>

<a name="wdnut2-CHP-29-TABLE-1" /><h4 class="objtitle">Table 29-1. DOM objects and their properties </h4><table cellpadding=3 border="1">




<tr>
<th>
<p>Object</p>
</th>
<th>
<p>HTML element</p>
</th>
<th>
<p>Properties</p>
</th>
</tr>


<tr>
<td>
<a name="INDEX-2917" /><blockquote><pre class="code">document.body</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">body</pre></blockquote>
</td>
<td>
<p><tt class="literal">alink</tt>, <tt class="literal">attributes</tt>,
<tt class="literal">background</tt>, <tt class="literal">bgcolor</tt>,
<tt class="literal">style</tt>, <tt class="literal">text</tt>,
<tt class="literal">title</tt>, <tt class="literal">vlink</tt>
</p>
</td>
</tr>
<tr>
<td>
<a name="INDEX-2918" /><blockquote><pre class="code">document.links[]</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">a</pre></blockquote>
</td>
<td>
<p><tt class="literal">attributes</tt>, <tt class="literal">className</tt>,
<tt class="literal">href</tt>, <tt class="literal">id</tt>,
<tt class="literal">name</tt>, <tt class="literal">style</tt>,
<tt class="literal">tagName</tt>, <tt class="literal">title</tt>
</p>
</td>
</tr>
<tr>
<td>
<a name="INDEX-2919" /><blockquote><pre class="code">document.forms[]</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">form</pre></blockquote>
</td>
<td>
<p><tt class="literal">action</tt>, <tt class="literal">attributes</tt>,
<tt class="literal">elements</tt>, <tt class="literal">id</tt>,
<tt class="literal">style</tt>, <tt class="literal">tagName</tt>,
<tt class="literal">target</tt>, <tt class="literal">title</tt>
</p>
</td>
</tr>
<tr>
<td>
<a name="INDEX-2920" /><blockquote><pre class="code">document.images[]</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">img</pre></blockquote>
</td>
<td>
<p><tt class="literal">align</tt>, <tt class="literal">alt</tt>,
<tt class="literal">attributes</tt>, <tt class="literal">border</tt>,
<tt class="literal">height</tt>, <tt class="literal">hspace</tt>,
<tt class="literal">id</tt>, <tt class="literal">isMap</tt>,
<tt class="literal">name</tt>, <tt class="literal">src</tt>,
<tt class="literal">style</tt>, <tt class="literal">tagName</tt>,
<tt class="literal">title</tt>, <tt class="literal">useMap</tt>,
<tt class="literal">vspace</tt>, <tt class="literal">width</tt>
</p>
</td>
</tr>

</table>

<p>With DHTML, the <tt class="literal">style</tt> property is by far the most
important property. It lets you access all of the CSS properties that
apply to a particular element, so you can use it to change things
like the color, font family, and font size of an element. For
example, here's how we can change the color of our simple
paragraph<a name="INDEX-2921" /> to<a name="INDEX-2922" /> green:
</p>

<blockquote><pre class="code">document.getElementById("simple").style.color = "00FF00";</pre></blockquote>



<hr width="684" align="left" />
<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch29_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch29_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">29.2. How DHTML Works</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">29.4. Creating Layers</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,0,77,93" shape="rect" /><area href="index.htm" coords="81,0,156,93" shape="rect" /><area href="../xhtml/index.htm" coords="161,0,261,102" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="339,1,433,109" shape="rect" /><area href="../action/index.htm" coords="438,2,540,109" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,694,104" shape="rect" /></map>

</body></html>