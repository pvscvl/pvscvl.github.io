<html><head><title>Introduction to WML (Web Design in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="style/style1.css" />

<meta name="DC.Creator" content="Jennifer Niederst" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001967L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Web Design in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Web Design in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch32_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Web Design in a Nutshell, 2nd Edition</a></td><td align="right" valign="top" width="228"><a href="ch32_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">32.3. Introduction to WML</h2>

<p>At last we arrive at the nitty-gritty of wireless
applications -- <a name="INDEX-3034" />WML. This section should give you a
flavor of how WML works, but it falls far short of a complete
education. For more information, refer to one of the complete
resources listed at the end of this chapter. The complete set of WML
elements and attributes is summarized in the following section.
</p>

<a name="wdnut2-CHP-32-SECT-3.1" /><div class="sect2">
<h3 class="sect2">32.3.1. Document Structure</h3>

<p>Because of the unique viewing environment on handheld devices, the
whole notion of the "page" and page-based design as they
are thought of in HTML is abandoned. WML applications use a
"card" metaphor instead. An application is made up of one
or more <em class="firstterm">decks</em><a name="INDEX-3035" />
(<em class="filename">.wml</em> documents), each containing some number of
<em class="firstterm">cards</em><a name="INDEX-3036" /> (WML elements defined within a
document). A card contains a limited amount of information, equal to
just a few screenfuls where a screen holds only three to six lines of
text.
</p>

<p>Because WML is an application of XML (see <a href="ch30_01.htm">Chapter 30, "Introduction to XML"</a>), WML documents need to be both
<em class="firstterm">valid</em> (using WML elements properly according
to the DTD) and <em class="firstterm">well-formed</em> (abiding by the
stringent rules of XML markup syntax).
</p>

<p>The following is a very simple WML document called
<em class="filename">jenskitchen.wml</em>. It is a "deck"
containing two "cards."
</p>

<blockquote><pre class="code">&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE wml PUBLIC "-//WAPFORUM//DTD WML 1.2//EN"
                     "http://www.wapforum.org/DTD/wml_1.2.xml"&gt;
&lt;wml&gt;
   &lt;card id="intro"&gt;
      &lt;p&gt;Welcome to Jen's Cookbook Nook&lt;/p&gt;
   &lt;/card&gt;

   &lt;card id="book1"&gt;
      &lt;p&gt;101 Things to Do with Wild Mushrooms&lt;/p&gt;
      &lt;p&gt;Jennifer Niederst&lt;/p&gt;
      &lt;p&gt;Price: $19.95&lt;/p&gt;
   &lt;/card&gt;
&lt;/wml&gt;</pre></blockquote>

<p>Looking at this example piece by piece, we see that it begins with
the standard <tt class="literal">XML</tt> and <tt class="literal">DOCTYPE</tt>
declarations (for more information on XML document prologs, see <a href="ch30_01.htm">Chapter 30, "Introduction to XML"</a>). The <tt class="literal">&lt;wml&gt;</tt> element
defines a WML deck; every WML document opens and closes with
<tt class="literal">&lt;wml&gt;</tt> tags, and there can be only one set
per document.
</p>

<p>Decks may contain one or many cards. Our sample deck contains two
cards, defined by the aptly named <tt class="literal">&lt;card&gt;</tt>
element. Cards can contain a variety of elements, but their contents
must always be placed within paragraph (<tt class="literal">&lt;p&gt;</tt>)
tags. Because WML is an XML application, each paragraph element must
have a closing <tt class="literal">&lt;/p&gt;</tt> tag (this is different
from HTML, in which the paragraph element can be left unclosed). Note
that each card is given a name using the <tt class="literal">id</tt>
attribute so it can be referred to later.
</p>

</div>
<a name="wdnut2-CHP-32-SECT-3.2" /><div class="sect2">
<h3 class="sect2">32.3.2. Formatting Text</h3>

<p>According to the <a name="INDEX-3037" />WML specification, all
<a name="INDEX-3038" />text (in fact, all content elements) must
be contained in paragraphs (<tt class="literal">&lt;p&gt; </tt>tags). The
<tt class="literal">&lt;p&gt;</tt> element has two attributes:
<tt class="literal">align</tt> and
<tt class="literal">mode</tt><a name="INDEX-3039" />.
<tt class="literal">align</tt><a name="INDEX-3040" /> works just like text alignment in HTML.
The mode attribute can be set to <tt class="literal">wrap</tt> or
<tt class="literal">nowrap</tt>. Text wraps by default, but you can set it
to <tt class="literal">nowrap</tt> to keep a paragraph on one line. Be
warned, however, that while some devices can scroll to the right,
others can't, so text set to <tt class="literal">nowrap</tt> may be
inaccessible to some users. Both alignment and the mode settings may
be ignored by some browsers, so be sure your information still works
without them.
</p>

<p>Line breaks are added within text using the
<tt class="literal">&lt;br/&gt;</tt> tag. Because WML follows XML syntax,
it is necessary to include the slash at the end of the tag to make it
a self-closing element.
</p>

<p>The specification also includes elements for adding inline styles to
text, including:
</p>

<a name="ch32-18-fm2xml" /><table cellpadding=3 border="1">



<tr>
<td>
<p><tt class="literal">&lt;b&gt;</tt></p>
</td>
<td>
<p>Bold</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&lt;big&gt;</tt></p>
</td>
<td>
<p>Slightly bigger than surrounding text</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&lt;em&gt;</tt></p>
</td>
<td>
<p>Emphasized (bold or italic)</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&lt;i&gt;</tt></p>
</td>
<td>
<p>Italic</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&lt;small&gt;</tt></p>
</td>
<td>
<p>Slightly smaller than surrounding text</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&lt;strong&gt;</tt></p>
</td>
<td>
<p>Strong text (bold, italic, or bold italic)</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&lt;u&gt;</tt></p>
</td>
<td>
<p>Underlined</p>
</td>
</tr>

</table>

<p>Unfortunately, there is no guarantee that a device will display text
in the tagged style. Some devices ignore style information entirely,
so it is best not to rely on styles for meaning.
</p>

</div>
<a name="wdnut2-CHP-32-SECT-3.3" /><div class="sect2">
<h3 class="sect2">32.3.3. Adding Links</h3>

<p>Just
as<a name="INDEX-3041" />
<a name="INDEX-3042" /> on the
Web, linking from one page to another is an integral part of using
WAP applications. WML uses the familiar anchor
(<tt class="literal">&lt;a&gt;</tt><a name="INDEX-3043" />) element for creating simple links. In
the following example, I've created a link from one card to
another by calling the card by name in the anchor tag. This is
similar to creating a link to a named anchor in HTML. When a user
selects the linked text, the second card loads in the browser window.
</p>

<blockquote><pre class="code">&lt;wml&gt;
   &lt;card id="intro"&gt;
      &lt;p&gt;Welcome to Jen's Cookbook Nook&lt;br/&gt;
<b class="emphasis-bold">      &lt;a href="#book1"&gt;Check out our featured book!&lt;/a&gt;</b>
      &lt;/p&gt;
   &lt;/card&gt;

   &lt;card <b class="emphasis-bold">id="book1"</b>&gt;
      &lt;p&gt;101 Things to Do with Wild Mushrooms&lt;/p&gt;
      &lt;p&gt;Jennifer Niederst&lt;/p&gt;
      &lt;p&gt;Price: $19.95&lt;/p&gt;
   &lt;/card&gt;
&lt;/wml&gt;</pre></blockquote>

<p>The <tt class="literal">&lt;a&gt;</tt> element only allows you to link to
other specific cards or decks. The WML specification provides a more
versatile tool for navigating between cards: the
<tt class="literal">&lt;anchor&gt;</tt><a name="INDEX-3044" /> element. The anchor element
can be used to link to a specific card or a card for which you may
not know the location ahead of time, such as the previous card or a
card chosen based on user input (via a set variable). The
<tt class="literal">&lt;anchor&gt;</tt> tag acts as a container for two
other WML elements, <tt class="literal">&lt;go&gt;</tt> and
<tt class="literal">&lt;prev&gt;</tt>, which give it its functionality.
</p>

<p>The following example uses the <tt class="literal">&lt;anchor&gt;</tt> tag
with the <tt class="literal">&lt;go&gt;</tt> element to create a simple
link (it functions exactly the same as the link in the previous
example).
</p>

<blockquote><pre class="code">&lt;anchor&gt;
   Check out our featured book!
   &lt;go href="#book1" /&gt;
&lt;/anchor&gt;</pre></blockquote>

<p>The <tt class="literal">&lt;anchor&gt;</tt> element can also be used to
create a custom "Back" button by using the
<tt class="literal">&lt;prev&gt;</tt> element as shown in this example.
</p>

<blockquote><pre class="code">&lt;anchor&gt;
   Go back!
   &lt;prev/&gt;
&lt;/anchor&gt;</pre></blockquote>

</div>
<a name="wdnut2-CHP-32-SECT-3.4" /><div class="sect2">
<h3 class="sect2">32.3.4. Images</h3>

<p>Although<a name="INDEX-3045" />
WAP<tt class="sgmltag-element">&lt;&gt;</tt><a name="INDEX-3046" />
applications are primarily text, it is possible to add simple images
to a card (see <a href="ch32_03.htm">Figure 32-3</a>). In order for an image
to be displayed in a WAP application, it must be in the specially
optimized Wireless Bitmap (WBMP) format. WBMP files are 1-bit
graphics capable of displaying only black and white pixels. It is
recommended that you keep any graphic image as small as possible. No
graphic should exceed 150 pixels square. Be aware that some
microbrowsers do not support graphics at all, so always provide
alternative text.
</p>

<a name="wdnut2-CHP-32-FIG-3" /><div class="figure"><img height="114" alt="Figure 32-3" src="figs/WDN2_3203.gif" width="145" /></div><h4 class="objtitle">Figure 32-3. Examples of WMBP graphics in a WAP application</h4>

<p>Images are added to the document with the
<tt class="literal">&lt;img/&gt;</tt> element. Make sure that it is placed
within <tt class="literal">&lt;p&gt;</tt> tags, as shown in this example:
</p>

<blockquote><pre class="code">&lt;card&gt;
&lt;p&gt;<b class="emphasis-bold">&lt;img src="logo.wbmp" alt="Cookbook Logo"&gt;</b>&lt;/p&gt;
&lt;/card&gt;</pre></blockquote>

<p>Some mobile devices have stored in their memory a library of small
images that can be placed in the WML document using the
<tt class="literal">localsrc</tt> attribute in the image tag. The advantage
of local images is that they reduce the amount of data that needs to
be transferred from the server, so they display more quickly than
external WBMP files. It is a good idea also to provide a pointer to
an external graphic in case local images are not supported. The
following example requests a generic credit card icon from the local
image library and specifies an alternative .<em class="filename">wbmp</em>
file. The <tt class="literal">alt</tt> text will display on devices that do
not support graphics at all.
</p>

<blockquote><pre class="code">&lt;img <b class="emphasis-bold">localsrc="creditcard"</b> src="card.wbmp" alt="credit card symbol"&gt;</pre></blockquote>

<p>A complete list of library images and their names is available at
<a href="../../../../../../developer.phone.com/htmldoc/41/wmlref/taglist.html#575099">http://developer.phone.com/htmldoc/41/wmlref/taglist.html#575099</a>.
</p>

<a name="wdnut2-CHP-32-SIDEBAR-3" /><blockquote><table cellpadding=3 border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">Creating WBMP Graphics</h4>

<p>There are few tools available that can create
<a name="INDEX-3047" />
<a name="INDEX-3048" />WBMP files at this time.
However, you can download the free UnWired plug-in from RCP
Distributed Systems that enables you to create WBMP files in Adobe
Photoshop 5 and higher and JASC Paint Shop Pro (or any graphics
package that supports plug-ins). It is available at <a href="../../../../../../www.rcp.co.uk/distributed/downloads/">http://www.rcp.co.uk/distributed/downloads/</a>.
</p>

<p>There is also a Java utility called <em class="filename">pic_2_wbmp</em>
that converts existing BMP files to WBMP format. It is available at
<a href="../../../../../../www.gingco.de/wap/">http://www.gingco.de/wap/</a>.
</p>
</td></tr></table></blockquote>

</div>
<a name="wdnut2-CHP-32-SECT-3.5" /><div class="sect2">
<h3 class="sect2">32.3.5. Tables</h3>

<p>WML uses the same basic elements as HTML for creating
<a name="INDEX-3049" />
<a name="INDEX-3050" />tables.
The table itself is defined with <tt class="literal">&lt;table&gt;</tt>
tags. A table contains some number of rows
(<tt class="literal">&lt;tr&gt;</tt>), and each row contains some number of
table data cells (<tt class="literal">&lt;td&gt;</tt>) that contain the
content. Unlike HTML tables, you can explicitly define the number of
columns in a WML table using the <tt class="literal">columns</tt> attribute
in the <tt class="literal">&lt;table&gt;</tt> tag. Text alignment is set
for each column at the table level (see the tag summary later in this
chapter for alignment syntax).
</p>

<p>The following sample code creates a table with three columns; the
content in the first column is aligned left, and the content in the
remaining two columns is aligned right. The result is shown in <a href="ch32_03.htm">Figure 32-4</a>. 
</p>

<blockquote><pre class="code">&lt;table columns="3" align="LRR"&gt;
&lt;tr&gt;
   &lt;td&gt;Month&lt;/td&gt;
   &lt;td&gt;Min&lt;/td&gt;
   &lt;td&gt;Max&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
   &lt;td&gt;Feb&lt;/td&gt;
   &lt;td&gt;4&lt;/td&gt;
   &lt;td&gt;41&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
   &lt;td&gt;Mar&lt;/td&gt;
   &lt;td&gt;25&lt;/td&gt;
   &lt;td&gt;62&lt;/td&gt;
&lt;tr&gt;
&lt;/table&gt;</pre></blockquote>

<a name="wdnut2-CHP-32-FIG-4" /><div class="figure"><img height="107" alt="Figure 32-4" src="figs/WDN2_3204.gif" width="128" /></div><h4 class="objtitle">Figure 32-4. WML table in emulator</h4>

<p>Tables should be used with caution in WML applications. It is easy
for tables to grow too wide to display on the screen, so that users
without the ability to scroll horizontally miss information. Some
devices may ignore tables altogether, just displaying the cell
contents in a list, in the order they appear in the source document.
If you do choose to use tables, keep the number of columns and cell
content to a minimum, make sure the information makes sense as it
appears in the file, and be sure to test the table thoroughly on a
number of devices.
</p>

</div>
<a name="wdnut2-CHP-32-SECT-3.6" /><div class="sect2">
<h3 class="sect2">32.3.6. Programming Softkeys</h3>

<p>Mobil<a name="INDEX-3051" />e
phones and other handheld devices usually feature softkeys, buttons
that can be programmed to function however you like (see <a href="ch32_03.htm">Figure 32-5</a>). Most often, softkeys are physical buttons on
the device, but they may also be rendered graphically in the display
area. Because softkey implementation varies considerably from device
to device, count on users having varied experiences of your
application.
</p>

<a name="wdnut2-CHP-32-FIG-5" /><div class="figure"><img height="246" alt="Figure 32-5" src="figs/WDN2_3205.gif" width="355" /></div><h4 class="objtitle">Figure 32-5. Softkey examples on the Openwave Simulator</h4>

<p>Softkeys are good for functions and links that don't
necessarily have a place in the text flow, such as a Back button or a
link to a menu of options that serve the whole application. Actions
are assigned to softkeys via the
<tt class="literal">&lt;do&gt;</tt><a name="INDEX-3052" /> element. This element has one required
attribute, <tt class="literal">type</tt>, that specifies the sort of action
being defined. There are seven values for the <tt class="literal">type</tt>
attribute:
</p>

<a name="ch32-24-fm2xml" /><table cellpadding=3 border="1">



<tr>
<td>
<p><tt class="literal">accept</tt><a name="INDEX-3053" />
</p>
</td>
<td>
<p>Okay or confirm information</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">prev</tt><a name="INDEX-3054" />
</p>
</td>
<td>
<p>Go to the previously viewed card (like a Back button)</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">help</tt><a name="INDEX-3055" />
</p>
</td>
<td>
<p>Request help</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">reset</tt><a name="INDEX-3056" />
</p>
</td>
<td>
<p>Clear the state (variables) for the card or deck</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">options</tt><a name="INDEX-3057" />
</p>
</td>
<td>
<p>Select from a list of choices</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">delete</tt><a name="INDEX-3058" />
</p>
</td>
<td>
<p>Delete an item</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">unknown</tt><a name="INDEX-3059" /> or <tt class="literal">""</tt><tt class="literal">
</tt> <em class="emphasis">(empty)</em>
</p>
</td>
<td>
<p>A generic action</p>
</td>
</tr>

</table>

<p>The <tt class="literal">&lt;do&gt;</tt> element uses the
<tt class="literal">label</tt> attribute to specify the text that is
assigned to the button. It is recommended that label values be
limited to approximately six characters or fewer for best
cross-device performance.
</p>

<p>Softkey programming is a rich topic that is beyond the scope of this
brief WML overview, so we will look only at some simple examples. The
first example uses the <tt class="literal">&lt;do&gt;</tt> element to
create a softkey "Back" button. How the task is assigned
to a button is left up to the individual device, so it is for the
most part out of the designer's control. Note that because
tasks are not part of the content flow, they do not need to be put
within paragraph tags.
</p>
<blockquote><pre class="code">
&lt;do type="prev" label="Back"&gt;
   &lt;prev/&gt;
&lt;/do&gt;</pre></blockquote>

<p>Another common action assigned to softkeys is a link to another
document or card, as shown in this example.
</p>

<blockquote><pre class="code">&lt;do type="accept" label="List"&gt;
   &lt;go href="list.wml"/&gt;
&lt;/do&gt;</pre></blockquote>

<p>To add multiple tasks to a card, use the <tt class="literal">options</tt>
task type. Options may appear on the browser as a pop-up menu of
choices or as a link to a separate page with a list of links. The way
it is implemented is up to the user's device. This example adds
three functions to the page: a link to a search page, a link to a
list, and a Back button.
</p>

<blockquote><pre class="code">&lt;do type="options" label="Search"&gt;
   &lt;go href="search.wml"/&gt;
&lt;/do&gt;
&lt;do type="options" label="List"&gt;
   &lt;go href="list.wml"/&gt;
&lt;/do&gt;
&lt;do type="options" label="Back"&gt;
   &lt;prev/&gt;
&lt;/do&gt;</pre></blockquote>

</div>
<a name="wdnut2-CHP-32-SECT-3.7" /><div class="sect2">
<h3 class="sect2">32.3.7. Interactivity</h3>

<p>An<a name="INDEX-3060" />
application is nothing without interactivity. The WML specification
provides several elements for the collection of user input and
dynamic content generation based on that input. Like HTML, WML
contains basic form elements: <tt class="literal">&lt;input&gt;</tt> for
placing a text input field in the application,
<tt class="literal">&lt;select&gt;</tt> for defining a list of
<tt class="literal">&lt;option&gt;</tt>s, and
<tt class="literal">&lt;fieldset&gt;</tt> for grouping form content into
logical sections.
</p>

<p>The <tt class="literal">&lt;setvar&gt;</tt><a name="INDEX-3061" /> element is used
to set a <em class="firstterm">variable</em>, a mechanism for temporarily
storing a bit of information such as user input, a URL, or any text
information. In this example, variables containing information about
the book (an abbreviation of the title and its price) are set when
the user clicks on the "Purchase this book" link. This
information is stored and used later in the application, perhaps in a
list of selected items.
</p>

<blockquote><pre class="code">&lt;card id="book1" title="101 Mushrooms"&gt;
&lt;p&gt;&lt;b&gt;101 Things to Do with Wild Mushrooms&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Written by Jennifer Niederst&lt;br/&gt;
   Price: $19.95&lt;br/&gt;
   This book will save your dinner parties.
   &lt;anchor&gt;
      Purchase this book!
      &lt;go href="purchase.wml"&gt;
         <b class="emphasis-bold">&lt;setvar name="B" value="101Mushrooms"/&gt;</b>
<b class="emphasis-bold">         &lt;setvar name="P" value="19.95"/&gt;</b>
      &lt;/go&gt;
   &lt;/anchor&gt;
&lt;/p&gt;
&lt;/card&gt;</pre></blockquote>

<p>WMLScript is the client-side scripting language that gives WML
applications true functionality. WMLScript is beyond the scope of
this chapter, but if you are serious about building mobile
applications, it is recommended that you add WMLScript to your
repertoire. Unfortunately, it is only supported in the latest
WAP-enabled browsers (Version 4 and higher), but it will be an
important tool in WAP development in the coming years. Resources for
WMLScript are listed at the end of the chapter.
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch32_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch32_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">32.2. Creating WAP Applications</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">32.4. WML Elements and Attributes</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,0,77,93" shape="rect" /><area href="index.htm" coords="81,0,156,93" shape="rect" /><area href="../xhtml/index.htm" coords="161,0,261,102" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="339,1,433,109" shape="rect" /><area href="../action/index.htm" coords="438,2,540,109" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,694,104" shape="rect" /></map>

</body></html>