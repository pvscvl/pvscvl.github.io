<html><head><title>Sample Scripts (Web Design in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="style/style1.css" />

<meta name="DC.Creator" content="Jennifer Niederst" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596001967L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Web Design in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Web Design in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch28_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Web Design in a Nutshell, 2nd Edition</a></td><td align="right" valign="top" width="228"><a href="ch28_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">28.3. Sample Scripts</h2>

<p>How about some useful scripts to get you started? This section offers
several scripts you can copy into your web pages.
</p>

<a name="wdnut2-CHP-28-SECT-3.1" /><div class="sect2">
<h3 class="sect2">28.3.1. Status Line Messages</h3>

<p>Probably the simplest <a name="INDEX-2888" />JavaScript you can add to your site is a
message that appears in the status bar (the bar at the bottom that
shows URLs or says "Document: Done"). You can use this
bar to display a message or extra information when the user places
the mouse over a link. To do this, simply add a little JavaScript to
a standard anchor tag. You don't even need to write a function
or use the <tt class="literal">&lt;script&gt;</tt> tag. Browsers that
aren't JavaScript-compatible simply ignore the code.
Here's how you do it:
</p>

<blockquote><pre class="code">&lt;A HREF="mozart.com" onMouseOver="window.status='A study of 
Mozart's operas'; return true;"&gt;Mozart&lt;/A&gt;</pre></blockquote>

<p>This code displays the text "A study of Mozart's
operas" when the user puts the cursor over the Mozart link.
This is accomplished using the <tt class="literal">onMouseOver</tt> event
handler. When the user puts the cursor over the Mozart link, the
<tt class="literal">window.status</tt> variable, which controls the
contents of the status bar, is set to the string specified in single
quotes. The <tt class="literal">return</tt> <tt class="literal">true;</tt> bit is
just some magic required to keep the browser from doing its normal
job of writing the URL in the status bar. Without it, the user would
never see your status bar message, as it would immediately be
overwritten by the URL. To use this code on your site, just replace
the text between the single quotes (and the URL and content, of
course).
</p>

</div>
<a name="wdnut2-CHP-28-SECT-3.2" /><div class="sect2">
<h3 class="sect2">28.3.2. Opening a New Window</h3>

<p>We <a name="INDEX-2889" />already looked at the code for opening a
new window earlier in this chapter, so we'll just take a quick
look here at the code that needs to be replaced to use this script on
your site. The code again:
</p>

<blockquote><pre class="code">&lt;HTML&gt; 
&lt;HEAD&gt; 
&lt;SCRIPT LANGUAGE="JavaScript"&gt; 
&lt;!--
function openWin(URL) { 
    aWindow=window.open(URL,<tt class="userinput"><b>"composerwindow","toolbar=no,width=350,</b></tt>
<tt class="userinput"><b>height=400,status=no,scrollbars=yes,resize=no,menubar=no");</b></tt> 
} 
//--&gt; 
&lt;/SCRIPT&gt; 
&lt;/HEAD&gt; 
&lt;BODY&gt; 
&lt;P&gt;&lt;A HREF="javascript:openWin(<tt class="userinput"><b>'mozart.html'</b></tt>);"&gt;<tt class="userinput"><b>Mozart</b></tt>&lt;/A&gt;&lt;/P&gt; 
&lt;P&gt;&lt;A HREF="javascript:openWin(<tt class="userinput"><b>'wagner.html'</b></tt>);"&gt;<tt class="userinput"><b>Wagner</b></tt>&lt;/A&gt;&lt;/P&gt; 
&lt;P&gt;&lt;A HREF="javascript:openWin(<tt class="userinput"><b>'beethoven.html'</b></tt>);"&gt;<tt class="userinput"><b>Beethoven</b></tt>&lt;/A&gt; 
&lt;/P&gt; 
&lt;/BODY&gt; 
&lt;/HTML&gt;</pre></blockquote>

<p>The code in bold indicates the parts you should alter for your site.
Give the new window a name, if you wish, by replacing the text
<tt class="literal">composerwindow</tt>. Specify the settings for the
window by changing the values of <tt class="literal">toolbar</tt>,
<tt class="literal">status</tt>, <tt class="literal">scrollbars</tt>,
<tt class="literal">resize</tt>, and <tt class="literal">menubar</tt> from
<tt class="literal">no</tt> to <tt class="literal">yes</tt> (or vice versa). Set
the <tt class="literal">width</tt> and <tt class="literal">height</tt>
appropriately. Remember not to put any spaces or carriage returns in
this code.
</p>

<p>Note that you can hardwire the function by replacing the text
<tt class="literal">URL</tt> in the <tt class="literal">openWin( )</tt> function
with a specific URL, such as
<tt class="literal">"mozart.html"</tt><em class="filename">. </em>If you do
this, you simply call the function without passing the URL to the
function, as follows:
</p>

<blockquote><pre class="code">&lt;A HREF="javascript:openWin(  );"&gt;Mozart&lt;/A&gt;&lt;/P&gt;    </pre></blockquote>

<p>Of course, if you are familiar with HTML, you know that you can
display a link in a separate window with the
<tt class="literal">target</tt> attribute of the
<tt class="literal">&lt;a&gt;</tt> tag. The advantage of using JavaScript
instead is that you have control over the characteristics of the new
window, like its dimensions.
</p>

</div>
<a name="wdnut2-CHP-28-SECT-3.3" /><div class="sect2">
<h3 class="sect2">28.3.3. Managing Frames</h3>

<p><a name="INDEX-2890" />Another
popular<a name="INDEX-2891" /> job for JavaScript is loading content
into frames, particularly loading several different frames with one
click. Here is the code for a function that changes the contents of
both a toolbar frame and a main frame with a single click. This code
assumes that the toolbar frame has been named
<tt class="literal">toolbar</tt> and the main frame has been named
<tt class="literal">main</tt>:
</p>

<blockquote><pre class="code">function changePages (toolbarURL, mainURL) { 
    parent.toolbar.location.href=toolbarURL; 
    parent.main.location.href=mainURL; 
}</pre></blockquote>

<p>The actual anchor tag looks like this:</p>

<blockquote><pre class="code">&lt;A HREF="javascript:changePages('toolbar_document2.html', 'main_
document2.html');"&gt;Change Pages&lt;/A&gt;</pre></blockquote>

<p>If you use the frame names <tt class="literal">toolbar</tt> and
<tt class="literal">main</tt>, you can use this code as is; just change the
URLs you pass to the <tt class="literal">changePages( )</tt> function. If
you change the frame names, for example, to <tt class="literal">left</tt>
and <tt class="literal">right</tt>, you need to change the function as
follows:
</p>

<blockquote><pre class="code">function changePages (<tt class="userinput"><b>leftURL</b></tt>, <tt class="userinput"><b>rightURL</b></tt>) {      
    parent.<tt class="userinput"><b>left</b></tt>.location.href=<tt class="userinput"><b>leftURL</b></tt>;    
    parent.<tt class="userinput"><b>right</b></tt>.location.href=<tt class="userinput"><b>rightURL</b></tt>; 
}</pre></blockquote>

</div>
<a name="wdnut2-CHP-28-SECT-3.4" /><div class="sect2">
<h3 class="sect2">28.3.4. Image Rollovers </h3>

<p>While browsing the Web, you've probably encountered <a name="INDEX-2892" /> <a name="INDEX-2893" />images that change when you pass your
mouse pointer over them. This effect, commonly called a
"rollover," is created using JavaScript code that swaps
out one graphic for another when the <tt class="literal">onMouseOver</tt>
event handler is called for the image. Rollovers are popular because
they provide a strong visual cue that the graphic is clickable, plus
they're just fun!
</p>

<p>To begin, you need to make two versions of each rollover graphic: one
in an "on" state and one in an "off" state.
Buttons in the "on" state typically feature brighter
colors, a glow, or some other visual indication of being active. You
can also swap in a completely different image if that suits your
purpose. The only requirement is that the graphics have exactly the
same pixel dimensions, or one will be resized and distorted.
</p>

<p>In this section, we'll look at two rollover methods. The first
is a simple rollover in which passing the mouse over the graphic
changes that graphic. The second example uses a single
<tt class="literal">onMouseOver</tt> event handler to swap out two images
at the same time.
</p>

<a name="wdnut2-CHP-28-SECT-3.4.1" /><div class="sect3">
<h3 class="sect3">28.3.4.1. Simple rollovers</h3>

<p><a href="ch28_03.htm">Example 28-1</a> creates a simple image swap when the
cursor is over each image. We'll begin by listing the script in
its entirety; then we'll take a look at the individual
components.
</p>

<a name="wdnut2-CHP-28-EX-1" /><div class="example">
<h4 class="objtitle">Example 28-1. Simple JavaScript rollover code  </h4>
<blockquote><pre class="code">&lt;HTML&gt;
&lt;HEAD&gt;&lt;TITLE&gt;Two Rollover Images&lt;/TITLE&gt;
&lt;SCRIPT LANGUAGE = "JavaScript"&gt;
&lt;!--
if (document.images) {   (<b>A</b>)

    // "On" images   (<b>B</b>)
    img1on = new Image(  );
    img1on.src = "<tt class="userinput"><b>image1on.gif</b></tt>";  
    img2on = new Image(  ); 
    img2on.src = "<tt class="userinput"><b>image2on.gif</b></tt>";  

    // "Off" images   (<b>C</b>)
    img1off = new Image(  );
    img1off.src = "<tt class="userinput"><b>image1off.gif</b></tt>"; 
    img2off = new Image(  );
    img2off.src = "<tt class="userinput"><b>image2off.gif</b></tt>";  
}

function imgOn(imgName) {   (<b>D</b>)
    if (document.images) {
        document.images[imgName].src = eval(imgName + "on.src");
    }
}

function imgOff(imgName) {   (<b>E</b>)
    if (document.images) {
        document.images[imgName].src = eval(imgName + "off.src");
    }
}

//--&gt;
&lt;/SCRIPT&gt;
&lt;/HEAD&gt;

&lt;BODY&gt;
&lt;A HREF="<tt class="userinput"><b>page1.html</b></tt>"   (<b>F</b>)
   onMouseOver="imgOn('img1')"   (<b>G</b>)   
   onMouseOut="imgOff('img1')"&gt;   (<b>H</b>)
&lt;IMG NAME="img1" BORDER=0 HEIGHT=20 WIDTH=125 SRC="<tt class="userinput"><b>image1off.gif</b></tt>"&gt;&lt;/A&gt;

&lt;A HREF="<tt class="userinput"><b>page2.html</b></tt>" 
   onMouseOver="imgOn('img2')"    
   onMouseOut="imgOff('img2')"&gt;
&lt;IMG NAME="img2" BORDER=0 HEIGHT=20 WIDTH=125 SRC="<tt class="userinput"><b>image2off.gif</b></tt>"&gt;&lt;/A&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</pre></blockquote>
</div>

<dl>
<dt><b>(A)</b></dt>
<dd>
<p>This line detects whether the user's browser supports the
<tt class="literal">images</tt> object, which is a prerequisite for image
rollovers to work. All the functions in this script are contingent on
the browser recognizing the <tt class="literal">images</tt> object. If it
is not recognized, the browser will not display the rollover effects.
</p>
</dd>

</dl>

<dl>
<dt><b>(B)</b></dt>
<dd>
<p>The next four lines handle the "on" graphics for the two
images. The code creates an Image object for each graphic and
preloads it into memory. To use this code for your own site, you
simply need to change the filenames for the images (shown in bold).
Don't change any of the other code, though, because the
specific variables used here (<tt class="literal">img1on</tt>,
<tt class="literal">img2on</tt>) are critical to the operation of this
script.
</p>
</dd>

</dl>

<dl>
<dt><b>(C)</b></dt>
<dd>
<p>This section handles the "off" graphics for the two
images, again by creating an Image object for each one and preloading
it into memory. For your own site, just change the filenames for the
images (shown in bold), but don't change any of the other code.
</p>
</dd>

</dl>

<dl>
<dt><b>(D)</b></dt>
<dd>
<p>The <tt class="literal">imgOn( )</tt> function is what activates the
rollover. When the user moves the mouse over an image, the
<tt class="literal">onMouseOver</tt><a name="INDEX-2894" /> event handler passes the
image name to this function. The function adds the "on"
suffix to the name and sources in the appropriate "on"
GIF file. None of the code in this function needs to be changed for
use on your own site.
</p>
</dd>

</dl>

<dl>
<dt><b>(E)</b></dt>
<dd>
<p>The <tt class="literal">imgOff( )</tt> function returns the graphic to its
"off" state. When the mouse passes back out of the image,
the <tt class="literal">onMouseOut</tt><a name="INDEX-2895" /> event handler sends the
image name to this function, which attaches the "off"
suffix and sources in the appropriate "off" graphic.
Again, you don't need to change anything in this function to
use rollovers on your own site.
</p>
</dd>

</dl>

<dl>
<dt><b>(F)</b></dt>
<dd>
<p>This is the HTML for one of the rollover images within the
<tt class="literal">&lt;body&gt;</tt> of the document. There are actually
two things happening here. First, the image is assigned a name within
the <tt class="literal">&lt;img&gt;</tt> tag. JavaScript uses this name to
refer to this particular graphic slot, so don't change the
value of the <tt class="literal">name</tt> attribute when using this code
for your own site. You do need to change is the
<tt class="literal">src</tt> attribute to point to the right graphics file,
and be sure to set the <tt class="literal">width</tt> and
<tt class="literal">height</tt> attributes appropriately. Second, the calls
to the <tt class="literal">imgOn( )</tt><a name="INDEX-2896" /> and <tt class="literal">imgOff(
)</tt> JavaScript functions are set up using the
<tt class="literal">onMouseOver</tt> and <tt class="literal">onMouseOut</tt>
event handlers. These need to go within the anchor
<tt class="literal">&lt;a&gt;</tt> tag. The only thing you need to change
in the <tt class="literal">&lt;a&gt;</tt> tag is the
<tt class="literal">href</tt> attribute, to point to the appropriate page
for your site.
</p>
</dd>

</dl>

<dl>
<dt><b>(G)</b></dt>
<dd>
<p>This line sets up the <tt class="literal">onMouseOver</tt> event handler
for this rollover. It says to call the <tt class="literal">imgOn( )</tt>
function when the mouse is over the graphic, passing the image name
to that function. Nothing in this line needs to be changed to use
this script for your own site.
</p>
</dd>

</dl>

<dl>
<dt><b>(H)</b></dt>
<dd>
<p>This line sets up the <tt class="literal">onMouseOut</tt> event handler for
this rollover. It says to call the <tt class="literal">imgOut( )</tt>
function when the mouse leaves the area of the graphic, passing the
image name to that function. Again, nothing here needs to be changed
for use on your own site.
</p>
</dd>

</dl>

<p><a href="ch28_03.htm">Example 28-1</a> uses two image rollovers. If you need
more rollovers for your web page, simply follow the naming scheme for
adding more "on" and "off" graphics. Note
that the graphics filename does not need to be exactly the same as
the image object name, as is done in this example. For example,
here's the code you'd need to add in the head of the
document for a third button:
</p>

<blockquote><pre class="code">img3on = new Image(  );
img3on.src = "lighton.gif";

img3off = new Image(  );
img3off.src = "lightoff.gif";</pre></blockquote>

<p>Then, in the body, you'd have the following HTML:</p>

<blockquote><pre class="code">&lt;A HREF="brightlights.html" 
   onMouseOver="imgOn('img3')"  
   onMouseOut="imgOff('img3')"&gt; 
&lt;IMG NAME="img3" BORDER=0 HEIGHT=20 WIDTH=125 SRC="lightoff.gif"&gt;&lt;/A&gt;</pre></blockquote>

</div>

<a name="wdnut2-CHP-28-SECT-3.4.2" /><div class="sect3">
<h3 class="sect3">28.3.4.2. Changing two images at once</h3>

<p>You can also<a name="INDEX-2897" /> use a single
<tt class="literal">onMouseOver</tt><a name="INDEX-2898" /> event handler to change two graphics on
the page simultaneously. In this example, there are images that link
to the "jukebox" and "videos" sections of a
site. When the user moves the mouse over either image, JavaScript
turns that image "on" and also displays an informational
graphic in a third image area that has been named
<tt class="literal">holder</tt>.
</p>

<p>Most of the code for multiple rollovers is the same as the single
rollover example in <a href="ch28_03.htm">Example 28-1</a>, but with a few
additions to establish and display the additional graphic (in this
case, the information graphic). <a href="ch28_03.htm">Example 28-2</a> shows
the multiple rollover code; an explanation of the additions follows
the script.
</p>

<a name="wdnut2-CHP-28-EX-2" /><div class="example">
<h4 class="objtitle">Example 28-2. JavaScript code for multiple rollovers  </h4>
<blockquote><pre class="code">&lt;HTML&gt;  
&lt;HEAD&gt;  
&lt;TITLE&gt;Multiple Rollovers&lt;/TITLE&gt;  
&lt;SCRIPT LANGUAGE = "JavaScript"&gt;  
&lt;!--  
if (document.images) {

    // "On" images
    img1on = new Image(  );  
    img1on.src = "jukeboxon.gif";
    img2on = new Image(  ); 
    img2on.src = "videoson.gif";   

    // "Off" images
    img1off = new Image(  ); 
    img1off.src = "jukeboxoff.gif";    // Inactive Images
    img2off = new Image(  ); 
    img2off.src = "videosoff.gif"; 

    // Information images  (<b>A</b>)
    img1info = new Image(  ); 
    img1info.src = "jukeboxinfo.gif";
    img2info = new Image(  );
    img2info.src = "videosinfo.gif";
}

// Function to activate images
function imgOn(imgName) {
    if (document.images) {
        document.images[imgName].src = eval(imgName + "on.src");
        document.images["holder"].src = eval(imgName + "info.src");   (<b>B</b>)
    }
}

// Function to deactivate images
function imgOff(imgName) {
    if (document.images) {
        document.images[imgName].src = eval(imgName + "off.src");
<tt class="userinput"><b>    </b></tt>    document.images["holder"].src = "clear.gif";  (<b>C</b>)
    }
}

//--&gt;
&lt;/SCRIPT&gt;
&lt;/HEAD&gt;

&lt;BODY&gt;
&lt;!-- First rollover --&gt;
&lt;A HREF="jukebox.html" 
   onMouseOver="imgOn('img1')"    
   onMouseOut="imgOff('img1')"&gt;
&lt;IMG NAME="img1" BORDER=0 HEIGHT=24 WIDTH=100 SRC="jukeboxoff.gif"&gt;&lt;/A&gt;

&lt;!-- Second rollover --&gt;
&lt;A HREF="videos.html" 
   onMouseOver="imgOn('img2')"    
   onMouseOut="imgOff('img2')"&gt;
&lt;IMG NAME="img2" BORDER=0 HEIGHT=24 WIDTH=100 SRC="videosoff.gif"&gt;&lt;/A&gt;

&lt;!-- Additional image area --&gt;
&lt;IMG NAME="holder" HEIGHT=100 WIDTH=100 SRC="clear.gif"&gt;   (<b>D</b>)
&lt;/BODY&gt;
&lt;/HTML&gt;</pre></blockquote>
</div>

<dl>
<dt><b>(A)</b></dt>
<dd>
<p>These four lines handle the information graphics for each of the
previous "on" and "off" graphics. The code
creates an Image object for each graphic and preloads it into memory.
</p>
</dd>

</dl>

<dl>
<dt><b>(B)</b></dt>
<dd>
<p>The <tt class="literal">imgOn( )</tt> function for activating the rollover
now includes an additional line that changes the
<tt class="literal">holder</tt> graphic to one of the informational
graphics.
</p>
</dd>

</dl>

<dl>
<dt><b>(C)</b></dt>
<dd>
<p>Similarly, the <tt class="literal">imgOff( )</tt> function now contains a
line that returns the <tt class="literal">holder</tt> graphic back to its
"off" state (displaying <em class="emphasis">clear.gif</em>).
</p>
</dd>

</dl>

<dl>
<dt><b>(D)</b></dt>
<dd>
<p>This <tt class="literal">&lt;img&gt;</tt> tag named
<tt class="literal">holder</tt> is where the information graphics are
displayed. It contains a graphic called
<em class="emphasis">clear.gif</em> when neither button is activated.
</p>
</dd>

</dl>

<p>As with the simple rollover script, to use this script for your own
site, all you need to change are the graphics filename<a name="INDEX-2899" /> <a name="INDEX-2900" />s and URLs.
</p>

</div>
</div>


<hr width="684" align="left" />
<div class="navbar"><table cellpadding=3 width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch28_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch28_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">28.2. JavaScript Basics</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">28.4. Handling Multiple Browsers</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,0,77,93" shape="rect" /><area href="index.htm" coords="81,0,156,93" shape="rect" /><area href="../xhtml/index.htm" coords="161,0,261,102" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="339,1,433,109" shape="rect" /><area href="../action/index.htm" coords="438,2,540,109" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,694,104" shape="rect" /></map>

</body></html>
