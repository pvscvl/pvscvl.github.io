<html><head><title>Creating Effective Forms (HTML &amp; XHTML: The Definitive Guide, 4th Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Chuck Musciano and Bill Kennedy" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600026XL" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="HTML &amp; XHTML: The Definitive Guide, 4th Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="HTML &amp; XHTML: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_10.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">HTML &amp; XHTML: The Definitive Guide, 4th Edition</a></td><td align="right" valign="top" width="228"><a href="ch09_12.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">9.11. Creating Effective Forms</h2>

<p><a name="INDEX-1962" /> <a name="INDEX-1963" />Properly done, a form can provide
an effective user interface for your readers. With some server-side
programming tricks, you can use forms to personalize the documents
that you present to readers and thereby significantly increase the
value of your pages on the Web.
</p>

<a name="html4-CHP-9-SECT-11.1" /><div class="sect2">
<h3 class="sect2">9.11.1. Browser Constraints</h3>

<p><a name="INDEX-1964" />Unlike other graphical user
interfaces, browser displays are static. They have little or no
capability for real-time data validation, for example, or to update
the values in a form based upon user input, giving users no help or
guidance.<a href="#FOOTNOTE-61">[61]</a> Hence, poorly designed web forms can be difficult to fill
out.
</p><blockquote class="footnote"> <a name="FOOTNOTE-61" /><p>[61]This is not entirely true. While neither
HTML nor XHTML provide for data validation and user guidance, it is
possible to attach Java or JavaScript applets to your form elements
that do a very nice job of validating form data, updating form fields
based upon user input, and guiding users through your forms.</p>
</blockquote>

<p>Make sure your forms assist users as much as possible in getting
their input correct. Adjust the
<a name="INDEX-1965" />size of text input fields to give
clues on acceptable input: five-character (or the new nine-character)
zip code fields, for instance. Use checkboxes, radio buttons, and
selection lists whenever possible to narrow the list of choices the
user must make.
</p>

<p><a name="INDEX-1966" />Make sure you also
adequately document your forms. Explain how to fill them out,
supplying examples for each field. Provide appropriate hyperlinks to
documentation that describes each field, if necessary.
</p>

<p>When the form is submitted, make sure that the server-side
application exhaustively validates the user's data. If an error
is discovered, present the user with intelligent error messages and
possible corrections. One of the most frustrating aspects of filling
out forms is having to start over from scratch whenever the server
discovers an error. To alleviate this ugly redundancy and burden on
your readers, consider spending extra time and resources on the
server side that returns the user's completed form with the
erroneous fields flagged for changes.
</p>

<p>While these suggestions require significant effort on your part, they
will pay off many times over by making life easier for your users.
Remember, you'll create the form just once, but it may be used
thousands or even millions of times by users.<a name="INDEX-1967" />
</p>

</div>
<a name="html4-CHP-9-SECT-11.2" /><div class="sect2">
<h3 class="sect2">9.11.2. Handling Limited Displays</h3>

<p><a name="INDEX-1968" />
<a name="INDEX-1969" />Although most PCs have been upgraded to
provide resolution significantly better than the 600 x 480 that
was common when we wrote the first edition of this book, many devices
(laptops with poor screens, WebTV, cell phones with built-in
browsers) dictate that form design should be conservative. The best
compromise is to assume a document-viewing window roughly 75 readable
characters wide and 30 to 50 lines tall. You should design your forms
(and all your documents) so that they are effective when viewed
through a window of this size.
</p>

<p>You should structure your form to scroll naturally into two or three
logical sections. The user can fill out the first section, page down;
fill out the second section, page down; and so forth.
</p>

<p>You should also avoid wide input elements. It is difficult enough to
deal with a scrolling-text field or text area without having to
scroll the document itself horizontally to see additional portions of
the input element.
</p>

</div>
<a name="html4-CHP-9-SECT-11.3" /><div class="sect2">
<h3 class="sect2">9.11.3. User Interface Considerations</h3>

<p><a name="INDEX-1970" />
<a name="INDEX-1971" />When you elect to create a
form, you immediately assume another role: that of a user-interface
designer. While a complete discussion of user interface design is
beyond the scope of this book, it helps to understand a few basic
design rules to create effective, attractive forms.
</p>

<p>Any user interface is perceived at several levels simultaneously.
Forms are no different. At the lowest level, your brain recognizes
shapes within the document, attempting to categorize the elements of
the form. At a higher level, you are reading the text guides and
prompts, trying to determine what input is required of you. At the
highest level, you are seeking to accomplish a goal with the
interface as your tool.
</p>

<p>A good form accommodates all three of these perceptive needs. Input
elements should be organized in logical groups so that your brain can
process the form layout in chunks of related fields. Consistent,
well-written prompts and supporting text assist and lead the user to
enter the correct information. Text prompts also remind users of the
task at hand and reinforce the form's goal.
</p>

</div>
<a name="html4-CHP-9-SECT-11.4" /><div class="sect2">
<h3 class="sect2">9.11.4. Creating Forms That Flow</h3>

<p>Users process forms in a predictable order, one element after
another, seeking to find the next element as they finish the previous
one. To accommodate this searching process, you should design your
forms so that one field leads naturally to another, and related
fields are grouped together. Similarly, groups should lead naturally
to one another and should be formatted in a consistent manner.
<a name="INDEX-1972" />
</p>

<p>Simply stringing a number of fields together does not constitute an
effective form. You must put yourself in the place of your users, who
are using the form for the first time. Test your form on unsuspecting
friends and colleagues before you release it on the general public.
Is it easy to determine the purpose of the form? Where do you start
filling things out? Can the user find a button to push to submit the
form? Is there an opportunity to confirm decisions? Do readers
understand what is expected of them for each field?
</p>

<p>Your forms should lead the user naturally through the process of
supplying the necessary data for the application. You wouldn't
ask for a street address before asking for the user's name;
other rules may dictate the ordering of other groups of input
elements. To see if your form really works, make sure you view it on
several browsers and have several people fill it out and comment on
its effectiveness.
</p>

</div>
<a name="html4-CHP-9-SECT-11.5" /><div class="sect2">
<h3 class="sect2">9.11.5. Good Form, Old Chap</h3>

<p><a name="INDEX-1973" /> <a name="INDEX-1974" /> <a name="INDEX-1975" /> <a name="INDEX-1976" />
<a name="INDEX-1977" /> <a name="INDEX-1978" />At
first glance, the basic rule of HTML and XHTML -- content, not
style -- seems in direct opposition to the basic rule of good
interface design -- precise, consistent layout. Even so, it is
possible to use some elements to greatly improve the layout and
readability of most forms.
</p>

<p>Traditional page layout uses a grid of columns to align common
elements within a page. The resulting implied vertical and horizontal
"edges" of adjacent elements give a sense of order and
organization to the page and make it easy for the eye to scan and
follow.<a name="INDEX-1979" />
</p>

<p>HTML and XHTML make it hard, but you can accomplish the same sort of
layout for your forms. For example, you can group related elements
and separate groups with empty paragraphs or horizontal rules.
</p>

<p>Vertical alignment is more difficult, but not impossible. In general,
forms are easier to use if you arrange the input elements vertically
and aligned to a common margin. One popular form layout keeps the
left edge of the input elements aligned, with the element labels
immediately to the left of the elements. This is done by using tables
to place and align each form element and its label. Here is our
previous HTML form example, with the labels placed in the first
column and the corresponding elements in the second:
</p>

<blockquote><pre class="code">&lt;form method=POST action="http://www.kumquat.com/demo"&gt;
  &lt;table border=0&gt;
    &lt;tr valign=top&gt;
      &lt;td align=right&gt;Name:&lt;/td&gt;
      &lt;td align=left&gt;&lt;input type=text name=name size=32 maxlength=80&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr valign=top &gt;
      &lt;td align=right&gt;Sex:&lt;/td&gt;
      &lt;td align=left&gt;
        &lt;input type=radio name=sex value="M"&gt; Male &lt;br&gt;
        &lt;input type=radio name=sex value="F"&gt; Female
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr valign=top &gt;
      &lt;td align=right&gt;Income:&lt;/td&gt;
      &lt;td align=left&gt;
        &lt;select name=income size=1&gt;
          &lt;option&gt;Under $25,000
          &lt;option&gt;$25,001 to $50,000
          &lt;option&gt;$50,001 and higher
        &lt;/select&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr valign=top&gt;
      &lt;td colspan=2 align=center&gt;
        &lt;input type=submit value="Submit Query"&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/form&gt;</pre></blockquote>

<p>Notice in the resulting rendered form shown in <a href="ch09_11.htm">Figure 9-9</a> that the table has placed each input element
in its own row. The <tt class="literal">align</tt> attributes in the table
cells force the labels to the right and the elements to the left,
creating a vertical margin through the form. By spanning the cell in
the last row, the submission button is centered with respect to the
entire form. In general, using tables in this manner makes form
layout much easier and consistent throughout your documents. If you
find this example at all difficult, see <a href="ch10_01.htm">Chapter 10, "Tables"</a>,
Tables, which explains all the glories of tables in detail.
</p>

<a name="html4-CHP-9-FIG-9" /><div class="figure"><img height="217" alt="Figure 9-9" src="figs/xhtm.0909.gif" width="475" /></div><h4 class="objtitle">Figure 9-9. Using a consistent vertical margin to align form elements</h4>

<p>You may find other consistent ways to lay out your forms. The key is
to find a useful layout style that works well across most browsers
and stick with it. Even though HTML and XHTML have limited tools to
control layout and positioning, take advantage of what is available
in order to make your forms more attractive and <a name="INDEX-1980" /> <a name="INDEX-1981" />easier to use.
<a name="INDEX-1982" /> <a name="INDEX-1983" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_10.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch09_12.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">9.10. Labeling and Grouping          Form Elements</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">9.12. Forms Programming</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>