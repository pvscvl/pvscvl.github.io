<html><head><title>HTML Versus XHTML (HTML &amp; XHTML: The Definitive Guide, 4th Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Chuck Musciano and Bill Kennedy" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600026XL" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="HTML &amp; XHTML: The Definitive Guide, 4th Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="HTML &amp; XHTML: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch16_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">HTML &amp; XHTML: The Definitive Guide, 4th Edition</a></td><td align="right" valign="top" width="228"><a href="ch16_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">16.3. HTML Versus XHTML</h2>

<p>The majority of <a name="INDEX-2704" /> <a name="INDEX-2705" />HTML is completely compatible with XHTML,
and this book is devoted to that majority. In this chapter, however,
we talk about the minority: where the HTML 4.01 standard and the
XHTML DTD differ. If you truly desire to create documents that are
both HTML- and XHTML-compliant, you must heed the various warnings
and caveats we outline in the following sections.
</p>

<p>The biggest difference -- that's Difference with
<a name="INDEX-2706" />a
capital D and that spells difficult -- is that writing XHTML
documents requires much more discipline and attention to detail than
even the most fastidious HTML author ever dreamed necessary. In W3C
parlance, that means your documents must be impeccably
"well-formed." Throughout the history of HTML -- and
in this book -- authors have been encouraged to create well-formed
documents, but you would have to break rank with the HTML standards
for your documents to be considered well-formed by XML standards.
</p>

<p>Nonetheless, your efforts to master XHTML will be rewarded with
documents that are well-formed and a sense of satisfaction from
playing by the new rules. You will truly benefit in the future, too:
through XML, your documents will be able to appear in places you
never dreamed would exist (mostly good places, we hope).
</p>

<a name="html4-CHP-16-SECT-3.1" /><div class="sect2">
<h3 class="sect2">16.3.1. Correctly Nested Elements</h3>
<p>One requirement of a <a name="INDEX-2707" />
<a name="INDEX-2708" />well-formed XHTML document is that its <a name="INDEX-2709" />elements are nested correctly. This isn't any different from HTML standards: simply close the markup elements in the order in which you opened them. If one element is within another, the end tag of the inner element must appear before the end tag of the outer element.</p>


<p>Hence, in the following well-formed XHTML segment, we end the italics
tag before we end the bold one, because we'd started
italicizing after we had started bolding the content:
</p>

<blockquote><pre class="code">&lt;b&gt;Close the italics tag &lt;i&gt;first&lt;/i&gt;&lt;/b&gt;.</pre></blockquote>

<p>On the other hand, the following:</p>

<blockquote><pre class="code">&lt;b&gt;Well-formed, this is &lt;i&gt;not!&lt;/b&gt;&lt;/i&gt;</pre></blockquote>

<p>is not well-formed. </p>

<p>XHTML strictly enforces other nesting restrictions that have always
been part of HTML but not always enforced. These restrictions are not
formally part of the XHTML DTD; they are instead defined as part of
the XHTML standard that is based upon the DTD.<a href="#FOOTNOTE-85">[85]</a>
</p><blockquote class="footnote"> <a name="FOOTNOTE-85" /><p>[85]This
is hair-splitting within the XHTML standard. The XML standard has no
mechanism to define which tags may not be placed within another tag.
SGML, upon which XML is based, does have such a feature, but it was
removed from XML to make the language easier to use and implement. As
a result, these restrictions are simply listed in an appendix of the
XHTML standard instead of explicitly defined in the XHTML DTD.</p>
</blockquote>

<p>Nesting restrictions include:</p>

<ul><li>
<p>The <tt class="literal">&lt;a&gt;</tt> tag cannot contain another
<tt class="literal">&lt;a&gt;</tt> tag.
</p>
</li><li>
<p>The <tt class="literal">&lt;pre&gt;</tt> tag cannot contain
<tt class="literal">&lt;img&gt;</tt>, <tt class="literal">&lt;object&gt;</tt>,
<tt class="literal">&lt;big&gt;</tt>, <tt class="literal">&lt;small&gt;</tt>,
<tt class="literal">&lt;sub&gt;</tt>, or <tt class="literal">&lt;sup&gt;</tt>.
</p>
</li><li>
<p>The <tt class="literal">&lt;button&gt;</tt> tag cannot contain
<tt class="literal">&lt;input&gt;</tt>, <tt class="literal">&lt;select&gt;</tt>,
<tt class="literal">&lt;textarea&gt;</tt>,
<tt class="literal">&lt;label&gt;</tt>, <tt class="literal">&lt;button&gt;</tt>,
<tt class="literal">&lt;form&gt;</tt>, <tt class="literal">&lt;fieldset&gt;</tt>,
<tt class="literal">&lt;iframe&gt;</tt>, or
<tt class="literal">&lt;isindex&gt;</tt>.
</p>
</li><li>
<p>The <tt class="literal">&lt;label&gt;</tt> tag cannot contain other
<tt class="literal">&lt;label&gt;</tt> tags.
</p>
</li><li>
<p>The <tt class="literal">&lt;form&gt;</tt> tag cannot contain other
<tt class="literal">&lt;form&gt;</tt> tags.
</p>
</li></ul>
<p>These restrictions apply to nesting at any level. For example, an
<tt class="literal">&lt;a&gt;</tt> tag cannot contain any other
<tt class="literal">&lt;a&gt;</tt> tags, or any tag that in turn contains
an <tt class="literal">&lt;a&gt;</tt> tag.
</p>

</div>
<a name="html4-CHP-16-SECT-3.2" /><div class="sect2">
<h3 class="sect2">16.3.2. End Tags</h3>
<p>As we've documented throughout this book, any HTML tag that contains other tags or content has a corresponding end tag. However, one of the hallmarks of HTML (codified in the 4.01 standard) is that you may leave out the <a name="INDEX-2710" />end tags if their presence can be inferred by the processing agent. This is why most of us HTML authors commonly leave out the <tt class="literal">&lt;/p&gt;</tt> end tag between adjacent paragraphs. Also, lists and tables can be complicated to wade through and not having to visually stumble over all the <tt class="literal">&lt;/li&gt;</tt>, <tt class="literal">&lt;/td&gt;</tt>, <tt class="literal">&lt;/th&gt;</tt>, and <tt class="literal">&lt;/tr&gt;</tt> end tags certainly makes HTML a little clearer and easier to read.</p>


<p>This is not so for XHTML. Every tag that contains other tags or
content must have a corresponding end tag present, correctly nested
within the XHTML document. A missing end tag is an error and renders
the document non-compliant.
</p>

</div>
<a name="html4-CHP-16-SECT-3.3" /><div class="sect2">
<h3 class="sect2">16.3.3. Handling Empty Elements</h3>

<p>In XML, and thus XHTML, <a name="INDEX-2711" />every tag must have a corresponding
end tag, even those aren't allowed to contain other tags or
content. Accordingly, XHTML expects the line break to appear as
<tt class="literal">&lt;br&gt;&lt;/br&gt;</tt> in your document. Ugh.
</p>

<p>Fortunately, there is an acceptable alternative: include a slash
before the closing brace of the tag to indicate its ending, as in
<tt class="literal">&lt;br /&gt;</tt>. If the tag has attributes, the slash
comes after all the attributes, so that an image could be defined as:
</p>

<blockquote><pre class="code">&lt;img src="kumquat.gif" /&gt;</pre></blockquote>

<p>While this notation may seem foreign and annoying to an HTML author,
it actually serves a useful purpose. Any XHTML element that has no
content can be written this way. Thus, an empty paragraph can be
written as <tt class="literal">&lt;p /&gt;</tt> and an empty table cell can
be written as <tt class="literal">&lt;td /&gt;</tt>. This is a handy way to
mark empty table cells.
</p>
<p>Clever as it may seem, writing empty tags in this abbreviated way may confuse HTML browsers.</p>


<p>So to avoid compatibility problems, you can fool the HTML browsers by
placing a space before the forward slash in an empty element using
the XHTML version of its end tag. For example, use <tt class="literal">&lt;br
/&gt;</tt> with its space between the <tt class="literal">br</tt> and
<tt class="literal">/</tt>, instead of the XHTML equivalents
<tt class="literal">&lt;br/&gt;</tt> or
<tt class="literal">&lt;br&gt;&lt;/br&gt;</tt>. <a href="ch16_03.htm">Table 16-1</a> contains all the empty
<a name="INDEX-2712" />HTML tags expressed in their acceptable
XHTML (transitional DTD) forms.
</p>

<a name="html4-CHP-16-TABLE-1" /><h4 class="objtitle">Table 16-1. HTML Empty Tags in XHTML Format </h4><table border="1">



<tr>
<td>
<blockquote><pre class="code">&lt;area /&gt;</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">&lt;img /&gt;</pre></blockquote>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">&lt;base /&gt;</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">&lt;input /&gt;</pre></blockquote>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">&lt;basefont /&gt;</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">&lt;isindex /&gt;</pre></blockquote>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">&lt;br /&gt;</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">&lt;link /&gt;</pre></blockquote>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">&lt;col /&gt;</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">&lt;meta /&gt;</pre></blockquote>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">&lt;frame /&gt;</pre></blockquote>
</td>
<td>
<a name="INDEX-2713" /><a name="INDEX-2714" /><blockquote><pre class="code">&lt;param /&gt;
</pre></blockquote>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">&lt;hr /&gt;</pre></blockquote>
</td>
<td>

</td>
</tr>

</table>

</div>
<a name="html4-CHP-16-SECT-3.4" /><div class="sect2">
<h3 class="sect2">16.3.4. Case Sensitivity</h3>
<p>If you thought getting <a name="INDEX-2715" />
<a name="INDEX-2716" />all those end tags in the right place and cleaning up the occasional nesting error would make writing XHTML documents difficult, hold on to your hat. XHTML is case-sensitive for <em class="emphasis">all</em> tag and attribute names. In an XHTML document, <tt class="literal">&lt;a&gt;</tt> and <tt class="literal">&lt;A&gt;</tt> are different tags; <tt class="literal">src</tt> and <tt class="literal">SRC</tt> are different attributes. So are <tt class="literal">sRc</tt> and <tt class="literal">SrC</tt> ! How forgiving HTML seems now.</p>


<p>The XHTML DTD defines all former HTML tags and attributes using
lowercase letters. Uppercase tag or attribute names are not valid
XHTML tags or attributes.
</p>

<p>This can be a difficult situation for any author wishing to convert
existing HTML documents into XHTML-compliant ones. Lots of web pages
use uppercase tag and attribute names, to make them stand out from
the surrounding lowercase content.
</p>

<p>To become compliant, all those names must be converted to lowercase,
even the ones you'd used in your CSS style sheet definitions.
Fortunately, this kind of change is easily accomplished with various
editing tools. And XHTML authoring systems should perform the
conversion for you.
</p>

</div>
<a name="html4-CHP-16-SECT-3.5" /><div class="sect2">
<h3 class="sect2">16.3.5. Quoted Attribute Values</h3>

<p>And as if all those
<a name="INDEX-2717" /> <a name="INDEX-2718" />
<a name="INDEX-2719" /> <a name="INDEX-2720" />case-sensitive attribute
names weren't aggravating enough, XHTML requires that every
attribute value -- even the numeric ones -- be enclosed in
double quotes. In HTML, you could quote anything your heart desired,
but quotes were only required if the attribute value included
whitespace or other special characters. To be XHTML-compliant, every
attribute must be enclosed in quotes.
</p>

<p>For example:</p>

<blockquote><pre class="code">&lt;table rows=3&gt;</pre></blockquote>

<p>is wrong in XHTML. It is correctly written:</p>

<blockquote><pre class="code">&lt;table rows="3"&gt;</pre></blockquote>

</div>
<a name="html4-CHP-16-SECT-3.6" /><div class="sect2">
<h3 class="sect2">16.3.6. Explicit Attribute Values</h3>

<p>Within HTML, there <a name="INDEX-2721" />
<a name="INDEX-2722" />are a small
number of attributes that have no value. Instead, their mere presence
within a tag causes that tag to behave differently. In general, these
attributes represent a sort of on/off switch for the tag, like the
<tt class="literal">compact</tt> attribute for the various list tags or the
<tt class="literal">ismap</tt> attribute for the
<tt class="literal">&lt;img&gt;</tt> tag.
</p>

<p>In XHTML, every attribute must have a value. Those without values
must now use their own names. Thus, <tt class="literal">compact</tt> in
XHTML is correctly specified as <tt class="literal">compact="compact";</tt>
<tt class="literal">checked</tt> is now
<tt class="literal">checked="checked"</tt> Each must contain the newly
required attribute value enclosed in quotes. <a href="ch16_03.htm">Table 16-2</a> contains a list of newly valued attributes.
</p>

<a name="html4-CHP-16-TABLE-2" /><h4 class="objtitle">Table 16-2. New XHTML Values for Value-Less HTML Attributes </h4><table border="1">



<tr>
<td>
<blockquote><pre class="code">compact="compact"</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">disabled="disabled"</pre></blockquote>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">nowrap="nowrap"</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">readonly="readonly"</pre></blockquote>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">ismap="ismap"</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">multiple="multiple"</pre></blockquote>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">declare="declare"</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">selected="selected"</pre></blockquote>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">noshade="noshade"</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">noresize="noresize"</pre></blockquote>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">checked="checked"</pre></blockquote>
</td>
<td>
<blockquote><pre class="code">defer="defer"</pre></blockquote>
</td>
</tr>

</table>

<p>Be aware that this new attribute value requirement may cause some old
HTML browsers to ignore the attribute altogether. HTML 4.0-compliant
browsers don't have that problem, so the majority of users
won't notice any difference. There is no good solution to this
problem other than distributing HTML 4.0-compliant browsers to the
needy.
</p>

</div>
<a name="html4-CHP-16-SECT-3.7" /><div class="sect2">
<h3 class="sect2">16.3.7. Handling Special Characters</h3>

<p>XHTML is more sensitive than <a name="INDEX-2723" /> <a name="INDEX-2724" /> <a name="INDEX-2725" />HTML is to
the use of the <tt class="literal">&lt;</tt> and <tt class="literal">&amp;</tt>
characters in JavaScript and CSS declarations within your documents.
In HTML, you can avoid potential conflicts by enclosing your scripts
and stylesheets in comments
(<tt class="literal">&lt;!--</tt><a name="INDEX-2726" />
<a name="INDEX-2727" /> and
<tt class="literal">--&gt;</tt>). XML browsers, however, may simply remove all the
contents of comments from your document, thereby deleting your hidden
scripts and stylesheets.
</p>

<p>To properly shield your special characters from XML browsers, enclose
your styles or scripts in a <a name="INDEX-2728" />CDATA section. This tells the
XML browser that any characters contained within are plain old
characters, without special meanings. For example:
</p>

<blockquote><pre class="code">&lt;script language="JavaScript"&gt;
&lt;![CDATA[
   JavaScript here...
 ]]&gt;
&lt;/script&gt;</pre></blockquote>
<p>This doesn't solve the problem, though. HTML browsers ignore the contents of the CDATA XML tag, but honor the contents of comment-enclosed scripts and stylesheets, whereas XML browsers do just the opposite. We recommend that you put your scripts and styles in external files and reference them in your document with appropriate external links.</p>


<p>Special characters in attribute values are problematic in XHTML, as
well. In particular, an ampersand within an attribute value should
always be written using <tt class="literal">&amp;amp;</tt> and not simply
an <tt class="literal">&amp;</tt> character. Similarly, play it safe and
encode less-than and greater-than signs using their
<tt class="literal">&amp;lt;</tt> and <tt class="literal">&amp;gt;</tt> entities.
For example, while:
</p>

<blockquote><pre class="code">&lt;img src=seasonings.gif alt="Salt &amp; pepper"&gt;</pre></blockquote>

<p>is perfectly valid HTML, it must be written as:</p>

<blockquote><pre class="code">&lt;img src="seasonings.gif" alt="Salt &amp;amp; pepper" /&gt;</pre></blockquote>

<p>to be compliant XHTML.</p>

</div>
<a name="html4-CHP-16-SECT-3.8" /><div class="sect2">
<h3 class="sect2">16.3.8. The id and name Attributes</h3>

<p>Early versions of HTML used the
<tt class="literal">name</tt><a name="INDEX-2729" />
<a name="INDEX-2730" /> attribute with the
<tt class="literal">&lt;a&gt;</tt> tag to create a fragment identifier in
the document. This fragment could then be used in a URL to refer to a
particular spot within a document. The <tt class="literal">name</tt>
attribute was later added to other tags like
<tt class="literal">&lt;frame&gt;</tt> and <tt class="literal">&lt;img&gt;</tt>,
allowing those elements to also be referenced by name from other
spots in the document.
</p>

<p>With HTML 4.0, the W3C added the <tt class="literal">id</tt> attribute to
almost every tag. Like <tt class="literal">name</tt>, <tt class="literal">id</tt>
lets you associate an identifier with nearly any element in a
document for later reference and use, perhaps by a hyperlink or a
script.
</p>

<p>XHTML has a strong preference for the <tt class="literal">id</tt> attribute
as the anchor of choice within a document. The
<tt class="literal">name</tt> attribute is defined, but formally deprecated
for those elements that have historically used it. With widespread
support of HTML 4.0 now in place, you should begin to avoid the
<tt class="literal">name</tt> attribute where possible, and instead use the
<tt class="literal">id</tt> attribute to bind names to elements in your
documents. If you must use the <tt class="literal">name</tt> attribute on
certain tags, include an identical <tt class="literal">id</tt> attribute to
ensure that the tag will behave similarly when processed by
<a name="INDEX-2731" />
<a name="INDEX-2732" />an
XHTML browser.
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch16_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch16_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">16.2. Creating XHTML Documents</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">16.4. Should You Use XHTML?</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>