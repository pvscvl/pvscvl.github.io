<html><head><title>Inserting Images in Your Documents (HTML &amp; XHTML: The Definitive Guide, 4th Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Chuck Musciano and Bill Kennedy" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600026XL" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="HTML &amp; XHTML: The Definitive Guide, 4th Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="HTML &amp; XHTML: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch05_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">HTML &amp; XHTML: The Definitive Guide, 4th Edition</a></td><td align="right" valign="top" width="228"><a href="ch05_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">5.2. Inserting Images in Your Documents</h2>
<p><a name="INDEX-720" />
<a name="INDEX-721" />One of the most compelling features of HTML and XHTML is their ability to include images with your document text, either as an intrinsic component of the document (inline images), as separate documents specially selected for download via hyperlinks, or as a background for your document. When judiciously added to the body content, images -- static and animated icons, pictures, illustrations, drawings, and so on -- can make your documents more attractive, inviting, and professional looking, as well as informative and easy to browse. You may also specially enable an image so that it becomes a visual map of hyperlinks. When used to excess, however, images make your document cluttered, confusing, and inaccessible, as well as unnecessarily lengthening the time it takes for users to download and view your pages. </p>


<a name="html4-CHP-5-SECT-2.1" /><div class="sect2">
<h3 class="sect2">5.2.1. Understanding Image Formats</h3>

<p><a name="INDEX-722" /> <a name="INDEX-723" />Neither HTML nor XHTML prescribe an
official format for images. However, the popular browsers
specifically accommodate certain image formats: GIF and JPEG, in
particular (see following sections for explanations). Most other
multimedia formats require special accessory applications that each
browser owner must obtain, install, and successfully operate to view
the special files. So it's not too surprising that GIF and JPEG
are the <em class="emphasis">de facto</em> image standards on the Web.
</p>

<p>Both image formats were already in widespread use before the Web came
into being, so there's lots of supporting software out there to
help you prepare your graphics for either format. However, each has
its own advantages and drawbacks, including features that some
browsers exploit for special display effects.
</p>

<a name="html4-CHP-5-SECT-2.1.1" /><div class="sect3">
<h3 class="sect3">5.2.1.1. GIF</h3>

<p><a name="INDEX-724" />The Graphics
Interchange Format (GIF) was first developed for image transfer among
users of the CompuServe online service. The format has several
features that make it popular for use in HTML and XHTML documents.
Its encoding is cross-platform, so that with appropriate GIF decoding
software (included with most browsers), the graphics you create and
make into a GIF file on a Macintosh, for example, can be loaded into
a Windows-based PC, decoded, and viewed without a lot of fuss. The
second main feature is that GIF uses special compression technology
that can significantly reduce the size of the image file for faster
transfer over a network. GIF compression is "lossless,"
too; none of an image's original data is altered or deleted, so
the uncompressed and decoded image exactly matches its original. And
GIF images can be easily animated.
</p>

<p>Even though GIF image files invariably have the
<em class="emphasis">.gif</em> (or <em class="emphasis">.GIF</em> ) filename
suffix, there actually are two GIF versions: the original GIF87 and
an expanded GIF89a, which supports several new features, including
transparent backgrounds, interlaced storage, and animation, that are
popular with web authors (see section 5.2.1.2). The currently popular
browsers support both GIF versions, which use the same encoding
scheme that maps 8-bit pixel values to a color table, for a maximum
of 256 <a name="INDEX-725" />colors per image. Most GIF images
have even fewer colors; there are special tools to simplify the
colors in more elaborate graphics. By simplifying the GIF images, you
create a smaller color map and enhance pixel redundancy for better
file compression and consequently faster downloading.
</p>

<p>However, because of the limited number of colors, a GIF-encoded image
is not always appropriate, particularly for photorealistic pictures
(see JPEG discussion in <a href="ch05_02.htm">Section 5.2.1.3, "JPEG"</a>). GIFs
make excellent icons, reduced color images, and drawings.
</p>

<p>Because most graphical browsers explicitly support the GIF format, it
is currently the most widely accepted image-encoding format on the
Web. It is acceptable for both inline images and externally linked
ones. When in doubt as to which image format to use, choose
GIF.<a href="#FOOTNOTE-30">[30]</a> It will work in
almost any situation.
</p><blockquote class="footnote"> <a name="FOOTNOTE-30" /><p>[30]We cannot resist the temptation to point out
that choosy authors choose GIF.</p> </blockquote>

</div>

<a name="html4-CHP-5-SECT-2.1.2" /><div class="sect3">
<h3 class="sect3">5.2.1.2. Interlacing, transparency, and animation</h3>

<p>GIF images can be made to perform three special tricks:
<a name="INDEX-726" />interlacing,
transparency, and animation. With interlacing, a GIF image seemingly
materializes on the display, rather than progressively flowing onto
it from top to bottom. Normally, a GIF encoded image is a sequence of
pixel data, in order row-by-row, from top to bottom of the image.
While the common GIF image renders onscreen like pulling down a
window shade, interlaced GIFs open like a venetian blind.
That's because interlacing sequences every fourth row of the
image. Users get to see a full image -- top to bottom, albeit
fuzzy -- in a quarter of the time it takes to download and display
the remainder of the image. The resulting quarter-done image usually
is clear enough so that users with slow network connections can
evaluate whether to take the time to download the remainder of the
image file.
</p>

<p>Not all graphical browsers, although able to display an interlaced
GIF, are actually able to display the materializing effects of
interlacing. With those that do, users still can defeat the effect by
choosing to delay image display until after download and decoding.
Older browsers, on the other hand, always download and decode images
before display and don't support the effect at all.
</p>

<p>Another popular effect available with GIF
images -- GIF89a-formatted images, actually -- is the ability
to make a portion of them
<a name="INDEX-727" />
<a name="INDEX-728" />
<a name="INDEX-729" />transparent so
that what's underneath -- usually the browser window's
background -- shows through. The transparent GIF image has one
color in its color map designated as the background color. The
browser simply ignores any pixel in the image that uses that
background color, thereby letting the display window's
background show through. By carefully cropping its dimensions and by
using a solid, contiguous background color, a transparent image can
be made to seamlessly meld into a page's surrounding content or
float above it.
</p>

<p>Transparent GIF images are great for any graphic you want to meld
into the document and not stand out as a rectangular block.
Transparent GIF logos are very popular, as are transparent icons and
dingbats -- any graphic that should appear to have an arbitrary,
natural shape. You may also insert a transparent image inline with
conventional text to act as a special character glyph within
conventional text.
</p>

<p>The downside to transparency is that the GIF image will look lousy if
you don't remove its border when it is included in a hyperlink
anchor (<tt class="literal">&lt;a&gt;</tt> tag ), or is otherwise specially
framed. And content flow happens around the image's rectangular
dimensions, not adjacent to its apparent shape. That can lead to
unnecessarily isolated images or odd-looking sections in your web
pages.
</p>

<p><a name="INDEX-730" />The
third unique trick available with GIF89a-formatted images is the
ability to do simple frame-by-frame
<a name="INDEX-731" /> <a name="INDEX-732" />
<a name="INDEX-733" />animation. Using special GIF
animation software utilities, you may prepare a single GIF89a file to
contain a series of GIF images. The browser displays each image in
the file, one after the other, something like the page-flipping
animation booklets we had (even drew!) as kids. Special control
segments between each image in the GIF file let you set the number of
times the browser runs through the complete sequence (looping), how
long to pause between each image, whether the image space gets wiped
to background before the browser displays the next image, and so on.
By combining these control features with those normally available for
GIF images, including individual color tables, transparency, and
interlacing, you can create some very appealing and elaborate
animations.<a href="#FOOTNOTE-31">[31]</a>
</p><blockquote class="footnote"> <a name="FOOTNOTE-31" /><p>[31]Songline Studios has published an entire
book dedicated to GIF animation: <em class="emphasis">GIF Animation
Studio</em>, by Richard Koman.</p> </blockquote>

<p>Simple GIF animation is powerful for one other important reason: you
don't need to specially program your HTML documents to achieve
animation. But there is one major downside that limits their use
except for small, icon-sized, or thin bands of space in the browser
window: GIF animation files get large fast, even if you are careful
not to repeat static portions of the image in successive animation
cells. And if you have several animations in one document, download
delays may -- and usually will -- annoy the user. If there is
any feature that deserves close scrutiny for excess, it's GIF
animation.
</p>

<p>Any and all GIF tricks -- interlacing, transparency, and
animation -- don't just happen; you need special software to
prepare the GIF file. Many image tools now save your creations or
acquired images in GIF format, and most now let you enable
transparency, as well as let you make interlaced GIF files. There
also are a slew of shareware and freeware programs specialized for
these tasks, as well as for creating GIF animation. Look into your
favorite Internet software archives for GIF graphics and conversion
tools and also see <a href="ch17_01.htm">Chapter 17, "Tips, Tricks, and Hacks"</a> for details on
creating transparent images.<a name="INDEX-734" />
</p>

</div>

<a name="html4-CHP-5-SECT-2.1.3" /><div class="sect3">
<h3 class="sect3">5.2.1.3. JPEG</h3>

<p>The <a name="INDEX-735" />Joint
Photographic Experts Group ( JPEG) is a standards body that developed
what is now known as the JPEG image-encoding format. Like GIFs, JPEG
images are platform-independent and specially compressed for
high-speed transfer via digital communication technologies. Unlike
GIF, JPEG supports tens of thousands of colors for more detailed,
photorealistic digital images. And JPEG uses special algorithms that
yield much higher data-compression ratios. It is not uncommon, for
example, for a 200-kilobyte GIF image to be reduced to a 30-kilobyte
JPEG image. To achieve that amazing compression, JPEG does lose some
image data. However, you can adjust the degree of
"lossiness" with special JPEG tools, so that although the
uncompressed image may not exactly match the original, it will be
close enough that most people cannot tell the difference.
</p>

<p>Although JPEG is an excellent choice for photographs, it's not
a particularly good choice for illustrations. The algorithms used for
compressing and uncompressing the image leave noticeable artifacts
when dealing with large areas of one color. Therefore, if
you're trying to display a drawing, the GIF format may be
preferable.
</p>

<p>The JPEG format, usually designated by the <em class="emphasis">.jpg</em>
(or <em class="emphasis">.JPG</em> ) filename suffix, is nearly
universally understood by today's graphical browsers. On rare
occasions, you'll come across an older browser that cannot
directly display JPEG images.<a name="INDEX-736" /> <a name="INDEX-737" />
</p>

</div>
</div>
<a name="html4-CHP-5-SECT-2.2" /><div class="sect2">
<h3 class="sect2">5.2.2. When to Use Images</h3>

<p><a name="INDEX-738" />Most pictures are worth a thousand words.
But don't forget that no one pays attention to a blabbermouth.
First and foremost, think of your document images as visual tools,
not gratuitous trappings. They should support your text content and
help readers navigate your documents. Use images to clarify,
illustrate, or exemplify the contents. Content-supporting
photographs, charts, graphs, maps, and drawings are all natural and
appropriate candidates. Product photographs are essential components
in online catalogs and shopping guides, for example. And link-enabled
icons and dingbats, including animated images, can be effective
visual guides to internal and external resources. If an image
doesn't do any of these valuable services for your document,
throw it out already!
</p>

<p><a name="INDEX-739" /> <a name="INDEX-740" />
<a name="INDEX-741" /> <a name="INDEX-742" /> <a name="INDEX-743" />One <a name="INDEX-744" />of the most important
considerations when adding images to a document is the additional
delay they add to the retrieval time for a document over the network,
particularly for modem connections. While a common text document
might run, at most, 10 or 15 thousand bytes, images can easily extend
to hundreds of thousands of bytes each. And the total retrieval time
for a document is not only equal to the sum of all its component
parts, but also to compounded networking overhead delays.
</p>

<p>Depending on the speed of the connection
(<em class="emphasis">bandwidth</em>, usually expressed as bits or bytes
per second) as well as network congestion that can delay connections,
a single document containing one 100-kilobyte image may take anywhere
from around 15 seconds through a 57.6 kilobit-per-second modem
connection in the wee hours of the morning when most everyone else is
asleep, to well over <em class="emphasis">ten</em>
<em class="emphasis">minutes</em> with a 9600 bit-per-second modem at
noon. You get the picture?
</p>

<p>That said, of course, pictures and other multimedia are driving
Internet providers to come up with faster, better, more robust ways
to deliver Web content. Soon, 57.6 kilobit-per-second modem
connections will go the way of the horse and carriage (as 9600
bit-per-second modems already have), to be replaced by technologies
like cable modems and ADSL. Indeed, soon most connections will attain
data rates approaching or exceeding what used to be available only to
the biggest users (besides costing an arm and a leg), over a megabit
per second.
</p>

<p>Still, as the price lowers, use goes up, so there is the issue of
congestion. If you are competing for access to an overburdened
server, it doesn't matter how fast your connection may be.
</p>

</div>
<a name="html4-CHP-5-SECT-2.3" /><div class="sect2">
<h3 class="sect2">5.2.3. When to Use Text</h3>

<p><a name="INDEX-745" />
<a name="INDEX-746" />Text
hasn't gone out of style. For some users, it is the only
portion of your document they can access. We argue that, in most
circumstances, your documents should be usable by readers who cannot
view images or have disabled their automatic download in their
browser to improve their connection. While the urge to add images to
all of your documents may be strong, there are times when pure text
documents make more sense.
</p>

<p>Documents being converted to the Web from other formats rarely have
embedded images. Reference materials and other serious content often
is completely usable in a text-only form.
</p>

<p>You should create text-only documents when access speed is critical.
If you know that many users will be vying for your pages, you should
accommodate them by avoiding the use of images within your documents.
In some extreme cases, you might provide a home (leading) page that
lets readers decide between duplicate collections of your work: one
containing the images, and another stripped of them. (The popular
browsers include special picture icons as place holders for yet-to-be
downloaded images, which can trash and muddle your document's
layout into an unreadable mess.)
</p>

<p>Text is most appropriate -- supporting images only, without frills
or nonessential graphics -- if your documents are to be readily
searchable by any of the many web indexing services. Images are
almost always ignored by these search engines. If the major content
of your pages is provided with images, very little information about
your documents will find its way into the online web directories.
</p>

</div>
<a name="html4-CHP-5-SECT-2.4" /><div class="sect2">
<h3 class="sect2">5.2.4. Speeding Image Downloads</h3>

<p>There are several ways to ameliorate the overhead and delays inherent
with images, besides being very choosy about which to include in your
documents:
</p>

<dl>
<dt><b>Keep it simple</b></dt>
<dd>
<p>A full-screen, 24-bit color graphic, even when reduced in size by
digital compression with one of the standard formats like GIF or
JPEG, is still going to be a network bandwidth hog. Acquire and use
the various image management tools to optimize image dimensions and
number of colors into the fewest number of pixels. Simplify your
drawings. Stay away from panoramic photographs. Avoid large empty
backgrounds in your images, as well as gratuitous borders and other
space-consuming elements. Also avoid dithering (blending two colors
among adjacent pixels to achieve a third color); this technique can
significantly reduce the compressibility of your images. Strive for
large areas of uniform colors, which compress readily in both GIF and
JPEG format.
</p>
</dd>

<dt><b>Reuse images</b></dt>
<dd>
<p><a name="INDEX-747" />This is
particularly true for icons and GIF animations. Most browsers cache
incoming document components in local storage for the very purpose of
quick, network connection-less retrieval of data. For smaller GIF
animation files, try to prepare each successive image to update only
portions that change in the animation, rather than redraw the entire
image (this speeds up the animation, too).
</p>
</dd>

<dt><b>Divide up large documents</b></dt>
<dd>
<p><a name="INDEX-748" />This is a general rule that includes
images. Many small document segments, organized through hyperlinks
(of course!) and effective tables of contents tend to be better
accepted by users than a few large documents. In general, people
would rather "flip" several pages than dawdle waiting for
a large one to download. (It's related to the TV
channel-surfing syndrome.) One accepted rule of thumb is to keep your
documents under 50 kilobytes each, so even the slowest connections
won't overly frustrate your readers.
</p>
</dd>

<dt><b>Isolate necessarily large graphics</b></dt>
<dd>
<p>Provide a special link to large images, perhaps one that includes a
thumbnail of the graphic, thereby letting readers decide if and when
they want to spend the time downloading the full image. And since the
downloaded image isn't mixed with other document components
like inline images, it's much easier for the reader to identify
and save the image on their system's local storage for later
study. (For details on non-inline image downloads, see <a href="ch05_06.htm">Section 5.6.2, "Referencing Audio, Video, and Images"</a>.)
</p>
</dd>

<dt><b>Specify image dimensions</b></dt>
<dd>
<p>Finally, another way to improve performance is by including the
image's rectangular height and width information in its tag. By
supplying those dimensions, you eliminate the extra steps the
extended browsers must take to download, examine, and calculate an
image's space in the document. There is a downside to this
approach, however, that we explore in <a name="INDEX-749" /><a href="ch05_02.htm">Section 5.2.6.12, "Problems with height and width"</a>.<a name="INDEX-750" />
</p>
</dd>

</dl>

</div>
<a name="html4-CHP-5-SECT-2.5" /><div class="sect2">
<h3 class="sect2">5.2.5. JPEG or GIF?</h3>

<p><a name="INDEX-751" />
<a name="INDEX-752" />You may choose to use only
<a name="INDEX-753" />JPEG or
<a name="INDEX-754" /> <a name="INDEX-755" />GIF images in
your HTML documents if your sources for images or your software
toolset prefers one over the other format. Both are nearly
universally supported by today's browsers, so there
shouldn't be any user-viewing problems.
</p>
<p>Nevertheless, we recommend that you acquire the facilities to create and convert to both formats to take advantage of their unique capabilities. For instance, use GIF's transparency feature for icons and dingbats. Alternatively, use JPEG for large and colorful images for faster downloading. </p>



</div>
<a name="html4-CHP-5-SECT-2.6" /><div class="sect2">
<h3 class="sect2">5.2.6. The &lt;img&gt; Tag</h3>

<p><a name="INDEX-756" />The
<tt class="literal">&lt;img&gt;</tt> tag lets you reference and insert a
graphic image into the current text flow of your document. There is
no implied line or paragraph break before or after the
<tt class="literal">&lt;img&gt;</tt> tag, so images can be truly
"inline" with text and other content.
</p>

<a name="html4-CHP-5-SIDEBAR-2" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">&lt;img&gt;</h4>

<dl>
<dt><b>Function:</b></dt>
<dd>
<p>Inserts an image into a document</p>
</dd>


<dt><b>Attributes:</b></dt><dd>

<table border="0">
<tr><td><p>ALIGN</p></td><td><p>ONDBLCLICK </p></td></tr>


<tr><td><p>ALT</p></td><td><p>ONERROR </p></td></tr>


<tr><td><p>BORDER</p></td><td><p>ONKEYDOWN</p></td></tr>


<tr><td><p>CLASS</p></td><td><p>ONKEYPRESS</p></td></tr>


<tr><td><p>CONTROLS <img src="figs/HTML_dingbat_I.gif"></p></td><td><p>ONKEYUP</p></td></tr>


<tr><td><p>DIR</p></td><td><p>ONLOAD </p></td></tr>


<tr><td><p>DYNSRC <img src="figs/HTML_dingbat_I.gif"></p></td><td><p>ONMOUSEDOWN</p></td></tr>


<tr><td><p>HEIGHT</p></td><td><p>ONMOUSEMOVE</p></td></tr>


<tr><td><p>HSPACE</p></td><td><p>ONMOUSEOUT</p></td></tr>


<tr><td><p>ID</p></td><td><p>ONMOUSEOVER </p></td></tr>


<tr><td><p>ISMAP</p></td><td><p>ONMOUSEUP</p></td></tr>


<tr><td><p>LANG</p></td><td><p>SRC</p></td></tr>


<tr><td><p>LONGDESC</p></td><td><p>START <img src="figs/HTML_dingbat_I.gif"></p></td></tr>


<tr><td><p>LOOP <img src="figs/HTML_dingbat_I.gif"></p></td><td><p>STYLE</p></td></tr>


<tr><td><p>LOWSRC <img src="figs/HTML_dingbat_N.gif"></p></td><td><p>TITLE</p></td></tr>


<tr><td><p>NAME <img src="figs/HTML_dingbat_N.gif"></p></td><td><p>USEMAP</p></td></tr>


<tr><td><p>ONABORT </p></td><td><p>VSPACE</p></td></tr>


<tr><td><p>ONCLICK </p></td><td><p>WIDTH</p></td></tr>

</table></dd></dl>
<dl>
<dt><b>End tag:</b></dt>
<dd>
<p>None in HTML; &lt;/img&gt; or &lt;img ... /&gt; with XHTML</p>
</dd>

</dl>

<dl>
<dt><b>Contains:</b></dt>
<dd>
<p>Nothing</p>
</dd>

</dl>

<dl>
<dt><b>Used in:</b></dt>
<dd>
<p><em class="emphasis">text</em></p>
</dd>

</dl>
</td></tr></table></blockquote>
<p>The format of the image itself is not defined by the HTML or XHTML standard, although the popular graphical browsers support GIF and JPEG images. The standards don't specify or restrict the size or dimensions of the image, either. Images may have any number of colors, but how those colors are rendered is highly browser-dependent.</p>


<p><a name="INDEX-757" />Image presentation in general is
very browser-specific. Images may be ignored by nongraphical
browsers. Browsers operating in a constrained environment may modify
the image size or complexity. And users, particularly those with slow
network connections, may choose to defer image loading altogether.
Accordingly, you should make sure your documents make sense and are
useful, even if the images are completely removed.
</p>

<a name="html4-CHP-5-SECT-2.6.1" /><div class="sect3">
<h3 class="sect3">5.2.6.1. The src attribute</h3>

<p>The <tt class="literal">src</tt><a name="INDEX-758" /> attribute for the
<tt class="literal">&lt;img&gt;</tt> tag is required (unless you use
<tt class="literal">dynsrc</tt> with Internet Explorer-based movies; see
section 5.2.7.1). Its value is the image file's URL, either
absolute or relative to the document referencing the image. To
unclutter their document storage, authors typically collect image
files into a separate folder they often name something like
"pics" or "images." <a href="ch06_02.htm">Section 6.2, "Referencing Documents: The URL"</a>
</p>

<p>For example, this HTML fragment places an image of a famous kumquat
packing plant into the narrative text (see <a href="ch05_02.htm">Figure 5-8</a>):
</p>

<blockquote><pre class="code">Here we are, on day 17 of the tour, in front of the kumquat
packing plant:
&lt;p&gt;
&lt;img src="pics/packing_plant.gif"&gt;
&lt;p&gt;
What an exciting moment, to see the boxes of fruit moving</pre></blockquote>

<p>In the example, the paragraph (<tt class="literal">&lt;p&gt;</tt>) tags
surrounding the <tt class="literal">&lt;img&gt;</tt> tag cause the browser
to render the image by itself with some vertical space after the
preceding text and before the trailing text. Text may also abut the
image, as we describe in <a href="ch05_02.htm">Section 5.2.6.4, "The align attribute"</a>.

</p>

<a name="html4-CHP-5-FIG-8" /><div class="figure"><img height="261" alt="Figure 5-8" src="figs/xhtm.0508.gif" width="352" /></div><h4 class="objtitle">Figure 5-8. Image integrated with text</h4>

</div>

<a name="html4-CHP-5-SECT-2.6.2" /><div class="sect3">
<h3 class="sect3">5.2.6.2. The lowsrc attribute</h3>

<p><a name="INDEX-759" /> <a name="INDEX-760" />To the benefit of users,
particularly those with slow Internet connections, Netscape provides
the <tt class="literal">lowsrc</tt> companion to the <tt class="literal">src</tt>
attribute in the <tt class="literal">&lt;img&gt;</tt> tag as a way to speed
up document rendering. The <tt class="literal">lowsrc</tt>
attribute's value, like <tt class="literal">src</tt>, is the URL of
an image file that the browser loads and displays when it first
encounters the <tt class="literal">&lt;img&gt;</tt> tag. When the document
has been completely loaded and can be read by the user, Netscape
retrieves the image specified by the <tt class="literal">src</tt>
attribute.
</p>

<p>The <tt class="literal">lowsrc</tt> image is a low-resolution, abbreviated
version of the final <tt class="literal">src</tt> image that loads faster
by comparison to quickly give the reader an idea of its content until
the final, higher-resolution image eventually replaces it onscreen.
But the <tt class="literal">lowsrc</tt> attribute can also be used for some
very special effects.
</p>

<p>Netscape uses the <tt class="literal">lowsrc</tt> image's dimensions
to reserve space in the document for both the
<tt class="literal">lowsrc</tt> and <tt class="literal">src</tt> images, unless
you explicitly allocate that space with the <tt class="literal">height</tt>
and <tt class="literal">width</tt> attributes described later in this
chapter. Hence, if the dimensions of the image specified in the
<tt class="literal">src</tt> attribute are different than those for the
<tt class="literal">lowsrc</tt> image or your explicitly included height
and width values, the <tt class="literal">src</tt> image will be reduced,
enlarged, stretched, or compressed to fit in the allotted space.
Moreover, the <tt class="literal">lowsrc</tt> and <tt class="literal">src</tt>
images needn't be identical, so you might take advantage of the
delayed rendering of the <tt class="literal">src</tt> image for simple
animation.
</p>

<p>The <tt class="literal">lowsrc</tt> attribute is for Netscape only. Other
browsers ignore it and only load the image specified by the
<tt class="literal">src</tt> attribute. Netscape won't load either
image if the user chooses not to auto-load images. In that case, both
images will load in order when the user clicks the images button or
clicks the image icon placeholder. No browser loads the
<tt class="literal">lowsrc</tt> image only; you must include a
<tt class="literal">src</tt> image, otherwise nothing will appear except
the missing image icon.<a name="INDEX-761" /> <a name="INDEX-762" />
</p>

</div>

<a name="html4-CHP-5-SECT-2.6.3" /><div class="sect3">
<h3 class="sect3">5.2.6.3. The alt and longdesc attributes</h3>

<p>The <tt class="literal">alt</tt><a name="INDEX-763" />
<a name="INDEX-764" /> <a name="INDEX-765" /> attribute specifies alternative text
the browser may show if image display is not possible or disabled by
the user. It's an option, but one we highly recommend you
exercise for most images in your document. This way, if the image is
not available, the user still has some indication of what it is
that's missing.
</p>

<p>In addition, the latest browsers display the alternative description
in a text box when users pass their mouse over the image.
Accordingly, you might embed short, parenthetical information that
pops up when users pass over a small, inline icon, such as shown in
<a href="ch05_02.htm">Figure 5-9</a>.
</p>

<a name="html4-CHP-5-FIG-9" /><div class="figure"><img height="167" alt="Figure 5-9" src="figs/xhtm.0509.gif" width="414" /></div><h4 class="objtitle">Figure 5-9.  Contemporary graphical browers display <tt class="literal">alt</tt> in a temporary pop-up window</h4>

<p>The value for the <tt class="literal">alt</tt> attribute is a text string
of up to 1024 characters if you include spaces or other punctuation.
The string must be enclosed in quotation marks. The alternative text
may contain entity references to special characters, but it may not
contain any other sort of markup; in particular, no style tags are
allowed.
</p>

<p>Graphical browsers don't normally display the
<tt class="literal">alt</tt> attribute if the image is available and the
user has enabled picture downloading. Otherwise, they insert the
<tt class="literal">alt</tt> attribute's text as a label next to an
image placeholder icon. Well-chosen <tt class="literal">alt</tt> labels
thereby additionally support those users with a graphical browser who
have disabled their automatic image download because of a slow
connection to the Web.
</p>

<p><a name="INDEX-766" /> <a name="INDEX-767" />
<a name="INDEX-768" />Nongraphical, text-only browsers like Lynx
put the <tt class="literal">alt</tt> text directly into the content flow
just like any other text element. So, when used effectively, the
<tt class="literal">alt</tt> tag sometimes can transparently substitute for
missing images. (Your text-only browser users will appreciate not
being constantly reminded of their second-class web citizenship.) For
example, consider using an asterisk as the <tt class="literal">alt</tt>
attribute alternative to a special bullet icon:
</p>

<blockquote><pre class="code">&lt;h3&gt;&lt;img src="pics/fancy_bullet.gif" alt="*"&gt;Introduction&lt;/h3&gt;</pre></blockquote>

<p>A graphical browser displays the bullet image, while in a
nongraphical browser the <tt class="literal">alt</tt> asterisk takes the
place of the missing bullet. Similarly, use <tt class="literal">alt</tt>
text to replace special image bullets for list items. For example,
the following code:
</p>

<blockquote><pre class="code">&lt;ul&gt;
  &lt;li&gt; Kumquat recipes &lt;img src="pics/new.gif" alt="(New!)"&gt;
  &lt;li&gt; Annual harvest dates
&lt;/ul&gt;</pre></blockquote>

<p>displays the <tt class="literal">new.gif</tt> image with graphical
browsers, and the text "(New!)" with text-only browsers.
The <tt class="literal">alt</tt> attribute uses even more complex text (see
<a href="ch05_02.htm">Figure 5-10</a>):
</p>

<blockquote><pre class="code">Here we are, on day 17 of the tour, in front of the kumquat
packing plant:
&lt;p&gt;
&lt;img src="pics/packing_plant.gif"
  alt="[Image of our tour group outside the main packing plant]"&gt;
&lt;p&gt;
What an exciting moment, to see the boxes of fruit moving</pre></blockquote>

<a name="html4-CHP-5-FIG-10" /><div class="figure"><img height="186" alt="Figure 5-10" src="figs/xhtm.0510.gif" width="481" /></div><h4 class="objtitle">Figure 5-10. Text-only browsers like Lynx display an image's alt attribute text</h4>

<p>The <tt class="literal">longdesc</tt><a name="INDEX-769" /> attribute is similar to the
<tt class="literal">alt</tt> attribute, but allows for larger descriptions.
The value of <tt class="literal">longdesc</tt> is the URL of a document
containing a description of the image. If you have a description
longer than 1024 characters, use the <tt class="literal">longdesc</tt>
attribute to link to it. Neither HTML 4 nor XHTML specify what the
content of the description must be, nor do any browsers currently
implement <tt class="literal">longdesc</tt>; all bets are off when deciding
how to create those long descriptions.<a name="INDEX-770" /> <a name="INDEX-771" /> <a name="INDEX-772" />
</p>

</div>

<a name="html4-CHP-5-SECT-2.6.4" /><div class="sect3">
<h3 class="sect3">5.2.6.4. The align attribute</h3>
<p><a name="INDEX-773" />
<a name="INDEX-774" />
<a name="INDEX-775" />The standards don't define a default alignment for images with respect to other text and images in the same line of text: you can't always predict how the text and images will look.<a href="#FOOTNOTE-32">[32]</a> HTML images normally appear in line with a single line of text. Common print media like magazines wrap text around images, with several lines next to and abutting the image, not just a single line.</p><blockquote class="footnote">
<a name="FOOTNOTE-32" /><p>[32]Most of the popular graphical browsers insert an image so its base aligns with the baseline of the text -- the same alignment specified by the attribute value of <tt class="literal">bottom</tt>. But document designers should assume that alignment varies between browsers and always include the desired type of image alignment.</p>
</blockquote>


<p>Fortunately, document designers can exert some control over the
alignment of images with the surrounding text through the
<tt class="literal">align</tt> attribute for the
<tt class="literal">&lt;img&gt;</tt> tag. The HTML and XHTML standards
specify five image-alignment attribute values:
<tt class="literal">left</tt>, <tt class="literal">right</tt>,
<tt class="literal">top</tt>, <tt class="literal">middle</tt>, and
<tt class="literal">bottom</tt>. The <tt class="literal">left</tt> and
<tt class="literal">right</tt> values flow any subsequent text around the
image, which is moved to the corresponding margin; the remaining
three align the image vertically with respect to the surrounding
text. Netscape adds four more vertical alignment attributes to that
list: <tt class="literal">texttop</tt>, <tt class="literal">absmiddle</tt>,
<tt class="literal">baseline</tt>, and <tt class="literal">absbottom</tt>, while
Internet Explorer adds <tt class="literal">center</tt>.
</p>

<p>The following list contains descriptions for the inline image
alignments; see <a href="ch05_02.htm">Figure 5-11</a> for examples.
</p>

<a name="html4-CHP-5-FIG-11" /><div class="figure"><img height="495" alt="Figure 5-11" src="figs/xhtm.0511.gif" width="459" /></div><h4 class="objtitle">Figure 5-11. Standard and browser-extended inline image alignments with text</h4>

<dl>
<dt><b><tt class="literal">top</tt></b></dt>
<dd>
<p><a name="INDEX-776" />
<a name="INDEX-777" />The top of the
image is aligned with the top edge of the tallest item in the current
line of text. If there are no other images in the current line, the
top of the image is aligned with the top of the text.
</p>
</dd>

<dt><b><tt class="literal">texttop</tt> </b></dt>
<dd>
<p><a name="INDEX-778" />
<a name="INDEX-779" />The
<tt class="literal">align=texttop</tt> attribute and value tells Netscape
to align the top of the image with the top of the tallest text item
in the current line. It is different from the <tt class="literal">top</tt>
option, which aligns the top of the image with the top of the tallest
item, image or text, in the current line. If the line contains no
other images that extend above the top of the text,
<tt class="literal">texttop</tt> and <tt class="literal">top</tt> have the same
effect.
</p>
</dd>

<dt><b><tt class="literal">middle</tt></b></dt>
<dd>
<p><a name="INDEX-780" />
<a name="INDEX-781" />Netscape and
Internet Explorer treat the <tt class="literal">middle</tt> image alignment
value differently: Netscape aligns the middle of the image to the
baseline of the text, regardless of other inline elements, such as
another inline image (<a href="ch05_02.htm">Figure 5-12</a>). Internet
Explorer aligns the middle of the image to the middle of the tallest
item in the current line, text or image (<a href="ch05_02.htm">Figure 5-13</a>). Notice the alignments and differences in
<a href="ch05_02.htm">Figure 5-12</a> and <a href="ch05_02.htm">Figure 5-13</a>,
particularly when only one image contains the
<tt class="literal">align</tt> attribute. Both figures display the HTML
fragment:
</p>

<blockquote><pre class="code">Line of text  
&lt;img src="pics/horiz.gif" align=middle&gt;
&lt;img src="pics/vert.gif"&gt;
goes on ...
&lt;br clear=left&gt;
&lt;p&gt;
Line of text
&lt;img src="pics/horiz.gif" align=middle&gt;
&lt;img src="pics/vert.gif" align=middle&gt;
goes on ...</pre></blockquote>

<p>Also note that Internet Explorer Version 3 and later treats
<tt class="literal">middle</tt>, <tt class="literal">absmiddle</tt>, and
<tt class="literal">center</tt> the same, whereas earlier Internet Explorer
versions and Netscape distinguish between <tt class="literal">middle</tt>
and <tt class="literal">absmiddle</tt> alignments. (If you are confused as
to exactly what each alignment value means, please raise your
hand.) 
</p>
</dd>

</dl>

<a name="html4-CHP-5-FIG-12" /><div class="figure"><img height="261" alt="Figure 5-12" src="figs/xhtm.0512.gif" width="303" /></div><h4 class="objtitle">Figure 5-12. Netscape aligns middle of image to baseline of text</h4>

<a name="html4-CHP-5-FIG-13" /><div class="figure"><img height="239" alt="Figure 5-13" src="figs/xhtm.0513.gif" width="302" /></div><h4 class="objtitle">Figure 5-13. Internet Explorer aligns middle of image to middle of tallest line element</h4>

<dl>
<dt><b><tt class="literal">absmiddle</tt></b></dt>
<dd>
<p>If you set the <tt class="literal">align</tt> attribute of the
<tt class="literal">&lt;img&gt;</tt> tag to <tt class="literal">absmiddle</tt>,
the browser will fit the absolute middle of the image to the absolute
middle of the current line. For Netscape and early versions of
Internet Explorer, this is different from the common
<tt class="literal">middle</tt> option, which aligns the middle of the
image with the baseline of the current line of text (the bottom of
the characters). Version 3 and later of Internet Explorer, on the
other hand, treat <tt class="literal">absmiddle</tt> the same as
<tt class="literal">middle</tt> and <tt class="literal">center</tt>.
</p>
</dd>

<dt><b><tt class="literal">center</tt></b></dt>
<dd>
<p>The <tt class="literal">center</tt><a name="INDEX-782" /> image alignment value gets treated
the same as <tt class="literal">absmiddle</tt> by both Internet Explorer
and Netscape, but note that the browsers treat
<tt class="literal">absmiddle</tt> and <tt class="literal">middle</tt>
differently.
</p>
</dd>

<dt><b><tt class="literal">bottom</tt> and <tt class="literal">baseline</tt><a name="INDEX-783" />
<a name="INDEX-784" />
<a name="INDEX-785" />
<a name="INDEX-786" />
<a name="INDEX-787" />
<a name="INDEX-788" /> (default)</b></dt>
<dd>
<p>With Netscape and early versions of Internet Explorer, the
<tt class="literal">bottom</tt> and <tt class="literal">baseline</tt> image
alignment values have the same effect as if you didn't include
any alignment attribute at all: the browsers align the bottom of the
image in the same horizontal plane as the baseline of the text. This
is not to be confused with the <tt class="literal">absbottom</tt>, which
takes into account letter "descenders" like the tail on
the lowercase "y." Internet Explorer Version 3 and later,
on the other hand, treat <tt class="literal">bottom</tt> the same as
<tt class="literal">absbottom</tt>. (Did we see a hand up in the audience?)
</p>
</dd>

<dt><b><tt class="literal">absbottom</tt></b></dt>
<dd>
<p><a name="INDEX-789" />
<a name="INDEX-790" />The
<tt class="literal">align=absbottom</tt> attribute tells the browsers to
align the bottom of the image with the true bottom of the current
line of text. The true bottom is the lowest point in the text taking
into account descenders, even if there are no descenders in the line.
A descender is the tail on a "y," for example; the
baseline of the text is the bottom of the "v" in the
"y" character.<a name="INDEX-791" />
</p>
</dd>

</dl>

<p>Use the <tt class="literal">top</tt> or <tt class="literal">middle</tt> alignment
values for best integration of icons, dingbats, or other special
inline effects with the text content. Otherwise,
<tt class="literal">align=bottom</tt> (the default) usually gives the best
appearance. When aligning one or more images on a single line, select
the alignment that gives the best overall appearance to your
document.<a name="INDEX-792" />
<a name="INDEX-793" /> <a name="INDEX-794" />
</p>

</div>

<a name="html4-CHP-5-SECT-2.6.5" /><div class="sect3">
<h3 class="sect3">5.2.6.5. Wrapping text around images</h3>

<p><a name="INDEX-795" /> <a name="INDEX-796" />
<a name="INDEX-797" /> <a name="INDEX-798" />The <tt class="literal">left</tt> and
<tt class="literal">right</tt> image alignment values tell the browser to
place an image against the left or right margin, respectively, of the
current text flow. The browser then renders subsequent document
content in the remaining portion of the flow adjacent to the image.
The net result is that the document content following the image gets
wrapped around the image.
</p>

<blockquote><pre class="code">&lt;img src="pics/kumquat.gif" align=left&gt;
The kumquat is the smallest of the citrus fruits, similar in appearance to a 
tiny orange. The similarity ends with its appearance, however. While oranges 
are generally sweet, kumquats are extremely bitter. Theirs is an acquired taste, to be sure.</pre></blockquote>

<p><a href="ch05_02.htm">Figure 5-14</a> shows text flow around a left-aligned
image.
</p>

<a name="html4-CHP-5-FIG-14" /><div class="figure"><img height="200" alt="Figure 5-14" src="figs/xhtm.0514.gif" width="439" /></div><h4 class="objtitle">Figure 5-14. Text flow around a left-aligned image</h4>

<p>You can place images against both margins simultaneously (<a href="ch05_02.htm">Figure 5-15</a>) and the text will run down the middle of the
page between them:
</p>

<blockquote><pre class="code">&lt;img src="pics/kumquat.gif" align=left&gt;
&lt;img src="pics/tree.gif" align=right&gt;
The kumquat is the smallest of the citrus fruits, similar in appearance to a 
tiny orange. The similarity ends with its appearance, however. While oranges 
are generally sweet, kumquats are extremely bitter. Theirs is an acquired taste, to be sure.</pre></blockquote>

<a name="html4-CHP-5-FIG-15" /><div class="figure"><img height="199" alt="Figure 5-15" src="figs/xhtm.0515.gif" width="459" /></div><h4 class="objtitle">Figure 5-15. Running text between left- and right-aligned images</h4>

<p>While text is flowing around an image, the left (or right) margin of
the page is temporarily redefined to be adjacent to the image as
opposed to the edge of the page. Subsequent images with the same
alignment will stack up against each other. The following source
fragment achieves that staggered image effect:
</p>

<blockquote><pre class="code">&lt;img src="pics/marcia.gif" align=left&gt;
Marcia!
&lt;br&gt;
&lt;img src="pics/jan.gif" align=left&gt;
Jan!
&lt;br&gt;
&lt;img src="pics/cindy.gif" align=left&gt;
Cindy!</pre></blockquote>

<p>The results of this example are shown in <a href="ch05_02.htm">Figure 5-16</a>.</p>

<a name="html4-CHP-5-FIG-16" /><div class="figure"><img height="196" alt="Figure 5-16" src="figs/xhtm.0516.gif" width="403" /></div><h4 class="objtitle">Figure 5-16. Three very lovely girls</h4>

<p>When the text flows beyond the bottom of the image, the margin
returns to its former position, typically at the edge of the browser
window.<a name="INDEX-799" />
<a name="INDEX-800" />
</p>

</div>

<a name="html4-CHP-5-SECT-2.6.6" /><div class="sect3">
<h3 class="sect3">5.2.6.6. Centering an image</h3>

<p><a name="INDEX-801" />
<a name="INDEX-802" />
<a name="INDEX-803" />Have
you noticed that you can't horizontally center an image in the
browser window with the <tt class="literal">align</tt> attribute? The
<tt class="literal">middle</tt> and <tt class="literal">absmiddle</tt> values
center the image vertically with the current line, but the image is
horizontally justified depending on what content comes before it in
the current flow and the dimensions of the browser window.
</p>

<p>You can horizontally center an inline image in the browser window,
but only if it's isolated from surrounding content, such as by
paragraph, division, or line break tags. Then, either use the
<tt class="literal">&lt;center&gt;</tt> tag, or use the
<tt class="literal">align=center</tt> attribute or center-justified style
in the paragraph or division tag to center the image. For example:
</p>

<blockquote><pre class="code">Kumquats are tasty treats
&lt;br&gt;
&lt;center&gt;
&lt;img src="pics/kumquat.gif"&gt; 
&lt;/center&gt;
that everyone should strive to eat!</pre></blockquote>

<p>Use the paragraph tag with its <tt class="literal">align=center</tt>
attribute if you want some extra space above and below the centered
image:
</p>

<blockquote><pre class="code">Kumquats are tasty treats
&lt;p align=center&gt;
&lt;img src="pics/kumquat.gif"&gt; 
&lt;/p&gt;
that everyone should strive to eat!</pre></blockquote>

</div>

<a name="html4-CHP-5-SECT-2.6.7" /><div class="sect3">
<h3 class="sect3">5.2.6.7. Align is deprecated</h3>

<p>The HTML 4 and XHTML standards have deprecated the
<tt class="literal">align</tt><a name="INDEX-804" /> attribute for all tags, including
<tt class="literal">&lt;img&gt;</tt>, in deference to style sheets.
Nonetheless, the attribute is very popular among HTML authors and
remains well supported by the popular browsers. So, while we do
expect that someday <tt class="literal">align</tt> will disappear, it
won't be anytime soon. Just don't say we didn't
warn you.
</p>

</div>

<a name="html4-CHP-5-SECT-2.6.8" /><div class="sect3">
<h3 class="sect3">5.2.6.8. The border attribute</h3>

<p><a name="INDEX-805" /> <a name="INDEX-806" />
<a name="INDEX-807" />
<a name="INDEX-808" />Browsers normally render images that
also are hyperlinks (an image included in an
<tt class="literal">&lt;a&gt;</tt> tag) with a two-pixel-wide colored
border, indicating to the reader that the image can be selected to
visit the associated document. Use the <tt class="literal">border</tt>
attribute and a pixel-width thickness value to remove
(<tt class="literal">border=0</tt>) or widen that image border. Be aware
that this attribute, too, is deprecated in HTML 4 and XHTML in lieu
of style sheets, but continues to be well supported by the popular
browsers.
</p>
<p><a href="ch05_02.htm">Figure 5-17</a> shows you the thick and thin of image borders, as rendered by Internet Explorer from the following XHTML source:</p>


<blockquote><pre class="code">&lt;a href="test.html"&gt;
 &lt;img src="pics/kumquat.gif" border="1" /&gt;
&lt;/a&gt;
&lt;a href="test.html"&gt;
  &lt;img src="pics/kumquat.gif" border="2" /&gt;
&lt;/a&gt;
&lt;a href="test.html"&gt;
  &lt;img src="pics/kumquat.gif" border="4" /&gt;
&lt;/a&gt;
&lt;a href="test.html"&gt;
  &lt;img src="pics/kumquat.gif" border="8" /&gt;
&lt;/a&gt;</pre></blockquote>

<a name="html4-CHP-5-FIG-17" /><div class="figure"><img height="292" alt="Figure 5-17" src="figs/xhtm.0517.gif" width="436" /></div><h4 class="objtitle">Figure 5-17. The thick and thin of image borders</h4>

</div>

<a name="html4-CHP-5-SECT-2.6.9" /><div class="sect3">
<h3 class="sect3">5.2.6.9. Removing the image border</h3>

<p>You can eliminate the border around an image hyperlink altogether
with the <tt class="literal">border=0</tt> attribute within the
<tt class="literal">&lt;img&gt;</tt> tag. For some images, particularly
image maps, the absence of a border can improve the appearance of
your pages. Images that are clearly link buttons to other pages may
also look best without a border.
</p>

<p>Be careful, though, that by removing the border, you don't
diminish your page's usability. No border means you've
removed a common visual indicator of a link, making it less easy for
your readers to find the links on the page. Browsers will change the
mouse cursor as readers pass it over an image that is a hyperlink,
but you should not assume they will, nor should you make readers test
your borderless images to find hidden links.
</p>

<p>We strongly recommend that you use some additional way with
borderless images to let your readers know to click the images. Even
including simple text instructions will go a long way to making your
pages more accessible to readers.<a name="INDEX-809" /> <a name="INDEX-810" /> <a name="INDEX-811" /> <a name="INDEX-812" />
</p>

</div>

<a name="html4-CHP-5-SECT-2.6.10" /><div class="sect3">
<h3 class="sect3">5.2.6.10. The height and width attributes</h3>
<p><a name="INDEX-813" />
<a name="INDEX-814" />
<a name="INDEX-815" />
<a name="INDEX-816" />Ever watch the display of a page's contents shift around erratically while the document is loading? That happens because the browser readjusts the page layout to accommodate each loaded image. The browser determines the size of an image and, hence, the rectangular space to reserve for it in the display window, by retrieving the image file and extracting its embedded height and width specifications. The browser then adjusts the page's display layout to insert that picture in the display.<a href="#FOOTNOTE-33">[33]</a> This is not the most efficient way to render a document, since the browser must sequentially examine each image file and calculate its screen space before rendering adjacent and subsequent document content. That can significantly increase the amount of time it takes to render the document and disrupt reading by the user. </p><blockquote class="footnote">
<a name="FOOTNOTE-33" /><p>[33]Another reminder that images are separate files, which are loaded individually and in addition to the source document.</p>
</blockquote>


<p>A more efficient way for authors to specify an image's
dimensions is with the <tt class="literal">height</tt> and
<tt class="literal">width</tt> <tt class="literal">&lt;img&gt;</tt> attributes.
That way, the browser can reserve space before actually downloading
an image, speeding document rendering and eliminating the content
shifting. Both attributes require an integer value that indicates the
image size in pixels; and the order in which they appear in the
<tt class="literal">&lt;img&gt;</tt> tag is not important.
</p>

</div>

<a name="html4-CHP-5-SECT-2.6.11" /><div class="sect3">
<h3 class="sect3">5.2.6.11. Resizing and flood-filling images</h3>

<p><a name="INDEX-817" />
<a name="INDEX-818" />A
hidden feature of the <tt class="literal">height</tt> and
<tt class="literal">width</tt> attributes is that you don't need to
specify the actual image dimensions; the attribute values can be
larger or smaller than the actual size of the image. The browser
automatically scales the image to fit the predefined space. This
gives you a down-and-dirty way of creating thumbnail versions of
large images and a way to enlarge very small pictures. Be careful,
though: the browser still must download the entire file, no matter
what its final rendered size is, and you will distort an image if you
don't retain its original height versus width proportions.
</p>

<p><a name="INDEX-819" />Another
trick with <tt class="literal">height</tt> and <tt class="literal">width</tt>
provides an easy way to flood-fill areas of your page and can also
improve document performance. Suppose you want to insert a colored
bar across your document.<a href="#FOOTNOTE-34">[34]</a></p><blockquote class="footnote"> <a name="FOOTNOTE-34" /><p>[34]This is one way to create
colored horizontal rules in Netscape 3 or earlier versions, which
don't support the <tt class="literal">color</tt> attribute of the
<tt class="literal">&lt;hr&gt;</tt> tag.</p> </blockquote>

<p>Rather than
create an image to the full dimensions, create one that is just one
pixel high and wide and set it to the desired color. Then use the
<tt class="literal">height</tt> and <tt class="literal">width</tt> attributes to
scale it to the larger size:
</p>

<blockquote><pre class="code">&lt;img src="pics/one-pixel.gif" width=640 height=20&gt;</pre></blockquote>

<p>The smaller image downloads much faster than a full-scale image, and
the <tt class="literal">width</tt> and <tt class="literal">height</tt> attributes
create the desired bar after the tiny image arrives at the browser
(see <a href="ch05_02.htm">Figure 5-18</a>).
</p>

<a name="html4-CHP-5-FIG-18" /><div class="figure"><img height="121" alt="Figure 5-18" src="figs/xhtm.0518.gif" width="455" /></div><h4 class="objtitle">Figure 5-18. This bar was made from a one-pixel image</h4>

<p>One last trick with the <tt class="literal">width</tt> attribute is to use
a percentage value instead of an absolute pixel value. This causes
the browser to scale the image to a percentage of the document window
width. Thus, to create a colored bar 20 pixels high and the width of
the window, you could use:
</p>

<blockquote><pre class="code">&lt;img src="pics/one-pixel.gif" width="100%" height=20&gt;</pre></blockquote>

<p>As the document window changes size, the image will change size as
well.
</p>

<p>If you provide a percentage <tt class="literal">width</tt> and omit the
<tt class="literal">height</tt>, the browser will retain the image's
aspect ratio as it grows and shrinks. This means that the height will
always be in the correct proportion to the width and the image will
display without distortion.
</p>

</div>

<a name="html4-CHP-5-SECT-2.6.12" /><div class="sect3">
<h3 class="sect3">5.2.6.12. Problems with height and width</h3>

<p><a name="INDEX-820" />Although
the <tt class="literal">height</tt> and <tt class="literal">width</tt> attributes
for the <tt class="literal">&lt;img&gt;</tt> tag can improve performance
and let you perform neat tricks, there is a knotty downside to using
them. The browser sets aside the specified rectangle of space to the
prescribed dimensions in the display window even if the user has
turned off automatic download of images. What the user often is left
with is a page full of semi-empty frames with meaningless picture
placeholder icons inside. The page looks terribly unfinished and is
mostly useless. Without accompanying dimensions, on the other hand,
the browser simply inserts a placeholder icon inline with the
surrounding text, so at least there's something there to read
in the display.
</p>

<p>We don't have an answer to this dilemma, other than to insist
that you use the <tt class="literal">alt</tt> attribute with some
descriptive text so that users at least know what they are missing
(see <a href="ch05_02.htm">Section 5.2.6.3, "The alt and longdesc attributes"</a>). We do recommend that you
include these size attributes because we encourage any practice that
improves network performance.<a name="INDEX-821" /> <a name="INDEX-822" /> <a name="INDEX-823" /> <a name="INDEX-824" />
</p>

</div>

<a name="html4-CHP-5-SECT-2.6.13" /><div class="sect3">
<h3 class="sect3">5.2.6.13. The hspace and vspace attributes</h3>

<p><a name="INDEX-825" />
<a name="INDEX-826" /> <a name="INDEX-827" />
<a name="INDEX-828" /> <a name="INDEX-829" />
<a name="INDEX-830" /> <a name="INDEX-831" />
<a name="INDEX-832" />
<a name="INDEX-833" />Graphical
browsers usually don't give you much space between an image and
the text around it. And unless you create a transparent image border
that expands the space between them, the typical two-pixel buffer
between an image and adjacent text is just too close for most
designers' comfort. Add the image into a hyperlink, and the
special colored border will negate any transparent buffer space you
labored to create, as well as draw even more attention to how close
the adjacent text butts up against the image.
</p>

<p>The <tt class="literal">hspace</tt> and <tt class="literal">vspace</tt>
attributes can give your images breathing room. With
<tt class="literal">hspace</tt>, you specify the number of pixels of extra
space to leave between the image and text on the left and right sides
of the image; the <tt class="literal">vspace</tt> value is the number of
pixels on the top and bottom:
</p>

<blockquote><pre class="code">&lt;img src="pics/kumquat.gif" align=left&gt;
The kumquat is the smallest of the citrus fruits, similar
in appearance to a tiny orange. The similarity ends with its
appearance, however. While oranges are generally sweet,
kumquats are extremely bitter. Theirs is an acquired taste,
to be sure. Most folks, at first taste, wonder how you could 
ever eat another, let alone enjoy it!
&lt;p&gt;
&lt;img src="pics/kumquat.gif" align=left hspace=10 vspace=10&gt;
The kumquat is the smallest of the citrus fruits, similar
in appearance to a tiny orange. The similarity ends with its
appearance, however. While oranges are generally sweet,
kumquats are extremely bitter. Theirs is an acquired taste,
to be sure. Most folks, at first taste, wonder how you could 
ever eat another, let alone enjoy it!</pre></blockquote>

<p><a href="ch05_02.htm">Figure 5-19</a> shows the difference between two wrapped
images.
</p>

<a name="html4-CHP-5-FIG-19" /><div class="figure"><img height="328" alt="Figure 5-19" src="figs/xhtm.0519.gif" width="436" /></div><h4 class="objtitle">Figure 5-19. Improve image/text interfaces with vspace and hspace extensions</h4>

<p>We're sure you'll agree that the additional space around
the image makes the text easier to read and the overall page more
attractive.<a name="INDEX-834" />
<a name="INDEX-835" /> <a name="INDEX-836" /> <a name="INDEX-837" /> <a name="INDEX-838" />
</p>

</div>

<a name="html4-CHP-5-SECT-2.6.14" /><div class="sect3">
<h3 class="sect3">5.2.6.14. The ismap and usemap attributes</h3>
<p><a name="INDEX-839" />
<a name="INDEX-840" />
<a name="INDEX-841" />
<a name="INDEX-842" />
<a name="INDEX-843" />The <tt class="literal">ismap</tt> and <tt class="literal">usemap</tt> attributes for the <tt class="literal">&lt;img&gt;</tt> tag tell the browser that the image is a special mouse-selectable visual map of one or more hyperlinks, commonly known as an <em class="emphasis">image map</em>. The <tt class="literal">ismap</tt> style of image maps, known as a <em class="emphasis">server-side</em><a name="INDEX-844" />
<a name="INDEX-845" /> image map, may be specified only within an <tt class="literal">&lt;a&gt;</tt> tag hyperlink. <a href="ch06_03.htm">Section 6.3.1, "The &lt;a&gt; Tag"</a> </p>



<p>For example:</p>

<blockquote><pre class="code">&lt;a href="/cgi-bin/images/map2"&gt; 
  &lt;img src="pics/map2.gif" ismap&gt;
&lt;/a&gt;</pre></blockquote>

<p>The browser automatically sends the x,y position of the mouse
(relative to the upper-left corner of the image) to the server when
the user clicks somewhere on the <tt class="literal">ismap</tt> image.
Special server software (the
<em class="emphasis">/cgi-bin/images/map2</em> program in the example) may
then use those coordinates to determine a response.
</p>

<p>The <tt class="literal">usemap</tt> attribute provides a
<em class="emphasis">client-side</em><a name="INDEX-846" /> <a name="INDEX-847" /> image
map mechanism that effectively eliminates server-side processing of
the mouse coordinates and its incumbent network delays and problems.
<a name="INDEX-848" />
<a name="INDEX-849" />Using
<a name="INDEX-850" /> <a name="INDEX-851" />special
<tt class="literal">&lt;map&gt;</tt><a name="INDEX-852" /> <a name="INDEX-853" />
<a name="INDEX-854" />
<a name="INDEX-855" /> and <tt class="literal">&lt;area&gt;</tt>
tags, HTML authors provide a map of coordinates for the
hyperlink-sensitive regions in the <tt class="literal">usemap</tt> image
along with related hyperlink URLs. The value of the
<tt class="literal">usemap</tt> attribute is a URL that points to that
special <tt class="literal">&lt;map&gt;</tt> section. The browser on the
user's computer translates the coordinates of a click of the
mouse on the image into some action, including loading and displaying
another document. <a href="ch06_05.htm">Section 6.5.3, "The &lt;map&gt; Tag"</a> <a href="ch06_05.htm">Section 6.5.4, "The &lt;area&gt; Tag"</a>
</p>

<p>For example, the following source specially encodes the 100 x
100-pixel <tt class="literal">map2.gif</tt> image into four segments, each
of which, if clicked by the user, links to a different document.
Notice we've included, validly, the <tt class="literal">ismap</tt>
image map processing capability in the example
<tt class="literal">&lt;img&gt;</tt> tag so that users of other,
<tt class="literal">usemap</tt>-incapable browsers have access to the
alternative, server-side mechanism to process the image map:
</p>

<blockquote><pre class="code">&lt;a href="/cgi-bin/images/map2"&gt;
  &lt;img src="pics/map2.gif" ismap usemap="#map2"&gt;
&lt;/a&gt;
... 
&lt;map name="map2"&gt;
  &lt;area coords="0,0,49,49" href="link1.html"&gt; 
  &lt;area coords="50,0,99,49" href="link2.html"&gt; 
  &lt;area coords="0,50,49,99" href="link3.html"&gt; 
  &lt;area coords="50,50,99,99" href="link4.html"&gt; 
&lt;/map&gt;</pre></blockquote>

<p>Geographical maps make excellent <tt class="literal">ismap</tt> and
<tt class="literal">usemap</tt> examples: browsing a nationwide
company's pages, for instance, the users might click on
their home towns on a map to get the addresses and phone
numbers for nearby retail outlets. The advantage of the
<tt class="literal">usemap</tt> client-side image map processing is that it
does not require a server or special server software and so, unlike
the <tt class="literal">ismap</tt> mechanism, can be used in non-web
(networkless) environments, such as local files or CD-ROM.
</p>

<p>Please read our more complete discussion of anchors and links,
including image maps within links, in <a href="ch06_05.htm">Section 6.5, "Mouse-Sensitive Images"</a>.
</p>

</div>

<a name="html4-CHP-5-SECT-2.6.15" /><div class="sect3">
<h3 class="sect3">5.2.6.15. The class, dir, event, id, lang, style, and title attributes</h3>

<p>Several nearly universal attributes give you a common way to identify
(<tt class="literal">title</tt>) and label (<tt class="literal">id</tt>) the
image tag's contents for later reference or automated
treatment, to change the contents' display characteristics
(<tt class="literal">class</tt>, <tt class="literal">style</tt>), and to
reference the language (<tt class="literal">lang</tt>) used and related
direction the text should flow (<tt class="literal">dir</tt>). And, of
course, there are all the user events that may happen in and around
the tagged contents that the browser senses and that you may react to
via an on-event attribute and some programming. <a href="ch08_01.htm">Section 8.1.1, "Inline Styles: The style Attribute"</a>   <a href="ch08_03.htm#html4-CHP-8-SECT-3">Section 8.3, "Style Classes"</a>
</p>

<p>Of these many HTML 4 and XHTML attributes,
<tt class="literal">id</tt><a name="INDEX-856" /> is the most important. It lets you
label the image for later access by a program or browser operation
(see <a href="ch12_01.htm">Chapter 12, "Executable Content"</a>). <a href="ch04_01.htm">Section 4.1.1.4, "The id attribute"</a>
</p>

<p>The remaining attributes have questionable meaning in context with
<tt class="literal">&lt;img&gt;</tt>. Granted, there are a few style sheet
options available that may influence an image's display, and a
<a name="INDEX-857" />title is
good to include, although <tt class="literal">alt</tt> is better. And
it's hard to imagine what the influence of language
(<tt class="literal">lang</tt>) or its presentation direction
(<tt class="literal">dir</tt>) might have on an image.<a name="INDEX-858" /> <a name="INDEX-859" /> <a name="INDEX-860" /> <a name="INDEX-861" /> <a name="INDEX-862" /> <a href="ch03_06.htm">Section 3.6.1.1, "The dir attribute"</a> <a href="ch03_06.htm">Section 3.6.1.2, "The lang attribute"</a> <a href="ch04_01.htm">Section 4.1.1.5, "The title attribute"</a>
</p>

</div>

<a name="html4-CHP-5-SECT-2.6.16" /><div class="sect3">
<h3 class="sect3">5.2.6.16. The name, onAbort, onError, onLoad and other event attributes</h3>

<p><a name="INDEX-863" />
<a name="INDEX-864" />There are four
<tt class="literal">&lt;img&gt;</tt> attributes currently supported by
Netscape that enable you to use JavaScript to manipulate the image.
The first is the <tt class="literal">name</tt><a name="INDEX-865" /> attribute. Now redundant with the
standard <tt class="literal">id</tt> attribute,<a href="#FOOTNOTE-35">[35]</a>
<tt class="literal">name</tt> lets you label the image so that it can be
referenced by a JavaScript applet.</p><blockquote class="footnote"> <a name="FOOTNOTE-35" /><p>[35]HTML
Version 4.01 adopts the <tt class="literal">name</tt> attribute into the
standard, even though only Netscape currently supports it with
<tt class="literal">&lt;img&gt;</tt>.</p> </blockquote> 

<p>For example:
</p>

<blockquote><pre class="code">&lt;img src="pics/kumquat.gif" name="kumquat"&gt;</pre></blockquote>

<p>lets you later refer to that picture of a kumquat as simply
"kumquat" in a JavaScript applet perhaps to erase or
otherwise modify it. You cannot individually manipulate an image with
JavaScript if it is not named or doesn't have an associated
<tt class="literal">id</tt>.
</p>

<p>The other three attributes let you provide some special JavaScript
<a name="INDEX-866" />
<a name="INDEX-867" />event handlers. The value of the
attribute is a chunk of JavaScript code, enclosed in quotation marks;
it may consist of one or more JavaScript expressions, separated by
semicolons.
</p>

<p>Netscape invokes the
<tt class="literal">onAbort</tt><a name="INDEX-868" /> event handler if the user stops
loading an image, usually by clicking the browser's
"stop" button. You might, for instance, use an
<tt class="literal">onAbort</tt> message to warn users if they stop loading
some essential image, such as an image map (see <a href="ch06_05.htm">Section 6.5, "Mouse-Sensitive Images"</a>):
</p>

<blockquote><pre class="code">&lt;img src="pics/kumquat.gif" usemap="#map1" 
onAbort="window.alert('Caution: This image contains important hyperlinks.  Please load the entire image.')"&gt;</pre></blockquote>

<p><a name="INDEX-869" />The <tt class="literal">onError</tt>
attribute is invoked if some error occurs during the loading of the
image, but not for a missing image or one that the user chose to stop
loading. Presumably, the applet could attempt to recover from the
error or load a different image in its place.
</p>

<p>Netscape executes the JavaScript code associated with the
<tt class="literal">&lt;img&gt;</tt> tag's
<tt class="literal">onLoad</tt><a name="INDEX-870" /> attribute right after the browser
successfully loads and displays the image.
</p>

<p>See <a href="ch13_03.htm">Section 13.3.3, "Exploiting Multipart Documents"</a> for more information about
JavaScript and event handlers.
</p>

</div>

<a name="html4-CHP-5-SECT-2.6.17" /><div class="sect3">
<h3 class="sect3">5.2.6.17. Combining &lt;img&gt; attributes</h3>

<p>You may combine any of the various standard and extension
<a name="INDEX-871" />attributes for images where and when they
make sense. The order for inclusion of multiple attributes in the
<tt class="literal">&lt;img&gt;</tt> tag is not important, either. Just be
careful not to use redundant attributes or you won't be able to
predict the outcome.
</p>

</div>
</div>
<a name="html4-CHP-5-SECT-2.7" /><div class="sect2">
<h3 class="sect2">5.2.7. Video Extensions</h3>

<p><a name="INDEX-872" /> <a name="INDEX-873" /> <a name="INDEX-874" /> <a name="INDEX-875" />The special
<tt class="literal">controls</tt>, <tt class="literal">dynsrc</tt>,
<tt class="literal">loop</tt>, and <tt class="literal">start</tt> attribute
extensions for the <tt class="literal">&lt;img&gt;</tt> tag are unique to
Internet Explorer and are not HTML 4 or XHTML standard attributes.
They let you embed an inline movie into the body content, just like
an image.
</p>

<p>Equivalent behavior is available in Netscape via an extension program
known as a <a name="INDEX-876" />
<a name="INDEX-877" />
<a name="INDEX-878" />plug-in. Plug-ins place an additional burden
on the user, in that each user must find and install the appropriate
plug-in before being able to view the inline video. The Internet
Explorer <tt class="literal">&lt;img&gt;</tt> tag extensions, on the other
hand, make video display an intrinsic part of the browser. <a href="ch12_02.htm">Section 12.2, "Embedded Content"</a>
</p>

<p>However, the <a name="INDEX-879" /> <a name="INDEX-880" />Internet
Explorer movie extensions currently are very limited. They are not
supported by any other browser and can be used only with Audio Video
Interleave (<a name="INDEX-881" />
<a name="INDEX-882" />AVI) formatted movie files,
since that's the player format built into Internet Explorer and
enabled through Microsoft's Windows operating system software.
Moreover, recent innovations in browser technology, objects, and
applets in particular may make Internet Explorer's approach of
extending the already overloaded <tt class="literal">&lt;img&gt;</tt> tag
obsolete.
</p>

<a name="html4-CHP-5-SECT-2.7.1" /><div class="sect3">
<h3 class="sect3">5.2.7.1. The dynsrc attribute</h3>

<p>Use the <tt class="literal">dynsrc</tt><a name="INDEX-883" />
<a name="INDEX-884" />
attribute extension in the <tt class="literal">&lt;img&gt;</tt> tag to
reference an AVI movie for inline display by Internet Explorer. Its
required value is the URL of the movie file enclosed in quotation
marks. For example, this text displays the tag and attribute for an
AVI movie file entitled <em class="emphasis">intro.avi</em>:
</p>

<blockquote><pre class="code">&lt;img dynsrc="movies/intro.avi"&gt;</pre></blockquote>

<p>The browser sets aside a video viewport in the HTML display window
and plays the movie, with audio if it's included in the clip
and if your computer is able to play audio. Internet Explorer treats
<tt class="literal">dynsrc</tt> movies similar to inline images: in line
with current body content and according to the dimension of the video
frame. And, like common images, the <tt class="literal">dynsrc</tt>
referenced movie file gets displayed immediately after download from
the server. You may change those defaults and add some user controls
with other attributes, as described later.
</p>

<p>Because all other browsers currently ignore the special Internet
Explorer attributes for movies, they may become confused by an
<tt class="literal">&lt;img&gt;</tt> tag that does not contain the
otherwise required <tt class="literal">src</tt> attribute and an image URL.
We recommend that you include the <tt class="literal">src</tt> attribute
and a valid image file URL in all <tt class="literal">&lt;img&gt;</tt>
tags, including those that reference a movie for Internet Explorer
users. The other browsers display the still image in place of the
movie; Internet Explorer does the reverse and plays the movie, but
does not display the image. Note that the order of attributes does
not matter. For example:
</p>

<blockquote><pre class="code">&lt;img dynsrc="movies/intro.avi" src="pics/mvstill.gif"&gt;</pre></blockquote>

<p>Internet Explorer loads and plays the AVI movie
<em class="emphasis">intro.avi</em>; other graphical browsers will load
and display the <em class="emphasis">mvstill.gif</em> image instead.
</p>

</div>

<a name="html4-CHP-5-SECT-2.7.2" /><div class="sect3">
<h3 class="sect3">5.2.7.2. The controls attribute</h3>

<p>Normally, Internet Explorer plays a movie inside a framed viewport
once, without any visible user controls. Although no longer supported
with Internet Explorer version 5 or later, with older versions of the browser 
the user may restart, stop,
and continue the movie by clicking inside that viewport with the
mouse. Use the
<tt class="literal">controls</tt><a name="INDEX-885" /> attribute (no value) to add visible controls
to the movie viewport so that the user may, with the mouse, play,
fast-forward, reverse, stop, and pause the movie, like on a VCR. If
the movie clip includes a soundtrack, Internet Explorer provides an
audio volume control as well. For example:
</p>

<blockquote><pre class="code">&lt;img dynsrc="movies/intro.avi" controls src="pics/mvstill.gif"&gt;</pre></blockquote>

<p>adds the various playback controls to the video window of the
<em class="emphasis">intro.avi</em> movie clip, as shown in <a href="ch05_02.htm">Figure 5-20</a>.
</p>

<a name="html4-CHP-5-FIG-20" /><div class="figure"><img height="256" alt="Figure 5-20" src="figs/xhtm.0520.gif" width="481" /></div><h4 class="objtitle">Figure 5-20. The controls attribute added video playback controls to inline movies</h4>
<p>
With Internet Explorer version 5 and later, users stop movie playback with the browser's stop button, and may restart it by right-clicking on the movie image and selecting "Play" from the dialog menu options.</p>
</div>

<a name="html4-CHP-5-SECT-2.7.3" /><div class="sect3">
<h3 class="sect3">5.2.7.3. The loop attribute</h3>

<p>Internet Explorer normally plays a movie clip from beginning to end
once after download. The
<tt class="literal">loop</tt><a name="INDEX-886" />
<a name="INDEX-887" />
attribute for the movie <tt class="literal">&lt;img&gt;</tt> tag lets you
have the clip play repeatedly for an integer number of times set by
the attribute's value, or forever if the value is
<tt class="literal">infinite</tt>. The user may still cut the loop short by
clicking on the movie image, by pressing the stop button, if given
controls (see <a href="ch05_02.htm">Section 5.2.7.2, "The controls attribute"</a>), or by moving on to another document.
</p>

<p>The following <em class="emphasis">intro.avi</em> movie clip will play
from beginning to end, then restart at the beginning and play through
to the end nine more times:
</p>

<blockquote><pre class="code">&lt;img dynsrc="movies/intro.avi" loop=10 src="pics/mvstill.gif"&gt;</pre></blockquote>

<p>Whereas the following movie will play over and over again,
incessantly:
</p>

<blockquote><pre class="code">&lt;img dynsrc="movies/intro.avi" loop=infinite src="pics/mvstill.gif"&gt;</pre></blockquote>

<p>Looping movies aren't necessarily meant to annoy. Some special
effects animations, for instance, are a sequence of repeated frames
or segments. Rather than string the redundant segments into one, long
movie that extends its download time, simply loop the single, compact
segment.
</p>

</div>

<a name="html4-CHP-5-SECT-2.7.4" /><div class="sect3">
<h3 class="sect3">5.2.7.4. The start attribute</h3>

<p><a name="INDEX-888" />Normally, an
Internet Explorer movie clip starts playing as soon as it's
downloaded. You can modify that behavior with the
<tt class="literal">start</tt> attribute in the movie's
<tt class="literal">&lt;img&gt;</tt> tag. By setting its value to
<tt class="literal">mouseover</tt>, you delay playback until the user
passes the mouse pointer over the movie viewport. The other valid
<tt class="literal">start</tt> attribute value,
<tt class="literal">fileopen</tt>, is the default: start playback just
after download. It is included because both values may be combined in
the <tt class="literal">start</tt> attribute to cause the movie to play
back automatically once after download, and then whenever the user
passes the mouse over its viewport. Add a value-separating comma,
with no intervening spaces, or else enclose them in quotes, when
combining the <tt class="literal">start</tt> attribute values.
</p>

<p>For example, our by-now-infamous <em class="emphasis">intro.avi</em> movie
will play once when its host HTML document is loaded by the user, and
whenever he or she passes the mouse over the movie's viewport:
</p>

<blockquote><pre class="code">&lt;img dynsrc="movies/intro.avi" start="fileopen,mouseover"
     src="pics/mvstill.gif"&gt;</pre></blockquote>

</div>

<a name="html4-CHP-5-SECT-2.7.5" /><div class="sect3">
<h3 class="sect3">5.2.7.5. Combining movie &lt;img&gt; attributes</h3>

<p>Treat Internet Explorer inline movies as you would any image, mixing
and matching the various movie-specific as well as the standard and
extended <tt class="literal">&lt;img&gt;</tt> tag attributes and values
supported by the browser. For example, you might align the movie (or
its image alternative, if displayed by another browser) to the right
of the browser window:
</p>

<blockquote><pre class="code">&lt;img dynsrc="movies/intro.avi" src="pics/mvstill.gif" align=right&gt;</pre></blockquote>

<p>Combining attributes to achieve a special effect is good. We also
recommend you combine attributes to give control to the user, when
appropriate. For instance, if you set up a movie to loop incessantly,
you should also include the <tt class="literal">controls</tt> attribute so
the user can stop the movie without having to leave the HTML
document.
</p>

<p>As we stated in <a href="ch05_02.htm">Section 5.2.7.4, "The start attribute"</a>, by combining attributes you can also
delay playback until the user passes the mouse over its viewport.
Magically, the movie comes alive and plays continuously:<a name="INDEX-889" /> <a name="INDEX-890" /> <a name="INDEX-891" />
</p>

<a name="INDEX-892" /><a name="INDEX-893" /><blockquote><pre class="code">&lt;img dynsrc="movies/magic.avi" start=mouseover
     loop=infinite src="pics/magic.gif"&gt;
</pre></blockquote>

</div>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch05_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch05_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">5. Rules, Images, and Multimedia</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">5.3. Document Colors and Background Images</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>