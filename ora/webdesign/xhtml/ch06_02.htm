<html><head><title>Referencing Documents: The URL (HTML &amp; XHTML: The Definitive Guide, 4th Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Chuck Musciano and Bill Kennedy" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600026XL" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="HTML &amp; XHTML: The Definitive Guide, 4th Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="HTML &amp; XHTML: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">HTML &amp; XHTML: The Definitive Guide, 4th Edition</a></td><td align="right" valign="top" width="228"><a href="ch06_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">6.2. Referencing Documents: The URL</h2>

<p><a name="INDEX-1026" />As we discussed
earlier, every document on the World Wide Web has a unique address.
(Imagine the chaos if they didn't.) The document's
address is known as its <em class="emphasis">uniform resource locator</em>
(URL).<a href="#FOOTNOTE-37">[37]</a>
</p><blockquote class="footnote"> <a name="FOOTNOTE-37" /><p>[37]"URL" usually is pronounced
"you are ell," not "earl."</p> </blockquote>

<p>Several tags include a URL attribute value, including hyperlinks,
inline images, and forms. All use the same URL syntax to specify the
location of a web resource, regardless of the type or content of that
resource. That's why it's known as a
<em class="emphasis">uniform</em> resource locator.
</p>

<p>Since they can be used to represent almost any resource on the
Internet, URLs come in a variety of flavors. All URLs, however, have
the same top-level syntax:
</p>

<blockquote><pre class="code"><em class="replaceable">scheme</em>:<em class="replaceable">scheme_specific_part</em></pre></blockquote>

<p>The <em class="emphasis">scheme</em><a name="INDEX-1027" /> describes the kind of object the URL
references; the <em class="emphasis">scheme_specific_part</em> is, well,
the part that is peculiar to the specific scheme. The important thing
to note is that the <em class="emphasis">scheme</em> is always separated
from the <em class="emphasis">scheme_specific_part</em> by a colon with no
intervening spaces.
</p>

<a name="html4-CHP-6-SECT-2.1" /><div class="sect2">
<h3 class="sect2">6.2.1. Writing a URL</h3>

<p>Write URLs using the displayable characters in the US-ASCII character
set. For example, surely you have heard what has become annoyingly
common on the radio for an announced business website, "h, t,
t, p, colon, slash, slash, w, w, w, dot, blah-blah, dot, com."
That's a simple URL, written:
</p>

<blockquote><pre class="code">http://www.blah-blah.com</pre></blockquote>

<p>If you need to use a character in a URL that is not part of this
character set, you must encode the character using a special
notation. The encoding notation replaces the desired character with
three characters: a <a name="INDEX-1028" /> <a name="INDEX-1029" /> <a name="INDEX-1030" /> <a name="INDEX-1031" />percent sign and two hexadecimal
digits whose value corresponds to the position of the character in
the ASCII character set.
</p>

<p>This is easier than it sounds. One of the most common special
characters is the space (Macintosh owners, take special notice),
whose position in the character set is 20 hexadecimal. You
can't type a space in a URL (well, you can, but it won't
work). Rather, replace spaces in the URL with <tt class="literal">%20</tt>:
</p>

<blockquote><pre class="code">http://www.kumquat.com/new%20pricing.html</pre></blockquote>

<p>This URL actually retrieves a document named <em class="emphasis">new
pricing.html</em> from the <em class="emphasis">www.kumquat.com</em>
server.
</p>

<a name="html4-CHP-6-SECT-2.1.1" /><div class="sect3">
<h3 class="sect3">6.2.1.1. Handling reserved and unsafe characters</h3>

<p><a name="INDEX-1032" />
<a name="INDEX-1033" />
<a name="INDEX-1034" />In addition to the nonprinting
characters, you'll need to encode reserved and unsafe
characters in your URLs as well.
</p>

<p>Reserved characters are those that have a specific meaning within the
URL itself. For example, the <a name="INDEX-1035" />
<a name="INDEX-1036" />slash character
separates elements of a pathname within a URL. If you need to include
a slash in a URL that is not intended to be an element separator,
you'll need to encode it as <tt class="literal">%2F:</tt><a href="#FOOTNOTE-38">[38]</a>
</p><blockquote class="footnote">
<a name="FOOTNOTE-38" /><p>[38]Hexadecimal numbering is based on 16 characters:
through 9 followed by A through F, which in decimal are equivalent to
values
through 15. Also, letter case for these extended values is not
significant; "a" (10 decimal) is the same as
"A", for example.</p> </blockquote>

<blockquote><pre class="code">http://www.calculator.com/compute?3%2f4</pre></blockquote>

<p>This URL actually references the resource named
<em class="emphasis">compute</em> on the
<em class="emphasis">www.calculator.com</em> server and passes the string
<tt class="literal">3/4</tt> to it, as delineated by the
<a name="INDEX-1037" /> <a name="INDEX-1038" />question mark
(<tt class="literal">?</tt>). Presumably, the resource is a server-side
program that performs some arithmetic function on the passed value
and returns a result.
</p>

<p>Unsafe characters are those that have no special meaning within the
URL, but may have a special meaning in the context in which the URL
is written. For example, double quotes
(<tt class="literal">""</tt><a name="INDEX-1039" /> <a name="INDEX-1040" />) delimit URL attribute values in tags.
If you were to include a double quotation mark directly in a URL, you
would probably confuse the browser. Instead, you should encode the
double quotation mark as <tt class="literal">%22</tt> to avoid any possible
conflict.
</p>

<p><a name="INDEX-1041" /> <a name="INDEX-1042" />
<a name="INDEX-1043" /> <a name="INDEX-1044" />
<a name="INDEX-1045" />Other reserved and unsafe characters that
should always be encoded are shown in <a href="ch06_02.htm">Table 6-1</a>.
</p>

<a name="html4-CHP-6-TABLE-1" /><h4 class="objtitle">Table 6-1. Reserved and Unsafe Characters and Their URL Encodings </h4><table border="1">





<tr>
<th>
<p>Character</p>
</th>
<th>
<p>Description</p>
</th>
<th>
<p>Usage</p>
</th>
<th>
<p>Encoding</p>
</th>
</tr>


<tr>
<td>
<blockquote><pre class="code">;</pre></blockquote>
</td>
<td>
<p>Semicolon</p>
</td>
<td>
<p>Reserved</p>
</td>
<td>
<p><tt class="literal">%3B</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">/</pre></blockquote>
</td>
<td>
<p>Slash</p>
</td>
<td>
<p>Reserved</p>
</td>
<td>
<p><tt class="literal">%2F</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">?</pre></blockquote>
</td>
<td>
<p>Question mark</p>
</td>
<td>
<p>Reserved</p>
</td>
<td>
<p><tt class="literal">%3F</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">:</pre></blockquote>
</td>
<td>
<p>Colon</p>
</td>
<td>
<p>Reserved</p>
</td>
<td>
<p><tt class="literal">%3A</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">@</pre></blockquote>
</td>
<td>
<p>At sign</p>
</td>
<td>
<p>Reserved</p>
</td>
<td>
<p><tt class="literal">%40</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">=</pre></blockquote>
</td>
<td>
<p>Equal sign</p>
</td>
<td>
<p>Reserved</p>
</td>
<td>
<p><tt class="literal">%3D</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">&amp;</pre></blockquote>
</td>
<td>
<p>Ampersand</p>
</td>
<td>
<p>Reserved</p>
</td>
<td>
<p><tt class="literal">%26</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">&lt;</pre></blockquote>
</td>
<td>
<p>Less than sign</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%3C</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">&gt;</pre></blockquote>
</td>
<td>
<p>Greater than sign</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%3E</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">"</pre></blockquote>
</td>
<td>
<p>Double quotation mark</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%22</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">#</pre></blockquote>
</td>
<td>
<p>Hash symbol</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%23</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">%</pre></blockquote>
</td>
<td>
<p>Percent</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%25</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">{</pre></blockquote>
</td>
<td>
<p>Left curly brace</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%7B</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">}</pre></blockquote>
</td>
<td>
<p>Right curly brace</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%7D</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">|</pre></blockquote>
</td>
<td>
<p>Vertical bar</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%7C</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">\</pre></blockquote>
</td>
<td>
<p>Backslash</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%5C</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">^</pre></blockquote>
</td>
<td>
<p>Caret</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%5E</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">~</pre></blockquote>
</td>
<td>
<p>Tilde</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%7E</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">[</pre></blockquote>
</td>
<td>
<p>Left square bracket</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%5B</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">]</pre></blockquote>
</td>
<td>
<p>Right square bracket</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%5D</tt></p>
</td>
</tr>
<tr>
<td>
<blockquote><pre class="code">`</pre></blockquote>
</td>
<td>
<p>Back single quotation mark</p>
</td>
<td>
<p>Unsafe</p>
</td>
<td>
<p><tt class="literal">%60</tt></p>
</td>
</tr>

</table>

<p>In general, you should always encode a character if there is some
doubt as to whether it can be placed as-is in a URL. As a rule of
thumb, any character other than a letter, number, or any of the
characters <tt class="literal">$-_.+!*'( )</tt> should be encoded.
</p>

<p>It is never an error to encode a character, unless that character has
a specific meaning in the URL. For example, encoding the slashes in
an http URL causes them to be used as regular characters, not as
pathname delimiters, breaking the URL.
</p>

</div>
</div>
<a name="html4-CHP-6-SECT-2.2" /><div class="sect2">
<h3 class="sect2">6.2.2. The http URL</h3>

<p><a name="INDEX-1046" /> <a name="INDEX-1047" />The
http URL is by far the most common within the World Wide Web. It is
used to access documents from a web server, and it has two formats:
</p>

<blockquote><pre class="code">http://<em class="replaceable">server</em>:<em class="replaceable">port</em>/<em class="replaceable">path</em>#<em class="replaceable">fragment</em>
http://<em class="replaceable">server</em>:<em class="replaceable">port</em>/<em class="replaceable">path</em>?<em class="replaceable">search</em></pre></blockquote>

<p>Some of the parts are optional. In fact, the most common form of the
http URL is simply like this:
</p>

<blockquote><pre class="code">http://<em class="replaceable">server</em>/<em class="replaceable">path</em></pre></blockquote>

<p>which designates the unique server and the directory path and name of
a document.
</p>

<a name="html4-CHP-6-SECT-2.2.1" /><div class="sect3">
<h3 class="sect3">6.2.2.1. The http server</h3>

<p><a name="INDEX-1048" /> <a name="INDEX-1049" /> <a name="INDEX-1050" />The <em class="emphasis">server</em> is the
unique Internet name or Internet Protocol (IP) numerical address of
the computer system that stores the web resource. We suspect
you'll mostly use more easily remembered Internet names for the
servers in your URLs.<a href="#FOOTNOTE-39">[39]</a></p><blockquote class="footnote"> <a name="FOOTNOTE-39" /><p>[39]Each Internet-connected
computer has a unique address, a numeric (IP) address, of course,
because computers deal only in numbers. Humans prefer names, so the
Internet folks provide us with a collection of special servers and
software (Domain Name System or DNS) that automatically resolve
Internet names into IP addresses. InterNIC, a nonprofit agency,
registers domain names mostly on a first-come, first-serve basis, and
distributes new names to DNS servers worldwide.</p> </blockquote>

<p>The name consists of several parts, including the server's
actual name and the successive names of its network domain, each part
separated by a period. Typical Internet names look like
<em class="emphasis">www.oreilly.com</em> or
<em class="emphasis">hoohoo.ncsa.uiuc.edu</em>.<a href="#FOOTNOTE-40">[40]</a>
</p><blockquote class="footnote"> <a name="FOOTNOTE-40" /><p>[40]The
three-letter suffix of the domain name identifies the type of
organization or business that operates that portion of the Internet.
For instance, "com" is a commercial enterprise;
"edu" is an academic institution; and "gov"
identifies a government-based domain. Outside the United States, a
less-descriptive suffix is often assigned, typically a two-letter
abbreviation of the country name such as "jp" for Japan
and "de" for Deutschland. Many organizations around the
world now use the generic three-letter suffixes in place of the more
conventional two-letter national suffixes.</p> </blockquote>

<p>It has become something of a convention that webmasters name their
servers <em class="emphasis">www</em> for quick and easy identification on
the Web. For instance, O'Reilly &amp; Associates' web
server's name is <em class="emphasis">www</em>, which, along with
the publisher's domain name, becomes the very easily remembered
web site <em class="emphasis">www.oreilly.com</em>. Similarly, Sun
Microsystems' web server is named
<em class="emphasis">www.sun.com</em>; Apple Computer's is
<em class="emphasis">www.apple.com</em>, and even Microsoft makes their
web server easily memorable as
<em class="emphasis">www.microsoft.com</em>. The naming convention has
very obvious benefits, which you, too, should take advantage of if
you are called upon to create a web server for your organization.
</p>

<p>You may also specify the address of a server using its numerical
<a name="INDEX-1051" />
<a name="INDEX-1052" />IP address. The address is a
sequence of four numbers, zero to 255, separated by periods. Valid IP
addresses look like 137.237.1.87 or 192.249.1.33.
</p>

<p>It'd be a dull diversion to tell you now what the numbers mean
or how to derive an IP address from a domain name, particularly since
you'll rarely if ever use one in a URL. Rather, this is a good
place to hyperlink: pick up any good Internet networking treatise for
rigorous detail on IP addressing, such as Ed Krol's
<em class="emphasis">The Whole Internet User's Guide and
Catalog</em> (O'Reilly &amp; Associates).
</p>

</div>

<a name="html4-CHP-6-SECT-2.2.2" /><div class="sect3">
<h3 class="sect3">6.2.2.2. The http port</h3>

<p>The
<em class="emphasis">port</em><a name="INDEX-1053" /> is the number of the communication
port to which the client browser connects to the server. It's a
networking thing: servers perform many functions besides serve up web
documents and resources to client browsers: electronic mail, FTP
document fetches, filesystem sharing, and so on. Although all that
network activity may come into the server on a single wire,
it's typically divided into software-managed
"ports" for service-specific
communications -- something analogous to boxes at your local post
office.
</p>

<p>The default URL port for web servers is 80. Special secure web
servers (Secure HTTP, SHTTP or Secure Socket Layer, SSL) run on port
443. Most web servers today use port 80; you need to include a port
number along with an immediately preceding colon in your URL if the
target server does <em class="emphasis">not</em> use port 80 for web
communication.
</p>

<p>When the Web was in its infancy, pioneer webmasters ran their Wild
Wild Web connections on all sorts of port numbers. For technical and
security reasons, system-administrator privileges are required to
install a server on port 80. Lacking such privileges, these
webmasters chose other, more easily accessible, port numbers.
</p>

<p>Now that web servers have become acceptable and are under the care
and feeding of responsible administrators, documents being served on
some port other than 80 or 443 should make you wonder if that server
is really on the up and up. Most likely, the maverick server is being
run by a clever user unbeknownst to the server's bona fide
system administrators.
</p>

</div>

<a name="html4-CHP-6-SECT-2.2.3" /><div class="sect3">
<h3 class="sect3">6.2.2.3. The http path</h3>

<p>The document
<em class="emphasis">path</em><a name="INDEX-1054" />
<a name="INDEX-1055" />
<a name="INDEX-1056" /> is
the Unix-style hierarchical location of the file in the
server's storage system. The pathname consists of one or more
names separated by slashes. All but the last name represent
directories leading down to the document; the last name is usually
that of the document itself.
</p>

<p>It has become a convention that for easy identification, HTML
document names end with the suffix <em class="emphasis">.html</em>
(otherwise they're plain ASCII text files, remember?). Although
recent versions of Windows allow longer suffixes, their users often
stick to the three-letter <em class="filename">.htm</em> name suffix for
HTML documents.
</p>

<p>Although the server name in a URL is not <a name="INDEX-1057" />case-sensitive, the document
pathname may be. Since most web servers are run on Unix-based systems
and Unix file names are case-sensitive, the document pathname will be
case-sensitive, too. Web servers running on Windows machines are not
case-sensitive, so the document pathname is not, but since it is
impossible to know the operating system of the server you are
accessing, always assume that the server has case-sensitive pathnames
and take care to get the case correct when typing your URLs.
</p>

<p>Certain conventions regarding the document pathname have arisen. If
the last element of the document path is a directory, not a single
document, the server usually will send back either a listing of the
directory contents or the HTML index document in that directory. You
should end the document name for a directory with a trailing
<a name="INDEX-1058" /> <a name="INDEX-1059" />slash character, but in practice, most
servers will honor the request even if the character is omitted.
</p>

<p>If the directory name is just a slash alone or sometimes nothing at
all, you will retrieve the first (top-level) document or so-called
<em class="emphasis">home page</em><a name="INDEX-1060" /> <a name="INDEX-1061" /> in
the uppermost root directory of the server. Every well-designed http
server should have an attractive, well-designed "home
page"; it's a shorthand way for users to access your web
collection since they don't need to remember the
document's actual filename, just your server's name.
That's why, for example, you can type
<em class="emphasis">http://www.oreilly.com</em> into Netscape's
"Open" dialog box and get O'Reilly's home
page.
</p>

<p>Another twist: if the first component of the document path starts
with the <a name="INDEX-1062" />
<a name="INDEX-1063" />tilde character (~), it means that the rest
of the pathname begins from the personal directory in the home
directory of the specified user on the server machine. For instance,
the URL <em class="emphasis">http://www.kumquat.com/~chuck /</em> would
retrieve the top-level page from Chuck's document collection.
</p>

<p>Different servers have different ways of locating documents within a
user's home directory. Many search for the documents in a
directory named <em class="emphasis">public_html</em>. Unix-based servers
are fond of the name <em class="emphasis">index.html</em> for home pages.
When all else fails, servers tend to cough up the first text document
in the home page directory.
</p>

</div>

<a name="html4-CHP-6-SECT-2.2.4" /><div class="sect3">
<h3 class="sect3">6.2.2.4. The http document fragment</h3>

<p>The <em class="emphasis">fragment</em><a name="INDEX-1064" /> is an identifier that points to a
specific section of a document. In URL specifications, it follows the
server and pathname and is separated by the <a name="INDEX-1065" /> <a name="INDEX-1066" />pound sign (#). A fragment identifier
indicates to the browser that it should begin displaying the target
document at the indicated fragment name. As we describe in more
detail later in this chapter, you insert fragment names into a
document either with the universal <tt class="literal">id</tt> tag
attribute or with the <tt class="literal">name</tt> attribute for
<tt class="literal">&lt;a&gt;</tt> tag. Like pathnames, a fragment name may
be any sequence of characters.
</p>

<p>The fragment name and the preceding hash symbol are optional; omit
them when referencing a document without defined fragments.
</p>

<p>Formally, the fragment element only applies to HTML or XHTML
documents. If the target of the URL is some other document type, the
fragment name may be misinterpreted by the browser.
</p>

<p>Fragments are useful for long documents. By identifying key sections
of your document with a fragment name, you make it easy for readers
to link directly to that portion of the document, avoiding the tedium
of scrolling or searching through the document to get to the section
that interests them.
</p>

<p>As a rule of thumb, we recommend that every section header in your
documents be accompanied by an equivalent fragment name. By
consistently following this rule, you'll make it possible for
readers to jump to any section in any of your documents. Fragments
also make it easier to build tables of contents for your document
families.
</p>

</div>

<a name="html4-CHP-6-SECT-2.2.5" /><div class="sect3">
<h3 class="sect3">6.2.2.5. The http search parameter</h3>

<p>The <em class="emphasis">search</em><a name="INDEX-1067" /> <a name="INDEX-1068" />
<a name="INDEX-1069" />
component of the http URL, along with its preceding question mark, is
optional. It indicates that the path is a searchable or executable
resource on the server. The content of the search component is passed
to the server as parameters that control the search or execution
function.
</p>

<p>The actual encoding of parameters in the search component is
dependent upon the server and the resource being referenced. The
parameters for searchable resources are covered later in this
chapter, when we discuss searchable documents. Parameters for
executable resources are discussed in <a href="ch09_01.htm">Chapter 9, "Forms"</a>.
</p>

<p>Although our initial presentation of http URLs indicated that a URL
can have either a fragment identifier or a search component, some
browsers let you use both in a single URL. If you so desire, you can
follow the search parameter with a fragment identifier, telling the
browser to begin displaying the results of the search at the
indicated fragment. Netscape, for example, supports this usage.
</p>

<p>We don't recommend this kind of URL, though. First and
foremost, it doesn't work on a lot of browsers. Just as
important, using a fragment implies that you are sure that the
results of the search will have a fragment of that name defined
within the document. For large document collections, this is hardly
likely. You are better off omitting the fragment, showing the search
results from the beginning of the document, and avoiding potential
confusion among your readers.
</p>

</div>

<a name="html4-CHP-6-SECT-2.2.6" /><div class="sect3">
<h3 class="sect3">6.2.2.6. Sample http URLs</h3>

<p>Here are some sample http URLs:</p>

<blockquote><pre class="code">http://www.oreilly.com/catalog.html
http://www.oreilly.com/
http://www.kumquat.com:8080/
http://www.kumquat.com/planting/guide.html#soil_prep
http://www.kumquat.com/find_a_quat?state=Florida</pre></blockquote>

<p>The first example is an explicit reference to a bona fide HTML
document named <em class="emphasis">catalog.html</em> that is stored in
the root directory of the <em class="emphasis">www.oreilly.com</em>
server. The second references the top-level home page on that same
server. That home page may or may not be
<em class="emphasis">catalog.html</em>. Sample three, also, assumes that
there is a home page in the root directory of the
<em class="emphasis">www.kumquat.com</em> server, and that the web
connection is to the nonstandard port 8080.
</p>

<p>The fourth example is the URL for retrieving the web document named
<em class="emphasis">guide.html</em> from the
<em class="emphasis">planting</em> directory on the
<em class="emphasis">www.kumquat.com</em> server. Once retrieved, the
browser should display the document beginning at the fragment named
<em class="emphasis">soil_ prep</em>.
</p>

<p>The last example invokes an executable resource named
<em class="emphasis">find_a_quat</em> with the parameter named
<em class="emphasis">state</em> set to the value
<em class="emphasis">Florida</em>. Presumably, this resource generates an
HTML response that is subsequently displayed by the
browser.<a name="INDEX-1070" />
<a name="INDEX-1071" />
</p>

</div>
</div>
<a name="html4-CHP-6-SECT-2.3" /><div class="sect2">
<h3 class="sect2">6.2.3. The javascript URL</h3>

<p><a name="INDEX-1072" /> <a name="INDEX-1073" />The javascript URL actually is
a pseudo-protocol, not usually included in discussions of URLs. Yet,
with advanced browsers like Netscape and Internet Explorer, the
javascript URL can be associated with a hyperlink and used to execute
JavaScript commands when the user selects the link. <a href="ch12_03.htm">Section 12.3.4, "JavaScript URLs"</a>
</p>

<a name="html4-CHP-6-SECT-2.3.1" /><div class="sect3">
<h3 class="sect3">6.2.3.1. The javascript URL arguments</h3>

<p>What follows the javascript pseudo-protocol is one or more
semicolon-separated JavaScript expressions and methods, including
references to multi-expression JavaScript functions that you embed
within the <tt class="literal">&lt;script&gt;</tt> tag in your documents
(see <a href="ch12_01.htm">Chapter 12, "Executable Content"</a> for details). For example:
</p>

<blockquote><pre class="code">javascript:window.alert('Hello, world!')
javascript:doFlash('red', 'blue'); window.alert('Do not press me!')</pre></blockquote>

<p>are valid URLs that you may include as the value for a link reference
(see <a href="ch06_03.htm">Section 6.3.1.2, "The href attribute"</a> and <a href="ch06_05.htm">Section 6.5.4.3, "The href attribute"</a>). The first example contains a single
JavaScript method that activates an alert dialog with the simple
message.
</p>

<p>The second javascript URL example contains two arguments: the first
calls a JavaScript function, <tt class="literal">doFlash</tt>, which
presumably you have located elsewhere in the document within the
<tt class="literal">&lt;script&gt;</tt> tag and which perhaps flashes the
background color of the document window between the red and blue. The
second expression is the same alert method as in the first example,
with a slightly different message.
</p>

<p>The javascript URL may appear in a hyperlink sans arguments, too. In
that case, the Netscape browser alone -- not Internet
Explorer -- opens a special JavaScript editor wherein the user may
type in and test the various expressions and methods.
</p>

</div>
</div>
<a name="html4-CHP-6-SECT-2.4" /><div class="sect2">
<h3 class="sect2">6.2.4. The ftp URL</h3>

<p><a name="INDEX-1074" />
<a name="INDEX-1075" />The ftp
URL is used to retrieve documents from an FTP (File Transfer
Protocol) server.<a href="#FOOTNOTE-41">[41]</a></p><blockquote class="footnote"> <a name="FOOTNOTE-41" /><p>[41]FTP is an ancient Internet protocol
that dates back to the Dark Ages, around 1975. It was designed as a
simple way to move files between machines and is popular and useful
to this day. Some people who are unable to run a true web server will
place their documents on a server that speaks FTP instead.</p>
</blockquote> 

<p>It has the format:
</p>

<blockquote><pre class="code">ftp://<em class="replaceable">user</em>:<em class="replaceable">password</em>@<em class="replaceable">server</em>:<em class="replaceable">port</em>/<em class="replaceable">path</em>;<em class="replaceable">type</em>=<em class="replaceable">typecode</em></pre></blockquote>

<a name="html4-CHP-6-SECT-2.4.1" /><div class="sect3">
<h3 class="sect3">6.2.4.1. The ftp user and password</h3>

<p>FTP is an authenticated service, meaning that you must have a valid
username and password in order to retrieve documents from a server.
However, most FTP servers also support restricted, nonauthenticated
access known as <em class="emphasis">anonymous
FTP</em><a name="INDEX-1076" />. In this mode, anyone can supply the
username "anonymous" and be granted access to a limited
portion of the server's documents. Most FTP servers also assume
(but may not grant) anonymous access if the username and password are
omitted.
</p>

<p>If you are using an ftp URL to access a site that requires a username
and password, include the <em class="emphasis">user</em> and
<em class="emphasis">password</em> components in the URL, along with the
colon (<tt class="literal">:</tt>) and "at" sign
(<tt class="literal">@</tt>). More commonly, you'll be accessing an
anonymous FTP server, and the user and password components can be
omitted.
</p>

<p>If you keep the user component along with the "at" sign,
but omit the password and the preceding colon, most browsers will
prompt you for a password after connecting to the FTP server. This is
the recommended way of accessing authenticated resources on an FTP
server; it prevents others from seeing your password.
</p>

<p>We recommend you <em class="emphasis">never</em> place an ftp URL with a
username and password in any HTML document. The reasoning is simple:
anyone can retrieve the document, extract the username and password
from the URL, log into the FTP server, and tamper with its documents.
</p>

</div>

<a name="html4-CHP-6-SECT-2.4.2" /><div class="sect3">
<h3 class="sect3">6.2.4.2. The ftp server and port</h3>

<p>The ftp
<em class="emphasis">server</em><a name="INDEX-1077" />
<a name="INDEX-1078" /> and <em class="emphasis">port</em> are
bound by the same rules as the server and port in an http URL, as
described above. The server must be a valid Internet domain name or
IP address of an FTP server. The port specifies the port on which the
server is listening for requests.
</p>

<p>If the port and its preceding colon are omitted, the default port of
21 is used. It is necessary to specify the port only if the FTP
server is running on some port other than 21.
</p>

</div>

<a name="html4-CHP-6-SECT-2.4.3" /><div class="sect3">
<h3 class="sect3">6.2.4.3. The ftp path and transfer type</h3>

<p>The <em class="emphasis">path</em> component represents a series of
directories, separated by slashes leading to the file to be
retrieved. By default, the file is retrieved as a binary file; this
can be changed by adding the
<em class="emphasis">typecode</em><a name="INDEX-1079" /> (and the preceding
<tt class="literal">;type=</tt>) to the URL.
</p>

<p>If the typecode is set to <tt class="literal">d</tt>, the path is assumed
to be a directory. The browser will request a listing of the
directory contents from the server and display this listing to the
user. If the typecode is any other letter, it is used as a parameter
to the FTP type command before retrieving the file referenced by the
path. While some FTP servers may implement other codes, most servers
accept <tt class="literal">i</tt> to initiate a binary transfer and
<tt class="literal">a</tt> to treat the file as a stream of ASCII text.
</p>

</div>

<a name="html4-CHP-6-SECT-2.4.4" /><div class="sect3">
<h3 class="sect3">6.2.4.4. Sample ftp URLs</h3>

<p>Here are some sample ftp URLs:</p>

<blockquote><pre class="code">ftp://www.kumquat.com/sales/pricing
ftp://bob@bobs-box.com/results;type=d
ftp://bob:secret@bobs-box.com/listing;type=a</pre></blockquote>

<p>The first example retrieves the file named
<em class="emphasis">pricing</em> from the <em class="emphasis">sales</em>
directory on the anonymous FTP server at
<em class="emphasis">www.kumquat.com</em>. The second logs into the FTP
server on <em class="emphasis">bobs-box.com</em> as user
<tt class="literal">bob</tt>, prompting for a password before retrieving
the contents of the directory named <em class="emphasis">results</em> and
displaying them to the user. The last example logs into
<em class="emphasis">bobs-box.com</em> as <tt class="literal">bob</tt> with the
password <tt class="literal">secret</tt> and retrieves the file named
<em class="emphasis">listing</em>, treating its contents as ASCII
characters.
</p>

</div>
</div>
<a name="html4-CHP-6-SECT-2.5" /><div class="sect2">
<h3 class="sect2">6.2.5. The file URL</h3>

<p><a name="INDEX-1080" /> <a name="INDEX-1081" />The file URL specifies a file stored on a
machine without indicating the protocol used to retrieve the file. As
such, it has limited use in a networked environment. Its real
benefit, however, is that it can reference a file on the user's
machine, and is particularly useful for referencing personal HTML
document collections, such as those "under construction"
and not yet ready for general distribution, or HTML document
collections on CD-ROM. It has the following format:
</p>

<blockquote><pre class="code">file://<em class="replaceable">server</em>/<em class="replaceable">path</em></pre></blockquote>

<a name="html4-CHP-6-SECT-2.5.1" /><div class="sect3">
<h3 class="sect3">6.2.5.1. The file server</h3>

<p>The <a name="INDEX-1082" />
<a name="INDEX-1083" />file <em class="emphasis">server</em>, like
the http server described earlier, must be the Internet domain name
or IP address of the machine containing the file to be retrieved. No
assumptions are made as to how the browser might contact the machine
to obtain the file; presumably the browser can make some connection,
perhaps via a Network File System or FTP, to obtain the file.
</p>

<p>If the server is omitted, or the special name
<tt class="literal">localhost</tt> is used, the file is assumed to reside
on the same machine upon which the browser is running. In this case,
the browser simply accesses the file using the normal facilities of
the local operating system. In fact, this is the most common usage of
the file URL. By creating document families on a diskette or CD-ROM
and referencing your hyperlinks using the
<em class="emphasis">file://localhost/</em> URL, you create a
distributable, standalone document collection that does not require a
network connection to use.
</p>

</div>

<a name="html4-CHP-6-SECT-2.5.2" /><div class="sect3">
<h3 class="sect3">6.2.5.2. The file path</h3>

<p>This is the path of the file to be retrieved on the desired server.
The syntax of the path may differ based upon the operating system of
the server; be sure to encode any potentially dangerous characters in
the path.
</p>

</div>

<a name="html4-CHP-6-SECT-2.5.3" /><div class="sect3">
<h3 class="sect3">6.2.5.3. Sample file URLs</h3>

<p>The file URL is easy:</p>

<blockquote><pre class="code">file://localhost/home/chuck/document.html
file:///home/chuck/document.html
file://marketing.kumquat.com/monthly_sales.html</pre></blockquote>

<p>The first URL retrieves
<em class="emphasis">/home/chuck/document.html</em> from the user's
local machine. The second is identical to the first, except
we've omitted the <em class="emphasis">localhost</em> reference to
the server; the server name defaults to the local server.
</p>

<p>The third example uses some protocol to retrieve
<em class="emphasis">monthly_sales.html</em> from the
<em class="emphasis">marketing.kumquat.com</em> server.
</p>

</div>
</div>
<a name="html4-CHP-6-SECT-2.6" /><div class="sect2">
<h3 class="sect2">6.2.6. The news URL</h3>

<p><a name="INDEX-1084" /> <a name="INDEX-1085" /> <a name="INDEX-1086" />
<a name="INDEX-1087" />The news URL accesses either a single
message or an entire newsgroup within the Usenet news system. It has
two forms:
</p>

<blockquote><pre class="code">news:<em class="replaceable">newsgroup</em>
news:<em class="replaceable">message_id</em></pre></blockquote>

<p>An unfortunate limitation in news URLs is that they don't allow
you to specify a server for the <em class="emphasis">newsgroup</em>.
Rather, users specify their news-server resource in their browser
preferences. At one time, not long ago, Internet newsgroups were
nearly universally distributed; all news servers carried all the same
newsgroups and their respective articles, so one news server was as
good as any. Today, the sheer bulk of disk space needed to store the
daily volume of newsgroup activity is often prohibitive for any
single news server, and there's also local censorship of
newsgroups. Hence you cannot expect that all newsgroups, and
certainly not all articles for a particular newsgroup, will be
available on the user's news server.
</p>

<p>Many users' browsers may not be correctly configured to read
news. We recommend you avoid placing news URLs in your documents
except in rare cases.
</p>

<a name="html4-CHP-6-SECT-2.6.1" /><div class="sect3">
<h3 class="sect3">6.2.6.1. Accessing entire newsgroups</h3>

<p>There are several thousand newsgroups devoted to nearly every
conceivable topic under the sun and beyond. Each group has a unique
name, composed of hierarchical elements separated by periods. For
example, the World Wide Web announcements newsgroup is:
</p>

<blockquote><pre class="code">comp.infosys.www.announce</pre></blockquote>

<p>To access this group, use the URL: </p>

<blockquote><pre class="code">news:comp.infosys.www.announce</pre></blockquote>

</div>

<a name="html4-CHP-6-SECT-2.6.2" /><div class="sect3">
<h3 class="sect3">6.2.6.2. Accessing single messages</h3>

<p>Every message on a news server has a unique message
<a name="INDEX-1088" /> <a name="INDEX-1089" /> <a name="INDEX-1090" />identifier (ID) associated with it.
This ID has the form:
</p>

<blockquote><pre class="code"><em class="replaceable">unique_string</em>@<em class="replaceable">server</em></pre></blockquote>

<p>The <em class="emphasis">unique_string</em> is a sequence of ASCII
characters; the server is usually the name of the machine from which
the message originated. The <em class="emphasis">unique_string</em> must
be unique among all the messages that originated from the server. A
sample URL to access a single message might be:
</p>

<blockquote><pre class="code">news:12A7789B@news.kumquat.com</pre></blockquote>

<p>In general, message IDs are cryptic sequences of characters not
readily understood by humans. Moreover, the lifespan of a message on
a server is usually measured in days, after which the message is
deleted and the message ID is no longer valid. The bottom line:
single message news URLs are difficult to create, become invalid
quickly, and are generally not used.<a name="INDEX-1091" />
</p>

</div>
</div>
<a name="html4-CHP-6-SECT-2.7" /><div class="sect2">
<h3 class="sect2">6.2.7. The nntp URL</h3>

<p>The <a name="INDEX-1092" />nntp URL
goes beyond the news URL to provide a complete mechanism for
accessing articles in the Usenet news system. It has the form:
</p>

<blockquote><pre class="code">nntp://<em class="replaceable">server</em>:<em class="replaceable">port</em>/<em class="replaceable">newsgroup</em>/<em class="replaceable">article</em></pre></blockquote>

<a name="html4-CHP-6-SECT-2.7.1" /><div class="sect3">
<h3 class="sect3">6.2.7.1. The nntp server and port</h3>

<p>The <a name="INDEX-1093" />
<a name="INDEX-1094" />nntp
<em class="emphasis">server</em> and <em class="emphasis">port</em> are defined
similarly to the http server and port, described earlier. The server
must be the Internet domain name or IP address of a nntp server; the
port is the port on which that server is listening for requests.
</p>

<p>If the port and its preceding colon are omitted, the default port of
119 is used.
</p>

</div>

<a name="html4-CHP-6-SECT-2.7.2" /><div class="sect3">
<h3 class="sect3">6.2.7.2. The nntp newsgroup and article</h3>

<p>The <em class="emphasis">newsgroup</em> is the name of the group from
which an article is to be retrieved, as defined in <a href="ch06_02.htm">Section 6.2.6, "The news URL"</a>.
</p>

<p>The <em class="emphasis">article</em><a name="INDEX-1095" />
<a name="INDEX-1096" /> is the numeric id of the
<a name="INDEX-1097" />desired article within that
newsgroup. Although the article number is easier to determine than a
message id, it falls prey to the same limitations of single message
references using the news URL, described in <a href="ch06_02.htm">Section 6.2.6, "The news URL"</a>. Specifically, articles do not last long on
most nntp servers, and nntp URLs quickly become invalid as a result.
</p>

</div>

<a name="html4-CHP-6-SECT-2.7.3" /><div class="sect3">
<h3 class="sect3">6.2.7.3. Sample nntp URLs</h3>

<p>A sample nntp URL might be:</p>

<blockquote><pre class="code">nntp://news.kumquat.com/alt.fan.kumquats/417</pre></blockquote>

<p>This URL retrieves article 417 from the
<em class="emphasis">alt.fan.kumquats</em> newsgroup on
<em class="emphasis">news.kumquat.com</em>. Keep in mind that the article
will be served only to machines that are allowed to retrieve articles
from this server. In general, most nntp servers restrict access to
those machines on that same local area network.<a name="INDEX-1098" /> <a name="INDEX-1099" /> <a name="INDEX-1100" /> <a name="INDEX-1101" />
</p>

</div>
</div>
<a name="html4-CHP-6-SECT-2.8" /><div class="sect2">
<h3 class="sect2">6.2.8. The mailto URL</h3>

<p>The <a name="INDEX-1102" />
<a name="INDEX-1103" />
<a name="INDEX-1104" />
<a name="INDEX-1105" />mailto URL causes an
electronic mail message to be transmitted to a named recipient. It
has the format:
</p>

<blockquote><pre class="code">mailto:<em class="replaceable">address</em></pre></blockquote>

<p>The <em class="emphasis">address</em> is any valid email address, usually
of the form:
</p>

<blockquote><pre class="code"><em class="replaceable">user</em>@<em class="replaceable">server</em></pre></blockquote>

<p>Thus, a typical mailto URL might look like: </p>

<blockquote><pre class="code">mailto:cmusciano@aol.com</pre></blockquote>

<p>Browsers like Netscape honor multiple recipients in the mailto URL,
separated by a comma. For example:
</p>

<blockquote><pre class="code">mailto:cmusciano@aol.com,bkennedy@activmedia.com,booktech@ora.com</pre></blockquote>

<p>will address the message to all three recipients. There should be no
spaces before or after the commas in the URL.
</p>

<a name="html4-CHP-6-SECT-2.8.1" /><div class="sect3">
<h3 class="sect3">6.2.8.1. Defining mail header fields</h3>

<p>Most browsers <a name="INDEX-1106" /> <a name="INDEX-1107" /> <a name="INDEX-1108" />open an email composition window when
the user selects a mailto URL. The recipient's address is
filled in, taken from the URL, but the message subject and various
other header fields are left blank. Many webmasters would like to
fill in these fields as a courtesy to their readers, but the URL
standard provides no way to do this.
</p>

<p>The modern browsers extend the mailto URL to fill this gap. By adding
CGI-like parameters to the mailto header, you can set the value of
the subject with Netscape and Internet Explorer, and also cc
(<a name="INDEX-1109" /> <a name="INDEX-1110" />carbon copy) and bcc
(blind carbon copy) fields for the mail message with Netscape. These
URLs work with Netscape; only the first one works correctly with
Internet Explorer. <a href="ch09_02.htm">Section 9.2.4.2, "Passing parameters explicitly"</a>
</p>

<blockquote><pre class="code">mailto:cmusciano@aol.com?subject=Loved your book!
mailto:cmusciano@aol.com?cc=booktech@oreilly.com
mailto:cmusciano@aol.com?bcc=archive@myserver.com</pre></blockquote>

<p>As you can probably guess, the first URL sets the subject of the
message. Note that spaces are allowed; you don't have to
replace them with the hexadecimal equivalent <tt class="literal">%20</tt>.
The second URL places the address
<tt class="literal">booktech@oreilly.com</tt> in the cc field of a Netscape
message. Similarly, the last example sets the bcc field of the
message. You may also set several fields in one URL by separating the
field definitions with ampersands. For example:
</p>

<blockquote><pre class="code">mailto:cmusciano@aol.com?subject=Loved your book!&amp;cc=booktech@
oreilly.com&amp;bcc=archive@myserver.com</pre></blockquote>

<p>sets the subject and carbon-copy address. (This line would normally
appear as a single line but is broken here due to the width of the
page.)
</p>

<p>Internet Explorer Version 3 does not recognize the bcc and cc fields
in the mailto URL and will either complain about them if they appear
alone or append them to a preceding subject.
</p>

</div>
</div>
<a name="html4-CHP-6-SECT-2.9" /><div class="sect2">
<h3 class="sect2">6.2.9. The telnet URL</h3>

<p>The <a name="INDEX-1111" />
<a name="INDEX-1112" />telnet URL opens an interactive session
with a desired server, allowing the user to log in and use the
machine. Often, the connection to the machine automatically starts a
specific service for the user; in other cases, the user must know the
commands to type to use the system. The telnet URL has the form:
</p>

<blockquote><pre class="code">telnet://<em class="replaceable">user</em>:<em class="replaceable">password</em>@<em class="replaceable">server</em>:<em class="replaceable">port</em>/</pre></blockquote>

<a name="html4-CHP-6-SECT-2.9.1" /><div class="sect3">
<h3 class="sect3">6.2.9.1. The telnet user and password</h3>

<p>The telnet <em class="emphasis">user</em><a name="INDEX-1113" /> and
<em class="emphasis">password</em> are used exactly like the user and
password components of the ftp URL, described previously. In
particular, the same caveats apply regarding protecting your password
and never placing it within a URL.
</p>

<p>Just like the ftp URL, if you omit the password from the URL, the
browser should prompt you for a password just before contacting the
telnet server.
</p>

<p>If you omit both the user and password, the telnet occurs without
supplying a user name. For some servers, telnet automatically
connects to a default service when no username is supplied. For
others, the browser may prompt for a username and password when
making the connection to the telnet server.
</p>

</div>

<a name="html4-CHP-6-SECT-2.9.2" /><div class="sect3">
<h3 class="sect3">6.2.9.2. The telnet server and port</h3>

<p>The <a name="INDEX-1114" />telnet server and
<a name="INDEX-1115" />port
are defined similarly to the http server and port, described above.
The server must be the Internet domain name or IP address of a telnet
server; the port is the port on which that server is listening for
requests. If the port and its preceding colon are omitted, the
default port of 23 is used.
</p>

</div>
</div>
<a name="html4-CHP-6-SECT-2.10" /><div class="sect2">
<h3 class="sect2">6.2.10. The gopher URL</h3>

<p>Gopher is a web-like document retrieval system that achieved some
popularity on the Internet just before the World Wide Web took off,
making Gopher obsolete. Some Gopher servers still exist, though, and
the <a name="INDEX-1116" />
<a name="INDEX-1117" />gopher URL lets you access Gopher
documents. The gopher URL has the form:
</p>

<blockquote><pre class="code">gopher://<em class="replaceable">server</em>:<em class="replaceable">port</em>/<em class="replaceable">path</em></pre></blockquote>

<a name="html4-CHP-6-SECT-2.10.1" /><div class="sect3">
<h3 class="sect3">6.2.10.1. The gopher server and port</h3>

<p>The gopher
<a name="INDEX-1118" />
<a name="INDEX-1119" />server and port are defined similarly
to the http server and port, described previously. The server must be
the Internet domain name or IP address of a gopher server; the port
is the port on which that server is listening for requests.
</p>

<p>If the port and its preceding colon are omitted, the default port of
70 is used.
</p>

</div>

<a name="html4-CHP-6-SECT-2.10.2" /><div class="sect3">
<h3 class="sect3">6.2.10.2. The gopher path</h3>

<p>The path can take one of three forms:</p>

<blockquote><pre class="code"><em class="replaceable">type</em>/<em class="replaceable">selector</em>
<em class="replaceable">type</em>/<em class="replaceable">selector</em>%09<em class="replaceable">search</em>
<em class="replaceable">type</em>/<em class="replaceable">selector</em>%09<em class="replaceable">search</em>%09<em class="replaceable">gopherplus</em></pre></blockquote>

<p>The <em class="emphasis">type</em><a name="INDEX-1120" /> is a single character value denoting the
type of the gopher resource. If the entire path is omitted from the
gopher URL, the type defaults to 1.
</p>

<p>The <em class="emphasis">selector</em><a name="INDEX-1121" /> corresponds to the path of a resource on
the Gopher server. It may be omitted, in which case the top-level
index of the Gopher server is retrieved.
</p>

<p>If the Gopher resource is actually a Gopher search engine, the
<em class="emphasis">search</em> component provides the string for which
to search. The search string must be preceded by an encoded
horizontal tab (<tt class="literal">%09</tt>).
</p>

<p>If the Gopher server supports Gopher+ resources, the
<em class="emphasis">gopherplus</em> component supplies the necessary
information to locate that resource. The exact content of this
component varies based upon the resources on the gopher server. This
component is preceded by an encoded horizontal tab
(<tt class="literal">%09</tt>). If you want to include the
<em class="emphasis">gopherplus</em> component but omit the search
component, you must still supply both encoded tabs within the URL.
</p>

</div>
</div>
<a name="html4-CHP-6-SECT-2.11" /><div class="sect2">
<h3 class="sect2">6.2.11. Absolute and Relative URLs</h3>

<p>You may write a <a name="INDEX-1122" /> <a name="INDEX-1123" />
<a name="INDEX-1124" />URL in one of two ways: absolute or
relative. An absolute URL is the complete address of a resource and
has everything your system needs to find a document and its server on
the Web. At the very least, an absolute URL contains the scheme and
all required elements of the
<em class="emphasis">scheme_specific_part</em> of the URL. It may also
contain any of the optional portions of the
<em class="emphasis">scheme_specific_part</em>.
</p>

<p>With a relative URL, you provide an abbreviated document address
that, when automatically combined with a "base address"
by the system, becomes a complete address for the document. Within
the relative URL, any component of the URL may be omitted. The
browser automatically fills in the missing pieces of the relative URL
using corresponding elements of a base URL. This base URL is usually
the URL of the document containing the relative URL, but may be
another document specified with the <tt class="literal">&lt;base&gt;</tt>
tag. <a href="ch06_07.htm">Section 6.7.1, "The &lt;base&gt; Header Element"</a>
</p>

<a name="html4-CHP-6-SECT-2.11.1" /><div class="sect3">
<h3 class="sect3">6.2.11.1. Relative schemes and servers</h3>

<p><a name="INDEX-1125" />A common form
of a relative URL is missing the scheme and server name. Since many
related documents are on the same server, it makes sense to omit the
scheme and server name from the relative URL. For instance, assume
the base document was last retrieved from the server
<em class="emphasis">www.kumquat.com</em>. The relative URL, then:
</p>

<blockquote><pre class="code">another-doc.html</pre></blockquote>

<p>is equivalent to the absolute URL:</p>

<blockquote><pre class="code">http://www.kumquat.com/another-doc.html</pre></blockquote>

<p><a href="ch06_02.htm">Table 6-2</a> shows how the base and relative URLs in
the example are combined to form an absolute URL.
</p>

<a name="html4-CHP-6-TABLE-2" /><h4 class="objtitle">Table 6-2. Forming an Absolute URL </h4><table border="1">






<tr>
<th>

</th>
<th>
<p>Protocol</p>
</th>
<th>
<p>Server</p>
</th>
<th>
<p>Directory</p>
</th>
<th>
<p>File</p>
</th>
</tr>


<tr>
<td>
<p>Base URL</p>
</td>
<td>
<p>http</p>
</td>
<td>
<p><em class="emphasis">www.kumquat.com</em></p>
</td>
<td>
<p>/</p>
</td>
<td>

</td>
</tr>
<tr>
<td>
<p>Relative URL</p>
</td>
<td>
<p><img alt="Figure 6-2" src="figs/U2193.gif" /></p>
</td>
<td>
<p><img alt="Figure 6-2" src="figs/U2193.gif" /></p>
</td>
<td>
<p><img alt="Figure 6-2" src="figs/U2193.gif" /></p>
</td>
<td>
<p><em class="emphasis">another-doc.html</em></p>
</td>
</tr>
<tr>
<td>
<p><img alt="Figure 6-2" src="figs/U2193.gif" /></p>
</td>
<td>
<p><img alt="Figure 6-2" src="figs/U2193.gif" /></p>
</td>
<td>
<p><img alt="Figure 6-2" src="figs/U2193.gif" /></p>
</td>
<td>
<p><img alt="Figure 6-2" src="figs/U2193.gif" /></p>
</td>
<td>
<p><img alt="Figure 6-2" src="figs/U2193.gif" /></p>
</td>
</tr>
<tr>
<td>
<p>Absolute URL</p>
</td>
<td>
<p>http</p>
</td>
<td>
<p><em class="emphasis">www.kumquat.com</em></p>
</td>
<td>
<p>/</p>
</td>
<td>
<p><em class="emphasis">another-doc.html</em></p>
</td>
</tr>

</table>

</div>

<a name="html4-CHP-6-SECT-2.11.2" /><div class="sect3">
<h3 class="sect3">6.2.11.2. Relative document directories</h3>

<p>Another common form of a relative URL omits the leading slash and one
or more directory names from the beginning of the document pathname.
The directory of the base URL is automatically assumed to replace
these missing components. It's the most common abbreviation,
because most authors place their collection of documents and
subdirectories of support resources in the same directory path as the
home page. For example, you might have a
<em class="emphasis">special/</em> subdirectory containing FTP files
referenced in your document. Let's say that the absolute URL
for that document is:
</p>

<blockquote><pre class="code">http://www.kumquat.com/planting/guide.html</pre></blockquote>

<p>A relative URL for the file <em class="emphasis">README.txt</em> in the
<em class="emphasis">special/</em> subdirectory, looks like this:
</p>

<blockquote><pre class="code">ftp:special/README.txt</pre></blockquote>

<p>You'll actually be retrieving:</p>

<blockquote><pre class="code">ftp://www.kumquat.com/planting/special/README.txt</pre></blockquote>

<p>Visually, the operation looks like that in <a href="ch06_02.htm">Table 6-3</a>.
</p>

<a name="html4-CHP-6-TABLE-3" /><h4 class="objtitle">Table 6-3. Forming an Absolute FTP URL </h4><table border="1">






<tr>
<th>

</th>
<th>
<p>Protocol</p>
</th>
<th>
<p>Server</p>
</th>
<th>
<p>Directory</p>
</th>
<th>
<p>File</p>
</th>
</tr>


<tr>
<td>
<p>Base URL</p>
</td>
<td>
<p>http</p>
</td>
<td>
<p><em class="emphasis">www.kumquat.com</em></p>
</td>
<td>
<p><em class="filename">/planting</em></p>
</td>
<td>
<p><em class="filename">guide.html</em></p>
</td>
</tr>
<tr>
<td>
<p>Relative URL</p>
</td>
<td>
<p>ftp</p>
</td>
<td>
<p><img alt="Figure 6-3" src="figs/U2193.gif" /></p>
</td>
<td>
<p><em class="filename">special</em></p>
</td>
<td>
<p><em class="filename">README.txt</em></p>
</td>
</tr>
<tr>
<td>
<p><img alt="Figure 6-3" src="figs/U2193.gif" /></p>
</td>
<td>
<p><img alt="Figure 6-3" src="figs/U2193.gif" /></p>
</td>
<td>
<p><img alt="Figure 6-3" src="figs/U2193.gif" /></p>
</td>
<td>
<p><img alt="Figure 6-3" src="figs/U2193.gif" /></p>
</td>
<td>
<p><img alt="Figure 6-3" src="figs/U2193.gif" /></p>
</td>
</tr>
<tr>
<td>
<p>Absolute URL</p>
</td>
<td>
<p>ftp</p>
</td>
<td>
<p><a href="www.kumquat.com">www.kumquat.com</a></p>
</td>
<td>
<p><em class="filename">/planting/special</em></p>
</td>
<td>
<p><em class="filename">README.txt</em></p>
</td>
</tr>

</table>
<p>
Common "dot-slash" pathname notations also let you
express the current directory ("./") and directory above the
current directory (parent; "../") in a relative URL. The current directory notation is rarely used, since it is redundant. But the parent notation lets you set the target URL to directories in other branches of the filesystem hierarchy.</p>
<p>
For example, if the directory portion of the current URL is <em class="filename">/planting/special/</em>, and you want to reference an HTML document named <em class="filename">new_ground.html</em> in <em class="filename">planting/standard/</em>, you may simply form the relative URL as:
<blockquote><pre class="code">../standard/new_ground.html</pre></blockquote></p>

<p>You'll actually be retrieving:
<blockquote><pre class="code">http://www.kumquat.com/planting/standard/new_ground.html</pre></blockquote></p>

<p>Note that parent notation has limits. For instance, most web servers will not let you navigate above the base directory: <em class="emphasis">http://www.kumquat.com/../</em> probably won't deliver any document or directory listing to your browser.</p>

</div>

<a name="html4-CHP-6-SECT-2.11.3" /><div class="sect3">
<h3 class="sect3">6.2.11.3. Using relative URLs</h3>

<p>Relative <a name="INDEX-1127" />URLs are more than just a typing
convenience. Because they are relative to the current server and
directory, you can move the entire set of documents to another
directory or even another server and never have to change a single
relative link. Imagine the difficulties if you had to go into every
source document and change the URL for every link every time you move
it. We'd loathe using hyperlinks! Use relative URLs wherever
possible.<a name="INDEX-1128" />
<a name="INDEX-1129" /> <a name="INDEX-1130" />
</p>

</div>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch06_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">6. Links and Webs</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">6.3. Creating Hyperlinks</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>