<html><head><title>XHTML (HTML &amp; XHTML: The Definitive Guide, 4th Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Chuck Musciano and Bill Kennedy" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600026XL" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="HTML &amp; XHTML: The Definitive Guide, 4th Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="HTML &amp; XHTML: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch15_08.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">HTML &amp; XHTML: The Definitive Guide, 4th Edition</a></td><td align="right" valign="top" width="228"><a href="ch16_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />



<h1 class="chapter">Chapter 16. XHTML</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch16_01.htm">Why XHTML?</a><br />
<a href="ch16_02.htm">Creating XHTML Documents</a><br />
<a href="ch16_03.htm">HTML Versus XHTML</a><br />
<a href="ch16_04.htm">Should You Use XHTML?</a><br /></p></div>

<p>Despite its name, <a name="INDEX-2684" />
<a name="INDEX-2685" />you
don't use Extensible
<a name="INDEX-2686" />Markup Language (XML) to
directly create and mark up web documents. Instead you use XML
technology to define a new markup language, which you then use to
mark up web documents. This should come as no surprise to anyone who
has read the previous chapter in this book. Nor, then, should it
surprise you that one of the first languages defined using XML is an
XML-ized version of HTML, the most popular markup language ever. HTML
is now being disciplined and cleaned up by XML to bring it back into
line with the larger family of markup languages. This new standard is
XHTML 1.0.<a href="#FOOTNOTE-80">[80]</a>
</p><blockquote class="footnote"> <a name="FOOTNOTE-80" /><p>[80]Throughout this chapter, we use
"XHTML" to mean the XHTML 1.0 standard. There is a
nascent XHTML 1.1 standard which diverges from XHTML 1.0 and HTML
4.01. See <a href="../../../../../../www.w3.org/TR/xhtml11/">http://www.w3.org/TR/xhtml11/</a> for the details and
differences.</p> </blockquote>

<p>Because of HTML's legacy features and oddities, using XML to
describe HTML was not an easy job for the W3C. In fact, certain HTML
rules, as we'll discuss later, cannot be represented using XML.
Nonetheless, if the W3C has its way, XHTML will ultimately replace
the HTML we currently know and love. We agree that it should.
</p>

<p>So much of XHTML is identical to HTML's current standard,
Version 4.01, that almost everything presented elsewhere in this book
may be applied to both HTML and XHTML. The differences, both good and
bad, are detailed in this chapter. To become fluent in XHTML,
you'll first need to absorb the rest of this book, and then
adjust your thinking to embrace what we present in this chapter.
</p>

<div class="sect1"><a name="html4-CHP-16-SECT-1" />
<h2 class="sect1">16.1. Why XHTML?</h2>

<p>HTML, as everyone should know by now, began as a simple markup
language similar in appearance and usage to other SGML-based markup
languages. In its early years, little effort was put into making HTML
perfectly SGML-compliant. As a result, odd features and a lax
attitude towards enforcing the rules became a standard part of both
HTML and the browsers that processed HTML documents.
</p>

<p>As the Web grew from an experiment into an industry, the desire for a
standard version of HTML led to the creation of several official
versions, culminating most recently with Version 4.01. As HTML has
stabilized into this latest version, browsers have become more alike
in their support of various HTML features. In general, the world of
HTML has settled into a familiar set of constructs and usage rules.
</p>

<p>Unfortunately,
<a name="INDEX-2687" />HTML offers only a limited set of
document-creation primitives, is incapable of handling nontraditional
content such as chemical formulae, musical notation, or mathematical
expressions, and fails to adequately support alternative display
media such as handheld computers or intelligent cellular phones. We
need new ways to deliver information that can be parsed, processed,
displayed, sliced, and diced by the many different communication
technologies that have emerged since the Web sparked the digital
communication revolution a decade ago.
</p>

<p>Rather than trying to rein in another herd of maverick, nonstandard
markup languages, the W3C introduced XML as a standard way to create
new markup languages. XML is the framework upon which organizations
can develop their own markup languages to suit the needs of their
users. XML is an updated version of SGML, streamlined and enhanced
for today's dynamic systems. And while the W3C originally
intended it as a tool to create document markup languages, XML is
also becoming quite useful as a standard way to define tiny little
languages that are used as data exchange protocols between different
applications.
</p>

<p>Of course, we don't want to abandon the plethora of documents
already marked up with HTML or the infrastructure of knowledge,
tools, and technologies that currently support HTML and the Web. Yet,
we do not want to miss the opportunities of XML, either. XHTML is the
bridge. It uses the features of XML to define a markup language that
is nearly identical to standard HTML 4.01 and gets us all started
down the XML road.
</p>

<a name="html4-CHP-16-SECT-1.1" /><div class="sect2">
<h3 class="sect2">16.1.1. XHTML Document Type Definitions</h3>

<p>HTML 4.01 comes in three variants, each defined by a separate SGML
DTD. Similarly XHTML also comes in three variants, with
<a name="INDEX-2688" />
<a name="INDEX-2689" />XML DTDs
corresponding to the three SGML DTDs that define HTML 4.01. To create
an XHTML document, you must choose one of these DTDs and then create
a document that uses its particular elements and rules.
</p>

<p>The first XHTML DTD corresponds to the "strict" HTML DTD.
The strict definition excludes all deprecated elements (tags and
attributes) in HTML 4.01 and forces authors to use only those
features that are fully supported in HTML. Many of the HTML elements
and attributes dealing with presentation and appearance, such as the
<tt class="literal">&lt;font&gt;</tt> tag and the <tt class="literal">align</tt>
attribute, are missing from the strict XHTML DTD, replaced by the
equivalent properties in the Cascading Style Sheet model.
</p>

<p>Most HTML authors find the strict XHTML DTD too restrictive, since
many of the deprecated elements and attributes are still in
widespread use throughout the Web. More importantly, the popular
browsers -- while fully supporting the deprecated
elements -- have yet to fully implement the new standard ones. The
only real advantage in using the strict XHTML DTD is that compliant
documents are guaranteed to be fully supported in future versions of
XHTML.<a href="#FOOTNOTE-81">[81]</a>
</p><blockquote class="footnote"> <a name="FOOTNOTE-81" /><p>[81]If the W3C has its way, HTML won't
change beyond Version 4.01. No more HTML; all new developments will
be in XHTML and many other XML-based languages.</p> </blockquote>

<p>Most authors will probably choose to use the
"transitional" XHTML DTD. It's closest to the
current HTML standard and includes all those wonderful, but
deprecated, features that make life as an HTML author easier. With
the transitional XHTML DTD, you can ease into the XML family while
staying current with the browser industry.
</p>

<p>The third DTD is for frames. It is identical to the transitional DTD
in all other respects; the only difference is the replacement of the
document body with appropriate frame elements. You might think that,
for completeness' sake, there would be strict and transitional
frame DTDs, but the W3C decided that if you use frames, you might as
well use all the deprecated elements as well.
</p>

</div>
</div>








<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch15_08.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch16_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">15.8. Using XML</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">16.2. Creating XHTML Documents</td></tr></table></div>
<hr width="694" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>