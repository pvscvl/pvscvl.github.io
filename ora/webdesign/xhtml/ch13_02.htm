<html><head><title>Client-Pull Documents (HTML &amp; XHTML: The Definitive Guide, 4th Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Chuck Musciano and Bill Kennedy" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600026XL" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="HTML &amp; XHTML: The Definitive Guide, 4th Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="HTML &amp; XHTML: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch13_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">HTML &amp; XHTML: The Definitive Guide, 4th Edition</a></td><td align="right" valign="top" width="228"><a href="ch13_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">13.2. Client-Pull Documents</h2>

<p><a name="INDEX-2461" />
<a name="INDEX-2462" />Client-pull documents are relatively
easy to prepare. All you need to do is embed a
<tt class="literal">&lt;meta&gt;</tt> tag in the header of your HTML or
XHTML document. The special tag tells the client Netscape browser to
display the current document for a specified period of time, and then
load and display an entirely new one just as if the user had selected
the new document from a hyperlink. (Note that currently there is no
way to change just a portion of a document dynamically using
client-pull.) <a href="ch06_08.htm">Section 6.8.1, "The &lt;meta&gt; Header Element"</a>
</p>

<a name="html4-CHP-13-SECT-2.1" /><div class="sect2">
<h3 class="sect2">13.2.1. Uniquely Refreshing</h3>

<p><a name="INDEX-2463" /> <a name="INDEX-2464" />
<a name="INDEX-2465" />Client-pull dynamic documents
work with Netscape and Internet Explorer because the browsers respond
to a special HTTP header field called "Refresh."
</p>

<p>You may recall from previous discussions that whenever an HTTP server
sends a document to the client browser, it precedes the
document's data with one or more header fields. One header
field, for instance, contains a description of the document's
content type, used by the browser to decide how to display the
document's contents. For example, the server precedes HTML
documents with the header "Content-type: text/html,"
whose meaning should be fairly obvious.
</p>

<p>As we discussed at length in <a href="ch06_01.htm">Chapter 6, "Links and Webs"</a>, you may
add your own special fields to an HTML document's HTTP header
by inserting a <tt class="literal">&lt;meta&gt;</tt><a name="INDEX-2466" /> tag into its
<tt class="literal">&lt;head&gt;</tt>. <a href="ch06_08.htm">Section 6.8.1, "The &lt;meta&gt; Header Element"</a>
</p>

<p>The HTTP Refresh field implements client-pull dynamic HTML documents,
enabled by the <tt class="literal">&lt;meta&gt;</tt> tag format:
</p>

<blockquote><pre class="code">&lt;meta http-equiv="Refresh" content="field value"&gt;</pre></blockquote>

<p>The tag's <tt class="literal">http-equiv</tt><a name="INDEX-2467" />
attribute tells the HTTP server to include the
<tt class="literal">Refresh</tt> field, with a value specified by the
<tt class="literal">content</tt> attribute (if any, carefully enclosed in
quotation marks), in the string of headers it sends to the client
browser just before it sends the rest of the document's
content. The browser recognizes the Refresh header as the mark of a
dynamic HTML document and responds accordingly, as we discuss next.
</p>

</div>
<a name="html4-CHP-13-SECT-2.2" /><div class="sect2">
<h3 class="sect2">13.2.2. The Refresh Header Contents</h3>

<p><a name="INDEX-2468" />The value of the
<tt class="literal">content</tt> attribute in the special
<tt class="literal">&lt;meta&gt;</tt> Refresh tag determines when and how
the browser updates the current document. Set it to an integer, and
the browser will delay that many seconds before automatically loading
another document. You may set the content field value to zero,
meaning no delay at all. In that case, the browser loads the next
document immediately after it finishes rendering the current one, by
which you may achieve some very crude animation effects. <a href="ch06_08.htm">Section 6.8.1.2, "The content attribute"</a>
</p>

<a name="html4-CHP-13-SECT-2.2.1" /><div class="sect3">
<h3 class="sect3">13.2.2.1. Refreshing the same document</h3>

<p>If the Refresh field's content value is the number of seconds
alone, the browser reloads that same document over and over again,
delaying the specified time between each cycle, until the user goes
to another document or shuts down the browser.
</p>

<p>For example, the browser will reload the following client-pull
document every 15 seconds:
</p>

<blockquote><pre class="code">&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Refresh" content="15"&gt;
&lt;title&gt;Kumquat Market Prices&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h3&gt; Kumquat Market Prices&lt;/h3&gt;
Kumquats are currently trading at $1.96 per pound.
&lt;/body&gt;
&lt;/html&gt;</pre></blockquote>

<p>The financial wizards among you may have noticed that with some
special software tricks on the server side, you can update the price
of kumquats in the document so that it acts like a ticker-tape
machine: the latest kumquat commodity price updated every 15 seconds.
</p>

</div>

<a name="html4-CHP-13-SECT-2.2.2" /><div class="sect3">
<h3 class="sect3">13.2.2.2. Refreshing with a different document</h3>

<p>Rather than reload the same document repeatedly, you can tell the
browser to load a different document dynamically. You do so by adding
that document's absolute URL after the delay time and an
intervening semicolon in the <tt class="literal">&lt;meta&gt;</tt>
tag's <tt class="literal">content</tt><a name="INDEX-2469" /> attribute. For example:
</p>

<blockquote><pre class="code">&lt;meta http-equiv="Refresh"
 content="15; URL=http://www.kumquat.com/next.html"&gt;</pre></blockquote>

<p>would cause the browser to retrieve the
<em class="filename">next.html</em> document from the
<em class="emphasis">www.kumquat.com</em> web server after having
displayed the current document for 15 seconds.
</p>

<p>The URL must be an absolute one, including server type and full
pathname; relative URLs don't work.
</p>

</div>

<a name="html4-CHP-13-SECT-2.2.3" /><div class="sect3">
<h3 class="sect3">13.2.2.3. Cycling among documents</h3>

<p><a name="INDEX-2470" />Keep in
mind that the effects of the Refresh <tt class="literal">&lt;meta&gt;</tt>
tag apply only to the document in which it appears. Hence, to cycle
among several documents, you must include a Refresh
<tt class="literal">&lt;meta&gt;</tt> tag in each one. The
<tt class="literal">content</tt> value for each document in the cycle must
contain an absolute URL that points to the next document, with the
last document pointing back to the first one to complete the cycle.
</p>

<p>For example, the following are the <tt class="literal">&lt;meta&gt;</tt>
tags for the headers of each in a three HTML-document cycle.
</p>

<p>The document <em class="emphasis">first.html</em> contains:</p>

<blockquote><pre class="code">&lt;meta http-equiv="Refresh" 
 content="30; URL=http://www.kumquat.com/second.html"&gt;</pre></blockquote>

<p>The document <em class="emphasis">second.html</em> contains:</p>

<blockquote><pre class="code">&lt;meta http-equiv="Refresh" 
 content="30; URL=http://www.kumquat.com/third.html"&gt;</pre></blockquote>

<p>And the <em class="emphasis">third.html</em> document has in its
<tt class="literal">&lt;head&gt;</tt> (besides other crazy ideas):
</p>

<blockquote><pre class="code">&lt;meta http-equiv="Refresh" 
 content="30; URL=http://www.kumquat.com/first.html"&gt;</pre></blockquote>

<p>If it is left alone, the browser will endlessly loop among the three
documents at 30-second intervals.
</p>

<p>Cycling documents make excellent attractors, catching the attention
of passers-by to a web-driven kiosk, for example. Users may then
navigate through the wider collection of kiosk documents by clicking
hyperlinks in one of the kiosk's attractor pages and subsequent
ones.<a href="#FOOTNOTE-68">[68]</a>
</p><blockquote class="footnote"> <a name="FOOTNOTE-68" /><p>[68]This brings up a good point: the user may
override the Refresh dynamic action at any time; for instance, by
clicking a hyperlink before the client-pull timeout expires. The
browser always ignores the Refresh action in lieu of user
interaction.</p> </blockquote>

<p>To return to the cycling set of attractors, each document in the rest
of the collection should have its own Refresh fields that eventually
point back to the attractor. You should specify a fairly long delay
period for the nonattractor pages -- 120 to 300 seconds or
more -- so that the kiosk doesn't automatically reset while
a user is reading the current document. However, the delay period
should be short enough so that the kiosk resets to the attractor mode
in a reasonable period of time after the user finishes.<a name="INDEX-2471" /> <a name="INDEX-2472" /> <a name="INDEX-2473" /> <a name="INDEX-2474" />
</p>

</div>
</div>
<a name="html4-CHP-13-SECT-2.3" /><div class="sect2">
<h3 class="sect2">13.2.3. Pulling Non-HTML Content</h3>

<p><a name="INDEX-2475" /> <a name="INDEX-2476" /> <a name="INDEX-2477" />Netscape's and Internet
Explorer's client-pull feature is not restricted to HTML
documents, although it is certainly easiest to create dynamic
documents with HTML. With a bit of server-side programming, you can
add a Refresh field to the HTTP header of any sort of document from
audio files to images to video clips.
</p>

<p>For example, create a real-time video feed by adding a Refresh header
field in each of a sequence of images grabbed and digitized from a
camera. Include a delay of zero with the URL that points to the next
image, so that as quickly as the browser displays one image, it
retrieves the next. Assuming that the network keeps up, the result is
a crude (really crude) TV.
</p>

<p>Since the browser clears the window before presenting each subsequent
image, the resulting flicker and flash make it almost impossible to
present a coherent sequence of images. This technique is more
effective when presenting a series of images designed to be viewed as
a slide show, where the user expects some sort of display activity
between each of the images.
</p>

<p>Perhaps a better use of the client-pull feature is with long-playing
multimedia documents for which Netscape and Internet Explorer use
special helper applications to display. On a multitasking computer,
such as one running Unix or Windows 98, the browser downloads one
document, while a helper application plays another. Combine the
client-pull capabilities with that multitasking to improve multimedia
document performance. Rather than wait for a single, large document
like a movie or audio file to download before playing, break it into
smaller segments, each automatically downloaded by the previous
segment via the Refresh header. The browser will play the first
segment while downloading the second, then third, then fourth, and so
on.<a name="INDEX-2478" />
<a name="INDEX-2479" /> <a name="INDEX-2480" />
</p>

</div>
<a name="html4-CHP-13-SECT-2.4" /><div class="sect2">
<h3 class="sect2">13.2.4. Combining Refresh with Other HTTP Header Fields</h3>

<p><a name="INDEX-2481" />
<a name="INDEX-2482" />You can have
your client-pull dynamic documents perform some neat tricks by
combining the effects of the Refresh field with other HTTP header
fields. One combination in particular is most useful: Refresh with a
"Redirect" field.
</p>

<p>The Redirect field lets the server tell the browser to retrieve the
requested document elsewhere at the field's accompanying URL
value. The client browser automatically redirects its request to the
new URL and gets the document from the new location, usually without
telling the user. We retrieve redirected documents all the time and
may never notice.
</p>

<p>The most common cause for redirection is when someone moves their
HTML document collection to a new directory or to a new server. As a
courtesy, the webmaster programs the original host server to send an
HTTP header field containing the Redirect field and new URL (without
a document body) to any and all browsers that request the document
from the original location. That way, the new document location is
transparent to users, and they won't have to reset their
browser bookmarks.
</p>

<p>But sometimes you want the user to reset their bookmarks to the new
location because the old one won't be redirecting browsers
forever, perhaps because it's being taken out of service. One
way to notify users of the new location is to have the redirection
URL point to some HTML document other than the home page of the new
collection that contains a message about the new location. Once
noted, users then take a "Continue" hyperlink to the new
home page location and set their bookmarks accordingly.
</p>

<p>By combining the Redirect and Refresh fields, you can make that
notification screen automatically move to the new home page. If the
browser receives an HTTP header with both fields, it will honor both;
it immediately fetches the redirected URL and displays it, and it
sets the refresh timer and replacement URL, if specified. When the
time expires, the browser retrieves the next URL -- your new home
page location -- automatically.
</p>

<a name="html4-CHP-13-SECT-2.4.1" /><div class="sect3">
<h3 class="sect3">13.2.4.1. A random URL generator</h3>

<p><a name="INDEX-2483" /> <a name="INDEX-2484" />Another application for the
combination of Redirect and Refresh HTTP header fields is a
perpetual, random URL generator. You'll need some programming
skills to create a server-side application that selects a random URL
from a prepared list and outputs a Redirect field that references
that URL along with a Refresh field that reinvokes the random-URL
application after some delay.
</p>

<p>When Netscape or Internet Explorer receives the complete header, it
immediately loads and displays the randomly selected document
specified in the Redirect field's URL. After the delay
specified in the Refresh field, the browser reruns the random-URL
generator on the server (as specified in the Refresh URL), and the
cycle starts over. The result is an endless cycle of random URLs
displayed at regular intervals.
</p>

</div>
</div>
<a name="html4-CHP-13-SECT-2.5" /><div class="sect2">
<h3 class="sect2">13.2.5. Performance Considerations</h3>

<p><a name="INDEX-2485" />Client-pull documents consume extra
network resources, especially when the refresh delay is small, since
each refresh may involve a completely new connection to a server. It
may take a browser several seconds to contact the server and begin
retrieving the document. As a result, rapid updates generally are not
feasible, especially over slow network connections.
</p>

<p>Use client-pull dynamic documents for low-frequency updates of entire
documents, or for cycling among documents without user
intervention.<a name="INDEX-2486" /> <a name="INDEX-2487" /> <a name="INDEX-2488" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch13_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch13_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">13. Dynamic Documents</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">13.3. Server -Push Documents</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>