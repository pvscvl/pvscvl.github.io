<html><head><title>Creating XHTML Documents (HTML &amp; XHTML: The Definitive Guide, 4th Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Chuck Musciano and Bill Kennedy" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600026XL" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="HTML &amp; XHTML: The Definitive Guide, 4th Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="HTML &amp; XHTML: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch16_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">HTML &amp; XHTML: The Definitive Guide, 4th Edition</a></td><td align="right" valign="top" width="228"><a href="ch16_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">16.2. Creating XHTML Documents</h2>

<p>For the <a name="INDEX-2690" />
<a name="INDEX-2691" />most part, creating an <a name="INDEX-2692" />XHTML
document is no different than creating an HTML document. Using your
favorite text editor, simply add the markup elements in the right
order to your document's contents, and display it using your
favorite browser. To be strictly correct ("valid," as
they say at the W3C), your XHTML document will need a boilerplate
declaration up front that specifies the DTD you used to create the
document and defines a namespace for the document.
</p>

<a name="html4-CHP-16-SECT-2.1" /><div class="sect2">
<h3 class="sect2">16.2.1. Declaring Document Types</h3>

<p>For an XHTML browser to correctly parse <a name="INDEX-2693" /> <a name="INDEX-2694" />and
display your XHTML document, you should tell it which version of XML
is being used to create the document. You must also state which XHTML
DTD defines the elements in your document.
</p>

<p>The XML version declaration uses a special <a name="INDEX-2695" /> <a name="INDEX-2696" />XML processing
directive. In general, these XML directives begin with
<tt class="literal">&lt;?</tt> and end with <tt class="literal">?&gt;</tt>, but
otherwise they look like typical tags in your document.<a href="#FOOTNOTE-82">[82]</a></p><blockquote class="footnote">
<a name="FOOTNOTE-82" /><p>[82]<tt class="literal">&lt;!</tt> was already taken.</p> </blockquote>

<p>To declare that you are using XML Version 1.0, place this directive
in the first line in your document:
</p>

<blockquote><pre class="code">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</pre></blockquote>

<p>This tells the browser that you are using XML 1.0 along with the
8-bit Unicode character set, the one most commonly used today. The
<tt class="literal">encoding</tt> attribute's value should reflect
your local character set. Refer to the appropriate ISO standards for
other encoding names.
</p>

<p>Once you've gotten the important issue of the XML version
squared away, you should then declare the markup language's
DTD:
</p>

<blockquote><pre class="code">&lt;!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;</pre></blockquote>

<p>With this statement, you declare that your document's root
element is <tt class="literal">html</tt>, as defined in the DTD whose
public identifier is defined as <tt class="literal">"-//W3C//DTD XHTML</tt>
<tt class="literal">1.0 Strict//EN"</tt>. The browser may know how to find
the DTD matching this public identifier. If it does not, it can use
the URL following the public identifier as an alternative location
for the DTD.
</p>

<p>As you may have noticed, the <tt class="literal">&lt;!DOCTYPE&gt;</tt>
directive has told the browser to use the strict XHTML DTD.
Here's the one you'll probably use for your transitional
XHTML documents:
</p>

<blockquote><pre class="code">&lt;!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</pre></blockquote>

<p>And, as you might expect, the <tt class="literal">&lt;!DOCTYPE&gt;</tt>
directive for the frame-based XHTML DTD is:
</p>

<blockquote><pre class="code">&lt;!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd"&gt;</pre></blockquote>

</div>
<a name="html4-CHP-16-SECT-2.2" /><div class="sect2">
<h3 class="sect2">16.2.2. Understanding Namespaces</h3>

<p>As <a name="INDEX-2697" /> <a name="INDEX-2698" />described
in the last chapter, an XML DTD defines any number of element and
attribute names as part of the markup language. These elements and
attribute names are stored in a <em class="emphasis">namespace</em> that
is unique to the DTD. As you reference elements and attributes in
your document, the browser looks them up in the namespace to find out
how they should be used.
</p>

<p>For instance, the <tt class="literal">&lt;a&gt;</tt> tag's name
("a") and attributes like "href " and
"style" are defined in the XHTML DTD and their names are
placed in the DTD's namespace. Any "processing
agent" -- usually a browser, but your eyes and brain can
serve the same function -- can look up the name in the appropriate
DTD to figure out what the markup means and what it should do.
</p>

<p>With XML, your document actually may use more than one DTD, and
therefore need more than one namespace. For example, you might create
a transitional XHTML document, but also include special markup for
some math expressions according to an XML math language. What happens
when both the XHTML DTD and the math DTD use the same name to define
different elements, such as <tt class="literal">&lt;a&gt;</tt> for XHTML
hypertext and <tt class="literal">&lt;a&gt;</tt> for an absolute value in
math? How does the browser choose which namespace to use?
</p>

<p>The answer is the <a name="INDEX-2699" /><tt class="literal">xmlns</tt><a href="#FOOTNOTE-83">[83]</a>
attribute. Use it to define one or more alternative namespaces within
your document. It can be placed within the start tag of any element
within your document, and its URL-like<a href="#FOOTNOTE-84">[84]</a> value defines the
namespace that the browser should use for all content within that
element.
</p><blockquote class="footnote">
<a name="FOOTNOTE-83" /><p>[83]XML namespace -- <tt class="literal">xmlns</tt> -- get it? This
is why XML doesn't let you begin any element or attribute with
the three-letter prefix "xml": it's reserved for
special XML attributes and elements.</p> </blockquote><blockquote class="footnote"> <a name="FOOTNOTE-84" /><p>[84]It looks like
a URL, and you might think that it references a document that
contains the namespace, but alas, it doesn't. It is simply a
unique name that identifies the namespace. Display agents use that
placeholder to refer to their own resources for how to treat the
named element or attribute. </p> </blockquote>

<p>With XHTML, according to the new XML conventions, you should at the
very least include an <tt class="literal">xmlns</tt> attribute within your
document's <tt class="literal">&lt;html&gt;</tt> tag that identifies
the primary namespace used throughout the document:
</p>

<blockquote><pre class="code">&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;</pre></blockquote>

<p>If and when you need to include math markup, you use the
<tt class="literal">xmlns</tt> attribute again to define the math
namespace. So, for instance, you could use the
<tt class="literal">xmlns</tt> attribute within some math-specific tag of
your otherwise common XHTML document (assuming the
<tt class="literal">MATH</tt> element exists, of course):
</p>

<blockquote><pre class="code">&lt;div xmlns="http://www.w3.org/1998/Math/MathML&gt;x2/x&lt;/div"&gt;</pre></blockquote>

<p>In this case, the XML-compliant browser would use the <a href="../../../../../../www.w3.org/1998/Math/MathML">http://www.w3.org/1998/Math/MathML</a> namespace
to divine that this is the MATH, not the XHTML, version of the
<tt class="literal">&lt;div&gt;</tt> tag, and should therefore be displayed
as a division equation.
</p>

<p>It would quickly become tedious if you had to embed the
<tt class="literal">xmlns</tt> attribute into each and every
<tt class="literal">&lt;div&gt;</tt> tag any time you wanted to show a
division equation in your document. A better way -- particularly
if you plan to apply it to many different elements in your
document -- is to identify and label the namespace at the
beginning of your document, and then refer to it by that label as a
prefix to the affected element in your document. For example:
</p>

<blockquote><pre class="code">&lt;html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:math="http://www.w3.org/1998/Math/MathML"&gt;</pre></blockquote>

<p>The <tt class="literal">math</tt> namespace can now be abbreviated to
"math" later in your document. So the streamlined:
</p>

<blockquote><pre class="code">&lt;math:div&gt;x2/x&lt;/div&gt;</pre></blockquote>

<p>now has the same effect as the lengthy earlier example of the math
<tt class="literal">&lt;div&gt;</tt> tag containing its own
<tt class="literal">xmlns</tt> attribute.
</p>

<p>For the most part, the vast majority of XHTML authors will never need
to define multiple namespaces and so will never have to use fully
qualified names containing the namespace prefix. Even so, you should
understand that multiple namespaces exist and that you will need to
manage them if you choose to embed content based upon one DTD within
content <a name="INDEX-2700" /> <a name="INDEX-2701" />defined by another DTD.
</p>

</div>
<a name="html4-CHP-16-SECT-2.3" /><div class="sect2">
<h3 class="sect2">16.2.3. A Minimal XHTML Document</h3>

<p>As a courtesy to all fledgling XHTML authors, we now present the
minimal and correct <a name="INDEX-2702" />XHTML document, including all the
appropriate XML, XHTML, and namespace declarations. With this most
difficult part out of the way, you need only supply content to create
a complete XHTML document:
</p>

<blockquote><pre class="code">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE html 
          PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;
  &lt;head&gt;
    &lt;title&gt;Every document must have a title&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    ...your content goes here...
  &lt;/body&gt;
&lt;/html&gt;</pre></blockquote>

<p>Working through the minimal document one element at a time, we begin
by declaring we are basing the document on the XML 1.0 standard and
using 8-bit Unicode characters to express its contents and markup. We
then announce, in the familiar HTML-like
<tt class="literal">&lt;!DOCTYPE&gt;</tt> statement, that we are following
the markup rules defined in the transitional XHTML 1.0 DTD, which
allow us free rein to use nearly any and all HTML 4.01 elements in
our document.
</p>

<p>Our document content actually begins with the
<tt class="literal">&lt;html&gt;</tt> tag, which has its
<tt class="literal">xmlns</tt> attribute declare that the XHTML namespace
will be the default namespace for the entire document. Also note the
<tt class="literal">lang</tt> attribute, in both the XML and XHTML
namespaces, which declares that the document language is English.
</p>

<p>Finally, we include the familiar document
<tt class="literal">&lt;head&gt;</tt> and <tt class="literal">&lt;body&gt;</tt>
tags, <a name="INDEX-2703" />along with the required
<tt class="literal">&lt;title&gt;</tt> tag.
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch16_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch16_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">16. XHTML</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">16.3. HTML Versus XHTML</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>