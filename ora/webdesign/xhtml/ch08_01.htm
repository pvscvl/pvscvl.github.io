<html><head><title>Cascading Style Sheets (HTML &amp; XHTML: The Definitive Guide, 4th Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Chuck Musciano and Bill Kennedy" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600026XL" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="HTML &amp; XHTML: The Definitive Guide, 4th Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="HTML &amp; XHTML: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch07_08.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">HTML &amp; XHTML: The Definitive Guide, 4th Edition</a></td><td align="right" valign="top" width="228"><a href="ch08_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />



<h1 class="chapter">Chapter 8. Cascading Style Sheets</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch08_01.htm">The Elements of Styles</a><br />
<a href="ch08_02.htm">Style Syntax</a><br />
<a href="ch08_03.htm#html4-CHP-8-SECT-3">Style Classes</a><br />
<a href="ch08_04.htm">Style Properties</a><br />
<a href="ch08_05.htm">Tag-less Styles: The &lt;span&gt; Tag</a><br />
<a href="ch08_06.htm">Applying Styles to Documents</a><br /></p></div>

<p>Style sheets are the <a name="INDEX-1422" />
<a name="INDEX-1423" />way publishing
professionals manage the overall "look" of their
publications -- backgrounds, fonts, colors, and so on -- from a
single page to huge collections of documents. Most desktop publishing
software support style sheets, as do the popular word processors. All
desktop publishers and graphic designers worth their salt are out
there making web pages. So the cry-to-arms was inevitable:
"Whaddaya mean HTML has no style sheets?!"
</p>

<p><a name="INDEX-1424" /> <a name="INDEX-1425" />From
its origins, HTML focused on content over style. Authors are
encouraged to worry about providing high quality information and
leave it to the browser to worry about presentation. We strongly urge
you, too -- as we do throughout this book -- to adopt that
philosophy in your documents, especially those destined for the World
Wide Web. Don't mistake style for substance.
</p>

<p>However, while use of the <tt class="literal">&lt;font&gt;</tt> tag and
related attributes like <tt class="literal">color</tt> produce acute
presentation effects, style sheets, when judiciously applied, bring
consistency and order to whole document collections, as well as to
individual documents. Remember, too, that presentation is for the
benefit of the reader. Even the original designers of HTML understood
the interplay between style and readability. For instance, readers
can quickly identify section heads in a document when they are
enclosed in header tags like <tt class="literal">&lt;h2&gt;</tt>, which the
modern browsers present in large and often bold type. Style sheets
extend that presentation with several additional effects, including
colors, a wider selection of fonts, even sounds so that users can
even better distinguish elements of your document. But most
importantly, style sheets let you control the presentation attributes
for all the tags in a document -- for a single document or a whole
collection of many documents, and from a single master.
</p>

<p><a name="INDEX-1426" />In
early 1996, the World Wide Web Consortium put together a draft
proposal defining Cascading Style Sheets (CSS) for HTML. This draft
proposal quickly matured into a recommended standard, which the
commercial browser manufacturers were quick to exploit. In mid-1998,
the W3C extended the original specification to create CSS2 which
includes presentation standards for a variety of media besides the
familiar onscreen browser, along with a several other enhancements.
</p>

<p>Up to now, however, no browser or web agent fully complies with the
CSS2 standard. Since we realize that eventual compliance with the W3C
standard is likely, we'll cover all the components of the
standard in this chapter, even if they are not yet supported by any
browser. As always, we'll denote clearly what is real, what is
proposed, and what is actually supported.
</p>

<p>What we can't do is tell you everything the CSS2 standard
provides. Like JavaScript, the Cascading Style Sheet standard
deserves a Definitive Guide of its own. Rather, we focus here on the
elements of style sheets that impact HTML and XHTML in general and
the popular GUI-based browsers, Internet Explorer and Netscape
Navigator, in particular. These encompass the majority of the CSS2
standard. What's left out are discussions of other media. We
tell you how to tailor your documents to other media, but we
don't go into the specifics, such as the CSS2 properties that
control paging devices like printers or aural style sheets that
govern the presentation of content through speech synthesis.
Don't get us wrong; these are fascinating and important topics.
They just go beyond our charter.
</p>

<div class="sect1"><a name="html4-CHP-8-SECT-1" />
<h2 class="sect1">8.1. The Elements of Styles</h2>

<p>At the simplest level, a style is nothing more than a rule that tells
the browser how to render<a href="#FOOTNOTE-47">[47]</a> a particular tag's contents. Each
tag has a number of style properties associated with it, whose values
define how that tag is rendered by the browser. A rule defines a
specific value for one or more properties of a tag. For example, most
tags have a <tt class="literal">color</tt> property, the value of which
defines the color Netscape or Internet Explorer may use to display
the contents of the tag. Other properties include fonts, line
spacing, margins, borders, sound volume, and voice, which we describe
in detail later in this chapter.
</p><blockquote class="footnote"> <a name="FOOTNOTE-47" /><p>[47]We explicitly avoided the
term "display" here because it connotes visual
presentation, whereas the CSS2 standard works hard to suggest many
different ways of presenting the tagged contents of a
document.</p> </blockquote>

<p>There are three ways to attach a style to a tag: inline styles,
document-level styles, and external style sheets. You may use one or
more style sheets for your documents. The browser either merges the
style definitions from each style or redefines the style
characteristic for a tag's contents. Styles from these various
sources are applied to your document, combining and defining style
properties that cascade from external style sheets through local
document styles, ending with inline styles. This cascade of
properties and style rules gives rise to the standard's name:
Cascading Style Sheets.
</p>

<p>We cover the syntactic basics of the three style sheet techniques
here. We delve more deeply into the appropriate use of inline,
document-level, and external style sheets at the end of this chapter.
</p>

<a name="html4-CHP-8-SECT-1.1" /><div class="sect2">
<h3 class="sect2">8.1.1. Inline Styles: The style Attribute</h3>
<p>The <a name="INDEX-1427" />
<a name="INDEX-1428" />
<a name="INDEX-1429" />inline style is the simplest way to attach a style to a tag -- just include a <tt class="literal">style</tt> attribute with the tag along with a list of properties and their values. The browser uses those style properties and values to render the contents of just this instance of the tag.</p>


<p>For instance, the following style tells the browser to display the
level-1 header text, "I'm so bluuuuoooo!", not only
in the <tt class="literal">&lt;h1&gt;</tt> tag style characteristic of the
browser, but also in the color blue and italicized (if the browser is
capable):
</p>

<blockquote><pre class="code">&lt;h1 style="color: blue; font-style: italic"&gt;I'm so bluuuuoooo!&lt;/h1&gt;</pre></blockquote>

<p>This type of style definition is called "inline" because
it occurs with the tag as it appears in the document. The scope of
the style covers the contents of that tag only. Since inline styles
are sprinkled throughout your document, they can be difficult to
maintain. Use the <tt class="literal">style</tt> attribute sparingly and
only in those rare circumstances when you cannot achieve the same
effects otherwise.
</p>

</div>
<a name="html4-CHP-8-SECT-1.2" /><div class="sect2">
<h3 class="sect2">8.1.2. Document-Level Style Sheets</h3>

<p><a name="INDEX-1430" /> <a name="INDEX-1431" /> <a name="INDEX-1432" /> <a name="INDEX-1433" />The
real power of style sheets becomes more evident when you place a list
of presentation rules within the head of a document. Enclosed within
their own <tt class="literal">&lt;style&gt;</tt> and
<tt class="literal">&lt;/style&gt;</tt> end tags, so-called
"document-level" style sheets affect all the same tags
within that document, except for tags that contain an overriding
inline <tt class="literal">style</tt> attribute.<a href="#FOOTNOTE-48">[48]</a>
</p><blockquote class="footnote">
<a name="FOOTNOTE-48" /><p>[48]XHTML-based document-level style sheets get specially enclosed
in CDATA sections of your documents. See <a href="ch16_01.htm">Chapter 16, "XHTML"</a> for details.</p> </blockquote>

<a name="html4-CHP-8-SIDEBAR-1" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">&lt;style&gt;</h4>

<dl>
<dt><b>Function:</b></dt>
<dd>
<p>Define a document-level style sheet</p>
</dd>


<dt><b>Attributes:</b></dt><dd>

<table border="0">
<tr><td><p>DIR</p></td></tr>


<tr><td><p>LANG</p></td></tr>


<tr><td><p>MEDIA</p></td></tr>


<tr><td><p>TITLE</p></td></tr>


<tr><td><p>TYPE</p></td></tr>

</table></dd></dl>
<dl>
<dt><b>End tag:</b></dt>
<dd>
<p>&lt;/style&gt;; rarely omitted in HTML</p>
</dd>

</dl>

<dl>
<dt><b>Contains:</b></dt>
<dd>
<p><em class="emphasis">styles</em></p>
</dd>

</dl>

<dl>
<dt><b>Used in:</b></dt>
<dd>
<p><em class="emphasis">head_content</em></p>
</dd>

</dl>
</td></tr></table></blockquote>
<p>The <tt class="literal">&lt;style&gt;</tt> tag must appear within the <tt class="literal">&lt;head&gt;</tt> of a document. Everything between the <tt class="literal">&lt;style&gt;</tt> and <tt class="literal">&lt;/style&gt;</tt> tags is considered part of the style rules to be applied to the document. To be perfectly correct, the contents of the <tt class="literal">&lt;style&gt;</tt> tag are not HTML or XHTML and are not bound by the normal rules for markup content. The <tt class="literal">&lt;style&gt;</tt> tag, in effect, lets you insert foreign content into your document that the browser uses to format your tags.</p>


<p>For example, a styles-conscious browser will display the contents of
all <tt class="literal">&lt;h1&gt;</tt> tags as blue, italic text in a
document that has the following document-level style sheet definition
in its head:<a href="#FOOTNOTE-49">[49]</a>
</p><blockquote class="footnote"> <a name="FOOTNOTE-49" /><p>[49]This is an HTML example. An XHTML
document would enclose styles in a CDATA section instead of in HTML
comments. See <a href="ch16_03.htm">Section 16.3.7, "Handling Special Characters"</a> for
details.</p> </blockquote>

<blockquote><pre class="code">&lt;head&gt;
&lt;title&gt;All True Blue&lt;/title&gt;
&lt;style type="text/css"&gt;
  &lt;!--
  /* make all level-1 headers blue */
  h1 {color: blue; font-style: italic}
  --&gt;
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;I'm so bluuuuoooo!&lt;/h1&gt;
...
&lt;h1&gt;I am ba-loooooo, tooooo!&lt;h1/&gt;</pre></blockquote>

<a name="html4-CHP-8-SECT-1.2.1" /><div class="sect3">
<h3 class="sect3">8.1.2.1. The type attribute</h3>

<p>The <tt class="literal">type</tt><a name="INDEX-1434" /> attribute defines the types of styles
you are including within the tag. Cascading style sheets are all type
<tt class="literal">text/css</tt><a name="INDEX-1435" /> <a name="INDEX-1436" />
<a name="INDEX-1437" />
<a name="INDEX-1438" />; JavaScript style sheets use the type
<tt class="literal">text/javascript</tt>. You may omit the
<tt class="literal">type</tt> attribute and hope the browser will figure
out the kind of styles you are using. We prefer to include the
<tt class="literal">type</tt> attribute so that there is no opportunity for
confusion. <a href="ch12_04.htm">Section 12.4, "JavaScript Style Sheets"</a>
</p>

</div>

<a name="html4-CHP-8-SECT-1.2.2" /><div class="sect3">
<h3 class="sect3">8.1.2.2. The media attribute</h3>

<p><a name="INDEX-1439" />HTML and
XHTML documents can wind up in the strangest places these days, even
on cellular phones. To help the browser figure out the best way to
render your documents, the HTML 4 and XHTML standards let you include
the <tt class="literal">media</tt> attribute within the
<tt class="literal">&lt;style&gt;</tt> tag. The value of this attribute is
the medium for which this document is intended; the default value is
<tt class="literal">screen</tt><a name="INDEX-1440" /> <a name="INDEX-1441" /> <a name="INDEX-1442" /> <a name="INDEX-1443" /> <a name="INDEX-1444" /> <a name="INDEX-1445" /> <a name="INDEX-1446" /> <a name="INDEX-1447" /> <a name="INDEX-1448" />. Other defined values are
<tt class="literal">tty</tt>, <tt class="literal">tv</tt>,
<tt class="literal">projection</tt>, <tt class="literal">handheld</tt>,
<tt class="literal">print</tt>, <tt class="literal">braille</tt>,
<tt class="literal">aural</tt>, and <tt class="literal">all</tt>.
</p>

<p>A document intended for multiple media can use a quote-enclosed,
comma-separated list of media types as the value of this attribute.
For example:
</p>

<blockquote><pre class="code">&lt;style type="text/css" media="screen,print"&gt;</pre></blockquote>

<p>tells the browser that your document is layed out using CSS for
display on both print pages and on a computer or other intelligent
display screen.
</p>

<p>By specifying media, the browser applies the styles you define within
the <tt class="literal">&lt;style&gt;</tt> tag only if the document is
being displayed on that medium. Thus, the browser would not apply our
example set of styles designed for
<tt class="literal">media="screen,print"</tt> if the user is, for instance,
connected to the Web with a handheld computer.
</p>

<p>The CSS2 standard also lets you define media-specific style sheets
through its extension to the <tt class="literal">@import</tt> at-rule and
through the <tt class="literal">@media</tt> at-rule. More about this in <a href="ch08_01.htm">Section 8.1.4, "Media-Specific Styles"</a>.
</p>

</div>

<a name="html4-CHP-8-SECT-1.2.3" /><div class="sect3">
<h3 class="sect3">8.1.2.3. The dir, lang, and title attribute</h3>

<p>As with any HTML/XHTML element, you can associate a descriptive title
with the <tt class="literal">&lt;style&gt;</tt> tag. If the browser chose
to display this title to the user, it would use the values of the
<tt class="literal">dir</tt> and <tt class="literal">lang</tt> attributes to
correctly render the title. <a href="ch03_06.htm">Section 3.6.1.1, "The dir attribute"</a> <a href="ch03_06.htm">Section 3.6.1.2, "The lang attribute"</a> <a href="ch04_01.htm">Section 4.1.1.5, "The title attribute"</a> <a name="INDEX-1449" /> <a name="INDEX-1450" /> <a name="INDEX-1451" /> <a name="INDEX-1452" />
</p>

</div>
</div>
<a name="html4-CHP-8-SECT-1.3" /><div class="sect2">
<h3 class="sect2">8.1.3. External Style Sheets</h3>

<p><a name="INDEX-1453" /> <a name="INDEX-1454" />You may also place style
definitions, like our document-level style sheet example for the
<tt class="literal">&lt;h1&gt;</tt> tags, into a text file with the MIME
type of <tt class="literal">text/css</tt> and import this
"external" style sheet into your documents. Because an
external style sheet is a separate file and is loaded by the browser
over the network, you can store it anywhere, reuse it often, and even
use others' style sheets. But most important, external style
sheets give you the power to influence the display styles not only of
all related tags in a single document, but for an entire collection
of documents.
</p>

<p>For example, suppose we create a file named
<tt class="literal">gen_styles.css</tt> containing the style rule:
</p>

<blockquote><pre class="code">h1 {color: blue; font-style: italic}</pre></blockquote>

<p>For each and every one of the documents in our collections, we can
tell the browser to read the contents of the
<tt class="literal">gen_styles.css</tt> file, which in turn will color all
the <tt class="literal">&lt;h1&gt;</tt> tag contents blue and render the
text in italic. Of course, that will be true only if the user's
machine is capable of these style tricks, they are using a
styles-conscious browser like Netscape or Internet Explorer, and the
style isn't overridden by a document-level or inline style
definition.
</p>

<p>You can load external style sheets into your document in two
different ways: linked or imported.
</p>

<a name="html4-CHP-8-SECT-1.3.1" /><div class="sect3">
<h3 class="sect3">8.1.3.1. Linked external style sheets</h3>

<p><a name="INDEX-1455" /> <a name="INDEX-1456" />One way to load an external style
sheet is to use the <tt class="literal">&lt;link&gt;</tt> tag:
</p>

<blockquote><pre class="code">&lt;head&gt;
&lt;title&gt;Style linked&lt;/title&gt;
&lt;link rel=stylesheet type="text/css"
      href="http://www.kumquats.com/styles/gen_styles.css" 
      title="The blues"&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;I'm so bluuuuoooo!&lt;/h1&gt;
...
&lt;h1&gt; I am ba-loooooo, tooooo!&lt;h1&gt;</pre></blockquote>

<p>Recall that the <tt class="literal">&lt;link&gt;</tt> tag creates a
relationship between the current document and some other document on
the Web. In the example, we tell the browser that the document named
in the <tt class="literal">href</tt> attribute is a
<tt class="literal">stylesheet</tt> and that its contents conform to the
CSS2 standard, as indicated by the <tt class="literal">type</tt> attribute.
We also provide a <tt class="literal">title</tt> for the style sheet,
making it available for later reference by the browser. <a href="ch06_07.htm">Section 6.7.2, "The &lt;link&gt; Header Element"</a> 
</p>

<p>The <tt class="literal">&lt;link&gt;</tt> tag must appear in the
<tt class="literal">&lt;head&gt;</tt> of a document. The URL of the style
sheet may be absolute or relative to the document's base URL.
The type may also be <tt class="literal">text/javascript</tt>, indicating
(for Netscape only) that the style rules are written in JavaScript
instead of CSS2 syntax. <a href="ch12_04.htm">Section 12.4, "JavaScript Style Sheets"</a>
</p>

</div>

<a name="html4-CHP-8-SECT-1.3.2" /><div class="sect3">
<h3 class="sect3">8.1.3.2. Imported external style sheets</h3>

<p><a name="INDEX-1457" />
<a name="INDEX-1458" /> <a name="INDEX-1459" />The second technique for loading an
external style sheet imports the files with a special command (aka
"<a name="INDEX-1460" />at-rule") within the
<tt class="literal">&lt;style&gt;</tt> tag:
</p>

<blockquote><pre class="code">&lt;head&gt;
&lt;title&gt;Imported style sheet&lt;/title&gt;
&lt;style&gt;
  &lt;!--
    @import url(http://www.kumquats.com/styles/gen_styles.css);
    @import "http://www.kumquats.com/styles/spec_styles.css";
    body {background: url(backgrounds/marble.gif)}
  --&gt;
&lt;/style&gt;
&lt;/head&gt;</pre></blockquote>

<p>The <tt class="literal">@import</tt> at-rule expects a single URL parameter
that names the network path to the external style sheet. The URL may
be a string enclosed in double-quotes and ending with a semicolon, or
be the contents of the <tt class="literal">url</tt> keyword, enclosed in
parentheses and with a trailing semicolon. The URL may be absolute or
relative to the document's base URL.
</p>

<p>The <tt class="literal">@import</tt> at-rule must appear
<em class="emphasis">before</em> any conventional style rules, either in
the <tt class="literal">&lt;style&gt;</tt> tag or in an external style
sheet. Otherwise, the standard insists that the browser ignore the
errant <tt class="literal">@import</tt>. By first importing all the various
style sheets, then processing document-level style rules, the CSS2
standard cascades: the last one standing wins. 
 <a href="ch08_04.htm">Section 8.4.1.4, "URL property values"</a> 
</p>

<p>The <tt class="literal">@import</tt> at-rule can appear in a document-level
style definition or even in another external style sheet, letting you
create nested style sheets.
</p>

</div>
</div>
<a name="html4-CHP-8-SECT-1.4" /><div class="sect2">
<h3 class="sect2">8.1.4. Media-Specific Styles</h3>

<p>Besides the
<a name="INDEX-1461" /><tt class="literal">media</tt>
attribute for the <tt class="literal">&lt;style&gt;</tt> tag, the CSS2
standard has two other features that let you apply different style
sheets depending on the agent or device that will render your
document. This way, for instance, you can have one style or whole
style sheet take effect when your document gets rendered on a
computer screen, and another set of styles for when the contents get
punched out on a braille printer. And what about those cell phones on
the Web?
</p>

<p>Like the media attribute for the style tag that affects the entire
style sheet, you can specify whether the user's document
processor<a href="#FOOTNOTE-50">[50]</a> will load and use an imported
style sheet.</p><blockquote class="footnote"> <a name="FOOTNOTE-50" /><p>[50]A.k.a. "user agent." Web
documents get rendered on all kinds of devices these days, including
the popular browser, braille printers, televisions, and projectors,
to name just a few.</p> </blockquote>

<p>Do that by adding a media-type keyword or a series of
comma-separated keywords to the end of the <tt class="literal">@import</tt>
at-rule. For instance, the following example lets the user-agent
decide to import and use the speech-synthesis style sheet or a common
PC display and print style sheet if it is able to render the
specified media types:
</p>

<blockquote><pre class="code">@import url(http://www.kumquats.com/styles/visual_styles.css) screen,print;
@import "http://www.kumquats.com/styles/speech_styles.css" aural;</pre></blockquote>

<p>The CSS2 media types include <tt class="literal">all</tt>,
<tt class="literal">aural</tt> (speech synthesizers, for example),
<tt class="literal">braille</tt> (tactile), <tt class="literal">embossed</tt>
(braille printers), <tt class="literal">handheld</tt>,
<tt class="literal">print</tt>, <tt class="literal">projection</tt>,
<tt class="literal">screen</tt>, <tt class="literal">tty</tt> (fixed-width
fonts), and <tt class="literal">tv</tt>.
</p>

<p>Another CSS2 way to select media is through the explicit
<tt class="literal">@media</tt><a name="INDEX-1462" />
<a name="INDEX-1463" /> at-rule, which lets you include
media-specific rules within the same style sheet, either at the
document level or in an external style sheet. At the document level,
like <tt class="literal">@import</tt>, the <tt class="literal">@media</tt>
at-rule must appear within the <tt class="literal">&lt;style&gt;</tt> tag
contents. And the at-rules may not appear within another rule. Unlike
<tt class="literal">@import</tt>, <tt class="literal">@media</tt> may appear
subsequent to other style rules, and indeed its style-rule contents
may override previous rules according to the cascading standard.
</p>

<p>The contents of <tt class="literal">@media</tt> include one or more
comma-separated media-type keywords followed by a curly-braces ({})
enclosed set of style rules. For example:
</p>

<blockquote><pre class="code">body {background: white}
@media tv, projection	 {
     body {background: lt_blue}
     }</pre></blockquote>

<p>The general style rule for the document's body background color
of white gets changed to light blue by the one within the
<tt class="literal">@media</tt> at-rule, but only if the document gets
rendered on a television or projection system instead of some other
medium. (Notice the extra set of curly braces that contain the
<tt class="literal">@media</tt> style rules?)
</p>

</div>
<a name="html4-CHP-8-SECT-1.5" /><div class="sect2">
<h3 class="sect2">8.1.5. Linked Versus Imported Style Sheets</h3>

<p>At first <a name="INDEX-1464" /> <a name="INDEX-1465" />
<a name="INDEX-1466" />glance,
it may appear that linked and imported style sheets are equivalent,
using different syntax for the same functionality. This is true if
you use just one <tt class="literal">&lt;link&gt;</tt> tag in your
document. However, special CSS2-standard rules come into play if you
include two or more <tt class="literal">&lt;link&gt;</tt> tags within a
single document, even though the current browsers don't abide
by the rules yet.
</p>

<p>With one <tt class="literal">&lt;link&gt;</tt> tag, the browser should load
the styles in the referenced style sheet and format the document
accordingly, with any document-level and inline styles overriding the
external definitions. With two or more
<tt class="literal">&lt;link&gt;</tt> tags, the browser should present the
user with a list of all the <tt class="literal">&lt;link&gt;</tt>ed style
sheets. The user then selects one of the linked sheets, which the
browser loads and uses to format the document; the other
<tt class="literal">&lt;link&gt;</tt>ed style sheets get ignored.
</p>

<p>On the other hand, the styles-conscious browser merges, as opposed to
separating, multiple <tt class="literal">@import</tt>ed style sheets to
form a single set of style rules for your document. The last imported
style sheet takes precedence if there are duplicate definitions among
the style sheets. Hence, if the external
<tt class="literal">gen_styles.css</tt> style sheet specification tells the
browser to make <tt class="literal">&lt;h1&gt;</tt> contents blue and
italic, and <tt class="literal">spec_styles.css</tt> tells the browser to
make <tt class="literal">&lt;h1&gt;</tt> text red, then the
<tt class="literal">&lt;h1&gt;</tt> tag contents will appear red and
italic. And if we later define another color, say yellow, for
<tt class="literal">&lt;h1&gt;</tt> tags in a document-level style
definition, the <tt class="literal">&lt;h1&gt;</tt> tags will all be
yellow, and italic. Cascading effects. See?
</p>

<p>In practice, the popular browsers treat linked style sheets just like
imported ones by cascading their effects. The browsers do not
currently let you choose from among linked choices. Imported styles
override linked external styles, just as the document-level and
inline styles override external style definitions. To bring this all
together, consider the example:
</p>

<blockquote><pre class="code">&lt;html&gt;
&lt;head&gt;
&lt;link rel=stylesheet href=sheet1.css type=text/css&gt;
&lt;link rel=stylesheet href=sheet2.css type=text/css&gt;
&lt;style&gt;
&lt;!--
  @import url(sheet3.css);
  @import url(sheet4.css);
--&gt;
&lt;/style&gt;
&lt;/head&gt;</pre></blockquote>

<p>Using the CSS2 model, the browser should prompt the user to choose
<tt class="literal">sheet1.css</tt> or <tt class="literal">sheet2.css</tt>. It
should then load the selected sheet, followed by
<tt class="literal">sheet3.css</tt> and <tt class="literal">sheet4.css</tt>.
Duplicate styles defined in <tt class="literal">sheet3.css</tt> or
<tt class="literal">sheet4.css</tt> and in any inline styles will override
styles defined in the selected sheet.<a name="INDEX-1467" /> <a name="INDEX-1468" /> <a name="INDEX-1469" /> <a name="INDEX-1470" /> <a name="INDEX-1471" /> In practice, the popular browsers
cascade the style sheet rules as defined in the example order sheet1
through sheet4.
</p>

</div>
<a name="html4-CHP-8-SECT-1.6" /><div class="sect2">
<h3 class="sect2">8.1.6. Limitations of Current Browsers</h3>

<p>Internet Explorer 4 and Netscape Navigator 4 and beyond support the
<tt class="literal">&lt;link&gt;</tt><a name="INDEX-1472" /> tag to apply an external style
sheet to a document. Neither Netscape Navigator nor Internet Explorer
support multiple <tt class="literal">&lt;link&gt;</tt>ed style sheets as
proposed by the CSS2 standard. Instead, they cascade all the
<tt class="literal">&lt;link&gt;</tt>ed style sheets, with rules in later
sheets overriding rules in earlier sheets.
</p>

<p>Netscape Navigator ignores all at-rules and their contents, including
<tt class="literal">@import</tt> and <tt class="literal">@media</tt>, but does
process other style rules that you may include before or after the
at-rule within the <tt class="literal">&lt;style&gt;</tt> tag. Internet
Explorer honors the <tt class="literal">@import</tt> as well as the
<tt class="literal">@media</tt> at-rules, for both document-level and
external sheets, allowing sheets to be nested.
</p>

<p>Achieving media-specific styles through external style sheets with
current Netscape browsers is hopeless. Assume, therefore, that most
people who have Netscape will render your documents on a common PC
screen, so make that medium the default one. Then embed all other
media-specific styles, such as those for print or braille, within
<tt class="literal">@media</tt> at-rules, so that Internet Explorer and
other CSS-compliant agents will properly select styles based on the
rendering medium. The only other alternative is to create
media-specific <tt class="literal">&lt;style&gt;</tt> tags within each
document. Run, do not walk, away from that idea.
</p>

<p>We just hope the CSS2 standard will prevail soon so that style
sheets, already mystifying to most, will become at least that much
less confusing.
</p>

</div>
<a name="html4-CHP-8-SECT-1.7" /><div class="sect2">
<h3 class="sect2">8.1.7. Style Comments</h3>

<p><a name="INDEX-1473" /> <a name="INDEX-1474" />Comments are welcome inside the
<tt class="literal">&lt;style&gt;</tt> tag and in external style sheets,
but don't use standard HTML comments; style sheets aren't
HTML. Rather, enclose style comments beginning with the sequence
<tt class="literal">/*</tt> and ending with <tt class="literal">*/</tt>, as we
did in the example in <a href="ch08_01.htm">Section 8.1.2, "Document-Level Style Sheets"</a>. (Those of you who are familiar with the
C programming language will recognize these comment markings.) Use
this comment syntax for both document-level and external style
sheets. Comments may not be nested.
</p>

<p>We recommend documenting your styles whenever possible, especially in
external style sheets. Whenever the possibility exists that your
styles may be used by other authors, comments make it much easier to
understand your styles.
</p>

</div>
<a name="html4-CHP-8-SECT-1.8" /><div class="sect2">
<h3 class="sect2">8.1.8. Handling Style-less Browsers</h3>

<p><a name="INDEX-1475" />In our document-level style
examples, you probably noticed that we placed the style definition
inside a comment tag (<tt class="literal">&lt;!--</tt> and
<tt class="literal">--&gt;</tt>). That's because although the older,
style-less browsers will ignore the <tt class="literal">&lt;style&gt;</tt>
tag itself, they will display the style definitions. Needless to say,
your documents will not go over well when the first half of the
display contains all your style rules.
</p>

<p>The newer, styles-conscious browsers ignore HTML comments within a
<tt class="literal">&lt;style&gt;</tt> tag. Style-less browsers may be with
us for some time to come, so it's probably best to place your
document-level style rules inside comments. HTML comments should not
be used in external style sheets.
</p>

<p>For XHTML, document-level styles must be enclosed in a CDATA section
instead of in HTML comments. See <a href="ch16_03.htm">Section 16.3.7, "Handling Special Characters"</a>
for details.
</p>

</div>
<a name="html4-CHP-8-SECT-1.9" /><div class="sect2">
<h3 class="sect2">8.1.9. Style Precedence</h3>

<p><a name="INDEX-1476" />
<a name="INDEX-1477" />You may
import more than one external style sheet and combine them with
document-level and inline style effects in many different ways. Their
effects cascade (hence, the name, of course). You may specify the
font type for our example <tt class="literal">&lt;h1&gt;</tt> tag, for
instance, in an external style definition, whereas its color may come
from a document-level style sheet.
</p>

<p>Style sheet effects are not cumulative, however: of the many styles
which may define different values for the same property -- colors
for the contents of our example tag, for instance -- the one that
takes precedence can be found by following these rules, listed here
in order.
</p>

<dl>
<dt><b>Sort by origin</b></dt>
<dd>
<p>A style defined "closer" to a tag takes precedence over a
more "distant" style. So an inline style takes precedence
over a document-level style, which takes precedence over the effects
of an external style.
</p>
</dd>

<dt><b>If more than one applicable style exists, sort by class </b></dt>
<dd>
<p>Properties defined as a class of a tag (see <a href="ch08_03.htm#html4-CHP-8-SECT-3">Section 8.3, "Style Classes"</a>) take precedence over a property defined for
the tag in general.
</p>
</dd>

<dt><b>If multiple styles still exist, sort by specificity </b></dt>
<dd>
<p>The properties for a more specific contextual style (see <a href="ch08_02.htm">Section 8.2.3, "Contextual Selectors"</a>) take precedence over properties defined
for a less specific context.
</p>
</dd>

<dt><b>If multiple styles still exist, sort by order </b></dt>
<dd>
<p>The property specified latest takes precedence.</p>
</dd>

</dl>

<p>The relationship between style properties and conventional tag
attributes is almost impossible to predict. Style sheet-dictated
background and foreground colors -- whether defined externally, at
the document level, or inline -- override the various
<tt class="literal">color</tt> attributes that may appear within a tag. But
the <tt class="literal">align</tt> attribute of an inline image usually
takes precedence over a style-dictated alignment.
</p>

<p>There is an overwhelming myriad of style and tag
presentation-attribute combinations. You need a crystal ball to
predict which combination wins and which loses the precedence battle.
The rules of redundancy and style versus attribute precedence are not
clearly elucidated in the W3C CSS2 standard, nor is there a clear
pattern of precedence implemented in the styles-conscious browsers.
This is particularly unfortunate since there will be an extended
period, perhaps several years, in which users may or may not use a
styles-conscious browser. Authors will have to implement both styles
and non-style presentation controls to achieve the same effects.
</p>

<p>Nonetheless, our recommendation is to run -- as fast as you
can -- away from one-shot, inline, localized kinds of presentation
effects like those afforded by the <tt class="literal">&lt;font&gt;</tt>
tag and <tt class="literal">color</tt> attribute. They have served their
temporary purpose; it's now time to bring consistency (without
the pain!) back into your document presentation. Use styles.
It's the HTML way.
</p>

</div>
</div>












<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch07_08.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch08_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">7.8. Menu Lists</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">8.2. Style Syntax</td></tr></table></div>
<hr width="694" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>