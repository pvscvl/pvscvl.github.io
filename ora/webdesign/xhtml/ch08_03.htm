<html><head><title>Style Classes (HTML &amp; XHTML: The Definitive Guide, 4th Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Chuck Musciano and Bill Kennedy" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600026XL" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="HTML &amp; XHTML: The Definitive Guide, 4th Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="HTML &amp; XHTML: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">HTML &amp; XHTML: The Definitive Guide, 4th Edition</a></td><td align="right" valign="top" width="228"><a href="ch08_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">8.3. Style Classes</h2>
<p><a name="INDEX-1493" />
<a name="INDEX-1494" />
<a name="INDEX-1495" />CSS2 classes let you create, at the document level or in an external style sheet, several different styles for the same elements, each distinguished by a class name. To apply the style class, name it as the value of the <tt class="literal">class</tt> attribute in its corresponding tag.</p>


<a name="html4-CHP-8-SECT-3.1" /><div class="sect2">
<h3 class="sect2">8.3.1. Regular Classes</h3>

<p>In a technical paper you might want to define one paragraph style for
the abstract, another for equations, and a third for centered
quotations. None of the paragraph tags may have an explicit context
in the document so you could distinguish it from the others. Rather,
you may define each as a different style class:
</p>

<blockquote><pre class="code">&lt;style&gt;
&lt;!--
p.abstract {font-style: italic; 
            margin-left: 0.5cm; 
            margin-right: 0.5cm}
p.equation {font-family: Symbol; 
            text-align: center}
h1, p.centered {text-align: center; 
                margin-left: 0.5cm; 
                margin-right: 0.5cm}
--&gt;
&lt;/style&gt;</pre></blockquote>

<p>Notice first in the example that defining a class is simply a matter
of appending a period-separated class name as a suffix to the tag
name as the selector in a style rule. Unlike the XHTML-compliant
selector, which is the name of the standard tag and must be in
lowercase, the class name can be any sequence of letters, numbers,
and hyphens, but must begin with a letter.<a href="#FOOTNOTE-53">[53]</a> Careful, though, case does matter, so
that <tt class="literal">abstract</tt> is not the same as
<tt class="literal">AbsTRact</tt>. And classes, like selectors, may be
included with other selectors, separated by commas, as in the third
example. The only restriction on classes is that they cannot be
nested: <tt class="literal">p.equation.centered</tt> is not allowed, for
example.
</p><blockquote class="footnote"> <a name="FOOTNOTE-53" /><p>[53]Due to its
support of JavaScript style sheets, Netscape cannot handle class
names that happen to match JavaScript keywords. The class
"abstract," for instance, generates an error in
Netscape.</p> </blockquote>

<p>Accordingly, the first rule in the example creates a class of
paragraph styles named "abstract" whose text will be
italic and indented from the left and right margins by a
half-centimeter. Similarly, the second paragraph style-class
"equation" instructs the browser to center the text and
to use the Symbol typeface to display the text. The last style rule
creates a style with centered text and half-centimeter margins,
applying this style to all level one headers as well as creating a
class of the <tt class="literal">&lt;p&gt;</tt> tag named
<tt class="literal">centered</tt> with that style.
</p>

<p>To use a particular class of a tag, you add the
<tt class="literal">class</tt> attribute to the tag, as in this example, as
rendered by Internet Explorer in <a href="ch08_03.htm#html4-CHP-8-SECT-3">Figure 8-2</a>:
</p>

<blockquote><pre class="code">&lt;p class=abstract&gt;
This is the abstract paragraph.  See how the margins are indented?
&lt;/p&gt;
&lt;h3&gt;The equation paragraph follows&lt;/h3&gt;
&lt;p class=equation&gt;
a = b + 1
&lt;/p&gt;
&lt;p class=centered&gt;
This paragraph's text should be centered.
&lt;/p&gt;</pre></blockquote>

<a name="html4-CHP-8-FIG-2" /><div class="figure"><img height="189" alt="Figure 8-2" src="figs/xhtm.0802.gif" width="441" /></div><h4 class="objtitle">Figure 8-2. Use classes to distinguish different styles for the same tag</h4>

<p>For each paragraph, the value of the <tt class="literal">class</tt>
attribute is the name of the class to be used for that tag.
</p>

</div>
<a name="html4-CHP-8-SECT-3.2" /><div class="sect2">
<h3 class="sect2">8.3.2. Generic Classes</h3>

<p><a name="INDEX-1496" />You
may also define a class without associating it with a particular tag,
and apply that class selectively through your documents for a variety
of tags. For example:
</p>

<blockquote><pre class="code">.italic {font-style: italic}</pre></blockquote>

<p>creates a generic class named <tt class="literal">italic</tt>. To use it,
simply include its name with the <tt class="literal">class</tt> attribute.
So, for instance, use <tt class="literal">&lt;p</tt>
<tt class="literal">class=italic&gt;</tt> or <tt class="literal">&lt;h1</tt>
<tt class="literal">class=italic&gt;</tt> to create an italic paragraph or
header.
</p>

<p>Generic classes are quite handy and make it easy to apply a
particular style to a broad range of tags. Netscape Navigator and
Internet Explorer support CSS2 generic classes.
</p>

</div>
<a name="html4-CHP-8-SECT-3.3" /><div class="sect2">
<h3 class="sect2">8.3.3. ID Classes</h3>

<p><a name="INDEX-1497" />Almost all HTML
tags accept the <tt class="literal">id</tt> attribute, which assigns an
identifier to the element that is unique within the document. This
identifier can be the target of a URL, used by automated document
processing tools and can also be used to specify a style rule for the
element.
</p>

<p>To create a style class that can be applied with the
<tt class="literal">id</tt> attribute, follow the same syntax used for
style classes, except with a <tt class="literal">#</tt> character before
the class name instead of a period. This style creates such classes:
</p>

<blockquote><pre class="code">&lt;style&gt;
&lt;!--
#yellow {color : yellow}
h1#blue {color : blue}
--&gt;
&lt;/style&gt;</pre></blockquote>

<p>Within your document, you could use <tt class="literal">&lt;h1
id=blue&gt;</tt> to create a blue heading, or add
<tt class="literal">id=yellow</tt> to almost any tag to turn it yellow. You
can mix and match both <tt class="literal">class</tt> and
<tt class="literal">id</tt> attributes, giving you a limited ability to
apply two independent style rules to a single element.
</p>

<p>There is a dramatic drawback to using classes defined this way: the
value of the <tt class="literal">id</tt> attribute must be unique within the document. You cannot legally reuse the
class, although the browser might let you get away with it.
</p>

<p>For this reason, we strongly discourage creating and using these
kinds of classes. Stick to the conventional style of classes to
create correct, robust documents.
</p>

</div>
<a name="html4-CHP-8-SECT-3.4" /><div class="sect2">
<h3 class="sect2">8.3.4. Pseudo-Classes</h3>

<p><a name="INDEX-1498" /> <a name="INDEX-1499" />In addition to conventional style classes,
the CSS2 standard defines pseudo-classes, which allow you to define
the display style for certain tag <em class="emphasis">states</em>.
Pseudo-classes are like regular classes, with two notable
differences: they are attached to the tag name with a colon instead
of a period, and they have predefined names, not arbitrary ones you
may give them.
</p>

<p>There are seven pseudo-classes, three of which are explicitly
associated with the <tt class="literal">&lt;a&gt;</tt> tag.
</p>

<a name="html4-CHP-8-SECT-3.4.1" /><div class="sect3">
<h3 class="sect3">8.3.4.1. Hyperlink pseudo-classes</h3>

<p><a name="INDEX-1500" />
<a name="INDEX-1501" /> <a name="INDEX-1502" /> <a name="INDEX-1503" /> <a name="INDEX-1504" /> <a name="INDEX-1505" />
<a name="INDEX-1506" />The popular
<a name="INDEX-1507" />CSS2-compliant browsers distinguish
three special states for the hyperlinks created by the
<tt class="literal">&lt;a&gt;</tt> tag: not visited, being visited, and
visited. The browser may change the appearance of the tag's
contents to indicate its state, such as with underlining or color.
Through pseudo-classes, you can control how these states get
displayed by defining styles for <tt class="literal">a:link</tt> (not
visited), <tt class="literal">a:active</tt> (being visited), and
<tt class="literal">a:visited</tt>.
</p>

<p>The :<tt class="literal">link</tt> pseudo-class controls the appearance of
links that are not selected by the user and have not yet been
visited. The :<tt class="literal">active</tt> pseudo-class defines the
appearance of links that are currently selected by the user and are
being processed by the browser. The :<tt class="literal">visited</tt>
pseudo-class defines those links that have already been visited by
the user.
</p>

<p>To completely define all three states of the
<tt class="literal">&lt;a&gt;</tt><a name="INDEX-1508" />
tag, you might write:
</p>

<blockquote><pre class="code">a:link {color: blue}
a:active {color: red; font-weight: bold}
a:visited {color: green}</pre></blockquote>

<p>Unvisited links will be shown in blue. When the user selects a link,
the browser will change its text color to red and make it bold. Once
visited, the link will revert to conventional green text.
</p>

</div>

<a name="html4-CHP-8-SECT-3.4.2" /><div class="sect3">
<h3 class="sect3">8.3.4.2. Interaction pseudo-classes</h3>

<p>The CSS2 <a name="INDEX-1509" /> <a name="INDEX-1510" /> <a name="INDEX-1511" />
<a name="INDEX-1512" />standand
defines two new <a name="INDEX-1513" /> <a name="INDEX-1514" />pseudo-classes, which along with
<tt class="literal">:active</tt>, relate to user actions and advise the
interactive agent, such as a browser, how to display the affected
element as the user interacts with the element. In other words, these
two pseudo-classes are dynamic: <tt class="literal">hover</tt> and
<tt class="literal">focus</tt>.
</p>

<p>For instance, when you drag the mouse over a hyperlink in your
document, the browser may change the mouse pointer icon. Hovering can
be associated with a style that is only in effect while the mouse is
over the element. For example, if you add the
<tt class="literal">:hover</tt> pseudo-class to our example list of
hyperlink style rules:
</p>

<blockquote><pre class="code">a:hover {color: yellow}</pre></blockquote>

<p>the text associated with unvisited links will be rendered in blue,
turn yellow when you point to it with the mouse, go red while you
visit it, and turn green after you're done visiting.
</p>

<p>Similarly, the :<tt class="literal">focus</tt> pseudo-class lets you change
the style for an element when it becomes the object of attention. An
element may be under focus when you tab to it, click on it, or,
dependng on the browser, advance the cursor to it. Regardless of how
the focus got to the element, the style rules associated with the
focus pseudo-class are only applied while the element has the focus.
</p>

</div>

<a name="html4-CHP-8-SECT-3.4.3" /><div class="sect3">
<h3 class="sect3">8.3.4.3. Nesting and language pseudo-classes</h3>

<p>The new <a name="INDEX-1515" />
<a name="INDEX-1516" /> <a name="INDEX-1517" />CSS2 <tt class="literal">:first-child</tt>
pseudo-class lets you specify how an element may be rendered when it
is the first child of the containing element. For instance, the
following rule selects only those paragraphs which are the first
child of a division; there can be no intervening elements. Then, and
only then, will the paragraph's text contents be rendered in
italics:
</p>

<blockquote><pre class="code">div &gt; p:first-child  {font-style: italic}</pre></blockquote>

<p>Accordingly, the first paragraph in the following HTML fragment would
be rendered in italics by a CSS2-compliant browser since it is the
first child element of its division. Conversely, the second paragraph
comes after a level-2 header, which is the first child of the second
division. So, that second paragraph in the example gets rendered in
plain text because it is not the first child of its division:
</p>

<blockquote><pre class="code">&lt;div&gt;
  &lt;p&gt;
    I get to be in italics.
  &lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;h2&gt; New Division&lt;/h2&gt;
  &lt;p&gt;
    I'm in plain text because my paragraph is a second child of the division.</pre></blockquote>

<p>Finally, the CSS2 standard defines a new pseudo-class that lets you
select an element based on its language. For instance, you might
include the <tt class="literal">lang=fr</tt> attribute in a
<tt class="literal">&lt;div&gt;</tt> tag to instruct the browser that the
division contains French language text. The browser may specially
treat the text. Or, you may impose a specific style with the
pseudo-class <tt class="literal">:lang</tt>. For example:
</p>

<blockquote><pre class="code">div:lang(it) {font-family: Roman}</pre></blockquote>

<p>says that text in divisions of a document that contain the Italian
language should use the Roman font family. Appropriate, don't
you think? Notice that you specify the language in parentheses
immediately after the <tt class="literal">lang</tt> keyword. Use the same
two-letter ISO standard code for the pseudo-class
<tt class="literal">:lang</tt> as you do for the lang attribute. <a href="ch03_06.htm">Section 3.6.1.2, "The lang attribute"</a>
</p>

</div>

<a name="html4-CHP-8-SECT-3.4.4" /><div class="sect3">
<h3 class="sect3">8.3.4.4. Browser support of pseudo-classes</h3>

<p>None of the <a name="INDEX-1518" />popular browsers support the
<tt class="literal">:lang</tt>, <tt class="literal">:first-child</tt>, or
<tt class="literal">:focus</tt> pseudo-classes yet. All of the popular
browsers support the <tt class="literal">:link</tt>,
<tt class="literal">:active</tt>, and <tt class="literal">:visited</tt>
pseudo-classes for the hyperlink tag (<tt class="literal">&lt;a&gt;</tt>).
Even though <tt class="literal">:active</tt> also may be used for other
elements, none of the browsers yet support applications beyond the
<tt class="literal">&lt;a&gt;</tt> tag. The <tt class="literal">:hover</tt>
pseudo-class is great for special effects on links and other
elements, but only Internet Explorer supports it and only for
hyperlinks.
</p>

</div>
</div>
<a name="html4-CHP-8-SECT-3.5" /><div class="sect2">
<h3 class="sect2">8.3.5. Mixing Classes</h3>

<p>You may mix pseudo-classes with regular classes by appending the
pseudo-class name to the selector's class name. For example,
here are some rules that define plain, normal, and fancy anchors:
</p>

<blockquote><pre class="code">a.plain:link, a.plain:active, a.plain:visited {color: blue}
a:link {color: blue}
a:visited {color: green}
a:active {color: red}
a.fancy:link {font-style: italic}
a.fancy:visited {font-style: normal}
a.fancy:active {font-weight: bold; font-size: 150%}</pre></blockquote>

<p>The <tt class="literal">plain</tt> version of <tt class="literal">&lt;a&gt;</tt>
is always blue, no matter the state of the link. Normal links start
out blue, turn red when active, and convert to green when visited.
The <tt class="literal">fancy</tt> link inherits the color scheme of the
normal <tt class="literal">&lt;a&gt;</tt> tag, but adds italic text for
unvisited links, converts back to normal text after being visited,
and actually grows 50 percent in size and becomes bold when active.
</p>

<p>A word of warning about that last property of the
<tt class="literal">fancy</tt> class: specifying a font size change for a
transient display property will result in lots of browser redisplay
activity when the user clicks on the link. Given that some browsers
run on slow machines, this redisplay may be annoying to your readers.
Given also that implementing that sort of display change is something
of a pain, it is unlikely that most browsers will support radical
appearance changes in <tt class="literal">&lt;a&gt;</tt> tag
pseudo-classes.<a name="INDEX-1519" /> <a name="INDEX-1520" />
</p>

</div>
<a name="html4-CHP-8-SECT-3.6" /><div class="sect2">
<h3 class="sect2">8.3.6. Class Inheritance</h3>

<p><a name="INDEX-1521" />
<a name="INDEX-1522" />Classes inherit the style properties of
their generic base tag. For instance, all the properties of the plain
<tt class="literal">&lt;p&gt;</tt> tag apply to a specially defined
paragraph class, except where the class overrides a particular
property.
</p>

<p>Classes cannot inherit from other classes, only from the unclassed
version of the tag they represent. In general, therefore, you should
put as many common styles into the rule for the basic version of a
tag and create classes only for those properties that are unique to
that class. This makes maintenance and sharing of your style classes
easier, especially for large document collections.<a name="INDEX-1523" /> <a name="INDEX-1524" /> <a name="INDEX-1525" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch08_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">8.2. Style Syntax</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">8.4. Style Properties</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>