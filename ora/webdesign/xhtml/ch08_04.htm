<html><head><title>Style Properties (HTML &amp; XHTML: The Definitive Guide, 4th Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Chuck Musciano and Bill Kennedy" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600026XL" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="HTML &amp; XHTML: The Definitive Guide, 4th Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="HTML &amp; XHTML: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_03.htm#html4-CHP-8-SECT-3"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">HTML &amp; XHTML: The Definitive Guide, 4th Edition</a></td><td align="right" valign="top" width="228"><a href="ch08_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">8.4. Style Properties</h2>

<p><a name="INDEX-1526" />
<a name="INDEX-1527" /> <a name="INDEX-1528" />At the heart of the CSS2
specification are the many properties that let you control how the
styles-conscious browser presents your documents to the user. The
standard collects these properties into six groups: fonts, colors and
backgrounds, text, boxes and layout, lists, and tag classification.
We'll stick with that taxonomy and preface the whole shebang
with a discussion of property values and inheritance before diving
into the properties themselves.
</p>

<p>You'll find a summary of the style properties in <a href="appc_01.htm">Appendix C, "Cascading Style Sheet Properties Quick Reference"</a>.
</p>

<a name="html4-CHP-8-SECT-4.1" /><div class="sect2">
<h3 class="sect2">8.4.1. Property Values</h3>

<p>There are five distinct kinds of property values: keywords, length
values, percentage values, URLs, and colors.
</p>

<a name="html4-CHP-8-SECT-4.1.1" /><div class="sect3">
<h3 class="sect3">8.4.1.1. Keyword property values</h3>

<p><a name="INDEX-1529" />
<a name="INDEX-1530" />A property
may have a <tt class="literal">keyword</tt> value that expresses action or
dimension. For instance, the effects of <tt class="literal">underline</tt>
and <tt class="literal">line-through</tt> are obvious property values. And
you can express property dimensions with keywords like
<tt class="literal">small</tt> and <tt class="literal">xx-large</tt>. Some
keywords are even relational: <tt class="literal">bolder</tt>, for
instance, is an acceptable value for the
<tt class="literal">font-weight</tt> property. Keyword values are not
case-sensitive: <tt class="literal">Underline</tt>,
<tt class="literal">UNDERLINE</tt>, and <tt class="literal">underline</tt> are
all acceptable keyword values.
</p>

</div>

<a name="html4-CHP-8-SECT-4.1.2" /><div class="sect3">
<h3 class="sect3">8.4.1.2. Length property values</h3>

<p>So-called <tt class="literal">length</tt><a name="INDEX-1531" /> <a name="INDEX-1532" />
values (a term taken from the CSS2 standard) explicitly state the
size of a property. They are numbers, some with decimals, too. Length
values may have a leading + or - sign to indicate that the value is
to be added to or subtracted from the immediate value of the
property. Length values must be followed immediately by a two-letter
unit abbreviation -- with no intervening spaces.
</p>

<p>There are three kinds of length-value units: relative, pixels, and
absolute. Relative units specify a size that is relative to the size
of some other property of the content. Currently, there are only two
relative units: em, which is the width of m in the current font
(written as <tt class="literal">em</tt>); and x-height, which is the height
of the letter "x" in the current font (abbreviated
<tt class="literal">ex</tt>). The pixels unit, abbreviated
<tt class="literal">px</tt>, is equal to the size of a pixel on the
browser's display. Absolute property value units are more
familiar to us all. They include inches (abbreviated
<tt class="literal">in</tt>), centimeters (<tt class="literal">cm</tt>),
millimeters (<tt class="literal">mm</tt>), points (<tt class="literal">pt</tt>,
<sup class="superscript">1</sup>/<sub class="subscript">72</sub> of an inch),
and picas (<tt class="literal">pc</tt>, twelve points).
</p>

<p>All of the following are valid length values, although not all units
are recognized by the styles-conscious browsers:
</p>

<blockquote><pre class="code">1in
1.5cm
+0.25mm
-3pt
-2.5pc
+100em
-2.75ex
250px</pre></blockquote>

</div>

<a name="html4-CHP-8-SECT-4.1.3" /><div class="sect3">
<h3 class="sect3">8.4.1.3. Percentage property values</h3>

<p><a name="INDEX-1533" />
<a name="INDEX-1534" />Similar
to the relative length-value type, a percentage value describes a
proportion relative to some other aspect of the content. It has an
optional sign and decimal portion to its numeric value, and must have
the percent sign (<tt class="literal">%</tt>) suffix. For example:
</p>

<blockquote><pre class="code">line-height: 120%</pre></blockquote>

<p>computes the separation between lines to be 120 percent of the
current line height (usually relative to the text font height). Note
that this value is not dynamic, though: changes made to the font
height after the rule has been processed by the browser will not
affect the computed line height.
</p>

</div>

<a name="html4-CHP-8-SECT-4.1.4" /><div class="sect3">
<h3 class="sect3">8.4.1.4. URL property values</h3>

<p><a name="INDEX-1535" /> <a name="INDEX-1536" />Some
properties also accept, if not expect, a URL as a value. The syntax
for using a URL in a style property is different from conventional
HTML/XHTML:
</p>

<blockquote><pre class="code">url(<em class="replaceable">service</em>://<em class="replaceable">server.com</em>/<em class="replaceable">pathname</em>)</pre></blockquote>
<p>The keyword <tt class="literal">url</tt> is required, as are the opening and closing parentheses. Do not leave any spaces between <tt class="literal">url</tt> and the opening parenthesis. The <tt class="literal">url</tt> value may contain either an absolute or a relative URL. However, note that the URL is relative to the immediate style sheet's URL, the one in which it is declared. This means that if you use a <tt class="literal">url</tt> value in a document-level or inline style, the URL is relative to the HTML document containing the style document. Otherwise, the URL is relative to the <tt class="literal">@import</tt>ed or <tt class="literal">&lt;link&gt;</tt>ed external style sheet's URL.</p>


</div>

<a name="html4-CHP-8-SECT-4.1.5" /><div class="sect3">
<h3 class="sect3">8.4.1.5. Color property values</h3>

<p><a name="INDEX-1537" />
<a name="INDEX-1538" /> <a name="INDEX-1539" />
<a name="INDEX-1540" />Color values specify
colors in a property (surprised?). You can specify a color as a color
name or a hexadecimal RGB triple, as is done for common attributes,
or as a decimal RGB triple unique to style properties. Both color
names and hexadecimal RGB triple notation are described in <a href="appg_01.htm">Appendix G, "Color Names and Values"</a>.
</p>

<p>Unlike regular HTML or XHTML, style sheets will accept three-digit
hexadecimal color values. The single digit is doubled to create a
conventional six-digit triple. Thus, the color
<tt class="literal">#78C</tt> is equivalent to <tt class="literal">#7788CC</tt>.
In general, three-digit color values are handy only for simple
colors.
</p>

<p>The decimal RGB triple notation is a bit different:</p>

<blockquote><pre class="code">rgb(<em class="replaceable">red</em>, <em class="replaceable">green</em>, <em class="replaceable">blue</em>)</pre></blockquote>

<p>The <tt class="literal">red</tt>, <tt class="literal">green</tt>, and
<tt class="literal">blue</tt> intensity value are integers in the range
zero to 255 or integer percentages. As with a URL value, do not leave
any spaces between <tt class="literal">rgb</tt> and the opening
parenthesis.
</p>

<p>For example, in decimal RGB convention, the color white is
<tt class="literal">rgb(255,</tt> <tt class="literal">255,</tt>
<tt class="literal">255)</tt> or <tt class="literal">rgb(100%,</tt>
<tt class="literal">100%,</tt> <tt class="literal">100%)</tt>, and a medium
yellow is <tt class="literal">rgb(127,</tt> <tt class="literal">127,</tt>
<tt class="literal">0)</tt> or <tt class="literal">rgb(50%,</tt>
<tt class="literal">50%,</tt> <tt class="literal">0%)</tt>.
</p>

</div>
</div>
<a name="html4-CHP-8-SECT-4.2" /><div class="sect2">
<h3 class="sect2">8.4.2. Property Inheritance</h3>

<p><a name="INDEX-1541" />
<a name="INDEX-1542" />In lieu of a specific rule for a
particular element, properties and their values for tags within tags
are inherited from the parent tag. Thus, setting a property for the
<tt class="literal">&lt;body&gt;</tt> tag effectively applies that property
to every tag in the body of your document, except for those that
specifically override it. So, to make all the text in your document
blue, you need only say:
</p>

<blockquote><pre class="code">body {color: blue}</pre></blockquote>

<p>rather than create a rule for every tag you use in your document.</p>

<p>This inheritance extends to any level. If you later created a
<tt class="literal">&lt;div&gt;</tt> tag with text of a different color,
the styles-conscious browser will display all the text contents of
the <tt class="literal">&lt;div&gt;</tt> tag and all its enclosed tags in
that new color. When the <tt class="literal">&lt;div&gt;</tt> tag ends, the
color reverts to that of the containing
<tt class="literal">&lt;body&gt;</tt> tag.
</p>

<p>In many of the following property descriptions, we refer to the tag
containing the current tag as the "parent element" of
that tag.
</p>

</div>
<a name="html4-CHP-8-SECT-4.3" /><div class="sect2">
<h3 class="sect2">8.4.3. Font Properties</h3>

<p><a name="INDEX-1543" /> <a name="INDEX-1544" /> <a name="INDEX-1545" />The loudest complaint we hear is
that HTML and its progeny XHTML lack font styles and characteristics
that even the simplest of text editors implement. The various
<tt class="literal">&lt;font&gt;</tt><a name="INDEX-1546" /> attributes address part of the
problem, but they are tedious to use since each text font change
requires a different <tt class="literal">&lt;font&gt;</tt> tag.
</p>

<p>Style sheets change all that, of course. The CSS2 standard provides
seven font properties that modify the appearance of text contained
within the affected tag: <tt class="literal">font-family</tt>,
<tt class="literal">font-size</tt>, <tt class="literal">font-size-adjust</tt>,
<tt class="literal">font-style</tt>, <tt class="literal">font-variant</tt>,
<tt class="literal">font-stretch</tt>, and <tt class="literal">font-weight</tt>.
In addition, there is a universal <tt class="literal">font</tt> property
that lets you declare all of the font changes with a single property.
</p>

<p>Please be aware that style sheets cannot overcome limitations of the
client system nor can the browser conjure effects if the fonts it
uses do not provide the means.
</p>

<a name="html4-CHP-8-SECT-4.3.1" /><div class="sect3">
<h3 class="sect3">8.4.3.1. The font-family property</h3>

<p>The <tt class="literal">font-family</tt><a name="INDEX-1547" />
<a name="INDEX-1548" /> property
accepts a comma-separated list of font names, one of which will be
selected by the styles-conscious browser for display of the
tag's text. The browser uses the first font named in the list
that also is installed and available for display on the client
machine.
</p>

<p>Font name values are for specific font styles, such as Helvetica or
Courier, or a generic font style as defined by the CSS2 standard:
<tt class="literal">serif</tt>, <tt class="literal">sans-serif</tt>,
<tt class="literal">cursive</tt>, <tt class="literal">fantasy</tt>, and
<tt class="literal">monospace</tt>. Each browser defines which actual font
name is to be used for each generic font. For instance, Courier is
the most popular choice for a monospace font.
</p>

<p>Since fonts vary wildly among browsers, when specifying a font style,
you should always provide several choices, ending with a suitable
generic font. For example:
</p>

<blockquote><pre class="code">h1 {font-family: Helvetica, Univers, sans-serif}</pre></blockquote>

<p>causes the browser to look for and use Helvetica, and then Univers.
If neither font is available for the client display, the browser will
use the generic sans serif typeface.
</p>

<p>Enclose font names that contain spaces -- New Century Schoolbook,
for example -- in quotation marks. For example:
</p>

<blockquote><pre class="code">p {font-family: Times, "New Century Schoolbook", Palatino, serif}</pre></blockquote>

<p>That extra set of double quotation marks in an inline style rule will
cause problems. Accordingly, use single quotation marks in an inline
style:
</p>

<blockquote><pre class="code">&lt;p style="font-family: Times, 'New Century Schoolbook', Palatino, serif"&gt;</pre></blockquote>

<p>In practice, you need not use quotation marks: the browser will
ignore spaces before and after the font name, and convert multiple
internal spaces to a single space. Thus:
</p>

<blockquote><pre class="code">p {font-family: Times, New Century Schoolbook, Palatino, serif}
&lt;p style="font-family: Times, New Century Schoolbook, Palatino, serif"&gt;</pre></blockquote>

<p>are both legal, but we recommend that you use quotation marks anyway,
just in case things change.
</p>

</div>

<a name="html4-CHP-8-SECT-4.3.2" /><div class="sect3">
<h3 class="sect3">8.4.3.2. The font-size property</h3>

<p>The
<tt class="literal">font-size</tt><a name="INDEX-1549" /> <a name="INDEX-1550" /> property lets you
prescribe absolute or relative length values, percentages, and
keywords to define the font size. For example:
</p>

<blockquote><pre class="code">p {font-size: 12pt}
p {font-size: 120%}
p {font-size: +2pt}
p {font-size: medium}
p {font-size: larger}</pre></blockquote>

<p>The first rule is probably the most used because it is the most
familiar: it sets the font size to a specific number of points (12 in
this example). The second example rule sets the font size to be 20
percent larger than the parent element's font size. The third
increases the font's normal size by two points.
</p>

<p>The fourth example selects a predefined size set by the browser,
identified by the <tt class="literal">medium</tt> keyword. Valid
absolute-size keywords are <tt class="literal">xx-small</tt>,
<tt class="literal">x-small</tt>, <tt class="literal">small</tt>,
<tt class="literal">medium</tt>, <tt class="literal">large</tt>,
<tt class="literal">x-large</tt>, and <tt class="literal">xx-large</tt>, and
usually correspond to the seven font sizes used with the
<tt class="literal">size</tt> attribute of the
<tt class="literal">&lt;font&gt;</tt> tag.
</p>

<p>The last <tt class="literal">font-size</tt> rule selects the next size
larger than the font associated with the parent element. Thus, if the
size were normally <tt class="literal">medium</tt>, it would be changed to
<tt class="literal">large</tt>. You can also specify
<tt class="literal">smaller</tt>, with the expected results.
</p>

<p>None of the current browsers handle the incremented font-size
correctly. Rather, they ignore the increment/decrement sign and use
its value as an absolute size. So, for instance in the middle example
in this section, the font-size would end up as two points, not two
points larger than the normal size.
</p>

</div>

<a name="html4-CHP-8-SECT-4.3.3" /><div class="sect3">
<h3 class="sect3">8.4.3.3. The font-stretch property</h3>

<p>Besides different sizes, font families sometimes contain condensed
and expanded versions in which the characters are squeezed or
stretched, respectively. Use the font-stretch property to choose more
compressed or stretched-out characters from your font.
</p>

<p>Use the property value of <tt class="literal">normal</tt> to, of course,
select the normal-sized version of the font. The relative values
<tt class="literal">wider</tt> and <tt class="literal">narrower</tt> select the
next wider or next narrower variant of the font's characters,
respectively, but not wider or narrower than the most
("ultra") expanded or contracted one in the family.
</p>

<p>The remaining font-stretch property values choose specific variants
from the font family. Starting from the most condensed and ending
with the most expanded, the values are
<tt class="literal">ultra-condensed</tt>,
<tt class="literal">extra-condensed</tt>, <tt class="literal">condensed</tt>,
<tt class="literal">semi-condensed</tt>, <tt class="literal">semi-expanded</tt>,
<tt class="literal">expanded</tt>, <tt class="literal">extra-expanded</tt>, and
<tt class="literal">ultra-expanded</tt>.
</p>

<p>The font-stretch property, of course, assumes that your display fonts
support stretchable fonts. Even so, the current popular browsers
ignore this property.
</p>

</div>

<a name="html4-CHP-8-SECT-4.3.4" /><div class="sect3">
<h3 class="sect3">8.4.3.4. The font-size-adjust property</h3>

<p>Without too many details, the legibility and display size of a font
depends principally on its aspect ratio: the ratio of its rendered
size to its x-height, which is a measure of the font's
lowercase glyph height. Fonts with aspect ratios approaching 1.0 tend
to be more legible at smaller sizes than fonts with aspect ratios
approaching zero.
</p>

<p>Also, because of aspect ratios, the actual display size of one font
may be apparently smaller or larger than another font at the same
size. So, when one font is not available for rendering, the
substituted font may distort the presentation.
</p>

<p>The font-size-adjust property lets you readjust the substituted
font's aspect ratio so that it will better fit the display. Use
the property value of <tt class="literal">none</tt> to ignore the aspect
ratio. Otherwise, include your desired aspect ratio (a decimal value
less than one), typically the aspect ratio for your first-choice
display font. The styles-conscious browser thereby will compute and
display the substituted font at a size adjusted to your specified
aspect ratio:
</p>

<blockquote><pre class="code">s = (n/a) * fs</pre></blockquote>

<p>where <tt class="literal">s</tt> is the new, computer font-size for display
of the substituted font, calculated as the
<tt class="literal">font-size-adjust</tt> value <tt class="literal">n</tt>
divided by the substituted font's aspect ratio
<tt class="literal">a</tt> times the current font-size
<tt class="literal">fs</tt>. For example, let's imagine that your
first-choice font Times New Roman, which has an aspect ratio of 0.45,
is not available, so the browser then substitutes Comic Sans MS,
which has an aspect ratio of 0.54. So that the substitution maintains
nearly equivalent sizing for the font display, say at a 18 px
font-size, with the <tt class="literal">font-size-adjust</tt> property set
to 0.45, the CSS2-compliant browser would display or print the text
with the substituted Comic Sans MS font at the smaller (0.45/0.54
x 18 px) = 15 px.
</p>

<p>Sorry that we can't show you how the popular browsers would do
this because they don't support it.
</p>

</div>

<a name="html4-CHP-8-SECT-4.3.5" /><div class="sect3">
<h3 class="sect3">8.4.3.5. The font-style property</h3>

<p>Use the <tt class="literal">font-style</tt><a name="INDEX-1551" />
<a name="INDEX-1552" /> property to slant
text. The default style is <tt class="literal">normal</tt> and may be
changed to <tt class="literal">italic</tt> or <tt class="literal">oblique</tt>.
For example:
</p>

<blockquote><pre class="code">h2 {font-style: italic}</pre></blockquote>

<p>makes all level-2 header text italic. As of this writing, Netscape 4
supports only the <tt class="literal">italic</tt> value for
<tt class="literal">font-style</tt>; Internet Explorer 4 and 5 support both
values, although it is usually hard to distinguish italic from
oblique.
</p>

</div>

<a name="html4-CHP-8-SECT-4.3.6" /><div class="sect3">
<h3 class="sect3">8.4.3.6. The font-variant property</h3>

<p>The <tt class="literal">font-variant</tt><a name="INDEX-1553" />
property lets you select a variant of the desired font. The default
value for this property is <tt class="literal">normal</tt>, indicating the
conventional version of the font. You may also specify
<tt class="literal">small-caps</tt> to select a version of the font in
which the lowercase letters have been replaced with small capital
letters.
</p>

<p>This property is not supported by Netscape; Internet Explorer
versions 4 and 5 incorrectly implements <tt class="literal">small-caps</tt>
as all uppercase letters.
</p>

</div>

<a name="html4-CHP-8-SECT-4.3.7" /><div class="sect3">
<h3 class="sect3">8.4.3.7. The font-weight property</h3>

<p><a name="INDEX-1554" />
<a name="INDEX-1555" />
<a name="INDEX-1556" />The <tt class="literal">font-weight</tt>
property controls the weight or boldness of the lettering. The
default value of this property is <tt class="literal">normal</tt>. You may
specify <tt class="literal">bold</tt> to obtain a bold version of a font,
or use the relative <tt class="literal">bolder</tt> and
<tt class="literal">lighter</tt> values to obtain a version of the font
that is bolder or lighter than the parent element's font.
</p>

<p>To specify varying levels of lightness or boldness, set the value to
a multiple of 100, between the values <tt class="literal">100</tt>
(lightest) and <tt class="literal">900</tt> (boldest). The value
<tt class="literal">400</tt> is equal to the <tt class="literal">normal</tt>
version of the font, and <tt class="literal">700</tt> is the same as
specifying <tt class="literal">bold</tt>.
</p>
<p>Internet Explorer and Netscape Navigator support the <tt class="literal">normal</tt> and <tt class="literal">bold</tt> values. Only Internet Explorer supports the <tt class="literal">lighter</tt> and <tt class="literal">bolder</tt> values, as well. Both browsers support the numeric boldness values.</p>



</div>

<a name="html4-CHP-8-SECT-4.3.8" /><div class="sect3">
<h3 class="sect3">8.4.3.8. The font property</h3>
<p><a name="INDEX-1557" />More often than not, you'll find yourself specifying more than one font-related property at a time for a tag's text content display. A complete font specification can get somewhat unwieldy; for example:</p>
<p><tt class="literal">font</tt> property</p>

<blockquote><pre class="code">p {font-family: Times, Garamond, serif;
   font-weight: bold;
   font-size: 12pt;
   line-height: 14pt}</pre></blockquote>

<p>To mitigate this troublesome and potentially unreadable collection,
use the comprehensive <tt class="literal">font</tt> property and group all
the attributes into one set of declarations:
</p>

<blockquote><pre class="code">p {font: bold 12pt/14pt Times, Garamond, serif}</pre></blockquote>

<p>The grouping and ordering of font attributes is important within the
<tt class="literal">font</tt> property. The font style, weight, and variant
attributes must be specified first, followed by the font size and the
line height separated by a slash character, and ending with the list
of font families. Of all the properties, the size and family are
required; the others may be omitted.
</p>

<p>Here are some more sample <tt class="literal">font</tt> properties:</p>

<blockquote><pre class="code">em {font: italic 14pt Times}
h1 {font: 24pt/48pt sans-serif}
code {font: 12pt Courier, monospace}</pre></blockquote>

<p>The first example tells the styles-conscious browser to emphasize
<tt class="literal">&lt;em&gt;</tt> text using a 14-point italic Times
face. The second rule has <tt class="literal">&lt;h1&gt;</tt> text
displayed in the boldest 24-point sans-serif font available, with an
extra 24 points of space between the lines of text. Finally, text
within a <tt class="literal">&lt;code&gt;</tt> tag is set in 12-point
Courier or the browser-defined monospace font.
</p>

<p>We leave it to your imagination to conjure up examples of the abuses
you could foster with the font styles. Perhaps a recent issue of
<em class="emphasis">Wired</em> magazine, notorious for avant-garde fonts
and other print-related abuses, would be helpful in that
regard?<a name="INDEX-1558" />
<a name="INDEX-1559" /> <a name="INDEX-1560" />
</p>

</div>
</div>
<a name="html4-CHP-8-SECT-4.4" /><div class="sect2">
<h3 class="sect2">8.4.4. Color and Background Properties</h3>

<p><a name="INDEX-1561" /> <a name="INDEX-1562" /> <a name="INDEX-1563" /> <a name="INDEX-1564" />Every element in your document
has a foreground and a background color. In some cases, the
background is not one color, but a colorful image. The color and
background style properties control these colors and images.
</p>

<p>The children of an HTML/XHTML element normally inherit the foreground
color of their parent. For instance, if you make
<tt class="literal">&lt;body&gt;</tt> text red, the styles-conscious
browser also will display header and paragraph text in red.
</p>

<p>Background properties behave differently, however -- they are not
inherited. Instead, each element has a default background that is
transparent, allowing the parent's background to show through.
Thus, setting the background image of the
<tt class="literal">&lt;body&gt;</tt> tag does not cause that image to be
reloaded for every element within the body tag. Instead, the browser
loads the image once and displays it behind the rest of the document,
serving as the background for all elements which do not themselves
have an explicit background color or image.
</p>

<a name="html4-CHP-8-SECT-4.4.1" /><div class="sect3">
<h3 class="sect3">8.4.4.1. The background-attachment property</h3>

<p>If you specify a background image for an element, use the
<tt class="literal">background-attachment</tt><a name="INDEX-1565" />
<a name="INDEX-1566" />
<a name="INDEX-1567" />
property to control how that image is attached to the browser's
display window. With the default value
<tt class="literal">scroll</tt><a name="INDEX-1568" />
<a name="INDEX-1569" />, the browser moves the background
image with the element as the user scrolls through the document. A
value of <tt class="literal">fixed</tt> prevents the image from moving.
</p>

<p>Netscape does not support this style property.</p>

</div>

<a name="html4-CHP-8-SECT-4.4.2" /><div class="sect3">
<h3 class="sect3">8.4.4.2. The background-color property</h3>

<p>The <tt class="literal">background-color</tt><a name="INDEX-1570" />
<a name="INDEX-1571" />
<a name="INDEX-1572" />
property controls the (you guessed it!) background color of an
element. Set it to a color value or to the keyword
<tt class="literal">transparent</tt>. The default value is
<tt class="literal">transparent</tt>. The effects should be obvious.
</p>

<p>While you may have become accustomed to setting the background color
of an entire document through the special attributes for the
<tt class="literal">&lt;body&gt;</tt> tag, the
<tt class="literal">background-color</tt> style property can be applied to
any element. For example, to set the background color of one item in
a bulleted list, you could use:
</p>

<blockquote><pre class="code">&lt;li style="background-color: blue"&gt;</pre></blockquote>

<p>Similarly, all the table header cells in a document could be given a
reverse video effect with:
</p>

<blockquote><pre class="code">th {background-color: black; color: white}</pre></blockquote>

<p>If you really want your emphasized text to stand out, paint its
background red:
</p>

<blockquote><pre class="code">em {background-color: red}</pre></blockquote>

<p>Netscape does not support this CSS2 property explicitly, but you may
achieve the same effects through its support of the general
<tt class="literal">background</tt> property, as discussed in <a href="ch08_04.htm">Section 8.4.4.6, "The background property"</a>.
</p>

</div>

<a name="html4-CHP-8-SECT-4.4.3" /><div class="sect3">
<h3 class="sect3">8.4.4.3. The background-image property</h3>

<p>The <a name="INDEX-1573" />
<a name="INDEX-1574" />
<a name="INDEX-1575" /><tt class="literal">background-image</tt>
property puts an image behind the contents of an element. Its value
is either a URL or the keyword <tt class="literal">none</tt>. The default
value is <tt class="literal">none</tt>.
</p>

<p>As with background colors, you can place a background image behind
the entire document or behind selected elements of a document. With
this style property, effects like placing an image behind a table or
selected text are now simple:
</p>

<blockquote><pre class="code">&lt;table style="background-image: url(backgrounds/woodgrain.gif)"&gt;
li.marble {background-image: url(backgrounds/marble.gif)}</pre></blockquote>

<p>The first example uses an inline style to place a woodgrain finish
behind a table. The second defines a list item class that places a
marble background behind <tt class="literal">&lt;li&gt;</tt> tags that use
the <tt class="literal">class=marble</tt> attribute. For example, in XHTML:
</p>

<blockquote><pre class="code">&lt;h2&gt;Here's what's for dinner tonight:&lt;/h2&gt;
&lt;ul&gt;
   &lt;li class="marble"&gt;Liver with Onions&lt;/li&gt;
   &lt;li class="marble"&gt;Mashed Potatoes and Gravy&lt;/li&gt;
   &lt;li class="marble"&gt;Green Beans&lt;/li&gt;
   &lt;li class="marble"&gt;Choice of Milk, Tea, or Coffee&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;And for dessert:&lt;/h2&gt;
&lt;ul&gt;
   &lt;li&gt;Creamed Quats in Milk  (YUM! YUM!)&lt;/li&gt;
&lt;/ul&gt;</pre></blockquote>

<p>will produce a result like that in <a href="ch08_04.htm">Figure 8-3</a>. </p>

<a name="html4-CHP-8-FIG-3" /><div class="figure"><img height="234" alt="Figure 8-3" src="figs/xhtm.0803.gif" width="342" /></div><h4 class="objtitle">Figure 8-3. Placing a background image behind an element</h4>

<p>If the image is larger than the containing element, it will be
clipped to the area occupied by the element. If the image is smaller,
the image will be repeated to tile the area occupied by the element,
as dictated by the value of the <tt class="literal">background-repeat</tt>
attribute.
</p>

<p>You control the position of the image within the element with the
<tt class="literal">background-position</tt> property. The scrolling
behavior of the image is managed by the
<tt class="literal">background-attachment</tt> property.
</p>

<p>While it may seem that a background color and a background image are
mutually exclusive, you should usually define a background color even
if you are using a background image. That way, if the image is
unavailable, such as when the user doesn't automatically
download images, the browser will display the background color
instead. In addition, if the background image has transparent areas,
the background color will be used to fill in those areas.
</p>

</div>

<a name="html4-CHP-8-SECT-4.4.4" /><div class="sect3">
<h3 class="sect3">8.4.4.4. The 

background-position property</h3><a name="INDEX-1576" /><a name="INDEX-1577" /><a name="INDEX-1578" />

<p>By default, the styles-conscious browser renders a background image
starting in the upper-left corner of the allotted display area and
tiled (if necessary) down and over to the lower-right corner of that
same area. With the <tt class="literal">background-position</tt> property,
you can offset the starting position of the background image down and
to the right of that default point by an absolute (length) or
relative (percentage or keyword) offset. The resulting image fills
the area from that offset starting point to the lower-right corner of
the display space.
</p>

<p>You may specify one or two values for the
<tt class="literal">background-position</tt> property. If you use a single
value, it applies to both the vertical and horizontal positions. With
two values, the first is the horizontal offset, and the second is the
vertical offset.
</p>

<p>Length values (with their appropriate units; see <a href="ch08_04.htm">Section 8.4.1.2, "Length property values"</a>) indicate an absolute distance from the
upper-left corner of the element behind which you display the
background image. For instance:
</p>

<blockquote><pre class="code">table {background-image: url(backgrounds/marble.gif);
       background-position: 10px 20px}</pre></blockquote>

<p>offsets the marble background 10 pixels to the right and 20 pixels
down from the upper-left corner of any
<tt class="literal">&lt;table&gt;</tt> element in your document.
</p>

<p>Percentage values are a bit trickier, but somewhat easier to use.
Measured from
to 100 percent from left to right and top to bottom, the center of
the element's content display space is at 50%, 50%. Similarly,
the position one-third of the way across the area and two-thirds of
the way down is at 33%, 66%. So, to offset the background for our
example dinner menu to the center of the element's content
display space, we use:
</p>

<blockquote><pre class="code">background-position: 50% 50%</pre></blockquote>

<p>Notice that the browser places the first
<em class="filename">marble.gif</em> tile at the center of the content
display area and tiles to the right and down the window, as shown in
<a href="ch08_04.htm">Figure 8-4</a>.
</p>

<a name="html4-CHP-8-FIG-4" /><div class="figure"><img height="216" alt="Figure 8-4" src="figs/xhtm.0804.gif" width="481" /></div><h4 class="objtitle">Figure 8-4. Marbled background offset to the center of the display</h4>

<p>So why use a number when a single word will do? You can use the
keywords <tt class="literal">left</tt>, <tt class="literal">center</tt>, and
<tt class="literal">right</tt>, as well as <tt class="literal">top</tt>,
<tt class="literal">center</tt>, and <tt class="literal">bottom</tt>, for
<tt class="literal">0%</tt>, <tt class="literal">50%</tt>, and
<tt class="literal">100%</tt>, respectively. To center an image in the
tag's content area write:
</p>

<blockquote><pre class="code">background-position: center center</pre></blockquote>

<p>You can mix and match length and percentage values,<a href="#FOOTNOTE-54">[54]</a></p><blockquote class="footnote">
<a name="FOOTNOTE-54" /><p>[54]That is, if the browser supports the value units. So far,
Internet Explorer and Netscape support only a meager repertoire of
length units -- pixels and percents.</p> </blockquote>
<p>so that:
</p>

<blockquote><pre class="code">background-position: 1cm center</pre></blockquote>

<p>places the image one centimeter to the right of the tag's left
edge, centered vertically in the tag's area.
</p>

</div>

<a name="html4-CHP-8-SECT-4.4.5" /><div class="sect3">
<h3 class="sect3">8.4.4.5. The 


background-repeat property</h3><a name="INDEX-1579" /><a name="INDEX-1580" /><a name="INDEX-1581" /><a name="INDEX-1582" />

<p>Normally, the browser tiles a background image to fill the allotted
space, repeating the image both down and to the right. Use the
<tt class="literal">background-repeat</tt> property to alter this
"repeat" (default value) behavior. To have the image
repeat horizontally but not vertically, use the value
<tt class="literal">repeat-x</tt>. For only vertical repetition, use
<tt class="literal">repeat-y</tt>. To suppress tiling altogether, use
<tt class="literal">no-repeat</tt>.
</p>

<p>A common use of this property is to place a watermark or logo in the
background of a page without repeating the image over and over. For
instance:
</p>

<blockquote><pre class="code">body {background-image: url(backgrounds/watermark.gif);
      background-position: center center;
      background-repeat: no-repeat
     }</pre></blockquote>

<p>will place the watermark image in the background at the center of the
page.
</p>

<p>A popular trick is to create a vertical ribbon down the right-hand
side of the page:
</p>

<blockquote><pre class="code">body {background-image: url(backgrounds/ribbon.gif);
      background-position: top right;
      background-repeat: repeat-y
     }</pre></blockquote>

</div>

<a name="html4-CHP-8-SECT-4.4.6" /><div class="sect3">
<h3 class="sect3">8.4.4.6. The background property</h3>

<p>Like the various font properties, the many background CSS2 properties
can get cumbersome to write and hard to read later. So, like the
<tt class="literal">font</tt> property, there also is a general
<tt class="literal">background</tt><a name="INDEX-1583" /> property.
</p>

<p>The background property accepts values from any and all of the
<tt class="literal">background-color</tt><em class="emphasis">,</em>
<tt class="literal">background-image</tt><em class="emphasis">,</em>
<tt class="literal">background-attachment</tt><em class="emphasis">,</em>
<tt class="literal">background-repeat</tt><em class="emphasis">,</em>
and <tt class="literal">background-position</tt> properties, in any order. If you do not specify values for
some of the properties, that property is explicitly set to its
default value. Thus:
</p>

<blockquote><pre class="code">background: red</pre></blockquote>

<p>sets the <tt class="literal">background-color</tt> property to red and
resets the other background properties to their default values. A
more complex example:
</p>

<blockquote><pre class="code">background: url(backgrounds/marble.gif) blue repeat-y fixed center</pre></blockquote>

<p>sets all the background image and color properties at once, resulting
in a marble image on top of a blue background (blue showing through
any transparent areas). The image repeats vertically, starting from
the center of the content display area, and does not scroll when the
user scrolls the display. Notice that we included just a single
position value (<tt class="literal">center</tt>) and the browser used it
for both the vertical and horizontal positions.
</p>

<p>Although Netscape Navigator version 6 provides full support, the
browser's version 4 supports only the
<tt class="literal">background</tt> property and does not honor any of the
individual background ones. For this reason, you may want to use the
<tt class="literal">background</tt> property to achieve the broadest
acceptance of your background image and color properties.<a name="INDEX-1584" />
</p>

</div>

<a name="html4-CHP-8-SECT-4.4.7" /><div class="sect3">
<h3 class="sect3">8.4.4.7. The color property</h3>

<p><a name="INDEX-1585" />
<a name="INDEX-1586" />
<a name="INDEX-1587" />The
<tt class="literal">color</tt> property sets the foreground color for a
tag's contents -- the color of the text lettering, for
instance. Its value is either the name of a color, a hexadecimal RGB
triple, or a decimal RGB triple, as outlined in <a href="ch08_04.htm">Section 8.4.1.5, "Color property values"</a>. Thus, the following are all valid property
declarations:
</p>

<blockquote><pre class="code">color: mauve
color: #ff7bd5
color: rgb(255, 125, 213)
color: rgb(100%, 49%, 84%)</pre></blockquote>

<p>Generally, you'll use the <tt class="literal">color</tt> property
with text, but you may also modify non-textual content of a tag. For
example, the following example produces a green horizontal rule:
</p>

<blockquote><pre class="code">hr {color: green}</pre></blockquote>

<p>If you don't specify a color for an element, it inherits the
color of its parent element.<a name="INDEX-1588" /> <a name="INDEX-1589" /> <a name="INDEX-1590" /> <a name="INDEX-1591" />
</p>

</div>
</div>
<a name="html4-CHP-8-SECT-4.5" /><div class="sect2">
<h3 class="sect2">8.4.5. Text Properties</h3>

<p><a name="INDEX-1592" /> <a name="INDEX-1593" /> <a name="INDEX-1594" />Cascading style sheets make a
distinction between font properties, which control the size, style,
and appearance of text, and text properties, which control how text
is aligned and presented to the user.
</p>

<a name="html4-CHP-8-SECT-4.5.1" /><div class="sect3">
<h3 class="sect3">8.4.5.1. The letter-spacing property</h3>
<p>The <tt class="literal">letter-spacing</tt><a name="INDEX-1595" />
<a name="INDEX-1596" />
<a name="INDEX-1597" /> property puts additional space between text letters as they are displayed by the browser. Set the property with either a length value or the default keyword <tt class="literal">normal</tt>, indicating that the browser should use normal letter spacing. For example: </p>



<blockquote><pre class="code">blockquote {letter-spacing: 2px}</pre></blockquote>

<p>puts an additional two pixels between adjacent letters within the
<tt class="literal">&lt;blockquote&gt;</tt> tag. <a href="ch08_04.htm">Figure 8-5</a> illustrates what happens when you put 5 pixels
between characters.
</p>

<p>This property currently is supported by Internet Explorer and by the
latest Netscape Version 6.
</p>

<a name="html4-CHP-8-FIG-5" /><div class="figure"><img height="141" alt="Figure 8-5" src="figs/xhtm.0805.gif" width="442" /></div><h4 class="objtitle">Figure 8-5. The letter-spacing property lets you stretch text out</h4>

</div>

<a name="html4-CHP-8-SECT-4.5.2" /><div class="sect3">
<h3 class="sect3">8.4.5.2. The line-height property</h3>

<p>Use the <tt class="literal">line-height</tt><a name="INDEX-1598" />
<a name="INDEX-1599" />
<a name="INDEX-1600" /> property to define the spacing between
lines of a tag's text content. Normally, browsers single-space
text lines -- the top of the next line is just a few points below
the last line. By adding to that line height, you increase the
amount of space between lines.
</p>

<p>The <tt class="literal">line-height</tt> value can be an absolute or
relative length, a percentage, a scaling factor, or the keyword
<tt class="literal">normal</tt>. For example:
</p>

<blockquote><pre class="code">p {line-height: 14pt}
p {line-height: 120%}
p {line-height: 2.0}</pre></blockquote>

<p>The first example sets the line height to exactly 14 points between
baselines of adjacent lines of text. The second computes the line
height to 120 percent of the font size. The last example uses a
scaling factor to set the line height to twice as large as the font
size, creating double-spaced text. The value
<tt class="literal">normal</tt>, the default, is usually equal to a scaling
factor of 1.0 to 1.2.
</p>

<p>Keep in mind that absolute and percentage values for
<tt class="literal">line-height</tt> compute the line height based upon the
value of the <tt class="literal">font-size</tt> property when the
<tt class="literal">line-height</tt> property is defined. The computed
property value will be inherited by children of the element.
Subsequent changes to <tt class="literal">font-size</tt> by either the
parent or child elements will not change the computed
<tt class="literal">line-height</tt>.
</p>

<p>Scaling factors, on the other hand, defer the line-height computation
until the text is actually displayed. Hence, varying
<tt class="literal">font-size</tt>s affect <tt class="literal">line-height</tt>
locally. In general, it is best to use a scaling factor for the
<tt class="literal">line-height</tt> property so that the line height will
change automatically when the font size is changed.
</p>

<p>Although usually considered separate from font properties, you may
include this text-related <tt class="literal">line-height</tt>
property's value as part of the shorthand notation of the
<tt class="literal">font</tt> property. <a href="ch08_04.htm">Section 8.4.3.8, "The font property"</a>
</p>

</div>

<a name="html4-CHP-8-SECT-4.5.3" /><div class="sect3">
<h3 class="sect3">8.4.5.3. The text-align property</h3>

<p><a name="INDEX-1601" />
<a name="INDEX-1602" />
<a name="INDEX-1603" />Text
justified with respect to the page margins is a rudimentary feature
of nearly all text processors. The <tt class="literal">text-align</tt>
property brings that capability to HTML for any block-level tag. (The
W3C standards people prefer that you use CSS2
<tt class="literal">text-align</tt> styles rather than the explicit
<tt class="literal">align</tt> attribute for those block-level tags like
<tt class="literal">&lt;div&gt;</tt> and <tt class="literal">&lt;p&gt;</tt>.) Use
one of four values: <tt class="literal">left</tt>,
<tt class="literal">right</tt>, <tt class="literal">center</tt>, or
<tt class="literal">justify</tt>. The default value is, of course,
<tt class="literal">left</tt>. For example:
</p>

<blockquote><pre class="code">div {text-align: right}</pre></blockquote>

<p>tells the styles-conscious browser to align all the text inside
<tt class="literal">&lt;div&gt;</tt> tags against the right margin. The
<tt class="literal">justify</tt> value tells the browser to align the text
to both the left and right margins, spreading the letters and words
in the middle to fit.
</p>

</div>

<a name="html4-CHP-8-SECT-4.5.4" /><div class="sect3">
<h3 class="sect3">8.4.5.4. The text-decoration property</h3>

<p>The <tt class="literal">text-decoration</tt><a name="INDEX-1604" />
<a name="INDEX-1605" />
<a name="INDEX-1606" />
<a name="INDEX-1607" />
<a name="INDEX-1608" />
<a name="INDEX-1609" />
<a name="INDEX-1610" />
property produces text embellishments, some of which also are
available with the original physical style tags. Its value is one or
more of the keywords <tt class="literal">underline</tt>,
<tt class="literal">overline</tt>, <tt class="literal">line-through</tt>, and
<tt class="literal">blink</tt>. The value <tt class="literal">none</tt> is the
default and tells the styles-conscious browser to present text
normally.
</p>

<p>The <tt class="literal">text-decoration</tt> property is handy for defining
different link appearances. For example:
</p>

<blockquote><pre class="code">a:visited, a:link, a:active {text-decoration: underline overline}</pre></blockquote>

<p>puts lines above and below the links in your document.</p>

<p>This text property is not inherited, and non-textual elements are not
affected by the <tt class="literal">text-decoration</tt> property.
</p>

<p>Like the <tt class="literal">&lt;blink&gt;</tt> tag, Netscape Navigator
supports the <tt class="literal">blink</tt> text-decoration property value,
but not Internet Explorer.
</p>

</div>

<a name="html4-CHP-8-SECT-4.5.5" /><div class="sect3">
<h3 class="sect3">8.4.5.5. The text-indent property</h3>

<p><a name="INDEX-1611" /> <a name="INDEX-1612" />
<a name="INDEX-1613" />Although less common today, it
still is standard practice to indent the first line of a paragraph of
text.<a href="#FOOTNOTE-55">[55]</a></p><blockquote class="footnote"> <a name="FOOTNOTE-55" /><p>[55]But not, obviously, in this book.</p>
</blockquote> 

<p>And some text blocks, such as definitions, typically
"out-dent" the first line, creating what is called a
<em class="emphasis">hanging indent</em>.
</p>

<p>The CSS2 <tt class="literal">text-indent</tt> property lets you apply these
features to any block tag and thereby control the amount of
indentation of the first line of the block. Use length and percentage
values; negative values create the hanging indent. Percentage values
compute the indentation as a percentage of the parent element's
width. The default value is zero.
</p>

<p>To indent all the paragraphs in your document, for example:</p>

<blockquote><pre class="code">p {text-indent: 3em}</pre></blockquote>

<p>The length unit <tt class="literal">em</tt> scales the indent as the font
of the paragraph changes in size on different browsers.
</p>

<p>Hanging indents are a bit trickier because you have to watch out for
the element borders. Negative indentation does not shift the left
margin of the text; it simply shifts the first line of the element
left, possibly into the margin, border, or padding of the parent
element. For this reason, hanging indents only work as expected if
you also shift the left margin of the element to the right by an
amount equal to or greater than the size of the hanging indent. For
example:
</p>

<blockquote><pre class="code">p.wrong {text-indent: -3em}
p.hang  {text-indent: -3em; margin-left: 3em}
p.large {text-indent: -3em; margin-left: 6em}</pre></blockquote>

<p>creates three paragraph styles. The first creates a hanging indent
that extends into the left margin. The second creates a conventional
hanging indent. And the third creates a paragraph whose body is
indented more than the hanging indent. All three styles are shown in
use<a name="INDEX-1614" />
<a name="INDEX-1615" /> <a name="INDEX-1616" /> in <a href="ch08_04.htm">Figure 8-6</a>.
</p>

<a name="html4-CHP-8-FIG-6" /><div class="figure"><img height="218" alt="Figure 8-6" src="figs/xhtm.0806.gif" width="441" /></div><h4 class="objtitle">Figure 8-6. The effects of text-indent and margin-left on a paragraph</h4>

</div>

<a name="html4-CHP-8-SECT-4.5.6" /><div class="sect3">
<h3 class="sect3">8.4.5.6. The text-shadow property</h3>

<p>The text-shadow property lets you give your text a three-dimensional
appearance through the time-honored use of shadowing. Values for the
property include a required offset, and optional blur-radius and
color. The property may include more than one set of values,
separated with commas, to achieve a stack of shadows, with each
subsequent set of values layered on top the previous one, but always
beneath the original text.
</p>

<p>The property's required offset is comprised of two length
values. The first specifies the horizontal offset; the second
specifies the vertical offset. Positive values place the shadow to
the right and below the respective length distance from the text.
Negative values move the shadow left and up, respectively.
</p>

<p>The optional blur-radius also is a length value that specifies the
boundaries for blurring, which effect depends on the rendering agent.
The other shadow value is color. This, of course, may be an RGB
triple or color name, as for other properties, and specifies the
shadow color. Otherwise, text-shadow uses the color value of the
color property.
</p>

<blockquote><pre class="code">h1 {text-shadow; 10px 10px 2px yellow}
p:first-letter {text-shadow: -5px -5px purple, 10px 10px orange}</pre></blockquote>

<p>The first text-shadow example puts a 2-pixel blurred-yellow shadow
behind, 10 pixels below, and 10 pixels to the right of level-1
headers in your document. The second example puts two shadows behind
the first letter of each paragraph. The purple shadow sits five
pixels above and five pixels to the left of that first letter. The
other shadow, like in the first example although orange in this case,
goes 10 pixels to the right and 10 pixels below the first letter of
each paragraph.
</p>

<p>Sorry, we can't show you any of these effects since none of the
popular browsers support this property, nor do they support the
first-letter pseudo-element.
</p>

</div>

<a name="html4-CHP-8-SECT-4.5.7" /><div class="sect3">
<h3 class="sect3">8.4.5.7. The vertical-align property</h3>

<p><a name="INDEX-1617" />
<a name="INDEX-1618" />
<a name="INDEX-1619" />The <tt class="literal">vertical-align</tt>
property controls the relative position of an element with respect to
the line containing the element. Valid values for this property
include:
</p>

<dl>
<dt><b><tt class="literal">baseline</tt></b></dt>
<dd>
<p>Align the baseline of the element with the baseline of the containing
element.
</p>
</dd>

<dt><b><tt class="literal">middle</tt></b></dt>
<dd>
<p>Align the middle of the element with the middle (usually the
x-height) of the containing element.
</p>
</dd>

<dt><b><tt class="literal">sub</tt></b></dt>
<dd>
<p>Subscript the element.</p>
</dd>

<dt><b><tt class="literal">super</tt></b></dt>
<dd>
<p>Superscript the element.</p>
</dd>

<dt><b><tt class="literal">text-top</tt></b></dt>
<dd>
<p>Align the top of the element with the top of the font of the parent
element.
</p>
</dd>

<dt><b><tt class="literal">text-bottom</tt></b></dt>
<dd>
<p>Align the bottom of the element with the bottom of the font of the
parent element.
</p>
</dd>

<dt><b><tt class="literal">top</tt></b></dt>
<dd>
<p>Align the top of the element with the top of the tallest element in
the current line.
</p>
</dd>

<dt><b><tt class="literal">bottom</tt></b></dt>
<dd>
<p>Align the bottom of the element with the bottom of the lowest element
in the current line.
</p>
</dd>

</dl>

<p>In addition, a percentage value indicates a position relative to the
current baseline, so that a position of <tt class="literal">50%</tt> puts
the element halfway up the line height above the baseline. A position
value of <tt class="literal">-100%</tt> puts the element an entire
line-height below the baseline of the current line.
</p>

<p>Netscape supports all but the <tt class="literal">sub</tt>,
<tt class="literal">super</tt>, and <tt class="literal">baseline</tt> values only
when this property is applied to the <tt class="literal">&lt;img&gt;</tt>
tag. Internet Explorer supports only <tt class="literal">sub</tt> and
<tt class="literal">super</tt> when applied to text elements.
</p>

</div>

<a name="html4-CHP-8-SECT-4.5.8" /><div class="sect3">
<h3 class="sect3">8.4.5.8. The word-spacing property</h3>

<p>Use the
<tt class="literal">word-spacing</tt><a name="INDEX-1620" /> <a name="INDEX-1621" />
<a name="INDEX-1622" /> property to add additional space
between words within a tag. You can specify a length value or the
keyword <tt class="literal">normal</tt> to revert to normal word spacing.
For example:
</p>

<blockquote><pre class="code">h3 {word-spacing: 25px}</pre></blockquote>

<p>places an additional 25 pixels of space between words in the
<tt class="literal">&lt;h3&gt;</tt> tag.
</p>

<p>Netscape 6 supports the word-spacing property, but
Internet Explorer does not.<a name="INDEX-1623" /> <a name="INDEX-1624" /> <a name="INDEX-1625" />
</p>

</div>

<a name="html4-CHP-8-SECT-4.5.9" /><div class="sect3">
<h3 class="sect3">8.4.5.9. The text-transform property</h3>

<p>The <a name="INDEX-1626" />
<a name="INDEX-1627" />text-transform property lets you
automatically convert portions or all of your document's text
into uppercase or lowercase lettering. Acceptable values are
<tt class="literal">capitalize</tt>, <tt class="literal">uppercase</tt>,
<tt class="literal">lowercase</tt>, or <tt class="literal">none</tt>.
</p>

<p><tt class="literal">Capitalize</tt> renders each first letter of each word
in the text into uppercase, even if the source document's text
is in lowercase. <tt class="literal">Uppercase</tt> and
<tt class="literal">lowercase</tt> values repectively render all the text
in the corresponding case. <tt class="literal">None</tt>, of course,
cancels any transformations.
</p>

<p>For example:</p>

<blockquote><pre class="code">h1 {text-transform: uppercase}</pre></blockquote>

<p>makes all the letters in level-1 headers, presumably titles, appear
in uppercase text, whereas:
</p>

<blockquote><pre class="code">h2 {text-transform: capitalize}</pre></blockquote>

<p>makes sure that each word in level-2 headers begins with a capital
letter, appropriate for section heads, for instance.
</p>

<p>Note that while uppercase and lowercase affect the entire text,
<tt class="literal">capitalize</tt> affects only the first letter of each
word in the text. Consequently, transforming the word htMl with
<tt class="literal">capitalize</tt> will make it appear HtMl.
</p>

<p>The <tt class="literal">text-transform</tt> property is supported by both
Internet Explorer and Netscape Navigator.
</p>

</div>
</div>
<a name="html4-CHP-8-SECT-4.6" /><div class="sect2">
<h3 class="sect2">8.4.6. Box Properties</h3>

<p><a name="INDEX-1628" /> <a name="INDEX-1629" /> <a name="INDEX-1630" />The
CSS2 model assumes that HTML and XHTML elements always fit within a
rectangular box. Using the properties defined in this section, you
can control the size, appearance, and position of the boxes
containing the elements in your documents.
</p>

<a name="html4-CHP-8-SECT-4.6.1" /><div class="sect3">
<h3 class="sect3">8.4.6.1. The CSS2 formatting model</h3>

<p><a name="INDEX-1631" /> <a name="INDEX-1632" /> <a name="INDEX-1633" />Each element in a document can fit in a
rectangular box. The CSS2 authors call this box the "core
content area" and surround it with three more boxes: the
padding, the border, and the margin. <a href="ch08_04.htm">Figure 8-7</a>
shows these boxes and defines some useful terminology.
</p>

<a name="html4-CHP-8-FIG-7" /><div class="figure"><img height="277" alt="Figure 8-7" src="figs/xhtm.0807.gif" width="459" /></div><h4 class="objtitle">Figure 8-7. The CSS2 formatting model and terminology</h4>

<p>The top, bottom, left-outer, and right-outer edges bound the content
area of an element and all of its padding, border, and margin spaces.
The inner-top, inner-bottom, left-inner, and right-inner edges define
the sides of the core content area. The extra space around the
element is the area between the inner and outer edges, including the
padding, border, and margin. A browser may omit any and all of these
extra spaces for any element, and for many, the inner and outer edges
are the same.
</p>

<p>When elements are vertically adjacent, the bottom margin of the upper
elements and the top margin of the lower elements overlap, so that
the total space between the elements is the greater of the adjacent
margins. For example, if one paragraph has a bottom margin of one
inch, and the next paragraph has a top margin of one-half inch, the
greater of the two margins, one inch, will be placed between the two
paragraphs. This practice is known as <em class="emphasis">margin
collapsing</em><a name="INDEX-1634" /> and generally results in better
document appearance.
</p>

<p>Horizontally adjacent elements do not have overlapping margins.
Instead, the CSS2 model adds together adjacent horizontal margins.
For example, if a paragraph has a left margin of 1 inch and is
adjacent to an image with a right margin of 0.5 inch, the total space
between the two will be 1.5 inches. This rule also applies to nested
elements, so that a paragraph within a division will have a left
margin equal to the sum of the division's left margin and the
paragraph's left margin.
</p>

<p>As shown in <a href="ch08_04.htm">Figure 8-7</a>, the total width of an
element is equal to the sum of seven items: the left and right
margins, the left and right borders, the left and right padding, and
the element's content itself. The sum of these seven items must
equal the width of the containing element. Of these seven items, only
three (the element's width and its left and right margins) can
be given the value <tt class="literal">auto</tt>, indicating that the
browser can compute a value for that property. When this becomes
necessary, the browser follows these rules:
</p>

<ul><li>
<p>If none of these properties is set to <tt class="literal">auto</tt> and the
total width is less than the width of the parent element, the
<tt class="literal">margin-right</tt> property will be set to
<tt class="literal">auto</tt> and made large enough to make the total width
equal to the width of the parent element.
</p>
</li><li>
<p>If exactly one property is set to <tt class="literal">auto</tt>, that
property will be made large enough to make the total width equal to
the width of the parent element.
</p>
</li><li>
<p>If width, <tt class="literal">margin-left</tt> and
<tt class="literal">margin-right</tt> are set to auto, the CSS2-compliant
browser will set both <tt class="literal">margin-left</tt> and
<tt class="literal">margin-right</tt> to zero and set
<tt class="literal">width</tt> large enough to make the total equal to the
width of the parent element.
</p>
</li><li>
<p>If both the left and right margins are set to
<tt class="literal">auto</tt>, they will always be set to equal values,
centering the element within its parent.
</p>
</li></ul>
<p>There are special rules for <a name="INDEX-1635" />floating elements. A
floating element (such as an image with <tt class="literal">align=left</tt>
specified) will not have its margins collapsed with the margins of
containing or preceding elements, unless the floating element has
negative margins. <a href="ch08_04.htm">Figure 8-8</a> shows how this bit of
HTML might be rendered:
</p>

<blockquote><pre class="code">&lt;body&gt;
&lt;p&gt;
&lt;img align=left src="pics/img.gif"&gt;
Some sample text...
&lt;/body&gt;</pre></blockquote>

<a name="html4-CHP-8-FIG-8" /><div class="figure"><img height="181" alt="Figure 8-8" src="figs/xhtm.0808.gif" width="384" /></div><h4 class="objtitle">Figure 8-8. Handling the margins of floating elements</h4>

<p>The browser moves the image, including its margins, as far as
possible to the left and towards the top of the paragraph without
overlapping the left and top margins of the paragraph or the document
body. The left margins of the paragraph and the containing body are
added, while their top margins are collapsed.<a name="INDEX-1636" /> <a name="INDEX-1637" /> <a name="INDEX-1638" />
</p>

</div>

<a name="html4-CHP-8-SECT-4.6.2" /><div class="sect3">
<h3 class="sect3">8.4.6.2. The border properties</h3>

<p><a name="INDEX-1639" />The border surrounding an
element has a color, a thickness, and a style. You can use various
properties to control these three aspects of the border on each of
the four sides of an element. Shorthand properties make it easy to
define the same color, thickness, and style for the entire border, if
desired. Border properties are not inherited; you must explicitly set
them for each element that has a border.
</p>

</div>

<a name="html4-CHP-8-SECT-4.6.3" /><div class="sect3">
<h3 class="sect3">8.4.6.3. The border-color property</h3>

<p>Use the <tt class="literal">border-color</tt> property to set the border
color. If not specified, the browser draws the border using the value
of the element's <tt class="literal">color</tt> property.
</p>

<p><a name="INDEX-1640" />
<a name="INDEX-1641" />
<a name="INDEX-1642" />The <tt class="literal">border-color</tt>
property accepts from one to four color values. The number of values
determines how they are applied to the borders (summarized in <a href="ch08_04.htm">Table 8-1</a>). If you include just one property value, all
four sides of the border are set to the specified color. Two values
set the top and bottom borders to the first value and the left and
right borders to the second value. With three values, the first is
the top border, the second sets the right and left borders, and the
third color value is for the bottom border. Four values specify
colors for each side, clockwise from the top, then right, bottom, and
left borders, in that order.
</p>

<a name="html4-CHP-8-TABLE-1" /><h4 class="objtitle">Table 8-1. Order of Effects for Multiple Border, Margin, and Padding Property Values </h4><table border="1">



<tr>
<th>
<p>Number of Values</p>
</th>
<th>
<p>Affected Border(s), Margin(s), or Padding</p>
</th>
</tr>


<tr>
<td>
<p>1</p>
</td>
<td>
<p>All items have the same value.</p>
</td>
</tr>
<tr>
<td>
<p>2</p>
</td>
<td>
<p>First value sets <em class="emphasis">top</em> and
<em class="emphasis">bottom</em>; second value sets
<em class="emphasis">left</em> and <em class="emphasis">right</em>.
</p>
</td>
</tr>
<tr>
<td>
<p>3</p>
</td>
<td>
<p>First value sets <em class="emphasis">top</em> ; second sets both
<em class="emphasis">left</em> and <em class="emphasis">right</em>; third value
sets <em class="emphasis">bottom</em>.
</p>
</td>
</tr>
<tr>
<td>
<p>4</p>
</td>
<td>
<p>First value sets <em class="emphasis">top</em> ; second sets
<em class="emphasis">right</em>; third sets <em class="emphasis">bottom</em>;
fourth value sets <em class="emphasis">left</em>.
</p>
</td>
</tr>

</table>

</div>

<a name="html4-CHP-8-SECT-4.6.4" /><div class="sect3">
<h3 class="sect3">8.4.6.4. The border-width property</h3><a name="INDEX-1643" />

<p>The <tt class="literal">border-width</tt><a name="INDEX-1644" />
<a name="INDEX-1645" />
<a name="INDEX-1646" />
property lets you change the width of the border. Like the
<tt class="literal">border-color</tt> property, it accepts from one to four
values that are applied to the various borders in a similar manner
(<a href="ch08_04.htm">Table 8-1</a>).
</p>

<p>Besides a specific length value, you may also specify the width of a
border as one of the keywords <tt class="literal">thin</tt>,
<tt class="literal">medium</tt>, or <tt class="literal">thick</tt>. The default
value, if the width is not explicitly set, is
<tt class="literal">medium</tt>. Some typical border widths are:
</p>

<blockquote><pre class="code">border: 1px
border: thin thick medium
border: thick 2mm</pre></blockquote>

<p>The first example sets all four borders to exactly one pixel. The
second makes the top border <tt class="literal">thin</tt>, the right and
left borders <tt class="literal">thick</tt>, and the bottom border
<tt class="literal">medium</tt>. The last example makes the top and bottom
borders <tt class="literal">thick</tt>, while the right and left borders
will be two millimeters wide.
</p>

<p>If you are uncomfortable defining all four borders with one property,
you can use the individual <tt class="literal">border-top-width</tt>,
<tt class="literal">border-bottom-width</tt>,
<tt class="literal">border-left-width</tt>, and
<tt class="literal">border-right-width</tt> properties to define the
thickness of each border. Each property accepts just one value; the
default is <tt class="literal">medium</tt>.
</p>

<p>Netscape Navigator and Internet Explorer 5 support this property even
when used alone; Internet Explorer 4 honors this property only if
borders are enabled through other border properties.
</p>

</div>

<a name="html4-CHP-8-SECT-4.6.5" /><div class="sect3">
<h3 class="sect3">8.4.6.5. The 






border-style property</h3><a name="INDEX-1647" /><a name="INDEX-1648" /><a name="INDEX-1649" /><a name="INDEX-1650" /><a name="INDEX-1651" /><a name="INDEX-1652" /><a name="INDEX-1653" /><a name="INDEX-1654" />

<p>According to the CSS2 model, there are a number of embellishments
that you may apply to your HTML element borders.
</p>

<p>The <tt class="literal">border-style</tt>property
values include <tt class="literal">none</tt> (default),
<tt class="literal">dotted</tt>, <tt class="literal">dashed</tt>,
<tt class="literal">solid</tt>, <tt class="literal">double</tt>,
<tt class="literal">groove</tt>, <tt class="literal">ridge</tt>,
<tt class="literal">inset</tt>, and <tt class="literal">outset</tt>. The
border-style-conscious browser applies one to four values for the
property to each of the borders in the same order as for the border
colors and widths, as described in <a href="ch08_04.htm">Table 8-1</a>.
</p>

<p>The browser draws <tt class="literal">dotted</tt>,
<tt class="literal">dashed</tt>, <tt class="literal">solid</tt>, and
<tt class="literal">double</tt> borders as flat lines atop the tag's
background. The <tt class="literal">groove</tt>, <tt class="literal">ridge</tt>,
<tt class="literal">inset</tt>, and <tt class="literal">outset</tt> values create
three-dimensional borders: the <tt class="literal">groove</tt> is an
incised line, the <tt class="literal">ridge</tt> is an embossed line, the
<tt class="literal">inset</tt> border makes the entire tag area appear set
into the document, and the <tt class="literal">outset</tt> border makes the
entire tag area appear raised above the document. The effect of the
three-dimensional nature of these last four styles upon the
tag's background image is undefined and left up to the browser.
Netscape supports three-dimensional effects.
</p>

<p>Neither Internet Explorer nor Netscape supports the
<tt class="literal">dotted</tt> or <tt class="literal">dashed</tt> values.
</p>

</div>

<a name="html4-CHP-8-SECT-4.6.6" /><div class="sect3">
<h3 class="sect3">8.4.6.6. Borders in shorthand</h3>

<p>Since specifying
<a name="INDEX-1655" />a complex border can get tedious, the
CSS2 standard provides five shorthand properties that accept any or
all of the width, color, and style values for one or all of the
border edges. The <tt class="literal">border-top</tt>,
<tt class="literal">border-bottom</tt><em class="emphasis">,</em>
<tt class="literal">border-left</tt><em class="emphasis">,</em>
and<tt class="literal">border-right</tt>
properties affect their respective borders' sides; the
comprehensive <tt class="literal">border</tt> property controls all four
sides of the border simultaneously. For example:
</p>

<blockquote><pre class="code">border-top: thick solid blue
border-left: 1ex inset
border-bottom: blue dashed
border: red double 2px</pre></blockquote>

<p>The first property makes the top border a thick, solid, blue line.
The second sets the left border to use an inset effect that is as
thick as the x-height of the element's font, while leaving the
color the same as the element's color. The third property
creates a blue dashed line at the bottom of the element, using the
default medium thickness. Finally, the last property makes all four
borders a red double line two pixels thick.
</p>

<p>That last property raises two issues. First, you cannot supply
multiple values to the <tt class="literal">border</tt> property to
selectively affect certain borders like you can with the individual
<tt class="literal">border-color</tt>, <tt class="literal">border-width</tt>, and
<tt class="literal">border-style</tt> properties. The
<tt class="literal">border</tt> property always affects all four borders
around an element.
</p>

<p>Secondly, a bit of reflection should reveal that it is not possible
to create a double-line border just two pixels thick. In cases like
this, the browser is free to adjust the thickness to render the
border properly.
</p>

<p>While we usually think of borders surrounding block elements like
images, tables, and text flows, borders can also be applied to inline
tags. This lets you put a box around a word or phrase within a text
flow. The implementation of borders on inline tags that span multiple
lines is undefined and left to the browser.<a name="INDEX-1656" />
</p>

<p>Both Netscape and Internet Explorer support the
<tt class="literal">border</tt> property, but only Internet Explorer
supports the individual side properties.
</p>

</div>

<a name="html4-CHP-8-SECT-4.6.7" /><div class="sect3">
<h3 class="sect3">8.4.6.7. The clear property</h3>

<p>Like its cousin attribute for the <tt class="literal">&lt;br&gt;</tt> tag,
the <tt class="literal">clear</tt><a name="INDEX-1657" /> property tells the browser whether to
place a tag's contents adjacent to a "floating"
element or on the first line below. Text flows around floating
elements like images and tables with an <tt class="literal">align=left</tt>
or <tt class="literal">align=right</tt> attribute or any HTML element with
its <tt class="literal">float</tt> property set to anything but
<tt class="literal">none</tt>. <a href="ch04_07.htm">Section 4.7.1, "The &lt;br&gt; Tag"</a> <a href="ch08_04.htm">Section 8.4.6.8, "The float property"</a>
</p>

<p>The value of the <tt class="literal">clear</tt> property can be
<tt class="literal">none</tt>, <tt class="literal">left</tt>,
<tt class="literal">right</tt>, or <tt class="literal">both</tt>. A value of
<tt class="literal">none</tt>, the default, means that the browser acts
normally and places the tag's contents adjacent to floating
elements on either side if there is room to do so. The value
<tt class="literal">left</tt> prevents contents from being placed adjacent
to a floating element on its left; <tt class="literal">right</tt> prevents
placement against a floating element on the right; and
<tt class="literal">both</tt> prevents the tag's contents from
appearing adjacent to any floating element.
</p>

<p>The effect of this style is the same as having preceded the tag with
a <tt class="literal">&lt;br&gt;</tt> tag with its <tt class="literal">clear</tt>
attribute. Hence:
</p>

<blockquote><pre class="code">h1 {clear: left}</pre></blockquote>

<p>has the same effect as preceding every <tt class="literal">&lt;h1&gt;</tt>
tag with <tt class="literal">&lt;br clear=left&gt;</tt>.
</p>

</div>

<a name="html4-CHP-8-SECT-4.6.8" /><div class="sect3">
<h3 class="sect3">8.4.6.8. The float property</h3>

<p>The <tt class="literal">float</tt><a name="INDEX-1658" /> property designates a tag's
display space as a floating element and causes text to flow around it
in a specified manner. It is generally analogous to the
<tt class="literal">align</tt> attribute for images and tables but can be
applied to any element, including text, images, and tables. <a href="ch05_02.htm">Section 5.2.6.4, "The align attribute"</a> <a href="ch10_02.htm">Section 10.2.1.1, "The align attribute (deprecated)"</a>
</p>
<p>The <tt class="literal">float</tt> property accepts one of three values: <tt class="literal">left</tt>, <tt class="literal">right</tt>, or <tt class="literal">none</tt>, the default. Using <tt class="literal">none</tt> disables the <tt class="literal">float</tt> property; the others work like their <tt class="literal">align</tt> attribute-value counterparts, telling the browser to place the content to either side of the flow and allow other content to be rendered next to it.</p>


<p>Accordingly, the styles-conscious browser will place a tag's
contents specified with <tt class="literal">float: left</tt> against the
left margin of the current text flow, and subsequent content will
flow to its right, down and below the tag's contents. The
<tt class="literal">float: right</tt> pair puts the tag contents against
the right edge of the flow and flows other content on its left, down
and below the tag's contents.
</p>

<p>Although most commonly used with tables and images, it is perfectly
acceptable to apply the <tt class="literal">float</tt> property to a text
element. For example, the following would create a
"run-in" header, with the text flowing around the header
text:
</p>

<blockquote><pre class="code">h1 {float: left}</pre></blockquote>

<p>This property is supported by Internet Explorer only for images.
Netscape honors it for textual elements as well.
</p>

</div>

<a name="html4-CHP-8-SECT-4.6.9" /><div class="sect3">
<h3 class="sect3">8.4.6.9. The height property</h3>

<p>As you might suspect, the
<tt class="literal">height</tt><a name="INDEX-1659" />
<a name="INDEX-1660" /> property controls the height of the
associated tag's display region. You'll find it most
often used with images and tables, but it can be used to control the
height of other document elements as well.
</p>
<p>The value of the <tt class="literal">height</tt> property is either a length value or the keyword <tt class="literal">auto</tt>, the default. Using <tt class="literal">auto</tt> implies that the affected tag has an initial height that should be used when displaying the tag. Otherwise, the height of the tag is set to the desired height. If an absolute value is used, the height is set to that length value. For example:</p>


<blockquote><pre class="code">img {height: 100px}</pre></blockquote>

<p>tells the browser to display the image referenced by the
<tt class="literal">&lt;img&gt;</tt> tag scaled so that it is 100 pixels
tall. If you use a relative value, the base size to which it is
relative is browser- and tag-dependent.
</p>

<p>When scaling elements to a specific height, the aspect ratio of the
object can be preserved by also setting the <tt class="literal">width</tt>
property of the tag to <tt class="literal">auto</tt>. Thus:
</p>

<blockquote><pre class="code">img {height: 100px; width: auto}</pre></blockquote>

<p>ensures that the images are always 100 pixels tall, with an
appropriately scaled width. <a href="ch08_04.htm">Section 8.4.6.12, "The width property"</a>
</p>

<p>This property is fully supported by Internet Explorer and Netscape
Navigator Version 6. Netscape Navigator 4 honors it only when used
with the <tt class="literal">&lt;img&gt;</tt> tag.
</p>

</div>

<a name="html4-CHP-8-SECT-4.6.10" /><div class="sect3">
<h3 class="sect3">8.4.6.10. The margin properties</h3>

<p><a name="INDEX-1661" />Like the border properties, the various
margin properties let you control the margin space around an element,
just outside of its border (<a href="ch08_04.htm">Figure 8-7</a>). Margins
are always transparent, allowing the background color or image of the
containing element to show through. As a result, you can specify only
the size of a margin; it has no color or rendered style.
</p>

<p>The <tt class="literal">margin-left</tt><a name="INDEX-1662" /> <a name="INDEX-1663" /> <a name="INDEX-1664" /> <a name="INDEX-1665" />, <tt class="literal">margin-right</tt>,
<tt class="literal">margin-top</tt>, and <tt class="literal">margin-bottom</tt> properties all accept a
length or percentage value indicating the amount of space to reserve
around the element. In addition, the keyword <tt class="literal">auto</tt>
tells the styles-conscious browser to revert to the margins it
normally would place around an element. Percentage values are
computed as a percentage of the containing element's width. The
default margin, if not specified, is zero.
</p>

<p>These are all valid margin settings:</p>

<blockquote><pre class="code">body {margin-left: 1in; margin-top: 0.5in; margin-right: 1in}
p {margin-left: -0.5cm}
img {margin-left: 10%}</pre></blockquote>

<p>The first example creates one-inch margins down the right and left
edges of the entire document and a half-inch margin across the top of
the document. The second example shifts the
<tt class="literal">&lt;p&gt;</tt> tag one-half centimeter left into the
left margin. The last example creates a margin to the left of the
<tt class="literal">&lt;img&gt;</tt> tag equal to ten percent of the parent
element's width.
</p>

<p>Like the shorthand <tt class="literal">border</tt> property, you can use
the shorthand <tt class="literal">margin</tt> property to define all four
margins, using from one to four values which affect the margins in
the order described in <a href="ch08_04.htm">Table 8-1</a>. Using this
notation, our <tt class="literal">&lt;body&gt;</tt> margins in the previous
example also could have been specified as:
</p>

<blockquote><pre class="code">body {margin: 0.5in 1in}</pre></blockquote>

<p>The <tt class="literal">margin-left</tt> and
<tt class="literal">margin-right</tt> properties interact with the
<tt class="literal">width</tt> property to determine the total width of an
element, as described in <a href="ch08_04.htm">Section 8.4.6.1, "The CSS2 formatting model"</a>.
</p>

</div>

<a name="html4-CHP-8-SECT-4.6.11" /><div class="sect3">
<h3 class="sect3">8.4.6.11. The padding properties</h3>

<p>Like <a name="INDEX-1666" /> <a name="INDEX-1667" /> <a name="INDEX-1668" /> <a name="INDEX-1669" />the margin properties, the various
<tt class="literal">padding</tt> properties let you control the padding
space around an element, between the element's content area and
its border (<a href="ch08_04.htm">Figure 8-7</a>). Padding is always rendered
using the background color or image of the element. As a result, you
can specify only the size of the padding; it has no color or rendered
style.
</p>

<p>The <tt class="literal">padding-left</tt>,
<tt class="literal">padding-right</tt>, <tt class="literal">padding-top</tt>, and
<tt class="literal">padding-bottom</tt>properties all
accept a length or percentage value indicating the amount of space
the styles-conscious browser should reserve around the element.
Percentage values are computed as a percentage of the containing
element's width. The default padding is zero.
</p>

<p>These are valid padding settings:</p>

<blockquote><pre class="code">p {padding-left: 0.5cm}
img {padding-left: 10%}</pre></blockquote>

<p>The first example creates half a centimeter of padding between the
contents of the <tt class="literal">&lt;p&gt;</tt> tag and its left border.
The last example creates padding to the left of the
<tt class="literal">&lt;img&gt;</tt> tag equal to ten percent of the parent
element's width.
</p>

<p>Like the shorthand <tt class="literal">margin</tt> and
<tt class="literal">border</tt> properties, you can use the shorthand
<tt class="literal">padding</tt> property to define all four padding
amounts, using one to four values to effect the padding sides as
described in <a href="ch08_04.htm">Table 8-1</a>. The
<tt class="literal">padding</tt> property is not supported by Internet
Explorer, but is supported by Netscape Navigator.
</p>

</div>

<a name="html4-CHP-8-SECT-4.6.12" /><div class="sect3">
<h3 class="sect3">8.4.6.12. The width property</h3>
<p>The <tt class="literal">width</tt><a name="INDEX-1670" />
<a name="INDEX-1671" /> property is the companion to the <tt class="literal">height</tt> property and controls the width of an associated tag. Specifically, it defines the width of the element's content area, as shown in <a href="ch08_04.htm">Figure 8-7</a>. You'll see it most often used with images and tables, but you could conceivably use it to control the width of other elements as well.</p>


<p>The value for <tt class="literal">width</tt> property is either a length or
percentage value or the keyword <tt class="literal">auto</tt>. The value
<tt class="literal">auto</tt> is the default and implies that the affected
tag has an initial width that should be used when displaying the tag.
If a length value is used, the width is set to that value; percentage
values compute the width to be a percentage of the width of the
containing element. For example:
</p>

<blockquote><pre class="code">img {width: 100px}</pre></blockquote>

<p>displays the image referenced by the <tt class="literal">&lt;img&gt;</tt>
tag scaled to 100 pixels wide.
</p>

<p>When scaling elements to a specific width, the aspect ratio of the
object is preserved if the <tt class="literal">height</tt> property of the
tag is set to <tt class="literal">auto</tt>. Thus:
</p>

<blockquote><pre class="code">img {width: 100px; height: auto}</pre></blockquote>

<p>makes the images all 100 pixels wide and scales their heights
appropriately. <a href="ch08_04.htm">Section 8.4.6.9, "The height property"</a> 
</p>

<p>The <tt class="literal">width</tt> property interacts with the
<tt class="literal">margin-left</tt> and <tt class="literal">margin-right</tt>
properties to determine the total width of an element, as described
in <a href="ch08_04.htm">Section 8.4.6.1, "The CSS2 formatting model"</a>.<a name="INDEX-1672" /> <a name="INDEX-1673" /> <a name="INDEX-1674" />
</p>

</div>
</div>
<a name="html4-CHP-8-SECT-4.7" /><div class="sect2">
<h3 class="sect2">8.4.7. List Properties</h3>

<p><a name="INDEX-1675" /> <a name="INDEX-1676" /> <a name="INDEX-1677" />
<a name="INDEX-1678" />The CSS2 standard lets you also control
the appearance of list elements -- specifically, ordered and
unordered lists.
</p>

<p>Browsers format list items just like any other block item, except
that the block has some sort of marker preceding the contents. For
unordered lists, the marker is a bullet of some sort; for numbered
lists, the marker is a numeric or alphabetic character or symbol. The
CSS2 list properties let you control the appearance and position of
the marker associated with a list item.
</p>

<a name="html4-CHP-8-SECT-4.7.1" /><div class="sect3">
<h3 class="sect3">8.4.7.1. The list-style-image property</h3>
<p>The <tt class="literal">list-style-image</tt><a name="INDEX-1679" />
<a name="INDEX-1680" /> <a name="INDEX-1681" />
<a name="INDEX-1682" />
<a name="INDEX-1683" />
<a name="INDEX-1684" />
<a name="INDEX-1685" />property defines the image that the browser uses to mark a list item. The value of this property is the URL of an image file, or the keyword <tt class="literal">none</tt>. The default value is <tt class="literal">none</tt>. </p>


<p>The image is the preferred list marker. If it is available, the
browser will display it in place of any other defined marker. If the
image is unavailable or if the user has disabled image loading, the
marker defined by the <tt class="literal">list-style-type</tt> property
(see <a href="ch08_04.htm">Section 8.4.7.3, "The list-style-type property"</a>) will be used.
</p>

<p>Authors can use this property to define custom bullets for their
unordered lists. While any image could conceivably be used as a
bullet, we recommend that you keep your marker GIF or JPEG images
small to ensure attractively rendered lists.
</p>

<p>For example, by placing the desired bullet image in the file
<em class="filename">mybullet.gif</em> on your server, you could use that
image:
</p>

<blockquote><pre class="code">li {list-style-image: url(pics/mybullet.gif); list-style-type: square}</pre></blockquote>

<p>In this case, the image will be used if the browser successfully
downloads <em class="filename">mybullet.gif</em>. Otherwise, the browser
will use a conventional square bullet.
</p>

<p>This property is supported by Internet Explorer and by the latest
version of Netscape Navigator (version 6). However, they differ in
where they position the list marker: Netscape 6 puts it outside, and
Internet Explorer 5 puts it inside, the item. Read the next section
for an explanation.
</p>

</div>

<a name="html4-CHP-8-SECT-4.7.2" /><div class="sect3">
<h3 class="sect3">8.4.7.2. The list-style-position property</h3>

<p>There are two ways to position the marker associated with a list
item: inside the block associated with the item or outside the block.
Accordingly, the
<tt class="literal">list-style-position</tt><a name="INDEX-1686" /> <a name="INDEX-1687" /> property accepts one of two
values: <tt class="literal">inside</tt> or <tt class="literal">outside</tt>.
</p>

<p>The default value is <tt class="literal">outside</tt>, meaning that the
item marker will hang to the left of the item like this:
</p>

<ul><li>
<p>This is a bulleted list with an "outside" marker</p>
</li></ul>
<p>The value <tt class="literal">inside</tt> causes the marker to be drawn
with the list item flowing around it, much like a floating image:
</p>

<ul><li>
<p>This is a bulleted list with an "inside" marker</p>
</li></ul>
<p>Notice how the second line of text is not indented, but instead lines
up with the left edge of the marker.
</p>

<p>None of the popular browsers support this property.</p>

</div>

<a name="html4-CHP-8-SECT-4.7.3" /><div class="sect3">
<h3 class="sect3">8.4.7.3. The list-style-type property</h3>

<p>The <tt class="literal">list-style-type</tt><a name="INDEX-1688" /> property serves double-duty in a
sense, determining how both ordered and unordered list items are
rendered by a styles-conscious browser. This property has the same
effect on a list item as its
<tt class="literal">type</tt><a name="INDEX-1689" /> attribute does. <a href="ch07_03.htm">Section 7.3.1.1, "The type attribute"</a>
</p>

<p>When used with items within an unordered list, the
<tt class="literal">list-style-type</tt> property accepts one of four
values: <tt class="literal">disc</tt>, <tt class="literal">circle</tt>,
<tt class="literal">square</tt>, or <tt class="literal">none</tt>. The browser
marks the unordered list items with the corresponding specified
dingbat. The default value is <tt class="literal">disc</tt>; browsers
change that default depending on the nesting level of the list.
</p>

<p>When used with items within an ordered list, the
<tt class="literal">list-style-type</tt> property accepts one of six
values: <tt class="literal">decimal</tt>, <tt class="literal">lower-roman</tt>,
<tt class="literal">upper-roman</tt>, <tt class="literal">lower-alpha</tt>,
<tt class="literal">upper-alpha</tt>, or <tt class="literal">none</tt>. These
values format the item numbers as decimal values, lowercase Roman
numerals, uppercase Roman numerals, lowercase letters, or uppercase
letters, respectively. Most browsers will use decimal numbering
schemes if you don't set this property.
</p>

</div>

<a name="html4-CHP-8-SECT-4.7.4" /><div class="sect3">
<h3 class="sect3">8.4.7.4. The list-style property</h3>

<p>The <tt class="literal">list-style</tt><a name="INDEX-1690" /> property is
the shorthand version for all the other list-style properties. It
accepts any or all of the values allowed for the
<tt class="literal">list-style-type</tt>,
<tt class="literal">list-style-position</tt>, and
<tt class="literal">list-style-image</tt> properties, in any order and with
values appropriate for the type of list they are to affect. These are
valid <tt class="literal">list-style</tt> properties:
</p>

<blockquote><pre class="code">li {list-style: disc}
li {list-style: lower-roman inside}
li {list-style: url(http://www.kumquat.com/images/tiny-quat.gif)
     square}</pre></blockquote>

<p>The first example creates list items that use a disc as the bullet
image. The second causes numbered list items to use lowercase Roman
numerals, drawn inside the list item's block. In the last
example, a square will be used as the bullet image if the referenced
image is unavailable.
</p>

</div>

<a name="html4-CHP-8-SECT-4.7.5" /><div class="sect3">
<h3 class="sect3">8.4.7.5. Using list properties effectively</h3>

<p>Although you may <a name="INDEX-1691" /> <a name="INDEX-1692" />apply list properties to any
element, they will affect only the appearance of elements whose
<tt class="literal">display</tt> property is set to
<tt class="literal">list-item</tt>. Normally, the only tag with this
property is the <tt class="literal">&lt;li&gt;</tt> tag. <a href="ch08_04.htm">Section 8.4.8.1, "The display property"</a>
</p>

<p>This shouldn't deter you from using these properties elsewhere,
particularly with the <tt class="literal">&lt;ul&gt;</tt> and
<tt class="literal">&lt;ol&gt;</tt> tags. Since these properties are
inherited by elements whose parents have them set, modifying a list
property for the <tt class="literal">&lt;ul&gt;</tt> and
<tt class="literal">&lt;ol&gt;</tt> tags will subsequently modify it for
all the <tt class="literal">&lt;li&gt;</tt> tags contained within that
list. This makes it much easier to define lists with a particular
appearance.
</p>

<p>For example, suppose you want to create a list style that uses
lowercase Roman numerals. One way is to define a class of the
<tt class="literal">&lt;li&gt;</tt> tag with the appropriate
<tt class="literal">list-style-type</tt> defined:
</p>

<blockquote><pre class="code">li.roman {list-style-type: lower-roman}</pre></blockquote>

<p>Within your list, you'll need to specify each list element
using that class:
</p>

<blockquote><pre class="code">&lt;ol&gt;
  &lt;li class=roman&gt;Item one&lt;/li&gt;
  &lt;li class=roman&gt;Item two&lt;/li&gt;
  &lt;li class=roman&gt;And so forth&lt;/li&gt;
&lt;/ol&gt;</pre></blockquote>

<p>Having to repeat the class name is tedious and error-prone. A better
solution is to define a class of the <tt class="literal">&lt;ol&gt;</tt>
tag:
</p>

<blockquote><pre class="code">ol.roman {list-style-type: lower-roman}</pre></blockquote>

<p>Any <tt class="literal">&lt;li&gt;</tt> tag within the list will inherit
the property and use lowercase Roman numerals:
</p>

<blockquote><pre class="code">&lt;ol class=roman&gt;
  &lt;li&gt;Item one&lt;/li&gt;
  &lt;li&gt;Item two&lt;/li&gt;
  &lt;li&gt;And so forth&lt;/li&gt;
&lt;/ol&gt;</pre></blockquote>

<p>This is much easier to understand and manage. If at a later date you
want to change the numbering style, you need only change the
<tt class="literal">&lt;ol&gt;</tt> tag properties, rather than find and
change each instance of the <tt class="literal">&lt;li&gt;</tt> tag in the
list.<a name="INDEX-1693" />
<a name="INDEX-1694" /> <a name="INDEX-1695" /> <a name="INDEX-1696" /> <a name="INDEX-1697" />
</p>

<p>You can use these properties in a much more global sense as well.
Setting a list property on the <tt class="literal">&lt;body&gt;</tt> tag
will change the appearance of all lists in the document; setting it
on a <tt class="literal">&lt;div&gt;</tt> tag will <a name="INDEX-1698" /> <a name="INDEX-1699" /> <a name="INDEX-1700" /> <a name="INDEX-1701" />change all the lists
within that division.
</p>

</div>
</div>
<a name="html4-CHP-8-SECT-4.8" /><div class="sect2">
<h3 class="sect2">8.4.8. Classification Properties</h3>

<p><a name="INDEX-1702" />
<a name="INDEX-1703" /> <a name="INDEX-1704" />Classification properties are the
most esoteric of the CSS2 style properties. They do not directly
control how a styles-conscious browser will render HTML or XHTML
elements. Instead, they tell the browser how to classify and handle
various tags and their contents as they are encountered.
</p>

<p>For the most part, you should not set these properties on an element
unless you are trying to achieve a specific effect. Even then, it is
unlikely that the property will be supported by most browsers.
</p>

<a name="html4-CHP-8-SECT-4.8.1" /><div class="sect3">
<h3 class="sect3">8.4.8.1. The display property</h3>

<p><a name="INDEX-1705" />Every
element in an HTML or XHTML document can be classified, for display
purposes, as a <a name="INDEX-1706" />
<a name="INDEX-1707" />
<a name="INDEX-1708" />block item, an inline item, or a list
item. Block elements, like headings, paragraphs, tables, and lists,
are formatted as a separate block of text, separated from the
previous and next block items. Inline items, like the physical and
content-based style tags and hyperlink anchors, are rendered within
the current line of text within a containing block. List items,
specifically the <tt class="literal">&lt;li&gt;</tt> tag, are rendered like
a block item, with a bullet or number known as the
<em class="emphasis">marker</em>.
</p>

<p>The <tt class="literal">display</tt> property lets you change an
element's display type to <tt class="literal">block</tt>,
<tt class="literal">inline</tt>, <tt class="literal">list-item</tt>, or
<tt class="literal">none</tt>. The first three values change the
element's classification accordingly; the value
<tt class="literal">none</tt> turns off the element, preventing it or its
children from being displayed in the document.
</p>
<p>Conceivably, you could wreak all sorts of havoc by switching element classifications, forcing paragraphs to be displayed as list items and converting hyperlinks to block elements. In practice, this is just puerile monkey business, and we don't recommend that you change element classifications without having a very good reason to do so.</p>


<p>Netscape Navigator fully supports this property; Internet Explorer
supports only the <tt class="literal">block</tt> and
<tt class="literal">none</tt> values.
</p>

</div>

<a name="html4-CHP-8-SECT-4.8.2" /><div class="sect3">
<h3 class="sect3">8.4.8.2. The white-space property</h3>

<p>The
<tt class="literal">white-space</tt><a name="INDEX-1709" /> <a name="INDEX-1710" /> property defines how the
styles-conscious browser treats whitespace (tabs, spaces, and
carriage returns) within a block tag. The keyword value
<tt class="literal">normal</tt> -- the default -- collapses
whitespace, so that one or more spaces, tabs, and carriage returns
are treated as a single space between words. The value
<tt class="literal">pre</tt> emulates the <tt class="literal">&lt;pre&gt;</tt>
tag, in that the browser retains and displays all spaces, tabs, and
carriage returns. And, finally, the <tt class="literal">nowrap</tt> value
tells the browser to ignore carriage returns and not insert automatic
line breaks; all line-breaking must be done with explicit
<tt class="literal">&lt;br&gt;</tt> tags.
</p>

<p>Like the <tt class="literal">display</tt> property, the
<tt class="literal">white-space</tt> property is rarely used for good
instead of evil. Don't change how elements handle whitespace
without having a compelling reason for doing so.
</p>

<p>This property is not supported by Internet Explorer; Netscape
Navigator supports the <tt class="literal">pre</tt> and
<tt class="literal">normal</tt> <a name="INDEX-1711" /> <a name="INDEX-1712" /> <a name="INDEX-1713" />values.
</p>

</div>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_03.htm#html4-CHP-8-SECT-3"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch08_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">8.3. Style Classes</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">8.5. Tag-less Styles: The &lt;span&gt; Tag</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>