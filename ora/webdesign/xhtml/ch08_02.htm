<html><head><title>Style Syntax (HTML &amp; XHTML: The Definitive Guide, 4th Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Chuck Musciano and Bill Kennedy" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600026XL" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="HTML &amp; XHTML: The Definitive Guide, 4th Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="HTML &amp; XHTML: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">HTML &amp; XHTML: The Definitive Guide, 4th Edition</a></td><td align="right" valign="top" width="228"><a href="ch08_03.htm#html4-CHP-8-SECT-3"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">8.2. Style Syntax</h2>

<p>The syntax of a style, its "rule" as you may have gleaned
from our previous examples, is very straightforward.
</p>

<a name="html4-CHP-8-SECT-2.1" /><div class="sect2">
<h3 class="sect2">8.2.1. The Basics</h3>

<p>A style rule is made up of at least three basic parts: a
<em class="emphasis">selector</em>, which is the name of the markup element that the
style rule affects, followed by a curly brace (<tt class="literal">{}</tt>)
enclosed, semicolon-separated list of one or more style <tt class="literal">property:value</tt><a name="INDEX-1478" /> pairs:
</p>

<blockquote><pre class="code">selector {property1:value1; property2:value1 value2 value3; ...}</pre></blockquote>

<p>For instance, we might define the color for the contents of all the
level-1 header elements of our document:
</p>

<blockquote><pre class="code">h1 {color: green}</pre></blockquote>

<p>In this example, <tt class="literal">h1</tt> is the selector which is also
the name of the level-1 header element, color is the style property,
and green is the value. Neat and clean. Try it. It really works!
</p>

<p>Properties require at least one value, but may include two or more
values. Separate multiple values with a space, as is done for the
three values that define <tt class="literal">property2</tt> in our first
example. Some properties require that multiple values be separated
with commas.
</p>

<p>Current styles-conscious browsers ignore letter
<a name="INDEX-1479" />case in any element of a style
rule. Hence, <tt class="literal">H1</tt> and <tt class="literal">h1</tt> are the
same selector, and <tt class="literal">COLOR</tt>,
<tt class="literal">color</tt>, <tt class="literal">ColOR</tt>, and
<tt class="literal">cOLor</tt> are equivalent properties. At one time,
convention dictated that HTML authors write selector names in
uppercase characters, such as <tt class="literal">H1</tt>,
<tt class="literal">P</tt>, and <tt class="literal">STRONG</tt>. This convention
is still common and is used in the W3C's own CSS2 document.
</p>

<p>Current standards dictate, however, particularly for XML-compliant
documents, that element names be capitalized exactly as defined by
their respective DTDs. With
<a name="INDEX-1480" />XHTML, for instance, all
element names (<tt class="literal">h1</tt>, <tt class="literal">p</tt>, or
<tt class="literal">strong</tt>, for instance) are lowercase, so their
respective CSS2 selectors must be in lowercase. We'll abide by
these latter conventions.
</p>

<p>Any valid element name (a tag name minus its enclosing &lt; and &gt;
characters and attributes) can be a selector. You may include more
than one tag name in the list of selectors, as we explain in the
following sections.
</p>

</div>
<a name="html4-CHP-8-SECT-2.2" /><div class="sect2">
<h3 class="sect2">8.2.2. Multiple Selectors</h3>

<p><a name="INDEX-1481" /> <a name="INDEX-1482" />When separated by commas, all the
elements named in the <a name="INDEX-1483" />selector
list are affected by the property values in the style rule. This can
make life very easy for authors. For instance:
</p>

<blockquote><pre class="code">h1, h2, h3, h4, h5, h6 {text-align: center}</pre></blockquote>

<p>does exactly the same thing as:</p>

<blockquote><pre class="code">h1 {text-align: center}
h2 {text-align: center}
h3 {text-align: center}
h4 {text-align: center}
h5 {text-align: center}
h6 {text-align: center}</pre></blockquote>

<p>Both styles tell the browser to center the contents of headers levels
1-6. Clearly, the first version is easier to type, understand, and
modify. And it takes less time and fewer resources to transmit across
a network, albeit a trivial consideration in this instance.
</p>

</div>
<a name="html4-CHP-8-SECT-2.3" /><div class="sect2">
<h3 class="sect2">8.2.3. Contextual Selectors</h3>

<p><a name="INDEX-1484" />
<a name="INDEX-1485" /> <a name="INDEX-1486" />Normally,
the styles-conscious browser applies document-level or imported
styles to a tag's contents wherever they appear in your
document, without regard to context. However, the CSS2 standard
defines a way to have a style applied only when a tag occurs within a
certain context within a document, such as when it is nested within
other tags.
</p>

<p>To create a contextual selector, list the tags in the order in which
they should be nested in your document, outermost tag first. When
that <a name="INDEX-1487" />nesting order is encountered by the
browser, the style properties will be applied to the last tag in the
list.
</p>

<p>For example, here's how you might use contextual styles to
define the classic numbering sequence used for outlines: upper-case
 Roman numerals for the outer level, capital letters for the next
 level, Arabic numerals for the next, and lower-case letters for 
the innermost level:
</p>

<blockquote><pre class="code">ol li {list-style: upper-roman}
ol ol li {list-style: upper-alpha}
ol ol ol li {list-style: decimal}
ol ol ol ol li {list-style: lower-alpha}</pre></blockquote>

<p>According to the example style sheet, when the styles-conscious
browser encounters the <tt class="literal">&lt;li&gt;</tt> tag nested
within one <tt class="literal">&lt;ol&gt;</tt> tag, it uses the
<tt class="literal">upper-roman</tt> value for the
<tt class="literal">list-style</tt> property of the
<tt class="literal">&lt;li&gt;</tt> tag. When it sees an
<tt class="literal">&lt;li&gt;</tt> tag nested within two
<tt class="literal">&lt;ol&gt;</tt> tags, the same browser will use the
<tt class="literal">upper-alpha</tt> <tt class="literal">list-style</tt>. Nest an
<tt class="literal">&lt;li&gt;</tt> tag within three and four
<tt class="literal">&lt;ol&gt;</tt> tags, and you'll see the
<tt class="literal">decimal</tt> and <tt class="literal">lower-alpha</tt>
<tt class="literal">list-styles</tt> used, respectively. That's
exactly what Netscape Navigator does, as shown in <a href="ch08_02.htm">Figure 8-1</a> (Internet Explorer does the same thing).
Compare <a href="ch08_02.htm">Figure 8-1</a> with using the ordered list
tag's <tt class="literal">type</tt> attribute to achieve similar
effects as shown in <a href="ch07_04.htm">Figure 7-7</a>.
</p>

<a name="html4-CHP-8-FIG-1" /><div class="figure"><img height="234" alt="Figure 8-1" src="figs/xhtm.0801.gif" width="328" /></div><h4 class="objtitle">Figure 8-1. Nested ordered list styles</h4>

<p>Similarly, you may impose a specific style on tags related only by
context. For instance, this contextual style definition will color
the emphasis tag's (<tt class="literal">&lt;em&gt;</tt>) contents red
only when it appears inside a level-1 header tag
(<tt class="literal">&lt;h1&gt;</tt>), and not elsewhere in the document:
</p>

<blockquote><pre class="code">h1 em {color: red}</pre></blockquote>

<p>If there is potential ambiguity between two contextual styles, the
more specific context prevails.
</p>

<p>Like individual tags, you may also have several contextual selectors
mixed with individual selectors, each and all separated by commas,
sharing the same list of style declarations. For example:
</p>

<blockquote><pre class="code">h1 em, p strong, address {color: red}</pre></blockquote>

<p>means that you'll see red whenever the
<tt class="literal">&lt;em&gt;</tt> tag appears within an
<tt class="literal">&lt;h1&gt;</tt> tag, or when the
<tt class="literal">&lt;strong&gt;</tt> tag appears within a
<tt class="literal">&lt;p&gt;</tt> tag, and for the contents of the
<tt class="literal">&lt;address&gt;</tt> tag.
</p>

<p>The nesting need not be exact to match the rule. For example, if you
nest the <tt class="literal">&lt;strong&gt;</tt> tag within a
<tt class="literal">&lt;ul&gt;</tt> tag within a
<tt class="literal">&lt;p&gt;</tt> tag, you'll still match the rule
for <tt class="literal">p</tt> <tt class="literal">strong</tt> that we defined
above. If a particular nesting matches several style rules, the most
specific rule is used. For example, if you defined two contextual
selectors:
</p>

<blockquote><pre class="code">p strong {color: red}
p ul strong {color: blue}</pre></blockquote>

<p>and use the sequence
<tt class="literal">&lt;p&gt;&lt;ul&gt;&lt;strong&gt;</tt> in your
document, the second, more specific rule applies, coloring the
contents of the <tt class="literal">&lt;strong&gt;</tt> tag blue.
</p>

</div>
<a name="html4-CHP-8-SECT-2.4" /><div class="sect2">
<h3 class="sect2">8.2.4. Universal, Child, and Adjacent Selectors</h3>

<p>The CSS2 standard defines additional patterns for
<a name="INDEX-1488" /> <a name="INDEX-1489" /> <a name="INDEX-1490" />selectors, besides commas and spaces,
as illustrated in the following examples:
</p>

<blockquote><pre class="code">* {color: purple; font: ZapfDingBats}
ol &gt; li {font-size: 200%; font-style: italic}
h1 + h2 {margin-top: +4mm}</pre></blockquote>

<p>In the first example, the universal asterisk selector applies the
style to all elements of your document, so that any text gets
displayed in ZapfDingBat characters.<a href="#FOOTNOTE-51">[51]</a> The second example selects a particular child/parent
relationship, in this case items in an ordered list.
</p><blockquote class="footnote"> <a name="FOOTNOTE-51" /><p>[51]Assuming, of
course, that the style is not overridden by a subsequent rule.</p>
</blockquote>

<p>The third example illustrates the adjacent selector type which
selects for one tag immediately following another in your document.
In this case, the special selector adds vertical space to instances
in which your document has a level-2 header immediately following a
level-1 header.
</p>

</div>
<a name="html4-CHP-8-SECT-2.5" /><div class="sect2">
<h3 class="sect2">8.2.5. Pseudo-Elements</h3>

<p>There are elemental relationships in your
<a name="INDEX-1491" />
<a name="INDEX-1492" />documents you cannot explicitly tag. The
drop-cap is a common print style, but how do you select the first
letter in a paragraph? There are ways, but you have to identify each
and every instance separately. There is no tag for the first line in
a paragraph. And there are occasions where you might want the
browser to automatically generate content, such as to add the prefix
"Item #" and automatically number each item in an ordered
list.
</p>

<p>CSS2 introduces four new pseudo-elements that let you define special
relationships and styles for their display: first-line, first-letter,
before and after. Declare each as a colon-separated suffix of a
standard markup element. For example:
</p>

<blockquote><pre class="code">p:first-line {font-size: 200%; font-style: italic}</pre></blockquote>

<p>means that the browser should display the first line of each
paragraph italicized and twice as large as the rest of the text.
Similarly:
</p>

<blockquote><pre class="code">p:first-letter {font-size: 200%; float: left}</pre></blockquote>

<p>tells the browser to make the first letter of a paragraph twice as
large as the remaining text and float the letter to the left,
allowing the first two lines of the paragraph to float around the
larger initial letter.<a href="#FOOTNOTE-52">[52]</a>
</p><blockquote class="footnote"> <a name="FOOTNOTE-52" /><p>[52]The properties that can be
specified for the <tt class="literal">first-letter</tt> and
<tt class="literal">first-line</tt> pseudo-classes are the font properties,
color and background properties, <tt class="literal">text-decoration</tt>,
<tt class="literal">vertical-align</tt>, <tt class="literal">text-transform</tt>,
<tt class="literal">line-height</tt>, and <tt class="literal">clear</tt>. In
addition, the <tt class="literal">first-letter</tt> pseudo-class accepts
the margin properties, padding properties, border properties, and
<tt class="literal">float</tt>. The <tt class="literal">first-line</tt>
pseudo-class also accepts the <tt class="literal">word-spacing</tt>
and <tt class="literal">letter-spacing</tt> properties.</p>
</blockquote>

<p>The <tt class="literal">:before</tt> and <tt class="literal">:after</tt>
pseudo-elements let you identify where in your document you insert
generated content, such as list numbers, special lead-in headers, and
so forth. Hence, these pseudo-elements go hand-in-hand with the CSS2
content and counter properties. To whet your appetite, consider this
example:
</p>

<blockquote><pre class="code">ol {counter-reset: item}
ol li:before {content: "Item #" counter(item) " ";
                 counter-increment: item}</pre></blockquote>

<p>Too bad none of the current browsers support pseudo-elements.</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch08_03.htm#html4-CHP-8-SECT-3"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">8. Cascading Style Sheets</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">8.3. Style Classes</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>