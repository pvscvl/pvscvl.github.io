<html><head><title>Specificity (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_06.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch02_08.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">2.7. Specificity</h2>

<p><a name="INDEX-250" />Given
the existence of inheritance, one might well wonder what happens in a
circumstance such as this:
</p>

<blockquote><pre class="code">.grape {color: purple;}
H1 {color: red;}

&lt;H1 CLASS="grape"&gt;Meerkat &lt;EM&gt;Central&lt;/EM&gt;&lt;/H1&gt;</pre></blockquote>

<p>Since the selectors <tt class="literal">H1</tt> and
<tt class="literal">.grape</tt> can both match the <tt class="literal">H1</tt>
element shown, which one wins? As it happens,
<tt class="literal">.grape</tt> is the correct answer, and so the
<tt class="literal">H1</tt> element will be colored purple. This happens
because of the <em class="emphasis">specificity</em> of the two rules, and
the rules CSS has to deal with such situations.
</p>

<p><em class="emphasis">Specificity</em> describes the relative weights of
various rules. According to the specification, a simple selector
(e.g., <tt class="literal">H1</tt>) has a specificity of 1, class selectors
have a specificity of 10, and ID selectors a specificity of 100. Thus
the following rules would have the noted specificity:
</p>

<blockquote><pre class="code">H1 {color: red;}                    /* specificity = 1 */
P EM {color: purple;}               /* specificity = 2 */
.grape {color: purple;}             /* specificity = 10 */
P.bright {color: yellow;}           /* specificity = 11 */
P.bright EM.dark {color: brown;}    /* specificity = 22 */
#id216 {color: blue;}               /* specificity = 100 */</pre></blockquote>

<p>Thus, the rule for <tt class="literal">#id216</tt> has a much higher
specificity, and therefore more weight, than any of the others
listed. In cases where more than one rule can apply to an element,
the styles with the higher weight win out.
</p>

<a name="css-CHP-2-SECT-7.1" /><div class="sect2">
<h3 class="sect2">2.7.1. Inheritance and Specificity</h3>

<p><a name="INDEX-251" />
<a name="INDEX-252" />Within the framework of specificity,
inherited values have, effectively, a specificity of 0. This means
that any explicitly declared rule will override an inherited style.
Therefore, no matter how much weight a rule might have, it is only
inherited if no other rule can be applied to the inheriting element.
</p>

<p>For example, consider the following:</p>

<blockquote><pre class="code">BODY {background: black;}
LI {color: gray;}
UL.vital {color: white;}</pre></blockquote>

<p>You would likely expect that all list items would be gray except for
those which are found in lists with a class of
<tt class="literal">vital</tt>, in which case they'll be white.
However, as <a href="ch02_07.htm">Figure 2-26</a> demonstrates, this is not
the case.
</p>

<a name="css-CHP-2-FIG-26" /><div class="figure"><img height="88" alt="Figure 2-26" src="figs/css.0226.gif" width="191" /></div><h4 class="objtitle">Figure 2-26. Apparently incorrect behavior</h4>

<p>Why does this happen? Because the explicit declaration with the
selector <tt class="literal">LI</tt> wins out over the value which might
have been inherited from the <tt class="literal">UL.vital</tt> rule.
</p>

<p>Let's look at this process in a little more detail. Given the
following markup, the emphasized text will be gray, not black, since
the rule for <tt class="literal">EM</tt> outweighs the value inherited from
the <tt class="literal">H1</tt>:
</p>

<blockquote><pre class="code">H1#id3 {color: black;}   /* specificity = 101 */
EM {color: gray;}        /* specificity = 1 */

&lt;H1 ID="id3"&gt;Meerkat &lt;EM&gt;Central&lt;/EM&gt;&lt;/H1&gt;</pre></blockquote>

<p>This is because the specificity of the second rule (1) is higher than
the specificity of the inherited value (0). The fact that the
original specificity of the <tt class="literal">H1#id3</tt> rule is 101 has
no effect on the inherited value, whose weight is still 0.
</p>

<p>If the intention is to have <tt class="literal">H1</tt>s be consistently
black, while <tt class="literal">EM</tt> text in all other circumstances
should be red, then the following would be a good solution:
</p>

<blockquote><pre class="code">H1, H1 EM {color: black;}   /* specificity = 1, 2 */
EM {color: red;}            /* specificity = 1 */</pre></blockquote>

<p>Given these rules, <tt class="literal">EM</tt> text in any circumstance
except within an <tt class="literal">H1</tt> will be red. However,
<tt class="literal">EM</tt> text inside <tt class="literal">H1</tt> elements will
be black, because the specificity of their selector (2) is greater
than that of the second rule (1). Note that since, due to selector
grouping, there are effectively two rules in the first statement (one
for <tt class="literal">H1</tt> and one for <tt class="literal">H1</tt>
<tt class="literal">EM</tt> ), there are also two specificities -- one
for each rule.
</p>

<p>Elements with a <tt class="literal">STYLE</tt><a name="INDEX-253" />
<a name="INDEX-254" />
attribute are defined under CSS1 to have a specificity of 100, just
as though they were ID selectors such as <tt class="literal">#id3</tt>. In
practice, however, this specificity value is somewhat higher, since
the value of a <tt class="literal">STYLE</tt> element seems to outweigh
most normal rules, even those which technically have a higher
specificity (such as <tt class="literal">H1#id3</tt> <tt class="literal">EM</tt>
). In other words, the following markup will generally have
the result shown in <a href="ch02_07.htm">Figure 2-27</a>:
</p>

<blockquote><pre class="code">H1#id3 EM {color: gray;}

&lt;H1 ID="id3"&gt;Meerkat &lt;EM STYLE="color: black;"&gt;Central&lt;/EM&gt;!&lt;/H1&gt;</pre></blockquote>

<a name="css-CHP-2-FIG-27" /><div class="figure"><img height="24" alt="Figure 2-27" src="figs/css.0227.gif" width="235" /></div><h4 class="objtitle">Figure 2-27. Inline styles have high specificity</h4>

<p>You might choose to treat <tt class="literal">STYLE</tt> value as having a
specificity value of, say, 1,000, although this interpretation is not
supported by the CSS specification and so cannot be relied upon.
Finally,
<a name="INDEX-255" />pseudo-elements are ignored altogether
when calculating specificity, but
<a name="INDEX-256" />pseudo-classes are treated like regular
classes.
</p>

<p>There is one other wrinkle in the specificity picture, which is a way
to pretty much override the entire specificity mechanism.
</p>

</div>
<a name="css-CHP-2-SECT-7.2" /><div class="sect2">
<h3 class="sect2">2.7.2. Importance</h3>

<p>Ever felt like something is so important that it outweighs all other
considerations? Well, it's possible to mark certain rules as
being more important than others. These are called
<em class="emphasis">important
rules</em><a name="INDEX-257" />
<a name="INDEX-258" /> due to the
way in which they are declared and also because of their very nature.
An important rule is marked by inserting the phrase
<tt class="literal">!important</tt><a name="INDEX-259" /> just before the
terminating semicolon in a rule:
</p>

<blockquote><pre class="code">P.dark {color: #333 !important; background: white;}</pre></blockquote>

<p>Here, the color value of <tt class="literal">#333</tt> is marked
<tt class="literal">!important</tt>, whereas the background value of
<tt class="literal">white</tt> is not. If you wish to mark both rules as
important, then each rule will need its own
<tt class="literal">!important</tt>:
</p>

<blockquote><pre class="code">P.dark {color: #333 !important; background: white !important;}</pre></blockquote>

<p>It is important to ensure that you place the
<tt class="literal">!important</tt> correctly, or else the rule can be
invalidated. The <tt class="literal">!important</tt>
<em class="emphasis">always</em> goes at the end of the declaration, right
before the semicolon. This is especially important -- no pun
intended -- when it comes to properties that allow values which
contain multiple keywords, such as <tt class="literal">font</tt>:
</p>

<blockquote><pre class="code">P.light {color: yellow; font: 11pt Times !important;}</pre></blockquote>

<p>If the <tt class="literal">!important</tt> were placed anywhere else in the
<tt class="literal">font</tt> declaration, then that entire declaration
would very likely be invalidated and none of the styles applied.
</p>

<p>Rules that are marked <tt class="literal">!important</tt> do not have a
defined specificity value, but authors can assume that they have a
conveniently high value, such as 10,000 -- in other words, a value
that outweighs all others. Note that while author-defined styles are
treated as having a greater weight than reader-defined styles (see <a href="ch02_08.htm">Section 2.8, "The Cascade"</a>, later in this
chapter), the reverse is true of <tt class="literal">!important</tt> rules:
important reader-defined rules take precedence over author-defined
styles, even those marked <tt class="literal">!important</tt>.
</p>

<p>Indeed, an <tt class="literal">!important</tt> rule will override the
contents of an inline <tt class="literal">STYLE</tt> attribute. Thus, given
the following code, the result will be gray text, not black:
</p>

<blockquote><pre class="code">H1 {color: gray !important;}

&lt;H1 STYLE="color: black;"&gt;Hi there!&lt;/H1&gt;</pre></blockquote>

<p>There is one last scenario to consider. Consider the following:</p>

<blockquote><pre class="code">P#warn {color: red ! important;}
EM {color: black;}

&lt;P ID="warn"&gt;This text is red, but &lt;EM&gt;emphasized text is black.&lt;/EM&gt;&lt;/P&gt;</pre></blockquote>

<p>Remember that inherited values always have a specificity of 0. This
is true even if the rule from which the value comes has an
<tt class="literal">!important</tt> attached. All of its importance is lost
outside the elements which match that rule.<a name="INDEX-260" />
</p>

<a name="ch02-22-fm2xml" /><blockquote><h4>WARNING</h4>
<p><a name="INDEX-261" />As of this writing, very few browsers
implement <tt class="literal">!important</tt>. Internet Explorer 5 and
Opera 3.6 have it right, but that's all. On the other hand,
<tt class="literal">!important</tt> is expected to be supported in
Navigator 6.
</p>
</blockquote>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_06.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch02_08.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">2.6. Inheritance</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">2.8. The Cascade</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>