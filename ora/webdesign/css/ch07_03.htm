<html><head><title>Margins (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch07_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch07_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">7.3. Margins</h2>

<p><a name="INDEX-746" />The
most basic things you can add to an element are margins. These create
extra <a name="INDEX-747" />blank space around an
element. "Blank space" generally refers to the area in
which other elements cannot also exist and in which the parent
element's background is visible. For example, look at <a href="ch07_03.htm">Figure 7-5</a>, which shows the difference between two
paragraphs without any margins, and the same two paragraphs with some
margins.
</p>

<a name="css-CHP-7-FIG-5" /><div class="figure"><img height="192" alt="Figure 7-5" src="figs/css.0705.gif" width="457" /></div><h4 class="objtitle">Figure 7-5. Paragraphs with, and without, margins</h4>

<p>The simplest way to set a margin is by using the property
<tt class="literal">margin</tt>.
</p>

<a name="css-CHP-7-SIDEBAR-3" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">margin</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p>[ &lt;length&gt; | &lt;percentage&gt; | <tt class="literal">auto</tt> ]{1,4}</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p>not defined</p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>

<a name="ch07-6-fm2xml" /><blockquote><h4>WARNING</h4>
<p>Percentage values refer to width of the parent element.</p>
</blockquote>
</td></tr></table></blockquote>

<p><a name="INDEX-748" />Suppose we
wish to set a quarter-inch margin on <tt class="literal">H1</tt> elements,
as illustrated in <a href="ch07_03.htm">Figure 7-6</a>. (A background color
has been added in order to be able to see the edges of the content
area.) For example:
</p>

<blockquote><pre class="code">H1 {margin: 0.25in; background-color: silver;}</pre></blockquote>

<a name="css-CHP-7-FIG-6" /><div class="figure"><img height="124" alt="Figure 7-6" src="figs/css.0706.gif" width="481" /></div><h4 class="objtitle">Figure 7-6. Setting a margin for H1 elements</h4>

<p>This sets a quarter-inch of blank space on each side of an
<tt class="literal">H1</tt> element. In <a href="ch07_03.htm">Figure 7-6</a>, this
is represented using dashed lines which are included for illustrative
purposes. These lines would not actually appear in a web browser.
</p>

<p><tt class="literal">margin</tt> can accept any length measure, whether in
pixels, inches, millimeters, or ems. However, the default value for
<tt class="literal">margin</tt> is effectively <tt class="literal">0</tt> (zero),
which means that if you don't declare a value, then by default,
there won't be a margin.
</p>

<a name="ch07-7-fm2xml" /><blockquote><h4>TIP</h4>
<p>In practice, browsers come with pre-assigned styles for many
elements, and margins are no exception. For example, in CSS-enabled
browsers, the "blank line" above and below each paragraph
element is generated using margins. Therefore, if you don't
declare margins for the <tt class="literal">P</tt> element, the browser may
apply some margins on its own -- which is to say that just because
you don't declare margins for an element doesn't mean
that there won't be any.
</p>
</blockquote>

<p>You can also declare a margin to be <tt class="literal">auto</tt>. For now,
assume that <tt class="literal">auto</tt> will get you an automatically
calculated value, which is usually, but not quite always, zero.
(Fortunately, the circumstances under which <tt class="literal">auto</tt>
becomes something other than zero are very well-defined, and are
discussed in detail in the next chapter.)
</p>

<p>Finally, it's possible to set a percentage value for
<tt class="literal">margin</tt>. The details of this type of value will be
discussed in a later section.
</p>

<a name="css-CHP-7-SECT-3.1" /><div class="sect2">
<h3 class="sect2">7.3.1. Length Values and Margins</h3>

<p><a name="INDEX-749" /> <a name="INDEX-750" />As stated
before, any length value can be used in setting the margins of an
element. If we want a 10-pixel whitespace around paragraph elements,
that's simple enough. The following markup creates a normal
paragraph and one that has a ten-pixel margin applied to it, shown in
<a href="ch07_03.htm">Figure 7-7</a>:
</p>

<blockquote><pre class="code">P {background-color: silver;}
P.one {margin: 10px;}</pre></blockquote>

<a name="css-CHP-7-FIG-7" /><div class="figure"><img height="103" alt="Figure 7-7" src="figs/css.0707.gif" width="481" /></div><h4 class="objtitle">Figure 7-7. Comparative paragraphs</h4>

<p>(Again, the background color helps show the content area, and the
dashed lines are for illustrative purposes only.) As <a href="ch07_03.htm">Figure 7-7</a> demonstrates, 10 pixels of space are added to
each side of the content area. This is somewhat similar to using the
<tt class="literal">HSPACE</tt> and <tt class="literal">VSPACE</tt> attributes in
HTML. In fact, you can use <tt class="literal">margin</tt> to set extra
space around an image. Let's say you want 1 em of space
surrounding all images:
</p>

<blockquote><pre class="code">IMG {margin: 1em;}</pre></blockquote>

<p>That's all it takes.</p>

<p>There may be times where you want a different amount of space on each
side of an element. That's simple as well. If we want all
<tt class="literal">H1</tt> elements to have a top margin of 10 pixels, a
right margin of 20 pixels, a bottom margin of 15 pixels, and a left
margin of 5 pixels, here's all we need:
</p>

<blockquote><pre class="code">H1 {margin: 10px 20px 15px 5px; background-color: silver;}</pre></blockquote>

<p>As <a href="ch07_03.htm">Figure 7-8</a> reveals, we have what we wanted. The
order of the values is obviously important, and follows this pattern:
</p>

<blockquote><pre class="code">margin: <em class="replaceable">top right bottom left</em></pre></blockquote>

<a name="css-CHP-7-FIG-8" /><div class="figure"><img height="46" alt="Figure 7-8" src="figs/css.0708.gif" width="450" /></div><h4 class="objtitle">Figure 7-8. Uneven margins </h4>

<p>A good way to remember this pattern is to keep in mind that the four
values go clockwise around the element, starting from the top. The
values are <em class="emphasis">always</em> applied in this order, so in
order to get the effect you want, you have to arrange the values
correctly.
</p>

<a name="ch07-9-fm2xml" /><blockquote><h4>TIP</h4>
<p>An easy way to remember the order in which sides have to be declared,
other than thinking of it as being clockwise from the top, is to keep
in mind that getting the sides in the correct order helps you avoid
"trouble" -- that is, TRBL, for "Top Right
Bottom Left."
</p>
</blockquote>

<p>It's also possible to mix up the types of length value you use.
You aren't restricted to using a single length type in a given
rule, as shown here:
</p>

<blockquote><pre class="code">H2 {margin: 14px 5em 0.1in 3ex;}  /* value variety! */</pre></blockquote>

<p><a href="ch07_03.htm">Figure 7-9</a> shows us, with a little extra
annotation, the results of this declaration.
</p>

<a name="css-CHP-7-FIG-9" /><div class="figure"><img height="59" alt="Figure 7-9" src="figs/css.0709.gif" width="474" /></div><h4 class="objtitle">Figure 7-9. Mixed-value margins</h4>

</div>
<a name="css-CHP-7-SECT-3.2" /><div class="sect2">
<h3 class="sect2">7.3.2. Percentages and Margins</h3>

<p><a name="INDEX-751" />As stated earlier, it's possible to
set percentage values for the margins of an element. Percentages are
computed in relation to the width of the parent element, so they
change if the parent element's width changes in some way. For
example, assume the following, shown in <a href="ch07_03.htm">Figure 7-10</a>:
</p>

<blockquote><pre class="code">P {margin: 10%;}

&lt;DIV STYLE="width: 200px;"&gt;
&lt;P&gt;This paragraph is contained within a DIV which has a width of 200 pixels, 
so its margin will be 10% of the width of the paragraph's parent (the DIV).
Given the declared width of 200 pixels, the margin will be 20 pixels on 
all sides.&lt;/P&gt;
&lt;/DIV&gt;
&lt;DIV STYLE="width: 100px;"&gt;
&lt;P&gt;This paragraph is contained within a DIV with a width of 100 pixels,
so its margin will still be 10% of the width of the paragraph's parent. 
There will, therefore, be half as much margin on this paragraph as that
on the first paragraph.&lt;/P&gt;&lt;/DIV&gt;</pre></blockquote>

<a name="css-CHP-7-FIG-10" /><div class="figure"><img height="431" alt="Figure 7-10" src="figs/css.0710.gif" width="175" /></div><h4 class="objtitle">Figure 7-10. Parent widths and percentages</h4>

<p>While this is interesting enough, consider the case of elements
without a declared <tt class="literal">width</tt>, whose overall width
(including margins) is therefore dependent on the
<tt class="literal">width</tt> of the parent element.
</p>

<blockquote><pre class="code">P {margin: 10%}</pre></blockquote>

<p><a href="ch07_03.htm">Figure 7-11</a> shows how the margin of a paragraph
changes as it's viewed in browsers windows of two different
sizes.
</p>

<a name="css-CHP-7-FIG-11" /><div class="figure"><img height="524" alt="Figure 7-11" src="figs/css.0711.gif" width="407" /></div><h4 class="objtitle">Figure 7-11. Percentage margins and changing environments</h4>

<p>As you can imagine, this leads to the possibility of
"fluid" pages, where the margins and padding of elements
enlarge or reduce to match the actual size of the display canvas. In
theory, as the user changes the width of a browser window, the
margins and padding will expand or shrink dynamically -- but not
every browser supports this sort of behavior. Still, using
percentages for <tt class="literal">margin</tt> and
<tt class="literal">padding</tt> may be the best way to set styles that
will hold up in more than one media; for example, documents that will
look good on a monitor as well as a printout.
</p>

<p>It's also possible to mix percentages with length values. Thus,
to set <tt class="literal">H1</tt> elements to have top and bottom margins
of one-half em and side margins that are 10% of the width of the
browser window, you can declare the following, shown in <a href="ch07_03.htm">Figure 7-12</a>:
</p>

<blockquote><pre class="code">H1 {margin: 0.5em 10% 0.5em 10%;}</pre></blockquote>

<a name="css-CHP-7-FIG-12" /><div class="figure"><img height="53" alt="Figure 7-12" src="figs/css.0712.gif" width="434" /></div><h4 class="objtitle">Figure 7-12. Mixed margins</h4>

<p>Here, although the top and bottom margins will stay constant in any
situation, the side margins will change based on the width of the
browser window. This of course assumes that all <tt class="literal">H1</tt>
elements are the child of the <tt class="literal">BODY</tt> element and
that <tt class="literal">BODY</tt> is as wide as the browser window. More
properly stated, the side margins of <tt class="literal">H1</tt> elements
will be 10% of the width of the <tt class="literal">H1</tt>'s parent
element.
</p>

<p>Let's revisit that example for a moment:</p>

<blockquote><pre class="code">H1 {margin: 0.5em 10% 0.5em 10%;}</pre></blockquote>

<p>Seems a little redundant, doesn't it? After all, you have to
type in the same pair of values twice. Fortunately, CSS offers an
easy way to avoid this.<a name="INDEX-752" />
</p>

</div>
<a name="css-CHP-7-SECT-3.3" /><div class="sect2">
<h3 class="sect2">7.3.3. Replicating Values</h3>

<p><a name="INDEX-753" />
<a name="INDEX-754" />Sometimes,
the values you're entering for <tt class="literal">margin</tt> get a
little repetitive:
</p>

<blockquote><pre class="code">P {margin: 0.25em 1em 0.25em 1em;}</pre></blockquote>

<p>You don't have to keep typing in pairs of numbers like this,
though. Instead of the preceding markup, try this:
</p>

<blockquote><pre class="code">P {margin: 0.25em 1em;}</pre></blockquote>

<p>These two values are enough to take the place of four. But how?</p>

<p>CSS defines a few steps to accommodate fewer than four values for
<tt class="literal">margin</tt>:
</p>

<ul><li>
<p>If the value for <em class="replaceable">left</em> is missing, use the
value provided for <em class="replaceable">right</em>.
</p>
</li><li>
<p>If the value for <em class="replaceable">bottom</em> is missing, use
the value provided for <em class="replaceable">top</em>.
</p>
</li><li>
<p>If the value for <em class="replaceable">right</em> is missing, use the
value provided for <em class="replaceable">top</em>.
</p>
</li></ul>
<p>If you prefer a more visual approach, take a look at the diagram
shown in <a href="ch07_03.htm">Figure 7-13</a>.
</p>

<a name="css-CHP-7-FIG-13" /><div class="figure"><img height="57" alt="Figure 7-13" src="figs/css.0713.gif" width="391" /></div><h4 class="objtitle">Figure 7-13. Value replication pattern</h4>

<p>In other words, if there are three values given for
<tt class="literal">margin</tt> , the fourth
(<em class="replaceable">left</em>) is copied from the second
(<em class="replaceable">right</em>). If there are two values given,
the fourth is copied from the second, and the third
(<em class="replaceable">bottom</em> ) from the first
(<em class="replaceable">top</em> ). Finally, if there is only one
value given, then it's copied to all the others.
</p>

<p>This simple mechanism allows authors to supply only as many values as
necessary, as shown here:
</p>

<blockquote><pre class="code">H1 {margin: 0.25em 0 0.5em;} /* same as '0.25em 0 0.5em 0' */
H2 {margin: 0.15em 0.2em;}  /* same as '0.15em 0.2em 0.15em 0.2em' */
P {margin: 0.5em 10px;}  /* same as '0.5em 10px 0.5em 10px' */
P.close {margin: 0.1em;}  /* same as '0.1em 0.1em 0.1em 0.1em' */</pre></blockquote>

<p>The only drawback to this ability is a small one, but you're
bound to run into it eventually. Suppose you want to set the top and
left margins for <tt class="literal">H1</tt> elements to be 10 pixels, and
the bottom and right margins to be 20 pixels. In that case, you have
to write the following:
</p>

<blockquote><pre class="code">H1 {margin: 10px 20px 20px 10px;} /* can't be any shorter */</pre></blockquote>

<p>Unfortunately, there is no way to cut down on the number of values
needed in such a circumstance.
</p>

<p>Let's take another example: one where we want all of the
margins to be <tt class="literal">auto</tt> -- except for the left
margin, which should be <tt class="literal">3em</tt> :
</p>

<blockquote><pre class="code">H2 {margin: auto auto auto 3em;}</pre></blockquote>

<p>Again, we got the effect we wanted. The problem is all that typing of
<tt class="literal">auto</tt> gets a little tedious. After all, all we want
to do is affect the margin on one side of the element as shown in
<a href="ch07_03.htm">Figure 7-14</a>, which leads us to the next<a name="INDEX-755" /> <a name="INDEX-756" /> topic.
</p>

<a name="css-CHP-7-FIG-14" /><div class="figure"><img height="49" alt="Figure 7-14" src="figs/css.0714.gif" width="267" /></div><h4 class="objtitle">Figure 7-14. Setting a new value for just the left margin</h4>

</div>
<a name="css-CHP-7-SECT-3.4" /><div class="sect2">
<h3 class="sect2">7.3.4. Single-Side Margin Properties</h3>

<p><a name="INDEX-757" />Fortunately, <a name="INDEX-758" /> <a name="INDEX-759" />
<a name="INDEX-760" /> <a name="INDEX-761" />there's
<a name="INDEX-762" />a way to assign a value to the
margin on a single side of an element. Let's say we only want
to set the left margin of <tt class="literal">H2</tt> elements to be
<tt class="literal">3em</tt>. Instead of all the typing required with
<tt class="literal">margin</tt> , we could take this approach:
</p>

<blockquote><pre class="code">H2 {margin-left: 3em;}</pre></blockquote>

<p><tt class="literal">margin-left</tt> is one of four properties devoted to
setting the margins on each of the four sides of an element box.
Their names should come as little surprise.
</p>

<a name="css-CHP-7-SIDEBAR-4" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">margin-top, margin-right, margin-bottom, margin-left</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p>&lt;length&gt; | &lt;percentage&gt; | <tt class="literal">auto</tt></p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p><tt class="literal">0</tt></p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>

<a name="ch07-16-fm2xml" /><blockquote><h4>WARNING</h4>
<p>Percentage values refer to the width of the parent element.</p>
</blockquote>
</td></tr></table></blockquote>

<p>Using any one of these properties allows you to set a margin on that
side only, without directly affecting any of the other margins.
</p>

<p>It's possible to use more than one of these single-side
properties in a single rule; for example:
</p>

<blockquote><pre class="code">H2 {margin-left: 3em; margin-bottom: 2em; margin-right: 0; margin-top: 0;}</pre></blockquote>

<p>As we see in <a href="ch07_03.htm">Figure 7-15</a>, the margins were set as we
wanted them.
</p>

<a name="css-CHP-7-FIG-15" /><div class="figure"><img height="84" alt="Figure 7-15" src="figs/css.0715.gif" width="284" /></div><h4 class="objtitle">Figure 7-15. More than one single-side margin</h4>

<p>However, in this case, it might have been easier to use
<tt class="literal">margin</tt> after all:
</p>

<blockquote><pre class="code">H2 {margin: 0 0 2em 3em;}</pre></blockquote>

<p>The results will be exactly the same as those we saw before, only
with a little bit less typing. In general, once you're trying
to set margins for more than one side, it's almost easier to
simply use <tt class="literal">margin</tt>. From the standpoint of your
document's display, however, it doesn't really matter
which approach you use, so feel free to choose whichever is easier
for you.
</p>

</div>
<a name="css-CHP-7-SECT-3.5" /><div class="sect2">
<h3 class="sect2">7.3.5. Collapsing Margins</h3>

<p><a name="INDEX-763" />
<a name="INDEX-764" />There is one interesting aspect of
applying margins to block-level elements: the collapsing of adjacent
vertical margins. This comes into play when an element with margins
immediately follows another such element in the document's
layout.
</p>

<p>A perfect example is an unordered list, in which the list items
follow one another. Assume that the following is declared for a list
that contains five list items:
</p>

<blockquote><pre class="code">LI {margin-top: 10px; margin-bottom: 15px;}</pre></blockquote>

<p>Thus, each list item has a 10-pixel top margin and a 15-pixel bottom
margin. However, when the list is rendered, the distance between
adjacent list items is 15 pixels, not 25. This is because along the
vertical axis, adjacent margins are said to be collapsed. In other
words, the smaller of the two margins is eliminated in favor of the
larger. <a href="ch07_03.htm">Figure 7-16</a> shows the difference between
collapsed and uncollapsed margins.
</p>

<a name="css-CHP-7-FIG-16" /><div class="figure"><img height="157" alt="Figure 7-16" src="figs/css.0716.gif" width="482" /></div><h4 class="objtitle">Figure 7-16. Collapsed versus uncollapsed margins</h4>

<p>Correctly implemented user agents will collapse the vertically
adjacent margins, as shown in the first list in <a href="ch07_03.htm">Figure 7-16</a>, where there are 15-pixel spaces between each
list item. The second list shows what would happen if the user agent
didn't collapse margins, resulting in 25-pixel spaces between
list items.
</p>

<p>Another word to use, if you don't like "collapse,"
is
"<a name="INDEX-765" />overlap." Although the margins are not
really overlapping, you can visualize what's happening using
the following analogy. Imagine that each element, such as a
paragraph, is a small piece of paper with the content of the element
written on it. Around each piece of paper is some amount of clear
plastic; this plastic represents the margins. The first piece of
paper (say an <tt class="literal">H1</tt> piece) is laid down on the canvas
(browser window). The second (a paragraph) is laid below it and then
slid up until the edge of one of the piece's plastic touches
the edge of the other's content. If the first piece of paper
has half an inch of plastic along its bottom edge, and the second has
a third of an inch along its top, then when they slide together, the
first piece's plastic will touch the top edge of the second
piece of paper. The two are now done being placed on the canvas, and
the plastic attached to the pieces is overlapping.
</p>

<p>This is also occurs where multiple margins meet, such as at the end
of a list. Adding to the earlier example, let us assume the following
rules:
</p>

<blockquote><pre class="code">UL {margin-bottom: 10px;}
LI {margin-top: 10px; margin-bottom: 20px;}
H1 {margin-top: 28px;}</pre></blockquote>

<p>Therefore, the last item in the list has a bottom margin of 20
pixels, the bottom margin of the <tt class="literal">UL</tt> is 10 pixels,
and the top margin of a succeeding <tt class="literal">H1</tt> is 28
pixels. Given all this, once the margins have been collapsed (or, if
you prefer, overlapped), the distance between the end of the
<tt class="literal">LI</tt> and the beginning of the <tt class="literal">H1</tt>
is 28 pixels, as shown in <a href="ch07_03.htm">Figure 7-17</a>.
</p>

<a name="css-CHP-7-FIG-17" /><div class="figure"><img height="136" alt="Figure 7-17" src="figs/css.0717.gif" width="321" /></div><h4 class="objtitle">Figure 7-17. Collapsing in detail</h4>

<p>This collapsing behavior only applies to margins. Padding and
borders, where they exist, are never collapsed by anything.<a name="INDEX-766" /> <a name="INDEX-767" />
</p>

</div>
<a name="css-CHP-7-SECT-3.6" /><div class="sect2">
<h3 class="sect2">7.3.6. Negative Margin Values</h3>

<p><a name="INDEX-768" /> <a name="INDEX-769" />There's another side to margins: the
negative side. That's right, it's possible to set
negative values for margins. This will have some interesting effects,
assuming that a user agent supports negative margins at all.
</p>

<a name="ch07-19-fm2xml" /><blockquote><h4>TIP</h4>
<p><a name="INDEX-770" />User agents are not, according to
the <a name="INDEX-771" />CSS1 specification,
required to fully support negative margins, using the phrase,
"A negative value is allowed, but there may be
implementation-specific limits." In the world of web browsers,
though Navigator 4.x, Explorer 4.x/5.x, and Opera 3.x do permit
negative margins:
</p>
</blockquote>

<p>Negative margins have an impact on vertical formatting, affecting how
margins are collapsed. If there are negative vertical margins, then
the <a name="INDEX-772" />browser should take the absolute
maximum of the negative margins and subtract that from the maximum of
any positive margins.
</p>

<p>In the case where there are only two margins to be collapsed, one
positive and the other negative, the situation is handled in a fairly
simple manner. The absolute value of the negative margin is
subtracted from the positive margin -- or, to put it another way,
the negative is added to the positive -- and the resulting value
is the distance between the elements.
</p>

<p>To see what this means, let's start with a paragraph that has a
negative top margin and no margins on its other sides -- this will
keep the example simple. In addition, we'll make the paragraph
bold, so that it's easier to distinguish from its neighbors:
</p>

<blockquote><pre class="code">&lt;P STYLE="margin: -1.75em 0 0 0; font-weight: bold;"&gt;
This paragraph has a negative top margin...
&lt;/P&gt;</pre></blockquote>

<p>We can see in <a href="ch07_03.htm">Figure 7-18</a> that the paragraph has
been pulled up so far that it's practically overlapping the end
of the previous paragraph. This is the expected effect.
</p>

<a name="css-CHP-7-FIG-18" /><div class="figure"><img height="271" alt="Figure 7-18" src="figs/css.0718.gif" width="463" /></div><h4 class="objtitle">Figure 7-18. Negative top margin</h4>

<p>In a like manner, setting a negative value on the other sides will
pull them beyond their normal limits:
</p>

<blockquote><pre class="code">&lt;P STYLE="margin: -2em; font-weight: bold;"&gt;...</pre></blockquote>

<p>As <a href="ch07_03.htm">Figure 7-19</a> makes abundantly clear, the paragraph
has spilled beyond the edges of the browser window and has not only
pulled up far enough to overlap the end of the previous paragraph,
but has also pulled the following paragraph up to overlap its last
line.
</p>

<a name="css-CHP-7-FIG-19" /><div class="figure"><img height="242" alt="Figure 7-19" src="figs/css.0719.gif" width="474" /></div><h4 class="objtitle">Figure 7-19. Negative margin</h4>

<p>Negative percentages are also permitted. These will behave like any
negative length value, with the obvious difference that the amount of
negativity will depend on the width of the parent element. Thus:
</p>

<blockquote><pre class="code">P {margin: -10%;}</pre></blockquote>

<p><a href="ch07_03.htm">Figure 7-20</a> illustrates the consequences of such a
rule, where the amount by which paragraphs overlap each other and
spill beyond the browser window is entirely dependent on the width of
the window itself -- and the wider the window, the worse the
situation becomes.
</p>

<a name="css-CHP-7-FIG-20" /><div class="figure"><img height="146" alt="Figure 7-20" src="figs/css.0720.gif" width="395" /></div><h4 class="objtitle">Figure 7-20. The dangers of document-wide negative-margin rules</h4>

<p>Using negative <a name="INDEX-773" />
<a name="INDEX-774" />margins with block-level elements
such as these can quite obviously be dangerous and is rarely worth
the trouble -- but it can also be rewarding. It takes a good deal
of practice, and many mistakes, to learn to tell the difference
between the two.<a name="INDEX-775" />
</p>

</div>
<a name="css-CHP-7-SECT-3.7" /><div class="sect2">
<h3 class="sect2">7.3.7. Margins and Inline Elements</h3>

<p><a name="INDEX-776" />So far, we've only talked
about how margins apply to block-level elements like paragraphs and
headers. Margins can also be applied to inline elements, although the
effects are a little different.
</p>

<p>Let's say that you want to set top and bottom margins on
boldfaced text. You declare:
</p>

<blockquote><pre class="code">B {margin-top: 25px; margin-bottom: 50px;}</pre></blockquote>

<p>This is allowed in the specification, but it will have absolutely no
effect on the line height, and since margins are effectively
transparent, this will have no visual effect whatsoever -- as you
can see for yourself in <a href="ch07_03.htm">Figure 7-21</a>.
</p>

<a name="css-CHP-7-FIG-21" /><div class="figure"><img height="31" alt="Figure 7-21" src="figs/css.0721.gif" width="381" /></div><h4 class="objtitle">Figure 7-21. Margins on an inline element</h4>

<p>This happens because margins on inline elements don't change
the line height of an element. (In fact, the only properties that can
change the distance between lines containing only text are
<tt class="literal">line-height</tt>, <tt class="literal">font-size</tt>, and
<tt class="literal">vertical-align</tt>.)
</p>

<p>However, all of this is true only for the top and bottom sides of
inline elements; the left and right sides are a different story
altogether. We'll start by considering the simple case of a
small inline element within a single line, as depicted in <a href="ch07_03.htm">Figure 7-22</a>.
</p>

<a name="css-CHP-7-FIG-22" /><div class="figure"><img height="32" alt="Figure 7-22" src="figs/css.0722.gif" width="377" /></div><h4 class="objtitle">Figure 7-22. A single-line inline element with a left margin</h4>

<p>Here, if we set values for the left or right margin, they will be
visible, as <a href="ch07_03.htm">Figure 7-23</a> makes obvious:
</p>

<blockquote><pre class="code">B {margin-left: 10px; background: silver;}</pre></blockquote>

<a name="css-CHP-7-FIG-23" /><div class="figure"><img height="32" alt="Figure 7-23" src="figs/css.0723.gif" width="375" /></div><h4 class="objtitle">Figure 7-23. An inline element with a left margin</h4>

<p>Note the extra space between the end of the word just before the
inline element, and the edge of the inline element's
background. This can end up on both ends of the inline if we wish:
</p>

<blockquote><pre class="code">B {margin: 10px; background: silver;}</pre></blockquote>

<p>As expected, <a href="ch07_03.htm">Figure 7-24</a> shows a little extra space
on the right and left sides of the inline element, and no extra space
above or below it.
</p>

<a name="css-CHP-7-FIG-24" /><div class="figure"><img height="49" alt="Figure 7-24" src="figs/css.0724.gif" width="259" /></div><h4 class="objtitle">Figure 7-24. An inline element with a 10-pixel margin</h4>

<p>This all seems simple enough, but when the boldfaced text stretches
across multiple lines, the situation becomes a little odd. First,
realize that the margins set for inline elements are not applied at
the point where line-breaking occurs. This line-breaking happens in
the course of wrapping text so that it fits inside the
browser's window, for example, or inside a parent element. The
only effect margins have on line-breaking is that, by causing extra
space to appear within the line, they can move content over. This may
cause a line to break at a different spot than it ordinarily would
have.
</p>

<p>Turn to <a href="ch07_03.htm">Figure 7-25</a> to see what happens when an
inline element with a margin is displayed across multiple lines:
</p>

<blockquote><pre class="code">B {margin: 10px; background: silver;}</pre></blockquote>

<a name="css-CHP-7-FIG-25" /><div class="figure"><img height="35" alt="Figure 7-25" src="figs/css.0725.gif" width="335" /></div><h4 class="objtitle">Figure 7-25. An inline element displayed across two lines of text with a 10-pixel margin</h4>

<p>The left margin is applied to the beginning of the element, and the
right margin to the end of it. Margins are <em class="emphasis">not</em>
applied to the right and left side of each line. Also, you can see
that if not for the margins, the line may have broken after
"text" instead of after "boldfaced." This is
the only real way in which margins affect<a name="INDEX-777" /> line-breaking.
</p>

<p>To understand why, let's go back to the paper-and-plastic
analogy employed in the previous section. Think of an inline element
as a strip of paper with marginal plastic surrounding it. Displaying
the inline element on multiple lines is like cutting up the strip
into smaller strips. However, no extra plastic is added to each
smaller strip. The only plastic used is that which was on the strip
to begin with, so it only appears at the beginning and end of the
inline element.<a name="INDEX-778" />
</p>

</div>
<a name="css-CHP-7-SECT-3.8" /><div class="sect2">
<h3 class="sect2">7.3.8. Margins: Known Issues</h3>

<p>As useful as margins are, a number of problems can arise with their
use -- enough, in fact, that they warrant their own section,
instead of just a small warning box.
</p>

<p>The first is that <a name="INDEX-779" />Navigator
4.x generally <em class="emphasis">adds</em> margin rules to its built-in
margins, instead of replacing the built-in values. For example,
let's say you want to eliminate the space between
<tt class="literal">H1</tt> elements and paragraphs. Here's the
simplest case for doing so:
</p>

<blockquote><pre class="code">H1 {margin-bottom: 0;}
P {margin-top: 0;}</pre></blockquote>

<p>This is, after all, one correct way to eliminate the space between
succeeding elements. Navigator 4.x, however, will display the
elements with the usual blank line between them, as you can see in
<a href="ch07_03.htm">Figure 7-26</a>. This is because it's adding the
zero values to its own default margins.
</p>

<a name="css-CHP-7-FIG-26" /><div class="figure"><img height="99" alt="Figure 7-26" src="figs/css.0726.gif" width="418" /></div><h4 class="objtitle">Figure 7-26. Navigator 4.x and margins</h4>

<p>If you want to overcome this space, you can always use negative
margins. Here's one possible declaration:
</p>

<blockquote><pre class="code">H1 {margin-bottom: 0;}
P {margin-top: -1em;}</pre></blockquote>

<p>The problem with this solution arises when the document is viewed in
<a name="INDEX-780" />Internet Explorer, which will display
what's shown in <a href="ch07_03.htm">Figure 7-27</a>. The overlapping
text is not a mistake on Explorer's part -- it's doing
exactly as you specified. Basically, there isn't an easy way to
circumvent this problem, although two possible approaches are
detailed in <a href="ch11_01.htm">Chapter 11, "CSS in Action"</a>.
</p>

<a name="css-CHP-7-FIG-27" /><div class="figure"><img height="81" alt="Figure 7-27" src="figs/css.0727.gif" width="413" /></div><h4 class="objtitle">Figure 7-27. Overlapping text in Explorer</h4>

<p>It gets worse, unfortunately. If you apply margins to inline
elements, as was discussed previously, you'll get results from
Navigator 4.x like those shown in <a href="ch07_03.htm">Figure 7-28</a>.
</p>

<a name="css-CHP-7-FIG-28" /><div class="figure"><img height="48" alt="Figure 7-28" src="figs/css.0728.gif" width="443" /></div><h4 class="objtitle">Figure 7-28. Margins, inline elements, and Navigator 4.x</h4>

<p>The style used to generate <a href="ch07_03.htm">Figure 7-28</a> was as
follows:
</p>

<blockquote><pre class="code">STRONG {margin-left: 10px;}</pre></blockquote>

<p>Instead of adding ten pixels of blank space to the beginning of the
<tt class="literal">STRONG</tt> element, Navigator assumes that the margin
refers to the left edge of the browser window, and places the
<tt class="literal">STRONG</tt> element accordingly This is utterly,
completely wrong. (There are those who speculate that Navigator turns
the <a name="INDEX-781" />inline element into a block-level element,
but its placement implies that things may be otherwise. It's
difficult to be sure.) Unfortunately, the fact that this happens
means that the use of margins on <a name="INDEX-782" />
<a name="INDEX-783" />inline
elements is a risky proposition, and not one to be undertaken
lightly.<a name="INDEX-784" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch07_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch07_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">7.2. Margins or Padding?</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">7.4. Borders</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
