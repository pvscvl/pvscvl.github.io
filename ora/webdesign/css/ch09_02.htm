<html><head><title>Relative Positioning (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch09_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">9.2. Relative Positioning</h2>

<p><a name="INDEX-1083" /> <a name="INDEX-1084" />The
simplest of the positioning schemes to understand is relative
positioning. In this scheme, a positioned element is shifted by use
of the side-offset properties. However, this can have some
interesting consequences.
</p>

<p>On the surface, it seems simple enough. Let's say we want to
shift an image up and to the left. <a href="ch09_02.htm">Figure 9-15</a> shows
us the result of these styles:
</p>

<blockquote><pre class="code">IMG {position: relative; top: -20px; left: -20px;}</pre></blockquote>

<a name="css-CHP-9-FIG-15" /><div class="figure"><img height="181" alt="Figure 9-15" src="figs/css.0915.gif" width="449" /></div><h4 class="objtitle">Figure 9-15. A relatively positioned element</h4>

<p>All we've done here is offset the image's top edge 20
pixels upward and offset the left edge 20 pixels to the left.
However, notice the blank space where the image was previously
positioned. That space exists because when an element is relatively
positioned, it's shifted from its normal place, but the space
it would have occupied doesn't disappear. Consider the results
of the following styles, which are depicted in <a href="ch09_02.htm">Figure 9-16</a>:
</p>

<blockquote><pre class="code">EM {position: relative; top: 8em; color: gray;}</pre></blockquote>

<a name="css-CHP-9-FIG-16" /><div class="figure"><img height="221" alt="Figure 9-16" src="figs/css.0916.gif" width="456" /></div><h4 class="objtitle">Figure 9-16. A relatively positioned EM element</h4>

<p>As you can see, the paragraph has some blank space in it.
That's where the <tt class="literal">EM</tt> element would have been,
and the layout of the <tt class="literal">EM</tt> element in its new
position exactly mirrors the space it left behind.
</p>

<p>This works because the containing block of a relatively positioned
element is the space that it would have occupied had its
<tt class="literal">position</tt> been <tt class="literal">static</tt>. This is
an important thing to note, since one might expect that the
containing block was defined by the parent element. Instead, the
relatively positioned element sets its own containing block, and then
offsets itself relative to that context.
</p>

<p>Of course, it's also possible that you can shift a relatively
positioned element to overlap other content. For example, the
following styles and markup will get you <a href="ch09_02.htm">Figure 9-17</a>:
</p>

<blockquote><pre class="code">EM {position: relative; bottom: -0.5em; color: gray;}
B {position: relative; bottom: 0.5em; color: gray;}

&lt;P&gt;This is a paragraph which should be visible. Lorem ipsum, dolor sit amet, 
consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut 
laoreet dolore magna aliquam erat volutpat.
&lt;EM&gt;Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper 
suscipit lobortis nisl ut aliquip ex ea commodo consequat.&lt;/EM&gt;
Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse 
molestie consequat, vel illum dolore eu feugiat nulla &lt;B&gt;facilisis at vero 
eros et accumsan et iusto odio dignissim qui blandit praesent luptatum&lt;/B&gt; 
zzril delenit augue duis dolore te feugait nulla facilisi.&lt;/P&gt;</pre></blockquote>

<a name="css-CHP-9-FIG-17" /><div class="figure"><img height="159" alt="Figure 9-17" src="figs/css.0917.gif" width="456" /></div><h4 class="objtitle">Figure 9-17. Two relatively positioned elements</h4>

<p>When you relatively position an element, it immediately establishes a
new containing block for any of its children. This containing block
corresponds to the place where the element has been positioned. Thus,
you can position an element relative to its parent element, which has
itself been relatively positioned. <a href="ch09_02.htm">Figure 9-18</a> shows
us the results of the following styles and markup:
</p>

<blockquote><pre class="code">P {color: gray;}
EM {position: relative; bottom: -0.75em; color: black;}
B {position: relative; bottom: 0.5em; left: 1em; color: black;}

&lt;P&gt;This is a paragraph which should be visible. Lorem ipsum, dolor sit amet, 
consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut 
laoreet dolore magna aliquam erat volutpat.
&lt;EM&gt;Ut wisi enim ad minim veniam, &lt;B&gt;quis nostrud exerci tation ullamcorper
&lt;/B&gt; suscipit lobortis nisl ut aliquip ex ea commodo consequat.&lt;/EM&gt;
Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse 
molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros 
et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril 
delenit augue duis dolore te feugait nulla facilisi.&lt;/P&gt;</pre></blockquote>

<a name="css-CHP-9-FIG-18" /><div class="figure"><img height="99" alt="Figure 9-18" src="figs/css.0918.gif" width="481" /></div><h4 class="objtitle">Figure 9-18. Nested relative positioning</h4>

<p>The emphasized text has been shifted down 0.75 em from where it would
have ordinarily appeared, which is to be expected. The boldface text
has been moved 1 em to the right and upward half an em, but it is
moved relative to the position of the emphasized text <em class="emphasis">after</em>
 it has been moved.
</p>

<p>There is one interesting wrinkle to relative positioning: what
happens when a relatively positioned element is overconstrained? For
example:
</p>

<blockquote><pre class="code">EM {position: relative; top: 1em; bottom: 2em;}</pre></blockquote>

<p>Here we have values that call for two very different behaviors. If
you only consider <tt class="literal">top:</tt> <tt class="literal">1em</tt> ,
then the element should be shifted downward an em, but
<tt class="literal">bottom:</tt> <tt class="literal">2em</tt> clearly calls for
the element to be shifted upward by 2 ems.
</p>

<p>The original CSS2 specification does not say what should happen in
this case. As of this writing, there is a published errata that
states that when it comes to overconstrained relative positioning,
one value would be reset to be the negative of the other. Thus,
<tt class="literal">bottom</tt> would always equal <tt class="literal">-top</tt>
and <tt class="literal">right</tt> would equal <tt class="literal">-left</tt>.
This means that the previous example would be treated as though it
had been this:
</p>

<blockquote><pre class="code">EM {position: relative; top: 1em; bottom: -1em;}</pre></blockquote>

<p>Thus the element will be shifted downward by 1 em. This proposed
change also makes allowances for writing directions. It states that
in relative positioning, <tt class="literal">right</tt> always equals
<tt class="literal">-left</tt> in left-to-right languages, but in
right-to-left languages, this is reversed: <tt class="literal">left</tt>
would always equal <tt class="literal">-right</tt>.<a name="INDEX-1085" /> <a name="INDEX-1086" />
</p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch09_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">9. Positioning</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">9.3. Absolute Positioning</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>