<html><head><title>CSS2: A Look Ahead (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_06.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch10_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />



<h1 class="chapter">Chapter 10. CSS2: A Look Ahead</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch10_01.htm">Changes from CSS1</a><br />
<a href="ch10_02.htm">CSS2 Selectors</a><br />
<a href="ch10_03.htm">Fonts and Text</a><br />
<a href="ch10_04.htm">Generated Content</a><br />
<a href="ch10_05.htm">Adapting to the Environment</a><br />
<a href="ch10_06.htm">Borders</a><br />
<a href="ch10_07.htm">Tables</a><br />
<a href="ch10_08.htm">Media Types and @-rules</a><br />
<a href="ch10_09.htm">Summary</a><br /></p></div>

<p><a name="INDEX-1108" />In the
course of writing this book, I vacillated back and forth over how to
handle CSS2. It's a full W3C Recommendation, of course, but so
little of it has actually been implemented correctly that it seemed
almost a waste of time -- both mine and yours -- to talk about
CSS2 in detail. After all, not only would I have to fake all of the
screenshots (not to mention guess at correct behavior in a few
cases), but you wouldn't be able to try out anything I
discussed, since browsers wouldn't recognize your CSS2 rules.
</p>

<p>On the other hand, CSS2 can hardly be ignored. So in the end, I
settled on writing a chapter that talks about CSS2 in brief, abstract
detail -- in other words, this chapter. The next edition of this
book will almost certainly be driven by the need to add detailed
information concerning CSS2, and will very likely be undertaken once
the dust settles and browsers start to correctly implement major
portions of CSS2.
</p>

<p>Also realize that, of the figures shown in this chapter, the vast
majority are -- well -- faked. There was no other way to
produce most of these examples. The point of telling you this is to
spare you the frustration of trying to figure out how they were
produced. So, with that in mind, here's a brief taste of what
CSS2 can offer.
</p>

<div class="sect1"><a name="css-CHP-10-SECT-1" />
<h2 class="sect1">10.1. Changes from CSS1</h2>

<p><a name="INDEX-1109" />Only a few CSS1 properties have
gained new values. These were mostly concerned with addressing issues
that did not exist, or were not considered, when CSS1 was written.
The one standout is a new value called
<tt class="literal">inherit</tt><a name="INDEX-1110" />, which represents a huge change to
everything -- but more on that in a moment.
</p>

<a name="css-CHP-10-SECT-1.1" /><div class="sect2">
<h3 class="sect2">10.1.1. Additions and Changes to the display Property</h3>

<p><a name="INDEX-1111" />The property <tt class="literal">display</tt>
has received quite a few new values in CSS2. Now, in addition to
<tt class="literal">block</tt>, <tt class="literal">inline</tt>,
<tt class="literal">line-item</tt>, and <tt class="literal">none</tt>, we have
<tt class="literal">run-in</tt>, <tt class="literal">compact</tt>, and
<tt class="literal">marker</tt> (which we'll get to later), as well
as a number of values specific to tables (which we'll also
cover later on).
</p>

<p>The <tt class="literal">display</tt> value <tt class="literal">compact</tt> has
an effect similar to <tt class="literal">&lt;DL</tt>
<tt class="literal">compact&gt;</tt> (assuming your browser supports that
bit of HTML). Basically, if an element is set to
<tt class="literal">display:</tt> <tt class="literal">compact</tt>, then it will
appear in the margin of the next element, assuming there is enough
room for it. Otherwise, both elements will be treated as block-level
elements. Think of a "compacted" element as one that
floats, but only if there is room for it to be displayed without
altering the formatting of the following element, something like the
illustration in <a href="ch10_01.htm">Figure 10-1</a>.
</p>

<a name="css-CHP-10-FIG-1" /><div class="figure"><img alt="Figure 10-1" src="figs/css.1001.gif" /></div><h4 class="objtitle">Figure 10-1. Compact display of a definition list</h4>

<p>On the other hand, <tt class="literal">run-in</tt> has the effect of
turning a block-level element into an inline element at the beginning
of the following block-level element. Another way to think of it is
that a block-level element set to <tt class="literal">run-in</tt> will be
combined with the next block-level element so that the two together
form a single block-level element.
</p>

<p>Given this code:</p>

<blockquote><pre class="code">&lt;H3 STYLE="display: run-in;"&gt;A Heading.&lt;/H3&gt;
&lt;P&gt;This is a paragraph of text....&lt;/P&gt;</pre></blockquote>

<p>the result will look something like what's shown in <a href="ch10_01.htm">Figure 10-2</a>.
</p>

<a name="css-CHP-10-FIG-2" /><div class="figure"><img alt="Figure 10-2" src="figs/css.1002.gif" /></div><h4 class="objtitle">Figure 10-2. A run-in heading</h4>

<p>The <tt class="literal">display</tt> type <tt class="literal">run-in</tt> can be
applied to any block-level element, not just headings. However, this
rule should only work if the next element is block-level and is not
floating or positioned absolutely. So, for example, if you try to set
an inline anchor to <tt class="literal">run-in</tt>, it won't have
any effect.
</p>

<p>Another change for <tt class="literal">display</tt> is that its default
value is <tt class="literal">inline</tt>, not <tt class="literal">block</tt>, as
was defined in CSS1. The authors have termed the original default
value an error, so if you don't declare a value for
<tt class="literal">display</tt>, it is assumed to be
<tt class="literal">inline</tt>. Of course, your browser should have its
own built-in HTML styles, so don't worry about your paragraphs
suddenly running together!
</p>

</div>
<a name="css-CHP-10-SECT-1.2" /><div class="sect2">
<h3 class="sect2">10.1.2. More Inheritance</h3>

<p>Finally, there is one very important new feature of CSS2 that belongs
in this section: the value
<tt class="literal">inherit</tt><a name="INDEX-1112" />. If you were to ask the question,
"Okay, to which properties did <tt class="literal">inherit</tt> get
applied?" the answer would be, "Every last one of
them." There is not a single property in the whole of CSS that
does not accept a value of <tt class="literal">inherit</tt>.
</p>

<p><tt class="literal">inherit</tt> is used to explicitly declare that a given
computed value should be inherited from its parent. In other words,
if the <tt class="literal">font-size</tt> for <tt class="literal">BODY</tt> is
computed to be 14 points, then the declaration <tt class="literal">P</tt>
<tt class="literal">{font-size:</tt> <tt class="literal">inherit;}</tt> would set
paragraph text to 14 points in size, as long as the paragraphs are
children of the <tt class="literal">BODY</tt> element. Similarly, you could
make sure that hyperlinks always have the same color as the text that
surrounds them by using the simple declaration:
</p>

<blockquote><pre class="code">A:link, A:visited {color: inherit;}</pre></blockquote>

<p>The power of this change should not be underestimated. In effect, you
are able to override the specificity mechanism that ordinarily takes
effect. Usually, hyperlinks are (for instance) blue unless you
explicitly declare them to be otherwise -- and if you want
differently colored links in different areas of the same page,
you'd have to construct a different rule for each color.
</p>

<p>Now, thanks to <tt class="literal">inherit</tt>, if it's okay to make
them the same color as surrounding text, you just need one rule that
will cover all circumstances. Note that I'm not saying this is
a good idea, or the only thing for which <tt class="literal">inherit</tt>
can be used. It's simply the most obvious
possibility.<a name="INDEX-1113" />
</p>

</div>
</div>


















<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_06.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch10_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">9.6. Summary</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">10.2. CSS2 Selectors</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
