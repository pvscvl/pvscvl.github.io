<html><head><title>Structure (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_04.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch02_06.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">2.5. Structure</h2>

<p><a name="INDEX-238" />
<a name="INDEX-239" />
<a name="INDEX-240" />As
I've mentioned before, CSS is powerful because of the way in
which it uses the structure of HTML documents to determine which
styles should be applied in what ways. That's really only a
part of the story, though, since it implies that the only way CSS
uses document structure is to determine which rules apply to which
elements.
</p>

<p>The truth is that structure plays a much bigger role in the way
styles are applied to a document. In order to understand this role,
we need to understand how documents are structured. Take the
"tree" view in <a href="ch02_05.htm">Figure 2-18</a> of the simple
HTML document listed here:
</p>

<blockquote><pre class="code">&lt;HTML&gt;
&lt;HEAD&gt;
&lt;BASE HREF="http://www.meerkat.web/"&gt;
&lt;TITLE&gt;Meerkat Central&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;H1&gt;Meerkat &lt;EM&gt;Central&lt;/EM&gt;&lt;/H1&gt;
&lt;P&gt;
Welcome to Meerkat &lt;EM&gt;Central&lt;/EM&gt;, the &lt;STRONG&gt;best meerkat web site 
on &lt;A HREF="inet.html"&gt;the &lt;EM&gt;entire&lt;/EM&gt; Internet&lt;/A&gt;&lt;/STRONG&gt;!&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;We offer:
&lt;UL&gt;
&lt;LI&gt;&lt;STRONG&gt;Detailed information&lt;/STRONG&gt; on how to adopt a meerkat&lt;/LI&gt;
&lt;LI&gt;Tips for living with a meerkat&lt;/LI&gt;
&lt;LI&gt;&lt;EM&gt;Fun&lt;/EM&gt; things to do with a meerkat, including:
&lt;UL&gt;
&lt;LI&gt;Playing fetch&lt;/LI&gt;
&lt;LI&gt;Digging for food&lt;/LI&gt;
&lt;LI&gt;Hide and seek&lt;/LI&gt;
&lt;/UL&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;LI&gt;...and so much more!&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;
Questions? &lt;A HREF="mail to:suricate@meerkat.web"&gt;Contact us!&lt;/A&gt;
&lt;/P&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</pre></blockquote>

<p>Much of the power of CSS is based on the <em class="filename">parent-child
relationship</em> of elements. HTML documents, and indeed most
structured documents of any kind, are based on a hierarchy of
elements, which is visible in the "tree" view of the
document in <a href="ch02_05.htm">Figure 2-18</a>. In this hierarchy, each
element fits somewhere into the overall structure of the document,
and every element is either the
<em class="filename">parent</em><a name="INDEX-241" />
or
<em class="filename">child</em><a name="INDEX-242" />
of another element, and often both.
</p>

<a name="css-CHP-2-FIG-18" /><div class="figure"><img height="257" alt="Figure 2-18" src="figs/css.0218.gif" width="407" /></div><h4 class="objtitle">Figure 2-18. The "tree view" of a simple HTML document</h4>

<p>An element is said to be the <em class="filename">parent</em> of another
element if it encloses the other element. For example, in <a href="ch02_05.htm">Figure 2-18</a>, the <tt class="literal">P</tt> element is parent to
an <tt class="literal">EM</tt> and a <tt class="literal">STRONG</tt> element,
while the <tt class="literal">STRONG</tt> is parent to an anchor element
which is itself parent to another <tt class="literal">EM</tt> element.
Conversely, an element is the <em class="filename">child</em> of another
element if it is enclosed by the other element. Thus, the anchor
element in <a href="ch02_05.htm">Figure 2-18</a> is a child of the
<tt class="literal">STRONG</tt> element, which is in turn child to the
paragraph, and so on.
</p>

<p>The terms <em class="filename">parent</em> and <em class="filename">child</em>
are often generalized to the terms
<em class="filename">ancestor</em><a name="INDEX-243" />
and
<em class="filename">descendant</em><a name="INDEX-244" />.
There is a difference: in the tree view, if an element is exactly one
level above another, then they have a parent-child relationship. (Of
course, the child is also a descendant, and the parent is an
ancestor.) If, however, the path from one element to another moves
through two or more levels, then the elements have an
ancestor-descendant relationship. In <a href="ch02_05.htm">Figure 2-18</a>,
the first <tt class="literal">UL</tt> element is parent to two
<tt class="literal">LI</tt> elements and a <tt class="literal">UL</tt>, but the
first <tt class="literal">UL</tt> is also the ancestor of every element
within its child <tt class="literal">UL</tt>, all the way down to the most
deeply nested <tt class="literal">LI</tt> elements.
</p>

<p>If we continue to examine <a href="ch02_05.htm">Figure 2-18</a>, we see that,
for example, the anchor is a child of <tt class="literal">STRONG</tt>, but
also a descendant of the paragraph element as well as of the
<tt class="literal">BODY</tt> and <tt class="literal">HTML</tt> elements. The
<tt class="literal">BODY</tt> element is an ancestor of everything the
browser will display, of course, and the <tt class="literal">HTML</tt>
element is ancestor to the entire document. For this reason, the
<tt class="literal">HTML</tt> element is also sometimes called the
<em class="filename">root element</em><a name="INDEX-245" />.
</p>

<a name="css-CHP-2-SECT-5.1" /><div class="sect2">
<h3 class="sect2">2.5.1. Contextual Selectors</h3>

<p><a name="INDEX-246" />The first benefit we derive from this
model is the ability to define <em class="filename">contextual
selectors</em>. This is simply the act of creating rules that
operate in certain structural circumstances but not others. As an
example, let's say you want to set <tt class="literal">EM</tt> text
to be gray, but only if it's found within an
<tt class="literal">H1</tt> element. You could put a
<tt class="literal">CLASS</tt> attribute in every <tt class="literal">EM</tt>
element within an <tt class="literal">H1</tt>, but that's almost as
bad as using the <tt class="literal">FONT</tt> tag. It would obviously be
far better to declare rules that only match <tt class="literal">EM</tt>
elements which are found inside <tt class="literal">H1</tt> elements.
</p>

<p>To do so, you would write the following:</p>

<blockquote><pre class="code">H1 EM {color: gray;}</pre></blockquote>

<p>This rule will make <tt class="literal">gray</tt> any text in an
<tt class="literal">EM</tt> element which is the descendant of an
<tt class="literal">H1</tt> element. Other <tt class="literal">EM</tt> text, such
as that found in a paragraph or a block quote, will not be selected
by this rule, as <a href="ch02_05.htm">Figure 2-19</a> makes clear.
</p>

<a name="css-CHP-2-FIG-19" /><div class="figure"><img height="48" alt="Figure 2-19" src="figs/css.0219.gif" width="231" /></div><h4 class="objtitle">Figure 2-19. Selecting an element based on its context</h4>

<p>In a contextual selector, the selector side of a rule is composed of
two or more space-separated selectors. Each space can be translated
as "found within," "which is part of," or
"that is a descendant of," but only if you read the
selector <em class="emphasis">backwards</em>. Thus, <tt class="literal">H1</tt>
<tt class="literal">EM</tt> can be translated as, "Any
<tt class="literal">EM</tt> element that is a descendant of an
<tt class="literal">H1</tt> element." (If you insist on reading the
selector forwards, then you might phrase it something like,
"Any <tt class="literal">H1</tt> that contains an
<tt class="literal">EM</tt> will have the following applied to the
<tt class="literal">EM</tt>.")
</p>

<p>You aren't limited to two selectors, of course. For example:</p>

<blockquote><pre class="code">UL OL UL EM {color: gray;}</pre></blockquote>

<p>In this case, as <a href="ch02_05.htm">Figure 2-20</a> shows, any emphasized
text that is part of an unordered list that is part of an ordered
list that is part of an unordered list will be gray. This is
obviously a very specific selection criterion.
</p>

<a name="css-CHP-2-FIG-20" /><div class="figure"><img height="50" alt="Figure 2-20" src="figs/css.0220.gif" width="274" /></div><h4 class="objtitle">Figure 2-20. A very specific contextual selector</h4>

<p>Contextual selectors can be very, very powerful. They make possible
what could never be done in HTML -- at least not without oodles of
<tt class="literal">FONT</tt> tags. Let's consider a common example.
Assume you have a document that has a sidebar and a main area. The
sidebar has a blue background, and the main area has a white
background. You have a list of links in the sidebar, but you also
have links which appear in the main text. You can't set all
links to be blue, because they'd be impossible to read in the
sidebar (blue text on a blue background).
</p>

<p>The solution? Contextual selectors. In this case, you set the table
cell that contains your sidebar to have a class of
<tt class="literal">sidebar</tt>, and the main area to have a class of
<tt class="literal">main-page</tt>. Then you write styles something like
this:
</p>

<blockquote><pre class="code">TD.sidebar {background: blue;}
TD.main-page {background: white;}
TD.sidebar A:link {color: white;}
TD.main-page A:link {color: blue;}</pre></blockquote>

<p><a href="ch02_05.htm">Figure 2-21</a> shows the result: white hyperlinks on a
blue background in the sidebar, with blue links on a white background
in the main area of the page.
</p>

<a name="css-CHP-2-FIG-21" /><div class="figure"><img height="257" alt="Figure 2-21" src="figs/css.0221.gif" width="392" /></div><h4 class="objtitle">Figure 2-21. Using contextual selectors to apply different styles to the same type of element</h4>

<p>Here's another example: let's say that we want gray to be
used as the text color of any <tt class="literal">B</tt> (boldface) element
that is part of a <tt class="literal">BLOCKQUOTE</tt>, and also for any
bold text that is found in a normal paragraph:
</p>

<blockquote><pre class="code">BLOCKQUOTE B, P B {color: gray;}</pre></blockquote>

<p>The result, shown in <a href="ch02_05.htm">Figure 2-22</a>, is that while the
boldface text in paragraphs and block quotes is gray, boldface text
in lists is not colored gray.
</p>

<a name="css-CHP-2-FIG-22" /><div class="figure"><img height="146" alt="Figure 2-22" src="figs/css.0222.gif" width="402" /></div><h4 class="objtitle">Figure 2-22. Context and Style</h4>

<a name="ch02-18-fm2xml" /><blockquote><h4>TIP</h4>
<p>Thankfully, contextual selectors are one of the things that almost
everyone got right the first time they tried -- although there are
some minor random quirks to be found in Navigator 4.x that defy
analysis. In general, though, like grouping, contextual selectors are
as safe and stable an operation as you're going to
find.<a name="INDEX-247" />
</p>
</blockquote>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_04.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch02_06.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">2.4. Pseudo-Classes and Pseudo-Elements</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">2.6. Inheritance</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
