<html><head><title>Tips &amp; Tricks (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="appa_01.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">11.2. Tips &amp; Tricks</h2>

<p><a name="INDEX-1277" />
<a name="INDEX-1278" />Here we present a handful of quick tips
and workarounds which might save you a lot of time and hassles. Some
are related to ways of making buggy browsers behave, while others
describe ways to write completely correct CSS and HTML and still
mangle the document display, simply by not thinking about the
consequences of one's actions.
</p>

<a name="css-CHP-11-SECT-2.1" /><div class="sect2">
<h3 class="sect2">11.2.1. Making Styles Work</h3>

<p><a name="INDEX-1279" />
<a name="INDEX-1280" />
<a name="INDEX-1281" />This is an easy one. If you want
Navigator 4 to use CSS at all, you have to go to the preferences
dialog and check the boxes for both style sheets and JavaScript. If
JavaScript is disabled, Navigator will not apply styles. Why? In the
early days of style sheets, there were a number of proposals for
styling. One of these was <a name="INDEX-1282" />JavaScript Style Sheets ( JSSS), an
interesting hybrid of early CSS and JavaScript. It probably
won't surprise you to learn that JSSS was promoted by Netscape.
Although JSSS was never adopted, Navigator 4's rendering engine
uses it, and so CSS doesn't work without JavaScript.
</p>

</div>
<a name="css-CHP-11-SECT-2.2" /><div class="sect2">
<h3 class="sect2">11.2.2. Hiding Styles with @import</h3>

<p><a name="INDEX-1283" />
<a name="INDEX-1284" /> <a name="INDEX-1285" />The
fact that Navigator 4.x understands <tt class="literal">LINK</tt> but
doesn't recognize <tt class="literal">@import</tt> statements can be
turned to your advantage. Since any styles you place in an external
style sheet must be brought in via either <tt class="literal">LINK</tt> or
<tt class="literal">@import</tt>, you can group all of the styles that will
cause Navigator problems and put them into a style sheet that you
then import. Since Navigator will refuse to import this style sheet,
it won't have to deal with styles it can't deal with.
This simple trick can save you a lot of headaches, but there is one
drawback: a very few early versions of Navigator 4.x could crash when
trying to process an <tt class="literal">@import</tt> statement. This was
quickly fixed, and very few of these versions are still in use.
</p>

</div>
<a name="css-CHP-11-SECT-2.3" /><div class="sect2">
<h3 class="sect2">11.2.3. Fighting Margin Problems with @import</h3>

<p>If you want to use <tt class="literal">margin</tt> rules which you know
won't work in <a name="INDEX-1286" />Navigator, use the previous trick and the
cascade to your advantage. Let's say you want a document where
a paragraph has no vertical space between its top and the bottom of a
preceding <tt class="literal">H1</tt> element, as illustrated in <a href="ch11_02.htm">Figure 11-19</a>.
</p>

<a name="css-CHP-11-FIG-19" /><div class="figure"><img height="88" alt="Figure 11-19" src="figs/css.1119.gif" width="224" /></div><h4 class="objtitle">Figure 11-19. Closing up the usual gap </h4>

<p>In <a name="INDEX-1287" />Explorer, this can be done with
these rules:
</p>

<blockquote><pre class="code">H1 {margin-bottom: 0;}
P {margin-top: 0;}</pre></blockquote>

<p>For Navigator, though, you have to set the top margin of the
paragraph to be <tt class="literal">-1em</tt> to get the same effect, which
will hopelessly mangle Explorer's display of the document. How
to resolve the conflict?
</p>

<p>First, place all your Navigator-unfriendly rules into an external
style sheet and hook that up using an <tt class="literal">@import</tt>
statement. Then place all of your Navigator-friendly margin rules
into another external style sheet and <tt class="literal">LINK</tt> it in.
( Just make sure your <tt class="literal">LINK</tt> comes before the
<tt class="literal">@import</tt> statement.) You'll end up with
something like this:
</p>

<blockquote><pre class="code">/* file 'link-styles.css' */        /* file 'import-styles.css' */
H1 {margin-bottom: 0;}              H1 {margin-bottom: 0;}
P {margin-top: -1em;}               P {margin-top: 0;}

&lt;LINK REL="stylesheet" TYPE="text/css" HREF="link-styles.css" 
   TITLE="Linked"&gt;
&lt;STYLE TYPE="text/css"&gt;
@import url(import-styles.css);
&lt;/STYLE&gt;</pre></blockquote>

<p>Because Explorer will read in both style sheets, it will use the
cascade to determine which rules should actually be applied. If
you've ordered things correctly, and the imported style sheet
comes after the linked style sheet, its rules will win out over the
rules in the linked style sheet.
</p>

<p>Therefore, Explorer will use the styles from
<tt class="literal">import-styles.css</tt>. Navigator, on the other hand,
won't even read the styles that are supposed to be imported, so
it will only have the styles from <tt class="literal">link-styles.css</tt>
available and will therefore use them.
</p>

</div>
<a name="css-CHP-11-SECT-2.4" /><div class="sect2">
<h3 class="sect2">11.2.4. Styling Common Elements</h3>

<p>If you have documents in which there is a certain block of
<a name="INDEX-1288" />
<a name="INDEX-1289" />
<a name="INDEX-1290" />common markup -- say, a table that
holds links to the main pages of your site -- it's easy to
style them without having to change the HTML markup on each page.
</p>

<p>Let's assume we have a table of links like this one:</p>

<blockquote><pre class="code">&lt;TABLE BORDER CELLPADDING="4"&gt;
&lt;TR&gt;
&lt;TD&gt;&lt;A HREF="home.html"&gt;Home Page&lt;/A&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;A HREF="read.html"&gt;My Writing&lt;/A&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;A HREF="fun.html"&gt;Fun Stuff!&lt;/A&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;A HREF="links.html"&gt;Other Links&lt;/A&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;A HREF="write.html"&gt;Contact Me&lt;/A&gt;&lt;/TD&gt;
&lt;/TR&gt;
&lt;/TABLE&gt;</pre></blockquote>

<p>However, on each page, we want the cell containing the current page
to be highlighted in some fashion. This is really easy. All we have
to do is add a class to each table cell, like this:
</p>

<blockquote><pre class="code">&lt;TABLE border cellpadding="4"&gt;
&lt;TR&gt;
&lt;TD CLASS="home"&gt;&lt;A HREF="home.html"&gt;Home Page&lt;/A&gt;&lt;/TD&gt;
&lt;TD CLASS="read"&gt;&lt;A HREF="read.html"&gt;My Writing&lt;/A&gt;&lt;/TD&gt;
&lt;TD CLASS="fun"&gt;&lt;A HREF="fun.html"&gt;Fun Stuff!&lt;/A&gt;&lt;/TD&gt;
&lt;TD CLASS="links"&gt;&lt;A HREF="links.html"&gt;Other Links&lt;/A&gt;&lt;/TD&gt;
&lt;TD CLASS="write"&gt;&lt;A HREF="write.html"&gt;Contact Me&lt;/A&gt;&lt;/TD&gt;
&lt;/TR&gt;
&lt;/TABLE&gt;</pre></blockquote>

<p>Then, on each page, we simply write an appropriate style. If the
highlighted link should have a yellow background, then on the
"Other Links" page, we would add this to the style sheet,
leading to the result depicted in <a href="ch11_02.htm">Figure 11-20</a>:
</p>

<blockquote><pre class="code">TD.links {background: yellow;}</pre></blockquote>

<a name="css-CHP-11-FIG-20" /><div class="figure"><img height="28" alt="Figure 11-20" src="figs/css.1120.gif" width="335" /></div><h4 class="objtitle">Figure 11-20. Highlighting the current page </h4>

<p>Similarly, on the site's home page, we would find this style at
the top of the page:
</p>

<blockquote><pre class="code">TD.home {background: yellow;}</pre></blockquote>

<p>This is a fast, easy way to make a "toolbar" a little
more active, without the need for fitting <tt class="literal">BGCOLOR</tt>
attributes on to specific table cells.
</p>

<a name="ch11-12-fm2xml" /><blockquote><h4>TIP</h4>
<p>By taking this approach, it's possible to take the toolbar and
split it into a separate file, and then include that file on every
page by means of a <em class="filename">server-side include</em>.
<a name="INDEX-1291" />
<a name="INDEX-1292" />Includes
are described in much greater detail in <em class="emphasis">Web Design in a
Nutshell,</em> by Jennifer Niederst, and <em class="emphasis">Apache: The
Definitive Guide</em>, by Ben Laurie and Peter Laurie, both
published by O'Reilly and Associates.
</p>
</blockquote>

</div>
<a name="css-CHP-11-SECT-2.5" /><div class="sect2">
<h3 class="sect2">11.2.5. Getting Full Content Backgrounds in Navigator</h3>

<p><a name="INDEX-1293" />
<a name="INDEX-1294" />We covered
this in <a href="ch06_01.htm">Chapter 6, "Colors and Backgrounds"</a>, but it bears some repetition.
We assume you want people using Navigator 4.x to see full background
colors in text elements, not just behind the text. If you've
applied a background color to a text element, add the following
declaration: <tt class="literal">border:</tt> <tt class="literal">0.1px</tt>
<tt class="literal">solid</tt> <tt class="literal">none</tt>. This will have no
visual effect, but in the course of telling Navigator to draw a
0.1-pixel, solid, nonexistent border, the background color will
usually fill the entire content area and the padding. If you set a
visible border, then there will still be a gap between the padding
and the border, but otherwise you should get roughly the correct
effect.
</p>

<p>Nonetheless, if you leave out this statement, every version of
Navigator 4.x will not extend the background color throughout the
entire content box but will only place it behind the element's
text.
</p>

</div>
<a name="css-CHP-11-SECT-2.6" /><div class="sect2">
<h3 class="sect2">11.2.6. The Incredible Shrinking Text!</h3>

<p><a name="INDEX-1295" />
<a name="INDEX-1296" />
<a name="INDEX-1297" />Here's
a fun thing to do: make your document text so small that it
can't be read by the human eye. You can do this using
completely correct CSS and a bug-free browser. Here's the
easiest way to see it:
</p>

<blockquote><pre class="code">UL {font-size: 75%;}</pre></blockquote>

<p>This seems simple enough: the text in unordered lists should be 75%
normal size. Ah, but what happens if you have unordered lists nested
inside unordered lists? You get the results shown in <a href="ch11_02.htm">Figure 11-21</a>, that's what.
</p>

<a name="css-CHP-11-FIG-21" /><div class="figure"><img height="152" alt="Figure 11-21" src="figs/css.1121.gif" width="348" /></div><h4 class="objtitle">Figure 11-21. Help me </h4>

<p>Wow! What happened? Simply put, each nested list cuts the font size
by a quarter. Let's assume the document's base
<tt class="literal">font-size</tt> is <tt class="literal">12pt</tt>. Therefore,
at the top level, the font's size will be three-quarters of
that, or <tt class="literal">9pt</tt>. All well and good, except the next
level down will see a reduction to <tt class="literal">6pt</tt>, and the
next level to <tt class="literal">4pt</tt>, and so on. Once the text goes
below <tt class="literal">7pt</tt>, it will become unreadably small on most
monitors (and will be tough to read even on most printouts).
</p>

<p>You're probably thinking to yourself, "Ha! How dumb do
you have to be to shrink text in lists like that?" True,
it's easy to spot this with lists. However, think about how
most of your pages are structured (with nested tables) and then
consider this rule:
</p>

<blockquote><pre class="code">BODY {font-size: 12pt;}
TD {font-size: 80%;}</pre></blockquote>

<p>All it takes is three levels of nesting in your tables, and you end
up with 6-point text (12 x 0.8 x 0.8 x 0.8 =
6.144). Many complicated pages have at least three levels of nesting,
and sometimes even more.
</p>

</div>
<a name="css-CHP-11-SECT-2.7" /><div class="sect2">
<h3 class="sect2">11.2.7. Preserving Boldness</h3>

<p><a name="INDEX-1298" />
<a name="INDEX-1299" />
<a name="INDEX-1300" />Here's
a similar trick that helps work around a bug in most versions of
Navigator 4. In situations where <tt class="literal">font-weight:</tt>
<tt class="literal">normal</tt> has been set on an element, this value will
be inherited by all the descendants of the element. That's as
it should be, of course, but Navigator takes it one step too far.
Given the following:
</p>

<blockquote><pre class="code">&lt;P STYLE="font-weight: normal;"&gt;This is a paragraph which contains a
&lt;B&gt;boldface element&lt;/B&gt;, but Navigator 4 won't make the text bold.&lt;/P&gt;</pre></blockquote>

<p>That's right: all of the text in the example paragraph will
have a normal font weight. For some reason, Navigator 4 doesn't
know that it should assign a <tt class="literal">font-weight</tt> of
<tt class="literal">bold</tt> (or <tt class="literal">bolder</tt>) to
<tt class="literal">B</tt> elements. Similar problems can arise when using
<tt class="literal">STRONG</tt>, or any other element that would ordinarily
call for boldface text.
</p>

<p>The solution is simple enough. Just make sure that you set an
explicit <tt class="literal">font-weight</tt> for these elements. A good
rule to include in your style sheet would be:
</p>

<blockquote><pre class="code">STRONG, B {font-weight: bolder;}</pre></blockquote>

<p>This should overcome any reluctance on Navigator 4's part.</p>

</div>
<a name="css-CHP-11-SECT-2.8" /><div class="sect2">
<h3 class="sect2">11.2.8. Floating Text Elements in Internet Explorer</h3>

<p><a name="INDEX-1301" /> <a name="INDEX-1302" />In Internet Explorer 4.x for Windows, in
order to get <tt class="literal">float</tt> to work with text elements, you
need to explicitly declare a <tt class="literal">width</tt> as well, like
so: <tt class="literal">width:</tt> <tt class="literal">10em</tt> . To be honest,
I'm not sure why this should permit floating where it
wouldn't otherwise happen. It does make some sense, given the
usual desire for declaring a <tt class="literal">width</tt> on floated text
elements in any case, but the specification does not
<em class="emphasis">require</em> that a <tt class="literal">width</tt> be
declared in order to make a text element float successfully. Internet
Explorer 4.x for Windows does.
</p>

<p>Also, you must have the final version of Explorer 4.x for this to
work -- so if you're still using a preview release,
you'll need to upgrade it, which is probably a good idea
anyway. (Thanks to Howard Marvel for discovering and sharing this
trick.)
</p>

</div>
<a name="css-CHP-11-SECT-2.9" /><div class="sect2">
<h3 class="sect2">11.2.9. Drop Caps With and Without :first-letter</h3>

<p><a name="INDEX-1303" />Drop caps are a
very common, and much-requested, typographical effect. A typical drop
cap looks like the illustration in <a href="ch11_02.htm">Figure 11-22</a>.
</p>

<a name="css-CHP-11-FIG-22" /><div class="figure"><img height="67" alt="Figure 11-22" src="figs/css.1122.gif" width="318" /></div><h4 class="objtitle">Figure 11-22. A drop cap </h4>

<p>There's an easy way to do this, and that is of course to use
the <tt class="literal">:first-letter</tt> pseudo-element. The style would
look something like this:
</p>

<blockquote><pre class="code">P.intro:first-letter {font-size: 300%; font-weight: bold; float: left; 
  width: 1em;}</pre></blockquote>

<p>This will result in approximately what is seen in <a href="ch11_02.htm">Figure 11-22</a>.
</p>

<p>However, as you probably know, older browsers don't support the
<tt class="literal">:first-letter</tt> pseudo-element. In many of
these -- Internet Explorer 3.x and Navigator 4.x, for
example -- there is no alternative. In Internet Explorer 4.x and
5.0, however, you can use a <tt class="literal">SPAN</tt> element to fake
your way around the lack of support for
<tt class="literal">:first-letter</tt>. Here's how it works:
</p>

<blockquote><pre class="code">SPAN.dropcap {font-size: 300%; font-weight: bold; float: left; 
  width: 0.75em;}

&lt;P&gt;&lt;SPAN CLASS="dropcap"&gt;T&lt;/SPAN&gt;his is a paragraph with...&lt;/P&gt;</pre></blockquote>

<p>Since this is very similar to the fictional tag sequence used to
describe the behavior of <tt class="literal">:first-letter</tt> anyway, it
works fairly well. It's less elegant, granted, but it does
work. We use a <tt class="literal">width</tt> of <tt class="literal">0.75em</tt>
because most letters are not as wide as they are tall, but of course
you may use other values; experiment to see what you like best.
</p>

</div>
<a name="css-CHP-11-SECT-2.10" /><div class="sect2">
<h3 class="sect2">11.2.10. Disappearing Styles</h3>

<p><a name="INDEX-1304" />
<a name="INDEX-1305" />
<a name="INDEX-1306" />Here's a rather obscure Navigator
bug which is utterly baffling when encountered. Under whatever
circumstances trigger the bug (frames seem to be a major cause),
resizing the browser window can cause all of the styles to go away,
leaving plain text in their wake.
</p>

<p>Reloading the page will get the styles back, but that's hardly
a satisfactory solution. Slightly better is the inclusion of a small
bit of JavaScript that will fix the problem for you. This widget
should cause any
<a name="INDEX-1307" />JavaScript-enabled version of Navigator
to reapply the styles after the window is resized -- and if
JavaScript is turned off, then CSS won't work at all, which is
another thing to remember when you try to figure out why styles
don't work.
</p>

<p>In the meantime, however, here's the script: </p>

<blockquote><pre class="code">&lt;SCRIPT LANGUAGE="JavaScript1.2"&gt;
&lt;!--
var agt = navigator.userAgent.toLowerCase(  ); 
var is_major = parseInt(navigator.appVersion); 
var is_nav = ((agt.indexOf('mozilla') != -1) &amp;&amp; 
  (agt.indexOf('spoofer') == -1) &amp;&amp; 
  (agt.indexOf('compatible') == -1)); 
var is_nav4 = (is_nav &amp;&amp; (is_major == 4));


if (is_nav4) {onresize = location.reload();}
//--&gt;
&lt;/SCRIPT&gt;</pre></blockquote>

<p>This should cause the document to be reloaded whenever the browser
window is resized in any version of Navigator 4.
</p>

<p>The script used for this trick was adopted from a technique presented
in the Netscape Developer's Edge article "Determining
Browser Type and Version with JavaScript" at (<a href="../../../../../../developer.netscape.com/docs/examples/javascript/browser_type.html">http://developer.netscape.com:80/docs/examples/javascript/browser_type.html</a>).
</p>

</div>
<a name="css-CHP-11-SECT-2.11" /><div class="sect2">
<h3 class="sect2">11.2.11. Serving CSS Up Correctly</h3>

<p><a name="INDEX-1308" /> <a name="INDEX-1309" />
<a name="INDEX-1310" />Finally, a problem related to, but not
exactly about, CSS. Some authors have reported trouble with getting
their web hosts to correctly serve up <a name="INDEX-1311" />external style sheets. Apparently, with
some web servers, the file extension <em class="filename">.css</em> is
mapped to the <a name="INDEX-1312" />MIME type
<tt class="literal">x-application/css</tt>, or "Continuous Slide
Show," instead of the MIME type <tt class="literal">text/css</tt>.
Even older servers may not have any mapping for
<em class="filename">.css</em>, and so will serve up the files as
<tt class="literal">text/plain</tt>.
</p>

<a name="ch11-20-fm2xml" /><blockquote><h4>TIP</h4>
<p>When it comes right down to it, the extension isn't actually
the important part. What matters is the MIME type the server uses
when sending a file. However, since the vast majority of web servers
use a file's extension to decide which MIME type to use when
sending the file, it obviously becomes important to have a friendly
server configuration.
</p>
</blockquote>

<p>If an external style sheet is sent using the wrong MIME type, the
style sheet gets mangled into something unusable. If you find that
you're having this problem, then you'll need to contact
your ISP and explain the problem. If they refuse to fix it, try
explaining to them that IANA (the Internet Assigned Numbers
Authority, which also approves MIME types) has approved
<em class="filename">.css</em> as the extension for the MIME type
<tt class="literal">text/css</tt>, and the slideshow mapping is not a
recognized IANA MIME type.
</p>

<p>If they still refuse to correct the problem, then you may be able to
fix it yourself with a directive file in your web space. If your web
server runs using an <a name="INDEX-1313" />NCSA-based web server like that sold by
Netscape, add the following line to a file called
<tt class="literal">.htaccess</tt> (that's all, nothing more) in the
top level of your web space:
</p>

<blockquote><pre class="code">AddType "text/css; charset=iso-8859-1" .css</pre></blockquote>

<p>If none of this works, and you really need (or even want) to use
external style sheets, you may have to consider switching<a name="INDEX-1314" /> <a name="INDEX-1315" /> ISPs.<a name="INDEX-1316" /> <a name="INDEX-1317" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="appa_01.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">11. CSS in Action</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">A. CSS Resources</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
