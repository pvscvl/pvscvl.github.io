<html><head><title>The Cascade (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_07.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch02_09.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">2.8. The Cascade</h2>

<p><a name="INDEX-262" />Through all this, we've skirted one
rather important issue: what happens when there are two rules of
equal specificity that apply to the same element? How does the
browser resolve the conflict?
</p>

<p>For example, let's say we have the following rules:</p>

<blockquote><pre class="code">H1 {color: red;}
H1 {color: blue;}</pre></blockquote>

<p>So which one wins? Both have a specificity of 1, so they have equal
weight and should both apply. That simply can't be the case,
though, because the element can't be both
<tt class="literal">red</tt> and <tt class="literal">blue</tt>. It has to be one
or the other. But which?
</p>

<p>This is where the name "Cascading Style Sheets" finally
makes some sense. CSS is based on a method of causing styles to
cascade together -- a method that is made possible by the rules of
inheritance and specificity, as it happens. The cascade <a name="INDEX-263" />rules are
simple enough:
</p>

<ol><li>
<p>Find all declarations that contain a selector that matches a given
element.
</p>
</li><li>
<p><a name="INDEX-264" />
<a name="INDEX-265" />
<a name="INDEX-266" />Sort by
explicit weight all declarations applying to given element. Those
rules marked <tt class="literal">!important</tt> are given higher weight
than those that are not. Also sort by origin all declarations
applying to a given element. There are three
<a name="INDEX-267" />origins: author,
reader, and user agent. Under normal circumstances, the
author's styles win out over the reader's styles.
<tt class="literal">!important</tt> author styles win out over important
reader styles in CSS1, but in CSS2, <tt class="literal">!important</tt>
reader styles are stronger than any other styles. Either author or
reader styles will override user agent styles.
</p>
</li><li>
<p>Sort by <a name="INDEX-268" />specificity all declarations applying to
a given element. Those elements with a higher specificity have more
weight than those with lower specificity.
</p>
</li><li>
<p>Sort by <a name="INDEX-269" />order
all declarations applying to a given element. The later a declaration
appears in the style sheet or document, the more weight it is given.
Declarations that appear in an imported style sheet are considered to
come before all declarations within the style sheet that imports
them, and declarations within <tt class="literal">STYLE</tt> attributes
come later than those in the document's embedded style sheet.
</p>
</li></ol>
<p>In order to be perfectly clear about how this all works, let's
consider an example that illustrates each of the four cascade steps.
The first one is simple enough: find all rules whose selectors match
a given element.
</p>

<p>Under the second step, if two rules apply to an element, and one is
marked <tt class="literal">!important</tt>, then the important rule wins
out. Thus:
</p>

<blockquote><pre class="code">P {color: gray !important;}

&lt;P STYLE="color: black;"&gt;Well, &lt;EM&gt;hello&lt;/EM&gt; there!&lt;/P&gt;</pre></blockquote>

<p>Despite the fact that there is a color assigned in the
<tt class="literal">STYLE</tt> attribute of the paragraph, the
<tt class="literal">!important</tt> rule wins out, and the paragraph is
gray, as shown in <a href="ch02_08.htm">Figure 2-28</a>. This gray is
inherited by the <tt class="literal">EM</tt> element as well.
</p>

<a name="css-CHP-2-FIG-28" /><div class="figure"><img height="14" alt="Figure 2-28" src="figs/css.0228.gif" width="107" /></div><h4 class="objtitle">Figure 2-28. Sorting styles by their importance</h4>

<p>Furthermore, the origin of a rule is considered. If an element is
matched by styles in both the author's style sheet and the
reader's style sheet, then the author's styles are used.
For example, assume that the following styles come from the indicated
origins:
</p>

<blockquote><pre class="code">P EM {color: black;}    /* author's style sheet */

P EM {color: yellow;}   /* reader's style sheet */</pre></blockquote>

<p>In this case, we have the result shown in <a href="ch02_08.htm">Figure 2-29</a>, where the emphasized text is black.
</p>

<a name="css-CHP-2-FIG-29" /><div class="figure"><img height="13" alt="Figure 2-29" src="figs/css.0229.gif" width="106" /></div><h4 class="objtitle">Figure 2-29. Sorting styles by origin</h4>

<p>As it happens, the browser's default styles -- which are
often influenced by its preferences -- are figured into this step.
The browser's default styles are the least influential of all.
Therefore, if an author-defined rule applies to anchors (e.g.,
declaring them to be <tt class="literal">white</tt>), then this rule
overrides the user agent's defaults. If readers wish to enforce
certain rules at all costs, then they must define them in a local
style sheet and declare them to be <tt class="literal">!important</tt>, so
that they will win out under step 1 of the cascade rules. In this
case, though, it will be a case of the reader's styles
overriding both the author's and browser's styles due to
their importance.
</p>

<p>According to the third step, if multiple rules apply to an element,
then they should be sorted by specificity, with the most specific
rule winning out. For example:
</p>

<blockquote><pre class="code">P#bright {color: silver;}
P EM {color: gray;}
P {color: black;}

&lt;P ID="bright"&gt;Well, &lt;EM&gt;hello&lt;/EM&gt; there!&lt;/P&gt;</pre></blockquote>

<a name="css-CHP-2-FIG-30" /><div class="figure"><img height="20" alt="Figure 2-30" src="figs/css.0230.gif" width="124" /></div><h4 class="objtitle">Figure 2-30. Sorting styles by specificity</h4>

<p>As we can see from <a href="ch02_08.htm">Figure 2-30</a>, the text of the
paragraph is silver, except for the <tt class="literal">EM</tt> text, which
is gray. Why? Because the specificity of <tt class="literal">P#bright</tt>
(101) overrode the specificity of <tt class="literal">P</tt> (1), even
though the latter rule comes later in the style sheet. However, the
<tt class="literal">EM</tt> text does not inherit the value
<tt class="literal">silver</tt>, because it has an explicit rule associated
with it, and the rule's specificity (2) overrides the inherited
value of <tt class="literal">silver</tt>.
</p>

<p>This is not a trivial point. For example, assume that a style sheet
has been written such that all text in a toolbar is to be white on
black:
</p>

<blockquote><pre class="code">#toolbar {color: white; background: black;}</pre></blockquote>

<p>This will work so long as the element with an ID of
<tt class="literal">toolbar</tt> contains only plain text. If, however, the
text within this element is all hyperlinks (<tt class="literal">A</tt>
elements), then the user agent's styles for hyperlinks will
take over -- because despite the fact the they're imported,
they are explicit style assignments, so they override any inherited
values. Usually, this means that they'll be colored blue, since
the browser's style sheet probably contains an entry like this:
</p>

<blockquote><pre class="code">A:link {color: blue;}</pre></blockquote>

<p>In order to overcome this problem, the author would need to declare:</p>

<blockquote><pre class="code">#toolbar A:link {color: white; background: black;}</pre></blockquote>

<p>By targeting the rule directly to the <tt class="literal">A</tt> elements
within the toolbar, the author will get the result shown in <a href="ch02_08.htm">Figure 2-31</a>.
</p>

<a name="css-CHP-2-FIG-31" /><div class="figure"><img height="86" alt="Figure 2-31" src="figs/css.0231.gif" width="117" /></div><h4 class="objtitle">Figure 2-31. Using contextual selectors to overcome specificity</h4>

<p>Lastly, under the fourth step, if two rules have exactly the same
weight, origin, and specificity, then the one that occurs later in
the style sheet wins out. Thus, let us return to our earlier example,
where we find the following two rules in the document's style
sheet:
</p>

<blockquote><pre class="code">H1 {color: red;}
H1 {color: blue;}</pre></blockquote>

<p>The value of <tt class="literal">color</tt> for all <tt class="literal">H1</tt>
elements in the document will be <tt class="literal">blue</tt>, not
<tt class="literal">red.</tt>
</p>

<p>Any rule that is contained in the document, having a higher weight
than the imported rule, wins out. This is true even if the rule is
part of the document's style sheet and not part of an
element's <tt class="literal">STYLE</tt> attribute. Consider the
following:
</p>

<blockquote><pre class="code">P EM {color: purple;}  /* from imported style sheet */

P EM {color: gray;}    /* rule contained within the document */</pre></blockquote>

<p>In this case, the second rule shown, since it is a part of the
document's style sheet, will win out over the imported rule.
</p>

<p>For the purposes of this rule, styles that are given in the
<tt class="literal">STYLE</tt><a name="INDEX-270" /> <a name="INDEX-271" />
attribute of an element are considered to be at the end of the
document's style sheet, which places them after all other
rules. In addition, a <tt class="literal">STYLE</tt> attribute has a weight
equivalent to that of an ID selector. Thus, the following code would
result in black text, as shown in <a href="ch02_08.htm">Figure 2-32</a>:
</p>

<blockquote><pre class="code">#hello {color: red;}

&lt;P ID="hello" STYLE="color: black;"&gt;Hello there!&lt;/P&gt;</pre></blockquote>

<a name="css-CHP-2-FIG-32" /><div class="figure"><img height="13" alt="Figure 2-32" src="figs/css.0232.gif" width="67" /></div><h4 class="objtitle">Figure 2-32. Sorting styles by their position</h4>

<p>Here, the weight of the inline style (100) is equal to the weight of
the rule <tt class="literal">#hello</tt> (100), so the winner is the rule
that occurs later in the<a name="INDEX-272" /> document.<a name="INDEX-273" />
</p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_07.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch02_09.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">2.7. Specificity</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">2.9. Classification of Elements</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>