<html><head><title>Grouping (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch02_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">2.2. Grouping</h2>

<p><a name="INDEX-149" />
<a name="INDEX-150" />So far, things have been pretty
simple -- as long as you only want to apply a single style to a
single selector, that is. No doubt you'll want to go further
than that, though: sometimes you'll want the same style to
apply to multiple elements, which means you'll want to use more
than one selector, and other times, you'll want to apply more
than one style to an element or group of elements.
</p>

<a name="css-CHP-2-SECT-2.1" /><div class="sect2">
<h3 class="sect2">2.2.1. Grouping Selectors</h3>

<p><a name="INDEX-151" />Let's
say you have a document in which both <tt class="literal">H2</tt> elements
and paragraphs should have gray text. The easiest way to accomplish
this is to use the following.
</p>

<blockquote><pre class="code">H2, P {color: gray;}</pre></blockquote>

<p>By placing both the <tt class="literal">H2</tt> and <tt class="literal">P</tt>
selectors on the left side of the rule and separating them with a
<a name="INDEX-152" /> <a name="INDEX-153" />comma, we've defined a rule
where the style on the right (<tt class="literal">color:</tt>
<tt class="literal">gray;</tt>) is applied to both selectors. The comma
tells the browser that there are two different selectors involved in
the rule. Leaving out the comma would give the rule a completely
different meaning, which we'll explore later, in <a href="ch02_05.htm">Section 2.5.1, "Contextual Selectors"</a>.
</p>

<p>It is possible to group any number of selectors together. If you
wanted to make sure that every element in your document had a color
of gray, you might use the following rule:
</p>

<blockquote><pre class="code">BODY, TABLE, TH, TD, H1, H2, H3, H4, P, PRE, STRONG, EM, B, I {color: gray;}</pre></blockquote>

<p>As you can tell, grouping allows an author to drastically compact
certain types of style assignments which might otherwise result in a
very long style sheet. The following two alternatives will have
exactly the same result, but it's pretty obvious which one is
easier to type:
</p>

<blockquote><pre class="code">H1 {color: purple;}
H2 {color: purple;}
H3 {color: purple;}
H4 {color: purple;}
H5 {color: purple;}
H6 {color: purple;}</pre></blockquote>

<p>or:</p>

<blockquote><pre class="code">H1, H2, H3, H4, H5, H6 {color: purple;}</pre></blockquote>

<p>Grouping can make for some interesting choices. For example, all of
the style sheets in the following example are equivalent -- each
merely shows a different way of grouping both selectors and
declarations -- and any of them will yield the result shown in
<a href="ch02_02.htm">Figure 2-3</a>:
</p>

<blockquote><pre class="code">H1 {color: purple; background: white;}
H2 {color: purple; background: green;}
H3 {color: white; background: green;}
H4 {color: purple; background: white;}
B {color: red; background: white;}

H1, H2, H4 {color: purple;}
H2, H3 {background: green;}
H1, H4, B {background: white;}
H3 {color: white;}
B {color: red;}

H1, H4 {color: purple; background: white;}
H2 {color: purple;}
H3 {color: white;}
H2, H3 {background: green;}
B {color: red; background: white;}</pre></blockquote>

<a name="css-CHP-2-FIG-3" /><div class="figure"><img height="186" alt="Figure 2-3" src="figs/css.0203.gif" width="360" /></div><h4 class="objtitle">Figure 2-3. The result of equivalent style sheets </h4>

</div>
<a name="css-CHP-2-SECT-2.2" /><div class="sect2">
<h3 class="sect2">2.2.2. Grouping Declarations</h3>

<p><a name="INDEX-154" />
<a name="INDEX-155" />Since
it is possible to group selectors together into a single rule, it
makes sense that you can also group declarations. The importance of
using the semicolon to end each declaration becomes even more clear
once we consider the fact that there can be more than one declaration
in a given rule. This helps keep style sheets compact, organized, and
easier to read. For example, assume that you want all
<tt class="literal">H1</tt> elements to have purple text on an aqua
background, and use 18-point Helvetica for the font. You could write
your styles like this:
</p>

<blockquote><pre class="code">H1 {font: 18pt Helvetica;}
H1 {color: purple;}
H1 {background: aqua;}</pre></blockquote>

<p>That's rather inefficient, though -- imagine having to do
this for an element to which you're assigning 10 or 15 styles!
Instead, you can group your declarations together:
</p>

<blockquote><pre class="code">H1 {font: 18pt Helvetica; color: purple; background: aqua;}</pre></blockquote>

<p>This will have exactly the same effect as the three-line style sheet
shown before, yielding the result shown in <a href="ch02_02.htm">Figure 2-4</a>.
</p>

<a name="css-CHP-2-FIG-4" /><div class="figure"><img height="16" alt="Figure 2-4" src="figs/css.0204.gif" width="131" /></div><h4 class="objtitle">Figure 2-4. Grouping declarations</h4>

<p>When you group declarations together into a single rule, the
<a name="INDEX-156" />
<a name="INDEX-157" />semicolons are used to separate the
declarations. This is especially important since <a name="INDEX-158" />whitespace is ignored in style sheets,
so the <a name="INDEX-159" />
<a name="INDEX-160" />
<a name="INDEX-161" />user agent (UA)
must rely on correct syntax to parse a style sheet. There is nothing
wrong with formatting your styles like this:
</p>

<blockquote><pre class="code">H1 {
  font:      18pt Helvetica;
  color:     purple;
  background:   aqua;
}</pre></blockquote>

<p>If the second semicolon is omitted, the user agent will interpret the
style sheet as follows:
</p>

<blockquote><pre class="code">H1 {
  font: 18pt Helvetica; 
  color: purple background: aqua;
}</pre></blockquote>

<p>Since <tt class="literal">background:</tt> is not a valid value for
<tt class="literal">color</tt>, and also since
<tt class="literal">color</tt><a name="INDEX-162" /> can be given only one keyword, the
entire statement should be ignored completely. A user agent in this
case might incorrectly render <tt class="literal">H1</tt>s as purple text
without an aqua background. However, since only a single keyword is
permitted for <tt class="literal">color</tt>, the user agent should ignore
the entire declaration as being invalid, meaning that you won't
even get purple <tt class="literal">H1</tt>s; instead, they'll be the
default color (usually black) with no background at all. The
declaration <tt class="literal">font:</tt> <tt class="literal">18pt</tt>
<tt class="literal">Helvetica</tt> will still take effect, since it was
correctly terminated with a semicolon, but the other styles
shouldn't work at all.
</p>

<a name="ch02-6-fm2xml" /><blockquote><h4>TIP</h4>
<p>While it is not technically necessary to follow the last declaration
of a rule with a semicolon, it is generally good practice to do so.
In the first place, it will keep you in the habit of terminating your
declarations with semicolons, the lack of which is one of the most
common ways to cause errors in rendering. Second, if you decide to
add another declaration to a rule, you don't have to worry
about forgetting to insert an extra semicolon. Finally, some older
browsers such as Internet Explorer 3.x have a greater tendency to
become confused if the semicolon is omitted from the final
declaration in a rule. My advice is to avoid all these problems and
always follow a declaration with a semicolon.
</p>
</blockquote>

<p>As with selector grouping, declaration grouping is a convenient way
to keep your style sheets short, expressive, and easy to maintain.
The following example shows two ways of assigning six different
styles to <tt class="literal">H1</tt> elements. The first uses a separate
rule for each property, and the second uses declaration grouping to
apply all six styles to a single selector. The primary advantage of
the second method is that it allows you to change the element to
which the styles are applied by editing one selector, instead of six.
Either way, though, you'll get the result depicted in <a href="ch02_02.htm">Figure 2-5</a>:
</p>

<a name="INDEX-163" /><a name="INDEX-164" /><blockquote><pre class="code">H1 {color: gray;}
H1 {background: white;}
H1 {border: 1px solid black;}
H1 {padding: 0.5em;}
H1 {font: 20pt Charcoal,sans-serif;}
H1 {text-transform: capitalize;}


H1 {color: gray; background: white; border: 1px solid black; padding: 0.5em;
  font: 20pt Charcoal,sans-serif; text-transform: capitalize;}
</pre></blockquote>

<a name="css-CHP-2-FIG-5" /><div class="figure"><img height="48" alt="Figure 2-5" src="figs/css.0205.gif" width="357" /></div><h4 class="objtitle">Figure 2-5. With or without grouping, the results are the same</h4>

</div>
<a name="css-CHP-2-SECT-2.3" /><div class="sect2">
<h3 class="sect2">2.2.3. Grouping Everything</h3>

<p>All right, so we can group selectors, and we can group declarations.
By combining both kinds of grouping in single rules, it is possible
to define very complex styles using only a few statements.
Let's assume that we wish to assign some complex styles to all
of the headings in a document. Thus:
</p>

<blockquote><pre class="code">H1, H2, H3, H4, H5, H6 {color: gray; background: white; padding: 0.5em;
  border: 1px solid black; font-family: Charcoal,sans-serif;}</pre></blockquote>

<p>The grouping of the selectors means that the styles on the right side
of the rule will be applied to all the headings listed, and the
grouping of declarations means that all of the listed styles will be
applied to the selectors on the left side of the rule. The result of
this rule is shown in <a href="ch02_02.htm">Figure 2-6</a>.
</p>

<p>This approach is obviously preferable to the alternative, which would
start out something like this and would continue for quite a while:
</p>

<blockquote><pre class="code">H1 {color: gray;}
H2 {color: gray;}
H3 {color: gray;}
H4 {color: gray;}
H5 {color: gray;}
H6 {color: gray;}
H1 {background: white;}
H2 {background: white;}
H3 {background: white;}</pre></blockquote>

<p>You can write your styles like this, of course, if that's what
you really want to do -- but I wouldn't recommend it. The
problems you'd face in trying to edit your styles would be
almost as bad as if you were back to using <tt class="literal">FONT</tt>
tags everywhere!
</p>

<a name="css-CHP-2-FIG-6" /><div class="figure"><img height="382" alt="Figure 2-6" src="figs/css.0206.gif" width="431" /></div><h4 class="objtitle">Figure 2-6. Grouping both selectors and rules</h4>

<p>It's largely thanks to grouping that CSS files look the way
they do. Here is a typical style sheet, with <a href="ch02_02.htm">Figure 2-7</a> showing the result:
</p>

<blockquote><pre class="code">BODY {background: white; color: gray;}
H1, H2, H3, H4, H5, H6 {font-family: Helvetica, sans-serif; 
  color: white; background: black;}
H1, H2, H3 {border: 2px solid gray; font-weight: bold;}
H4, H5, H6 {border: 1px solid gray;}
P, TABLE {color: gray; font-family: Times, serif;}
PRE {margin: 1em; color: maroon;}</pre></blockquote>

<a name="css-CHP-2-FIG-7" /><div class="figure"><img height="427" alt="Figure 2-7" src="figs/css.0207.gif" width="467" /></div><h4 class="objtitle">Figure 2-7. The result of a typical style sheet</h4>

<p>For all the power and complexity we've introduced, there is
even more with regard to selectors. It's possible to add more
expression to selectors, and in so doing, apply styles in a way that
cuts across elements in favor of types of information. Of course, to
get something so powerful, you'll have to do a little work in
return, but it's well worth it.<a name="INDEX-165" /> <a name="INDEX-166" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch02_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">2. Selectors and Structure</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">2.3. Class and ID Selectors</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
