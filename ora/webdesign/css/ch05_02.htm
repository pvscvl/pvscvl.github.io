<html><head><title>Font Weights (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch05_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch05_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">5.2. Font Weights</h2>

<a name="css-CHP-5-SIDEBAR-2" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">font-weight</h4>


<dl>
<dt><b>Values</b></dt>
<dd>
<p><tt class="literal">normal</tt> | <tt class="literal">bold</tt> |
<tt class="literal">bolder</tt> | <tt class="literal">lighter</tt> |
<tt class="literal">100</tt> | <tt class="literal">200</tt> |
<tt class="literal">300</tt> | <tt class="literal">400</tt> |
<tt class="literal">500</tt> | <tt class="literal">600</tt> |
<tt class="literal">700</tt> | <tt class="literal">800</tt> |
<tt class="literal">900</tt>
</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p><tt class="literal">normal</tt></p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>yes</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>
</td></tr></table></blockquote>

<p><a name="INDEX-532" />
<a name="INDEX-533" />Even though you may not realize it,
you're already familiar with font weights: boldfaced text is a
very common example of an increased font weight. Generally speaking,
the darker and "more bold" a font appears, the heavier it
is said to be. There are a great many ways to label the heaviness of
fonts. For example, the font family known as Zurich has a number of
variants such as Zurich Bold, Zurich Black, Zurich UltraBlack, Zurich
Light, and Zurich Regular. Each of these uses the same basic font,
but each has a different weight.
</p>

<p>So let's say that you want to use Zurich for a document, but
you'd like to make use of all those different heaviness levels.
You could refer to them directly through the
<tt class="literal">font-family</tt> property, but you really
shouldn't have to do that. Besides, it's no fun having to
write a style sheet such as this:
</p>

<blockquote><pre class="code">H1 {font-family: 'Zurich UltraBlack', sans-serif;}
H2 {font-family: 'Zurich Black', sans-serif;}
H3 {font-family: 'Zurich Bold', sans-serif;}
H4, P {font-family: Zurich, sans-serif;}
SMALL {font-family: 'Zurich Light', sans-serif;}</pre></blockquote>

<p>Besides the obvious tedium of writing such a style sheet, it only
works if everyone has these fonts installed, and it's pretty
safe bet that most people don't. It would make far more sense
to specify a single font family for the whole document and then
assign weights to various elements. You can do this, in theory, using
the various values for the property <tt class="literal">font-weight</tt>. A
fairly obvious <tt class="literal">font-weight</tt> declaration is this:
</p>

<blockquote><pre class="code">B {font-weight: bold;}</pre></blockquote>

<p>This says, simply, that the <tt class="literal">B</tt> element should be
displayed using a boldface font; or, to put it another way, a font
that is heavier than is normal for the document, as shown in <a href="ch05_02.htm">Figure 5-8</a>. This is what we're used to, of course,
since <tt class="literal">B</tt> does cause text to be boldfaced.
</p>

<a name="css-CHP-5-FIG-8" /><div class="figure"><img height="30" alt="Figure 5-8" src="figs/css.0508.gif" width="266" /></div><h4 class="objtitle">Figure 5-8. Making the B tag bold</h4>

<p>However, what's really happening is that a heavier variant of
the font is used for displaying a <tt class="literal">B</tt> element. Thus,
if you have a paragraph displayed using Times, and part of it is
boldfaced, then there are really two variants of the same font in
use: Times and TimesBold. The regular text is displayed using Times,
and the boldfaced text uses TimesBold.
</p>

<a name="css-CHP-5-SECT-2.1" /><div class="sect2">
<h3 class="sect2">5.2.1. How Weights Work</h3>

<p><a name="INDEX-534" />In order to understand how a user
agent determines the heaviness, or weight, of a given font variant,
not to mention how weight is inherited, it's easiest to start
by talking about the keywords <tt class="literal">100</tt> through
<tt class="literal">900</tt>. These <a name="INDEX-535" /> <a name="INDEX-536" />number
keywords were defined to map to a relatively common feature of font
design in which a font is given nine levels of weight. OpenType, for
example, employs a numeric scale with nine values. If a font has
these levels built in, then the numbers are mapped directly to the
predefined levels, with <tt class="literal">100</tt> as the lightest
variant of the font, and <tt class="literal">900</tt> as the heaviest.
</p>

<p>In fact, there is no intrinsic weight in these numbers. The CSS
specification says only that each number corresponds to a weight at
least as heavy as the number that precedes it. Thus,
<tt class="literal">100</tt>, <tt class="literal">200</tt>,
<tt class="literal">300</tt>, and <tt class="literal">400</tt> might all map to
the same relatively lightweight variant, while <tt class="literal">500</tt>
and <tt class="literal">600</tt> could correspond to the same heavier font
variant, and <tt class="literal">700</tt>, <tt class="literal">800</tt>, and
<tt class="literal">900</tt> could all produce the same very heavy font
variant. As long as no keyword corresponds to a variant that is
lighter than the variant assigned to the previous keyword, then
everything will be all right.
</p>

<p>As it happens, these numbers are defined to be equivalent to certain
common variant names, not to mention other values for
<tt class="literal">font-weight</tt>. <tt class="literal">400</tt> is defined to
be equivalent to <tt class="literal">normal</tt>, and
<tt class="literal">700</tt> corresponds to <tt class="literal">bold</tt>. The
other numbers do not match up with any other values for
<tt class="literal">font-weight</tt>, but they can correspond to common
variant names. If there is a font variant labeled something such as
"Normal," "Regular," "Roman," or
"Book," then it is assigned to the number
<tt class="literal">400</tt> and any variant with the label
"Medium" is assigned to <tt class="literal">500</tt>. However,
if a variant labeled "Medium" is the only variant
available, it is <em class="emphasis">not</em> assigned to
<tt class="literal">500</tt>.
</p>

<p>A user agent has to do even more work if there are less than nine
weights in a given font family. In this case, it has to fill in the
gaps in a predetermined way:
</p>

<ul><li>
<p>If the value <tt class="literal">500</tt> is unassigned, it is given the
same font weight as that assigned to <tt class="literal">400</tt>.
</p>
</li><li>
<p>If <tt class="literal">300</tt> is unassigned, it is given the next variant
lighter than <tt class="literal">400</tt>. If no lighter variant is
available, <tt class="literal">300</tt> is assigned the same variant as
<tt class="literal">400</tt>. In this case, it will usually be
"Normal" or "Medium." This method is also
used for <tt class="literal">200</tt> and <tt class="literal">100</tt>.
</p>
</li><li>
<p>If <tt class="literal">600</tt> is unassigned, it is given the next variant
darker than <tt class="literal">400</tt>. If no darker variant is
available, <tt class="literal">600</tt> is assigned the same variant as
<tt class="literal">500</tt>. This method is also used for
<tt class="literal">700</tt>, <tt class="literal">800</tt>, and
<tt class="literal">900</tt>.
</p>
</li></ul>
<p>In order to understand this more clearly, let's look at three
examples of font-weight assignment. In the first, assume that the
font family Karrank% is an OpenType font and so already has nine
weights already defined. In this case, the numbers are assigned to
each level, and the keywords <tt class="literal">normal</tt> and
<tt class="literal">bold</tt> are assigned to the numbers
<tt class="literal">400</tt> and <tt class="literal">700</tt>, respectively.
</p>

<p>In our second example, we consider the font family Zurich, which was
discussed near the beginning of this section. Hypothetically, its
variants might be assigned values for <tt class="literal">font-weight</tt>
as shown in <a href="ch05_03.htm">Table 5-3</a>.
</p>

<a name="css-CHP-5-TABLE-1" /><h4 class="objtitle">Table 5-1. Hypothetical Weight Assignments for a Specific Font</h4><table border="1">




<tr>
<th>
<p>Font Face</p>
</th>
<th>
<p>Assigned Keyword</p>
</th>
<th>
<p>Assigned Number(s)</p>
</th>
</tr>


<tr>
<td>
<p>Zurich Light</p>
</td>
<td>

</td>
<td>
<p><tt class="literal">100</tt>, <tt class="literal">200</tt>, <tt class="literal">300</tt></p>
</td>
</tr>
<tr>
<td>
<p><a name="INDEX-537" />Zurich Regular
</p>
</td>
<td>
<p><tt class="literal">normal</tt></p>
</td>
<td>
<p><tt class="literal">400</tt></p>
</td>
</tr>
<tr>
<td>
<p>Zurich Medium</p>
</td>
<td>

</td>
<td>
<p><tt class="literal">500</tt></p>
</td>
</tr>
<tr>
<td>
<p>Zurich Bold</p>
</td>
<td>
<p><tt class="literal">bold</tt></p>
</td>
<td>
<p><tt class="literal">600</tt>, <tt class="literal">700</tt></p>
</td>
</tr>
<tr>
<td>
<p>Zurich Black</p>
</td>
<td>

</td>
<td>
<p><tt class="literal">800</tt></p>
</td>
</tr>
<tr>
<td>
<p>Zurich UltraBlack</p>
</td>
<td>

</td>
<td>
<p><tt class="literal">900</tt></p>
</td>
</tr>

</table>

<p>The first three number values are assigned to the lightest weight.
The Regular face gets the keywords <tt class="literal">400</tt> and
<tt class="literal">normal</tt>, as expected. Since there is a Medium font,
it's assigned to the number <tt class="literal">500</tt>. There is
nothing to assign to <tt class="literal">600</tt>, so it's mapped to
the Bold font face, which is also the variant to which
<tt class="literal">700</tt> and <tt class="literal">bold</tt> are assigned.
Finally, <tt class="literal">800</tt> and <tt class="literal">900</tt> are
assigned to the Black and UltraBlack variants. Note that this last
would only happen if those faces had the top two weight levels
already assigned. Otherwise, the user agent might ignore them, and
assign <tt class="literal">800</tt> and <tt class="literal">900</tt> to the Bold
face instead, or it might assign them both to one or the other of the
Black variants.
</p>

<p>Finally, let's consider a stripped-down version of Times, in
which there are only two weight variants, TimesRegular and TimesBold,
as shown in <a href="ch05_02.htm">Table 5-2</a>.
</p>

<a name="css-CHP-5-TABLE-2" /><h4 class="objtitle">Table 5-2. Hypothetical Weight Assignments for Times</h4><table border="1">




<tr>
<th>
<p>Font Face</p>
</th>
<th>
<p>Assigned Keyword</p>
</th>
<th>
<p>Assigned Number(s)</p>
</th>
</tr>


<tr>
<td>
<p>TimesRegular</p>
</td>
<td>
<p><tt class="literal">normal</tt></p>
</td>
<td>
<p><tt class="literal">100</tt>, <tt class="literal">200</tt>,
<tt class="literal">300</tt>, <tt class="literal">400</tt>,
<tt class="literal">500</tt>
</p>
</td>
</tr>
<tr>
<td>
<p>TimesBold</p>
</td>
<td>
<p><tt class="literal">bold</tt></p>
</td>
<td>
<p><tt class="literal">600</tt>, <tt class="literal">700</tt>,
<tt class="literal">800</tt>, <tt class="literal">900</tt>
</p>
</td>
</tr>

</table>

<p>The assignment of the keywords <tt class="literal">normal</tt> and
<tt class="literal">bold</tt> is straightforward enough, of course. As for
the numbers, <tt class="literal">100</tt> through <tt class="literal">300</tt>
are assigned to the Regular face because there isn't a lighter
face available. <tt class="literal">400</tt> goes to Regular as expected,
but what about <tt class="literal">500</tt> ? It is assigned to the Regular
(or <tt class="literal">normal</tt>) face because there isn't a
Medium face available; thus, it is assigned the same as
<tt class="literal">400</tt>. As for the rest, <tt class="literal">700</tt> goes
with <tt class="literal">bold</tt> as always, while <tt class="literal">800</tt>
and <tt class="literal">900</tt>, lacking a heavier face, are assigned to
the Bold font face. Finally, <tt class="literal">600</tt> is assigned to
the next-heavier face, which is, of course, the Bold face.
</p>

<p><tt class="literal">font-weight</tt> is inherited, so if you set a
paragraph to be <tt class="literal">bold</tt>, then all of its children
will inherit that boldness, as we see in <a href="ch05_02.htm">Figure 5-9</a>.
</p>

<blockquote><pre class="code">P.one {font-weight: bold;}</pre></blockquote>

<a name="css-CHP-5-FIG-9" /><div class="figure"><img height="57" alt="Figure 5-9" src="figs/css.0509.gif" width="257" /></div><h4 class="objtitle">Figure 5-9. Inherited font weight</h4>

<p>This isn't unusual, but the situation gets interesting when you
use the last two values we have to discuss: <tt class="literal">bolder</tt>
and <tt class="literal">lighter</tt>. In general terms, these keywords have
the effect you'd anticipate: they make text more or less bold
with comparison to its parent's font weight. Let's
consider<a name="INDEX-538" /> <a name="INDEX-539" />
<tt class="literal">bolder</tt><a name="INDEX-540" /> first.<a name="INDEX-541" />
</p>

</div>
<a name="css-CHP-5-SECT-2.2" /><div class="sect2">
<h3 class="sect2">5.2.2. Getting Bolder</h3>

<p><a name="INDEX-542" />
<a name="INDEX-543" />If
you set an element to have a weight of <tt class="literal">bolder</tt>,
then the user agent first must determine what
<tt class="literal">font-weight</tt> was inherited from the parent element.
It then selects the lowest number which corresponds to a font weight
darker than what was inherited. If none is available, then the user
agent sets the element's font weight to the next numerical
value, unless the value is already <tt class="literal">900</tt>, in which
case the weight remains at <tt class="literal">900</tt>. Thus, you might
encounter the following situations, illustrated in <a href="ch05_02.htm">Figure 5-10</a>:
</p>

<blockquote><pre class="code">P {font-weight: normal;}
P EM {font-weight: bolder;}  /* results in 'bold' text, evaluates to '700' */

H1 {font-weight: bold;}
H1 B {font-weight: bolder;}  /* if no bolder face exists, evaluates to '800' */

P {font-weight: 100;} /* assume 'Light' face exists ; see explanation */
P STRONG {font-weight: bolder;} /* results in 'normal' text, weight '400' */</pre></blockquote>

<a name="css-CHP-5-FIG-10" /><div class="figure"><img height="145" alt="Figure 5-10" src="figs/css.0510.gif" width="403" /></div><h4 class="objtitle">Figure 5-10. Text trying to be more bold</h4>

<p>In the first example, the user agent moves up the weight ladder from
<tt class="literal">normal</tt> to <tt class="literal">bold</tt> ; in numeric
terms, this is a jump from <tt class="literal">400</tt> to
<tt class="literal">700</tt>. In the second example, <tt class="literal">H1</tt>
text is already set to <tt class="literal">bold</tt>. If there is no bolder
face available, then the user agent sets the weight of
<tt class="literal">B</tt> text within an <tt class="literal">H1</tt> to
<tt class="literal">800</tt>, since that is the next step up from
<tt class="literal">700</tt> (the numeric equivalent to
<tt class="literal">bold</tt>). Since <tt class="literal">800</tt> is assigned to
the same font face as <tt class="literal">700</tt>, there is no visible
difference between normal <tt class="literal">H1</tt> text and boldfaced
<tt class="literal">H1</tt> text, but nonetheless the weights are
different.
</p>

<p>In the last example, paragraphs are set to be the lightest possible
font weight, which we assume exists as a Light variant. Furthermore,
the other faces in this font family are Regular and Bold. Any
<tt class="literal">EM</tt> text within a paragraph will evaluate to
<tt class="literal">normal</tt>, since that is the next-heaviest face
within the font family. However, what if the only faces in the font
are Regular and Bold ? In that case, the declarations would evaluate
like this:
</p>

<blockquote><pre class="code">/*   assume only two faces for this example: 'Regular' and 'Bold'   */
P {font-weight: 100;}   /* looks the same as 'normal' text */
P SPAN {font-weight: bolder;}   /* maps to '700' */</pre></blockquote>

<p>As we can see, the weight <tt class="literal">100</tt> is assigned to the
<tt class="literal">normal</tt> font face, but the value of
<tt class="literal">font-weight</tt> is still 1<tt class="literal">00</tt>. Thus,
the <tt class="literal">SPAN</tt> text (which is set to be
<tt class="literal">bolder</tt>) will inherit the value of
<tt class="literal">100</tt> and then evaluate to the next-heaviest face,
which is the Bold face and which has a numerical weight of
7<tt class="literal">00</tt>. <a href="ch05_02.htm">Figure 5-11</a> shows us the
visual result of all this.
</p>

<a name="css-CHP-5-FIG-11" /><div class="figure"><img height="14" alt="Figure 5-11" src="figs/css.0511.gif" width="274" /></div><h4 class="objtitle">Figure 5-11. Greater weight will usually confer visual boldness</h4>

<p>Let's take this all one step further, and add two more rules,
plus some markup, to illustrate how all this works (see <a href="ch05_02.htm">Figure 5-12</a> for the results):
</p>

<blockquote><pre class="code">/*   assume only two faces for this example: 'Regular' and 'Bold'   */
P {font-weight: 100;}   /* looks the same as 'normal' text */
P SPAN {font-weight: 400;}   /* so does this */
STRONG {font-weight: bolder;}   /* bolder than its parent */
STRONG B {font-weight: bolder;}   /* bolder still */

&lt;P&gt;
This paragraph contains elements of increasing weight: there is an
&lt;SPAN&gt;SPAN element which contains a &lt;STRONG&gt;strongly emphasized
element, and that contains a &lt;B&gt;boldface element&lt;/B&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;.
&lt;/P&gt;</pre></blockquote>

<a name="css-CHP-5-FIG-12" /><div class="figure"><img height="38" alt="Figure 5-12" src="figs/css.0512.gif" width="321" /></div><h4 class="objtitle">Figure 5-12. Moving up the weight scale</h4>

<p>In the last two nested elements, the computed value of
<tt class="literal">font-weight</tt> is increased because of the liberal
use of the keyword <tt class="literal">bolder</tt>. If we were to replace
the text in the paragraph with numbers representing the
<tt class="literal">font-weight</tt> of each element, we would get the
results in <a href="ch05_02.htm">Figure 5-13</a>:
</p>

<blockquote><pre class="code">&lt;P&gt;
100 &lt;SPAN&gt; 400 &lt;STRONG&gt; 700 &lt;B&gt; 800 &lt;/B&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;.
&lt;/P&gt;</pre></blockquote>

<a name="css-CHP-5-FIG-13" /><div class="figure"><img height="9" alt="Figure 5-13" src="figs/css.0513.gif" width="92" /></div><h4 class="objtitle">Figure 5-13. Changing weight, with the numbers to illustrate it</h4>

<p>The first two weight increases are large because they represent jumps
from <tt class="literal">100</tt> to <tt class="literal">400</tt>, and from
<tt class="literal">400</tt> to <tt class="literal">bold</tt>
(<tt class="literal">700</tt>). From <tt class="literal">700</tt>, there is no
heavier face, so the user agent simply moves the value of
<tt class="literal">font-weight</tt> one notch up the numeric scale
(<tt class="literal">800</tt>). Furthermore, if we were to insert a
<tt class="literal">STRONG</tt> element into the <tt class="literal">B</tt>
element, it would come out like <a href="ch05_02.htm">Figure 5-14</a>:
</p>

<blockquote><pre class="code">&lt;P&gt;
100 &lt;SPAN&gt; 400 &lt;STRONG&gt; 700 &lt;B&gt; 800 &lt;STRONG&gt; 900 
&lt;/STRONG&gt;&lt;/B&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;.
&lt;/P&gt;</pre></blockquote>

<a name="css-CHP-5-FIG-14" /><div class="figure"><img height="10" alt="Figure 5-14" src="figs/css.0514.gif" width="117" /></div><h4 class="objtitle">Figure 5-14. Weight numbers, again</h4>

<p>If there were yet another <tt class="literal">B</tt> element inserted into
the innermost <tt class="literal">STRONG</tt> element, its weight would
also be <tt class="literal">900</tt>, since <tt class="literal">font-weight</tt>
can never be higher than <tt class="literal">900</tt>. Assuming, as we
have, that there are only two font faces available, then the text
would appear to be either Regular or Bold text, as we see in <a href="ch05_02.htm">Figure 5-15</a>:
<a name="INDEX-544" />
<a name="INDEX-545" />
</p>

<blockquote><pre class="code">&lt;P&gt;
regular &lt;SPAN&gt; regular &lt;STRONG&gt; bold &lt;B&gt; bold 
&lt;STRONG&gt; bold &lt;/STRONG&gt;&lt;/B&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;.
&lt;/P&gt;</pre></blockquote>

<a name="css-CHP-5-FIG-15" /><div class="figure"><img height="13" alt="Figure 5-15" src="figs/css.0515.gif" width="159" /></div><h4 class="objtitle">Figure 5-15. Visual weight, with descriptors
</h4>

</div>
<a name="css-CHP-5-SECT-2.3" /><div class="sect2">
<h3 class="sect2">5.2.3. Lightening Weights</h3>

<p><a name="INDEX-546" />
<a name="INDEX-547" />As
you might expect, <tt class="literal">lighter</tt> works in just the same
way, except that it causes the user agent to move down the weight
scale, instead of up. With a quick modification of the previous
example, we can see this very clearly:
</p>

<blockquote><pre class="code">/*   assume only two faces for this example: 'Regular' and 'Bold'   */
P {font-weight: 900;}   /* as bold as possible, which will look 'bold' */
P SPAN {font-weight: 700;}   /* this will also be bold */
STRONG {font-weight: lighter;}   /* lighter than its parent */
B {font-weight: lighter;}   /*lighter still */

&lt;P&gt;
900 &lt;SPAN&gt; 700 &lt;STRONG&gt; 400 &lt;B&gt; 300 &lt;STRONG&gt; 200 
&lt;/STRONG&gt;&lt;/B&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;.
&lt;/P&gt;
&lt;!-- ...or, to put it another way... --&gt;
&lt;P&gt;
bold &lt;SPAN&gt; bold &lt;STRONG&gt; regular &lt;B&gt; regular 
&lt;STRONG&gt; regular &lt;/STRONG&gt;&lt;/B&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;.
&lt;/P&gt;</pre></blockquote>

<p>Ignoring the fact that this would be entirely counterintuitive, what
we see in <a href="ch05_02.htm">Figure 5-16</a> is that the main paragraph
text has a weight of <tt class="literal">900</tt> and the
<tt class="literal">SPAN</tt> aweight of
<tt class="literal">700</tt>. When the <tt class="literal">STRONG</tt> text is
set to <tt class="literal">lighter</tt>, it evaluates to the next-lighter
face, which is the regular face, or <tt class="literal">400</tt> (the same
as <tt class="literal">normal</tt>) on the numeric scale. The next step
down is to <tt class="literal">300</tt>, which comes out the same as
<tt class="literal">normal</tt> since no lighter faces exist. From there,
the user agent can only reduce the weight one numeric step at a time
until it reaches <tt class="literal">100</tt> (which it doesn't do in
the example). The second paragraph shows which text will be bold, and
which regular.
</p>

<a name="css-CHP-5-FIG-16" /><div class="figure"><img height="49" alt="Figure 5-16" src="figs/css.0516.gif" width="177" /></div><h4 class="objtitle">Figure 5-16. Making text lighter</h4>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch05_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch05_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">5. Fonts</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">5.3. Font Size</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>