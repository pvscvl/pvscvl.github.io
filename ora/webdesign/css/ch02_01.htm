<html><head><title>Selectors and Structure (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch02_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />



<h1 class="chapter">Chapter 2. Selectors and Structure</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch02_01.htm">Basic Rules</a><br />
<a href="ch02_02.htm">Grouping</a><br />
<a href="ch02_03.htm">Class and ID Selectors</a><br />
<a href="ch02_04.htm">Pseudo-Classes and Pseudo-Elements</a><br />
<a href="ch02_05.htm">Structure</a><br />
<a href="ch02_06.htm">Inheritance</a><br />
<a href="ch02_07.htm">Specificity</a><br />
<a href="ch02_08.htm">The Cascade</a><br />
<a href="ch02_09.htm">Classification of Elements</a><br />
<a href="ch02_10.htm">Summary</a><br /></p></div>

<p>The life of a web designer can be pretty rough at times. How many
times have you slaved over a new design, guided it through 17
committees and 4 major revisions, and finally come up with something
that everyone seems to like, when a vice-presidential voice suddenly
says, "I'm concerned about the shade of green we're
using for our headings. Could we see some versions of the site using
a few lighter shades, and maybe a couple of darker shades as
well?"
</p>

<p>Well, now you're faced with the necessity of scheduling another
meeting so you can go back to your computer and produce new versions
of the design, replacing all of your <tt class="literal">&lt;FONT</tt>
<tt class="literal">COLOR="green"&gt;</tt> tags with new ones that have
different shades of green. Meanwhile, all the other administrators
have started to think of their own ways to nitpick the design to
death. Maybe the headings should be dark blue instead of green, or
perhaps the sidebar's background is the wrong color, or maybe
the company logo ought to be used for list-item bullets instead of
those little black dots that everyone else uses.
</p>

<p>So, at the next design meeting, after everyone's agreed that
such-and-so shade of green is a good one, all these new revision
ideas start popping up, and all the administrators are nodding
gravely and saying, why yes, maybe we should see a design which uses
shades of red, not green. The downward spiral has begun.
</p>

<p>Even if you're lucky enough to work in a place where you
don't have to tolerate such nonsense, you probably pose similar
questions to yourself while you're working on your design. Does
the particular blue you're using for your sidebar's
background contrast enough with your yellow links? Would the headings
all look better if they were red instead of green? What if the
paragraphs were in one font and the headings in another? The only way
to find out is to fiddle with <tt class="literal">FONT</tt> tags and
<tt class="literal">BGCOLOR</tt> attributes. That can take forever if you
have a lot of documents, or a really complicated design, and if you
suddenly head in a different direction, you can spend almost as much
time cleaning up the residue of your old assumptions as you do on
actual creative design work.
</p>

<p>Style sheets offer an easy, convenient, and powerful way to break out
of this morass. One of the primary advantages that CSS offers to
designers is its ability to easily apply a set of styles to all
elements of the same type. This may not sound like much, but
consider: with the edit of a single line of CSS, you can change the
colors of all your headings. Don't like the blue you're
using? Change that one line of code, and the headings can all be
purple, or yellow, or maroon, or any other color you desire. Design
time is reduced by cutting out the grunt work, allowing you to focus
on being creative. The next time you're in a meeting and
someone wants to see headings with a different shade of green, just
edit your page's styles and hit reload. <em class="emphasis">Voil&agrave;!</em>
 The results of that change are right there for everyone to
see, and it only took seconds to accomplish, instead of requiring
another meeting.
</p>

<p>Of course, CSS can't solve all your problems -- you
can't use it to change the color of your GIFs, for
example -- but it can make your life a lot easier than it has
been. It does this with selectors and structure, the first of which
is used to make changes that take advantage of the second.
</p>

<div class="sect1"><a name="css-CHP-2-SECT-1" />
<h2 class="sect1">2.1. Basic Rules</h2>

<p><a name="INDEX-119" /> <a name="INDEX-120" />Central
to CSS is the ability to apply certain rules to the same types of
elements in a document, which can drastically reduce the amount of
work an author has to undertake. For example, let's say that
you wish to make the text of all <tt class="literal">H2</tt> elements
appear gray. Using straight HTML, you'd have to do this by
inserting <tt class="literal">&lt;FONT</tt>
<tt class="literal">color="gray"&gt;...&lt;/FONT&gt;</tt> tags in all your
<tt class="literal">H2</tt> elements, something like this:
</p>

<blockquote><pre class="code">&lt;H2&gt;&lt;FONT COLOR="gray"&gt;This is H2 text&lt;/FONT&gt;&lt;/H2&gt;</pre></blockquote>

<p>If you have a document with a lot of <tt class="literal">H2</tt> elements,
this can become very tedious to type. If you later decide that you
want to change all the <tt class="literal">H2</tt>s to be green instead of
gray, then the task becomes even worse because you have to find all
of those <tt class="literal">H2</tt>s and change the value of each and
every <tt class="literal">FONT</tt> tag to be <tt class="literal">gray</tt>.
</p>

<p>In CSS, you can avoid all that hassle, and still get the effects you
want in a way that makes them easy to change. In the document's
style sheet, you need only define the following to get the same
result:
</p>

<blockquote><pre class="code">H2 {color: gray;}</pre></blockquote>

<p>Altogether, this is known as a <em class="filename">rule</em>. This single
rule is enough to cause all <tt class="literal">H2</tt> elements to be
colored gray. If you want to change this to another color, then the
alteration of this single rule will affect all <tt class="literal">H2</tt>s
in the document:
</p>

<blockquote><pre class="code">H2 {color: silver;}</pre></blockquote>

<a name="css-CHP-2-SECT-1.1" /><div class="sect2">
<h3 class="sect2">2.1.1. Rule Structure</h3>

<p><a name="INDEX-121" /> <a name="INDEX-122" />In order to understand this in more
detail, let's break down the structure of a rule.
</p>

<p>Each rule has two parts, the
<em class="filename">selector</em><a name="INDEX-123" />
<a name="INDEX-124" /> and the
<em class="filename">declaration</em><a name="INDEX-125" />.
At a finer level, each declaration is actually a combination of
<a name="INDEX-126" />properties and
<a name="INDEX-127" />values. Every style
sheet is made up of a series of rules, but rules do not always appear
in style sheets.
</p>

<p>First, however, let's break down our example rule into its
various parts, as shown in <a href="ch02_01.htm">Figure 2-1</a>.
</p>

<a name="css-CHP-2-FIG-1" /><div class="figure"><img height="89" alt="Figure 2-1" src="figs/css.0201.gif" width="338" /></div><h4 class="objtitle">Figure 2-1. The structure of a rule</h4>

<p>As you can see, on the left side of the rule, we find the selector. A
selector is simply the part of the rule that selects the parts of the
document to which the styles should be applied. In this case,
<tt class="literal">H1</tt> elements are selected. If the selector shown
here were <tt class="literal">P</tt>, then all <tt class="literal">P</tt>
(paragraph) elements would be selected, and <tt class="literal">H1</tt>
elements would not.
</p>

<p>On the right side of the rule, we have the declaration. This is a
combination of a CSS property and a value of that property. In <a href="ch02_01.htm">Figure 2-1</a>, the declaration says that this rule will
cause parts of the document to have a <tt class="literal">color</tt> of
<tt class="literal">purple</tt>. The parts that will be purple are those
shown in the selector (in this case, all <tt class="literal">H1</tt>
elements).
</p>

</div>
<a name="css-CHP-2-SECT-1.2" /><div class="sect2">
<h3 class="sect2">2.1.2. Simple Selectors</h3>

<p>A selector is most often an HTML element, but it can be other things.
For example, if a CSS file contains styles for an
<a name="INDEX-128" />XML
document, it might look something like this:
</p>

<blockquote><pre class="code">QUOTE {color: gray;}
BIB {color: red;}
BOOKTITLE {color: purple;}
MYElement {color: red;}</pre></blockquote>

<p>In other words, the most basic kind of selector for a document is one
of the elements of that document. In XML, this could be anything. If
you're styling an HTML document, on the other hand, then you
will generally use one of the many
<a name="INDEX-129" />HTML elements such as <tt class="literal">P</tt>,
<tt class="literal">H3</tt>, <tt class="literal">EM</tt>, <tt class="literal">A</tt>,
or even <tt class="literal">BODY</tt>, like this:
</p>

<blockquote><pre class="code">BODY {color: black;}
H1 {color: purple;}
H3 {color: gray;}
STRONG {color: red;}
EM {color: maroon;}</pre></blockquote>

<p>The results of this style sheet are shown, with the obvious
limitations imposed by grayscale printing, in <a href="ch02_01.htm">Figure 2-2</a>.
</p>

<a name="css-CHP-2-FIG-2" /><div class="figure"><img height="106" alt="Figure 2-2" src="figs/css.0202.gif" width="320" /></div><h4 class="objtitle">Figure 2-2. Simple styling of a document</h4>

<p>This ability to apply styles to elements is obviously very powerful.
It also makes it simple to shift styles from one type of element to
another. Let's say we have a page design where
<tt class="literal">H2</tt> elements are gray:
</p>

<blockquote><pre class="code">H2 {color: gray;}</pre></blockquote>

<p>Okay, not bad, but the more you look at this, the less you like it.
You eventually decide that you actually want your paragraph text to
be gray, not your <tt class="literal">H2</tt> text. No problem! All you
have to do is change the selector from <tt class="literal">H2</tt> to
<tt class="literal">P</tt>, and you'll have shifted the style from
<tt class="literal">H2</tt> elements to <tt class="literal">P</tt> (paragraph)
elements:
</p>

<blockquote><pre class="code">P {color: gray;}</pre></blockquote>

<p>For the moment, that takes care of the left side of CSS rules.
Let's examine the right side, where the declaration lives,
before we return to selectors for some added features.
</p>

</div>
<a name="css-CHP-2-SECT-1.3" /><div class="sect2">
<h3 class="sect2">2.1.3. Declarations</h3>

<p><a name="INDEX-130" />A
declaration is always formatted as a
<em class="filename">property</em><a name="INDEX-131" />
followed by a <a name="INDEX-132" /> <a name="INDEX-133" />colon, and then a
<em class="filename">value</em>. Finally, the declaration is terminated
with a <a name="INDEX-134" />
<a name="INDEX-135" />semicolon (<tt class="literal">;</tt>).
The value can be a single <em class="filename">keyword</em>, or a
<a name="INDEX-136" />space-separated list of one or more
<em class="filename">keywords</em><a name="INDEX-137" />
that are permitted for that property. If an incorrect property is
used in a declaration, the entire <a name="INDEX-138" />
<a name="INDEX-139" />declaration
is ignored. Thus, the following declaration would be ignored because,
while the value is correct, the property is not:
</p>

<blockquote><pre class="code">brain-size: 2cm;</pre></blockquote>

<p>If an incorrect value is used, then in most cases, only that value
should be ignored -- although it is possible to invalidate an
entire rule with an incorrect value. This is less likely with many
browsers, however, because most of them are fairly tolerant of
mistakes in CSS: they'll just drop unrecognized
<a name="INDEX-140" />values
and use the rest of the declaration, instead of ignoring the whole
thing. (While this sounds like a polite thing to do, it unfortunately
makes it much easier for authors to pick up bad authoring habits.)
</p>

<p>In an instance where you can use more than one keyword for a
property's value, then the keywords are usually separated by
<a name="INDEX-141" />spaces. Not every property can accept
multiple
<a name="INDEX-142" />keywords,
but many can: for example, the <tt class="literal">font</tt> property.
Should you wish to define paragraphs to use medium-size Helvetica for
their text, then the rule would be as follows:
</p>

<blockquote><pre class="code">P {font: medium Helvetica;}</pre></blockquote>

<p>Note the space between <tt class="literal">medium</tt> and
<tt class="literal">Helvetica</tt>, each of which is a keyword (the first
for the font's size and the second for the actual font name, of
course). The space allows the user agent to distinguish between the
two keywords and apply them correctly. The final semicolon indicates
that the rule has been concluded.
</p>

<p>The reason we refer to these space-separated words as keywords is
that, taken together, they all form the value of the property in
question. For instance, consider the following fictional rule:
</p>

<blockquote><pre class="code">rainbow: red orange yellow green blue indigo violet;</pre></blockquote>

<p>There is no such property as <tt class="literal">rainbow</tt>, of course,
and many of the colors used aren't valid either, but it will be
useful for illustrative purposes. What we have is a case where the
value of <tt class="literal">rainbow</tt> is <tt class="literal">red</tt>
<tt class="literal">orange</tt> <tt class="literal">yellow</tt>
<tt class="literal">green</tt> <tt class="literal">blue</tt>
<tt class="literal">indigo</tt> <tt class="literal">violet</tt>. The seven
keywords add up to a single, unique value. We can redefine the value
for <tt class="literal">rainbow</tt> as follows:
</p>

<blockquote><pre class="code">rainbow: infrared red orange yellow green blue indigo violet ultraviolet;</pre></blockquote>

<p>Now we have a different value for <tt class="literal">rainbow</tt>, but
this time it's composed of nine keywords instead of seven.
Despite their seeming similarity, these two values are as unique and
different as the values zero and one.
</p>

<p>There are a few instances where keywords are separated by something
other than a space. <tt class="literal">font</tt><a name="INDEX-143" /> is an excellent
example of this, as it happens: there is exactly one place where a
<a name="INDEX-144" />
<a name="INDEX-145" />forward-slash (<tt class="literal">/</tt>)
can be used to separate two specific keywords. Here's an
example:
</p>

<blockquote><pre class="code">H2 {font: large/150% sans-serif;}</pre></blockquote>

<p>The slash separates the font size and the line-height. This is the
only place the slash can appear in the <tt class="literal">font</tt>
declaration. All of the other keywords allowed for
<tt class="literal">font</tt> are separated by spaces.
</p>

<p>That's basically all there is to simple declarations, just as
there wasn't much to say about simple selectors. We
aren't limited to such simple operations, though. In fact,
let's find out just how powerful CSS can<a name="INDEX-146" /> be.<a name="INDEX-147" /> <a name="INDEX-148" />
</p>

</div>
</div>




















<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch02_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">1.5. Summary</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">2.2. Grouping</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>