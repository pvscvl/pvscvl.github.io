<html><head><title>Units and Values (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_10.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch03_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />



<h1 class="chapter">Chapter 3. Units and Values</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch03_01.htm">Colors</a><br />
<a href="ch03_02.htm">Length Units</a><br />
<a href="ch03_03.htm">Percentage Values</a><br />
<a href="ch03_04.htm">URLs</a><br />
<a href="ch03_05.htm">CSS2 Units</a><br />
<a href="ch03_06.htm">Summary</a><br /></p></div>

<p>In this chapter, we study the basis for almost everything that can be
done in CSS: the units that affect the color used or the
<a name="INDEX-286" />distance set for a whole host of properties.
Without units, it wouldn't be possible to declare that a
paragraph should be purple, or that an image should have ten pixels
of blank space around it, or that a heading should be a certain size.
By understanding the concepts put forth here, you'll be able to
learn and use the rest of CSS much more quickly.
</p>

<p>However, that's the good news. The bad news is that this
chapter will contain a good many caveats, warnings, and discussions
of browser bugs and inconsistencies between operating systems.
Remember, though, that CSS is not supposed to be a totally precise
layout language -- and besides, many of the issues discussed in
the chapter are not the fault of CSS but are more fundamental issues
that you'll encounter no matter what you try to do with a
computer. So, once you've finished this chapter, you will have
a grasp not only of how CSS units work, but perhaps also of a few
basic issues that you previously were unaware of.
</p>

<p>Above all, though, regardless of how bleak things may seem, keep
going! Your perseverance will be rewarded.
</p>

<div class="sect1"><a name="css-CHP-3-SECT-1" />
<h2 class="sect1">3.1. Colors</h2>

<p><a name="INDEX-287" />Of
course, the one thing that almost every beginning web author wants to
know is, "How do I set colors on my web page?" Under
HTML, there were two choices: use one of a small number of colors
with names, like <tt class="literal">red</tt> or <tt class="literal">purple</tt>,
or employ a vaguely cryptic method using hexadecimal codes. Well,
both of those methods for describing colors can be found in CSS, as
well as some other methods that are only moderately complex.
</p>

<a name="css-CHP-3-SECT-1.1" /><div class="sect2">
<h3 class="sect2">3.1.1. Named Colors</h3>

<p>Assuming that you're happy with picking from a small, basic set
of colors, then the easiest method is to simply use the name of the
color you want. These are referred to, unsurprisingly enough, as
<a name="INDEX-288" />
<a name="INDEX-289" /><em class="emphasis">named
colors</em>.
</p>

<p>Contrary to what some browser companies might have you believe, you
are limited in the range of named colors available. For example,
setting a color to "mother-of-pearl" isn't going to
work, because it isn't a defined color. (Well, not yet, at any
rate.) Technically speaking, there are <em class="emphasis">no</em>
defined colors, but there are 16 colors that are suggested by the
specification and that all major browsers recognize:
</p>

<a name="ch03-2-fm2xml" /><table border="1">





<tr>
<td>
<p>aqua</p>
</td>
<td>
<p>gray</p>
</td>
<td>
<p>navy</p>
</td>
<td>
<p>silver</p>
</td>
</tr>
<tr>
<td>
<p>black</p>
</td>
<td>
<p>green</p>
</td>
<td>
<p>olive</p>
</td>
<td>
<p>teal</p>
</td>
</tr>
<tr>
<td>
<p>blue</p>
</td>
<td>
<p>lime</p>
</td>
<td>
<p>purple</p>
</td>
<td>
<p>white</p>
</td>
</tr>
<tr>
<td>
<p>fuchsia</p>
</td>
<td>
<p>maroon</p>
</td>
<td>
<p>red</p>
</td>
<td>
<p>yellow</p>
</td>
</tr>

</table>

<p>If these seem like odd color names, it's because -- well,
they are. In my opinion, anyway. So where do they come from? These
colors were taken from the original sixteen basic
<a name="INDEX-290" />Windows
<a name="INDEX-291" />VGA colors, and
browsers are supposed to generate colors that at least come close to
matching those original 16. They may be a fairly motley collection of
colors, but they're what we have.
</p>

<p>So let's say we want all first-level headings to be maroon. The
best declaration would be:
</p>

<blockquote><pre class="code">H1 {color: maroon;}</pre></blockquote>

<p>Simple, straightforward, and difficult to forget. It doesn't
get much better than that. Here are a few more examples:
</p>

<blockquote><pre class="code">H1 {color: gray;}
H2 {color: silver;}
H3 {color: black;}</pre></blockquote>

<p>Of course, you've probably seen (and maybe even used) color
names besides the ones listed earlier. For example, if you specify:
</p>

<blockquote><pre class="code">H1 {color: orange;}</pre></blockquote>

<p>you're likely to see all of your <tt class="literal">H1</tt> elements
colored orange, despite the fact <tt class="literal">orange</tt>
isn't on the list of named colors. This is due to the fact that
most web browsers recognize as many as 140 color names, including the
standard sixteen. There are two problems associated with using these
extra names, though. The first is that not all browsers will
recognize them; Opera, for example, sticks with the standard 16
colors, at least in the Opera 3.x series. Far from being a failure on
their part, this represents a remarkable commitment to standards
support, even though it might confuse or annoy many web designers.
</p>

<p>The second problem is a little more fundamental: there are no
standard color values for these names. Declaring that an element
should be colored <tt class="literal">orange</tt> doesn't mean that
different browsers, or even the same browser running on different
platforms, will produce exactly the same shade of orange. With the
sixteen standard colors, there is at least some hope that they will
appear as similar as possible, because the color values for these
sixteen are defined. Beyond those, all bets are off. Browsers may
implement similar shades for the same color name, or they may not;
the differences may be imperceptible to the eye, or so obvious that
they're almost jarring.
</p>

<a name="css-CHP-3-SIDEBAR-1" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">Reproducing Colors</h4>

<p>Consistent <a name="INDEX-292" />
<a name="INDEX-293" />color
reproduction is, as it happens, a major issue unto itself. As
we'll soon see, all colors can be specified in a consistent
manner, which would seem to solve the issue of whether two different
user agents will display the same color. In fact, the situation is
much more complicated. In the first place, human perception is
relative. The same color displayed on the same monitor may appear to
change due to changes in lighting, ambient brightness, adjacent
colors, and many other factors. You can experiment with this effect
simply by changing the background color of your computer's
desktop. The colors of your icons will appear to subtly shift as you
do so. </p> <p>In an attempt to address this situation,
displays such as monitors usually have a default <em class="filename">gamma
value</em><a name="INDEX-294" /> set; this is a factor that modifies colors
to account for display conditions. The gamma is typically set via the
operating system, although more expensive monitors may have their own
gamma settings. The problem is that different systems have different
gamma values. Thus, if you were to create a web page with a color
background and then display it on Windows and Macintosh machines side
by side under identical lighting conditions, the background color
would look different on each machine. This also crops up in graphics
created for the Web, in that graphics created on Windows machines
tend to appear darker to Macintosh users, whereas images created on a
Macintosh look lighter for Windows users. </p> <p>The situation
degrades even further when colors are printed, since factors as
diverse as the stock and color of the paper used, and even the
temperature of the printing mechanism, can affect how well colors are
reproduced on paper. </p> <p>In effect, this is yet another
area where you must remember that total control over document
appearance is simply not possible. In this case, it's due to a
combination of inconsistent operating system settings and the
vagaries of human perception, which is an obstacle no computer is
going to overcome any time soon. </p>

</td></tr></table></blockquote>

<p>It is left to individual authors to decide what chances they wish to
take with using named colors, but at least with the specified sixteen
colors, there is some moderate hope of consistency.
</p>

<p>Okay, so that was the easiest way to specify color -- scary as
that may seem, it's true. The other four ways are a bit more
complicated. The advantage is that with these methods, you can
specify any color in the 8-bit color spectrum, not just sixteen (or
however many) named colors. This is accomplished by taking advantage
of the way colors are generated by computers.
</p>

</div>
<a name="css-CHP-3-SECT-1.2" /><div class="sect2">
<h3 class="sect2">3.1.2. Colors by RGB</h3>

<p><a name="INDEX-295" />
<a name="INDEX-296" />Computers
create colors by combining different levels of red, green, and blue,
which is why color in computers is often referred to as
<em class="firstterm">RGB color</em>. In fact, if you were to open up a
computer monitor, or even a television, and you got far enough into
the projection tube, you would discover that there are three
"guns." (Remember, however, that actually looking for
these guns will pretty much void your monitor's warranty.)
These guns shoot out beams of light in varying levels of light and
dark, in one of the three RGB colors, at each point on the screen.
The brightnesses of each of these beams combine at each point to form
all of the colors you see on your screen. Each point, by the way, is
known as a <em class="filename">pixel</em><a name="INDEX-297" />, which is a term to which we'll
return later in the chapter.
</p>

<p>Given the way colors are created on a monitor, it makes sense that a
good way to let you set colors is to give you direct access to those
color levels, thereby determining your own mixture of the beams. This
method is a bit more complex, obviously, but the payoffs are worth it
because you aren't limited to whichever colors have been named.
</p>

<a name="css-CHP-3-SECT-1.2.1" /><div class="sect3">
<h3 class="sect3">3.1.2.1. Percentage colors</h3>

<p><a name="INDEX-298" />
<a name="INDEX-299" />There are, in fact, four ways to affect
RGB color. The first way we'll examine is perhaps the easiest
to grasp because it uses percentages. Here's an example:
</p>

<blockquote><pre class="code">rgb(100%,100%,100%)</pre></blockquote>

<p>This color declaration sets the level of red to its maximum, blue to
maximum, and green the same. These combine to create white, which is,
after all, the combination of all colors. Alternatively, in order to
specify black -- the absence of color -- all three would be set
to <tt class="literal">0%</tt>. Here are a few more color declarations:
</p>

<blockquote><pre class="code">H1 {color: rgb(0%,0%,0%);}          /*black*/
H2 {color: rgb(50%,50%,50%);}       /*medium gray*/
H3 {color: rgb(25%,66%,40%);}</pre></blockquote>

<p>The general syntax of this type of color value is:</p>

<blockquote><pre class="code">rgb(<em class="replaceable">color</em>)</pre></blockquote>

<p>where <em class="replaceable">color</em> is one of two ways to specify
the color. The first way is to use percentages, and the second, which
uses numbers, is discussed later in this section.
</p>

<p>Perhaps you want your <tt class="literal">H1</tt> elements to be colored a
shade of red somewhere between the values for red and maroon.
<tt class="literal">red</tt> is simply <tt class="literal">rgb(100%,0%,0%)</tt>,
whereas <tt class="literal">maroon</tt> is more like
<tt class="literal">(50%,0%,0%)</tt>. In order to get a color between those
two, you might try this:
</p>

<blockquote><pre class="code">H1 {color: rgb(75%,0%,0%);}</pre></blockquote>

<p>This makes the red component of the color lighter than that of
<tt class="literal">maroon</tt>, but darker than that of
<tt class="literal">red</tt>. If, on the other hand, you wished to create a
pale red color, then you would want to raise the other two values:
</p>

<blockquote><pre class="code">H1 {color: rgb(75%,50%,50%);}</pre></blockquote>

<p>The easiest way to visualize how these percentages correspond to
color is to create a table of gray values. Besides, grayscale
printing is all we can afford for this book, so that's what
we'll have to do:
</p>

<blockquote><pre class="code">P.one {color: rgb(0%,0%,0%);}
P.two {color: rgb(20%,20%,20%);}
P.three {color: rgb(60%,60%,60%);}
P.four {color: rgb(80%,80%,80%);}
P.five {color: rgb(100%,100%,100%);}</pre></blockquote>

<p><a href="ch03_01.htm">Figure 3-1</a> shows what the various percentage values
will yield.
</p>

<a name="css-CHP-3-FIG-1" /><div class="figure"><img height="145" alt="Figure 3-1" src="figs/css.0301.gif" width="177" /></div><h4 class="objtitle">Figure 3-1. Grayscale values</h4>

<p>Of course, since we're dealing in shades of gray, all three RGB
numbers are the same in each statement. If any one of them was
different from the others, then a color would start to emerge. If,
for example, <tt class="literal">rgb(50%,50%,50%)</tt> were modified to be
<tt class="literal">rgb(50%,50%,60%)</tt>, the result would be a medium
gray with just a hint of blue.
</p>

<p>The equivalents for the various rainbow primaries, plus a few others,
are presented in <a href="ch03_01.htm">Table 3-1</a>.
</p>

<a name="css-CHP-3-TABLE-1" /><h4 class="objtitle">Table 3-1. Numeric RGB Equivalents for Common Colors</h4><table border="1">



<tr>
<th>
<p>Color</p>
</th>
<th>
<p>Percentage Equivalent</p>
</th>
</tr>


<tr>
<td>
<p>red</p>
</td>
<td>
<p><tt class="literal">rgb(100%,0%,0%)</tt></p>
</td>
</tr>
<tr>
<td>
<p><a name="INDEX-300" />orange
</p>
</td>
<td>
<p><tt class="literal">rgb(100%,40%,0%)</tt></p>
</td>
</tr>
<tr>
<td>
<p>yellow</p>
</td>
<td>
<p><tt class="literal">rgb(100%,100%,0%)</tt></p>
</td>
</tr>
<tr>
<td>
<p>green</p>
</td>
<td>
<p><tt class="literal">rgb(0%,100%,0%)</tt></p>
</td>
</tr>
<tr>
<td>
<p>blue</p>
</td>
<td>
<p><tt class="literal">rgb(0%,0%,100%)</tt></p>
</td>
</tr>
<tr>
<td>
<p>indigo</p>
</td>
<td>
<p><tt class="literal">rgb(20%,0%,100%)</tt></p>
</td>
</tr>
<tr>
<td>
<p>violet</p>
</td>
<td>
<p><tt class="literal">rgb(80%,0%,100%)</tt></p>
</td>
</tr>
<tr>
<td>
<p>medium gray</p>
</td>
<td>
<p><tt class="literal">rgb(50%,50%,50%)</tt></p>
</td>
</tr>
<tr>
<td>
<p>dark gray</p>
</td>
<td>
<p><tt class="literal">rgb(20%,20%,20%)</tt></p>
</td>
</tr>
<tr>
<td>
<p>tan</p>
</td>
<td>
<p><tt class="literal">rgb(100%,80%,60%)</tt></p>
</td>
</tr>
<tr>
<td>
<p>gold</p>
</td>
<td>
<p><tt class="literal">rgb(100%,80%,0%)</tt></p>
</td>
</tr>
<tr>
<td>
<p>purple</p>
</td>
<td>
<p><tt class="literal">rgb(100%,0%,100%)</tt></p>
</td>
</tr>

</table>

<p>It is also possible, at least in theory, to use fractional values.
For example, you might want a color to be exactly 25.5% red, 40%
green, and 98.6% blue. Not a problem:
</p>

<blockquote><pre class="code">H2 {color: rgb(25.5%,40%,98.6%);}</pre></blockquote>

<p>Actually, there is a problem. Some user agents may not recognize
<a name="INDEX-301" />decimal values, and still others could
interpret them as if the decimal wasn't there, which would lead
them to think the preceding value is actually
<tt class="literal">rgb(255%,40%,986%)</tt>. In that case, assuming the
user agent behaves correctly, the out-of-range values will be
"clipped" to the nearest legal value -- in this case,
<tt class="literal">100%</tt>. Thus, a user agent which ignores the decimal
points should act as if the declared value is
<tt class="literal">rgb(100%,40%,100%)</tt>. Whether it does so is, of
course, another story altogether. Also, <a name="INDEX-302" />negative values
aren't allowed, so any value set to be less than
<tt class="literal">0%</tt> should be clipped to that amount. For example,
the following values would be clipped as demonstrated in <a href="ch03_01.htm">Figure 3-2</a>:
</p>

<blockquote><pre class="code">P.one {color: rgb(300%,4200%,110%);}
P.two {color: rgb(0%,-40%,-5000%);}</pre></blockquote>

<a name="css-CHP-3-FIG-2" /><div class="figure"><img height="49" alt="Figure 3-2" src="figs/css.0302.gif" width="171" /></div><h4 class="objtitle">Figure 3-2. Out-of-range values are clipped</h4>

</div>

<a name="css-CHP-3-SECT-1.2.2" /><div class="sect3">
<h3 class="sect3">3.1.2.2. Going by numbers</h3>

<p><a name="INDEX-303" />Closely related to percentages is a
<a name="INDEX-304" />
<a name="INDEX-305" />
method of setting color using raw numbers. These numbers are on a
scale from
to 255, where <tt class="literal">rgb(0,0,0)</tt> represents black and
<tt class="literal">rgb(255,255,255)</tt> represents white. Most of you
will recognize this number range from other sources: it's the
decimal equivalent of an 8-bit binary number. If you don't
recognize this, then it's enough to know that computers employ
binary values (on/off ) for everything, including representations of
numbers and colors, and 255 is one of the numbers that just naturally
fall out of that sort of setup.
</p>

<p>Anyway, this is almost exactly the same as setting percentage values:
only the scale is different, going up to <tt class="literal">255</tt>
instead of <tt class="literal">100%</tt>. Accordingly, the values in <a href="ch03_01.htm">Table 3-2</a> correspond to our usual list of colors.
</p>

<a name="css-CHP-3-TABLE-2" /><h4 class="objtitle">Table 3-2. Numeric RGB Equivalents for Common Colors</h4><table border="1">



<tr>
<th>
<p>Color</p>
</th>
<th>
<p>Numeric RGB Equivalent</p>
</th>
</tr>


<tr>
<td>
<p>red</p>
</td>
<td>
<p><tt class="literal">rgb(255,0,0)</tt></p>
</td>
</tr>
<tr>
<td>
<p><a name="INDEX-306" />orange
</p>
</td>
<td>
<p><tt class="literal">rgb(255,102,0)</tt></p>
</td>
</tr>
<tr>
<td>
<p>yellow</p>
</td>
<td>
<p><tt class="literal">rgb(255,255,0)</tt></p>
</td>
</tr>
<tr>
<td>
<p>green</p>
</td>
<td>
<p><tt class="literal">rgb(0,255,0)</tt></p>
</td>
</tr>
<tr>
<td>
<p>blue</p>
</td>
<td>
<p><tt class="literal">rgb(0,0,255)</tt></p>
</td>
</tr>
<tr>
<td>
<p>indigo</p>
</td>
<td>
<p><tt class="literal">rgb(51,0,255)</tt></p>
</td>
</tr>
<tr>
<td>
<p>violet</p>
</td>
<td>
<p><tt class="literal">rgb(204,0,255)</tt></p>
</td>
</tr>
<tr>
<td>
<p>medium gray</p>
</td>
<td>
<p><tt class="literal">rgb(128,128,128)</tt></p>
</td>
</tr>
<tr>
<td>
<p>dark gray</p>
</td>
<td>
<p><tt class="literal">rgb(51,51,51)</tt></p>
</td>
</tr>
<tr>
<td>
<p>tan</p>
</td>
<td>
<p><tt class="literal">rgb(255,204,153)</tt></p>
</td>
</tr>
<tr>
<td>
<p>gold</p>
</td>
<td>
<p><tt class="literal">rgb(255,204,0)</tt></p>
</td>
</tr>
<tr>
<td>
<p>purple</p>
</td>
<td>
<p><tt class="literal">rgb(255,0,255)</tt></p>
</td>
</tr>

</table>

<p>As expected, any value outside the range of
-255 is clipped, just as with percentages -- although in this
case, of course, the values are clipped to <tt class="literal">0</tt> and
<tt class="literal">255</tt>:
</p>

<blockquote><pre class="code">H1 {color: rgb(0,0,0);}                /* black */
H2 {color: rgb(127,127,127);}          /* gray */
H3 {color: rgb(255,255,255);}          /* white */
P.one {color: rgb(300,2500,101);}      /* white */
P.two {color: rgb(-10,-450,-2);}       /* black */</pre></blockquote>

<p>If you prefer percentages, you can use them, and it's actually
easy to convert between percentages and straight numbers. If you know
the percentages for each of the RGB levels you want, then you need
only apply them to the number 255 to get the resulting values.
Let's say you have a color of 25% red, 37.5% green, and 60%
blue. Multiplying each of those percentages by 255, we get 63.75,
95.625, and 153. We need to round those off to
<tt class="literal">rgb(64,96,153)</tt>, however, because only integers
(whole numbers) are permitted when using numbers. Percentages can
have decimals, but these numbers can't.
</p>

<p>Of course, if you already know the percentages, there isn't
much point in converting them into straight numbers. This notation is
more useful for people who use programs such as Photoshop, which
produce such color values, or for those who are familiar enough with
the technical details of color generation to already think in terms
of 0-255 values.
</p>

<p>Then again, such people are probably more familiar with thinking in
hexadecimal notation, which is what we turn to next.
</p>

</div>

<a name="css-CHP-3-SECT-1.2.3" /><div class="sect3">
<h3 class="sect3">3.1.2.3. Hexadecimal colors</h3>

<p><a name="INDEX-307" />
<a name="INDEX-308" />If you've done any web authoring in
the past and have ever set a color in the course of that authoring,
then this part will be a snap. You can set a color using the same
hexadecimal notation so familiar to web authors:
</p>

<blockquote><pre class="code">H1 {color: #FF0000;}   /* set H1's to red */
H2 {color: #903BC0;}   /* set H2's to a dusky purple */
H3 {color: #000000;}   /* set H3's to be black */
H4 {color: #808080;}   /* set H4's to be medium gray */</pre></blockquote>

<p>If you aren't familiar with this notation, here's a quick
primer. First, <em class="firstterm">hexadecimal</em> means base-16
counting, so the basic unit is groups of 16, not the groups of 10 to
which we're accustomed. In hexadecimal numbering, the valid
digits are <tt class="literal">0</tt> through <tt class="literal">9</tt> and
<tt class="literal">A</tt> through <tt class="literal">F</tt>. Once you've
reached <tt class="literal">F</tt>, the next number is 10. Thus, a child
learning to count in hex would learn this basic progression:
</p>

<blockquote><pre class="code">00, 01, 02, 03, 04, 05, 06, 07, 08, 09, 0A, 0B, 0C, 0D, 0E, 0F,
10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1A, 1B, 1C, 1D, 1E, 1F,
20, 21, 22, 23, ...</pre></blockquote>

<p>I realize that it may be a bit weird to think of letters as numbers,
but that's how it works in hex. The digits <tt class="literal">A</tt>
through <tt class="literal">F</tt> are actually just symbols -- they
could have been anything. Someone just decided that letters would be
easier to remember than invented symbols... plus nobody would have to
invent new names for letters.
</p>

<p>How this corresponds to our regular decimal (base 10) numbering is
fairly straightforward. <tt class="literal">05</tt> is equal to 5,
<tt class="literal">0C</tt> is equal to 12, <tt class="literal">0F</tt> is the
same as 15, and <tt class="literal">10</tt> is equal to 16. No, really.
<tt class="literal">1F</tt> is equal to 31, <tt class="literal">20</tt> to 32,
and so on. It goes like this:
</p>

<blockquote><pre class="code">01, 02, 03, 04, 05, 06, 07, 08, 09, 0A, 0B, 0C, 0D, 0E, 0F,
01, 02, 03, 04, 05, 06 ,07, 08, 09, 10, 11, 12, 13, 14, 15, 16,

10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1A, 1B, 1C, 1D, 1E, 1F,
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,

20, 21, 22, 23, ...
33, 34, 35, 36, ...</pre></blockquote>

<p>Computers have been using hex notation for quite some time now, and
typically programmers either are trained in its use or pick it up
through experience. Either way, most programmers are comfortable with
hex notation -- some of them even think in it -- and so
it's part of the CSS specification. Why? Because the
specification was written and edited by programmers. It makes sense
that they'd put in color schemes to which they could relate.
</p>

<p>So, by stringing together three hex pairs, you can set a color. A
more generic description of this method is:
</p>

<blockquote><pre class="code">#RRGGBB</pre></blockquote>

<p>Viewed in this way, the hex-pair method is a lot like the method we
previously discussed -- the one involving numbers from
to 255. In fact, 255 in decimal is equivalent to
<tt class="literal">FF</tt> in hexadecimal, which explains a lot about how
this method works. It's really the same as the last method: it
just uses a different number system. If you have to pick between the
two, use whichever makes you more comfortable.
</p>

<p>So, similar to the way you can specify a color using three numbers
from
to 255, you can specify one using three hex pairs. If you have a
calculator that converts between decimal and hexadecimal, then making
the jump should be pretty simple. If not, it might be a little more
complicated. (Of course, you could just not use this method, but that
would be too easy.)
</p>

<p>Once again, we present some color equivalents in <a href="ch03_01.htm">Table 3-3</a>.
</p>

<a name="css-CHP-3-TABLE-3" /><h4 class="objtitle">Table 3-3. Hexadecimal Equivalents for Common Colors</h4><table border="1">



<tr>
<th>
<p>Color</p>
</th>
<th>
<p>Hexadecimal Equivalent</p>
</th>
</tr>


<tr>
<td>
<p>red</p>
</td>
<td>
<p><tt class="literal">#FF0000</tt></p>
</td>
</tr>
<tr>
<td>
<p><a name="INDEX-309" />orange
</p>
</td>
<td>
<p><tt class="literal">#FF6600</tt></p>
</td>
</tr>
<tr>
<td>
<p>yellow</p>
</td>
<td>
<p><tt class="literal">#FFFF00</tt></p>
</td>
</tr>
<tr>
<td>
<p>green</p>
</td>
<td>
<p><tt class="literal">#00FF00</tt></p>
</td>
</tr>
<tr>
<td>
<p>blue</p>
</td>
<td>
<p><tt class="literal">#0000FF</tt></p>
</td>
</tr>
<tr>
<td>
<p>indigo</p>
</td>
<td>
<p><tt class="literal">#3300FF</tt></p>
</td>
</tr>
<tr>
<td>
<p>violet</p>
</td>
<td>
<p><tt class="literal">#CC00FF</tt></p>
</td>
</tr>
<tr>
<td>
<p>medium gray</p>
</td>
<td>
<p><tt class="literal">#808080</tt></p>
</td>
</tr>
<tr>
<td>
<p>dark gray</p>
</td>
<td>
<p><tt class="literal">#333333</tt></p>
</td>
</tr>
<tr>
<td>
<p>tan</p>
</td>
<td>
<p><tt class="literal">#FFCC99</tt></p>
</td>
</tr>
<tr>
<td>
<p>gold</p>
</td>
<td>
<p><tt class="literal">#FFCC00</tt></p>
</td>
</tr>
<tr>
<td>
<p>purple</p>
</td>
<td>
<p><tt class="literal">#FF00FF</tt></p>
</td>
</tr>

</table>

<p>Believe it or not, though, there's a way to set colors that
involves even fewer keystrokes.
</p>

</div>

<a name="css-CHP-3-SECT-1.2.4" /><div class="sect3">
<h3 class="sect3">3.1.2.4. Short hexadecimal colors</h3>

<p><a name="INDEX-310" />Now,
finally, the last method. Again, let's look at an example and
then explain it:
</p>

<blockquote><pre class="code">H1 {color: #000;}   /* set H1s to be black */
H2 {color: #666;}   /* set H2s to be dark gray */
H3 {color: #FFF;}   /* set H3s to be white */</pre></blockquote>

<p>As you can see from the markup, there are only three digits in each
color value. However, since hexadecimal numbers between
<tt class="literal">00</tt> and <tt class="literal">FF</tt> need two digits each,
and we only have three digits total, how does this method work?
</p>

<p>The answer is that the browser takes each digit and replicates it.
Therefore, <tt class="literal">#F00</tt> would be equivalent to
<tt class="literal">#FF0000</tt>  -- and it's as simple as that.
Otherwise, this method is the same as the <tt class="literal">#RRGGBB</tt>
method we just discussed, only shorter. <tt class="literal">#6FA</tt> would
be the same as <tt class="literal">#66FFAA</tt>, and
<tt class="literal">#FFF</tt> would come out <tt class="literal">#FFFFFF</tt>,
which is the same as <tt class="literal">white</tt>. This approach is
sometimes called <em class="emphasis">shorthand hex
notation</em><a name="INDEX-311" />.
</p>

<p>One thing to watch out for is that with the hexadecimal methods,
unlike the numeric methods, there are no defined clipping methods for
the hex-pair systems. If you enter an invalid value, the
browser's response could be unpredictable. A well-written
browser will perform clipping so that out-of-range values are assumed
to be whichever limit they exceed, but you can't necessarily
count on this. As an example, Netscape Navigator 4.x will not ignore
or clip an invalid color value, but will instead perform some sort of
magic translation to yield a totally unexpected color.<a name="INDEX-312" /> <a name="INDEX-313" />
</p>

</div>

<a name="css-CHP-3-SECT-1.2.5" /><div class="sect3">
<h3 class="sect3">3.1.2.5. Bringing the colors together</h3>

<p><a href="ch03_01.htm">Table 3-4</a> presents an overview of the colors
we've discussed. Italicized color names are those that can be
legally used as values of a color declaration. Those without italics
might not be recognized by browsers and therefore should be defined
with either RGB or hexadecimal values ( just to be safe). In
addition, there are some shortened hexadecimal values that do not
appear at all. In these cases, the longer (6-digit) values cannot be
shortened, because they do not replicate. For example, the value
<tt class="literal">#880</tt> expands to <tt class="literal">#888800</tt>, not
<tt class="literal">#808000</tt> (otherwise known as
<tt class="literal">olive</tt>). Therefore, there is no shortened version
of <tt class="literal">#808000</tt>, and the appropriate entry in the table
is left blank.
</p>

<a name="css-CHP-3-TABLE-4" /><h4 class="objtitle">Table 3-4. Color Equivalents</h4><table border="1">






<tr>
<th>
<p>Color</p>
</th>
<th>
<p>Percentage</p>
</th>
<th>
<p>Numeric</p>
</th>
<th>
<p>Hex Pair</p>
</th>
<th>
<p>Short Hex</p>
</th>
</tr>


<tr>
<td>
<p><em class="emphasis">red</em></p>
</td>
<td>
<p><tt class="literal">rgb(100%,0%,0%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(255,0,0)</tt></p>
</td>
<td>
<p><tt class="literal">#FF0000</tt></p>
</td>
<td>
<p><tt class="literal">#F00</tt></p>
</td>
</tr>
<tr>
<td>
<p><a name="INDEX-314" />orange
</p>
</td>
<td>
<p><tt class="literal">rgb(100%,40%,0%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(255,102,0)</tt></p>
</td>
<td>
<p><tt class="literal">#FF6600</tt></p>
</td>
<td>
<p><tt class="literal">#F60</tt></p>
</td>
</tr>
<tr>
<td>
<p><em class="emphasis">yellow</em></p>
</td>
<td>
<p><tt class="literal">rgb(100%,100%,0%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(255,255,0)</tt></p>
</td>
<td>
<p><tt class="literal">#FFFF00</tt></p>
</td>
<td>
<p><tt class="literal">#FF0</tt></p>
</td>
</tr>
<tr>
<td>
<p><em class="emphasis">green</em></p>
</td>
<td>
<p><tt class="literal">rgb(0%,100%,0%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(0,255,0)</tt></p>
</td>
<td>
<p><tt class="literal">#00FF00</tt></p>
</td>
<td>
<p><tt class="literal">#0F0</tt></p>
</td>
</tr>
<tr>
<td>
<p><em class="emphasis">blue</em></p>
</td>
<td>
<p><tt class="literal">rgb(0%,0%,100%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(0,0,255)</tt></p>
</td>
<td>
<p><tt class="literal">#0000FF</tt></p>
</td>
<td>
<p><tt class="literal">#00F</tt></p>
</td>
</tr>
<tr>
<td>
<p>indigo</p>
</td>
<td>
<p><tt class="literal">rgb(20%,0%,100%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(51,0,255)</tt></p>
</td>
<td>
<p><tt class="literal">#3300FF</tt></p>
</td>
<td>
<p><tt class="literal">#30F</tt></p>
</td>
</tr>
<tr>
<td>
<p>violet</p>
</td>
<td>
<p><tt class="literal">rgb(80%,0%,100%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(204,0,255)</tt></p>
</td>
<td>
<p><tt class="literal">#CC00FF</tt></p>
</td>
<td>
<p><tt class="literal">#C0F</tt></p>
</td>
</tr>
<tr>
<td>
<p>aqua</p>
</td>
<td>
<p><tt class="literal">rgb(0%,100%,100%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(0,255,255)</tt></p>
</td>
<td>
<p><tt class="literal">#00FFFF</tt></p>
</td>
<td>
<p><tt class="literal">#0FF</tt></p>
</td>
</tr>
<tr>
<td>
<p><em class="emphasis">black</em></p>
</td>
<td>
<p><tt class="literal">rgb(0%,0%,0%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(0,0,0)</tt></p>
</td>
<td>
<p><tt class="literal">#000000</tt></p>
</td>
<td>
<p><tt class="literal">#000</tt></p>
</td>
</tr>
<tr>
<td>
<p><em class="emphasis">fuschia</em></p>
</td>
<td>
<p><tt class="literal">rgb(100%,0%,100%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(255,0,255)</tt></p>
</td>
<td>
<p><tt class="literal">#FF00FF</tt></p>
</td>
<td>
<p><tt class="literal">#F0F</tt></p>
</td>
</tr>
<tr>
<td>
<p><em class="emphasis">gray</em></p>
</td>
<td>
<p><tt class="literal">rgb(50%,50%,50%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(128,128,128)</tt></p>
</td>
<td>
<p><tt class="literal">#808080</tt></p>
</td>
<td>

</td>
</tr>
<tr>
<td>
<p><em class="emphasis">lime</em></p>
</td>
<td>
<p><tt class="literal">rgb(0%,100%,0%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(0,255,0)</tt></p>
</td>
<td>
<p><tt class="literal">#00FF00</tt></p>
</td>
<td>
<p><tt class="literal">#0F0</tt></p>
</td>
</tr>
<tr>
<td>
<p><em class="emphasis">maroon</em></p>
</td>
<td>
<p><tt class="literal">rgb(50%,0%,0%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(128,0,0)</tt></p>
</td>
<td>
<p><tt class="literal">#800000</tt></p>
</td>
<td>

</td>
</tr>
<tr>
<td>
<p><em class="emphasis">navy</em></p>
</td>
<td>
<p><tt class="literal">rgb(0%,0%,50%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(0,0,128)</tt></p>
</td>
<td>
<p><tt class="literal">#000080</tt></p>
</td>
<td>

</td>
</tr>
<tr>
<td>
<p><em class="emphasis">olive</em></p>
</td>
<td>
<p><tt class="literal">rgb(50%,50%,0%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(128,128,0)</tt></p>
</td>
<td>
<p><tt class="literal">#808000</tt></p>
</td>
<td>

</td>
</tr>
<tr>
<td>
<p><em class="emphasis">purple</em></p>
</td>
<td>
<p><tt class="literal">rgb(50%,0%,50%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(128,0,128)</tt></p>
</td>
<td>
<p><tt class="literal">#800080</tt></p>
</td>
<td>

</td>
</tr>
<tr>
<td>
<p><em class="emphasis">silver</em></p>
</td>
<td>
<p><tt class="literal">rgb(75%,75%,75%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(192,192,192)</tt></p>
</td>
<td>
<p><tt class="literal">#C0C0C0</tt></p>
</td>
<td>

</td>
</tr>
<tr>
<td>
<p><em class="emphasis">teal</em></p>
</td>
<td>
<p><tt class="literal">rgb(0%,50%,50%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(0,128,128)</tt></p>
</td>
<td>
<p><tt class="literal">#008080</tt></p>
</td>
<td>

</td>
</tr>
<tr>
<td>
<p><em class="emphasis">white</em></p>
</td>
<td>
<p><tt class="literal">rgb(100%,100%,100%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(255,255,255)</tt></p>
</td>
<td>
<p><tt class="literal">#FFFFFF</tt></p>
</td>
<td>
<p><tt class="literal">#FFF</tt></p>
</td>
</tr>
<tr>
<td>
<p>dark gray</p>
</td>
<td>
<p><tt class="literal">rgb(20%,20%,20%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(51,51,51)</tt></p>
</td>
<td>
<p><tt class="literal">#333333</tt></p>
</td>
<td>
<p><tt class="literal">#333</tt></p>
</td>
</tr>
<tr>
<td>
<p>tan</p>
</td>
<td>
<p><tt class="literal">rgb(100%,80%,60%)</tt></p>
</td>
<td>
<p><tt class="literal">rgb(255,204,153)</tt></p>
</td>
<td>
<p><tt class="literal">#FFCC99</tt></p>
</td>
<td>
<p><tt class="literal">#FC9</tt></p>
</td>
</tr>

</table>

</div>

<a name="css-CHP-3-SECT-1.2.6" /><div class="sect3">
<h3 class="sect3">3.1.2.6. Web-safe colors</h3>

<p><a name="INDEX-315" />
<a name="INDEX-316" />You may
recall the earlier discussion about how colors aren't always
the same across different operating systems, user agents, and so
forth. There is one way to partially beat this problem, although once
again it means restricting your color choices. There is a set of 216
colors that are considered "web-safe," which means they
should look the same on all computers and browsers, without any
dithering or color-shifting. Note that I say
"should" -- this is not a guarantee. It generally
seems to work, however.
</p>

<p>Web-safe colors are those colors that are expressed in multiples of
the RGB values <tt class="literal">20%</tt> and <tt class="literal">51</tt>, and
the corresponding hex-pair value <tt class="literal">33</tt>. Also,
<tt class="literal">0%</tt> or <tt class="literal">0</tt> is a safe value. So, if
you use RGB percentages, then make all three values either
<tt class="literal">0%</tt> or a number divisible by 20; for example,
<tt class="literal">rgb(40%,100%,80%)</tt> or
<tt class="literal">rgb(60%,0%,0%)</tt>. If you use RGB values on the 0-255
scale, then values should be either <tt class="literal">0</tt> or divisible
by <tt class="literal">51</tt>, as in <tt class="literal">rgb(0,204,153)</tt> or
<tt class="literal">rgb(255,0,102)</tt>.
</p>

<p>With hex pairs, the appropriate values are <tt class="literal">00</tt>,
<tt class="literal">33</tt>, <tt class="literal">66</tt>, <tt class="literal">99</tt>,
<tt class="literal">CC</tt>, and <tt class="literal">FF</tt>. Any hex-pair
triplet using those values in any combination is considered to be
web-safe. Examples are <tt class="literal">#669933</tt>,
<tt class="literal">#00CC66</tt>, and <tt class="literal">#FF00FF</tt>. This
means the shorthand hex values that are web-safe are
<tt class="literal">0</tt>, <tt class="literal">3</tt>, <tt class="literal">6</tt>,
<tt class="literal">9</tt>, <tt class="literal">C</tt>, and <tt class="literal">F</tt>;
therefore, <tt class="literal">#693</tt>, <tt class="literal">#0C6</tt>, and
<tt class="literal">#F0F</tt> are examples of web-safe colors.
</p>

<p>Wow! Who knew there were so many ways to define a color? I'll
bet you'll never look at a rainbow in quite the same way again.
Now, let's move on to units that really measure<a name="INDEX-317" /> <a name="INDEX-318" /> up.<a name="INDEX-319" />
</p>

</div>
</div>
</div>












<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_10.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch03_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">2.10. Summary</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">3.2. Length Units</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>