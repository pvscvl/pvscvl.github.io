<html><head><title>Class and ID Selectors (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch02_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">2.3. Class and ID Selectors</h2>

<p>So far, we've been grouping selectors and declarations together
in a variety of ways, but for all that, the selectors we've
been using are very simple ones. They only refer to document
elements, and while that's often just what you need, there are
times when something a little more specialized is required.
</p>

<p>In addition to raw document elements, there are two other kinds of
selectors: <em class="filename">class</em><a name="INDEX-167" />
<a name="INDEX-168" />
and <em class="filename">ID</em><a name="INDEX-169" />
<a name="INDEX-170" />
selectors, which allow the assignment of styles in a way that is
independent of document elements. These selectors can be used on
their own or in conjunction with element selectors. However, they
only work if you've marked up your document appropriately, so
using them generally involves a little forethought and planning.
</p>

<p><a name="INDEX-171" />Of
course, you probably want to know why you should go to the effort.
What will it get you? Let's consider a document about the
handling of plutonium, in which there are various warnings on things
to do (or not do) while working with such a dangerous substance. You
want to make each warning use boldface text so that it will stand out
from everything else.
</p>

<p>However, you don't know what kind of elements these warnings
will be. Sometimes there will be a whole paragraph of warning text,
but other times there might be a single warning list item out of a
lengthy list, or just a given section of a paragraph. In any case,
you can't define a rule using simple selectors of any kind. If
you did this:
</p>

<blockquote><pre class="code">P {font-weight: bold;}</pre></blockquote>

<p>then <em class="emphasis">all</em> paragraphs will be bold, not just those
that contain warnings. You need a way to only select the paragraphs
that are warnings, or more precisely, a way to select only those
<em class="emphasis">elements</em> that are warnings.
</p>

<p>Another scenario involves ways of styling different kinds of links.
You might wish to set a different color for links that point to pages
not found on your site. Once more, you can't just write:
</p>

<blockquote><pre class="code">A {color: maroon;}</pre></blockquote>

<p>because that will select <em class="emphasis">all</em> anchors, regardless
of whether they point to pages on your site or off it.
</p>

<p>So what we need is a way to apply styles to parts of the document
that have been marked in a certain way, independent of the elements
involved -- and that's just what CSS gives us.
</p>

<a name="css-CHP-2-SECT-3.1" /><div class="sect2">
<h3 class="sect2">2.3.1. Class Selectors</h3>

<p><a name="INDEX-172" /> <a name="INDEX-173" />The
most common way to apply styles without worrying about the elements
involved is to use <em class="filename">class selectors</em>. Before you
can use them, however, you need to modify your actual document markup
so that the class selectors will work. Why? Since we aren't
going to be selecting according to the elements, we need something
else to grab onto. Enter the <tt class="literal">CLASS</tt> attribute:
</p>

<blockquote><pre class="code">&lt;P CLASS="warning"&gt;While handling plutonium, care must be taken to avoid 
the formation of a critical mass.&lt;/P&gt;
&lt;P&gt;During this step, &lt;SPAN CLASS="warning"&gt;the possibility of implosion is
very real, and must be avoided at all costs&lt;/SPAN&gt;. This can be accomplished 
by keeping the various masses separate...&lt;/P&gt;</pre></blockquote>

<p>In order to associate the styles of a class selector to an element,
that element must have the appropriate value set to a
<tt class="literal">CLASS</tt><a name="INDEX-174" /> <a name="INDEX-175" />
attribute. In the previous code, we've assigned a class value
of <tt class="literal">warning</tt> to two elements: the first paragraph
and the <tt class="literal">SPAN</tt> element in the second paragraph.
</p>

<p>All we need now is a way to apply styles to these classed elements.
Here it is:
</p>

<blockquote><pre class="code">.warning {font-weight: bold;}</pre></blockquote>

<p>That simple rule will have the effect shown in <a href="ch02_03.htm">Figure 2-8</a>, when combined with the example markup shown
earlier. In fact, given the style sheet shown, the style of
<tt class="literal">font-weight:</tt> <tt class="literal">bold</tt> will be
applied to <em class="emphasis">any</em> element with a
<tt class="literal">CLASS</tt> attribute with a value of
<tt class="literal">warning</tt>.
</p>

<a name="css-CHP-2-FIG-8" /><div class="figure"><img height="88" alt="Figure 2-8" src="figs/css.0208.gif" width="395" /></div><h4 class="objtitle">Figure 2-8. Results of using a class selector</h4>

<p>As you can see, the class selector works by directly referencing a
value that will be found in the <tt class="literal">class</tt> attribute of
an element. This reference is <em class="emphasis">always</em> preceded by
a <a name="INDEX-176" />
<a name="INDEX-177" />period (<tt class="literal">.</tt>), which
marks it as a class selector. The period is necessary because it
helps keep the class selector separate from anything with which it
might be combined -- like an element selector. For example, maybe
we only want boldface text when an entire paragraph is a warning.
Thus:
</p>

<blockquote><pre class="code">P.warning {font-weight: bold;}</pre></blockquote>

<p>As you can see in <a href="ch02_03.htm">Figure 2-9</a>, only the first
paragraph is bold, whereas the text in the second paragraph is no
longer bold, because it no longer matches the <tt class="literal">SPAN</tt>
element. The simplest way to translate the selector
<tt class="literal">P.warning</tt> is like this: "Any paragraph whose
<tt class="literal">CLASS</tt> attribute has a value of
<tt class="literal">warning</tt> will take the following styles."
Since the <tt class="literal">SPAN</tt> element is not a paragraph, the
rule's selector doesn't match, and so its text is not
made bold.
</p>

<a name="css-CHP-2-FIG-9" /><div class="figure"><img height="89" alt="Figure 2-9" src="figs/css.0209.gif" width="385" /></div><h4 class="objtitle">Figure 2-9. Combining a class selector with an element selector</h4>

<p>Of course, you could use the selector <tt class="literal">SPAN.warning</tt>
to assign different styles to that element. See <a href="ch02_03.htm">Figure 2-10</a> for the results of these styles:
</p>

<blockquote><pre class="code">P.warning {font-weight: bold;}
SPAN.warning {font-style: italic;}</pre></blockquote>

<a name="css-CHP-2-FIG-10" /><div class="figure"><img height="88" alt="Figure 2-10" src="figs/css.0210.gif" width="395" /></div><h4 class="objtitle">Figure 2-10. Making selectors more specific</h4>

<p>In this case, the warning paragraph is boldfaced, while the warning
<tt class="literal">SPAN</tt> is italicized. Each rule applies only to a
specific type of element-class combination, and so does not
"leak over" to other elements.
</p>

<p>In addition, you could use a combination of a general class selector
and an element-specific class selector to make the styles even more
useful, as shown in <a href="ch02_03.htm">Figure 2-11</a>:
</p>

<blockquote><pre class="code">.warning {font-style: italic;}
SPAN.warning {font-weight: bold;}</pre></blockquote>

<a name="css-CHP-2-FIG-11" /><div class="figure"><img height="96" alt="Figure 2-11" src="figs/css.0211.gif" width="418" /></div><h4 class="objtitle">Figure 2-11. Using generic and specific selectors to combine
styles</h4>

<p>Now we have a situation where any warning text will be italic, but
<a name="INDEX-178" />
<a name="INDEX-179" /> 
only text within a <tt class="literal">SPAN</tt> element with a
<tt class="literal">class</tt> of <tt class="literal">warning</tt> will be
boldface as well.<a name="INDEX-180" />
</p>

</div>
<a name="css-CHP-2-SECT-3.2" /><div class="sect2">
<h3 class="sect2">2.3.2. ID Selectors</h3>

<p>In many ways, <a name="INDEX-181" />
<a name="INDEX-182" />ID
selectors are just like class selectors -- but there are a few
crucial differences. The first difference is the fact that ID
selectors are preceded by an <a name="INDEX-183" /> <a name="INDEX-184" />octothorpe
(<tt class="literal">#</tt>) -- otherwise known as a
<a name="INDEX-185" />
<a name="INDEX-186" />pound sign, hash mark,
or tic-tac-toe board -- instead of a period. Thus, you might see a
rule like this one:
</p>

<blockquote><pre class="code">#first-para {font-weight: bold;}</pre></blockquote>

<p>This will apply boldface text to any element whose
<tt class="literal">ID</tt> attribute has a value of
<tt class="literal">first-para</tt>.
</p>

<p>That's the second difference: instead of referencing values of
the <tt class="literal">CLASS</tt> attribute, ID selectors refer to values
found in <tt class="literal">ID</tt><a name="INDEX-187" /> attributes. This likely does not
come as a surprise to you. Here's an example of an ID selector
in action:
</p>

<blockquote><pre class="code">#first-para {font-weight: bold;}

&lt;P ID="first-para"&gt;This is the first paragraph, and will be boldfaced.&lt;/P&gt;
&lt;P&gt;This is the second paragraph, which will NOT be bold.&lt;/P&gt;</pre></blockquote>

<p>As <a href="ch02_03.htm">Figure 2-12</a> shows, the paragraphs are rendered
just as the text within describes: the first is boldfaced, whereas
the second is not.
</p>

<a name="css-CHP-2-FIG-12" /><div class="figure"><img height="42" alt="Figure 2-12" src="figs/css.0212.gif" width="302" /></div><h4 class="objtitle">Figure 2-12. Using an ID selector</h4>

<p>Note that the value <tt class="literal">first-para</tt> didn't have
to be applied to a paragraph. It could have been assigned to any
element within the document.
</p>

</div>
<a name="css-CHP-2-SECT-3.3" /><div class="sect2">
<h3 class="sect2">2.3.3. Class? ID? What's the Difference?</h3>

<p><a name="INDEX-188" /> <a name="INDEX-189" />Up until now, we've been using
both class and ID selectors in very similar ways. In effect,
we've been using both to usurp the structural nature of HTML,
since styles can be applied to any element, regardless of its
function in the structure of the document. This is not generally
recommended, since one could in theory use class and ID selectors to
make any element behave like any other element, which runs somewhat
counter to the purpose of HTML as a structural language. But all this
aside, what's the difference between classes and IDs?
</p>

<p>In the first place, classes may be assigned to any number of
elements, as we saw earlier -- the class
<tt class="literal">warning</tt> was applied to both a paragraph and some
<tt class="literal">SPAN</tt> text, and it could have been applied to many
more elements. IDs, on the other hand, are supposed to be used once,
and only once, within an HTML document. In this way, they're
somewhat similar to the values of the attribute
<tt class="literal">NAME</tt> in form elements like
<tt class="literal">INPUT</tt>. Each value of <tt class="literal">NAME</tt>
should be unique, and so it is with IDs.
</p>

<a name="ch02-11-fm2xml" /><blockquote><h4>TIP</h4>
<p>In the real world, browsers don't usually check for the
uniqueness of IDs in HTML, which means that if you sprinkle an HTML
document with several elements, all of which have the same value for
their ID attributes, you'll probably get the same styles
applied to each. This isn't correct behavior, but it happens
anyway. Note, by the way, that I was careful to say that this is
incorrect for HTML documents. Other markup languages may not have the
same restrictions on ID values, although there's no way to know
that until you actually go look at a given language's
specification. In HTML, it is forbidden to have ID values that are
identical to other IDs within the same document.
</p>
</blockquote>

<p>The other difference between class and ID is that IDs carry a higher
weight when trying to determine which styles should be applied to a
given element. This is explained in greater detail in 
 <a href="ch02_08.htm">Section 2.8, "The Cascade"</a>, later in this chapter.
</p>

<p>Like classes, IDs can also be declared independently of an element,
although since they are supposed to be unique anyway, this generally
makes less sense. Still, there may be circumstances in which you know
that a certain ID value will appear in a document, but not the
element on which it will appear, so it is useful to be able to
declare standalone ID selectors. For example, you may know that in
any given document, there will be an element with an ID value of
<tt class="literal">mostImportant</tt>. You don't know whether that
most important thing will be a paragraph, a short phrase, a list
item, or a section heading. You know only that it will exist in each
document, that it will be on an arbitrary element, and that it will
appear no more than once in a given document. In that case, you would
write a rule like this:
</p>

<blockquote><pre class="code">#mostImportant {color: red; background: yellow;}</pre></blockquote>

<p>This rule would match any of the following elements (which, as noted
before, should <em class="emphasis">not</em> appear together in the same
document, because they all have the same ID value):
</p>

<a name="INDEX-190" /><a name="INDEX-191" /><blockquote><pre class="code">&lt;H1 ID="mostImportant"&gt;This is important!&lt;/H1&gt;
&lt;EM ID="mostImportant"&gt;This is important!&lt;/EM&gt;
&lt;LI ID="mostImportant"&gt;This is important!&lt;/LI&gt;
</pre></blockquote>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch02_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">2.2. Grouping</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">2.4. Pseudo-Classes and Pseudo-Elements</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
