<html><head><title>Bringing CSS and HTML Together (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch01_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">1.4. Bringing CSS and HTML Together</h2>

<p><a name="INDEX-57" /> <a name="INDEX-58" />We keep visiting the point that HTML
documents have an inherent structure. In fact, that's part of
the problem with the Web today: too many of us forget that documents
are supposed to have an internal structure, which is altogether
different than a visual structure. In our rush to create the
coolest-looking pages on the Web, we've bent, warped, and
generally ignored the idea that pages should contain information that
has some structural meaning.
</p>

<p>However, that structure is an inherent part of the relationship
between HTML and CSS; without the structure, there couldn't be
a relationship at all. In order to understand it better, let's
look at an example HTML document and break it down by pieces.
Here's the markup, shown in <a href="ch01_04.htm">Figure 1-1</a>:
</p>

<blockquote><pre class="code">&lt;HTML&gt;
&lt;HEAD&gt;
    &lt;TITLE&gt;Eric's World of Waffles&lt;/TITLE&gt;
    &lt;LINK REL="stylesheet" TYPE="text/css" HREF="sheet1.css" TITLE="Default"&gt;
    &lt;STYLE TYPE="text/css"&gt;
        @import url(sheet2.css);
        H1 {color: maroon;}
        BODY {background: yellow;}
        /* These are my styles! Yay! */
    &lt;/STYLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
    &lt;H1&gt;Waffles!&lt;/H1&gt;
    &lt;P STYLE="color: gray;"&gt;The most wonderful of all breakfast foods is
    the waffle-- a ridged and cratered slab of home-cooked, fluffy
    goodness...
    &lt;/P&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</pre></blockquote>

<a name="css-CHP-1-FIG-1" /><div class="figure"><img alt="Figure 1-1" src="figs/css.0101.gif" /></div><h4 class="objtitle">Figure 1-1. A simple document</h4>

<p>Now, let's examine each portion of the document.</p>

<a name="css-CHP-1-SECT-4.1" /><div class="sect2">
<h3 class="sect2">1.4.1. The LINK Tag</h3>

<blockquote><pre class="code">&lt;LINK REL="stylesheet" TYPE="text/css" HREF="sheet1.css" TITLE="Default"&gt;</pre></blockquote>

<p><a name="INDEX-59" /> <a name="INDEX-60" /> <a name="INDEX-61" /> <a name="INDEX-62" />First we consider the use of the
<tt class="literal">LINK</tt> tag. The <tt class="literal">LINK</tt> tag is a
little-regarded but nonetheless perfectly valid tag that has been
hanging around the HTML specification for years, just waiting to be
put to good use. Its basic purpose is to allow HTML authors to
associate other documents with the document containing the
<tt class="literal">LINK</tt> tag. CSS1 uses it to link style sheets to the
HTML document; in <a href="ch01_04.htm">Figure 1-2</a>, a style sheet called
<em class="filename">sheet1.cs</em><em class="emphasis">s</em> is linked to the
document.
</p>

<a name="css-CHP-1-FIG-2" /><div class="figure"><img height="198" alt="Figure 1-2" src="figs/css.0102.gif" width="477" /></div><h4 class="objtitle">Figure 1-2. A representation of how external style sheets are applied to documents</h4>

<p>These style sheets, which are not part of the HTML document but are
still used by it, are referred to as <a name="INDEX-63" /><em class="emphasis">external style
sheets</em>. This is due to the fact that they're style
sheets but are external to the HTML document. (Go figure.)
</p>

<p>In order to successfully load an <a name="INDEX-64" /> <a name="INDEX-65" />external style sheet, <tt class="literal">LINK</tt>
must be placed inside the <tt class="literal">HEAD</tt> element but may not
be placed inside any other element, rather like
<tt class="literal">TITLE</tt> or <tt class="literal">STYLE</tt>. This will cause
the web browser to locate and load the style sheet and use whatever
styles it contains to render the HTML document, in the manner shown
in <a href="ch01_04.htm">Figure 1-2</a>.
</p>

<p>And what is the format of an external style sheet? It's simply
a list of rules, just like those we saw in the previous section and
in the example above, but in this case, the rules are saved into
their own file. Just remember that no HTML or any other markup
language can be included in the style sheet -- only style rules.
Here's the markup of an external style sheet:
</p>

<blockquote><pre class="code">H1 {color: red;}
H2 {color: maroon; background: white;}
H3 {color: white; background: black; font: medium Helvetica;}</pre></blockquote>

<p>That's all there is to it -- no <tt class="literal">STYLE</tt>
tags, no HTML tags at all, just plain-and-simple style declarations.
These are saved into a plain text file and are usually given an
extension of <em class="filename">.css</em><a name="INDEX-66" />
<a name="INDEX-67" />, as in
<em class="filename">sheet1.css</em>.
</p>

<p>The filename extension is not required, but some browsers won't
recognize the file as containing a style sheet unless it actually
ends with <em class="filename">.css</em>, even if you
<em class="emphasis">do</em> include the correct <tt class="literal">TYPE</tt>
of <tt class="literal">text/css</tt> in the <tt class="literal">LINK</tt>
element. So make sure you name your style sheets appropriately.
</p>

<a name="css-CHP-1-SECT-4.1.1" /><div class="sect3">
<h3 class="sect3">1.4.1.1. LINK attributes</h3>

<p>For the rest of the <a name="INDEX-68" />
<a name="INDEX-69" /><tt class="literal">LINK</tt>
tag, the attributes and values are fairly straightforward.
<tt class="literal">REL</tt> stands for "relation," and in this
case, the relation is "stylesheet."
<tt class="literal">TYPE</tt><a name="INDEX-70" /> <a name="INDEX-71" /> is always
set to <tt class="literal">text/css</tt><a name="INDEX-72" />. This value describes
the type of data that is to be loaded using the
<tt class="literal">LINK</tt> tag. That way, the web browser knows that the
style sheet is a CSS style sheet, a fact that will determine how the
browser deals with the data it imports. After all, there may be other
style languages in the future, so it will be important to say which
language you're using.
</p>

<p>Next we find the <tt class="literal">HREF</tt><a name="INDEX-73" /> <a name="INDEX-74" />
attribute. The value of this attribute is the
<a name="INDEX-75" />URL of your style sheet. This URL can be
either absolute or relative, depending on what works for you. In our
example, of course, the URL is relative. It could as easily have been
something like <a href="../../../../../../www.style.org/sheet1.css">http://www.style.org/sheet1.css</a>.
</p>

<p>Finally, there is the
<tt class="literal">TITLE</tt><a name="INDEX-76" /> attribute. This attribute is not
often used, but it could become important in the future. Why? It
becomes important when there is more than one <tt class="literal">LINK</tt>
tag -- and there can be more than one. In these cases, however,
only those <tt class="literal">LINK</tt> tags with a <tt class="literal">REL</tt>
of <tt class="literal">stylesheet</tt> will be used in the initial display
of the document. Thus, if you wanted to link in two style sheets with
the names <em class="filename">basic.css</em> and
<em class="filename">splash.css</em>, the markup would look like this:
</p>

<blockquote><pre class="code">&lt;LINK REL="stylesheet" TYPE="text/css" HREF="basic.css"&gt;
&lt;LINK REL="stylesheet" TYPE="text/css" HREF="splash.css"&gt;</pre></blockquote>

<p>This will cause the browser to load both style sheets, combine the
rules from each, and apply the result to the document (see <a href="ch01_04.htm">Figure 1-3</a>). We'll see exactly how the sheets are
combined in the next chapter, but for now, let's just accept
that they're combined. For example:
</p>

<blockquote><pre class="code">&lt;LINK REL="stylesheet" TYPE="text/css" HREF="sheet-a.css"&gt;
&lt;LINK REL="stylesheet" TYPE="text/css" HREF="sheet-b.css"&gt;

&lt;P CLASS="a1"&gt;This paragraph will be gray only if styles from the 
stylesheet 'sheet-a.css' are applied.&lt;/P&gt;
&lt;P CLASS="b1"&gt;This paragraph will be gray only if styles from the 
stylesheet 'sheet-b.css' are applied.&lt;/P&gt;</pre></blockquote>

<a name="css-CHP-1-FIG-3" /><div class="figure"><img height="63" alt="Figure 1-3" src="figs/css.0103.gif" width="288" /></div><h4 class="objtitle">Figure 1-3. Combining linked style sheets</h4>

<p>It's also possible to define alternate
<a name="INDEX-77" /> <a name="INDEX-78" />style sheets. These are marked with a
<tt class="literal">REL</tt> of <tt class="literal">alternate</tt>
<tt class="literal">stylesheet</tt> and come into play only if
they're selected by the reader.
</p>

</div>

<a name="css-CHP-1-SECT-4.1.2" /><div class="sect3">
<h3 class="sect3">1.4.1.2. Alternate style sheets</h3>

<p>Unfortunately, as of this writing, browsers don't make it very
easy to select alternate style sheets, assuming that they can do so
at all. Should a browser be able to use alternate style sheets, it
will use the values of the <tt class="literal">TITLE</tt> attributes to
generate a list of style alternatives. So you could write the
following:
</p>

<blockquote><pre class="code">&lt;LINK REL="stylesheet" TYPE="text/css"
 HREF="sheet1.css" TITLE="Default"&gt;
&lt;LINK REL="alternate stylesheet" TYPE="text/css"
 HREF="bigtext.css" TITLE="Big Text"&gt;
&lt;LINK REL=" alternate stylesheet " TYPE="text/css"
 HREF="spoken.css" TITLE="Spoken Word"&gt;</pre></blockquote>

<p><a name="INDEX-79" /> <a name="INDEX-80" />Users could then pick the
style they wanted to use, and the browser would switch from the first
one (labeled "Default" in this case) to whichever the
reader picked. <a href="ch01_04.htm">Figure 1-4</a> shows one way in which
this selection mechanism might be accomplished.
</p>

<a name="css-CHP-1-FIG-4" /><div class="figure"><img height="213" alt="Figure 1-4" src="figs/css.0104.gif" width="481" /></div><h4 class="objtitle">Figure 1-4. A browser offering alternate style sheet selection</h4>

<a name="ch01-14-fm2xml" /><blockquote><h4>WARNING</h4>
<p>Alternate styles sheets are only supported by one browser as of this
writing -- Internet Explorer for Macintosh -- and that only
with a JavaScript widget, which does not ship with the browser. None
of the three major browsers natively supports the selection of
alternate style sheets (shown in <a href="ch01_04.htm">Figure 1-4</a>).
</p>
</blockquote>

<p>As of this writing, the one browser that does recognize alternate
style sheets (Internet Explorer for Macintosh) will not apply the
styles from any <tt class="literal">LINK</tt> element with a
<tt class="literal">REL</tt> of <tt class="literal">alternate</tt>
<tt class="literal">stylesheet</tt> unless that style sheet is selected by
the user.<a name="INDEX-81" /> <a name="INDEX-82" /> <a name="INDEX-83" /> <a name="INDEX-84" />
</p>

</div>
</div>
<a name="css-CHP-1-SECT-4.2" /><div class="sect2">
<h3 class="sect2">1.4.2. The STYLE Element</h3>

<p>The <tt class="literal">STYLE</tt><a name="INDEX-85" /> element, which is a relatively new
element in <a name="INDEX-86" />HTML, is the most common way to define
a style sheet, since it appears in the document itself.
<tt class="literal">STYLE</tt> should always use the attribute
<tt class="literal">TYPE</tt>; in the case of a CSS1 document, the correct
value is <tt class="literal">text/css</tt><a name="INDEX-87" />, just as it was with
the <tt class="literal">LINK</tt> tag. So, the <tt class="literal">STYLE</tt>
container should always start with <tt class="literal">&lt;STYLE</tt>
<tt class="literal">TYPE="text/css"&gt;</tt>. This is followed by one or
more styles and finished with a closing
<tt class="literal">&lt;/STYLE&gt;</tt> tag.
</p>

<p>The styles between the opening and closing
<tt class="literal">STYLE</tt><a name="INDEX-88" />
tags are referred to as the <em class="filename">document style
sheet</em><a name="INDEX-89" /> <a name="INDEX-90" /> or the
<em class="filename">embedded style sheet</em><a name="INDEX-91" /> <a name="INDEX-92" />, since
this style sheet is embedded within the document. It contains styles
that apply to the document, but it can also contain multiple links to
external style sheets using the <tt class="literal">@import</tt> directive.
</p>

</div>
<a name="css-CHP-1-SECT-4.3" /><div class="sect2">
<h3 class="sect2">1.4.3. The @import Directive</h3>

<p>Now for the stuff that is found inside the <tt class="literal">STYLE</tt>
tag. First, we have something very similar to
<tt class="literal">LINK</tt>: the
<tt class="literal">@import</tt><a name="INDEX-93" /> directive. Just like
<tt class="literal">LINK</tt>, <tt class="literal">@import</tt> can be used to
direct the web browser to load an <a name="INDEX-94" />external style sheet and use its
styles in the rendering of the HTML document. The only real
difference is in the actual syntax of the command and its placement.
As you can see, <tt class="literal">@import</tt> is found inside the
<tt class="literal">STYLE</tt> container. It must be placed there, before
the other CSS rules, or else it won't work at all.
</p>

<blockquote><pre class="code">&lt;STYLE TYPE="text/css"&gt;
@import url(styles.css); /* @import comes first */
H1 {color: gray;}
&lt;/STYLE&gt;</pre></blockquote>

<p>Like <tt class="literal">LINK</tt>, there can be more than one
<tt class="literal">@import</tt> statement in a document. Unlike
<tt class="literal">LINK</tt>, however, the style sheets of every
<tt class="literal">@import</tt> directive will always be loaded and used.
So given the following, all three external style sheets will be
loaded, and all of their style rules will be used in the display of
this document:
</p>

<blockquote><pre class="code">@import url(sheet2.css);
@import url(blueworld.css);
@import url(zany.css);</pre></blockquote>

<a name="ch01-17-fm2xml" /><blockquote><h4>WARNING</h4>
<p>Only <a name="INDEX-95" />Internet Explorer 4.x/5.x and Opera
3.x support <tt class="literal">@import</tt>; Navigator 4.x ignores this
method of applying styles to a document. This can actually be used to
one's advantage in "hiding" styles from these
browsers. See <a href="ch11_01.htm">Chapter 11, "CSS in Action"</a>, for more details.
</p>
</blockquote>

</div>
<a name="css-CHP-1-SECT-4.4" /><div class="sect2">
<h3 class="sect2">1.4.4. Actual Styles</h3>

<blockquote><pre class="code">H1 {color: maroon;}
BODY {background: yellow;}</pre></blockquote>

<p>After the <tt class="literal">@import</tt> statement in our example, we
find some ordinary
<a name="INDEX-96" />styles. What they
mean doesn't actually matter for this discussion, although you
can probably guess that they set <tt class="literal">H1</tt> elements to be
maroon and <tt class="literal">BODY</tt> elements to have a yellow
background.
</p>

<p>Styles such as these comprise the bulk of any embedded style
sheet -- style rules both simple and complex, short and long. It
will be only rarely that you have a document where the
<tt class="literal">STYLE</tt> element does not contain any rules.
</p>

<p><a name="INDEX-97" />
<a name="INDEX-98" /> <a name="INDEX-99" />For those of you
concerned about making your documents accessible to older browsers,
there is an important warning to be made. You're probably aware
that browsers ignore tags they don't recognize; for example, if
a web page contains a <tt class="literal">BLOOPER</tt> tag, browsers will
completely ignore the <a name="INDEX-100" />tag because it isn't a tag they
recognize.
</p>

<p>The same will be true with <a name="INDEX-101" />style sheets. If a browser does not
recognize <tt class="literal">&lt;STYLE&gt;</tt> and
<tt class="literal">&lt;/STYLE&gt;</tt>, it will ignore them altogether.
However, the declarations within those tags will
<em class="emphasis">not</em> be ignored, because they will appear to be
ordinary text so far as the browser is concerned. So your
<a name="INDEX-102" />style
declarations will appear at the top of your page! (Of course, the
browser should ignore the text because it isn't part of the
<tt class="literal">BODY</tt> element, but this is never the case.) This
problem is illustrated in <a href="ch01_04.htm">Figure 1-5</a>.
</p>

<a name="css-CHP-1-FIG-5" /><div class="figure"><img height="138" alt="Figure 1-5" src="figs/css.0105.gif" width="327" /></div><h4 class="objtitle">Figure 1-5. Older browsers will literally display your style sheets</h4>

<p><a name="INDEX-103" />In order to combat this
problem, it is recommended that you enclose your declarations in a
<a name="INDEX-104" />comment tag. In the example
given here, the beginning of the comment tag appears right after the
opening <tt class="literal">STYLE</tt> tag, and the end of the comment
appears right before the closing <tt class="literal">STYLE</tt> tag:
</p>

<blockquote><pre class="code">&lt;STYLE type="text/css"&gt;&lt;!--
@import url(sheet2.css);
H1 {color: maroon;}
BODY {background: yellow;}
--&gt;&lt;/STYLE&gt;</pre></blockquote>

<p>This should cause older browsers to completely ignore not only the
<tt class="literal">STYLE</tt> tags but the declarations as well, because
<a name="INDEX-105" />
<a name="INDEX-106" />HTML
comments are not displayed. Meanwhile, those browsers that understand
CSS will still be able to read the style sheet.
</p>

<a name="ch01-19-fm2xml" /><blockquote><h4>WARNING</h4>
<p>There is one drawback to this strategy. A few versions of older
browsers, such as very early versions of Netscape Navigator and NCSA
Mosaic, had some trouble with comments. The problems ranged from
mangled display to browser crashes. This happened with only a very
few browser versions, and it's safe to say that very few of
these browsers are still being operated. Be aware that there are some
people out there using these particular browsers, and they may well
have major problems viewing your page if you use these comment tags.
</p>
</blockquote>

</div>
<a name="css-CHP-1-SECT-4.5" /><div class="sect2">
<h3 class="sect2">1.4.5. CSS Comments</h3>

<blockquote><pre class="code">/* These are my styles! Yay! */</pre></blockquote>

<p><a name="INDEX-107" />
<a name="INDEX-108" />CSS
also allows for comments, but it uses a completely different syntax
to accomplish this. CSS comments are very similar to C/C++ comments,
in that they are surrounded by <tt class="literal">/*</tt> and
<tt class="literal">*/</tt>:
</p>

<blockquote><pre class="code">/* This is a CSS1 comment */</pre></blockquote>

<p>Comments can span multiple lines, just as in C++:</p>

<blockquote><pre class="code">/* This is a CSS1 comment, and it
can be several lines long without
any problem whatsoever. */</pre></blockquote>

<p>It's important to remember that CSS comments cannot be nested.
So, for example, this would not be correct:
</p>

<blockquote><pre class="code">/* This is a comment, in which we find
another comment, which is WRONG
   /* Another comment */
and back to the first comment */</pre></blockquote>

<p>However, it's hardly ever desirable to nest comments, so this
limitation is no big deal.
</p>

<p>If you wish to place comments on the same line as markup, then you
need to be careful about how you place them. For example, this is the
correct way to do it:
</p>

<blockquote><pre class="code">H1 {color: gray;}   /* This CSS comment is several lines */
H2 {color: silver;} /* long, but since it is alongside */
P {color: white;}   /* actual styles, each line needs to */
PRE {color: gray;} /* be wrapped in comment markers. */</pre></blockquote>

<p>Given this example, if each line isn't marked off, then most of
the style sheet will become part of the comment, and so will not
work:
</p>

<blockquote><pre class="code">H1 {color: gray;}   /* This CSS comment is several lines 
H2 {color: silver;}   long, but since it is not wrapped
P {color: white;}   in comment markers, the last three
PRE {color: gray;}   styles are part of the comment. */</pre></blockquote>

<p>In this example, only the first rule (<tt class="literal">H1</tt>
<tt class="literal">{color:</tt> <tt class="literal">gray;}</tt>) will be applied
to the document. The rest of the rules, as part of the comment, are
ignored by the browser's rendering engine.
</p>

<p>Moving on with our example, we see some more CSS information actually
found inside an HTML tag!
</p>

</div>
<a name="css-CHP-1-SECT-4.6" /><div class="sect2">
<h3 class="sect2">1.4.6. Inline Styles</h3>

<a name="INDEX-109" /><a name="INDEX-110" /><blockquote><pre class="code">
&lt;P STYLE="color: gray;"&gt;The most wonderful of all breakfast foods is 
the waffle-- a ridged and cratered slab of home-cooked, fluffy goodness...
&lt;/P&gt;</pre></blockquote>

<p>For cases where you want to simply assign a few styles to one
individual element, without the need for embedded or external style
sheets, you'll employ the HTML attribute
<tt class="literal">STYLE</tt> to set an <em class="filename">inline style</em>.
The <tt class="literal">STYLE</tt><a name="INDEX-111" /> <a name="INDEX-112" />
attribute is new to HTML, and it can be associated with any HTML tag
whatsoever, except for those tags which are found outside of
<tt class="literal">BODY</tt> (<tt class="literal">HEAD</tt> or
<tt class="literal">TITLE</tt>, for instance).
</p>

<p>The syntax of a <tt class="literal">STYLE</tt> attribute is fairly
ordinary. In fact, it looks very much like the declarations found in
the <tt class="literal">STYLE</tt> container, except here the curly
brackets are replaced by <a name="INDEX-113" />
<a name="INDEX-114" /> <a name="INDEX-115" />double
quotation marks. So <tt class="literal">&lt;P</tt>
<tt class="literal">STYLE="color:</tt> <tt class="literal">maroon;</tt>
<tt class="literal">background:</tt> <tt class="literal">yellow;"&gt;</tt> will
set the text color to be maroon and the background to be yellow
<em class="emphasis">for that paragraph only</em>. No other part of the
document will be affected by this declaration.<a name="INDEX-116" /> <a name="INDEX-117" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch01_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">1.3. Limitations of CSS</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">1.5. Summary</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
