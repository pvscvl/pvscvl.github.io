<html><head><title>Floating and Clearing (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch07_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch07_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">7.6. Floating and Clearing</h2>

<p><a name="INDEX-852" />You are almost certainly acquainted
with the concept of floated elements. Ever since Netscape 1.0, it has
been possible to float images by declaring, for instance,
<tt class="literal">&lt;IMG</tt> <tt class="literal">SRC="b5.gif"</tt> 
<tt class="literal">align="right"&gt;</tt>. This causes an image to float
to the right, and allows other content (text or other images) to
"flow around" the image. In the past, this was only
possible with images and, in some browsers, tables. CSS, on the other
hand, allows any element to float, from images to paragraphs to
lists. In CSS, this behavior is accomplished using the property
<tt class="literal">float</tt><a name="INDEX-853" />.
</p>

<a name="css-CHP-7-SIDEBAR-13" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">float</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p><tt class="literal">left</tt> | <tt class="literal">right</tt> |
<tt class="literal">none</tt>
</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p><tt class="literal">none</tt></p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>
</td></tr></table></blockquote>

<p>For example, to float an image to the right, you could use this
markup:
</p>

<blockquote><pre class="code">&lt;IMG SRC="b5.gif" style="float: right;" alt="section b5"&gt;</pre></blockquote>

<p><a name="INDEX-854" />
<a name="INDEX-855" />As <a href="ch07_06.htm">Figure 7-63</a> makes clear, the image "floats" to
the right side of the browser window. This is just what we expect.
However, some interesting issues are raised in the course of floating
elements in CSS.
</p>

<a name="css-CHP-7-FIG-63" /><div class="figure"><img height="74" alt="Figure 7-63" src="figs/css.0763.gif" width="471" /></div><h4 class="objtitle">Figure 7-63. A floating image</h4>

<a name="css-CHP-7-SECT-6.1" /><div class="sect2">
<h3 class="sect2">7.6.1. Floated Elements</h3>

<p>There are a few things to keep in mind with regard to floating
elements. In the first place, a floated element is in some respects
removed from the normal flow of the document, although it still
affects the layout. In a manner utterly unique to CSS, floated
elements exist almost on their own plane, yet they still have major
influence over the rest of the document.
</p>

<p>Of course, when an element is floated, other content "flows
around" it. This is familiar behavior with floated images, but
the same is true if you float a paragraph, for example. In <a href="ch07_06.htm">Figure 7-64</a>, we can see this effect (a margin has been
added to make the situation more clear):
</p>

<blockquote><pre class="code">P.aside {float: left; width: 5em; margin: 1em;}</pre></blockquote>

<a name="css-CHP-7-FIG-64" /><div class="figure"><img height="163" alt="Figure 7-64" src="figs/css.0764.gif" width="464" /></div><h4 class="objtitle">Figure 7-64. A floating paragraph</h4>

<p><a name="INDEX-856" /> <a name="INDEX-857" />
<a name="INDEX-858" />One of the first interesting things to
notice about floated elements is that margins around floated elements
do not collapse. If you float an image with 20-pixel margins, there
will be at least 20 pixels of space around that image. If other
elements adjacent to the image -- and that means adjacent
horizontally <em class="emphasis">and</em> vertically -- also have
margins, those margins will not collapse with the margins on the
floated image, as we can see in <a href="ch07_06.htm">Figure 7-65</a>:
</p>

<blockquote><pre class="code">P IMG {float: right; margin: 20px;}</pre></blockquote>

<a name="css-CHP-7-FIG-65" /><div class="figure"><img height="259" alt="Figure 7-65" src="figs/css.0765.gif" width="293" /></div><h4 class="objtitle">Figure 7-65. Floating images with margins</h4>

<p>(To resurrect the old paper-and-plastic analogy, the plastic margins
around an image <em class="emphasis">never</em> overlap the plastic
surrounding other elements.)
</p>

<p>If you do float a
<a name="INDEX-859" />text
element, realize that unless you declare a
<tt class="literal">width</tt><a name="INDEX-860" /> for that element, the CSS
specification says that its width will tend toward zero. Thus, a
floated paragraph could literally be one character wide, assuming
that to be the browser's minimum value for
<tt class="literal">width</tt>. In order to avoid this problem, make sure
that you declare a width for your floated elements. Otherwise, you
could get something like <a href="ch07_06.htm">Figure 7-66</a>.
</p>

<a name="css-CHP-7-FIG-66" /><div class="figure"><img height="150" alt="Figure 7-66" src="figs/css.0766.gif" width="470" /></div><h4 class="objtitle">Figure 7-66. Floated text without an explicit width</h4>

<a name="css-CHP-7-SECT-6.1.1" /><div class="sect3">
<h3 class="sect3">7.6.1.1. Backgrounds and floats</h3>

<p><a name="INDEX-861" /> <a name="INDEX-862" />There are many other interesting effects
associated with floating elements. Take the example of a short
document, composed of no more than a few paragraphs and
<tt class="literal">H3</tt> elements, where the first paragraph contains a
floated image. Further, this floated image has a right margin of five
pixels (<tt class="literal">5px</tt>). You would expect the document to be
rendered very much as shown in <a href="ch07_06.htm">Figure 7-67</a>.
</p>

<a name="css-CHP-7-FIG-67" /><div class="figure"><img height="234" alt="Figure 7-67" src="figs/css.0767.gif" width="481" /></div><h4 class="objtitle">Figure 7-67. Floating an image</h4>

<p>Nothing unusual there, of course, but look what happens when we set
the first paragraph to have a background, as has been done in <a href="ch07_06.htm">Figure 7-68</a>.
</p>

<a name="css-CHP-7-FIG-68" /><div class="figure"><img height="234" alt="Figure 7-68" src="figs/css.0768.gif" width="481" /></div><h4 class="objtitle">Figure 7-68. Floating images and element backgrounds</h4>

<p>There is nothing different about the second example, except for the
visible background. As you can see, the floated image sticks out of
the bottom of its parent element. Of course, it did so in the first
example, but it was less obvious there because we couldn't see
the background then. There is nothing forbidden about this behavior.
</p>

<a name="ch07-58-fm2xml" /><blockquote><h4>WARNING</h4>
<p>In practice, some browsers may not do this correctly. Instead, they
will increase the height of a parent element so that the floated
element is contained within it, even though this results in a great
deal of extra blank space within the parent element.
</p>
</blockquote>

<p>Then there is the question of what happens to elements that flow past
a floated element but have visible backgrounds. Let's take the
preceding example and change it so that the second
<tt class="literal">H3</tt> element has a visible background and border, as
has been done in <a href="ch07_06.htm">Figure 7-69</a>.
</p>

<a name="css-CHP-7-FIG-69" /><div class="figure"><img height="234" alt="Figure 7-69" src="figs/css.0769.gif" width="481" /></div><h4 class="objtitle">Figure 7-69. More floating images and element backgrounds</h4>

<p>Yes, the figure is correct: the content of the <tt class="literal">H3</tt>
flows past the image, and the background "slides under"
the image, so to speak. This is, in its way, no different than the
example in which the paragraph that contained the floated image had a
visible background.<a name="INDEX-863" /> <a name="INDEX-864" />
</p>

</div>

<a name="css-CHP-7-SECT-6.1.2" /><div class="sect3">
<h3 class="sect3">7.6.1.2. Negative margins and floating</h3>

<p><a name="INDEX-865" /> <a name="INDEX-866" />Negativity, of course, always complicates
the situation. Let's consider an image that is floated to the
left and has left and top margins of <tt class="literal">-15px</tt> . This
image is placed inside a <tt class="literal">DIV</tt> that has no padding,
borders, or margins. The result will be as shown in <a href="ch07_06.htm">Figure 7-70</a>.
</p>

<a name="css-CHP-7-FIG-70" /><div class="figure"><img height="352" alt="Figure 7-70" src="figs/css.0770.gif" width="185" /></div><h4 class="objtitle">Figure 7-70. A floating image with negative top and left margins</h4>

<p>The math in this situation works out something like this: assume the
top inner edge of the <tt class="literal">DIV</tt> is at the pixel position
100. The browser, in order to figure out where the top inner edge of
the floated element should be will do this: <tt class="literal">100px</tt>
<tt class="literal">+</tt> <tt class="literal">(-15px)</tt>
<tt class="literal">margin</tt> <tt class="literal">+</tt> <tt class="literal">0</tt>
<tt class="literal">padding</tt> <tt class="literal">=</tt>
<tt class="literal">85px</tt> . Thus the top inner edge of the floated
element should be at pixel position 85.
</p>

<p>A similar line of reasoning explains how the left inner edge of the
floated element can be placed to the left of the left inner edge of
its parent. This ability can be used for interesting effects like
<a name="INDEX-867" />hanging floated images, but only if the
browser honors negative margins on floated elements. If it does, the
result will be something like that shown in <a href="ch07_06.htm">Figure 7-71</a>.
</p>

<a name="css-CHP-7-FIG-71" /><div class="figure"><img height="325" alt="Figure 7-71" src="figs/css.0771.gif" width="367" /></div><h4 class="objtitle">Figure 7-71. Hanging float</h4>

<p>There is one important question here, which is this: what happens to
the document display when an element is floated out of its parent
element by using negative margins? For example, an image could be
floated so far up that it intrudes into a paragraph that has already
been displayed by the user agent.
</p>

<p>In this case, it's up to the user agent, but the CSS
specifications explicitly state that user agents are not required to
reflow previous content to accommodate things that happen later in
the document. In other words, if an image is floated up into a
previous paragraph, it may simply overwrite whatever was already
there. On the other hand, the user agent may handle the situation by
flowing content around the float, even though doing so isn't
required behavior. Either way, it's probably a bad idea to
count on a particular behavior, which makes the utility of negative
margins on floats rather limited. Hanging floats are probably fairly
safe, but trying to push an element upward on the page is generally a
bad idea.
</p>

<p>There is one other case where a floated element can run outside of
its parent element, and that's when the floated element is
wider than its parent. In that case, the floated element will simply
overrun either the right or left inner edge in its best attempt to
display itself correctly, depending on which way it was floated. In
such a case, you get the result shown in <a href="ch07_06.htm">Figure 7-72</a>.
</p>

<a name="css-CHP-7-FIG-72" /><div class="figure"><img height="156" alt="Figure 7-72" src="figs/css.0772.gif" width="410" /></div><h4 class="objtitle">Figure 7-72. Floating an image wider than its parent element</h4>

<p>Here, a left-floated image is wider than its parent, so its right
edge overruns the right edge of the parent element. Had the image
been floated to the right, then it would have overrun the left side
of the parent element instead.<a name="INDEX-868" /> <a name="INDEX-869" />
</p>

</div>

<a name="css-CHP-7-SECT-6.1.3" /><div class="sect3">
<h3 class="sect3">7.6.1.3. No floating at all</h3>

<p>There is one other value for <tt class="literal">float</tt> besides
<tt class="literal">left</tt> and <tt class="literal">right</tt>.
<tt class="literal">float:</tt> <tt class="literal">none</tt> is used to prevent
an element from floating at all. This might seem a little silly,
since the easiest way to keep an element from floating is to simply
avoid declaring a float, right? Well, first of all, the default value
of <tt class="literal">float</tt> is <tt class="literal">none</tt>. In other
words, the value has to exist in order for normal, nonfloating
behavior to be possible; without it, all elements would float in one
way or another.
</p>

<p>Second, it's possible that you might want to override a certain
style from an <a name="INDEX-870" /> <a name="INDEX-871" />imported style sheet. Imagine that
you're using a server-wide style sheet that floats images. On
one particular page, you don't want those images to float.
Rather than writing a whole new style sheet, you could simply place
<tt class="literal">IMG</tt> <tt class="literal">{float:</tt>
<tt class="literal">none;}</tt> in your document's embedded style
sheet. Beyond this type of circumstance, though, there really
isn't much call to use <tt class="literal">float:</tt>
<tt class="literal">none</tt> in your<a name="INDEX-872" /> HTML<a name="INDEX-873" /> <a name="INDEX-874" /> documents.<a name="INDEX-875" />
</p>

</div>
</div>
<a name="css-CHP-7-SECT-6.2" /><div class="sect2">
<h3 class="sect2">7.6.2. Clear</h3>

<p><a name="INDEX-876" /> <a name="INDEX-877" />Well, we
talked about a lot of floating behavior, so there's only one
more thing to discuss. You won't always want your content to
flow past a floated element -- in some cases, you'll
specifically want to prevent it.
</p>

<p>If you have a document that is grouped into sections, you might not
want the floated elements from one section hanging down into the
next. In that case, you'd want to set the first element of each
section to prohibit floating elements from appearing next to it. If
it might otherwise be placed next to a floated element, it will be
pushed down until it appears below the floated image, and all
subsequent content will appear after that, as shown in <a href="ch07_06.htm">Figure 7-73</a>.
</p>

<a name="css-CHP-7-FIG-73" /><div class="figure"><img height="324" alt="Figure 7-73" src="figs/css.0773.gif" width="421" /></div><h4 class="objtitle">Figure 7-73. Displaying an element in the clear</h4>

<p>This is done with <tt class="literal">clear</tt>.</p>

<a name="css-CHP-7-SIDEBAR-14" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">clear</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p><tt class="literal">left</tt> | <tt class="literal">right</tt> |
<tt class="literal">both</tt> | <tt class="literal">none</tt>
</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p><tt class="literal">none</tt></p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>
</td></tr></table></blockquote>

<p><a name="INDEX-878" />For example, to make sure all
<tt class="literal">H2</tt> elements are not placed to the right of
left-floated elements, then you would declare <tt class="literal">H2</tt>
<tt class="literal">{clear:</tt> <tt class="literal">left;}</tt>. This can be
translated as "make sure that the left side of an
<tt class="literal">H2</tt> is clear of floating images" and is a
replacement for the HTML construct
<tt class="literal">&lt;BR</tt><a name="INDEX-879" />
<tt class="literal">clear="left"&gt;</tt>. <a href="ch07_06.htm">Figure 7-74</a>
shows the following declaration, which uses <tt class="literal">clear</tt>
to prevent <tt class="literal">H2</tt> elements from flowing past floated
elements to the left side:
</p>

<blockquote><pre class="code">H2 {clear: left;}</pre></blockquote>

<a name="css-CHP-7-FIG-74" /><div class="figure"><img height="313" alt="Figure 7-74" src="figs/css.0774.gif" width="438" /></div><h4 class="objtitle">Figure 7-74. Clear to the left</h4>

<p>However, this will allow floated elements to appear on the right side
of <tt class="literal">H2</tt> elements, as shown in <a href="ch07_06.htm">Figure 7-75</a>.
</p>

<a name="css-CHP-7-FIG-75" /><div class="figure"><img height="316" alt="Figure 7-75" src="figs/css.0775.gif" width="473" /></div><h4 class="objtitle">Figure 7-75. Clear to the left, but not the right</h4>

<p>To avoid this sort of thing, and to make sure that
<tt class="literal">H2</tt> elements do not coexist on a line with any
floated elements, we use the value <tt class="literal">both</tt>. This
value prevents coexistence with floated elements on both sides of the
element, as shown in <a href="ch07_06.htm">Figure 7-76</a>:
</p>

<blockquote><pre class="code">H2 {clear: both;}</pre></blockquote>

<a name="css-CHP-7-FIG-76" /><div class="figure"><img height="267" alt="Figure 7-76" src="figs/css.0776.gif" width="481" /></div><h4 class="objtitle">Figure 7-76. Clear on both sides</h4>
If, on the other hand, we're only worried about <tt class="literal">H2</tt> elements flowing past floated elements to their right, then we'd use <tt class="literal">H2</tt> <tt class="literal">{clear: right;}</tt>, with the result shown in <a href="ch07_06.htm">Figure 7-77</a>.
<a name="css-CHP-7-FIG-77" /><div class="figure"><img height="313" alt="Figure 7-77" src="figs/css.0777.gif" width="481" /></div><h4 class="objtitle">Figure 7-77. Clear to the right</h4>

<p>Finally, there's <tt class="literal">clear:</tt>
<tt class="literal">none</tt>, which allows elements to float to either
side of an element. As with <tt class="literal">float:</tt>
<tt class="literal">none</tt>, this value mostly exists to allow for normal
document behavior, in which elements will permit floated elements to
both sides. <tt class="literal">none</tt> can be used to override other
styles, of course, as shown in <a href="ch07_06.htm">Figure 7-78</a>. Despite
the document-wide rule that <tt class="literal">H2</tt> elements will not
permit floated elements to either side, one <tt class="literal">H2</tt> in
particular has been set so that it does permit floated elements on
either side:
</p>

<blockquote><pre class="code">H2 {clear: both;}

&lt;H2 STYLE="clear: none;"&gt;Not Cleared!&lt;/H2&gt;</pre></blockquote>

<a name="css-CHP-7-FIG-78" /><div class="figure"><img height="282" alt="Figure 7-78" src="figs/css.0778.gif" width="481" /></div><h4 class="objtitle">Figure 7-78. Not clear at all</h4>

<p><tt class="literal">clear</tt> works by increasing the top margin of an
element so that it ends up below a floated element, so any margin
width set for the top of a cleared element should be effectively
ignored. That is, instead of being <tt class="literal">1.5em</tt> , for
example, it could be increased to <tt class="literal">10em</tt> , or
<tt class="literal">25px</tt> , or <tt class="literal">7.133in</tt> , or however
much is needed to move the element down far enough so that the
content area is below the bottom edge of a floated<a name="INDEX-880" />
element.<a name="INDEX-881" /> <a name="INDEX-882" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch07_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch07_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">7.5. Padding</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">7.7. Lists</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
