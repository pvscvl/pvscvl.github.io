<html><head><title>Generated Content (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch10_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">10.4. Generated Content</h2>

<p><a name="INDEX-1170" />Generated content is a new way of adding
things to existing content without having to alter the content
itself. It's done by using the pseudo-elements
<tt class="literal">:before</tt><a name="INDEX-1171" /> and
<tt class="literal">:after</tt><a name="INDEX-1172" /> and the property
<tt class="literal">content</tt><a name="INDEX-1173" />. Here's a basic example of how
it works:
</p>

<blockquote><pre class="code">P:before, P:after {content: "\""; color: gray;}

&lt;P&gt;This is a quote.&lt;/P&gt;</pre></blockquote>

<p>The browser will display what's shown in <a href="ch10_04.htm">Figure 10-15</a>.
</p>

<a name="css-CHP-10-FIG-15" /><div class="figure"><img alt="Figure 10-15" src="figs/css.1015.gif" /></div><h4 class="objtitle">Figure 10-15. Adding generated content</h4>

<p>Note that the double-quote mark was escaped out -- that is,
preceded by a backslash. This is necessary, since text values for
content must be enclosed in double quotes. You could also place
images before (or after) content, using something like
<tt class="literal">P:before</tt> <tt class="literal">{content:</tt>
<tt class="literal">url(para.gif);}</tt> to put a paragraph symbol at the
beginning of each paragraph. You can even string multiple values
together like this (shown in <a href="ch10_04.htm">Figure 10-16</a>):
</p>

<blockquote><pre class="code">P:before {content: url(para.gif) " -- ";}</pre></blockquote>

<a name="css-CHP-10-FIG-16" /><div class="figure"><img alt="Figure 10-16" src="figs/css.1016.gif" /></div><h4 class="objtitle">Figure 10-16. Adding an image and text before a paragraph</h4>

<p>This would cause each paragraph to be started with a paragraph
symbol, a blank space, two dashes, and then another blank space. Note
that all of this is considered part of the paragraph and is inlined
within it. The spaces appear before and after the double dash because
they're included in the string value. If these spaces were
omitted, then space would not appear to either side of the dashes.
</p>

<p>Let's say, though, that you want to do some real quoting, using
real quotation marks -- you know, the <a name="INDEX-1174" /> <a name="INDEX-1175" /> <a name="INDEX-1176" />curly <a name="INDEX-1177" />double quotes that are so
hard to specify in HTML and which often don't show up even if
you do try to specify them. CSS2 has ways to handle this.
</p>

<p><tt class="literal">content</tt> has some other values you can use:</p>

<ul><li>
<p><tt class="literal">open-quote</tt>, which inserts an opening quotation mark</p>
</li><li>
<p><tt class="literal">close-quote</tt>, which inserts a closing quotation mark</p>
</li><li>
<p><tt class="literal">no-open-quote</tt>, which prevent the insertion of an
opening quotation mark
</p>
</li><li>
<p><tt class="literal">no-close-quote</tt>, which prevent the insertion of an
closing quotation mark
</p>
</li></ul>
<p>So if you wanted your quotations to begin and end with quotation
marks, instead of typing in a literal quotation mark, you could let
the browser insert "smart quotes" for you.
</p>

<blockquote><pre class="code">BLOCKQUOTE:before {content: open-quote;}
BLOCKQUOTE:after {content: close-quote;}</pre></blockquote>

<a name="css-CHP-10-SECT-4.1" /><div class="sect2">
<h3 class="sect2">10.4.1. Automatic Numbering</h3>

<p>In the same vein, CSS2 also includes properties for
<a name="INDEX-1178" />
<a name="INDEX-1179" />automatic numbering. First, you can
specify a <tt class="literal">counter</tt> as a value of
<tt class="literal">content</tt>. This can be a bit tricky, and it would
take too long to run through all the possibilities, but here's
an example. Say you wanted the chapters and sections of a document
numbered 1, 1.1, 1.2, 1.3, and so on. In addition, you're using
<tt class="literal">H1</tt> for your chapters and <tt class="literal">H2</tt> for
your sections. Here are the declarations you would use:
</p>

<blockquote><pre class="code">H1:before {
   content: "Chapter " counter(chapter) ". ";
   counter-increment: chapter;   /* Add 1 to chapter */
   counter-reset: section;       /* Set section to 0 */
 }
 H2:before {
   content: counter(chapter) "." counter(section) " ";
   counter-increment: section;
 }</pre></blockquote>

<p>As we can see from <a href="ch10_04.htm">Figure 10-17</a>, the user agent will
add the word "Chapter" and a number at the beginning of
<tt class="literal">H1</tt> text. This number is automatically incremented
with each <tt class="literal">H1</tt>, due to the declaration
<tt class="literal">counter-increment:</tt> <tt class="literal">chapter;</tt>. It
also sets the section counter back to zero through
<tt class="literal">counter-reset:</tt> <tt class="literal">section;</tt>. Then,
for each section heading (<tt class="literal">H2</tt>), the browser uses
the chapter number, followed by a <a name="INDEX-1180" /> <a name="INDEX-1181" />period (<tt class="literal">.</tt>)
followed by the current section number, which is also automatically
incremented.
</p>

<a name="css-CHP-10-FIG-17" /><div class="figure"><img alt="Figure 10-17" src="figs/css.1017.gif" /></div><h4 class="objtitle">Figure 10-17. Adding counters to elements</h4>

<p>You don't have to increment by one every time, either. You can
define any integer as the increment value, including zero and
negative numbers. If you want each section to have an even number, as
we see in <a href="ch10_04.htm">Figure 10-18</a>, then you can declare the
following:
</p>

<blockquote><pre class="code">H2:before {
   content: "Section " counter(section) ". ";
   counter-increment: section 2; /* Add 2 to chapter */
}</pre></blockquote>

<a name="css-CHP-10-FIG-18" /><div class="figure"><img alt="Figure 10-18" src="figs/css.1018.gif" /></div><h4 class="objtitle">Figure 10-18. Changing a counter's incremental value</h4>

<p>You can also keep an element from incrementing a counter by setting
its <tt class="literal">display</tt> to <tt class="literal">none</tt>. Of course,
that will cause the element to disappear altogether.
</p>

</div>
<a name="css-CHP-10-SECT-4.2" /><div class="sect2">
<h3 class="sect2">10.4.2. Markers</h3>

<p><a name="INDEX-1182" />You
can do even more by using the value <tt class="literal">marker</tt> for the
property <tt class="literal">display</tt><a name="INDEX-1183" />, which enables you to define your
own marker styles for any element at all. You're already
familiar with markers, as it happens -- the bullets and numbers at
the beginning of list items are markers.
</p>

<p>Let's say we want to recreate the way unordered lists behave.
For the purposes of this example, we'll use the image
<em class="filename">disc.gif</em> to stand in for the normal bullets.
Using marker properties, we would declare:
</p>

<blockquote><pre class="code">LI:before {display: marker;
   content: url(disc.gif);
   marker-offset: 1em;
}</pre></blockquote>

<p>This will insert the disc image before each list item, and set it to
be offset from the left edge of the <tt class="literal">LI</tt> content by
<tt class="literal">1em</tt>, as shown in <a href="ch10_04.htm">Figure 10-19</a>.
</p>

<a name="css-CHP-10-FIG-19" /><div class="figure"><img alt="Figure 10-19" src="figs/css.1019.gif" /></div><h4 class="objtitle">Figure 10-19. Styling list markers</h4>

<p>Marker properties are not restricted to list items, however.
Let's say that, throughout a document, there are a few
paragraphs with a class of <tt class="literal">aside</tt>. We wish to call
attention to these paragraphs by inserting a small note to the side
of each one. Here's one way to do it:
</p>

<blockquote><pre class="code">BODY {counter-reset: aside-ctr;}
P {margin-left: 10em;}
P.aside:before {display: marker;
   content: "Aside " counter(aside-ctr) " --";
   counter-increment: aside-ctr;
   text-align: right;
   marker-offset: 1em;
   width: 9.5em;
}</pre></blockquote>

<p>The effect will be something like that seen in <a href="ch10_04.htm">Figure 10-20</a>.
</p>

<a name="css-CHP-10-FIG-20" /><div class="figure"><img alt="Figure 10-20" src="figs/css.1020.gif" /></div><h4 class="objtitle">Figure 10-20. Automatically numbered asides</h4>

<p>This is yet another aspect of CSS2 that, once it's been
properly implemented, will allow authors to do quite a bit with
their<a name="INDEX-1184" />
documents.<a name="INDEX-1185" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch10_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">10.3. Fonts and Text</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">10.5. Adapting to the Environment</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
