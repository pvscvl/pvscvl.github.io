<html><head><title>Borders (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch07_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch07_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">7.4. Borders</h2>

<p><a name="INDEX-785" />The
border of an element is simply a line (sometimes more than one) that
surrounds the content and padding of an element. Thus, the background
of the element will stop at the outer edge of the border, since the
background does not extend into the margins, and the border is just
inside the margin. The CSS specification strongly implies that the
background extends to the outside edge of the border, since it talks
about the borders being drawn "on top of the background of the
element," but not all browsers seem to agree. This is important
because some borders are "intermittent" -- for
example, dotted and dashed styles -- and the element's
background should appear in the spaces between the visible portions
of the border.
</p>

<p>Every border has three aspects: its width, or thickness; its style,
or appearance; and its color. The default value for the width of a
border is <tt class="literal">medium</tt> , which is not explicitly defined
but usually works out to be two or three pixels. Despite this, the
reason you don't usually see borders is that the default style
is <tt class="literal">none</tt>, which prevents them from existing. If a
border has no style, then it may as well not exist, so it
doesn't. The absence of a border style also resets the width,
but we'll get to that in a little while.
</p>

<p>Finally, the default border color is the foreground color of the
element itself. If no color has been declared for the border, then it
will be the same color as the text of the element. If, on the other
hand, an element has no text -- let's say a table which
contains only images -- then thanks to the fact that color is
inherited, the border color for that table would be the text color of
its parent element. This is likely to be <tt class="literal">BODY</tt>,
<tt class="literal">DIV</tt>, or another <tt class="literal">TABLE</tt>. Thus, if
an image has a border, and the <tt class="literal">BODY</tt> is its parent,
given this rule:
</p>

<blockquote><pre class="code">BODY {color: purple;}</pre></blockquote>

<p>then, by default, the border around the image will be purple. Of
course, to get that border to appear, you have to do a little work
first.
</p>

<a name="css-CHP-7-SECT-4.1" /><div class="sect2">
<h3 class="sect2">7.4.1. Borders with Style</h3>

<p><a name="INDEX-786" />We'll talk
about the border's style first because it is the most important
part of a border. It's most important not because it controls
the appearance of the border, although it does do that, but because
without a style there would be no border at all.
</p>

<a name="css-CHP-7-SIDEBAR-5" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">border-style</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p><tt class="literal">none</tt> | <tt class="literal">dotted</tt> |
<tt class="literal">dashed</tt> | <tt class="literal">solid</tt> |
<tt class="literal">double</tt> | <tt class="literal">groove</tt> |
<tt class="literal">ridge</tt> | <tt class="literal">inset</tt> |
<tt class="literal">outset</tt>
</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p><tt class="literal">none</tt></p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>

<a name="ch07-24-fm2xml" /><blockquote><h4>WARNING</h4>
<p>Support for only <tt class="literal">solid</tt> is required for CSS1
compliance.
</p>
</blockquote>
</td></tr></table></blockquote>

<p><a name="INDEX-787" />There are nine distinct styles for the
property <tt class="literal">border-style</tt> defined in CSS1, including
the default value of <tt class="literal">none</tt>. They are demonstrated
in <a href="ch07_04.htm">Figure 7-29</a>.
</p>

<a name="css-CHP-7-FIG-29" /><div class="figure"><img height="320" alt="Figure 7-29" src="figs/css.0729.gif" width="345" /></div><h4 class="objtitle">Figure 7-29. Border styles</h4>

<a name="ch07-26-fm2xml" /><blockquote><h4>TIP</h4>
<p>The most interesting border style is <tt class="literal">double</tt>.
It's defined such that the width of the two lines, plus the
width of the space between them, is equal to the value of
<tt class="literal">border-width</tt> (discussed in the next section).
However, the specification doesn't say whether one of the lines
should be thicker than the other, or if they should be the same
width, or if the space should be thicker or thinner than the lines.
All of these things are left up to the user agent to decide.
</p>
</blockquote>

<p>All of the borders shown in <a href="ch07_04.htm">Figure 7-30</a> are based on
a color of <tt class="literal">gray</tt>, which makes all of the effects
easier to see. The look of a border style is always based in some way
on the color of the border, although the exact method may vary
between user agents. For example, <a href="ch07_04.htm">Figure 7-30</a>
illustrates two different ways of rendering an
<tt class="literal">inset</tt> border.
</p>

<a name="css-CHP-7-FIG-30" /><div class="figure"><img height="53" alt="Figure 7-30" src="figs/css.0730.gif" width="345" /></div><h4 class="objtitle">Figure 7-30. Two valid ways of rendering inset</h4>

<p>So let's assume that you want to define a border style for
images that are inside a hyperlink. You might make them outset, so
they have a "<a name="INDEX-788" />raised button" look, as depicted in
<a href="ch07_04.htm">Figure 7-31</a>:
</p>

<blockquote><pre class="code">A:link IMG {border-style: outset;}</pre></blockquote>

<a name="css-CHP-7-FIG-31" /><div class="figure"><img height="31" alt="Figure 7-31" src="figs/css.0731.gif" width="43" /></div><h4 class="objtitle">Figure 7-31. Applying an outset border to a hyperlinked image</h4>

<p>Again, the color of the border is based on the element's value
for <tt class="literal">color</tt>, which in this circumstance is likely to
be blue (although we can't show that in print). This is due to
the fact that the image is contained with a hyperlink, and the
foreground color of hyperlinks is usually <tt class="literal">blue</tt>. If
we so desired, we could change that color to be
<tt class="literal">silver</tt>, like this:
</p>

<blockquote><pre class="code">A:link IMG {border-style: outset; color: silver;}</pre></blockquote>

<p>As <a href="ch07_04.htm">Figure 7-32</a> shows, the border is now based on the
light gray <tt class="literal">silver</tt>, since that's now the
foreground color of the image -- even though the image
doesn't actually use that color, it's still passed on to
the border. We'll talk about another way to change border
colors in a later section.
</p>

<a name="css-CHP-7-FIG-32" /><div class="figure"><img height="31" alt="Figure 7-32" src="figs/css.0732.gif" width="43" /></div><h4 class="objtitle">Figure 7-32. Changing the color of the border</h4>

<a name="css-CHP-7-SECT-4.1.1" /><div class="sect3">
<h3 class="sect3">7.4.1.1. Multiple styles</h3>

<p><a name="INDEX-789" />It's also possible to define more
than one style for a given border. For example:
</p>

<blockquote><pre class="code">P.aside {border-style: solid dashed dotted solid;}</pre></blockquote>

<p>The result, shown in <a href="ch07_04.htm">Figure 7-33</a>, is a paragraph
with a solid top border, a dashed right border, a dotted bottom
border, and a solid left border.
</p>

<a name="css-CHP-7-FIG-33" /><div class="figure"><img height="181" alt="Figure 7-33" src="figs/css.0733.gif" width="356" /></div><h4 class="objtitle">Figure 7-33. Multiple border styles on a single element</h4>

<p>Again we see the top-right-bottom-left order of values. This is just
like the ability to set different margins with multiple values. All
the same rules about
<a name="INDEX-790" />
<a name="INDEX-791" />value
replication apply to border styles, just as they did with margins and
padding. Thus, the following two statements would have the same
effect, as depicted in <a href="ch07_04.htm">Figure 7-34</a>:
</p>

<blockquote><pre class="code">P.new1 {border-style: solid dashed none;}
P.new2 {border-style: solid dashed none dashed;}</pre></blockquote>

<a name="css-CHP-7-FIG-34" /><div class="figure"><img height="150" alt="Figure 7-34" src="figs/css.0734.gif" width="356" /></div><h4 class="objtitle">Figure 7-34. Equivalent style rules</h4>

<p>In case you're wondering, under CSS1, there is no way to
directly set the style for only a single side using something like
<tt class="literal">border-top-style</tt>, since no such property exists in
CSS1 (although that property, and others like it, were introduced in
CSS2). You can, however, sneak around this limitation by declaring
the style for a given border using one of the shorthand properties
we'll discuss later in the chapter.
</p>

</div>

<a name="css-CHP-7-SECT-4.1.2" /><div class="sect3">
<h3 class="sect3">7.4.1.2. Falling back on solid</h3>

<p>There is one interesting thing about CSS that can make life difficult
for authors. According to CSS1, a user agent is allowed to interpret
any value of <tt class="literal">border-style</tt> (besides
<tt class="literal">none</tt>) as <tt class="literal">solid</tt>. Because of this
allowance, a user agent that is technically CSS1-compliant could
display the following as all solid:
</p>

<blockquote><pre class="code">P.new3 {border-style: ridge dashed double;}</pre></blockquote>

<p>The result shown in <a href="ch07_04.htm">Figure 7-35</a> wouldn't be
what the author had in mind, of course, but it's technically
correct. So long as <tt class="literal">none</tt> and
<tt class="literal">solid</tt> are supported, and any other legal values
are interpreted as <tt class="literal">solid</tt>, that's enough to
be CSS1-compliant. Accordingly, even though Navigator 4.x fails to
render <tt class="literal">dashed</tt> and <tt class="literal">dotted</tt>
borders, since it does render them as <tt class="literal">solid</tt>,
it's not behaving badly.
</p>

<a name="css-CHP-7-FIG-35" /><div class="figure"><img height="77" alt="Figure 7-35" src="figs/css.0735.gif" width="334" /></div><h4 class="objtitle">Figure 7-35. Using solid to stand in for unrecognized border styles</h4>

<p>You may have noticed that all of the examples in this section had
borders of exactly the same width. That's because we
didn't define a width, so it defaulted to a certain value.
Next, we'll find out about that default, and much
more.<a name="INDEX-792" />
</p>

</div>
</div>
<a name="css-CHP-7-SECT-4.2" /><div class="sect2">
<h3 class="sect2">7.4.2. Border Widths</h3>

<p><a name="INDEX-793" />
<a name="INDEX-794" />Once
you've assigned a style, the next step in customizing a border
is to give it some width. This is done with the property
<tt class="literal">border-width</tt>. You can also use one of the cousin
<a name="INDEX-795" />properties:
<tt class="literal">border-top-width</tt> ,
<tt class="literal">border-right-width</tt> ,
<tt class="literal">border-button-width</tt> , and
<tt class="literal">border-left-width</tt> .
</p>

<p><a name="INDEX-796" />
<a name="INDEX-797" />Each
<a name="INDEX-798" />
<a name="INDEX-799" />of these is
used to set the width on a specific border side, of course, just as
with the margin properties.
</p>

<a name="css-CHP-7-SIDEBAR-6" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">border-width</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p>[ <tt class="literal">thin</tt> | <tt class="literal">medium</tt> |
<tt class="literal">thick</tt> | &lt;length&gt; ]{1,4}
</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p>not defined for shorthand properties</p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>
</td></tr></table></blockquote>

<a name="css-CHP-7-SIDEBAR-7" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">border-top-width, border-right-width, border-bottom-width, border-left-width</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p><tt class="literal">thin</tt> | <tt class="literal">medium</tt> |
<tt class="literal">thick</tt> | &lt;length&gt;
</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p><tt class="literal">medium</tt></p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>
</td></tr></table></blockquote>

<p>There are four ways to assign a width to a border: you can give it a
length value such as <tt class="literal">4px</tt> or
<tt class="literal">0.1em</tt> or use one of three
<a name="INDEX-800" />keywords. These keywords are
<tt class="literal">thin</tt> , <tt class="literal">medium</tt> (the default
value), and <tt class="literal">thick</tt>. These keywords don't
necessarily correspond to any particular width but are simply defined
in relation to one another. According to the specification,
<tt class="literal">thick</tt> is always wider than
<tt class="literal">medium</tt> , which is in turn always wider than
<tt class="literal">thin</tt>.
</p>

<p>However, the exact widths are not defined, so one user agent could
set them to be equivalent to <tt class="literal">5px</tt> ,
<tt class="literal">3px</tt> , and <tt class="literal">2px</tt> , while another
sets them to be <tt class="literal">3px</tt> , <tt class="literal">2px</tt> , and
<tt class="literal">1px</tt> . Whatever width the user agent uses for each
keyword, it will be the same throughout the document, regardless of
the circumstances. If <tt class="literal">medium</tt> is the same as
<tt class="literal">2px</tt> , then a medium-width border will always be
two pixels wide, whether the border surrounds an
<tt class="literal">H1</tt> or a <tt class="literal">P</tt> element. <a href="ch07_04.htm">Figure 7-36</a> illustrates one way to handle these three
keywords, as well as how they relate to each other and to the content
they surround.
</p>

<a name="css-CHP-7-FIG-36" /><div class="figure"><img height="324" alt="Figure 7-36" src="figs/css.0736.gif" width="436" /></div><h4 class="objtitle">Figure 7-36. The relation of border-width keywords to each other</h4>

<p>Let's suppose a paragraph has margins, a background color, and
a border style set as shown in <a href="ch07_04.htm">Figure 7-37</a>:
</p>

<blockquote><pre class="code">P {margin: 5px; background-color: silver; border-style: solid;}</pre></blockquote>

<a name="css-CHP-7-FIG-37" /><div class="figure"><img height="31" alt="Figure 7-37" src="figs/css.0737.gif" width="343" /></div><h4 class="objtitle">Figure 7-37. Margins, backgrounds, and borders</h4>

<p>The border's width is, by default, <tt class="literal">medium</tt> ,
as we can see in <a href="ch07_04.htm">Figure 7-37</a>. We can change that to
the result in <a href="ch07_04.htm">Figure 7-38</a> as follows:
</p>

<blockquote><pre class="code">P {margin: 5px; background-color: silver; 
  border-style: solid; border-width: thick;}</pre></blockquote>

<a name="css-CHP-7-FIG-38" /><div class="figure"><img height="34" alt="Figure 7-38" src="figs/css.0738.gif" width="305" /></div><h4 class="objtitle">Figure 7-38. Changing the width of the border</h4>

<p>This can be taken to fairly ridiculous extremes, such as setting
20-pixel borders as depicted in <a href="ch07_04.htm">Figure 7-39</a>:
</p>

<blockquote><pre class="code">P {margin: 5px; background-color: silver; 
  border-style: solid; border-width: 20px;}</pre></blockquote>

<a name="css-CHP-7-FIG-39" /><div class="figure"><img height="71" alt="Figure 7-39" src="figs/css.0739.gif" width="377" /></div><h4 class="objtitle">Figure 7-39. Inflating the border width to unhealthy levels</h4>

<p>This is all as expected: the style and width combine to create a
border whose color is based on the foreground color of the element.
</p>

<p>It's also possible to set
<a name="INDEX-801" />widths for individual sides. This is done
in two familiar ways. The first is to use any of the specific
properties mentioned at the beginning of the section, such as
<tt class="literal">border-bottom-width</tt>. The other way is to use value
<a name="INDEX-802" />
<a name="INDEX-803" />replication
in <tt class="literal">border-width</tt>. These are both illustrated in
<a href="ch07_04.htm">Figure 7-40</a>.
</p>

<blockquote><pre class="code">H1 {border-style: none none dotted; border-bottom-width: thin;}
P {border-style: solid; border-width: 15px 2px 7px 4px;}</pre></blockquote>

<a name="css-CHP-7-FIG-40" /><div class="figure"><img height="160" alt="Figure 7-40" src="figs/css.0740.gif" width="388" /></div><h4 class="objtitle">Figure 7-40. Value replication and uneven border widths</h4>

<a name="css-CHP-7-SECT-4.2.1" /><div class="sect3">
<h3 class="sect3">7.4.2.1. No border at all</h3>

<p><a name="INDEX-804" />So far, we've only talked
about what happens when you're using a visible border style
such as <tt class="literal">solid</tt> or <tt class="literal">outset</tt>. Things
start to get interesting, though, when the border style is set to be
<tt class="literal">none</tt>:
</p>

<blockquote><pre class="code">P {margin: 5px; border-style: none; border-width: 20px;}</pre></blockquote>

<p>As we can see in <a href="ch07_04.htm">Figure 7-41</a>, despite the fact that
the border's width was set to be <tt class="literal">20px</tt> , when
the style is set to <tt class="literal">none</tt>, not only does the
border's style go away, so does its width! Why?
</p>

<a name="css-CHP-7-FIG-41" /><div class="figure"><img height="31" alt="Figure 7-41" src="figs/css.0741.gif" width="368" /></div><h4 class="objtitle">Figure 7-41. The incredible disappearing border</h4>

<p>If you'll remember, the terminology used in the previous
section was that a border with a style of <tt class="literal">none</tt>
does not exist. Those words were picked carefully because they help
explain what's going on here. Since the border doesn't
exist, it can't have any width, so the width is automatically
set to <tt class="literal">0</tt> (zero). This may seem completely
backward, but it actually makes a great deal of sense. After all, if
a drinking glass is empty, you can't really describe it as
being half-full of nothing. You can only discuss the depth of a
glass's contents if it has actual contents. In the same way,
talking about the width of a border only makes sense in the context
of borders that have some existence.
</p>

<p>This is important to bear in mind because a common mistake is to
forget to declare a border style. This leads to all kinds of author
frustration because at first glance, the styles appear correct. The
result, though, is a paragraph with no border:
</p>

<blockquote><pre class="code">P {margin: 5px; border-width: 20px;}</pre></blockquote>

<p>Since the default value of <tt class="literal">border-style</tt> is
<tt class="literal">none</tt>, failure to declare a style is exactly the
same as declaring <tt class="literal">border-style:</tt>
<tt class="literal">none</tt>. Therefore, if you want a border to appear,
you need to pick a style and declare it.<a name="INDEX-805" /> <a name="INDEX-806" />
</p>

</div>
</div>
<a name="css-CHP-7-SECT-4.3" /><div class="sect2">
<h3 class="sect2">7.4.3. Border Colors</h3>

<p><a name="INDEX-807" />
<a name="INDEX-808" />Compared
to the other aspects of borders, setting the color is pretty easy. In
CSS1, there is the single property <tt class="literal">border-color</tt>,
which can accept up to four color values at one time.
</p>

<a name="css-CHP-7-SIDEBAR-8" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">border-color</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p>&lt;color&gt;{1,4}</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p>the value of &lt;color&gt; for the element</p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>
</td></tr></table></blockquote>

<p><a name="INDEX-809" />If there are less than four values,
value <a name="INDEX-810" />
<a name="INDEX-811" />replication
takes effect. So if you want <tt class="literal">H1</tt> elements to have
thin, black top and bottom borders with thick, gray side borders, and
medium, gray borders around <tt class="literal">P</tt> elements, this will
suffice, as we can see in <a href="ch07_04.htm">Figure 7-42</a>:
</p>

<blockquote><pre class="code">H1 {border-style: solid; border-width: thin thick; border-color: black gray;}
P {border-style: solid; border-color: gray;}</pre></blockquote>

<a name="css-CHP-7-FIG-42" /><div class="figure"><img height="168" alt="Figure 7-42" src="figs/css.0742.gif" width="388" /></div><h4 class="objtitle">Figure 7-42. Borders have many aspects</h4>

<p>By default, a single color value will be applied to all four sides,
as with the paragraph in the previous example. On the other hand, if
you supply four color values, you can get a different color on each
side. Any type of color value can be used, from named colors to
hexadecimal and RGB values.
</p>

<blockquote><pre class="code">P {border-style: solid; border-width: thick;
  border-color: black rgb(25%,25%,25%) #808080 silver;}</pre></blockquote>

<p><a href="ch07_04.htm">Figure 7-43</a> shows us varying shades of gray for
borders. Thanks to the grayscale nature of this book, I've been
sticking mostly to shades of gray, but any color could be used. If
you wanted an <tt class="literal">H1</tt> with a red, green, blue, and
yellow border, it's this easy:
</p>

<blockquote><pre class="code">H1 {border-style: solid; border-color: red green blue yellow;}</pre></blockquote>

<a name="css-CHP-7-FIG-43" /><div class="figure"><img height="42" alt="Figure 7-43" src="figs/css.0743.gif" width="388" /></div><h4 class="objtitle">Figure 7-43. One border, many colors</h4>

<p>As previously discussed, if no colors are defined, then the default
color is the foreground color of the element. Thus, the following
declaration will be displayed as shown in <a href="ch07_04.htm">Figure 7-44</a>:
</p>

<blockquote><pre class="code">P.shade1 {border-style: solid; border-width: thick; color: gray;}
P.shade2 {border-style: solid; border-width: thick; color: gray;
   border-color: black;}</pre></blockquote>

<a name="css-CHP-7-FIG-44" /><div class="figure"><img height="68" alt="Figure 7-44" src="figs/css.0744.gif" width="388" /></div><h4 class="objtitle">Figure 7-44. Border colors based on the element's foreground (top) and the value of the border-color property (bottom)</h4>

<p>The result is that the first paragraph has a gray border, having
taken the value <tt class="literal">gray</tt> from the foreground color of
the paragraph itself. The second paragraph, on the other hand, has a
black border because that color was explicitly assigned using
<tt class="literal">border-color</tt>.<a name="INDEX-812" /> <a name="INDEX-813" />
</p>

</div>
<a name="css-CHP-7-SECT-4.4" /><div class="sect2">
<h3 class="sect2">7.4.4. Shorthand Border Properties</h3>

<p><a name="INDEX-814" />While it's nice to have
shorthand properties like <tt class="literal">border-color</tt> and
<tt class="literal">border-style</tt>, they aren't always a whole lot
of help. For example, you might want to set all <tt class="literal">H1</tt>
elements to have a thick, gray, solid border, but only along the
bottom. There are two ways to accomplish this:
</p>

<blockquote><pre class="code">H1 {border-bottom-width: thick;   /* option #1 */
  border-style: none none solid;
  border-color: gray;}
H1 {border-width: 0 0 thick;     /* option #2 */
  border-style: none none solid;
  border-color: gray;}</pre></blockquote>

<p>Neither is really convenient, given all the typing involved.
Fortunately, a better solution is available:
</p>

<blockquote><pre class="code">H1 {border-bottom: thick solid gray;}</pre></blockquote>

<p>This will apply the values to the bottom border alone, as shown in
<a href="ch07_04.htm">Figure 7-45</a>, leaving the others to their defaults.
Since the default border style is <tt class="literal">none</tt>, no borders
appear on the other three sides of the element.
</p>

<a name="css-CHP-7-FIG-45" /><div class="figure"><img height="68" alt="Figure 7-45" src="figs/css.0745.gif" width="341" /></div><h4 class="objtitle">Figure 7-45. Shorthand properties make styles easier</h4>

<p>As you may have guessed, there are a total of four such
<a name="INDEX-815" />shorthand <a name="INDEX-816" /> <a name="INDEX-817" />
<a name="INDEX-818" /> <a name="INDEX-819" />properties.
</p>

<a name="css-CHP-7-SIDEBAR-9" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">border-top, border-right, border-bottom, border-left</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p>&lt;border-width&gt; || &lt;border-style&gt; || &lt;color&gt;</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p>refer to individual properties</p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>
</td></tr></table></blockquote>

<p>It's possible to use these properties to create some complex
borders, such as those shown in <a href="ch07_04.htm">Figure 7-46</a>:
</p>

<blockquote><pre class="code">H1 {border-left: 3px solid gray;
  border-right: black 0.25em dotted;
  border-top: thick silver inset;
  border-bottom: double rgb(33%,33%,33%) 10px;}</pre></blockquote>

<a name="css-CHP-7-FIG-46" /><div class="figure"><img height="80" alt="Figure 7-46" src="figs/css.0746.gif" width="388" /></div><h4 class="objtitle">Figure 7-46. Very complex borders</h4>

<p>As you can see, the order of the actual values doesn't really
matter. The following three rules will yield exactly the same border,
as illustrated in <a href="ch07_04.htm">Figure 7-47</a>:
</p>

<blockquote><pre class="code">H1 {border-bottom: 3px solid gray;}
H2 {border-bottom: solid gray 3px;}
H3 {border-bottom: 3px gray solid;}</pre></blockquote>

<a name="css-CHP-7-FIG-47" /><div class="figure"><img height="171" alt="Figure 7-47" src="figs/css.0747.gif" width="371" /></div><h4 class="objtitle">Figure 7-47. Getting the same result in three different ways</h4>

<p>You can also leave out some values and have their defaults kick in,
like this:
</p>

<blockquote><pre class="code">H3 {color: gray; border-bottom: 3px solid;}</pre></blockquote>

<p>Since no border color is declared, the default value (the
element's foreground) is applied instead, as we can see in
<a href="ch07_04.htm">Figure 7-48</a>. Just remember that if you leave out a
border style, the default value of <tt class="literal">none</tt> will
prevent your border from appearing at all.
</p>

<a name="css-CHP-7-FIG-48" /><div class="figure"><img height="23" alt="Figure 7-48" src="figs/css.0748.gif" width="305" /></div><h4 class="objtitle">Figure 7-48. Letting default values fill in the gaps</h4>

<p>By contrast, if you set only a style, you will still get a border.
For example, let's say you simply want a border style of
<tt class="literal">dashed</tt> for the top of an element and are willing
to let the width default to <tt class="literal">medium</tt> and the color
to be inherited from the element itself. All you need in such a case
is the following:
</p>

<blockquote><pre class="code">P.roof {border-top: dashed;}</pre></blockquote>

<p>Another thing to note is that since each of these
"border-side" properties applies only to a specific side,
there isn't any possibility of value replication -- it
wouldn't make any sense. There can only be one of each type of
value: that is, only one width value, only one color value, and only
one border style. So don't try to declare more than one value
type:
</p>

<blockquote><pre class="code">H3 {border: thin thick solid purple;}  /* two width values--WRONG */</pre></blockquote>

<p>In such a case, the entire statement will be invalid and should be
ignored altogether.
</p>

<p>Finally, you need to take the usual precautions with shorthand
properties: if you omit a value, the default will be filled in
automatically. This can have unintended effects. Consider the
following:
</p>

<blockquote><pre class="code">H4 {border-style: dashed solid double;}
H4 {border: medium green;}</pre></blockquote>

<p>This will result in <tt class="literal">H4</tt> elements having no border
at all, because the lack of a border-style in the second rule means
that the default value of <tt class="literal">none</tt> will be used. As
we've seen, that will turn the border off altogether.
</p>

<a name="css-CHP-7-SECT-4.4.1" /><div class="sect3">
<h3 class="sect3">7.4.4.1. Setting borders as quickly as possible</h3>

<p><a name="INDEX-820" />With all of
this shorthand stuff, you're probably starting to suspect that
it goes even further, and you're right. We finally come to the
shortest shorthand border property of all: <tt class="literal">border</tt>.
</p>

<a name="css-CHP-7-SIDEBAR-10" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">border</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p>&lt;border-width&gt; || &lt;border-style&gt; || &lt;color&gt;</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p>refer to individual properties</p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>
</td></tr></table></blockquote>

<p>This property has the advantage of being very compact, although that
brevity introduces a few limitations. Before we worry about that,
let's see how <tt class="literal">border</tt> is used. If you want
all <tt class="literal">H1</tt> elements to have a thick, silver border,
it's very simple. This declaration would be displayed as shown
in <a href="ch07_04.htm">Figure 7-49</a>:
</p>

<blockquote><pre class="code">H1 {border: thick silver solid;}</pre></blockquote>

<a name="css-CHP-7-FIG-49" /><div class="figure"><img height="74" alt="Figure 7-49" src="figs/css.0749.gif" width="388" /></div><h4 class="objtitle">Figure 7-49. A really short border declaration</h4>

<p>The values are applied to all four sides. This is certainly
preferable to the next-best alternative, which would be:
</p>

<blockquote><pre class="code">H1 {border-top: thick silver solid;
  border-bottom: thick silver solid;
  border-right: thick silver solid;
  border-left: thick silver solid;}  /* same as previous markup */</pre></blockquote>

<p>The drawback with <tt class="literal">border</tt> is that you can only
define "global" styles, widths, and colors. In other
words, the values you supply for <tt class="literal">border</tt> will apply
to all four sides equally. If you want the borders to be different
for a single element, you'll need to use some of the other
border properties. Of course, it's possible to turn the
<a name="INDEX-821" />cascade to your advantage:
</p>

<blockquote><pre class="code">H1 {border: thick silver solid;
  border-left-width: 20px;}</pre></blockquote>

<p>The second rule overrides the width value for the left border
assigned by the first rule, thus replacing <tt class="literal">thick</tt>
with <tt class="literal">20px</tt> , as we see in<a name="INDEX-822" /> <a href="ch07_04.htm">Figure 7-50</a>.
</p>

<a name="css-CHP-7-FIG-50" /><div class="figure"><img height="74" alt="Figure 7-50" src="figs/css.0750.gif" width="388" /></div><h4 class="objtitle">Figure 7-50. Using the cascade to one's advantage</h4>

</div>
</div>
<a name="css-CHP-7-SECT-4.5" /><div class="sect2">
<h3 class="sect2">7.4.5. Borders and Inline Elements</h3>

<p><a name="INDEX-823" /> <a name="INDEX-824" />A lot
of this story will sound pretty familiar because it's largely
the same as what we discussed with margins and inline elements.
</p>

<p>In the first place, no matter how thick you make your borders on
inline elements, the line-height of the element won't change.
Let's set top and bottom borders on boldfaced text:
</p>

<blockquote><pre class="code">B {border-top: 10px solid gray; border-bottom: 5px solid silver;}</pre></blockquote>

<p>Once more, this is allowed in the specification, but it will have
absolutely no effect on the line height. However, since borders are
visible, they'll be drawn -- as you can see for yourself in
<a href="ch07_04.htm">Figure 7-51</a>.
</p>

<a name="css-CHP-7-FIG-51" /><div class="figure"><img height="42" alt="Figure 7-51" src="figs/css.0751.gif" width="381" /></div><h4 class="objtitle">Figure 7-51. Borders on inline elements</h4>

<p>The borders have to go somewhere. This is where they went.</p>

<p>Again, all of this is only true for the top and bottom sides of
inline elements; the left and right sides are a different story.
We'll start by considering the simple case of a small inline
element within a single line, as depicted in <a href="ch07_04.htm">Figure 7-52</a>.
</p>

<a name="css-CHP-7-FIG-52" /><div class="figure"><img height="32" alt="Figure 7-52" src="figs/css.0752.gif" width="381" /></div><h4 class="objtitle">Figure 7-52. An inline element</h4>

<p>Here, if we set values for the left or right border, not only will
they be visible, but they'll displace the text around them, as
we see in <a href="ch07_04.htm">Figure 7-53</a>:
</p>

<blockquote><pre class="code">B {border-left: 10px double gray; background: silver;}</pre></blockquote>

<a name="css-CHP-7-FIG-53" /><div class="figure"><img height="32" alt="Figure 7-53" src="figs/css.0753.gif" width="378" /></div><h4 class="objtitle">Figure 7-53. An inline element with a left border</h4>

<p>As expected, <a href="ch07_04.htm">Figure 7-53</a> shows a little extra space
on the left side of the inline element and no extra space above or
below it.
</p>

<p>With borders, just as with margins, the browser's calculations
for line-breaking are not directly affected by any
<a name="INDEX-825" />box
properties set for inline elements. The only effect is that the space
taken up by the borders may shift portions of the line over a bit,
which may in turn change which word is at the end of the line. Turn
to <a href="ch07_04.htm">Figure 7-54</a> to see what happens when an inline
element with a border is displayed across multiple lines:
</p>

<blockquote><pre class="code">B {border: 3px solid gray; background: silver;}</pre></blockquote>

<a name="css-CHP-7-FIG-54" /><div class="figure"><img height="74" alt="Figure 7-54" src="figs/css.0754.gif" width="250" /></div><h4 class="objtitle">Figure 7-54. An inline element with a border displayed across multiple lines of text</h4>

<p>In <a href="ch07_04.htm">Figure 7-54</a>, the left border is applied to the
beginning of the element, and the right border to the end of it.
Borders are <em class="emphasis">not necessarily</em> applied in this
fashion; they can also be applied to the right and left side of each
line in the element, if the situation seems to demand it. For
example, a grooved border might look better enclosed on each line
end, as shown in <a href="ch07_04.htm">Figure 7-55</a>.
</p>

<a name="css-CHP-7-FIG-55" /><div class="figure"><img height="74" alt="Figure 7-55" src="figs/css.0755.gif" width="255" /></div><h4 class="objtitle">Figure 7-55. An inline element with a border displayed across multiple lines of text, with the border boxes closed</h4>

<p>It's also acceptable for the lines to be "open" as
shown in <a href="ch07_04.htm">Figure 7-54</a>.
</p>

<a name="ch07-42-fm2xml" /><blockquote><h4>WARNING</h4>
<p>Borders cannot be applied to inline elements in
<a name="INDEX-826" />Navigator 4.x or
<a name="INDEX-827" />Explorer
4.x/<a name="INDEX-828" />5.x. Only Opera 3.x draws borders around
inline elements, and it only caps the beginning and end of the
element. This is in agreement with the CSS specification, although
this is not discussed here (see <a href="ch08_01.htm">Chapter 8, "Visual Formatting"</a>, for
more details).<a name="INDEX-829" /> <a name="INDEX-830" />
</p>
</blockquote>

</div>
<a name="css-CHP-7-SECT-4.6" /><div class="sect2">
<h3 class="sect2">7.4.6. Borders: Known Issues</h3>

<p>Of course, there are a few problems with using borders. The most
distressing is the fact that <a name="INDEX-831" />Navigator 4.x won't draw a border
around the content area of a block-level element but instead inserts
some space between the content and the border. There doesn't
seem to be any way to override this behavior.
</p>

<p>Despite its limitations, <tt class="literal">border</tt> is obviously a
very useful property. It can even be used to work around what seems
like a completely unrelated bug in Netscape Navigator 4.x. If you
assign a background color to an element and then view it in
<a name="INDEX-832" />Navigator 4.x, the color will only
appear behind the letters in the text and not cover the entire
content area and padding. You can get around this by declaring:
</p>

<blockquote><pre class="code">border {0.1px solid none;}</pre></blockquote>

<p>Despite the fact that no border will appear, and this shouldn't
have anything to do with background colors, this will cause Navigator
4.x to fill in the background of the content area with the assigned
color.
</p>

<p>Speaking of Navigator, it is extremely dangerous to set
borders -- or any other <a name="INDEX-833" />box properties -- on
<a name="INDEX-834" />inline elements. This is as true for
borders as it is for margins, and for much the same
reasons.<a name="INDEX-835" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch07_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch07_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">7.3. Margins</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">7.5. Padding</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
