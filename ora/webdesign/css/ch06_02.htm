<html><head><title>Complex Backgrounds (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch06_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">6.2. Complex Backgrounds</h2>

<p><a name="INDEX-665" />
<a name="INDEX-666" />Having <a name="INDEX-667" /> <a name="INDEX-668" />covered the basics of foreground and
background colors, we turn now to the subject of background images.
In HTML, it's possible to associate an image with the
background of the document by using the <tt class="literal">BODY</tt>
attribute <tt class="literal">BACKGROUND</tt>:
</p>

<blockquote><pre class="code">&lt;BODY BACKGROUND="bg23.gif"&gt;</pre></blockquote>

<p>This will cause a user agent to load the file
<tt class="literal">bg23.gif</tt> and then "tile" it in the
document background, repeating it in both the horizontal and vertical
directions to fill up the entire background of the document, as shown
in <a href="ch06_02.htm">Figure 6-22</a>.
</p>

<a name="css-CHP-6-FIG-22" /><div class="figure"><img height="225" alt="Figure 6-22" src="figs/css.0622.gif" width="388" /></div><h4 class="objtitle">Figure 6-22. Applying a background image in HTML</h4>

<p>This effect can be duplicated in CSS, but CSS contains a great deal
more than simple tiling of background images. We'll start with
the basics and then work our way up.
</p>

<a name="css-CHP-6-SECT-2.1" /><div class="sect2">
<h3 class="sect2">6.2.1. Background Images</h3>

<p><a name="INDEX-669" />In order to
get an image into the background in the first place, the property
<tt class="literal">background-image</tt> is used.
</p>

<a name="css-CHP-6-SIDEBAR-3" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">background-image</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p>&lt;url&gt; | <tt class="literal">none</tt></p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p><tt class="literal">none</tt></p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>
</td></tr></table></blockquote>

<p>The default value of <tt class="literal">none</tt> means about what
you'd expect: no image is placed in the background. If you want
a background image, then you need only give this property a
<a name="INDEX-670" />URL value:
</p>

<blockquote><pre class="code">BODY {background-image: url(bg23.gif);}</pre></blockquote>

<p><a name="INDEX-671" />Due to the default values of other
background properties, this will cause the image
<em class="filename">bg23.gif</em> to be tiled in the document's
background, as shown in <a href="ch06_02.htm">Figure 6-22</a>.
</p>

<p>It's usually a good idea to specify a background color to go
along with your background image. I won't do so in this
section, since we're concentrating on
<tt class="literal">background-image</tt> for the moment. We'll come
back to why setting a color is a good idea later on in the chapter.
</p>

<p>A background image can be applied to any element, whether block-level
or inline. <tt class="literal">BODY</tt> is the most common element to
which backgrounds are applied, of course, but there's no need
to stop there. For example:
</p>

<blockquote><pre class="code">P.starry{background-image: url(http://www.site.web/pix/stars.gif);
   color: white;}

&lt;P CLASS="starry"&gt;It's the end of autumn, which means the stars will be 
brighter than  ever!  Join us...</pre></blockquote>

<p>As we can see in <a href="ch06_02.htm">Figure 6-23</a>, a background has been
applied to a single paragraph and no other part of the document.
</p>

<a name="css-CHP-6-FIG-23" /><div class="figure"><img height="260" alt="Figure 6-23" src="figs/css.0623.gif" width="474" /></div><h4 class="objtitle">Figure 6-23. Applying a background image for a single element</h4>

<p>This ability goes even further, allowing you to place background
images on <a name="INDEX-672" />inline elements like
<a name="INDEX-673" />
<a name="INDEX-674" />hyperlinks, as depicted in <a href="ch06_02.htm">Figure 6-24</a>. Of course, if you want to be able to see the
tiling pattern, the image will probably need to be pretty small.
After all, individual letters aren't that large!
</p>

<blockquote><pre class="code">A.grid {background-image: url(smallgrid.gif);}

&lt;P&gt;This paragraph contains &lt;A HREF="..." CLASS="grid"&gt;an anchor with a 
background image&lt;/A&gt; which is tiled only within the anchor.&lt;/P&gt;</pre></blockquote>

<a name="css-CHP-6-FIG-24" /><div class="figure"><img height="149" alt="Figure 6-24" src="figs/css.0624.gif" width="448" /></div><h4 class="objtitle">Figure 6-24. A background image on an inline element</h4>

<p>There are a number of ways to employ this technique. You might place
an image in the background of <tt class="literal">STRONG</tt> elements, in
order to make them stand out more. You could fill in the background
of headings with a wavy pattern, or with little dots. You can even
fill in the cells of tables with patterns to make them distinct from
the rest of the page, as shown in <a href="ch06_02.htm">Figure 6-25</a>:
</p>

<blockquote><pre class="code">TD.nav {background-image: url(darkgrid.gif);}</pre></blockquote>

<a name="css-CHP-6-FIG-25" /><div class="figure"><img height="181" alt="Figure 6-25" src="figs/css.0625.gif" width="392" /></div><h4 class="objtitle">Figure 6-25. Setting a background image for a table cell</h4>

<p>You could even, in theory, apply images to the background of replaced
elements like <tt class="literal">TEXTAREA</tt>s and
<tt class="literal">SELECT</tt> lists, although user agents aren't
very good about that sort of thing yet -- in fact, as of this
writing, no
<a name="INDEX-675" />browser will correctly place images in the
backgrounds of <a name="INDEX-676" />form elements.
</p>

<a name="ch06-18-fm2xml" /><blockquote><h4>WARNING</h4>
<p>Just like <tt class="literal">background-color</tt>,
<tt class="literal">background-image</tt> is not inherited -- in fact,
none of the background properties are inherited. Remember also that
when specifying the URL of a background image, it falls under the
usual restrictions and caveats for <tt class="literal">url</tt> values: a
relative URL should be interpreted with respect to the style sheet,
but Navigator 4.x doesn't do this correctly, so absolute URLs
may be a better answer.
</p>
</blockquote>

<a name="css-CHP-6-SECT-2.1.1" /><div class="sect3">
<h3 class="sect3">6.2.1.1. Good background practices</h3>

<p>An interesting thing about images is that they're laid on top
of whatever
<a name="INDEX-677" />
<a name="INDEX-678" />background color you may have specified.
If you're completely tiling GIF, JPEG, or other opaque image
types, this doesn't really make a difference, since
they'll fill up the document background, leaving nowhere for
the color to "peek through," so to speak. However, image
formats with an alpha channel, such as PNG, can be partially or
wholly transparent, and this will cause the image to be combined with
the background color. In addition, if the image fails to load for
some reason, the user agent will use the background color specified
in place of the image. Consider how the "starry
paragraph" example would look if the background image failed to
load, as in <a href="ch06_02.htm">Figure 6-26</a>.
</p>

<a name="css-CHP-6-FIG-26" /><div class="figure"><img height="274" alt="Figure 6-26" src="figs/css.0626.gif" width="418" /></div><h4 class="objtitle">Figure 6-26. The consequences of a missing background image</h4>

<p>Given this reason alone, it's always a good idea to specify a
background color when using a background image, so that your white
text will at least be visible:
</p>

<blockquote><pre class="code">P.starry {background-image: url(http://www.site.web/pix/stars.gif);
   background-color: black; color: white;}

&lt;P CLASS="starry"&gt;It's the end of autumn, which means the stars will be 
brighter than ever!  Join us...</pre></blockquote>

<p>Besides, if you have the image do something other than fully tile
across the entire background of the document, then you'll need
a color to cover the parts that the image doesn't. Speaking of
which ...
</p>

</div>
</div>
<a name="css-CHP-6-SECT-2.2" /><div class="sect2">
<h3 class="sect2">6.2.2. Repeats with Direction</h3>

<p><a name="INDEX-679" />
<a name="INDEX-680" />Thus <a name="INDEX-681" />
<a name="INDEX-682" />far, all we've ever been able to do
in document design is repeat background images in both the horizontal
and vertical directions. If we wanted some kind of
"sidebar" background, it was necessary to create a very
short, but incredibly wide, image to place in the background; a
favorite size for these images is 10 pixels tall by 2,500 pixels
wide. Most of that image is blank space, of course. Only the left 100
or so pixels contain the "sidebar" image. The rest of the
image is basically wasted, as we can see in <a href="ch06_02.htm">Figure 6-27</a>.
</p>

<a name="css-CHP-6-FIG-27" /><div class="figure"><img height="289" alt="Figure 6-27" src="figs/css.0627.gif" width="427" /></div><h4 class="objtitle">Figure 6-27. Using a really wide image for a really small effect</h4>

<p>Wouldn't it be much nicer to just create a sidebar image which
is 10 pixels tall and 100 pixels wide, with no wasted blank space,
and then repeat it only in the vertical direction? This would
certainly make your design job a little easier, and your users'
download times a lot shorter. Enter
<tt class="literal">background-repeat</tt><a name="INDEX-683" />.
</p>

<a name="css-CHP-6-SIDEBAR-4" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">background-repeat</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p><tt class="literal">repeat</tt> | <tt class="literal">repeat-x</tt> |
<tt class="literal">repeat-y</tt> | <tt class="literal">no-repeat</tt>
</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p><tt class="literal">repeat</tt></p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>
</td></tr></table></blockquote>

<p>As you might guess, <tt class="literal">repeat</tt> causes the image to
tile in both the horizontal and vertical directions, just as
background images have always done in the past.
<tt class="literal">repeat-x</tt> and <tt class="literal">repeat-y</tt> cause the
image to be repeated in the horizontal or vertical directions,
respectively, and <tt class="literal">no-repeat</tt> prevents the image
from tiling in any direction.
</p>

<p>By default, the background image will start from the top left corner
of an element. (We'll see how to change this later in the
chapter.) Therefore, the following rules will have the effect seen in
<a href="ch06_02.htm">Figure 6-28</a>:
</p>

<blockquote><pre class="code">BODY {background-image: url(yinyang.gif); 
   background-repeat: repeat;}</pre></blockquote>

<a name="css-CHP-6-FIG-28" /><div class="figure"><img height="313" alt="Figure 6-28" src="figs/css.0628.gif" width="418" /></div><h4 class="objtitle">Figure 6-28. Tiling the background image in CSS</h4>

<p>I've left out a background color in order to keep the rule
short, but remember to include a background color any time you have a
background image. And, of course, the effect shown in <a href="ch06_02.htm">Figure 6-28</a> would have been the same if we'd left
out the <tt class="literal">background-repeat</tt> property altogether,
since <tt class="literal">repeat</tt> is its default value.
</p>

<p>Let's assume, though, that we just want images down the left
side of the document. Instead of having to create a special image
with a whole lot of blank space to the right of the image, we can
instead make a small change to our styles:
</p>

<blockquote><pre class="code">BODY {background-image: url(yinyang.gif); 
   background-repeat: repeat-y;}</pre></blockquote>

<p>As <a href="ch06_02.htm">Figure 6-29</a> demonstrates, the image is simply
repeated along the y-axis (that is, vertically) from its starting
position -- in this case, the top left corner of the browser
window.
</p>

<a name="css-CHP-6-FIG-29" /><div class="figure"><img height="313" alt="Figure 6-29" src="figs/css.0629.gif" width="406" /></div><h4 class="objtitle">Figure 6-29. Tiling along the vertical axis</h4>

<p>In effect, there is a repeated column in the background, and there is
only one such column. Should you want two columns of symbols in this
example, then the base image would have to be altered to contain
side-by-side symbols, as in <a href="ch06_02.htm">Figure 6-30</a>.
</p>

<a name="css-CHP-6-FIG-30" /><div class="figure"><img height="313" alt="Figure 6-30" src="figs/css.0630.gif" width="407" /></div><h4 class="objtitle">Figure 6-30. Tiling a slightly larger image on the vertical axis</h4>

<p>The expected result occurs when we change the repeat value to be
<tt class="literal">repeat-x</tt>:
</p>

<blockquote><pre class="code">BODY {background-image: url(yinyang.gif); 
   background-repeat: repeat-x;}</pre></blockquote>

<p>Now the image is repeated along the x-axis (in other words,
horizontally), as illustrated in <a href="ch06_02.htm">Figure 6-31</a>.
</p>

<a name="css-CHP-6-FIG-31" /><div class="figure"><img height="324" alt="Figure 6-31" src="figs/css.0631.gif" width="459" /></div><h4 class="objtitle">Figure 6-31. Tiling along the horizontal axis</h4>

<p>Finally, of course, we may wish not to repeat the background image at
all. In that case, we use the last value,
<tt class="literal">no-repeat</tt>, which is illustrated in <a href="ch06_02.htm">Figure 6-32</a>:
</p>

<a name="css-CHP-6-FIG-32" /><div class="figure"><img height="313" alt="Figure 6-32" src="figs/css.0632.gif" width="403" /></div><h4 class="objtitle">Figure 6-32. No tiling at all
</h4>

<blockquote><pre class="code">BODY {background-image: url(yinyang.gif); 
   background-repeat: no-repeat;}</pre></blockquote>

<p>This may not seem terribly useful, given that there is only a small
symbol in the top left corner of the document, but let's try it
again with a much bigger symbol, as shown in <a href="ch06_02.htm">Figure 6-33</a>:
</p>

<a name="css-CHP-6-FIG-33" /><div class="figure"><img height="300" alt="Figure 6-33" src="figs/css.0633.gif" width="427" /></div><h4 class="objtitle">Figure 6-33. Placing a single, large backround image</h4>

<blockquote><pre class="code">BODY {background-image: url(bigyinyang.gif); 
   background-repeat: no-repeat;}</pre></blockquote>

<a name="css-CHP-6-SECT-2.2.1" /><div class="sect3">
<h3 class="sect3">6.2.2.1. Real-world uses</h3>

<p>The ability to control the repeat direction dramatically expands the
range of effects possible in document design. For example,
let's say you want a triple border on the left side of each H1
element in your document. You could then declare the following:
</p>

<blockquote><pre class="code">H1 {background-image: url(triplebor.gif); background-repeat: repeat-y;}</pre></blockquote>

<p>As we can see in <a href="ch06_02.htm">Figure 6-34</a>, the very small image
<tt class="literal">triplebor.gif</tt> is repeated vertically along the
left side of the heading element, resulting in an effect that
isn't otherwise possible.
</p>

<a name="css-CHP-6-FIG-34" /><div class="figure"><img height="32" alt="Figure 6-34" src="figs/css.0634.gif" width="264" /></div><h4 class="objtitle">Figure 6-34. Creating a "triple border" on H2 elements</h4>

<p>We can take that further and decide to set a wavy border along the
top of each <tt class="literal">H1</tt> element, as illustrated in <a href="ch06_02.htm">Figure 6-35</a>. The image is colored in such a way that it
blends with the background color and produces the wavy effect shown:
</p>

<blockquote><pre class="code">H1 {background-image: url(wavybord.gif); background-repeat: repeat-x;
    background-color: #CCCCCC;}</pre></blockquote>

<a name="css-CHP-6-FIG-35" /><div class="figure"><img height="153" alt="Figure 6-35" src="figs/css.0635.gif" width="461" /></div><h4 class="objtitle">Figure 6-35. Setting a wavy top border on H1 elements</h4>

<p>Simply by choosing the appropriate image for the job, and employing
it in some creative ways, you can set up some truly astonishing
appearances. And that isn't the end of what's possible.
Now that we know how to keep a background image from repeating, how
about moving it around in<a name="INDEX-684" /> the<a name="INDEX-685" /> <a name="INDEX-686" /> background?
</p>

</div>
</div>
<a name="css-CHP-6-SECT-2.3" /><div class="sect2">
<h3 class="sect2">6.2.3. Background Positioning</h3>

<p><a name="INDEX-687" />
<a name="INDEX-688" />Thanks to
<tt class="literal">background-repeat</tt>, it's possible to place a
large image in the background of a document, and then keep it from
repeating. Let's add to that and actually change the
image's position in the background.
</p>

<a name="css-CHP-6-SIDEBAR-5" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">background-position</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p>[&lt;percentage&gt; | &lt;length&gt;]{1,2} | [<tt class="literal">top</tt>
| <tt class="literal">center</tt> | <tt class="literal">bottom</tt> ] ||
[<tt class="literal">left</tt> | <tt class="literal">center</tt> |
<tt class="literal">right</tt>]
</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p><tt class="literal">0%</tt> <tt class="literal">0%</tt></p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>block-level and replaced elements</p>
</dd>

</dl>

<a name="ch06-98072" /><blockquote><h4>WARNING</h4>
<p>Percentage values refer to a point on both the element and the origin
image (see explanation in <a href="ch06_02.htm">Section 6.2.3.2, "Percentage values"</a> later in this chapter).
</p>
</blockquote>
</td></tr></table></blockquote>

<p>For example, we could center it, with the result depicted in <a href="ch06_02.htm">Figure 6-36</a>:
</p>

<blockquote><pre class="code">BODY {background-image: url(bigyinyang.gif); 
   background-repeat: no-repeat;
   background-position: center;}</pre></blockquote>

<a name="css-CHP-6-FIG-36" /><div class="figure"><img height="361" alt="Figure 6-36" src="figs/css.0636.gif" width="461" /></div><h4 class="objtitle">Figure 6-36. Centering a single background image</h4>

<p>This positioning is all done using
<tt class="literal">background-position</tt><a name="INDEX-689" />, of
course, but there are a whole lot of ways to supply values for this
property. First off, there are the keywords <tt class="literal">top</tt>,
<tt class="literal">bottom</tt> , <tt class="literal">left</tt>,
<tt class="literal">right</tt>, and <tt class="literal">center</tt>. Usually,
these appear in pairs, but (as <a href="ch06_02.htm">Figure 6-36}</a> shows)
this is not always true. Then there are length values, such as
<tt class="literal">50px</tt> or <tt class="literal">2cm</tt> , and finally,
percentage values. Each type of value has a slightly different effect
on the placement of the background image.
</p>

<a name="css-CHP-6-SECT-2.3.1" /><div class="sect3">
<h3 class="sect3">6.2.3.1. Keywords</h3>

<p><a name="INDEX-690" />Easiest to understand are the
keywords. They have the effects you'd expect from their names;
for example, <tt class="literal">top</tt> <tt class="literal">right</tt> would
cause the background image to be placed in the top right corner of
the element. Let's go back to the small yin-yang symbol:
</p>

<blockquote><pre class="code">BODY {background-image: url(yinyang.gif); 
   background-repeat: no-repeat;
   background-position: top right;}</pre></blockquote>

<p>Incidentally, the result, shown in <a href="ch06_02.htm">Figure 6-37</a>,
would have been exactly the same had the position been declared as
<tt class="literal">right</tt> <tt class="literal">top</tt>. When using the
position keywords, they can appear in any order, so long as there are
no more than two of them, one for the horizontal and the other for
the vertical.
</p>

<a name="css-CHP-6-FIG-37" /><div class="figure"><img height="195" alt="Figure 6-37" src="figs/css.0637.gif" width="481" /></div><h4 class="objtitle">Figure 6-37. Placing the background image in the top right corner of the browser window</h4>

<p>If only one keyword appears, then the other is assumed to be
<tt class="literal">center</tt>. <a href="ch06_02.htm">Table 6-1</a> shows
equivalent keyword statements.
</p>

<a name="css-CHP-6-TABLE-1" /><h4 class="objtitle">Table 6-1. Position Keyword Equivalents</h4><table border="1">



<tr>
<th>
<p>Single Keyword</p>
</th>
<th>
<p>Equivalent To</p>
</th>
</tr>


<tr>
<td>
<p><tt class="literal">center</tt></p>
</td>
<td>
<p><tt class="literal">center center</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">top</tt><a name="INDEX-691" />
</p>
</td>
<td>
<p><tt class="literal">top center</tt></p>

<p><tt class="literal">center top</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">bottom</tt></p>
</td>
<td>
<p><tt class="literal">bottom center</tt></p>

<p><tt class="literal">center bottom</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">right</tt></p>
</td>
<td>
<p><tt class="literal">center right</tt></p>

<p><tt class="literal">right center</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">left</tt></p>
</td>
<td>
<p><tt class="literal">center left</tt></p>

<p><tt class="literal">left center</tt></p>
</td>
</tr>

</table>

<p>So if you want an image to appear in the very top center of each
paragraph, as in <a href="ch06_02.htm">Figure 6-38</a>, you need only declare:
<a name="INDEX-692" />
</p>

<blockquote><pre class="code">P {background-image: url(bg23.gif); 
   background-repeat: no-repeat;
   background-position: top;}</pre></blockquote>

<a name="css-CHP-6-FIG-38" /><div class="figure"><img height="191" alt="Figure 6-38" src="figs/css.0638.gif" width="459" /></div><h4 class="objtitle">Figure 6-38. Putting a single background image at the top of every paragraph</h4>

</div>

<a name="css-CHP-6-SECT-2.3.2" /><div class="sect3">
<h3 class="sect3">6.2.3.2. Percentage values</h3>

<p><a name="INDEX-693" />Closely related to the keywords are
percentage values, although they behave in a rather interesting way.
Let's say that you want to center a background image within its
element by using percentage values. That's easy enough:
</p>

<blockquote><pre class="code">BODY {background-image: url(bigyinyang.gif); 
   background-repeat: no-repeat;
   background-position: 50% 50%;}</pre></blockquote>

<p>This causes the background image to be placed such that its center is
aligned with the center of its parent element, as demonstrated in
<a href="ch06_02.htm">Figure 6-39</a>. In other words, the percentage values
apply to both the element and the background image.
</p>

<a name="css-CHP-6-FIG-39" /><div class="figure"><img height="320" alt="Figure 6-39" src="figs/css.0639.gif" width="400" /></div><h4 class="objtitle">Figure 6-39. Centering the background image using percentages</h4>

<p>In order to understand this concept, let's examine this process
in closer detail. When you center a background image in an element,
the point in the image which can be described as
<tt class="literal">50%</tt> <tt class="literal">50%</tt> is lined up with the
point in the element that can be described the same way. This is
shown in <a href="ch06_02.htm">Figure 6-40</a>.
</p>

<a name="css-CHP-6-FIG-40" /><div class="figure"><img height="339" alt="Figure 6-40" src="figs/css.0640.gif" width="400" /></div><h4 class="objtitle">Figure 6-40. Lining up the center of the image with the center of the browser window</h4>

<p>Thus, if you want to place a single background image a third of the
way across the element and two-thirds of the way down, then your
declaration would be:
</p>

<blockquote><pre class="code">BODY {background-image: url(bigyinyang.gif); 
   background-repeat: no-repeat;
   background-position: 33% 66%;}</pre></blockquote>

<p>The point in the background image that is one-third across and
two-thirds down from the top left corner of the image will be aligned
with the point that is as far from the top left corner of the
containing element, as shown in <a href="ch06_02.htm">Figure 6-41</a>.
</p>

<a name="css-CHP-6-FIG-41" /><div class="figure"><img height="341" alt="Figure 6-41" src="figs/css.0641.gif" width="400" /></div><h4 class="objtitle">Figure 6-41. More percentage positioning</h4>

<p>Note that with percentages the horizontal value
<em class="emphasis">always</em> comes first. If you were to switch the
percentages in the preceding example, the image would be placed
two-thirds of the way across the element and one-third of the way
down. It's also worth noting what happens if you only supply
one value. In that case, the single value supplied is taken to be the
horizontal value, and the vertical is assumed to be 50%. This is
basically the same as with the keywords, where if only one keyword is
given, the other is assumed to be <tt class="literal">center</tt>. Thus:
</p>

<blockquote><pre class="code">BODY {background-image: url(bigyinyang.gif); 
   background-repeat: no-repeat;
   background-position: 33%;}</pre></blockquote>

<p>The background image is placed one-third of the way across the page,
and halfway down it, as depicted in <a href="ch06_02.htm">Figure 6-42</a>.
</p>

<a name="css-CHP-6-FIG-42" /><div class="figure"><img height="320" alt="Figure 6-42" src="figs/css.0642.gif" width="400" /></div><h4 class="objtitle">Figure 6-42. Declaring only one percentage means the vertical position evaluates to 50%</h4>

<p><a href="ch06_02.htm">Table 6-2</a> gives a breakdown of keyword and
percentage equivalencies.
</p>

<a name="css-CHP-6-TABLE-2" /><h4 class="objtitle">Table 6-2. Positional Equivalents</h4><table border="1">




<tr>
<th>
<p>Single Keyword</p>
</th>
<th>
<p>Equivalent To</p>
</th>
<th>
<p>Equivalent To</p>
</th>
</tr>


<tr>
<td>
<p><tt class="literal">center</tt></p>
</td>
<td>
<p><tt class="literal">center center</tt></p>
</td>
<td>
<p><tt class="literal">50% 50%</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">top</tt><a name="INDEX-694" />
</p>
</td>
<td>
<p><tt class="literal">top center</tt></p>

<p><tt class="literal">center top</tt></p>
</td>
<td>
<p><tt class="literal">50% 0%</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">bottom</tt></p>
</td>
<td>
<p><tt class="literal">bottom center</tt></p>

<p><tt class="literal">center bottom</tt></p>
</td>
<td>
<p><tt class="literal">50% 100%</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">right</tt></p>
</td>
<td>
<p><tt class="literal">center right</tt></p>

<p><tt class="literal">right center</tt></p>
</td>
<td>
<p><tt class="literal">100% 50%</tt></p>

<p><tt class="literal">100%</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">left</tt></p>
</td>
<td>
<p><tt class="literal">center left</tt></p>

<p><tt class="literal">left center</tt></p>
</td>
<td>
<p><tt class="literal">0% 50%</tt></p>

<p><tt class="literal">0%</tt></p>
</td>
</tr>
<tr>
<td>

</td>
<td>
<p><tt class="literal">top left</tt></p>

<p><tt class="literal">left top</tt></p>
</td>
<td>
<p><tt class="literal">0% 0%</tt></p>
</td>
</tr>
<tr>
<td>

</td>
<td>
<p><tt class="literal">top right</tt></p>

<p><tt class="literal">right top</tt></p>
</td>
<td>
<p><tt class="literal">0% 100%</tt></p>
</td>
</tr>
<tr>
<td>

</td>
<td>
<p><tt class="literal">bottom right</tt></p>

<p><tt class="literal">right bottom</tt></p>
</td>
<td>
<p><tt class="literal">100% 100%</tt></p>
</td>
</tr>
<tr>
<td>

</td>
<td>
<p><tt class="literal">bottom left</tt></p>

<p><tt class="literal">left bottom</tt></p>
</td>
<td>
<p><tt class="literal">0% 100%</tt></p>
</td>
</tr>

</table>

<p>In case you were wondering, the default values for
<tt class="literal">background-position</tt> are <tt class="literal">0%</tt>
<tt class="literal">0%</tt>, which is functionally the same as
<tt class="literal">top</tt> <tt class="literal">left</tt>. That's why,
unless you set different values for the position, background images
always start tiling from the top left corner of the containing
element.<a name="INDEX-695" />
</p>

</div>

<a name="css-CHP-6-SECT-2.3.3" /><div class="sect3">
<h3 class="sect3">6.2.3.3. Length values</h3>

<p><a name="INDEX-696" />Finally, we turn to length values
for positioning. When you supply lengths for the position of the
background image, they are interpreted as offsets from the top left
corner of the element. The offset point is the top left corner of the
background image; thus, if you set the values <tt class="literal">20px</tt>
<tt class="literal">30px</tt> , the top left corner of the background image
will be 20 pixels to the right of, and 30 pixels below, the top left
corner of the containing element, as in <a href="ch06_02.htm">Figure 6-43</a>:
</p>

<blockquote><pre class="code">BODY {background-image: url(bg23.gif); 
   background-repeat: no-repeat;
   background-position: 20px 30px;}</pre></blockquote>

<a name="css-CHP-6-FIG-43" /><div class="figure"><img height="181" alt="Figure 6-43" src="figs/css.0643.gif" width="400" /></div><h4 class="objtitle">Figure 6-43. Offsetting the background image using length measures</h4>

<p>This is, of course, different than percentage values, in the sense
that the offset is simply from one top left corner to another. In
other words, the top left corner of the background image lines up
with the point specified in the
<tt class="literal">background-position</tt> declaration. You can combine
length and percentage values, though, to get a sort of "best of
both worlds" effect. Let's say you need to have a
background image that is all the way to the right side of an element
and 10 pixels down from the top, as illustrated in <a href="ch06_02.htm">Figure 6-44</a>. As always, the horizontal value comes first:
</p>

<blockquote><pre class="code">BODY {background-image: url(bg23.gif); 
   background-repeat: no-repeat;
   background-position: 100% 10px;}</pre></blockquote>

<a name="css-CHP-6-FIG-44" /><div class="figure"><img height="149" alt="Figure 6-44" src="figs/css.0644.gif" width="400" /></div><h4 class="objtitle">Figure 6-44. Mixing percentages and length values</h4>

<p>You <em class="emphasis">cannot</em>, however, mix keywords with other
values. Thus, <tt class="literal">top</tt> <tt class="literal">75%</tt> is not
valid. If you use a keyword, you're stuck using only keywords,
but percentages and lengths can be mixed together.
</p>

<p>Not only that, but if you're using lengths or percentages, you
can give negative values, thus pushing the image out of the element,
to some degree. Consider the example with the very large yin-yang
symbol for a background. At one point, we centered it, but what if we
only want part of it visible in the top left corner of the containing
element? No problem, at least in theory. First, assume the image is
300 pixels tall by 300 pixels wide. Then, assume that only the bottom
right third of it should be visible. We can get the desired effect
(shown in <a href="ch06_02.htm">Figure 6-45</a>) like this:
</p>

<blockquote><pre class="code">BODY {background-image: url(bigyinyang.gif); 
   background-repeat: no-repeat;
   background-position: -200px -200px;}</pre></blockquote>

<a name="css-CHP-6-FIG-45" /><div class="figure"><img height="246" alt="Figure 6-45" src="figs/css.0645.gif" width="400" /></div><h4 class="objtitle">Figure 6-45. Using negative length values</h4>

<p>Or, let's say we want a little more of it visible, as in <a href="ch06_02.htm">Figure 6-46</a>:
</p>

<blockquote><pre class="code">BODY {background-image: url(bigyinyang.gif); 
   background-repeat: no-repeat;
   background-position: -150px -100px;}</pre></blockquote>

<a name="css-CHP-6-FIG-46" /><div class="figure"><img height="246" alt="Figure 6-46" src="figs/css.0646.gif" width="400" /></div><h4 class="objtitle">Figure 6-46. Another set of negative lengths</h4>

<p>Negative percentages are also possible in theory, although there are
two issues involved. The first is the limitations of user agents,
which may not recognize negative values for
<tt class="literal">background-position</tt>. The other is that negative
percentages are somewhat interesting to calculate. <a href="ch06_02.htm">Figure 6-47</a> shows why.
</p>

<a name="css-CHP-6-FIG-47" /><div class="figure"><img height="484" alt="Figure 6-47" src="figs/css.0647.gif" width="281" /></div><h4 class="objtitle">Figure 6-47. Aligning negative percentage points: two scenarios</h4>

<p>This isn't to say that you shouldn't use negative values,
of course, just that there are issues to consider. As always.
</p>

<a name="ch06-28-fm2xml" /><blockquote><h4>WARNING</h4>
<p>Although most CSS-aware
<a name="INDEX-697" />browsers (Explorer 4.x and 5.x
and Opera 3.5 and later) honor negative background positions, the
effects are wildly unpredictable at best. This applies even to
negative lengths, which can cause unwanted tiling, inappropriate
positioning of the background images, and more. If you really need to
set a single background image so that it's hanging off the
page, you're probably better off producing an image that is
already cut off and just putting it in the top left corner.
</p>
</blockquote>

<p>Throughout this section, every example has had a repeat value of
<tt class="literal">no-repeat</tt>. The reason for this is simple: with
only a single background image, it's much easier to see how
positioning affects the placement of the first background image. We
don't have to prevent the background image from repeating,
though:
</p>

<blockquote><pre class="code">BODY {background-image: url(bigyinyang.gif); 
   background-position: -150px -100px;}</pre></blockquote>

<p>So, with the background repeating, we can see from <a href="ch06_02.htm">Figure 6-48</a> that the tiling pattern starts with the
position specified by <tt class="literal">background-position</tt>. This
first image is known as the <em class="emphasis">origin
image</em><a name="INDEX-698" /> <a name="INDEX-699" />, and it's very important to
understanding the next section.
</p>

<a name="css-CHP-6-FIG-48" /><div class="figure"><img height="246" alt="Figure 6-48" src="figs/css.0648.gif" width="400" /></div><h4 class="objtitle">Figure 6-48. Use of the background-position property sets the origin of the tiling pattern</h4>

<p>As it happens, the positioning of backgrounds does contradict
something I said earlier. <tt class="literal">background-position</tt> is
the only background property with restrictions, as it may only be
applied to block-level and replaced elements; background image
positioning cannot be done on inline elements such<a name="INDEX-700" />
as<a name="INDEX-701" /> hyperlinks.<a name="INDEX-702" /> <a name="INDEX-703" />
</p>

</div>
</div>
<a name="css-CHP-6-SECT-2.4" /><div class="sect2">
<h3 class="sect2">6.2.4. Repeats with Direction (Revisited)</h3>

<p><a name="INDEX-704" /> <a name="INDEX-705" />In
<a name="INDEX-706" /> <a name="INDEX-707" />the
previous section on repetition, we explored the values
<tt class="literal">repeat-x</tt> , <tt class="literal">repeat-y</tt>, and
<tt class="literal">repeat</tt>, and how they affect the tiling of
background images. In each case, however, the tiling pattern always
started from the top left corner of the containing element (e.g.,
<tt class="literal">BODY</tt>). That isn't a requirement, of course;
as we've seen, the default values for
<tt class="literal">background-position</tt> are <tt class="literal">0%</tt>
<tt class="literal">0%</tt>. So, unless you change the position of the
origin image, that's where the tiling starts. Now that we know
how to change the position of the origin image, we need to figure out
how user agents will handle the situation.
</p>

<p>It will be easier to show an example, and then explain it. Consider
the following, which is illustrated by <a href="ch06_02.htm">Figure 6-49</a>:
</p>

<blockquote><pre class="code">BODY {background-image: url(bg23.gif); 
   background-repeat: repeat-y;
   background-position: center;}</pre></blockquote>

<a name="css-CHP-6-FIG-49" /><div class="figure"><img height="295" alt="Figure 6-49" src="figs/css.0649.gif" width="400" /></div><h4 class="objtitle">Figure 6-49. Centering the origin image and repeating vertically</h4>

<p>So there you have it: a stripe running through the center of the
document. It may look wrong, but it isn't.
</p>

<p>The example shown in <a href="ch06_02.htm">Figure 6-49</a> is correct because
the origin image has been placed in the center of the
<tt class="literal">BODY</tt> element and then tiled along the y-axis
<em class="emphasis">in both directions</em>
 <em class="emphasis">--</em>  in other words, both up
<em class="emphasis">and</em> down. In a similar fashion, when the repeat
direction is horizontal, the background image is repeated to both the
right and the left, as shown in <a href="ch06_02.htm">Figure 6-50</a>:
</p>

<blockquote><pre class="code">BODY {background-image: url(bg23.gif); 
   background-repeat: repeat-x;
   background-position: center;}</pre></blockquote>

<a name="css-CHP-6-FIG-50" /><div class="figure"><img height="236" alt="Figure 6-50" src="figs/css.0650.gif" width="391" /></div><h4 class="objtitle">Figure 6-50. Centering with a horizontal repeat</h4>

<p>Therefore, setting a large image in the center of the
<tt class="literal">BODY</tt> and then letting it repeat will cause it to
tile in all <em class="emphasis">four</em> directions: up, down, left, and
right. The only difference <tt class="literal">background-position</tt>
makes is in where the tiling starts. <a href="ch06_02.htm">Figure 6-51</a>
shows the difference between tiling from the center of the
<tt class="literal">BODY</tt>, and from its top left corner.
</p>

<a name="css-CHP-6-FIG-51" /><div class="figure"><img height="171" alt="Figure 6-51" src="figs/css.0651.gif" width="481" /></div><h4 class="objtitle">Figure 6-51. The difference between starting a repeat from top left (left) and centering it (right)</h4>

<p>Note the differences along the edges of the browser window. When the
background repeats from the center, the grid is centered within the
viewport, resulting in consistent "clipping" along the
edges. The variations may seem subtle, but the odds are that
you'll have reason to use both approaches at some point in your
design career.
</p>

<p>In case you're wondering, there is no way to control the repeat
any more than we've already discussed. There is no
<tt class="literal">repeat-left</tt>, for example, although it could
certainly be added in some future version of CSS. For now, you get
full tiling, horizontal tiling, vertical tiling, or no tiling at all.
</p>

<a name="css-CHP-6-SECT-2.4.1" /><div class="sect3">
<h3 class="sect3">6.2.4.1. Repeating: Real-world issues</h3>

<p>There are a few things to keep in mind when it comes to web browsers.
First is that in Navigator 4 and Internet Explorer 4, tiling only
happened down and to the right. If you're using Explorer 4,
centering an image in the background and then tiling it would look
like <a href="ch06_02.htm">Figure 6-52</a>.
</p>

<a name="css-CHP-6-FIG-52" /><div class="figure"><img height="238" alt="Figure 6-52" src="figs/css.0652.gif" width="409" /></div><h4 class="objtitle">Figure 6-52. Incorrect behavior in Internet Explorer 4</h4>

<p>Navigator 4 manages to avoid this error by not honoring background
positioning at all, which means that the origin image
<em class="emphasis">always</em> appears in the top left corner of an
element under Navigator 4. Of the browsers that correctly position
background images, only four managed correct repeating, as of this
writing: Opera 3.6 for Windows, Internet Explorer 4.5 and 5 for
Macintosh, and Internet Explorer 5<a name="INDEX-708" /> <a name="INDEX-709" /> for<a name="INDEX-710" /> <a name="INDEX-711" /> Windows.
</p>

</div>
</div>
<a name="css-CHP-6-SECT-2.5" /><div class="sect2">
<h3 class="sect2">6.2.5. Getting Attached</h3>

<p><a name="INDEX-712" /> <a name="INDEX-713" /> <a name="INDEX-714" />Okay, so we can place the origin image for
the background anywhere in the background of an element, and we can
control (to a degree) how it tiles. As you may have already realized,
setting an image to be in the center of the document may mean, given
a sufficiently long document, that the background image isn't
initially visible to the reader. After all, a browser only provides a
window onto the document. If the document is too long to be displayed
in the window, then the user can scroll back and forth through the
document. The center could be two or three "screens"
below the beginning of the document, or just far enough down to push
much of the background image beyond the bottom of the browser window,
as shown in <a href="ch06_02.htm">Figure 6-53</a>.
</p>

<a name="css-CHP-6-FIG-53" /><div class="figure"><img height="238" alt="Figure 6-53" src="figs/css.0653.gif" width="400" /></div><h4 class="objtitle">Figure 6-53. The background image appears too low to be seen fully</h4>

<p>Furthermore, even assuming that the background image is initially
visible, it always scrolls with the document. Perhaps you don't
want to see what <a href="ch06_02.htm">Figure 6-54</a> depicts:
</p>

<blockquote><pre class="code">BODY {background-image: url(bigyinyang.gif); 
   background-repeat: no-repeat;
   background-position: center;}</pre></blockquote>

<a name="css-CHP-6-FIG-54" /><div class="figure"><img height="292" alt="Figure 6-54" src="figs/css.0654.gif" width="400" /></div><h4 class="objtitle">Figure 6-54. Scrolling the background image out of view</h4>

<p>Never fear: there is a way to prevent this scrolling.</p>

<a name="css-CHP-6-SIDEBAR-6" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">background-attachment</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p><tt class="literal">scroll</tt> | <tt class="literal">fixed</tt></p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p><tt class="literal">scroll</tt></p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>
</td></tr></table></blockquote>

<p>Using the property
<tt class="literal">background-attachment</tt><a name="INDEX-715" />, you can declare the background to be
<tt class="literal">fixed</tt> with respect to the viewing area and
therefore immune to the effects of scrolling:
</p>

<blockquote><pre class="code">BODY {background-image: url(bigyinyang.gif); 
   background-repeat: no-repeat;
   background-position: center;
   background-attachment: fixed;}</pre></blockquote>

<p>Doing this has two immediate effects, as we can see from <a href="ch06_02.htm">Figure 6-55</a>. The first is that the background does not
scroll along with the document. The second is that the position of
the image is determined by the viewing area, not the document size.
</p>

<a name="css-CHP-6-FIG-55" /><div class="figure"><img height="289" alt="Figure 6-55" src="figs/css.0655.gif" width="400" /></div><h4 class="objtitle">Figure 6-55. Nailing the background in place</h4>

<p>When printed, of course, the two are the same, since the display area
(the paper) is the same as the document size, at least for that page.
In a web browser, though, the viewing area can change as the user
resizes the browser's window. This will cause the
background's <a name="INDEX-716" /> <a name="INDEX-717" />origin image to shift as the window
changes size. <a href="ch06_02.htm">Figure 6-56</a> depicts several views of
the same document. So in a certain sense the image isn't fixed
in place, but it will remain fixed so long as the viewing area
isn't resized.
</p>

<a name="css-CHP-6-FIG-56" /><div class="figure"><img height="343" alt="Figure 6-56" src="figs/css.0656.gif" width="380" /></div><h4 class="objtitle">Figure 6-56. Centering still holds, even if the image is "fixed"</h4>

<p>There is only one other value for
<tt class="literal">background-attachment</tt>, and that's the
default value <tt class="literal">scroll</tt>. As you'd expect, this
causes the background to scroll along with the rest of the document
when viewed in a web browser, and it doesn't necessarily change
the origin image's position as the window is resized. If the
document width is fixed (perhaps by assigning an explicit width to
the <tt class="literal">BODY</tt> element), then resizing the viewing area
won't affect the placement of the origin image.
</p>

<a name="css-CHP-6-SECT-2.5.1" /><div class="sect3">
<h3 class="sect3">6.2.5.1. Interesting effects</h3>

<p><a name="INDEX-718" /> <a name="INDEX-719" /> <a name="INDEX-720" />In technical terms, when a
background image has been set to be <tt class="literal">fixed</tt>, it is
positioned with respect to the viewing area, not the element that
contains it. However, the background will only be visible within its
containing element. This leads to a rather interesting consequence.
</p>

<p>Let's say we have a document with a tiled background that
actually looks like it's tiled and an <tt class="literal">H1</tt>
element with the same pattern, only in a different color. Both the
<tt class="literal">BODY</tt> and <tt class="literal">H1</tt> elements are set to
have <tt class="literal">fixed</tt> backgrounds, resulting in something
like <a href="ch06_02.htm">Figure 6-57</a>:
</p>

<blockquote><pre class="code">BODY {background-image: url(tile1.gif);  background-repeat: repeat;
   background-attachment: fixed;}
H1 {background-image: url(tile2.gif);  background-repeat: repeat;
   background-attachment: fixed;}</pre></blockquote>

<a name="css-CHP-6-FIG-57" /><div class="figure"><img height="300" alt="Figure 6-57" src="figs/css.0657.gif" width="450" /></div><h4 class="objtitle">Figure 6-57. Perfect alignment of backgrounds</h4>

<p>How is this perfect alignment possible? Remember, when a background
is <tt class="literal">fixed</tt> , the origin element is positioned with
respect to the canvas. Thus, both background patterns begin tiling
from the top left corner of the document, not the individual
elements. For the <tt class="literal">BODY</tt>, we can see the entire
repeat pattern. For the <tt class="literal">H1</tt>, however, the only
place we can see its background is in the padding and content of the
<tt class="literal">H1</tt> itself. Since both background images are the
same size, and they have precisely the same origin position, they
appear to "line up" as shown in <a href="ch06_02.htm">Figure 6-57</a>.<a name="INDEX-721" /> <a name="INDEX-722" /> <a name="INDEX-723" />
</p>

<a name="ch06-34-fm2xml" /><blockquote><h4>WARNING</h4>
<p>There's a downside: as of this writing, web browsers
don't get this fixed alignment right, so this example was just
an interesting theoretical exercise.
</p>
</blockquote>

</div>
</div>
<a name="css-CHP-6-SECT-2.6" /><div class="sect2">
<h3 class="sect2">6.2.6. Bringing It All Together</h3>

<p><a name="INDEX-724" /> <a name="INDEX-725" />Just like with the font properties,
the background properties can all be brought together in a single
shorthand property: <tt class="literal">background</tt>. This property can
take a single value from each of the other background properties, in
literally any order.
</p>

<a name="css-CHP-6-SIDEBAR-7" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">background</h4>

<dl>
<dt><b>Values</b></dt>
<dd>
<p>&lt;background-color&gt; || &lt;background-image&gt; ||
&lt;background-repeat&gt; || &lt;background-attachment&gt; ||
&lt;background-position&gt;
</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p>refer to individual properties</p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>no</p>
</dd>

</dl>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>

<a name="ch06-66954" /><blockquote><h4>WARNING</h4>
<p>Percentage values are allowed for &lt;background-position&gt;.</p>
</blockquote>
</td></tr></table></blockquote>

<p>Thus the following statements are all equivalent and will have the
effect shown in <a href="ch06_02.htm">Figure 6-58</a>:
</p>

<blockquote><pre class="code">BODY {background-color: white; background-image: url(yinyang.gif);
   background-position: top left; background-repeat: repeat-y;
   background-attachment: fixed;}
BODY {background: white url(yinyang.gif) top left repeat-y fixed;}
BODY {background: fixed url(yinyang.gif) white top left repeat-y;}
BODY {background: url(yinyang.gif) white repeat-y fixed top left;}</pre></blockquote>

<a name="css-CHP-6-FIG-58" /><div class="figure"><img height="242" alt="Figure 6-58" src="figs/css.0658.gif" width="400" /></div><h4 class="objtitle">Figure 6-58. Using shorthand</h4>

<p>Actually, there is one slight restriction to how the values are
ordered in <tt class="literal">background</tt> , which is that if you have
two values for <tt class="literal">background-position</tt> , they must
appear together, horizontal first, then vertical. That probably
isn't a surprise, but it is important to remember.
</p>

<p>As is the case for shorthand properties, if you leave out any values,
the defaults for the relevant properties are filled in automatically.
Thus, the following two are equivalent:
</p>

<blockquote><pre class="code">BODY {background: white url(yinyang.gif;}
BODY {background: white url(yinyang.gif) top left repeat scroll;}</pre></blockquote>

<p>What's even better, there are no required values for
<tt class="literal">background</tt>  -- as long as you have at least one
value present, you can omit all the rest. Therefore, it's
possible to set just the background color using the shorthand
property, which is a very common practice:
</p>

<blockquote><pre class="code">BODY {background: white;}</pre></blockquote>

<p>This is perfectly legal, and in some ways preferred, given the
reduced number of keystrokes. In addition, it has the effect of
setting all of the other background properties to their defaults,
which means that <tt class="literal">background-image</tt> will be set to
<tt class="literal">none</tt>. This helps ensure readability by preventing
other rules (in, for example, the reader style sheet) from setting an
image in the background.
</p>

<p>Any of the following rules are also legal, as illustrated by <a href="ch06_02.htm">Figure 6-59</a>:
</p>

<blockquote><pre class="code">H1 {background: silver;}
H2 {background: url(h2bg.gif);}
P {background: url(parabg.gif);}
P.type1 {background: repeat-x left center;} /* BG from previous rule is lost */
P.type2 {background: center;}  /* same BG loss applies here as well */</pre></blockquote>

<a name="css-CHP-6-FIG-59" /><div class="figure"><img height="381" alt="Figure 6-59" src="figs/css.0659.gif" width="481" /></div><h4 class="objtitle">Figure 6-59. Applying many backgrounds to one document</h4>

<p>Note the absence of an image on two of the paragraphs. This is
because the styles for <tt class="literal">type1</tt> and
<tt class="literal">type2</tt> paragraphs do not include the URL of a
background image.
</p>

<a name="ch06-37-fm2xml" /><blockquote><h4>WARNING</h4>
<p>In older <a name="INDEX-726" />browsers, such as the early
version of Navigator 4, the <tt class="literal">background</tt> property
was supported while many of the individual properties, such as
<tt class="literal">background-color</tt>, were not. Therefore, it
generally makes sense to use <tt class="literal">background</tt> whenever
possible and to avoid the more specific properties when<a name="INDEX-727" /> <a name="INDEX-728" /> you<a name="INDEX-729" /> <a name="INDEX-730" /> can.<a name="INDEX-731" /> <a name="INDEX-732" />
</p>
</blockquote>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch06_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">6. Colors and Backgrounds</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">6.3. Summary</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
