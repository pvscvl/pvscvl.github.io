<html><head><title>Length Units (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch03_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch03_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">3.2. Length Units</h2>

<p><a name="INDEX-320" />A lot of CSS properties, such as margins,
depend on length measurements in order to properly display various
page elements. It probably comes as no surprise to you, then, that
there are a number of ways to measure length in CSS.
</p>

<p>All length units can be expressed as either positive or negative
numbers, followed by a label -- although some properties will only
accept positive numbers. They are also real numbers; that is, numbers
with decimal fractions, such as 10.5 or 4.561. All length units are
followed by a two-letter abbreviation that represents the actual unit
of length being specified, such as <tt class="literal">in</tt> (inches), or
<tt class="literal">pt</tt> (points). The only exception to this rule is a
length of <tt class="literal">0</tt> (zero), which need not always be
followed by a unit.
</p>

<p>These length units are divided into two types: <em class="filename">absolute
units</em> and <em class="filename">relative units</em>.
</p>

<a name="css-CHP-3-SECT-2.1" /><div class="sect2">
<h3 class="sect2">3.2.1. Absolute Length Units</h3>

<p><a name="INDEX-321" />No vodka jokes, please. We start with
absolute units because they're easiest to understand, despite
the fact that they're almost unusable in web design. The five
types of absolute units are as follows:
</p>

<dl>
<dt><b>Inches <em class="emphasis">(</em> <tt class="literal">in</tt><em class="emphasis">)</em></b></dt>
<dd>
<p><a name="INDEX-322" />As you might
expect, the inches one finds on a ruler in America. The fact that
this unit is even in the specification, given that almost the entire
world uses the metric system, is an interesting insight into the
pervasiveness of American interests on the Internet -- but
let's not get into virtual sociopolitical theory right now.
</p>
</dd>

<dt><b>Centimeters <em class="emphasis">(</em> <tt class="literal">cm</tt><em class="emphasis">)</em></b></dt>
<dd>
<p><a name="INDEX-323" />The
centimeters that one finds on rulers the world over. There are 2.54
cm to an inch, and one centimeter equals 0.394 inches.
</p>
</dd>

<dt><b>Millimeters <em class="emphasis">(</em> <tt class="literal">mm</tt><em class="emphasis">)</em></b></dt>
<dd>
<p><a name="INDEX-324" />You guessed
it. For those Americans who are metric-challenged, there are 10
millimeters to a centimeter, so you get 25.4 mm to an inch, and 1
millimeter equals 0.0394 inches.
</p>
</dd>

<dt><b>Points <em class="emphasis">(</em> <tt class="literal">pt</tt><em class="emphasis">)</em></b></dt>
<dd>
<p><a name="INDEX-325" />Now it gets
interesting. Points are standard typographical measures, used by
printers and typesetters for decades and by word-processing programs
for many years. By definition, there are 72 points to an inch, since
points were defined before use of the metric system had really caught
on. Therefore, the capital letters of text set to 12 points should be
a sixth of an inch tall. For example, <tt class="literal">P</tt>
<tt class="literal">{font-size:</tt> <tt class="literal">18pt;}</tt> is
equivalent to <tt class="literal">P</tt> <tt class="literal">{font-size:</tt>
<tt class="literal">0.25in;}</tt>.
</p>
</dd>

<dt><b>Picas <em class="emphasis">(</em> <tt class="literal">pc</tt><em class="emphasis">)</em></b></dt>
<dd>
<p><a name="INDEX-326" />Another
typographical term. A pica is equivalent to 12 points, which means
there are 6 picas to an inch. As above, the capital letters of text
set to 1 pica should be a sixth of an inch tall. For example,
<tt class="literal">P</tt> <tt class="literal">{font-size:</tt>
<tt class="literal">1.5pc;}</tt> would set text to be the same size as the
example declarations found in the definition of points.
</p>
</dd>

</dl>

<p>These units are, of course, only really useful if the browser knows
all the details of the monitor on which your page is displayed, or
the printer you're using to generate hard copy, or whatever
other user agent you might be using.
</p>

<p>The sorts of things that can affect the display in a web browser, for
example, are the size of the monitor and the resolution to which the
monitor is set. Of course, there isn't a lot that you, as the
author, can do about this. You can only hope that even if the browser
can't get all that information, at least the measurements will
be consistent in relation to each other; that is, a setting of
<tt class="literal">1.0in</tt> will be twice as large as
<tt class="literal">0.5in</tt>, as shown in <a href="ch03_02.htm">Figure 3-3</a>.
</p>

<a name="css-CHP-3-FIG-3" /><div class="figure"><img height="163" alt="Figure 3-3" src="figs/css.0303.gif" width="417" /></div><h4 class="objtitle">Figure 3-3. A margin of 1.0 inches (top) and 0.5 inches (bottom)</h4>

<a name="css-CHP-3-SECT-2.1.1" /><div class="sect3">
<h3 class="sect3">3.2.1.1. Working with absolute lengths</h3>

<p>As a Windows user, you might be able to set your
<a name="INDEX-327" />display driver to use real-world
measures. Try clicking on the Start button, pointing to Settings,
then clicking Control Panel, and from the Control Panel window
double-click on Display. On the Display dialog box there should be a
Settings tab. Click on this, and then click on the Advanced button to
reveal a dialog box which may be different on each PC. You should see
a section labeled Font Size, in which case select Other, and then
hold a ruler up to the screen and move the slider until the two
match. Finally click OK several times and you're set!
</p>

<p>If you're a Macintosh user, there isn't a place to set
this information, but that's all right -- the Mac OS has
already made an assumption about the relationship between on-screen
pixels and absolute measures, by declaring your monitor to have 72
pixels to the inch. This assumption is totally wrong, but it's
built into the operating system, and therefore pretty much
unavoidable, at least for now. (With any luck, future browsers will
include a preference setting for defining your own pixel-per-inch
value, thus circumventing any OS-imposed limitations.)
</p>

<p>Therefore, on many Macintosh-based web browsers, such as Netscape
4.x, and Internet Explorer 3.x and 4.x, any point value will be
equivalent to the same length in pixels: <tt class="literal">24pt</tt> text
will be 24 pixels tall, and <tt class="literal">8pt</tt> text will be 8
pixels tall. This is, unfortunately, just slightly too small to be
legible, despite the fact it looks pretty good on a Windows-based
browser. <a href="ch03_02.htm">Figure 3-4</a> illustrates the problem.
</p>

<a name="css-CHP-3-FIG-4" /><div class="figure"><img height="88" alt="Figure 3-4" src="figs/css.0304.gif" width="388" /></div><h4 class="objtitle">Figure 3-4. Macintosh displays tend to be illegible at small point sizes</h4>

<p>This is an excellent example of why points should be avoided when
designing for the web. Ems, percentages, and even pixels are all
preferable to points where browser display is concerned.
</p>

<p>Despite all we've seen, let's make the highly suspect
assumption that your computer knows enough about its display system
to accurately reproduce real-world measures. In that case, you could
make sure every paragraph has a top margin of half an inch by
declaring <tt class="literal">P</tt> <tt class="literal">{margin-top:</tt>
<tt class="literal">0.5in;}</tt>. No matter what the circumstances, then, a
paragraph will have a half-inch top margin, regardless of font size
or anything else.
</p>

<p>Absolute units are much more useful in defining style sheets for
printed documents, where measuring things in terms of inches, points,
and picas is much more common. As we've seen, attempting to use
absolute measures in web design is fraught with peril at best, so
let's turn to some more useful units of measure.<a name="INDEX-328" />
</p>

</div>
</div>
<a name="css-CHP-3-SECT-2.2" /><div class="sect2">
<h3 class="sect2">3.2.2. Relative Length Units</h3>

<p><a name="INDEX-329" />Far from being Einsteinian in nature,
relative units are so called because they are measured in relation to
other things. The actual (or absolute) distance they measure can
change due to factors beyond their control, such as screen
resolution, the width of the viewing area, the user's
preference settings, and a whole host of other things. In addition,
for some relative units, their size is almost always relative to the
element that uses them and will thus change from element to element.
</p>

<p>There are three relative length units: <tt class="literal">em</tt> ,
<tt class="literal">ex</tt> , and <tt class="literal">px</tt> . The first two
stand for "em-height" and "x-height," which
are common typographical measurements; however, in CSS, they have
meanings you might not expect if you are familiar with typography.
The last type of length is <tt class="literal">px</tt> , which stands for
"pixels." A pixel is one of the dots you can see on your
computer's monitor if you look closely enough. This value is
defined to be relative because it depends on the resolution of the
display device, a subject that we'll discuss at length.
</p>

<a name="css-CHP-3-SECT-2.2.1" /><div class="sect3">
<h3 class="sect3">3.2.2.1. em and ex units</h3>

<p><a name="INDEX-330" />
<a name="INDEX-331" />
<a name="INDEX-332" />First, let us
consider <tt class="literal">em</tt> and <tt class="literal">ex</tt> . In CSS,
one "em" is the value of <tt class="literal">font-size</tt> for
a given font, so if the <tt class="literal">font-size</tt> of an element is
14 points, then for that element, one "em" is the same as
14 points. In other words, whatever size you set the font's
size to be, that's the value of one <tt class="literal">em</tt> for
that element. In relation to a paragraph of 18-point text, the length
of an <tt class="literal">em</tt> is 18 points.
</p>

<p>Obviously, this value can change from element to element. For
example, given an <tt class="literal">H1</tt> whose font is 24 pixels in
size, an <tt class="literal">H2</tt> element whose font is 18 pixels in
size, and a paragraph whose font is 12 pixels, we get what's
shown in <a href="ch03_02.htm">Figure 3-5</a>:
</p>

<blockquote><pre class="code">H1 {font-size: 24px;}
H2 {font-size: 18px;}
P {font-size: 12px;}
H1, H2, P {margin-left: 1em;}

&lt;H1&gt;Left margin = 24 pixels&lt;/H1&gt;
&lt;H2&gt;Left margin = 18 pixels&lt;/H1&gt;
&lt;P&gt;Left margin = 12 pixels&lt;/P&gt;</pre></blockquote>

<a name="css-CHP-3-FIG-5" /><div class="figure"><img height="105" alt="Figure 3-5" src="figs/css.0305.gif" width="281" /></div><h4 class="objtitle">Figure 3-5. Margins change according to point size</h4>

<p>The only exception to this rule is setting the size of the font, in
which case the value of <tt class="literal">em</tt> is relative to the
parent element (this is shown in <a href="ch03_02.htm">Figure 3-6</a>):
</p>

<blockquote><pre class="code">SMALL {font-size: 0.8em;}

&lt;P&gt;Although this text is the default size for the user agent, the
&lt;SMALL&gt;small-text element&lt;/SMALL&gt; within the paragraph has a font
size which is 80% the rest of the text in the paragraph.&lt;/P&gt;</pre></blockquote>

<a name="css-CHP-3-FIG-6" /><div class="figure"><img height="52" alt="Figure 3-6" src="figs/css.0306.gif" width="343" /></div><h4 class="objtitle">Figure 3-6. Font size set in ems is relative to the parent element</h4>

<p><tt class="literal">ex</tt> , on the other hand, refers to the height of a
lowercase <em class="emphasis">x</em> in the font being used. Therefore,
if you have two paragraphs of text in which the text is 24 points in
size, but each paragraph uses a different font, then the value of
<tt class="literal">ex</tt> could be different for each paragraph. This is
because different fonts have different heights for
<em class="emphasis">x</em>, as we see in <a href="ch03_02.htm">Figure 3-7</a>.
</p>

<a name="css-CHP-3-FIG-7" /><div class="figure"><img height="200" alt="Figure 3-7" src="figs/css.0307.gif" width="161" /></div><h4 class="objtitle">Figure 3-7. Different fonts have different x-heights</h4>

<p>Even though the examples use 24-point text, and therefore each have
an <tt class="literal">em</tt> of 24 points, the <tt class="literal">ex</tt> for
each is different.
</p>

</div>

<a name="css-CHP-3-SECT-2.2.2" /><div class="sect3">
<h3 class="sect3">3.2.2.2. Practical issues with em and ex</h3>

<p>This is all difficult enough, but just to make things more so, this
is all what's supposed to happen in theory. In practice,
however, many user agents get their value for <tt class="literal">ex</tt>
by taking the value of <tt class="literal">em</tt> and dividing it in half.
Why? Well, apparently most fonts don't have the value of their
x-height built in, and it's a difficult thing to compute. Since
most fonts have lowercase letters that are about half as tall as
uppercase letters, it's a convenient fiction to assume that
<tt class="literal">1ex</tt> is equivalent to <tt class="literal">0.5em</tt> . It
is hoped that, as time goes on, user agents will start using real
values for <tt class="literal">ex</tt> , and the half-em shortcut will fade
into the past.
</p>

</div>

<a name="css-CHP-3-SECT-2.2.3" /><div class="sect3">
<h3 class="sect3">3.2.2.3. Pixel lengths</h3>

<p><a name="INDEX-333" />Now to pixels,
where the situation gets <em class="emphasis">really</em> confusing. On
the face of things, pixels really should be very straightforward.
After all, if you look at a monitor closely enough, you can see that
it's broken up into a grid of tiny little boxes. Each box is a
pixel. However, how many of those boxes equal an inch? If the monitor
is set to be 1,024 pixels wide by 768 pixels tall, and the
monitor's screen is exactly 14.22 inches wide by 10.67 inches
tall, and the display area exactly fills the monitor, then each pixel
will be 1/72 of an inch wide and tall. As you might guess, this is a
very, very rare occurrence, especially since it's tough to find
a monitor with exactly those dimensions. So it turns out that on most
monitors, the actual number of pixels per inch (ppi) is higher than
72 -- sometimes much higher, up to 120 ppi and beyond.
</p>

<p>To make things even more confusing, the CSS specification recommends
a "reference pixel" which works out to roughly 90
ppi -- a measure very few (if any) operating systems actually use.
While the specification assumes that <tt class="literal">90px</tt> should
equal <tt class="literal">1in</tt>, nothing else really does, so that
doesn't help. In general, if you declare something like
<tt class="literal">font-size:</tt> <tt class="literal">18px</tt> , then
you're leaving it up to the user agent to decide how big a
pixel really is. A web browser will almost certainly use actual
pixels on your monitor -- after all, they're already
there -- but with other display devices, like printers, the
situation gets a little uncertain.
</p>

<a name="ch03-17-fm2xml" /><blockquote><h4>WARNING</h4>
<p>One example of problems with pixel measurements can be found in an
early CSS1 implementation. In Internet Explorer 3.x, when a document
is printed, IE3 assumes that <tt class="literal">18px</tt> is the same as
18 dots, which works out to be 18/300, or 6/100, of an inch -- or,
if you prefer, <tt class="literal">.06in</tt>. That's pretty small
text!
</p>
</blockquote>

<p>On the other hand, pixel measurements are perfect for expressing the
size of images, which are already a certain number of pixels tall and
wide. In fact, the only time you would want to use other units of
measure to express the size of images is if you want them to scale along
with the size of the text. This is an admirable and occasionally
useful approach, and one which would really make sense if you were
using vector-based images instead of pixel-based images. (With the
adoption of Scalable Vector Graphics, this could actually become a
reality.)
</p>

</div>

<a name="css-CHP-3-SECT-2.2.4" /><div class="sect3">
<h3 class="sect3">3.2.2.4. What to do?</h3>

<p>Given all the issues involved, the best measures to use are probably
the relative measures, most especially <tt class="literal">em</tt> , and
also <tt class="literal">px</tt> when appropriate. Since
<tt class="literal">ex</tt> is at present basically a fractional measure of
<tt class="literal">em</tt> , it's not all that useful for the time
being. If user agents are ever able to support real x-height
measures, then <tt class="literal">ex</tt> might come into its own.
</p>

<p>With that, we close out our discussion of length measurements. The
rest of the chapter is pretty straightforward and not nearly
so<a name="INDEX-334" />
pessimistic.<a name="INDEX-335" />
</p>

</div>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch03_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch03_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">3. Units and Values</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">3.3. Percentage Values</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>