<html><head><title>HTML and CSS (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch00_04.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch01_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />



<h1 class="chapter">Chapter 1. HTML and CSS</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch01_01.htm">The Web's Fall from Grace</a><br />
<a href="ch01_02.htm">CSS to the Rescue</a><br />
<a href="ch01_03.htm">Limitations of CSS</a><br />
<a href="ch01_04.htm">Bringing CSS and HTML Together</a><br />
<a href="ch01_05.htm">Summary</a><br /></p></div>

<p><a name="INDEX-1" /> <a name="INDEX-2" />In many ways, the
<a name="INDEX-3" />Cascading Style Sheets (CSS) specification
represents a unique development in the history of the World Wide Web.
In its inherent ability to allow richly styled structural documents,
CSS is both a step forward and a step backward -- but it's a
good step backward, and a needed one. To see what is meant by this,
it is first necessary to understand how the Web got to the point of
desperately needing something like CSS, and how CSS makes the web a
better place for both page authors and web surfers.
</p>

<div class="sect1"><a name="css-CHP-1-SECT-1" />
<h2 class="sect1">1.1. The Web's Fall from Grace</h2>

<p>Back in the dimly remembered early years of the Web (1990 -1993),
HTML was a fairly lean little language. It was almost entirely
composed of structural elements that were useful for describing
things like paragraphs, hyperlinks, lists, and headings. It had
nothing even remotely approaching tables, frames, or the complex
markup we assume is a necessary part of creating web pages. The
general idea was that HTML would be a structural markup language,
used to describe the various parts of a document. There was very
little said about how these parts should be displayed. The language
wasn't concerned with appearance. It was just a clean little
markup scheme.
</p>

<p>Then came Mosaic.</p>

<p>Suddenly, the power of the World Wide Web was obvious to almost
anyone who spent more than ten minutes playing with it. Jumping from
one document to another was no harder than pointing the mouse cursor
at a specially colored bit of text, or even an image, and clicking
the mouse button. Even better, text and images could be displayed
together, and all you needed to create a page was a plain text
editor. It was free, it was open, and it was cool.
</p>

<p>Web sites began to spring up everywhere. There were personal
journals, university sites, corporate sites, and more. As number of
sites increased, so did the demand for new HTML tags that would allow
one effect or another. Authors started demanding that they be able to
make text boldfaced, or italicized.
</p>

<p>At the time, <a name="INDEX-4" />HTML
wasn't equipped to handle these sorts of desires. You could
declare a bit of text to be emphasized, but that wasn't
necessarily the same as being italicized -- it could be boldfaced
instead, or even normal text with a different color, depending on the
user's browser and their preferences. There was nothing to
ensure that what the author created was what the reader would see.
</p>

<p>As a result of these pressures, markup elements like
<tt class="literal">&lt;B&gt;</tt> and <tt class="literal">&lt;I&gt;</tt> started
to creep into the language. Suddenly, a structural language started
to become presentational.
</p>

<a name="css-CHP-1-SECT-1.1" /><div class="sect2">
<h3 class="sect2">1.1.1. What a Mess</h3>

<p>Years later, we have inherited the flaws inherent in this process.
Large parts of HTML 3.2 and HTML 4.0, for example, are devoted to
presentational considerations. The ability to color and size text
through the <tt class="literal">FONT</tt> element, to apply background
colors and images to documents and tables, to space and pad the
contents of table cells, and to make text blink on and off are all
the legacy of the original cries for "more control!"
</p>

<p>If you want to know why this is a bad thing, all it takes is a quick
glance at any corporate web site's page markup. The sheer
amount of markup in comparison to actual useful information is
astonishing. Even worse, for most sites, the markup is almost
entirely made up of tables and <tt class="literal">FONT</tt> tags, none of
which conveys any real semantic meaning to what's being
presented. From a structural standpoint, these pages are little
better than random strings of letters.
</p>

<p>For example, let's assume that for page titles, an author is
using <tt class="literal">FONT</tt> tags instead of heading tags like
<tt class="literal">H1</tt>, like this:
</p>

<blockquote><pre class="code">&lt;FONT SIZE="+3" FACE="Helvetica" COLOR="red"&gt;Page Title&lt;/FONT&gt;</pre></blockquote>

<p>Structurally speaking, the <tt class="literal">FONT</tt> tag has no
meaning. This makes the document far less useful. What good is a
<tt class="literal">FONT</tt> tag to a <a name="INDEX-5" />
<a name="INDEX-6" />speech-synthesis
browser, for example? If an author uses heading tags instead of
<tt class="literal">FONT</tt> tags, the speaking browser can use a certain
speaking style to read the text. With the <tt class="literal">FONT</tt>
tag, the browser has no way to know that the text is any different
from other text.
</p>

<p>Why do authors run roughshod over structure and meaning like this?
Because they want readers to see the page as they designed it. To use
structural HTML markup is to give up a lot of control over a
page's appearance, and it certainly doesn't allow for the
kind of densely packed page designs that have become so popular over
the years.
</p>

<p>So what's wrong with this? Consider the following:</p>

<ul><li>
<p>Unstructured pages make content indexing inordinately difficult. A
truly powerful search engine would allow users to search just page
titles, or only section headings within pages, or only paragraph
text, or perhaps only those paragraphs that are marked as being
important. In order to do this, however, the page contents must be
contained within some sort of structural markup -- exactly the
sort of markup most pages lack.
</p>
</li><li>
<p>A lack of structure reduces accessibility. Imagine that you are
blind, and rely on a <a name="INDEX-7" />
<a name="INDEX-8" />speech-synthesis
browser to browse the Web. Which would you prefer: a structured page
that lets your browser read only section headings so you can choose
which section you'd like to hear more about; or a page so
lacking in structure that your browser is forced to read the entire
thing with no indication of what's a heading, what's a
paragraph, and what's important?
</p>
</li><li>
<p>Advanced page presentation is only possible with some sort of
document structure. Imagine a page in which only the section headings
are shown, with an arrow next to each. The user can decide which
section heading applies to him and click on it, thus revealing the
text of that section.
</p>
</li><li>
<p>Structured markup is easier to maintain. How many times have you
spent long minutes hunting through someone else's HTML (or even
your own) in search of the one little error that is messing up your
page in one browser or another? How much time have you spent writing
nested tables and <tt class="literal">FONT</tt> tags, just to get a sidebar
with white hyperlinks in it? How many line-break tags have you
inserted trying to get exactly the right separation between a title
and the following text? By using structural markup, you can clean up
your code and make it easier to find what you're looking for.
</p>
</li></ul>
<p>Granted, a fully structured document is a little plain. Due to that
one single fact, a hundred arguments in favor of structural markup
wouldn't sway a marketing department away from the kind of HTML
so prevalent at the end of the twentieth century. What was needed was
a way to combine <a name="INDEX-9" />structural markup with attractive page
presentation.
</p>

<p>This concept is nothing new. There have been many style sheet
technologies proposed and created over the last few decades. These
were intended for use in various industries and in conjunction with a
variety of structural markup languages. The concept had been tested,
used, and generally found to be a benefit to any environment where
structure had to be presented. However, no style sheet solution was
immediately available for use with HTML. Something had to be done to
correct this problem.
</p>

</div>
</div>










<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch00_04.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch01_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">0.4. Acknowledgments</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">1.2. CSS to the Rescue</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>