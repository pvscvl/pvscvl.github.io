<html><head><title>Font Size (Cascading Style Sheets: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="style/style.css" />

<meta name="DC.Creator" content="Eric A. Meyer" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565926226L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Cascading Style Sheets: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Cascading Style Sheets: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch05_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">Cascading Style Sheets: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch05_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">5.3. Font Size</h2>

<p><a name="INDEX-548" />
<a name="INDEX-549" />The methods for determining font size are both
very familiar and very different.
</p>

<a name="css-CHP-5-SIDEBAR-3" /><blockquote><table border="1" cellpadding="6"><tr><td>
<h4 class="objtitle">font-size</h4>


<dl>
<dt><b>Values</b></dt>
<dd>
<p><tt class="literal">xx-small</tt> | <tt class="literal">x-small</tt> |
<tt class="literal">small</tt> | <tt class="literal">medium</tt> |
<tt class="literal">large</tt> | <tt class="literal">x-large</tt> |
<tt class="literal">xx-large</tt> | <tt class="literal">smaller</tt> |
<tt class="literal">larger</tt> | &lt;length&gt; | &lt;percentage&gt;
</p>
</dd>

</dl>

<dl>
<dt><b>Initial value</b></dt>
<dd>
<p><tt class="literal">medium</tt></p>
</dd>

</dl>

<dl>
<dt><b>Inherited</b></dt>
<dd>
<p>yes</p>
</dd>

</dl>

<a name="ch05-12-fm2xml" /><blockquote><h4>WARNING</h4>
<p>Percentage elements refer to parent element's font size.</p>
</blockquote>

<dl>
<dt><b>Applies to</b></dt>
<dd>
<p>all elements</p>
</dd>

</dl>
</td></tr></table></blockquote>

<p>In a fashion very similar to the <tt class="literal">font-weight</tt>
keywords <tt class="literal">bolder</tt> and <tt class="literal">lighter</tt>,
the property <tt class="literal">font-size</tt><a name="INDEX-550" />
has relative-size keywords called <tt class="literal">larger</tt> and
<tt class="literal">smaller</tt>. Much as we saw with relative font
weights, these keywords cause the computed value of
<tt class="literal">font-size</tt> to move up and down a scale of absolute
values, which we'll need to understand before we can explore
<tt class="literal">larger</tt> and <tt class="literal">smaller</tt>. First,
though, we need to explore how fonts are sized in the first place.
</p>

<p>In fact, the relation of the <tt class="literal">font-size</tt> property to
what you actually see rendered is determined by the font's
designer. This relationship is set as an <em class="filename">em
square</em><a name="INDEX-551" />
<a name="INDEX-552" /> (some call it an em
box) within the font itself. This em square, and thus the font size,
doesn't have to refer to any boundaries established by the
characters in a font themselves. Instead, it refers to the distance
between baselines when the font is set without any extra leading
(<tt class="literal">line-height</tt> in CSS). It is quite possible for
fonts to have characters that are taller than the default distance
between baselines. For that matter, a font might be defined such that
all of its characters are smaller than its em square. Some
hypothetical examples are shown in <a href="ch05_03.htm">Figure 5-17</a>.
</p>

<a name="css-CHP-5-FIG-17" /><div class="figure"><img height="198" alt="Figure 5-17" src="figs/css.0517.gif" width="400" /></div><h4 class="objtitle">Figure 5-17. Fonts and font size</h4>

<p>Thus, the effect of <tt class="literal">font-size</tt> is to provide a size
for the em box of a given font. This does not guarantee that any of
the actual characters which are displayed will be this size.
</p>

<a name="css-CHP-5-SECT-3.1" /><div class="sect2">
<h3 class="sect2">5.3.1. Absolute Sizes</h3>

<p><a name="INDEX-553" /> <a name="INDEX-554" />Having established all that, we turn
now to the absolute-size keywords. There are seven absolute-size
values for <tt class="literal">font-size</tt>: <tt class="literal">xx-small</tt>,
<tt class="literal">x-small</tt>, <tt class="literal">small</tt>,
<tt class="literal">medium</tt> , <tt class="literal">large</tt>,
<tt class="literal">x-large</tt>, and <tt class="literal">xx-large</tt>. These
are not defined precisely, but are relative to each other, as <a href="ch05_03.htm">Figure 5-18</a> demonstrates:
</p>

<blockquote><pre class="code">P.one {font-size: xx-small}
P.two {font-size: x-small;}
P.three {font-size: small;}
P.four {font-size: medium;}
P.five {font-size: large;}
P.six {font-size: x-large;}
P.seven {font-size: xx-large;}</pre></blockquote>

<a name="css-CHP-5-FIG-18" /><div class="figure"><img height="302" alt="Figure 5-18" src="figs/css.0518.gif" width="431" /></div><h4 class="objtitle">Figure 5-18. Absolute font sizes</h4>

<p>According to the CSS1 specification, the difference (or
<em class="filename">scaling factor</em><a name="INDEX-555" />) between one absolute size and the next
should about 1.5 going up the ladder, or 0.66 going down. Thus, if
<tt class="literal">medium</tt> is the same as <tt class="literal">10px</tt> ,
then <tt class="literal">large</tt> should be the same as
<tt class="literal">15px</tt> . On the other hand, the scaling factor does
not have to be 1.5; not only might it be different for different user
agents, but it's already been changed to a factor of
<tt class="literal">1.2</tt> by
<a name="INDEX-556" />CSS2.
</p>

<p>Working from the assumption that <tt class="literal">medium</tt> equals
<tt class="literal">12px</tt>, for different scaling factors, we get the
absolute sizes shown in <a href="ch05_03.htm">Table 5-3</a>. (The values are
approximations, of course.)
</p>

<a name="css-CHP-5-TABLE-3" /><h4 class="objtitle">Table 5-3. Scaling Factors Translated to Points</h4><table border="1">





<tr>
<th>
<p>Keyword</p>
</th>
<th>
<p>Scaling: 1.5</p>
</th>
<th>
<p>Scaling: 1.3</p>
</th>
<th>
<p>Scaling: 1.2</p>
</th>
</tr>


<tr>
<td>
<p><tt class="literal">xx-small</tt></p>
</td>
<td>
<p>4px</p>
</td>
<td>
<p>5px</p>
</td>
<td>
<p>6px</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">x-small</tt></p>
</td>
<td>
<p>6px</p>
</td>
<td>
<p>7px</p>
</td>
<td>
<p>8px</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">small</tt></p>
</td>
<td>
<p>8px</p>
</td>
<td>
<p>9px</p>
</td>
<td>
<p>10px</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">medium</tt></p>
</td>
<td>
<p>12px</p>
</td>
<td>
<p>12px</p>
</td>
<td>
<p>12px</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">large</tt></p>
</td>
<td>
<p>18px</p>
</td>
<td>
<p>16px</p>
</td>
<td>
<p>14px</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">x-large</tt></p>
</td>
<td>
<p>27px</p>
</td>
<td>
<p>21px</p>
</td>
<td>
<p>17px</p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">xx-large</tt></p>
</td>
<td>
<p>42px</p>
</td>
<td>
<p>27px</p>
</td>
<td>
<p>20px<a name="INDEX-557" />
</p>
</td>
</tr>

</table>

<p>In general, these sizes are precomputed by browsers and do not change
once they have been computed. Thus, if a browser considers
<tt class="literal">x-large</tt> to be <tt class="literal">27px</tt>, then it
will be that size no matter what happens. This is a shame, because it
would make far more sense (and be more in line with the aims of CSS)
to have the absolute sizes recomputed whenever users change their
browser preferences.
</p>

<p>Further complicating the situation is the fact that different user
agents can assign the "default" font size to different
absolute keywords. Take the Version 4 browsers as an example:
Navigator makes <tt class="literal">medium</tt> the same size as unstyled
text, whereas Internet Explorer assumes that <tt class="literal">small</tt>
text is equivalent in size to unstyled text. Despite the fact that
the default value for <tt class="literal">font-style</tt> is supposed to be
<tt class="literal">medium</tt>, Internet Explorer's behavior
isn't quite so wrongheaded as it might first<a name="INDEX-558" />
appear<a name="INDEX-559" />.<a href="#FOOTNOTE-2">[2]</a>
</p><blockquote class="footnote"> <a name="FOOTNOTE-2" /><p>[2]Note that there
are seven absolute-size keywords, just as there are seven
<tt class="literal">FONT</tt> sizes (e.g., <tt class="literal">&lt;FONT
SIZE="5"&gt;</tt>). Since the typical default font size has
historically been 3, it makes some sense that the third value on the
CSS absolute-size keyword list would be used to indicate a default
font size. Since the third keyword turns out to be
<tt class="literal">small</tt>, you get Explorer's behavior.
Technically, Microsoft has included this default style:
<tt class="literal">BODY</tt> <tt class="literal">{font-size:</tt>
<tt class="literal">small;}</tt>. The only way to override it is to
explicitly declare a value of <tt class="literal">medium</tt>, but then the
document's font size would be different in Internet Explorer
than in Navigator.</p> </blockquote>

</div>
<a name="css-CHP-5-SECT-3.2" /><div class="sect2">
<h3 class="sect2">5.3.2. Relative Sizes</h3>

<p><a name="INDEX-560" />
<a name="INDEX-561" />Compared to all this, the keywords
<tt class="literal">larger</tt> and <tt class="literal">smaller</tt> are simple
to understand: they cause the size of an element to be shifted up or
down the absolute-size scale, relative to their parent element, using
the same scaling factor employed to calculate absolute sizes. In
other words, if the browser used a scaling factor of 1.2 for absolute
sizes, then it should use the same factor when applying relative-size
keywords. Thus:
</p>

<blockquote><pre class="code">P {font-size: medium;}
STRONG, EM {font-size: larger;}

&lt;P&gt;This paragraph element contain &lt;STRONG&gt;a strong-emphasis element 
which itself contains &lt;EM&gt;an emphasis element that also contains 
&lt;STRONG&gt;a strong element.&lt;/STRONG&gt;&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;

&lt;P&gt; medium &lt;STRONG&gt;large &lt;EM&gt; x-large 
&lt;STRONG&gt;xx-large&lt;/STRONG&gt;&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;</pre></blockquote>

<p>Thanks to the way <tt class="literal">font-size</tt> operates, the sizes
get larger (or smaller) as shown in <a href="ch05_03.htm">Figure 5-19</a>.
</p>

<a name="css-CHP-5-FIG-19" /><div class="figure"><img height="127" alt="Figure 5-19" src="figs/css.0519.gif" width="434" /></div><h4 class="objtitle">Figure 5-19. Relative font sizing</h4>

<p>Unlike the relative values for weight, the relative-size values are
not necessarily constrained to the limits of the absolute-size range.
Thus, a font's size can be pushed beyond the values for
<tt class="literal">xx-small</tt> and <tt class="literal">xx-large</tt>. For
example:
</p>

<blockquote><pre class="code">H1 {font-size: xx-large;}
EM {font-size: larger;}

&lt;H1&gt;A Heading with &lt;EM&gt;Emphasis&lt;/EM&gt; added&lt;/H1&gt;
&lt;P&gt;This paragraph has some &lt;EM&gt;emphasis&lt;/EM&gt; as well.&lt;/P&gt;

&lt;H1&gt; xx-large &lt;EM&gt; xx-large &lt;/EM&gt; xx-large &lt;/H1&gt;
&lt;P&gt; medium &lt;EM&gt;large &lt;/EM&gt; medium &lt;/P&gt;</pre></blockquote>

<p>As we can see in <a href="ch05_03.htm">Figure 5-20</a>, the emphasized text in
the <tt class="literal">H1</tt> element is slightly larger than
<tt class="literal">xx-large</tt>. The amount of scaling is left up to the
user agent, with the recommended scaling factor of 1.2 being
preferred. The <tt class="literal">EM</tt> text in the paragraph, of
course, is shifted one slot up the absolute-size scale
(<tt class="literal">large</tt>).
</p>

<a name="css-CHP-5-FIG-20" /><div class="figure"><img height="127" alt="Figure 5-20" src="figs/css.0520.gif" width="424" /></div><h4 class="objtitle">Figure 5-20. Relative font sizing at the edges of the absolute sizes</h4>

</div>
<a name="css-CHP-5-SECT-3.3" /><div class="sect2">
<h3 class="sect2">5.3.3. Percentages and Sizes</h3>

<p><a name="INDEX-562" />In a way, percentage values are very
similar to the relative-size keywords in that a percentage value is
always computed in terms of whatever size is inherited from an
element's parent. Percentages, unlike the relative-size
keywords, permit much finer control over the computed font size.
Consider the following, illustrated in <a href="ch05_03.htm">Figure 5-21</a>:
</p>

<blockquote><pre class="code">P {font-size: 12px;}
EM {font-size: 120%;}
STRONG {font-size: 135%;}
SMALL, .fnote {font-size: 75%;}

&lt;P&gt;This paragraph contains both &lt;EM&gt;emphasis&lt;/EM&gt; and &lt;STRONG&gt;strong
emphasis&lt;/STRONG&gt;, both of which are larger than their parent element.  
The &lt;SMALL&gt;small text&lt;/SMALL&gt;, on the other hand, is smaller by a quarter.&lt;/P&gt;
&lt;P CLASS="fnote"&gt;This is a 'footnote' and is smaller than regular text.&lt;/P&gt;

&lt;P&gt; 12px &lt;EM&gt; 14.4px &lt;/EM&gt; 12px &lt;STRONG&gt; 16.2px &lt;/STRONG&gt;  12px 
&lt;SMALL&gt; 9px &lt;/SMALL&gt; 12px &lt;/P&gt; 
&lt;P CLASS="fnote"&gt; 9px &lt;/P&gt; </pre></blockquote>

<a name="css-CHP-5-FIG-21" /><div class="figure"><img height="141" alt="Figure 5-21" src="figs/css.0521.gif" width="370" /></div><h4 class="objtitle">Figure 5-21. Throwing percentages into the mix</h4>

<p>In this example, the exact pixel size values are shown. In practice,
a web browser would very likely not round the values off to the
nearest whole-number point size, such as <tt class="literal">14px</tt>, but
instead would use fractional sizes.
</p>

<p>Incidentally, CSS defines the length value
<tt class="literal">em</tt><a name="INDEX-563" /> to be equivalent to percentage values, in
the sense that <tt class="literal">1em</tt> is the same as
<tt class="literal">100%</tt>. Thus, the following would yield identical
results:
</p>

<blockquote><pre class="code">P.one {font-size: 166%;}
P.two {font-size: 1.6em;}</pre></blockquote>

<p>When using <tt class="literal">em</tt> measures, the same principles apply
as with percentages, such as the inheritance of computed sizes and so
forth.
</p>

</div>
<a name="css-CHP-5-SECT-3.4" /><div class="sect2">
<h3 class="sect2">5.3.4. Font Size and Inheritance</h3>

<p><a name="INDEX-564" />
<a name="INDEX-565" />In CSS, although
<tt class="literal">font-size</tt> is inherited, it is the computed values
that are inherited, not percentages, as shown in <a href="ch05_03.htm">Figure 5-21</a>. Thus, the value inherited by the
<tt class="literal">STRONG</tt> element is <tt class="literal">12px</tt>, and
this value is modified by the declared value <tt class="literal">135%</tt>
to arrive at 16.2 pixels (which might be rounded off to 16 pixels).
</p>

<p>As with the relative-size keywords, percentages are effectively
cumulative. Thus, the following markup is displayed as shown in <a href="ch05_03.htm">Figure 5-22</a>:
</p>

<blockquote><pre class="code">P {font-size: 12px;}
EM {font-size: 120%;}
STRONG {font-size: 135%;}

&lt;P&gt;This paragraph contains both &lt;EM&gt;emphasis and &lt;STRONG&gt;strong
emphasis&lt;/STRONG&gt;&lt;/EM&gt;, both of which are larger than the paragraph text. &lt;/P&gt;

&lt;P&gt; 12px &lt;EM&gt;14.4px &lt;STRONG&gt;19.44px&lt;/STRONG&gt;&lt;/EM&gt; 12px  &lt;/P&gt;</pre></blockquote>

<a name="css-CHP-5-FIG-22" /><div class="figure"><img height="60" alt="Figure 5-22" src="figs/css.0522.gif" width="392" /></div><h4 class="objtitle">Figure 5-22. The issues of inheritance</h4>

<p>The size value for the <tt class="literal">STRONG</tt> element shown in
<a href="ch05_03.htm">Figure 5-22</a> is computed as follows:
</p>

<blockquote class="simplelist">

<p>12 px x 120% = 14.4 px </p>

<p>14.4 px x 135% = 19.44 px (possibly rounded to 19 px)</p>

</blockquote>

<p>There is an alternative scenario, however, in which the final value
is slightly different. In this scenario, the user agent rounds off
pixel size, and these rounded values are then inherited normally by
any child elements. Thus, we would have:
</p>

<blockquote class="simplelist">

<p>12 px x 120% = 14.4 px [14.4 px <img align="absmiddle" src="figs/U2248.gif" /> 14 px]</p>

<p>14 px x 135% = 18.9 px [18.9 px <img align="absmiddle" src="figs/U2248.gif" /> 19 px]</p>

</blockquote>

<p>If one assumes that the user agent is rounding off at each step, then
the end result of both this calculation and the previous one is the
same: 19 pixels. However, as more and more percentages are multiplied
together, the rounding errors will begin to accumulate. This
shouldn't be a major problem -- after all, CSS doesn't
guarantee you precise control over anything -- but it is still a
factor to consider.
</p>

</div>
<a name="css-CHP-5-SECT-3.5" /><div class="sect2">
<h3 class="sect2">5.3.5. Using Length Units</h3>

<p><a name="INDEX-566" /> <a name="INDEX-567" />The <tt class="literal">font-size</tt> can be
set using any of the length values discussed in detail in <a href="ch03_01.htm">Chapter 3, "Units and Values"</a>. In a 72 <a name="INDEX-568" /> <a name="INDEX-569" />dots-per-inch (dpi)
environment, all of the following <tt class="literal">font-size</tt>
declarations should be equivalent:
</p>

<blockquote><pre class="code">P.one {font-size: 36pt;}   /* assuming 72 dpi, these are all the same thing */
P.two {font-size: 3pc;}
P.three {font-size: 0.5in;}
P.four {font-size: 1.27cm;}
P.five {font-size: 12.7mm;}</pre></blockquote>

<p><a name="INDEX-570" />Correct display assumes that the user agent
knows how many dots per inch are used in the display medium.
Different user agents make different assumptions -- some based on
the operating system, some based on preferences settings, and some
based on the assumptions of the programmer who wrote the user agent.
However, the five lines should always be the same size. So, while the
result may not exactly match reality (for example, the actual size of
<tt class="literal">P.three</tt> may not be half an inch), the measures
should all be consistent to one another.
</p>

<p>There is one more value that is potentially the same as those just
discussed, and that's <tt class="literal">36px</tt> , which would be
the same physical distance if the display medium is 72
<a name="INDEX-571" />
<a name="INDEX-572" />pixels
per inch (ppi). However, there are very few monitors with that
setting anymore. Most are much higher, in the range of 96 dpi to 120
ppi. Despite this, many Macintosh web
<a name="INDEX-573" />browsers tend to treat points
(pt) and pixels (px) as though they were equivalent, so the values
<tt class="literal">14pt</tt> and <tt class="literal">14px</tt> may look the same
on a Macintosh. This is not the case, however, for Windows and other
platforms, which is one of the primary reasons why
<a name="INDEX-574" />points can be a very difficult
measure to use in document design.
</p>

<p>The variations between operating systems are a primary reason why
many authors choose to use pixel values for font sizes. This approach
is especially attractive when mixing text and images together on a
web page, since text can (in theory) be set to the same height as
graphic elements on the page by declaring
<tt class="literal">font-size:</tt> <tt class="literal">11px;</tt> or something
similar, as illustrated by <a href="ch05_03.htm">Figure 5-23</a>.
</p>

<a name="css-CHP-5-FIG-23" /><div class="figure"><img height="68" alt="Figure 5-23" src="figs/css.0523.gif" width="228" /></div><h4 class="objtitle">Figure 5-23. Keeping text and graphics in scale with pixel sizes</h4>

<p>Using <a name="INDEX-575" />pixel measures is certainly one
way to get "consistent" results with
<tt class="literal">font-size</tt> (and, indeed, with any length at all),
but remember what can happen when a user agent mistakenly defines
"pixel" to be the same as "smallest dot." In
a 300-dpi environment, that will make text nearly twenty times
smaller than was likely intended. In addition, pixel-sized text will
be of different physical sizes on different monitors, and under
different resolutions, such that any use of <tt class="literal">px</tt> for
measurements effectively prohibits the use of measurements such as
<tt class="literal">in</tt> and <tt class="literal">cm</tt> within the same
document. In fact, if you're designing for display in a web
browser, it's generally best to avoid length units altogether.
The other approaches shown in this chapter, such as keywords and
percentages, are a much more robust (and user-friendly) way to
go.<a name="INDEX-576" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch05_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch05_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">5.2. Font Weights</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">5.4. Styles and Variants</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="index.htm" coords="338,1,434,93" shape="rect" /><area href="../action/index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>