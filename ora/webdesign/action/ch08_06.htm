<html><head><title>Stopping a Loop Prematurely (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch08_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">8.6. Stopping a Loop Prematurely</h2>


<p>In <a name="INDEX-953" />a simple loop, the test expression
is the sole factor that determines when the loop stops. When the test
expression of a simple loop yields <tt class="literal">false</tt>, the loop
terminates. However, as loops become more complex, we may need to
arbitrarily terminate a running loop regardless of the value of the
test expression. To do so, we use the <em class="filename">break</em> and
<em class="filename">continue</em> statements.</p>


<a name="ch08-10-fm2xml" /><div class="sect2">
<h3 class="sect2">8.6.1. The break Statement</h3>


<p>The <em class="filename">break</em><a name="INDEX-954" />
<a name="INDEX-955" /> statement ends execution of the current
loop. It has the modest syntax:</p>


<blockquote><pre class="code">break</pre></blockquote>


<p>The only requirement is that <em class="filename">break</em> must appear
within the body of a loop.</p>


<p>The <em class="filename">break</em> statement provides a way to halt a
process that is no longer worth completing. For example, we might use
a <em class="filename">for-in</em> loop to build a form-checking routine
that cycles through the input-text variables on a timeline. If a
blank input field is found, we alert the user that she hasn't
filled in the form properly. We can abort the process by executing a
<em class="filename">break</em> statement. <a href="ch08_06.htm">Example 8-3</a>
shows the code. Note that the example assumes the existence of a
movie clip called <tt class="literal">form</tt> that contains a series of
declared input variables named <tt class="literal">input01</tt>,
<tt class="literal">input02</tt>, and so on.</p>


<a name="ch08-13195" /><div class="example">
<h4 class="objtitle">Example 8-3. A Simple Form-Field Validator </h4>

<blockquote><pre class="code">for (var prop in form) {
  // If this property is one of our "input" text fields
  if (prop.indexOf("input") != -1) {
    // If the form entry is blank, abort the operation
    if (form[prop] == "") {
      displayMessage = "Please complete the entire form.";
      break;
    }
    // Any substatements following the break command are not reached
    // when the break is executed
  }
}
// Execution resumes here after the loop terminates whether
// due to the break command or the test condition becoming false</pre></blockquote>
</div>


<p>You can use the <em class="filename">break</em> statement to interrupt a
loop that would otherwise be infinite. This allows you to perform,
say, the statements in the first half of the code block without
necessarily executing the statements following an <em class="emphasis">if
(condition) break ;</em> statement. The generic approach is
shown in <a href="ch08_06.htm">Example 8-4</a>.</p>


<a name="ch08-80110" /><div class="example">
<h4 class="objtitle">Example 8-4. Breaking out of an Infinite Loop </h4>

<blockquote><pre class="code">while (true) {
  // Initial statements go here
  if (<em class="replaceable">condition</em>) break;
  // Subsequent statements go here
}</pre></blockquote>
</div>
</div>




<a name="ch08-11-fm2xml" /><div class="sect2">
<h3 class="sect2">8.6.2. The continue Statement</h3>


<p>The <em class="filename">continue</em><a name="INDEX-956" />
<a name="INDEX-957" /> statement is similar to the
<em class="filename">break</em> statement in that it causes the current
iteration of a loop to be aborted, but unlike
<em class="filename">break</em>, it resumes the loop's execution
with the next natural cycle. The syntax of the
<em class="filename">continue</em> statement is simply:</p>


<blockquote><pre class="code">continue</pre></blockquote>


<p>In all types of loops, the <em class="filename">continue</em> statement
interrupts the current iteration of the loop body, but the resumption
of the loop varies slightly depending on the type of loop statement.
In a <em class="filename">while</em> loop and a
<em class="filename">do-while</em> loop, the test expression is checked
before the loop resumes. But in a <em class="filename">for</em> loop, the
loop update is performed before the test expression is checked. And
in a <em class="filename">for-in</em> loop, the next iteration begins with
the next property of the object being inspected (if one exists).</p>


<p>Using the <em class="filename">continue</em> statement, we can make the
execution of the body of a loop optional under specified
circumstances. For example, here we move all the movie clip instances
that aren't transparent to the left edge of the Stage, and we
skip the loop body for transparent instances:</p>


<blockquote><pre class="code">for (var prop in _root) {
  if (typeof _root[prop] == "movieclip") {
    if (_root[prop]._alpha &lt; 100) {
      continue;
    }
    _root[prop]._x = 0;
  }
}</pre></blockquote>
</div>




<a name="ch08-61224" /><div class="sect2">
<h3 class="sect2">8.6.3. Maximum Number of Iterations</h3>


<p>As noted earlier,
<a name="INDEX-958" />
<a name="INDEX-959" />loops are
not allowed to execute forever in ActionScript. In the Flash 5 Player
loops are limited to 15 seconds. The number of iterations that can be
achieved in that time depends on what's inside the loop and the
computer's speed. To be safe, you shouldn't create loops
requiring more than even a few seconds to execute (which is eons in
processing terms!). Most loops should take only milliseconds to
finish. If a loop takes longer to complete (for example, because
it's processing hundreds of strings while initializing a
word-scramble game), it's worth rewriting the code using a
timeline loop, as described in <a href="ch08_07.htm">Section 8.7, "Timeline and Clip Event Loops"</a>. Timeline loops allow
us to update the progress of a script's execution on screen and
avoid the potential display of the error message shown in <a href="ch08_06.htm">Figure 8-1</a>.</p>


<a name="ch08-11163" /><div class="figure"><img alt="Figure 8-1" src="figs/act.0801.gif" /></div><h4 class="objtitle">Figure 8-1. Bad loop! Down boy!</h4>

<p>When a loop has run for more than 15 seconds in the Flash 5 Player,
an alert box warns the user that a script in the movie is delaying
the movie's playback. The user is offered the choice to either
wait for the script to finish or to quit<em class="filename"> </em>the
script.</p>


<p>The Flash 4 player is even stricter -- it allows only 200,000
iterations -- after which all scripts are disabled without any
warning.</p>

<a name="ch08-12-fm2xml" /><blockquote><h4>WARNING</h4>
<p>Take special heed: the 15-second warning that users see does not
mention that canceling a <a name="INDEX-960" />runaway script will actually
cause all scripts in the movie to stop functioning! If a user selects
"Yes" to stop a loop from continuing, all scripts in the
movie are <a name="INDEX-961" />disabled.</p>

</blockquote>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch08_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">8.5. The for-in Loop</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">8.7. Timeline and Clip Event Loops</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>