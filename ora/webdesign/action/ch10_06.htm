<html><head><title>Creating Event Handlers (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch10_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">10.6. Creating Event Handlers</h2>


<p>To create an <a name="INDEX-1132" />event
handler, we define the handler and attach it to the appropriate
object. We'll begin with the most common handlers -- those
attached to buttons and movie clips.</p>


<a name="ch10-9-fm2xml" /><div class="sect2">
<h3 class="sect2">10.6.1. Attaching Event Handlers to Buttons and Movie Clips</h3>


<p>To attach an <a name="INDEX-1133" />
<a name="INDEX-1134" /> <a name="INDEX-1135" />event handler to a button or a movie clip,
we must physically place the code of the handler function onto the
desired button or clip. We may do so only in the Flash authoring
tool, by selecting the object on stage and entering the appropriate
code in the Actions panel, shown in <a href="ch10_06.htm">Figure 10-1</a>.</p>


<a name="ch10-44022" /><div class="figure"><img alt="Figure 10-1" src="figs/act.1001.gif" /></div><h4 class="objtitle">Figure 10-1. Attaching an event handler to a button</h4>

<p>Let's try making a simple event handler function for both a
button and a movie clip. To create a button event handler, follow
these instructions:</p>


<ol><li><p>Start a new Flash movie.</p></li><li><p>Create a button and drag an instance of it onto the main Stage.</p></li><li><p>With the button selected, type the following code in the Actions
panel:</p>
<blockquote><pre class="code">on (release) {
  trace("You clicked the button");
}</pre></blockquote></li>

<li><p>Select Control <img align="absmiddle" src="figs/U2192.gif" /> Test Movie.</p></li><li><p>Click the button. The message, "You clicked the button,"
appears in the Output window.</p></li></ol>
<p>When the movie plays and we press and release the button, the
<em class="filename">release</em> event is detected by the interpreter and
it executes the <em class="filename">on (release)</em> event handler. Each
time that we press and release the button, the message, "You
clicked the button," appears in the Output window.</p>


<p>Now let's try making a slightly more interesting event handler
on a movie clip. Once again, follow the instructions:</p>


<ol><li><p>Start a new Flash movie.</p></li><li><p>On the main movie Stage, draw a rectangle.</p></li><li><p>Select Insert <img align="absmiddle" src="figs/U2192.gif" /> Convert to Symbol.</p></li><li><p>In the Symbol Properties dialog box, name the new symbol
<tt class="literal">rectangle</tt> and select Movie Clip as the Behavior.</p></li><li><p>Click OK to finish creating the <tt class="literal">rectangle</tt> movie
clip.</p></li><li><p>Select the <tt class="literal">rectangle</tt> clip on stage, and then type
the following in the Actions panel:</p>
<blockquote><pre class="code">onClipEvent (keyDown) {
  _visible = 0;
}

onClipEvent (keyUp) {
  _visible = 1;
}</pre></blockquote></li>


<li><p>Select Control <img align="absmiddle" src="figs/U2192.gif" /> Test Movie.</p></li><li><p>Click the movie to make sure it has keyboard focus, then press and
hold any key. Each time you depress a key, the
<tt class="literal">rectangle</tt> movie clip disappears. Each time you
release the depressed key, <tt class="literal">rectangle</tt> reappears.</p></li></ol>
<p>Notice that we don't manually issue any handler-invocation
statements -- the interpreter automatically invokes our event
handler when the corresponding event occurs.</p>


<p>Flash doesn't support attaching and removing handlers via
ActionScript while the movie is playing. Event handlers must be
assigned to buttons and movie clips using the Flash authoring tool.
The following imaginary syntax, therefore, is not legal:</p>


<blockquote><pre class="code">myClip.onKeyDown = function ( ) { _visible = 0; };</pre></blockquote>


<p>We'll see how to work around this shortcoming later <a name="INDEX-1136" /> <a name="INDEX-1137" /> <a name="INDEX-1138" />under <a href="ch10_16.htm">Section 10.16, "Dynamic Movie Clip Event Handlers"</a>.</p>
</div>




<a name="ch10-46091" /><div class="sect2">
<h3 class="sect2">10.6.2. Attaching Event Handlers to Other Objects</h3>


<p>In <a name="INDEX-1139" />addition to movie clips and buttons, two
built-in <a name="INDEX-1140" />object <a name="INDEX-1141" />classes -- <em class="filename">XML</em><a name="INDEX-1142" /> <a name="INDEX-1143" /> and
<em class="filename">XMLSocket -- </em>support
<a name="INDEX-1144" /> <a name="INDEX-1145" /> <a name="INDEX-1146" />event handlers. For these objects, event
handlers are not added to some physical entity in the authoring tool.
Rather, they are attached as methods to object instances.</p>


<p>For the <em class="filename">XML</em> and <em class="filename">XMLsocket</em>
objects, ActionScript uses predefined properties to hold the name of
the event handlers. For example, the <tt class="literal">onLoad</tt>
property holds the name of the handler to be executed when external
XML data has loaded.</p>


<p>To set the <tt class="literal">onLoad</tt> property for an
<em class="filename">XML</em> object, we use the following code:</p>


<blockquote><pre class="code">myDoc = new XML( );
myDoc.onLoad = function ( ) { trace("all done loading!"); };</pre></blockquote>


<p>Alternatively, we can define the handler function first, and then
assign it to the <tt class="literal">onLoad</tt> property of our object:</p>


<blockquote><pre class="code">function doneMsg ( ) {
  trace("all done loading!");
}
myDoc.onLoad = doneMsg;</pre></blockquote>


<p>This syntax closely resembles that of JavaScript, where functions may
be assigned to event handler properties, as shown in <a href="ch10_06.htm">Example 10-1</a>.</p>


<a name="ch10-84284" /><div class="example">
<h4 class="objtitle">Example 10-1. Assigning a JavaScript Event Handler </h4>

<blockquote><pre class="code">// Assign a function literal to the <em class="replaceable">onload</em> handler in JavaScript
window.onload = function ( ) { alert("done loading"); };

// Or, alternatively, create and then assign a function to the <em class="replaceable">onload</em> property
function doneMsg ( ) {
  alert("done loading");
}
window.onload = doneMsg;</pre></blockquote>
</div>


<p>In the future, more ActionScript objects may support assigning event
handlers using object properties, so it's a good idea to get
used to this style now. If you're not using the
<em class="filename">XML</em> or <em class="filename">XMLSocket</em> objects,
you can still practice making handlers in this way with HTML
documents and JavaScript. The beauty of this approach is its
flexibility; any event handler function may be easily reassigned or
even removed during movie playback.</p>


<p>We'll learn more about attaching functions to objects in <a href="ch12_01.htm">Chapter 12, "Objects and Classes"</a>. Information about the events supported by the
<em class="filename">XML</em> and <em class="filename">XMLSocket</em> objects
may be found in <a href="part3.htm">Part III, "Language Reference"</a>.</p>



<a name="ch10-11-fm2xml" /><blockquote><h4>TIP</h4>
<p>The lifespan of <a name="INDEX-1147" />event handlers is tied to the life of the
objects with which they are associated. When a clip or button is
removed from the Stage or when an <em class="filename">XML</em> or
<em class="filename">XMLSocket</em> object dies, any event handlers
associated with those objects die with them. An object must be
present on stage or exist on the timeline for its handlers to remain
<a name="INDEX-1148" />active.</p>

</blockquote>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch10_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">10.5. Event Handler Syntax</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">10.7. Event Handler Scope</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
