<html><head><title>Referencing Array Elements (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch11_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">11.4. Referencing Array Elements</h2>


<p>Once
<a name="INDEX-1358" />we've
created an array, we'll inevitably want to retrieve or change
the value of its elements. To do so, we can use square brackets
(i.e., the <em class="emphasis">array access operator</em>),
<tt class="literal">[]</tt>, which was introduced in <a href="ch05_01.htm">Chapter 5, "Operators"</a>.</p>


<a name="ch11-12-fm2xml" /><div class="sect2">
<h3 class="sect2">11.4.1. Retrieving an Element's Value</h3>


<p>In
<a name="INDEX-1359" />order
<a name="INDEX-1360" />to obtain an element's
value, we simply refer to the element by supplying its index within
square brackets, like this:</p>


<blockquote><pre class="code"><em class="replaceable">arrayName</em>[<em class="replaceable">elementNumber</em>]</pre></blockquote>


<p>where <em class="replaceable">arrayName</em> must be an array and
<em class="replaceable">elementNumber</em> can be any expression that
yields a numeric value. The first element is number
and the last element number is one less than the array's
length. Specifying an element number greater than the last valid
element number causes the interpreter to return
<tt class="literal">undefined</tt>. For example:</p>


<blockquote><pre class="code">// Create an array using an array literal, and store it in <em class="replaceable">trees</em>
var trees = ["birch", "maple", "oak", "cedar"];

// Display the first element of <em class="replaceable">trees</em> in the Output window
trace(trees[0]);  // Displays: "birch"

// Assign the third element's value to the variable <em class="replaceable">favoriteTree</em>
// (remember indexes start at 0, so index 2 is the third element!!)
var favoriteTree = trees[2];  // <em class="replaceable">favoriteTree</em> becomes "oak"</pre></blockquote>


<p>Now the fun part. Since we can provide the index of an element as any
number-yielding expression, we may use variables just as easily as we
use numbers to specify an element index. For example:</p>


<blockquote><pre class="code">var i = 3;
var lastTree = trees[i];  // Set <em class="replaceable">lastTree</em> to "cedar"</pre></blockquote>


<p>We can even use function-call expressions that have numeric return
values as our array indexes:</p>


<blockquote><pre class="code">// Set <em class="replaceable">randomTree</em> to a randomly picked element of <em class="replaceable">trees</em>
// by calculating a random number between 0 and 3
var randomTree = trees[Math.floor(Math.random( ) * 4)];</pre></blockquote>


<p>Hot dog, that's powerful! You might use a similar approach to
pick a random question from an array of trivia questions or to pick a
random card from an array that represents a deck of cards.</p>


<p>Note that accessing an array is very similar to accessing a variable
value. Array elements can be used as part of a complex expression, as
follows:</p>


<blockquote><pre class="code">var myNums = [12, 4, 155, 90];
var myTotal = myNums[0] + myNums[1] + myNums[2] + myNums[3];   // Sum the array</pre></blockquote>


<p>The approach used in the previous example to total the values of an
array's elements isn't exactly the paragon of optimized
code. Later, we'll see a much faster and more convenient way to
access an array's elements sequentially.</p>
</div>




<a name="ch11-13-fm2xml" /><div class="sect2">
<h3 class="sect2">11.4.2. Setting an Element's Value</h3>


<p>To
<a name="INDEX-1361" />set an element's value, we use
<em class="replaceable">arrayName
</em>[<em class="replaceable">elementNumber</em>] as the
lefthand operand of an assignment expression:</p>


<blockquote><pre class="code">// Make an array
var cities = ["Toronto", "Montreal", "Vancouver", "Waterloo"];
// <em class="replaceable">cities</em> is now: ["Toronto", "Montreal", "Vancouver", "Waterloo"]

// Set the value of the array's first element
// <em class="replaceable">cities</em> becomes ["London", "Montreal", "Vancouver", "Waterloo"]
cities[0] = "London"; 

// Set the value of the array's fourth element
// <em class="replaceable">cities</em> becomes ["London", "Montreal", "Vancouver", "Hamburg"]
cities[3] = "Hamburg";

// Set the value of the array's third element
// <em class="replaceable">cities</em> becomes ["London", "Montreal", 293.3, "Hamburg"]
cities[2] = 293.3;  // Notice that the datatype change is not a problem</pre></blockquote>


<p>Note that we can use any numeric expression as the index when setting
an array element:</p>


<blockquote><pre class="code">var i = 1;
// Set the value of element <em class="replaceable">i</em>
// <em class="replaceable">cities</em> becomes ["London", "Prague", 293.3, "Hamburg"]
cities[i] = "Prague";</pre></blockquote>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch11_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">11.3. Creating Arrays</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">11.5. Determining the Size of an Array</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>