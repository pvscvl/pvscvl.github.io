<html><head><title>Types of Movie Clips (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch13_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch13_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">13.2. Types of Movie Clips</h2>


<p>Not all <a name="INDEX-1592" />movie clips
are created equal. In fact, there are three distinct types of clips
available in Flash:</p>


<ul><li><p>Main movies</p></li><li><p>Regular movie clips</p></li><li><p>Smart Clips</p></li></ul>
<p>In addition to these three official varieties, we may define four
further subcategories, based on our use of regular movie clips:</p>


<ul><li><p>Process clips</p></li><li><p>Script clips</p></li><li><p>Linked clips</p></li><li><p>Seed clips</p></li></ul>
<p>While these latter unofficial categories are not formal terms used in
ActionScript, they provide a useful way to think about programming
with movie clips. Let's take a closer look at each movie clip
type.</p>


<a name="ch13-3-fm2xml" /><div class="sect2">
<h3 class="sect2">13.2.1. Main Movies</h3>


<p>The <em class="emphasis">main movie</em><a name="INDEX-1593" /> <a name="INDEX-1594" /> of a Flash document contains the basic
timeline and Stage present in every document. The main movie is the
foundation for all the content in the document, including all other
movie clips. We sometimes call the main movie the <em class="emphasis">main
timeline</em>, the <em class="emphasis">main movie timeline</em>,
the <em class="emphasis">main Stage</em>, or simply the
<em class="emphasis">root</em>.</p>


<p>Main movies may be manipulated in much the same way as regular movie
clips, however:</p>


<ul><li><p>A main movie cannot be removed from a <em class="filename">.swf</em> file
(although a <em class="filename">.swf</em> file, itself, may be removed
from the Flash Player).</p></li><li><p>The following movie clip methods do not work when invoked on a main
movie: <em class="filename">duplicateMovieClip( )</em>,
<em class="filename">removeMovieClip( )</em>, <em class="filename">swapDepths(
)</em>.</p></li><li><p>Event handlers cannot be attached to a main movie.</p></li><li><p>Main movies can be referenced through the built-in, global
<tt class="literal">_root</tt> and
<tt class="literal">_level</tt><em class="replaceable">n</em> properties.</p></li></ul>
<p>Note that while each <em class="filename">.swf</em> file contains only one
main movie, more than one <em class="filename">.swf</em> may reside in the
Flash Player at once -- we may load multiple
<em class="filename">.swf</em> documents (and therefore multiple main
movies) onto a stack of <em class="emphasis">levels</em> via the
<em class="filename">loadMovie( )</em> and <em class="filename">unloadMovie(
)</em> functions, which we'll study later.</p>
</div>




<a name="ch13-4-fm2xml" /><div class="sect2">
<h3 class="sect2">13.2.2. Regular Movie Clips</h3>


<p><em class="emphasis">Regular movie clips</em><a name="INDEX-1595" /> <a name="INDEX-1596" />
are the most common and fundamental content containers; they hold
visual elements and sounds and can even react to user input and movie
playback through event handlers. For JavaScript programmers who are
used to working with DHTML, it may be helpful to think of the main
movie as being analogous to an HTML document object and regular movie
clips as being analogous to that document's layer objects.</p>
</div>




<a name="ch13-5-fm2xml" /><div class="sect2">
<h3 class="sect2">13.2.3. Smart Clips</h3>


<p>Introduced <a name="INDEX-1597" />
<a name="INDEX-1598" />in Flash 5, a <em class="emphasis">Smart
Clip</em> is a regular movie clip that includes a graphical
user interface used to customize the clip's properties in the
authoring tool. Smart Clips are typically developed by advanced
programmers to provide an easy way for less-experienced Flash authors
to customize a movie clip's behavior without knowing how the
code of the clip works. We'll cover Smart Clips in detail in
<a href="ch16_01.htm">Chapter 16, "ActionScript Authoring Environment"</a>.</p>
</div>




<a name="ch13-6-fm2xml" /><div class="sect2">
<h3 class="sect2">13.2.4. Process Clips</h3>


<p>A <em class="emphasis">process clip</em><a name="INDEX-1599" /> <a name="INDEX-1600" /> is a
movie clip used not for content but simply to repeatedly execute a
block of code. Process clips may be built with an
<em class="filename">enterFrame</em><a name="INDEX-1601" /> event handler or with a
<a name="INDEX-1602" />
<a name="INDEX-1603" />timeline loop as we saw under
<a href="ch08_07.htm">Section 8.7, "Timeline and Clip Event Loops"</a> in <a href="ch08_01.htm">Chapter 8, "Loop Statements"</a>.</p>


<p>Process clips are ActionScript's unofficial alternative to the
<em class="filename">setTimeout(
)</em><a name="INDEX-1604" /> and
<em class="filename">setInterval(
)</em><a name="INDEX-1605" /> methods of the
JavaScript window object.</p>
</div>




<a name="ch13-7-fm2xml" /><div class="sect2">
<h3 class="sect2">13.2.5. Script Clips</h3>


<p>Like <a name="INDEX-1606" />
<a name="INDEX-1607" />a process clip, a <em class="emphasis">script clip
</em>is an empty movie clip used not for content but for
tracking some variable or executing some script. For example, we may
use a script clip to hold event handlers that detect keypresses or
mouse events.</p>
</div>




<a name="ch13-8-fm2xml" /><div class="sect2">
<h3 class="sect2">13.2.6. Linked Clips</h3>


<p>A <em class="emphasis">linked clip</em><a name="INDEX-1608" /> <a name="INDEX-1609" /> is a
movie clip that either exports from or imports into the Library of a
movie. Export and import settings are available through every movie
clip's Linkage option, found in the Library. We most often use
linked clips when dynamically generating an instance of a clip
directly from a Library symbol using the <em class="filename">attachMovie(
)</em> clip method, as we'll see later.</p>
</div>




<a name="ch13-9-fm2xml" /><div class="sect2">
<h3 class="sect2">13.2.7. Seed Clips</h3>


<p>Before <a name="INDEX-1610" />
<a name="INDEX-1611" />the <em class="filename">attachMovie( )</em>
method was introduced in Flash 5, we used the
<a name="INDEX-1612" />
<a name="INDEX-1613" /><em class="filename">duplicateMovieClip( )</em>
function to create new movie clips based on some existing clip,
called a <em class="emphasis">seed clip</em>. A <em class="emphasis">seed
clip</em> is a movie clip that resides on stage solely for the
purpose of being copied via <em class="filename">duplicateMovieClip(
)</em>. With the introduction of <em class="filename">attachMovie(
)</em>, the need for seed clips has diminished. However, we
still use seed clips and <em class="filename">duplicateMovieClip( )</em>
when we wish to retain a clip's event handlers and
transformations in the process of copying it.</p>


<p>In a movie that makes heavy use of <em class="filename">duplicateMovieClip(
)</em> to dynamically generate content, it's common to
see a row of seed clips on the outskirts of the movie canvas. The
seed clips are used only to derive duplicate clips and are,
therefore, kept off <a name="INDEX-1614" />stage.</p>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch13_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch13_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">13. Movie Clips</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">13.3. Creating Movie Clips</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>