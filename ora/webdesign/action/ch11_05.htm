<html><head><title>Determining the Size of an Array (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_04.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch11_06.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">11.5. Determining the Size of an Array</h2>


<p>All <a name="INDEX-1362" /> <a name="INDEX-1363" />
<a name="INDEX-1364" /> <a name="INDEX-1365" />arrays come with a built-in
property named <tt class="literal">length</tt>, which indicates the current
number of elements (including empty elements). To access an
array's <tt class="literal">length</tt> property, we use the dot
operator, like so:</p>


<blockquote><pre class="code"><em class="replaceable">arrayName</em>.length</pre></blockquote>


<p>An array's <tt class="literal">length</tt> property tells us how many
elements are in the array. Here are a few examples:</p>


<blockquote><pre class="code">myList = [34, 45, 57];
trace(myList.length);  // Displays: 3

myWords = ["this", "that", "the other"];
trace(myWords.length);  // Displays: 3, the number of elements, 
                        // not the number of words or characters

frameLabels = new Array(24);      // Note the single numeric argument
                                  // used with the Array( ) constructor
trace(frameLabels.length);  // Displays: 24</pre></blockquote>


<p>The <tt class="literal">length</tt> of an array is always one greater than
the index of its last element. For example, an array with elements at
indexes 0, 1, and 2 has a length of 3. And an array with elements at
indexes 0, 1, 2, and 50 has a length of 51. 51? Yes, 51. Even though
indexes 3 through 49 are empty, they still contribute to the length
of the array. The last element of an array is always
<em class="replaceable">myArray</em><tt class="literal">[</tt><em class="replaceable">myArray</em><tt class="literal">.length</tt>
<tt class="literal">- 1]</tt>, because index numbers begin at 0, not 1.</p>


<p>If we add and remove elements, the array's
<tt class="literal">length</tt> property is updated to reflect our changes.
In fact, we can even set the <tt class="literal">length</tt> property to
add or remove elements at the end of an array.</p>


<p>What is an array's <tt class="literal">length</tt> property good for,
you ask? Using an array's <tt class="literal">length</tt> property,
we can create a loop that accesses all the elements of an array as we
saw in <a href="ch08_01.htm">Example 8-1</a>. Looping through an array's
elements is a fundamental task in programming. To get a sense of
what's possible when we combine loops and arrays, study <a href="ch11_05.htm">Example 11-1</a>, which hunts through a
<tt class="literal">soundtracks</tt> array to find the location of the
element with the value "hip hop". You should recognize
the <em class="filename">for</em> loop from <a href="ch08_01.htm">Chapter 8, "Loop Statements"</a>,
and the increment operator from <a href="ch05_01.htm">Chapter 5, "Operators"</a>. As for
the array-access code, well, you just finished learning about that.</p>


<a name="ch11-98675" /><div class="example">
<h4 class="objtitle">Example 11-1. Searching an Array </h4>

<blockquote><pre class="code">// Create an array
var soundtracks = ["electronic", "hip hop", "pop", "alternative", "classical"];

// Check each element to see if it contains "hip hop"
for (var i = 0; i &lt; soundtracks.length; i++) {
  trace("Now examining element: " + i);
  if (soundtracks[i] == "hip hop") {
    trace("The location of 'hip hop' is index: " + i);
    break;
  }
}</pre></blockquote>
</div>


<p>Let's extend <a href="ch11_05.htm">Example 11-1</a> into a generalized
search function that can check <em class="emphasis">any</em> array for
<em class="emphasis">any</em> matching element, as shown in <a href="ch11_05.htm">Example 11-2</a>. Our search function returns the position
within the array where the element was found, or
<tt class="literal">null</tt> if it was not found.</p>


<a name="ch11-42148" /><div class="example">
<h4 class="objtitle">Example 11-2. A Generalized Array-Searching Function </h4>

<blockquote><pre class="code">function searchArray (whichArray, searchElement) {
  // Check each element to see if it contains searchElement
  for (var i = 0; i &lt; whichArray.length; i++) {
    if (whichArray[i] == searchElement) {
      return i;
    }
  }
  return null;
}</pre></blockquote>
</div>


<p>Here's how you might make use of our new search function to
check whether or not "Fritz" is one of the names in our
<tt class="literal">userNames</tt> array, which is an array of authorized
usernames:</p>


<blockquote><pre class="code">if (searchArray (userNames, "Fritz") == null) {
  trace ("Sorry, that username wasn't found");
} else {
  trace ("Welcome to the game.");
}</pre></blockquote>


<p>Now that's invigorating! This is one of those rewarding moments
when all our hard work comes together in a single system. Seemingly
trivial individual operations can combine to form extremely powerful
and flexible programs. Like the letters in the alphabet or the sequence of base-pairs in a strand of DNA, you can construct anything
imaginable from the simple building blocks at your disposal. The
remainder of this chapter explains more about the mechanics of
manipulating arrays, including the use of built-in functions that
already perform some common functions for you. As you encounter needs
not met by the built-in functions, consider writing your own custom
functions, such as the <em class="filename">searchArray( )</em> function
in the preceding <a name="INDEX-1366" /> <a name="INDEX-1367" /> <a name="INDEX-1368" /> <a name="INDEX-1369" />example.</p>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_04.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch11_06.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">11.4. Referencing Array Elements</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">11.6. Named Array Elements</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>