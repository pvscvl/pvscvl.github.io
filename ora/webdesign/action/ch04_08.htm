<html><head><title>Undefined (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch04_07.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch04_09.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">4.8. Undefined</h2>


<p>Most <a name="INDEX-629" />
<a name="INDEX-630" />of the datatypes we've explored
so far have been used for storing and manipulating information. The
<em class="filename">undefined</em> datatype has a more narrow purpose: it
is used to check whether a variable exists or whether a variable has
yet been assigned a value. The <em class="emphasis">undefined</em>
datatype has only one legal value, the primitive value
<tt class="literal">undefined</tt>.</p>


<p>When we first define a variable, it is assigned the value
<tt class="literal">undefined</tt> by default:</p>


<blockquote><pre class="code">var velocity;</pre></blockquote>


<p>To the interpreter, the preceding statement reads:</p>


<blockquote><pre class="code">var velocity = undefined;</pre></blockquote>


<p>To check whether a variable has a value, we can compare the variable
to <tt class="literal">undefined</tt>, as in:</p>


<blockquote><pre class="code">if (myVariable != undefined) {
  // <em class="replaceable">myVariable</em> has a value, so proceed as desired...
}</pre></blockquote>


<p>Note that an <tt class="literal">undefined</tt> value is converted to the
empty string when used as a string. For example, if
<tt class="literal">firstName</tt> is <tt class="literal">undefined</tt>, the
following <em class="filename">trace( )</em> statement will display
<tt class="literal">""</tt> (the empty string):</p>


<blockquote><pre class="code">var firstName;
trace(firstName);  // Displays nothing (the empty string)</pre></blockquote>


<p>This same code in JavaScript would display the string
"undefined" instead of the empty string. ActionScript
converts <tt class="literal">undefined</tt> to <tt class="literal">""</tt> for
the sake of backward compatibility.</p>


<p>Because there was no <em class="emphasis">undefined</em> type in
<a name="INDEX-631" />Flash 4 ActionScript, many Flash 4
programs used the empty string to check whether a variable had a
useful value. Code like this was common:</p>


<blockquote><pre class="code">if (myVar eq "") { 
  // Don't do anything yet: <em class="replaceable">myVar</em> is undefined 
}</pre></blockquote>


<p>If Flash 5 converted <tt class="literal">undefined</tt> to anything other
than <tt class="literal">""</tt> in a string context, old code like that
would break in the Flash 5 player.</p>


<p>Note that ActionScript returns <tt class="literal">undefined</tt> both for
variables that do not exist and variables that have been declared but
have no value. This is also a departure from JavaScript, where
references to variables that do not exist cause an error.</p>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch04_07.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch04_09.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">4.7. The Boolean Type</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">4.9. Null</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>