<html><head><title>Removing Elements from an Array (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_07.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch11_09.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">11.8. Removing Elements from an Array</h2>


<p>You can remove elements from an array using the
<em class="filename">delete</em> operator, by reducing the
<tt class="literal">length</tt> property of an array, or using one of the
built-in array methods.</p>


<a name="ch11-27-fm2xml" /><div class="sect2">
<h3 class="sect2">11.8.1. Removing Elements with the delete Operator</h3>


<p>The <a name="INDEX-1405" />
<a name="INDEX-1406" /><em class="filename">delete</em> operator
sets an array element to <tt class="literal">undefined</tt>, using the
following syntax:</p>


<blockquote><pre class="code">delete <em class="replaceable">arrayName</em>[<em class="replaceable">index</em>]</pre></blockquote>


<p>where <em class="replaceable">arrayName</em> is any array, and
<em class="replaceable">index</em> is the number or name of the element
we want to set to <tt class="literal">undefined</tt>. The name
<em class="filename">delete</em> is misleading, frankly. It does
<em class="emphasis">not</em> remove an element from the array; it merely
sets the target element's value to
<tt class="literal">undefined</tt>. A <em class="filename">delete</em>
operation, therefore, is identical to assigning the
<tt class="literal">undefined</tt> value to an element. We can verify this
by checking the <tt class="literal">length</tt> property of an array after
deleting one of its elements:</p>


<blockquote><pre class="code">var myList = ["a", "b", "c"];
trace(myList.length);  // Displays: 3
delete myList[2];
trace(myList.length);  // Still displays 3...the element at index 2 is <em class="replaceable">undefined</em>
                      // instead of "c", but it still exists</pre></blockquote>


<p>To truly delete elements, use <em class="filename">splice( )</em> (to
delete them from the middle of an array), or use
<em class="emphasis">shift</em><em class="filename">( )</em> and <em class="filename">pop(
)</em> (to delete them from the beginning or end of an array).
Note that <em class="filename">delete</em> behaves differently with object
properties and named elements than with numbered elements. Using
<em class="filename">delete</em> on them permanently destroys properties
and named elements, leaving no trace of them.</p>
</div>




<a name="ch11-28-fm2xml" /><div class="sect2">
<h3 class="sect2">11.8.2. Removing Elements with the length Property</h3>


<p>Earlier <a name="INDEX-1407" />we <a name="INDEX-1408" /> <a name="INDEX-1409" />used the <tt class="literal">length</tt>
property to add elements to an array. We can also set the
array's <tt class="literal">length</tt> property to a number smaller
than the current length in order to delete elements from the array
(i.e., truncate the array):</p>


<blockquote><pre class="code">var toppings = ["pepperoni", "tomatoes", "cheese", "green pepper", "broccoli"];
toppings.length = 3;
trace(toppings);  // Displays: "pepperoni,tomatoes,cheese"
                  // We trimmed elements 3 and 4 (the last two).</pre></blockquote>
</div>




<a name="ch11-29-fm2xml" /><div class="sect2">
<h3 class="sect2">11.8.3. Removing Elements with Array Methods</h3>


<p>Arrays come equipped with several built-in methods for removing
elements. We've already seen how <em class="filename">splice( )</em>
can delete a series of elements from the middle of an array. The
<em class="filename">pop( )</em> and <em class="filename">shift( )</em> methods
are used to prune elements from the end or beginning of an array.</p>


<a name="ch11-30-fm2xml" /><div class="sect3">
<h3 class="sect3">11.8.3.1. The pop( ) method</h3>


<p>The <a name="INDEX-1410" />
<a name="INDEX-1411" />
<a name="INDEX-1412" /><em class="filename">pop( )</em> method is
the antithesis of <em class="filename">push( )  -- </em>it removes the
last element of an array. The syntax of
<em class="emphasis">pop</em><em class="filename">( )</em> is simple:</p>


<blockquote><pre class="code"><em class="replaceable">arrayName</em>.pop( )</pre></blockquote>


<p>(I don't know why, but I always think that
"popping" an array is kinda funny.) Anyway,
<em class="filename">pop( )</em> decrements the array's
<tt class="literal">length</tt> by 1 and returns the value of the element
it removes. For example:</p>


<blockquote><pre class="code">x = [56, 57, 58];
x.pop( );     // <em class="replaceable">x</em> is now [56, 57]</pre></blockquote>


<p>As we learned earlier, <em class="filename">pop( )</em> is often used in
combination with <em class="filename">push( )</em> to perform LIFO stack
operations. In <a href="ch11_08.htm">Example 11-4</a>, we use the
<tt class="literal">siteHistory</tt> array to track a user's
navigation through a site. When the user navigates to a new frame, we
add his location to the array using <em class="filename">push( )</em>.
When the user navigates back, we <em class="filename">pop( )</em> his last
location off of <tt class="literal">siteHistory</tt>, and send him to the
preceding location. <a href="ch11_08.htm">Example 11-4</a> may be downloaded
from the online Code Depot.</p>


<a name="ch11-26440" /><div class="example">
<h4 class="objtitle">Example 11-4. A Back Button with History </h4>

<blockquote><pre class="code"><tt class="userinput"><b>// CODE ON FRAME 1 OF OUR MOVIE</b></tt>
stop( );
var siteHistory = new Array( );

function goto(theLabel) {
  // If we're not already at the requested frame...
  if (theLabel != siteHistory[siteHistory.length - 1]) {
    // ...add the request to the history, then go to the requested frame
    siteHistory.push(theLabel);
    gotoAndStop(siteHistory[siteHistory.length - 1]);
  }
  trace(siteHistory);
}

function goBack( ) {
  // Remove the last item in the history
  siteHistory.pop( );
  // If there is anything left in the history...
  if (siteHistory.length &gt; 0) {
    // ...go to the most recent frame
    gotoAndStop(siteHistory[siteHistory.length - 1]);
  } else {
    // ...otherwise go home
    gotoAndStop("home");
  }
  trace(siteHistory);
}

<tt class="userinput"><b>// CODE ON A NAVIGATION BUTTON</b></tt>
on (release) {
  goto("gallery");
}

<tt class="userinput"><b>// CODE ON THE BACK BUTTON</b></tt>
on (release) {
  goBack( );
}</pre></blockquote>
</div>
</div>



<a name="ch11-31-fm2xml" /><div class="sect3">
<h3 class="sect3">11.8.3.2. The shift( ) method</h3>


<p>Remember <a name="INDEX-1413" />
<a name="INDEX-1414" />
<a name="INDEX-1415" /><em class="filename">unshift( )</em>, the
method we used to add an element to the beginning of an array? Meet
its alter ego, <em class="filename">shift( )</em>, which removes an
element from the beginning of an array:</p>


<blockquote><pre class="code"><em class="replaceable">arrayName</em>.shift( )</pre></blockquote>


<p>Not as funny as <em class="filename">pop</em>. Oh well.</p>


<p>Like <em class="filename">pop( )</em>, <em class="filename">shift( )</em>
returns the value of the element it removes. The remaining elements
all move up in the pecking order toward the beginning of the array.
For example:</p>


<blockquote><pre class="code">var sports = ["hackey sack", "snowboarding", "inline skating"];
sports.shift( );  // Now ["snowboarding", "inline skating"]
sports.shift( );  // Now ["inline skating"]</pre></blockquote>


<p>Because <em class="filename">shift( )</em> truly deletes an element, it is
more useful than <em class="filename">delete</em> for removing the first
element of an array. We can also use <em class="filename">shift( )</em> to
limit the range of a list. For example, suppose we're
calculating the frame rate of a movie. We <em class="filename">push(
)</em> the current time onto an array after each frame renders.
To limit the size of our array to the most recent 10 time samples, we
<em class="filename">shift( )</em> the oldest time off as necessary. To
find the frame rate, we average the times in our array. <a href="ch11_08.htm">Example 11-5</a> shows the technique.</p>


<a name="ch11-76569" /><div class="example">
<h4 class="objtitle">Example 11-5. Calculating the Frame Rate of a Movie </h4>

<blockquote><pre class="code">// Create our time measurement array in a movie clip
onClipEvent(load) {
  var elapsedTime = new Array( );
}

// Use an <em class="replaceable">enterFrame</em> clip event to measure the time after each frame
onClipEvent(enterFrame) {
  // Add the current time to <em class="replaceable">elapsedTime</em>
  elapsedTime.push(getTimer( ));

  // If we have enough samples to calculate an average...
  if (elapsedTime.length &gt; 10) {
    // ...remove the oldest time from <em class="replaceable">elapsedTime</em>
    elapsedTime.shift( );

    // Average the number of elapsed milliseconds per frame
    elapsedAverage = (elapsedTime[elapsedTime.length - 1] - 
                     elapsedTime[0]) / elapsedTime.length;

    // To find the frames per second, divide 1 second by the elapsed average
    fps = 1000 / elapsedAverage;
    trace("current fps " + fps);
  }
}</pre></blockquote>
</div>
</div>



<a name="ch11-27304" /><div class="sect3">
<h3 class="sect3">11.8.3.3. The splice( ) method</h3>


<p>Earlier <a name="INDEX-1416" />
<a name="INDEX-1417" />
<a name="INDEX-1418" />we learned that <em class="filename">splice(
)</em> can both remove elements from and add elements to an
array. Since we've already looked at <em class="filename">splice(
)</em> in detail, we won't reexamine it here. However,
given our current context, we should specifically demonstrate
<em class="filename">splice( ) </em>'s element-removal capabilities:</p>


<blockquote><pre class="code">var x = ["a", "b", "c", "d", "e", "f"];
x.splice(1,3);  // Removes elements 1, 2, and 3, leaving ["a", "e", "f"]
x.splice(1);    // Removes elements 1 through the end leaving just ["a"]</pre></blockquote>
</div>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_07.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch11_09.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">11.7. Adding Elements to an Array</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">11.9. General Array-Manipulation Tools</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>