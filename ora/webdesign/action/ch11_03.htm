<html><head><title>Creating Arrays (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch11_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">11.3. Creating Arrays</h2>


<p>We can create a new array with a data literal (i.e., simply typing
out all the elements) or with the special built-in array constructor
function, <em class="filename">Array( )</em>.</p>


<a name="ch11-9-fm2xml" /><div class="sect2">
<h3 class="sect2">11.3.1. The Array Constructor</h3>


<p>To <a name="INDEX-1346" /> <a name="INDEX-1347" />create an array with the
<em class="filename">Array( )</em><a name="INDEX-1348" /> constructor, we use the
<em class="filename">new</em> operator followed by the <em class="emphasis">Array
</em>keyword followed by parentheses, which yields an empty
array (one with no elements). We normally assign a newly created
array to a variable or other data container for future reference. For
example:</p>


<blockquote><pre class="code">var myList = new Array( );  // Store an empty array in<tt class="userinput"><b> </b></tt>variable <em class="replaceable">myList</em></pre></blockquote>


<p>We often want to assign initial values to an array's elements.
We can do so by passing parameters to the <em class="filename">Array(
)</em> constructor when invoking it. Depending on the
parameters we supply, the constructor invocation has different
effects.</p>


<p>When we supply more than one argument to the <em class="filename">Array(
)</em> constructor or when we supply a single nonnumeric
argument to the <em class="filename">Array( )</em> constructor, each
argument becomes one of the element values in our new array. For
example:</p>


<blockquote><pre class="code">var frameLabels = new Array("intro", "section1", "section2", "home");</pre></blockquote>


<p>The array stored in <tt class="literal">frameLabels</tt> would have the
following elements:</p>


<blockquote><pre class="code">0: "intro"
 1: "section1"
 2: "section2"
 3: "home"</pre></blockquote>


<p>When we supply exactly one numeric argument to the <em class="filename">Array(
)</em> constructor, it creates an array with the specified
number of empty placeholder elements:</p>


<blockquote><pre class="code">var myList = new Array(14); // Creates an array with 14 empty elements</pre></blockquote>


<p>Arguments passed to the <em class="filename">Array( )</em> constructor can
be any legal expression, including compound expressions:</p>


<blockquote><pre class="code">var x = 10;
var y = 5;
var myNumbers = new Array(x + 1, x * y, Math.random( ));</pre></blockquote>


<p>The <tt class="literal">myNumbers</tt> variable would thus store an array
with the following elements:</p>


<blockquote><pre class="code">0: 11
 1: 50
 2: a floating-point number between 0 <a name="INDEX-1349" />and 1<a name="INDEX-1350" />
<a name="INDEX-1351" /></pre></blockquote>
</div>




<a name="ch11-10-fm2xml" /><div class="sect2">
<h3 class="sect2">11.3.2. Array Literals</h3>


<p>Sometimes,
<a name="INDEX-1352" />
<a name="INDEX-1353" />it's
more convenient to create arrays using array literals than to create
them with the <em class="filename">Array( )</em> constructor. Recall that
a <em class="emphasis">literal</em> is a direct representation of a fixed
piece of fixed data. For example:</p>


<blockquote><pre class="code">"beaver"      // A string literal
234.2034      // A numeric literal
true          // A boolean literal</pre></blockquote>


<p>In an array literal, <a name="INDEX-1354" />
<a name="INDEX-1355" />square brackets signal the beginning
and end of the array. Inside the square brackets, a comma-separated
list of expressions provides the values of the array's
elements. Here's the general syntax:</p>


<blockquote><pre class="code">[<em class="replaceable">expression1</em>, <em class="replaceable">expression2</em>, <em class="replaceable">expression3</em>]</pre></blockquote>


<p>The expressions are resolved and then stored as the elements of the
array being described. Any valid expression may be used, including
function calls, variables, literals, and even other arrays (an array
within an array is called a
<em class="emphasis">nested</em><a name="INDEX-1356" />
<a name="INDEX-1357" /> array). Here are a few examples:</p>


<blockquote><pre class="code">[4, 5, 63];                              // Simple numeric elements
["jeremy", "janice", "eman"]             // Simple string elements
[1, 4, 6 + 10]                           // Numeric expressions with operation
[firstName, lastName, "tall", "skinny"]  // Variables and strings as elements
["month end days", [31, 30, 28]]         // A nested array literal</pre></blockquote>


<p>For comparison, let's do the same thing with the
<em class="emphasis">Array( )</em> constructor:</p>


<blockquote><pre class="code">new Array(4, 5, 63)
new Array("jeremy", "janice", "eman")
new Array(1, 4, 6 + 10)
new Array(firstName, lastName, "tall", "skinny")
new Array("month end days", new Array(31, 30, 28))</pre></blockquote>


<p>Notice that the elements of a single array in ActionScript can
contain data of different types, as noted in <a href="ch11_02.htm">the sidebar "Arrays in Other Programming Languages"</a>.</p>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch11_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">11.2. The Anatomy of an Array</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">11.4. Referencing Array Elements</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>