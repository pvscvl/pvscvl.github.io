<html><head><title>The Multiple-Choice Quiz, Take 3 (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_10.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch11_12.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">11.11. The Multiple-Choice Quiz, Take 3</h2>


<p>In <a href="ch09_13.htm">Example 9-10</a>, <a name="INDEX-1453" />we revised the
multiple-choice quiz from <a href="ch01_03.htm">Example 1-1</a>. At that time,
we improved the quiz code by creating reusable, centralized
functions. Now that we've studied arrays, we can return to the
quiz to make a few more improvements. This time, we'll see how
to use arrays to store both the user's answers and the correct
answers for each question, making our code more succinct, legible,
and easier to extend if we want to add new questions.</p>


<p>All the changes we need to make to the quiz this time take place on
the <em class="emphasis">scripts</em> layer of frame 1, where our main
quiz code is located. Both the previous version and this updated
version of the quiz can be found in the online Code Depot. To see
what improvements we'll make this time around, read through the
code in <a href="ch11_11.htm">Example 11-7</a>, paying special attention to the
comments.</p>


<a name="ch11-38246" /><div class="example">
<h4 class="objtitle">Example 11-7. A Multiple-Choice Quiz, Version 3 </h4>

<blockquote><pre class="code">stop( );
//  *** Init main timeline variables
var displayTotal;               // Text field for displaying user's final score
var numQuestions = 2;           // Number of questions in the quiz
var totalCorrect = 0;           // Number of correct answers
var userAnswers = new Array( );  // Array containing user's guesses
var correctAnswers = [3, 2];    // Array containing each question's correct answer
// Notice that we no longer need to maintain two long lists of variables 
// named q1answer, q2answer, etc., and correctAnswer1, correctAnswer2, etc.
// We now store that information conveniently in an array.

// *** Function to register the user's answers
function answer (choice) {
  // Since we can now check how many answers have been given via the
  // <em class="replaceable">length</em> property of <em class="replaceable">userAnswers</em>, we no longer need to manually track
  // that information with the <em class="replaceable">answer.currentAnswer</em> property. Note also 
  // that we have done away with the unwieldy <em class="replaceable">set</em> statement that previously
  // assigned the user's answer to a dynamically named variable.

  // Tack the user's answer onto our array
  userAnswers.push(choice);
  // Do a little navigation, baby
  if ((userAnswers.length) == numQuestions) {
    gotoAndStop ("quizEnd");
  } else {
    gotoAndStop ("q"+ (userAnswers.length + 1));
  }
}

// *** Function to tally the user's score
function gradeUser( ) {
  // Count how many questions were answered correctly. Our
  // <em class="replaceable">userAnswer/correctAnswer</em> element comparison is much cleaner than the
  // snake pit of <em class="replaceable">eval( )</em> functions we used to do the same job in the previous version.
  for (var i = 0; i &lt; userAnswers.length; i++) {
    if (userAnswers[i] == correctAnswers[i]) {
      totalCorrect++;
    }
  }
  // Show the user's score in a dynamic text field
  displayTotal = totalCorrect;
}</pre></blockquote>
</div>


<p>Reader Exercise: Try generalizing our array-based version of the quiz
by using <tt class="literal">correctAnswers.length</tt> in place of the
variable <tt class="literal">numQuestions</tt>.</p>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_10.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch11_12.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">11.10. Multidimensional Arrays</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">11.12. Onward!</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>