<html><head><title>Backward Compatibility (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="appc_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />



<h1 class="chapter">Appendix C. Backward Compatibility</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="appc_01.htm">Updates to the Flash 5 Player, Build 41</a><br />
<a href="appc_02.htm">Controlling Movie Clips</a><br /></p></div>


<p>Flash allows you to <a name="INDEX-3815" />
<a name="INDEX-3816" />publish <em class="filename">.swf</em> files
in a format that is compatible with previous versions of the Player.
By the time you read this, the majority of users will have at least
version 5 of the Flash plug-in, but you may prefer to author for the
Flash 4 plug-in instead. Even if you are authoring exclusively for
Flash 5, this appendix will help you avoid using deprecated
ActionScript and bring you up to speed on the preferred methods in
Flash 5. For statistics on the distribution of various Flash Player
versions, see:</p>


<blockquote class="simplelist">

<p><a href="../../../../../../www.macromedia.com/software/flash/survey/whitepaper">http://www.macromedia.com/software/flash/survey/whitepaper</a></p>

</blockquote>


<p>When authoring for <a name="INDEX-3817" />Flash 4, use the
<em class="emphasis">deprecated</em> techniques (i.e., those that are
outdated, but supported for backward compatibility) listed in <a href="appc_01.htm">Table C-1</a>. See also "Using Flash 5 to Create Flash
4 Content" under "Writing Scripts with
ActionScript" in Macromedia's Flash ActionScript
Reference Guide.</p>

<a name="appc-2-fm2xml" /><blockquote><h4>WARNING</h4>
<p>To run scripts in the Flash 4 Player you must set the Version of your
<em class="filename">.swf</em> file to Flash 4 under the Flash tab under
File <img align="absmiddle" src="figs/U2192.gif" /> Publish Settings. All code is disabled if you attempt to
run a Flash 5 or later <em class="filename">.swf</em> file in the Flash 4
Player.</p>

</blockquote>

<p><a href="appc_01.htm">Table C-1</a> summarizes key backward-compatibility
issues and differences between Flash 4 ActionScript and Flash 5
ActionScript.</p>


<a name="appc-91772" /><h4 class="objtitle">Table C-1. Backward-Compatibility Issues </h4><table border="1">



<tr>
<th>
<p>Topic</p></th>
<th>
<p>Description</p></th>
</tr>




<tr>
<td>
<p>Creating variables</p></td>
<td>
<p>Flash 4's <em class="filename">set</em> function has been replaced
by the <em class="filename">var</em> statement. To create dynamically
named variables, use <em class="filename">eval( )</em>, or (more
appropriately) use arrays to manage your data. See <a href="ch11_01.htm">Chapter 11, "Arrays"</a>.</p></td>
</tr>

<tr>
<td>
<p>Variable and timeline references</p></td>
<td>
<p>The Flash 4-style slash-colon constructions
(<tt class="literal">/square:area</tt>) have been superceded by dot
notation (<tt class="literal">square.area</tt>). See <a href="ch02_05.htm">Table 2-1</a>.</p></td>
</tr>

<tr>
<td>
<p>String comparison operators</p></td>
<td>
<p>The Flash 4 string comparison operators -- <tt class="literal">eq</tt>,
<tt class="literal">ne</tt>, <tt class="literal">ge</tt>, <tt class="literal">gt</tt>,
<tt class="literal">le</tt>, <tt class="literal">lt</tt> -- have been
superceded by the following operators in Flash 5: ==, !=, &gt;=,
&gt;, &lt;=, &lt;. See <a href="ch04_06.htm">Table 4-2</a>.</p></td>
</tr>

<tr>
<td>
<p>String concatenation operator</p></td>
<td>
<p>When creating Flash 4 content in Flash 5 or later, use the
<em class="filename">add</em> operator instead of Flash 4's
<tt class="literal">&amp;</tt> operator. When authoring for Flash 5, use
the <tt class="literal">+</tt> operator for string concatenation. See <a href="ch04_06.htm">Table 4-2</a>.</p></td>
</tr>

<tr>
<td>
<p>String length</p></td>
<td>
<p>Flash 4's <em class="emphasis">length( )</em> function (e.g.,
<em class="filename">length(</em><em class="replaceable">myString
</em><em class="filename">)</em>) has been superceded by the
<tt class="literal">length</tt> property (e.g.,
<em class="replaceable">myString.</em><tt class="literal">length</tt>). See
<a href="ch04_06.htm">Table 4-2</a>.</p></td>
</tr>

<tr>
<td>
<p>Substring extraction</p></td>
<td>
<p>Flash 4's <em class="filename">substring</em><em class="emphasis">(
)</em> function (e.g., <tt class="literal">substring(myString, 1,
3)</tt>) has been superceded by the
<em class="filename">substring</em><em class="emphasis">( )</em>,
<em class="filename">substr</em><em class="emphasis">( )</em>, and
<em class="filename">slice</em><em class="emphasis">( )</em> methods. Note that
<em class="filename">substring</em><em class="emphasis">( )</em> differs in
Flash 4 and Flash 5. See <a href="ch04_06.htm">Table 4-2</a>.</p></td>
</tr>

<tr>
<td>
<p>Character code point functions</p></td>
<td>
<p>Flash 4's <em class="filename">chr</em><em class="emphasis">( )</em> and
<em class="filename">mbchr</em><em class="emphasis">( )</em> functions (used to
create a character from a code point) have been superceded by
<em class="filename">String.fromCharCode</em><em class="emphasis">( )</em>.
Flash 4's <em class="filename">ord</em><em class="emphasis">( )</em> and
<em class="filename">mbord</em><em class="emphasis">( )</em> functions (used to
determine the code point of a character) have been superceded by the
<em class="filename">String.charCodeAt</em><em class="emphasis">( )</em>
method. See <a href="ch04_06.htm">Table 4-2</a>.</p></td>
</tr>

<tr>
<td>
<p>Datatype conversion</p></td>
<td>
<p>When importing Flash 4 files, Flash 5 automatically inserts the
<em class="filename">Number</em><em class="emphasis">( )</em> function around
any numeric data that is used as an operand of the following
potentially ambiguous operators: +, ==, !=, &lt;&gt;, &lt;, &gt;,
&gt;=, &lt;=. See <a href="ch03_04.htm">Table 3-5</a>.</p></td>
</tr>

<tr>
<td>
<p>The <em class="filename">ifFrameLoaded</em> statement</p></td>
<td>
<p>Flash 3's <em class="filename">ifFrameLoaded</em> statement has been
deprecated. Use the <tt class="literal">_totalframes</tt> and
<tt class="literal">_framesloaded</tt> <em class="filename">MovieClip</em>
properties to create preloading code.</p></td>
</tr>

<tr>
<td>
<p>Infinite loops</p></td>
<td>
<p>Flash 4 allowed a maximum of 200,000 loop iterations. Flash 5 allows
15 seconds for loops, after which it warns users that the movie has
stopped responding. See <a href="ch08_06.htm">Section 8.6.3, "Maximum Number of Iterations"</a> in <a href="ch08_01.htm">Chapter 8, "Loop Statements"</a>.</p></td>
</tr>

<tr>
<td>
<p>Subroutines versus functions</p></td>
<td>
<p>In Flash 4, a subroutine could be created by attaching a block of
code to a frame with a label and executing it using the
<em class="filename">call( )</em> statement. Flash 5's functions
replace Flash 4's subroutines.</p></td>
</tr>

<tr>
<td>
<p>Clip events</p></td>
<td>
<p>Flash 4 supported only button events (i.e., functions starting with
<em class="filename">on( ) </em>) as shown in <a href="ch10_08.htm">Table 10-1</a>. Clip events (i.e., <em class="filename">onClipEvent(
)</em> ) cannot be used in the Flash 4 Player.</p></td>
</tr>

<tr>
<td>
<p>Capturing keystrokes</p></td>
<td>
<p>In Flash 4, <em class="filename">keyPress</em> was the only means of
capturing keystrokes. Flash 5's <em class="filename">Key</em>
object, in combination with the movie clip events
<em class="filename">keyDown</em> and <em class="filename">keyUp</em>, offers
much greater control over keyboard interaction.</p></td>
</tr>

<tr>
<td>
<p><em class="filename">Tell Target </em>deprecated</p></td>
<td>
<p>Flash 4's <em class="emphasis">Tell Target</em> (used to control
remote movie clips) has been replaced by properties and methods
accessed using dot notation and the <em class="filename">with</em>
statement. See <a href="ch13_01.htm">Chapter 13, "Movie Clips"</a>.</p></td>
</tr>

<tr>
<td>
<p><em class="filename">Get Property</em><em class="emphasis"> </em>deprecated</p></td>
<td>
<p>Flash 4's <em class="filename">Get Property</em> command is no
longer required for movie clip property access. Use the dot operator
instead. See <a href="ch13_01.htm">Chapter 13, "Movie Clips"</a>.</p></td>
</tr>

<tr>
<td>
<p><em class="filename">int</em> deprecated</p></td>
<td>
<p>Flash 4's <em class="filename">int</em><em class="emphasis">( )</em>
function (used to truncate floats to integers) has been superceded by
<em class="filename">Math.floor</em><em class="emphasis">( )</em>,
<em class="filename">Math.ceil</em><em class="emphasis">( )</em>, and
<em class="filename">Math.round</em><em class="emphasis">( )</em>.</p></td>
</tr>

<tr>
<td>
<p>Random number generation</p></td>
<td>
<p>Flash 4's <em class="filename">random</em><em class="emphasis">( )</em>
function (used to generate a random number) has been superceded by
<em class="filename">Math.random</em><em class="emphasis">( )</em>.</p></td>
</tr>

<tr>
<td>
<p><em class="filename">toggleHighQuality</em> deprecated</p></td>
<td>
<p>Flash 4's <em class="filename">toggleHighQuality</em> function (used
to set the rendering quality of the player) has been superceded by
the global <tt class="literal">_quality</tt> property.</p></td>
</tr>

<tr>
<td>
<p><em class="filename">_highquality</em> deprecated</p></td>
<td>
<p>Flash 4's <tt class="literal">_highquality</tt> property has been
superceded by the global <tt class="literal">_quality</tt> property.</p></td>
</tr>

<tr>
<td>
<p>Math object support in Flash 4</p></td>
<td>
<p>The functions and properties of the <em class="filename">Math</em> object
(e.g., <em class="filename">Math.cos</em><em class="emphasis">( )</em>,
<em class="replaceable">Math.PI</em> ) are not natively supported by
the Flash 4 Player. The values, however, are approximated when a
movie is exported in Flash 4 format.</p></td>
</tr>

<tr>
<td>
<p><em class="filename">loadMovie</em> versus
<em class="filename">loadMovieNum</em></p></td>
<td>
<p>Flash 3's <em class="filename">loadMovie</em><em class="emphasis">(
)</em> onto a numbered level is superceded by Flash 5's
<em class="filename">loadMovieNum</em><em class="emphasis">( )</em> (which
accepts an integer level argument). Flash 4's
<em class="filename">loadMovie</em><em class="emphasis">( )</em> into a target
movie clip is still available as
<em class="filename">loadMovie</em><em class="emphasis">( )</em> in Flash 5.</p></td>
</tr>

<tr>
<td>
<p>Printing</p></td>
<td>
<p>Flash 5 supports the native <em class="filename">print( )</em> function,
which was available in Flash 4 Build 20 and later as a modified
<em class="filename">Get URL</em> Action only.</p></td>
</tr>

<tr>
<td>
<p>Objects and classes not supported</p></td>
<td>
<p>Flash 4 does not support any of Flash 5's built-in objects and
classes.</p></td>
</tr>


</table>


<div class="sect1"><a name="appc-3-fm2xml" />
<h2 class="sect1">C.1. Updates to the Flash 5 Player, Build 41</h2>


<p>The <a name="INDEX-3818" />following list summarizes the major
changes that were made in Build 41 (Netscape) and 42 (Internet
Explorer) of the Flash 5 Player (the previous public build was 30,
initially released with the Flash 5 authoring tool):</p>


<ul><li><p>I-beams in text fields take on the color of the text.</p></li><li><p>Movies in a table cell do not cause Internet Explorer 5.5 to crash.</p></li><li><p>A text field's <tt class="literal">scroll</tt> position does not
reset when field's content is modified.</p></li><li><p>Text fields with embedded fonts do not leak outside their visual
boundary when scrolled.</p></li><li><p>The <em class="replaceable">XML.</em><tt class="literal">contentType</tt>
property has been added.</p></li><li><p>The <em class="replaceable">XML.</em><tt class="literal">ignoreWhite</tt>
property has been added.</p></li><li><p>When XML source is parsed and the characters
<tt class="literal">&amp;</tt>, <tt class="literal">'</tt>, <tt class="literal">"</tt>,
<tt class="literal">&lt;</tt>, and <tt class="literal">&gt;</tt> appear in a text
node, they are converted to the following entities:
<tt class="literal">&amp;amp;</tt>, <tt class="literal">&amp;apos;</tt>,
<tt class="literal">&amp;quot;</tt>, <tt class="literal">&amp;lt;</tt>, and
<tt class="literal">&amp;gt;</tt>. This conversion is transparent in Flash
because the entities are converted back to characters when an XML
object is converted to a string; however, the entities
<em class="emphasis">will</em> show up in XML source sent to the server.</p></li><li><p><em class="emphasis">Math.random( )</em> does not return the value of 1.
The maximum return value is 0.999.</p></li><li><p>General performance is improved, especially on Windows 98.</p></li></ul>
</div>




















<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="appc_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">B. Latin 1 Character Repertoire and Keycodes</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">C.2. Controlling Movie Clips</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>