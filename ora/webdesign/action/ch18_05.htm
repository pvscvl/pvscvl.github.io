<html><head><title>HTML Support (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch18_04.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch18_06.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">18.5. HTML Support</h2>


<p>The <a name="INDEX-2210" /> <a name="INDEX-2211" />Character panel lets us set a text
field's font size, font face, and font style, but it sets the
attributes of the entire text field only. To set styles on a
character-by-character basis and to add hypertext links, use HTML
(which was added as a text field feature in Flash 5).</p>


<p>Though HTML can be used with both dynamic text fields and user-input
text fields, we normally use HTML text fields for display purposes
only. To add HTML support to a text field, select the HTML option in
the Text Options panel.</p>


<p>The set of HTML tags supported by text fields is limited to:
<tt class="literal">&lt;B&gt;</tt>, <tt class="literal">&lt;I&gt;</tt>,
<tt class="literal">&lt;U&gt;</tt>, <tt class="literal">&lt;FONT&gt;</tt>,
<tt class="literal">&lt;P&gt;</tt>, <tt class="literal">&lt;BR&gt;</tt>, and
<tt class="literal">&lt;A&gt;</tt>.</p>


<a name="ch18-22-fm2xml" /><div class="sect2">
<h3 class="sect2">18.5.1. &lt;B&gt; (Bold)</h3>


<p>The <tt class="literal">&lt;B&gt;</tt><a name="INDEX-2212" /> <a name="INDEX-2213" /> <a name="INDEX-2214" /> tag renders text in bold, provided
that a boldface exists for the font in question:</p>


<blockquote><pre class="code">&lt;B&gt;This is bold text&lt;/B&gt;</pre></blockquote>
</div>




<a name="ch18-23-fm2xml" /><div class="sect2">
<h3 class="sect2">18.5.2. &lt;I&gt; (Italics)</h3>


<p>The <tt class="literal">&lt;I&gt;</tt><a name="INDEX-2215" /> <a name="INDEX-2216" />
<a name="INDEX-2217" /> tag renders text in italics,
provided that an italic face exists for the font in question:</p>


<blockquote><pre class="code">&lt;I&gt;This is italic text&lt;/I&gt;</pre></blockquote>
</div>




<a name="ch18-24-fm2xml" /><div class="sect2">
<h3 class="sect2">18.5.3. &lt;U&gt; (Underline)</h3>


<p>The <tt class="literal">&lt;U&gt;</tt><a name="INDEX-2218" /> <a name="INDEX-2219" />
<a name="INDEX-2220" /> tag renders the tagged text
with an underline beneath it. For example:</p>


<blockquote><pre class="code">&lt;U&gt;This is underlined text&lt;/U&gt;</pre></blockquote>


<p>Because linked text is not underlined in Flash, you should use the
<tt class="literal">&lt;U&gt;</tt> tag to identify hyperlinks:</p>


<blockquote><pre class="code">&lt;A HREF="http://www.thesquarerootof-1.com"&gt;&lt;U&gt;Click here&lt;/U&gt;
&lt;/A&gt; to visit a neat site.</pre></blockquote>
</div>




<a name="ch18-25-fm2xml" /><div class="sect2">
<h3 class="sect2">18.5.4. &lt;FONT&gt; (Font Control)</h3>


<p>The <tt class="literal">&lt;FONT&gt;</tt><a name="INDEX-2221" /> <a name="INDEX-2222" /> tag supports the following three
attributes:</p>


<dl>
<dt><b>FACE </b></dt>
<dd><p>The <tt class="literal">FACE</tt><a name="INDEX-2223" /> attribute specifies the name of the font to
use. Note that a list of multiple font faces is not supported in
Flash as it is in HTML. Flash attempts to render only the first font
listed in the <tt class="literal">FACE</tt> attribute. For example, in the
code <tt class="literal">&lt;FONT FACE="Arial, Helvetica"&gt;my
text&lt;/FONT&gt;</tt>, Flash will not render "my
text" in Helvetica if Arial is missing. Instead, text will be
rendered in the default font.</p></dd>

</dl>


<dl>
<dt><b>SIZE </b></dt>
<dd><p>The <tt class="literal">SIZE</tt><a name="INDEX-2224" /> attribute specifies the size of the tagged
text as a fixed point size (such as <tt class="literal">&lt;FONT
SIZE="18"&gt;</tt>) or as a relative size. Relative point sizes
are preceded by a + or - sign and are specified relative to the text
size in the Character panel. For example, if the point size is 14 in
the Character panel, then <tt class="literal">&lt;FONT SIZE="-2"&gt;</tt>
displays the tagged text at 12 point.</p></dd>

</dl>


<dl>
<dt><b>COLOR</b></dt>
<dd><p>The <tt class="literal">COLOR</tt><a name="INDEX-2225" /> attribute specifies the color of the
tagged text, as a hexadecimal number, preceded by the pound sign (#).
For example: <tt class="literal">&lt;FONT</tt>
<tt class="literal">COLOR="#FF0000"&gt;this</tt> <tt class="literal">is</tt>
<tt class="literal">red</tt> <tt class="literal">text&lt;/FONT&gt;</tt>. Specify
the hexadecimal number as an RGB series of three two-digit numbers
from <tt class="literal">00</tt> to <tt class="literal">FF</tt>. Note that
Flash's implementation of the <tt class="literal">COLOR</tt>
attribute is more strict than HTML's -- the pound sign (#)
is required, and color names such as <tt class="literal">"green"</tt> and
<tt class="literal">"blue"</tt> cannot be used as <tt class="literal">COLOR</tt>
values.</p></dd>

</dl>


<p>Here are some <tt class="literal">&lt;FONT&gt;</tt> examples:</p>


<blockquote><pre class="code">&lt;FONT FACE="Arial"&gt;this is Arial&lt;/FONT&gt;
&lt;FONT FACE="Arial" SIZE="12"&gt;this is 12pt Arial&lt;/FONT&gt;
&lt;FONT FACE="Lucida Console" SIZE="+4" COLOR="#FF0000"&gt;this is red, 
+4pt Lucida Console&lt;/FONT&gt;</pre></blockquote>


<p>See <a href="ch18_05.htm">Section 18.5.11, "Using HTML as Output"</a> later in this chapter for
more important details on fonts in Flash.</p>
</div>




<a name="ch18-26-fm2xml" /><div class="sect2">
<h3 class="sect2">18.5.5. &lt;P&gt; (Paragraph Break)</h3>


<p>The <tt class="literal">&lt;P&gt;</tt><a name="INDEX-2226" /> <a name="INDEX-2227" />
<a name="INDEX-2228" /> tag demarcates paragraphs, but
in Flash it behaves quite differently than its HTML counterpart.
First of all, unterminated <tt class="literal">&lt;P&gt;</tt> tags do not
cause line breaks in Flash as they do in regular HTML. Note the
difference between Flash and web browser output:</p>


<blockquote><pre class="code">I hate filling out forms. &lt;P&gt;So sometimes I don't.
// Flash output:
I hate filling out forms. So sometimes I don't.
// Web browser output:
I hate filling out forms.
So sometimes I don't.</pre></blockquote>


<p>Closing <tt class="literal">&lt;/P&gt;</tt> tags are required by Flash in
order for line breaks to be added. For example:</p>


<blockquote><pre class="code">&lt;P&gt; I hate filling out forms.&lt;/P&gt; So sometimes I don't.</pre></blockquote>


<p>Furthermore, in Flash, <tt class="literal">&lt;P&gt;</tt> causes a single
line break, exactly like <tt class="literal">&lt;BR&gt;</tt>, whereas in
web browsers, <tt class="literal">&lt;P&gt;</tt> traditionally causes a
double line break. Consider the following:</p>


<blockquote><pre class="code">&lt;P&gt;This is line one.&lt;/P&gt;&lt;P&gt;This is line two.&lt;/P&gt;</pre></blockquote>


<p>In Flash, that code would be rendered with no gap between the lines,
as in:</p>


<blockquote><pre class="code">This is line one.
This is line two.</pre></blockquote>


<p>In a web browser, the code would be rendered with a gap between the
lines, as in:</p>


<blockquote><pre class="code">This is line one.

This is line two.</pre></blockquote>


<p>Because Flash's <tt class="literal">&lt;P&gt;</tt> tag behavior
differs from web browsers, we often use the
<tt class="literal">&lt;BR&gt;</tt> tag instead. However, the
<tt class="literal">ALIGN</tt> attribute of the
<tt class="literal">&lt;P&gt;</tt> tag is still useful to center,
right-justify, or left-justify text, as follows:</p>


<blockquote><pre class="code">&lt;P ALIGN="CENTER"&gt;Centered text&lt;/P&gt;
&lt;P ALIGN="RIGHT"&gt;Right-justified text&lt;/P&gt;
&lt;P ALIGN="LEFT"&gt;Left-justified text&lt;/P&gt;</pre></blockquote>
</div>




<a name="ch18-27-fm2xml" /><div class="sect2">
<h3 class="sect2">18.5.6. &lt;BR&gt; (Line Break)</h3>


<p>The <tt class="literal">&lt;BR&gt;</tt><a name="INDEX-2229" /> <a name="INDEX-2230" /> <a name="INDEX-2231" /> tag causes a line break in a body of
text and is functionally equivalent to the <tt class="literal">\n</tt>
escape sequence or the <tt class="literal">newline</tt> keyword. Consider
the following:</p>


<blockquote><pre class="code">This is line one. &lt;BR&gt;This is line two.
This is line one. \nThis is line two.</pre></blockquote>


<p>Both would be rendered in Flash as:</p>


<blockquote><pre class="code">This is line one.
This is line two.</pre></blockquote>
</div>




<a name="ch18-70287" /><div class="sect2">
<h3 class="sect2">18.5.7. &lt; A&gt; (Anchor or Hypertext Link)</h3>


<p>The <tt class="literal">&lt;A&gt;</tt><a name="INDEX-2232" /> <a name="INDEX-2233" />
<a name="INDEX-2234" /> <a name="INDEX-2235" /> <a name="INDEX-2236" /> tag creates a hypertext
link. When the user clicks text tagged with
<tt class="literal">&lt;A&gt;</tt>, the document specified in the
<tt class="literal">HREF</tt> attribute of the tag loads into the browser.
If the Player is running in standalone mode, the default web browser
on the system is launched and the document is loaded into that
browser.</p>


<p>The generic syntax of the <tt class="literal">&lt;A&gt;</tt> tag is:</p>


<blockquote><pre class="code">&lt;A HREF="<em class="replaceable">documentToLoad.html</em>"&gt;<em class="replaceable">linked text</em>&lt;/A&gt;</pre></blockquote>


<p>For example, to link to a good video game, we could use:</p>


<blockquote><pre class="code">&lt;A HREF="http://www.quake3arena.com/"&gt;nice game&lt;/A&gt;</pre></blockquote>


<p>As with HTML, the URL can be absolute or relative to the current
page. Normally, links followed via an anchor tag cause the current
movie to be replaced with the document specified in the
<tt class="literal">HREF</tt> of the anchor tag. However, an anchor tag may
also cause a secondary browser window to launch. Using the
<tt class="literal">TARGET</tt> attribute, we can specify the name of a
window into which to load the linked document, as follows:</p>


<blockquote><pre class="code">&lt;A HREF="<em class="replaceable">documentName</em>" TARGET="<em class="replaceable">windowName</em>"&gt;<em class="replaceable">linked text</em>&lt;/A&gt;</pre></blockquote>


<p>If a window named <em class="replaceable">windowName</em> does not
already exist, the browser launches a new window and assigns it the
name <em class="replaceable">windowName</em>. To launch each document
in its own, anonymous window, we can use the
<tt class="literal">_blank</tt> keyword, as in:</p>


<blockquote><pre class="code">&lt;A HREF="mypage.html" TARGET="_blank"&gt;linked text&lt;/A&gt;</pre></blockquote>


<p>Note that when we launch windows through the
<tt class="literal">TARGET</tt> attribute, we have no control over the size
or toolbar arrangement of the new window. To launch specifically
sized windows from a link, we must use
<a name="INDEX-2237" />
<a name="INDEX-2238" />JavaScript. Techniques for
launching customized secondary windows with JavaScript are described
at:</p>


<blockquote class="simplelist">

<p><a href="../../../../../../www.moock.org/webdesign/flash">http://www.moock.org/webdesign/flash</a></p>

</blockquote>


<p>For more information on communicating with JavaScript from
ActionScript, see the global functions <em class="filename">fscommand(
)</em> and <em class="filename">getURL( )</em> in <a href="part3.htm">Part III, "Language Reference"</a>, and <a href="ch18_05.htm">Section 18.5.13, "Executing JavaScript from HTML Links"</a>
later in this chapter.</p>


<p>The <tt class="literal">TARGET</tt> attribute can also be used to load
documents into frames, as in:</p>


<blockquote><pre class="code">&lt;A HREF="<em class="replaceable">documentName</em>" TARGET="<em class="replaceable">frameName</em>"&gt;<em class="replaceable">linked text</em>&lt;/A&gt;</pre></blockquote>


<p>Flash anchor tags do not always behave exactly like HTML anchor tags.
We cannot, for example, use the <tt class="literal">NAME</tt> attribute of
the anchor tag in Flash, so internal links within a body of text are
not possible. Furthermore, Flash links are not underlined or
highlighted in any way. Link underlines and colors must be inserted
manually with the <tt class="literal">&lt;U&gt;</tt> and
<tt class="literal">&lt;FONT&gt;</tt> tags described earlier.</p>
</div>




<a name="ch18-28-fm2xml" /><div class="sect2">
<h3 class="sect2">18.5.8. Anchor Tag Tab Order</h3>


<p>In Flash 5, <a name="INDEX-2239" />anchor
<a name="INDEX-2240" /> <a name="INDEX-2241" /> <a name="INDEX-2242" />tags
<a name="INDEX-2243" /> <a name="INDEX-2244" />are not added to the tab order of the
movie and are therefore not accessible via the keyboard. If your
content must be accessible to keyboards and alternative input
devices, you should use buttons, not anchor tags, for links.</p>
</div>




<a name="ch18-29-fm2xml" /><div class="sect2">
<h3 class="sect2">18.5.9. Quoting Attribute Values</h3>


<p>Outside Flash, <a name="INDEX-2245" /> <a name="INDEX-2246" /> <a name="INDEX-2247" />HTML attribute values may be
quoted with single quotes, double quotes, or not at all. The
following tags are all valid in most web browsers:</p>


<blockquote><pre class="code">&lt;P ALIGN=RIGHT&gt;
&lt;P ALIGN='RIGHT'&gt;
&lt;P ALIGN="RIGHT"&gt;</pre></blockquote>


<p>But in Flash, unquoted attribute values are not allowed. For example,
the syntax <tt class="literal">&lt;P</tt>
<tt class="literal">ALIGN=RIGHT&gt;</tt> is illegal in Flash. However, both
single and double quotes may be used to delimit attribute values.
When composing text field values that include HTML attributes, we
must be careful to quote our attributes correctly, using one type of
quote to demarcate the string itself and another to demarcate
attribute values. For example:</p>


<blockquote><pre class="code">// These examples are both valid
myText = "&lt;P ALIGN='RIGHT'&gt;hi there&lt;/P&gt;";
myText = '&lt;P ALIGN="RIGHT"&gt;hi there&lt;/P&gt;';
// This example would cause an error because double quotation marks are
// used to demarcate both the string and the attribute
myText = "&lt;P ALIGN="RIGHT"&gt;hi there&lt;/P&gt;";</pre></blockquote>


<p>For more information on using quotation marks to form strings, see
<a href="ch04_05.htm">Section 4.5.2, "String Literals"</a> in <a href="ch04_01.htm">Chapter 4, "Primitive Datatypes"</a>.</p>
</div>




<a name="ch18-30-fm2xml" /><div class="sect2">
<h3 class="sect2">18.5.10. Unrecognized Tags and Attributes</h3>


<p>Like <a name="INDEX-2248" />web browsers, Flash ignore
tags and attributes it does not recognize. For example, if we assign
the following value to an HTML text field in Flash:</p>


<blockquote><pre class="code">&lt;P&gt;Please fill in and print this form&lt;/P&gt;
&lt;FORM&gt;&lt;INPUT TYPE="TEXT"&gt;&lt;/FORM&gt;
&lt;P&gt;Thank you!&lt;/P&gt;</pre></blockquote>


<p>The output would be:</p>


<blockquote><pre class="code">Please fill in and print this form
Thank you!</pre></blockquote>


<p>The <tt class="literal">FORM</tt> and <tt class="literal">INPUT</tt> elements are
not supported by Flash so both are ignored. Similarly, if we use
container elements such as <tt class="literal">&lt;TD&gt;</tt>, the content
is preserved but the markup is ignored. For example:</p>


<blockquote><pre class="code">myTextField = "&lt;TABLE&gt;&lt;TR&gt;&lt;TD&gt;table cell text&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt;";</pre></blockquote>


<p>outputs the following line without table formatting:</p>


<blockquote><pre class="code">table cell text</pre></blockquote>
</div>




<a name="ch18-37713" /><div class="sect2">
<h3 class="sect2">18.5.11. Using HTML as Output</h3>


<p>HTML <a name="INDEX-2249" />text <a name="INDEX-2250" />entered manually into a text field
using the Text tool will not be rendered as HTML. To display
HTML-formatted text on screen, we must assign HTML text to a dynamic
text field via ActionScript. For example:</p>


<blockquote><pre class="code">myTextField = "&lt;P&gt;&lt;B&gt;Error!&lt;/B&gt; You &lt;I&gt;must&lt;/I&gt; supply an email address!&lt;/P&gt;";</pre></blockquote>


<p>Embedding a font for an HTML text field embeds only a single style of
a single font. For example, a text field set to bold Arial in the
Character panel will only support characters of the Arial bold
typeface. If we use HTML to assign a different style of Arial (such
as italic) or a different typeface altogether (such as Garamond), the
tagged text will be invisible unless the appropriate fonts are
embedded with the movie!</p>


<p>Suppose, for example, that we create a text field called
<tt class="literal">output</tt>. In the Character panel for our
<tt class="literal">output</tt> text field we select Arial set to Italic.
In the Text Options panel, we embed the entire Arial italic font.
Then we set <tt class="literal">output</tt> to display HTML. Finally, we
assign the following value to our text field:</p>


<blockquote><pre class="code">output = '&lt;P&gt;&lt;I&gt;My&lt;/I&gt;, what &lt;B&gt;lovely&lt;/B&gt;'
         + '&lt;FONT SIZE="24"&gt;eyes&lt;/FONT&gt; you have!&lt;/P&gt;';</pre></blockquote>


<p>When the movie plays, the following text will appear in the text
field:</p>


<blockquote class="simplelist">

<p><em class="emphasis">My</em></p>

</blockquote>


<p>Everything else we assigned to <tt class="literal">output</tt> is missing!
Only the italic text in the HTML can be rendered. The rest of the
text requires other variations of the Arial font that we didn't
embed -- "what", "eyes", and "you
have" are all nonitalic, and "lovely" is bold.</p>


<p>For every <a name="INDEX-2251" /> <a name="INDEX-2252" />font face and variation we use in an
HTML text field, we must <a name="INDEX-2253" /> <a name="INDEX-2254" /> <a name="INDEX-2255" />embed the appropriate font. We have two
means of doing so:</p>


<ul><li><p>Make a dummy text field, hidden from view, with the desired font
selected in the Character panel and embedded in the Text Options
panel.</p></li><li><p>Add a new font symbol to the movie's Library and export the
font with the movie.</p></li></ul>
<p>Here are the steps for embedding Arial bold in a movie for use with a
text field:</p>


<ol><li><p>Select Window <img align="absmiddle" src="figs/U2192.gif" /> Library.</p></li><li><p>Select Options <img align="absmiddle" src="figs/U2192.gif" /> New Font. The Font Symbol Properties dialog box
appears.</p></li><li><p>Under Font, select Arial.</p></li><li><p>Under Style, select Bold.</p></li><li><p>Under Name, type <tt class="userinput"><b>ArialBold</b></tt> (this is a cosmetic
name, used only in the Library).</p></li><li><p>In the Library, select the <tt class="literal">ArialBold</tt> font symbol.</p></li><li><p>Select Options <img align="absmiddle" src="figs/U2192.gif" /> Linkage.</p></li><li><p>In the Symbol Linkage Properties dialog box, select Export This
Symbol.</p></li><li><p>In the Identifier box, type <tt class="userinput"><b>ArialBold</b></tt>. For our
purposes, the name we type here doesn't matter. Exported symbol
identifiers are used only for shared libraries.</p></li></ol>
<p>Note that every variation of a font style must be embedded
individually. If we use Arial bold, Arial italic, and Arial bold
italic in a text field, then we must embed all three font variations.
Underline is not considered a font variation, nor is font size or
color.</p>


<p>If, however, we do not enable <em class="emphasis">any</em> of the Embed
Fonts options in the Text Options panel, then Flash relies entirely
on the user's system for fonts, in which case normal, bold, and
italic text will be rendered only if users have the appropriate font
variant installed on their systems.</p>


<p>To ensure that text will display consistently across all platforms
and user systems, you should embed all the fonts required for your
text field.</p>
</div>




<a name="ch18-31-fm2xml" /><div class="sect2">
<h3 class="sect2">18.5.12. Using HTML as Input</h3>


<p>Whereas <a name="INDEX-2256" />HTML is
normally used with text fields for display purposes, it may also be
entered into a movie via an HTML-enabled or a regular (non-HTML)
user-input text field.</p>


<p>When regular text is entered into an HTML-enabled user-input text
field, HTML markup tags are added automatically. For example, the
text "Hi there" would be converted to the HTML value:</p>


<blockquote><pre class="code">'&lt;P ALIGN="LEFT"&gt;&lt;FONT FACE="Arial" SIZE="10" COLOR="#000000"&gt;Hi there&lt;/FONT&gt;&lt;/P&gt;'</pre></blockquote>


<p>When HTML tags are typed into an HTML-enabled user-input text field,
the <tt class="literal">&lt;</tt> and <tt class="literal">&gt;</tt> characters
are converted to <tt class="literal">&amp;gt;</tt> and
<tt class="literal">&amp;lt;</tt>. For example, the text
"<tt class="literal">&lt;B&gt;hi there&lt;/B&gt;</tt>" would be
converted to the value:</p>


<blockquote><pre class="code">'&lt;P ALIGN="LEFT"&gt;&lt;FONT FACE="Arial" SIZE="10"
 COLOR="#000000"&gt;&amp;lt;B&amp;gt;hi there&amp;lt;/B&amp;gt;&lt;/FONT&gt;&lt;/P&gt;'</pre></blockquote>


<p>HTML-enabled user-input text fields may be used to create a very
simple HTML data entry system.</p>


<p>When regular or HTML text is typed into a normal (non-HTML)
user-input text field, no modification of the entered text occurs.
Regular user-input text fields allow raw HTML code to be entered into
a movie without distortion.</p>


<p>An example showing HTML-enabled and regular user-input text field
data entry is available from the online Code Depot.</p>
</div>




<a name="ch18-65413" /><div class="sect2">
<h3 class="sect2">18.5.13. Executing JavaScript from HTML Links</h3>


<p>In most
<a name="INDEX-2257" />
<a name="INDEX-2258" />JavaScript-capable web
browsers, it is possible to execute JavaScript statements from an
anchor tag using the <tt class="literal">javascript:</tt> protocol as the
value of the <tt class="literal">HREF</tt> attribute. For example:</p>


<blockquote><pre class="code">&lt;A HREF="javascript:square(5);"&gt;find the square of 5&lt;/A&gt;</pre></blockquote>


<p>In <a name="INDEX-2259" /> <a name="INDEX-2260" />ActionScript,
<a name="INDEX-2261" /> <a name="INDEX-2262" /> <a name="INDEX-2263" />we can also execute JavaScript statements
from an <tt class="literal">&lt;A&gt;</tt> tag, like this:</p>


<blockquote><pre class="code">myTextField = "&lt;A HREF='javascript:alert(5);'&gt;display the number 5&lt;/A&gt;";</pre></blockquote>


<p>However, to include string values in JavaScript statements, we must
use the HTML entity <tt class="literal">&amp;quot;</tt> for quotation
marks, as in:</p>


<blockquote><pre class="code">myTextField = "&lt;A HREF='javascript:alert(&amp;quot;hello world&amp;quot;);'&gt;"
               + "display hello world&lt;/A&gt;";</pre></blockquote>
</div>




<a name="ch18-86541" /><div class="sect2">
<h3 class="sect2">18.5.14. Calling ActionScript Functions from HTML Links</h3>


<p>Though <a name="INDEX-2264" /> <a name="INDEX-2265" />arbitrary
<a name="INDEX-2266" /> <a name="INDEX-2267" /> <a name="INDEX-2268" />statements of ActionScript code cannot be
executed from a Flash <tt class="literal">&lt;A&gt;</tt> tag, ActionScript
<em class="emphasis">functions</em> can. To invoke an ActionScript
function from an anchor tag, we use the following syntax:</p>


<blockquote><pre class="code">&lt;A HREF="asfunction:<em class="replaceable">myFunctionName</em>"&gt;invoke the function&lt;/A&gt;</pre></blockquote>


<p>The function invocation operator ( ) is not allowed and should not be
used when invoking an ActionScript function from an anchor tag. In
addition to calling an ActionScript function from an anchor tag, we
may also pass one parameter to that function using the syntax:</p>


<blockquote><pre class="code">&lt;A HREF="asfunction:<em class="replaceable">myFunctionName,myParameter</em>"&gt;invoke the function&lt;/A&gt;</pre></blockquote>


<p>where <em class="replaceable">myParameter</em> is the value of the
parameter to pass. Inside the invoked function,
<em class="replaceable">myParameter</em> is always a string. To pass
more than one piece of information to a function from an anchor, we
use a delimiter in the <em class="replaceable">myParameter</em> value
and dissect the string ourselves in the function. For example,
here's a function invocation that passes two values, separated
by a | character, to the <em class="filename">roleCall( )</em> function:</p>


<blockquote><pre class="code">&lt;A HREF="asfunction:roleCall,megan|murray"&gt;invoke the function&lt;/A&gt;</pre></blockquote>


<p>And here's the <em class="filename">roleCall( )</em> function.
Notice how it separates the values with the <em class="filename">split(
)</em> method:</p>


<blockquote><pre class="code">function roleCall (name) {
  var bothNames = name.split("|");
  trace("first name: " + bothNames[0]);
  trace("last name: " + bothNames[1]);
<a name="INDEX-2269" />
<a name="INDEX-2270" />}</pre></blockquote>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch18_04.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch18_06.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">18.4. Text Field Properties</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">18.6. Working with Text Field Selections</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>