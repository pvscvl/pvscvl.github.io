<html><head><title>Retaining Meaning with Datatypes (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch03_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch03_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">3.2. Retaining Meaning with Datatypes</h2>


<p>How do we store information as raw data in a computer without losing
meaning? By categorizing our data and defining its datatype, we give
it context that defines its meaning.</p>


<p>For example, suppose we have three numbers: 5155534, 5159592, and
4593030. By categorizing our data -- as, say, a phone number, fax
number, and parcel tracking number -- the context (and, hence, the
meaning) of our data is preserved. When categorized, each of the
otherwise-nondescript seven-digit numbers becomes meaningful.</p>


<p>Programming languages use <em class="emphasis">datatypes</em> to provide
rudimentary categories for our data. For example, nearly all
programming languages define datatypes to store and manipulate text
(a.k.a. <em class="emphasis">strings</em>) and numbers. To distinguish
between multiple numbers, we can use well-conceived variable names,
such as <tt class="literal">phoneNumber</tt> and
<tt class="literal">faxNumber</tt>. In more complex situations, we can
create our own custom data categories with
<em class="emphasis">objects</em> and <em class="emphasis">object classes</em>
as covered later. Before we think about making our own data
categories, let's see which categories come built into
ActionScript.</p>


<a name="ch03-4-fm2xml" /><div class="sect2">
<h3 class="sect2">3.2.1. The ActionScript Datatypes</h3>


<p>When <a name="INDEX-265" />programming, we may want to store
a product name, a background color, or the number of stars to be
placed in a night sky. We use the following ActionScript datatypes to
store our data:</p>


<ul><li><p>For text sequences like "<tt class="literal">hi</tt>
<tt class="literal">there,</tt>" ActionScript provides the
<em class="emphasis">string</em><a name="INDEX-266" /> datatype. A
<em class="emphasis">string</em> is a series of characters (alphanumerics
and punctuation).</p></li><li><p>For numbers, such as 351 and 7.5, ActionScript provides the
<em class="emphasis">number</em><a name="INDEX-267" /> datatype. Numbers are used for
counting and for mathematical equations.</p></li><li><p>For logical decisions, ActionScript provides the
<em class="emphasis">Boolean</em><a name="INDEX-268" /> datatype. With Boolean data, we can
represent or record the status of some condition or the result of
some comparison. Boolean data has only two legal values:
<tt class="literal">true</tt> and <tt class="literal">false</tt>.</p></li><li><p>For representing an <em class="emphasis">absence</em> of data,
ActionScript provides two special data values:
<tt class="literal">null</tt><a name="INDEX-269" /> and
<tt class="literal">undefined</tt><a name="INDEX-270" />
<a name="INDEX-271" />. You can think of them as the only
permissible values of the <em class="emphasis">null</em> and
<em class="emphasis">undefined</em> datatypes.</p></li><li><p>For lists of individual pieces of data, ActionScript provides the
<em class="emphasis">array</em><a name="INDEX-272" /> datatype.</p></li><li><p>For manipulating movie clip instances, ActionScript provides the
<em class="emphasis">movieclip </em><a name="INDEX-273" />datatype.</p></li><li><p>And lastly, for arbitrary built-in or user-defined classes of data,
ActionScript provides the highly powerful
<em class="emphasis">object</em><a name="INDEX-274" /> datatype.</p></li></ul>
<p>Every piece of data we store in ActionScript will fall into one of
those categories. Before studying each datatype in <a href="ch04_01.htm">Chapter 4, "Primitive Datatypes"</a>, we'll consider the general issues that
affect our use of all data.</p>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch03_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch03_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">3. Data and Datatypes</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">3.3. Creating and Categorizing Data</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>