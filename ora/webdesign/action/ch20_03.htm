<html><head><title>Built-in Classes and Objects (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch20_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch20_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">20.3. Built-in Classes and Objects</h2>


<p>This <a name="INDEX-2335" />
<a name="INDEX-2336" /><em class="emphasis">Language
Reference</em> assumes that you understand the terms
<em class="filename">class</em>, <em class="filename">object</em>, and
<em class="filename">instance</em> as discussed exhaustively in <a href="ch12_01.htm">Chapter 12, "Objects and Classes"</a>. The built-in classes of ActionScript are used
to create objects that can control a movie and manipulate data. The
built-in ActionScript classes are <em class="filename">Array</em>,
<em class="filename">Boolean</em>, <em class="filename">Color</em>,
<em class="filename">Date</em>, <em class="filename">MovieClip</em>,
<em class="filename">Number</em>, <em class="filename">Object</em>,
<em class="filename">Sound</em>, <em class="filename">String</em>,
<em class="filename">XML</em>, <em class="filename">XMLNode</em>, and
<em class="filename">XMLSocket</em>. To create an instance of a particular
class, we use the class's <em class="filename">constructor</em>
function with the <em class="filename">new</em> operator. For example, to
make a new object of the <em class="filename">Color</em> class, we use the
<em class="filename">Color</em> constructor as follows:</p>


<blockquote><pre class="code">myColor = new Color(_root);</pre></blockquote>


<p>For each class in the <em class="emphasis">Language Reference</em>, the
<em class="emphasis">Constructor</em> entry shows how to create new
objects of that particular class (i.e., it demonstrates each
class's constructor function syntax). The properties, methods,
and event handlers available for objects in the class are also
summarized along with a description of the class's purpose and
typical use. Some classes also define methods or properties that are
accessed through the class constructor itself, not individual
instances. These methods and properties are listed as <em class="emphasis">Class
Methods</em> and <em class="emphasis">Class Properties</em>. Full
details for each class's properties, methods, and event
handlers are given in an alphabetical list after each class's
general introduction.</p>


<p>ActionScript's special <a name="INDEX-2337" />
<a name="INDEX-2338" />built-in
objects -- <em class="emphasis">Arguments</em>,
<em class="emphasis">Key</em>, <em class="emphasis">Math</em>,
<em class="emphasis">Mouse</em> and
<em class="emphasis">Selection -- </em>are interspersed alphabetically
with the class descriptions in this book but are distinguished by the
word <em class="emphasis">Object</em> (e.g., <em class="emphasis">Math
Object</em>). Unlike true classes, which use a constructor
function to instantiate multiple objects, these standalone objects
are never instantiated (i.e., they are not constructed with the
<em class="emphasis">new</em> operator). Rather, they are predefined
objects that exist solely to collect related functionality into a
single package. The <em class="emphasis">Math</em> object, for example,
provides convenient access to common mathematical functions and
constants.</p>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch20_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch20_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">20.2. Global Properties</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">20.4. Entry Headings</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>