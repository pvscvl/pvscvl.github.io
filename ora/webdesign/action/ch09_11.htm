<html><head><title>Functions as Objects (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_10.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch09_12.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">9.11. Functions as Objects</h2>


<p>In <a name="INDEX-1094" />
<a name="INDEX-1095" />
<a name="INDEX-1096" />ActionScript, functions are technically a
special type of built-in object. Let's see what that means and
how it affects what you can do with functions.</p>


<a name="ch09-22-fm2xml" /><div class="sect2">
<h3 class="sect2">9.11.1. Passing Functions to Functions</h3>


<p>Perhaps surprisingly, we can use any function as an
<a name="INDEX-1097" />
<a name="INDEX-1098" />argument to another
function like this:</p>


<blockquote><pre class="code">function1(function2);</pre></blockquote>


<p>Note that if there are no parentheses following
<em class="filename">function2</em>, the interpreter doesn't execute
<em class="filename">function2( )</em> but instead just passes its
"object reference" as an argument to <em class="filename">function1(
)</em>. That is, <em class="filename">function1( )</em> receives
<em class="filename">function2</em> itself, not the return value of
<em class="filename">function2( )</em>. Because objects are passed by
reference, we can pass a function identifier to another function and
it will arrive unscathed. The passed function can be executed like
this:</p>


<blockquote><pre class="code">function doCommand(command) {
  command( );      // Executes the passed function
}

// Some examples:
doCommand(stop);  // Pass the internal <em class="replaceable">stop( )</em> function (stops the current movie)
doCommand(play);  // Pass the internal <em class="replaceable">play( )</em> function (plays the current movie)</pre></blockquote>


<p>Because functions are a type of object, we may treat them like any
other data. In the following example, we assign the internal
<em class="filename">gotoAndPlay</em> function to the variable
<tt class="literal">gp</tt>, which gives us a shorter way to refer to the
function:</p>


<blockquote><pre class="code">gp = gotoAndPlay;  // Create a shortcut reference to <em class="replaceable">gotoAndPlay( )</em>
gp(25);            // Invoke <em class="replaceable">gotoAndPlay( )</em> using our reference</pre></blockquote>


<p>In <a name="INDEX-1099" />
<a name="INDEX-1100" />addition to passing and storing
functions as objects, we can exploit the "objectness" of
functions by attaching properties to them, like this:</p>


<blockquote><pre class="code">// Create a function
function myFunction ( ) {
  trace(myFunction.x);
}

// Attach a property to it
myFunction.x = 15;

// Check the property value by invoking the function
myFunction( );  // Displays: 15</pre></blockquote>


<a name="ch09-24-fm2xml" /><blockquote><h4>TIP</h4>
<p>By attaching properties to functions, we can maintain the state of a
piece of information between function executions without cluttering
up a timeline with variables.</p>

</blockquote>

<p>Function properties offer the benefits of local variables without
expiring between function invocations. This is useful when a function
needs to be invoked with a unique identifier. Here, for example, is a
generic function that duplicates a movie clip and gives the
duplicated clip a unique name and level:</p>


<blockquote><pre class="code">makeClip.count = 0;    // Define a property of <em class="replaceable">makeClip( )</em> (remember that 
                       // <em class="replaceable">makeClip( )</em> already exists because functions are
                       // defined before code runs)

// Duplicate a passed clip and assign the new clip an automatic name
function makeClip (theClip) {
  // Add one to our clip counter
  makeClip.count++

  // Now duplicate the clip, assigning it a unique name and depth
  theClip.duplicateMovieClip(theClip._name + makeClip.count, makeClip.count);
}

makeClip(square);   // Make a duplicate of <em class="replaceable">square</em> using <em class="replaceable">makeClip( )</em>

square1._x += 100;  // Now move the duplicated square to the right</pre></blockquote>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_10.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch09_12.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">9.10. Internal Functions</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">9.12. Centralizing Code</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
