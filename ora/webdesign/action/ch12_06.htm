<html><head><title>Built-in ActionScript Classes and Objects  (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch12_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch12_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">12.6. Built-in ActionScript Classes and Objects </h2>


<p>We've really come a long way since <a href="ch01_01.htm">Chapter 1, "A Gentle Introduction for Non-Programmers"</a>. Our first exposure to the components of
ActionScript was a simple perusal of the items under the + button in
the Actions panel. Since then, we've learned about data and
expressions, operators, statements, and functions, and now
we've explored the concept of classes and objects. It's
time to put the final brush strokes on the picture we've been
painting of the ActionScript language.</p>


<p>ActionScript comes with a variety of syntactic tools:
<em class="emphasis">expressions</em> contain data;
<em class="emphasis">operators</em> manipulate data;
<em class="emphasis">statements</em> give instructions; and
<em class="emphasis">functions</em> group instructions into portable
commands. These are tools, but they are <em class="filename">just</em>
tools. They're the grammar we use to compose instructions in
our scripts. What we're still missing is <em class="emphasis">subject
matter</em>. By now we know perfectly well how to speak
ActionScript, but we have nothing to talk about. The built-in classes
and objects of ActionScript fill that void.</p>


<a name="ch12-31-fm2xml" /><div class="sect2">
<h3 class="sect2">12.6.1. Built-in Classes</h3>


<p>Just <a name="INDEX-1576" />
<a name="INDEX-1577" />as
we define our own classes to describe and manipulate objects created
according to our specifications, ActionScript defines its own classes
of data. A variety of prefabricated classes, including the
<em class="filename">Object</em> class, are built right into the
ActionScript language. The built-in classes can control the physical
environment of a Flash movie.</p>


<p>For example, one of the built-in classes, the
<em class="filename">Color</em> class, defines methods that can detect or
set the color of a movie clip. To use these methods, we first create
a <em class="filename">Color</em> object using the <em class="filename">Color( )
</em>class constructor, as follows:</p>


<blockquote><pre class="code"><em class="replaceable">clipColor</em> = new Color(<em class="replaceable">target</em>);</pre></blockquote>


<p>where <em class="replaceable">clipColor</em> is the variable, array
element, or object property that stores our
<em class="filename">Color</em> object. The <em class="filename">Color( )</em>
constructor takes one argument, <em class="replaceable">target</em>,
which specifies the name of the movie clip whose color we want to set
or examine.</p>


<p>So, suppose we have a movie clip named <tt class="literal">square</tt>, and
we want to change its color. We create a new
<em class="filename">Color</em> object like this:</p>


<blockquote><pre class="code">squareColor = new Color(square);</pre></blockquote>


<p>Then, to set our <tt class="literal">square</tt> clip's color, we
invoke one of the <em class="filename">Color</em> methods on our
<tt class="literal">squareColor</tt> object:</p>


<blockquote><pre class="code">squareColor.setRGB(0x999999);</pre></blockquote>


<p>The <em class="filename">setRGB( )</em> method sets the RGB color value of
our <em class="filename">Color</em> object's
<em class="replaceable">target</em>, which in this case is
<tt class="literal">square</tt>, so the previous method invocation would
set the color of <tt class="literal">square</tt> to gray.</p>


<p>Because the <em class="filename">Color</em> object is a built-in class, it
can directly set the color of a movie clip. Still other classes give
us control over sounds, the date, and XML documents. We'll
learn all about the built-in classes in <a href="part3.htm">Part III, "Language Reference"</a>.</p>
</div>




<a name="ch12-32-fm2xml" /><div class="sect2">
<h3 class="sect2">12.6.2. Built-in Objects</h3>


<p>Like <a name="INDEX-1578" />
<a name="INDEX-1579" />built-in
classes, built-in objects let us control the movie environment. The
<em class="filename">Key</em> object, for example, defines a series of
properties and methods that tell us about the state of a
computer's keyboard. To use these properties and methods, we
don't instantiate a <em class="filename">Key</em> object, we simply
use the <em class="filename">Key</em> object directly. Built-in objects
are made automatically by the interpreter when the Flash Player
starts and are always available throughout a movie.</p>


<p>Here, for example, we display the keycode of the currently depressed
key by invoking the <em class="filename">Key</em> object's
<em class="filename">getCode( )</em> method:</p>


<blockquote><pre class="code">trace(Key.getCode( ));</pre></blockquote>


<p>And here, we check whether the spacebar is depressed using the
<em class="filename">isDown( )</em> method and supplying the
spacebar's keycode as an argument:</p>


<blockquote><pre class="code">trace(Key.isDown(Key.SPACE));</pre></blockquote>


<p>In <a href="part3.htm">Part III, "Language Reference"</a> we'll learn about the other
built-in objects -- <em class="filename">Math</em>,
<em class="filename">Mouse</em>, and
<em class="filename">Selection -- </em>which provide access to
mathematical information, the mouse pointer, and text field
selections.</p>
</div>




<a name="ch12-33-fm2xml" /><div class="sect2">
<h3 class="sect2">12.6.3. Learning the Ropes</h3>


<p>Learning to write valid ActionScript code is only half the job of
learning to program in Flash. The other half comes with learning the
available built-in classes and objects and their many wonderful
properties and methods. We'll undertake that task in <a href="part3.htm">Part III, "Language Reference"</a>. However, it's not necessary to study
all the classes and objects in one sitting. Learn about movie clips
to start and then branch out as you need to. Over time, you'll
come to know what's essential to get your particular job done.
What's important is that you understand the general structure
of object-oriented programming. Once you know the rules of the
system, learning a new object or a new class is a simple matter of
looking up its method and property names.</p>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch12_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch12_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">12.5. Classes and Object-Oriented Programming</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">12.7. Onward!</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>