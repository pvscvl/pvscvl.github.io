<html><head><title>Order of Execution (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_11.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch10_13.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">10.12. Order of Execution</h2>


<p>Some <a name="INDEX-1300" />movies <a name="INDEX-1301" />have code dispersed across multiple
timelines and multiple clip event handlers. It's not uncommon,
therefore, for a single frame to require the execution of many
separate blocks of code -- some in event handlers, some on frames
in clip timelines, and some on the main timelines of documents in the
Player. In these situations, the order in which the various bits of
code execute can become quite complex and can greatly affect a
program's behavior. We can prevent surprises and guarantee that
our code behaves as desired by becoming familiar with the order in
which event handlers execute relative to the various timelines in a
movie.</p>


<p>Asynchronous event handlers execute independently of the code on a
movie's timelines. Button event handlers, for example, are
executed immediately when the event that they handle occurs, as are
handlers for the <em class="filename">mouseDown</em>,
<em class="filename">mouseUp</em>, <em class="filename">mouseMove</em>,
<em class="filename">keyDown</em>, and <em class="filename">keyUp</em> events.</p>


<p>Handlers for the movie-playback events, however, execute in order,
according to the progression of the movie, as shown in <a href="ch10_12.htm">Table 10-3</a>.</p>


<a name="ch10-30166" /><h4 class="objtitle">Table 10-3. Movie Clip Event Handler Order of Execution </h4><table border="1">



<tr>
<th>
<p>Event Handler</p></th>
<th>
<p>Execution Timing</p></th>
</tr>




<tr>
<td>
<p><em class="filename">load</em><a name="INDEX-1302" /></p></td>
<td>
<p>Executes in the first frame in which the clip is present on stage
after parent-timeline code executes, but before clip-internal code
executes, and before the frame is rendered.</p></td>
</tr>

<tr>
<td>
<p><em class="filename">unload</em><a name="INDEX-1303" /></p></td>
<td>
<p>Executes in the first frame in which the clip is not present on
stage, before parent-timeline code executes.</p></td>
</tr>

<tr>
<td>
<p><em class="filename">enterFrame</em><a name="INDEX-1304" /></p></td>
<td>
<p>Executes in the second and all subsequent frames in which the clip is
present on stage. It is executed before parent-timeline code executes
and before clip-internal code executes.</p></td>
</tr>

<tr>
<td>
<p><em class="filename">data</em><a name="INDEX-1305" /></p></td>
<td>
<p>Executes in any frame in which data is received by the clip. If
triggered, it executes before clip-internal code executes and before
<em class="filename">enterFrame</em> code executes.</p></td>
</tr>


</table>


<p>It's easier to see the effect of the rules in <a href="ch10_12.htm">Table 10-3</a> with a practical example. Suppose we have a
single-layer movie with four keyframes in the main timeline. We
attach some code to each keyframe. Then, we create a second layer
where we place a movie clip at frame 1, spanning to frame 3, but not
present on frame 4. We add <em class="filename">load</em>,
<em class="filename">enterFrame</em>, and <em class="filename">unload</em>
handlers to our clip. Finally, inside the clip, we create three
keyframes, each of which also contains a block of code. <a href="ch10_12.htm">Figure 10-2</a> shows what the movie looks like.</p>


<a name="ch10-94834" /><div class="figure"><img alt="Figure 10-2" src="figs/act.1002.gif" /></div><h4 class="objtitle">Figure 10-2. A code execution order test movie</h4>

<p>When we play our movie, the execution order is as follows:</p>


<blockquote><pre class="code">========FRAME 1=======
1) Main timeline code executed
2) <em class="replaceable">load</em> handler executed
3) Clip-internal code, frame 1, executed

========FRAME 2=======
1) <em class="replaceable">enterFrame</em> handler executed
2) Clip-internal code, frame 2, executed
3) Main timeline code executed

========FRAME 3=======
1) <em class="replaceable">enterFrame</em> handler executed
2) Clip-internal code, frame 3, executed
3) Main timeline code executed

========FRAME 4=======
1) <em class="replaceable">unload</em> handler executed
2) Main timeline code executed</pre></blockquote>


<p>The execution order of the code in our sample movie demonstrates some
important rules of thumb to remember when coding with event handlers:</p>


<ul><li><p>Code in a <em class="filename">load</em> handler is executed before
internal clip code, so a <em class="filename">load</em> handler may be
used to initialize variables that are used immediately on frame 1 of
its associated clip.</p></li><li><p>Before a movie clip is instantiated on a frame, the code of that
frame is executed. Therefore, user-defined variables and functions in
a movie clip are not available to any code on its parent timeline
until the frame <em class="emphasis">after</em> the clip first appears on
stage, even if those variables and functions are declared in the
clip's <em class="filename">load</em> handler.</p></li><li><p>The <em class="filename">enterFrame</em> event never occurs on the same
frame as the <em class="filename">load</em> or the
<em class="filename">unload</em> event. The <em class="filename">load</em> and
<em class="filename">unload</em> events supplant
<em class="filename">enterFrame</em> for the frames where a clip appears
on the Stage and leaves the Stage.</p></li><li><p>On each frame, code in a clip's <em class="filename">enterFrame</em>
handler is executed before code on the clip's parent timeline.
Using an <em class="filename">enterFrame</em> handler, we may, therefore,
change the properties of a clip's parent timeline and then
immediately use the new values in that timeline's code, all on
the <a name="INDEX-1306" />same <a name="INDEX-1307" />frame.</p></li></ul>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_11.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch10_13.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">10.11. The User-Input Movie Clip Events</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">10.13. Copying Clip Event Handlers</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>