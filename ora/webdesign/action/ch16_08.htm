<html><head><title>Packaging Components as Smart Clips (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch16_07.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch16_09.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />


<h2 class="sect1">16.8. Packaging Components as Smart Clips</h2>


<p>A <a name="INDEX-2091" /> <a name="INDEX-2092" />
<a name="INDEX-2093" /><em class="emphasis">Smart Clip</em> is a movie
clip that allows some of its variables to be assigned through a
special graphical user interface in the Flash authoring tool. Smart
Clips allow non-programmers to customize programmatically-controlled
movie clips. Smart Clips separate the behavior-determining variables
from the code of a clip, which lets people treat them as "black
boxes" -- their operation can remain mysterious as long as
their inputs, outputs, and behavior are known.</p>


<p>Normally,
<a name="INDEX-2094" />
<a name="INDEX-2095" />variable
initialization occurs in the source code of a movie clip. For
example, here we set up the variables used to control a fireworks
effect:</p>


<blockquote><pre class="code">// User-defined variables
var numSparks = 10;           // Number of spark clips in the explosion
var randomDispersion = true;  // Explosion style (true for random,
                              // false for uniform)
var duration = 1300;          // Length of explosion, in milliseconds</pre></blockquote>


<p>Modifying source code of this sort can be intimidating for
non-programmers. But if we build our system as a Smart Clip,
non-programmers can configure the fireworks effect through a familiar
application-style interface. <a href="ch16_08.htm">Figure 16-2</a> shows a
Smart Clip interface equivalent to our variable-initialization code.</p>


<a name="ch16-55372" /><div class="figure"><img alt="Figure 16-2" src="figs/act.1602.gif" /></div><h4 class="objtitle">Figure 16-2. A sample Smart Clip -configuration interface</h4>

<p>In a Smart Clip interface, each variable appears with its name and
value clearly distinguished in separate rows and columns. Variable
names cannot be edited, so there's no chance of inadvertent
typos breaking the system. Each variable also has its own verbose
description explaining exactly what it does and how it should be set.
Finally, variables with a limited set of legal values (such as
<tt class="literal">randomDispersion</tt>) may be assigned via drop-down
menus.</p>


<p>For non-programmers, the interface shown in <a href="ch16_08.htm">Figure 16-2</a> is certainly more approachable than source
code. But Smart Clips can actually be made even more user friendly.
We may replace the default Smart Clip interface with our own custom
interface, such as the one shown in <a href="ch16_08.htm">Figure 16-3</a>.
Notice how the custom Smart Clip interface hides our system's
variables entirely, allowing the non-programmer to tailor each
instance of the fireworks effect with text fields and pull-down
menus. The interface even provides a live preview of the effect in
action!</p>


<a name="ch16-52292" /><div class="figure"><img alt="Figure 16-3" src="figs/act.1603.gif" /></div><h4 class="objtitle">Figure 16-3. A customized Smart Clip-configuration interface</h4>

<p>Let's see how all this works.</p>


<a name="ch16-19-fm2xml" /><div class="sect2">
<h3 class="sect2">16.8.1. Building a Smart Clip with a Standard Interface</h3>


<p>As <a name="INDEX-2096" />we've just learned, Smart Clips have
either the default system interface or a customized interface.
We'll learn how to build the standard kind first.</p>


<p>The first step in building any Smart Clip is creating a regular movie
clip that is controlled by the value of one or more variables. In the
following code, for example, the variables <tt class="literal">xPos</tt>
and <tt class="literal">yPos</tt> determine the location of a clip on
stage:</p>


<blockquote><pre class="code">_x = xPos;
_y = yPos;</pre></blockquote>


<p>When we build a movie clip as a Smart Clip for ourselves or someone
else to use, we expect certain designated variables to be set via the
Smart Clip interface when the clip is placed on stage. Those
variables are known as <a name="INDEX-2097" /><em class="emphasis">clip
parameters</em>. Once we've created a clip with behavior
dictated by one or more clip parameters, we must give the clip a
Smart Clip interface through which those parameters can be set.</p>


<a name="ch16-20-fm2xml" /><div class="sect3">
<h3 class="sect3">16.8.1.1. Adding a standard interface to a Smart Clip</h3>


<p>To add a default Smart Clip interface to a movie clip, follow these
steps:</p>


<ol><li><p>Select the clip in the Library.</p></li><li><p>Choose Options <img align="absmiddle" src="figs/U2192.gif" /> Define Clip Parameters. (The Define Clip
Parameters dialog box appears.)</p></li><li><p>In the Parameters pane, click the plus (+) button to add a clip
parameter.</p></li><li><p>Repeat step 3 for each parameter in the Smart Clip.</p></li><li><p>Configure the clip parameters, as described in the following section.</p></li></ol>
</div>



<a name="ch16-21-fm2xml" /><div class="sect3">
<h3 class="sect3">16.8.1.2. Configuring standard clip parameters</h3>


<p>After <a name="INDEX-2098" />
<a name="INDEX-2099" />we
add a clip parameter to a Smart Clip, we must assign the parameter a
name and, optionally, a default value. Like variables, clip
parameters can contain different types of data. The datatypes
supported by clip parameters are, however, not quite the same as
those supported by variables. Clip parameters may contain
<em class="filename">strings</em>, <em class="filename">numbers</em>,
<em class="filename">arrays</em>, <em class="filename">objects</em>, and
<em class="filename">lists</em>. These differ from the datatypes supported
by variables in two ways:</p>


<ul><li><p>Clip parameters support an interface-only type of value called a
<em class="emphasis">list</em>. A <em class="emphasis">list</em> is used to
limit the assignment of a parameter's value to one of a
predetermined set of options. For example, a parameter named
<tt class="literal">difficulty</tt> may have its value set to the list:
<tt class="literal">"hard"</tt>, <tt class="literal">"normal"</tt>,
<tt class="literal">"easy"</tt>. Lists prevent users of a Smart Clip from
supplying an invalid value for a clip parameter.</p></li><li><p>The primitive types <tt class="literal">Boolean</tt>,
<tt class="literal">null</tt>, and <tt class="literal">undefined</tt> may not be
set directly as the value of a clip parameter. This is a limitation
of the Smart Clip interface, not the clip parameter itself; code
<em class="emphasis">inside</em> the clip may assign
<tt class="literal">Boolean</tt>, <tt class="literal">null</tt>, or
<tt class="literal">undefined</tt> values to a variable initialized as a
clip parameter. To simulate the Boolean values
<tt class="literal">true</tt> and <tt class="literal">false</tt> with clip
parameters, we use the numbers 1 and 0, not the strings
"true" and "false". The numbers 1 and
convert to the <tt class="literal">Boolean</tt> values
<tt class="literal">true</tt> and <tt class="literal">false</tt>, respectively,
when used in a Boolean context.</p></li></ul>
<p>To give a clip parameter a name and optional default value, follow
these steps:</p>


<ol><li><p>Double-click the parameter name, and type a legal identifier for the
parameter.</p></li>

<li><p>Double-click the parameter type, and then select one
of the following:</p>



<ol><li><p>Default for parameters with string or numeric values</p></li>

<li><p>Array for parameters with array
values</p></li>

<li><p>Object for parameters with object
values</p></li>

<li><p>List for parameters with a predetermined set of possible string or
numeric values</p></li></ol></li>


<li><p>Double-click the parameter value, and enter the default value, if one
is required. This value will appear in the Smart Clip interface as
the initial value for the parameter. The manner in which default
values are entered depends on the type of parameter:</p>


<ol><li><p>For Default parameters, double-click the parameter value and type the
string or number.</p></li>

<li><p>For Array, Object, and List parameters, double-click the parameter
value. In the Values dialog box, add, remove, and arrange items using
the plus, minus, and arrow buttons. Click OK to accept your settings.</p></li></ol></li>

<li><p>To add information about the parameter's purpose, enter an
explanation in the Description box.</p></li><li><p>To prevent the parameter's name from being changed by the Smart
Clip user, select Lock in Instance.</p></li><li><p>In the Define Clip Parameters dialog box, click OK to finalize your
parameter settings.</p></li></ol>
</div>



<a name="ch16-22-fm2xml" /><div class="sect3">
<h3 class="sect3">16.8.1.3. Removing and reordering standard clip parameters</h3>


<p>Sometimes <a name="INDEX-2100" />
<a name="INDEX-2101" />you'll
want to remove or rearrange your Smart Clip's parameters.</p>


<p>To remove a clip parameter, follow these steps:</p>


<ol><li><p>In the Library, select the Smart Clip to modify.</p></li><li><p>Select Options <img align="absmiddle" src="figs/U2192.gif" /> Define Clip Parameters.</p></li><li><p>Select the parameter to remove.</p></li><li><p>Click the minus (-) button.</p></li><li><p>Click OK.</p></li></ol>
<p>To rearrange clip parameters, follow these steps:</p>


<ol><li><p>In the Library, select the Smart Clip to modify.</p></li><li><p>Select Options <img align="absmiddle" src="figs/U2192.gif" /> Define Clip Parameters.</p></li><li><p>Select the parameter to move.</p></li><li><p>Click the arrow buttons until the parameter is in the desired
location.</p></li><li><p>Click <a name="INDEX-2102" />OK.</p></li></ol>
</div>
</div>




<a name="ch16-23-fm2xml" /><div class="sect2">
<h3 class="sect2">16.8.2. Building a Smart Clip with a Customized Interface</h3>


<p>To <a name="INDEX-2103" />build a Smart Clip with a customized
interface, we first create a regular movie clip whose behavior is
governed by a series of clip parameters as described earlier. Next,
we create an independent <em class="filename">.swf</em> file (the
so-called <em class="emphasis">interface .swf</em> ) that will be used as
the Clip Parameters panel interface. We'll typically create a
<em class="filename">.swf</em> file with a graphical interface that allows
the user to enter parameter values (via text boxes, menus, buttons,
etc.). Those values are automatically collected and passed to the
Smart Clip as parameters.</p>


<p>The Smart Clip communicates with the interface
<em class="filename">.swf</em> via the
<tt class="literal">xch</tt><a name="INDEX-2104" /> <a name="INDEX-2105" /> instance (short for
<em class="emphasis">exchange</em>), a specially named instance in the
interface <em class="filename">.swf</em>. (We'll see how to create
the <tt class="literal">xch</tt> instance in a minute.) <a href="ch16_08.htm">Figure 16-4</a> shows how parameter names and values are sent
from the interface <em class="filename">.swf</em> to the Smart Clip.</p>


<a name="ch16-49034" /><div class="figure"><img alt="Figure 16-4" src="figs/act.1604.gif" /></div><h4 class="objtitle">Figure 16-4. Custom Smart Clip communication</h4>

<p>Communication between the interface <em class="filename">.swf</em> and the
Smart Clip occurs in a cycle. When a Smart Clip instance is selected
on stage, the corresponding interface <em class="filename">.swf</em> loads
into the Clip Parameters panel. The current parameters in the Smart
Clip instance are then passed to the <em class="filename">.swf</em>
file's <tt class="literal">xch</tt> instance. The
<em class="filename">.swf</em> file is expected to retrieve those
parameters and set the interface state accordingly. Subsequent
variables set in <tt class="literal">xch</tt> by the
<em class="filename">.swf</em> file are automatically passed to the Smart
Clip as parameters. When the Smart Clip instance is unselected, the
interface <em class="filename">.swf</em> is removed from the Clip
Parameters panel. However, the parameter values are not lost, they
are retained by the Smart Clip. Each time the Smart Clip instance is
selected, it passes its parameters back to the
<em class="filename">.swf</em> file's <tt class="literal">xch</tt> clip.
This cycle allows the interface <em class="filename">.swf</em> file to
stay synchronized with the Smart Clip parameters.</p>


<p>The following sections explain how to create the custom interface
<em class="filename">.swf </em>and associate it with a Smart Clip. A
sample Smart Clip with a customized user interface is available under
"Playhead Control" from the online Code Depot.</p>


<a name="ch16-24-fm2xml" /><div class="sect3">
<h3 class="sect3">16.8.2.1. Creating a custom interface .swf file</h3>


<p>To <a name="INDEX-2106" />create a
<em class="filename">.swf</em> file for use as the custom interface of a
Smart Clip, follow these steps:</p>


<ol><li><p>Start a new Flash document.</p></li><li><p>Create a new layer named <em class="filename">xchLayer</em>.</p></li><li><p>Select Insert <img align="absmiddle" src="figs/U2192.gif" /> New Symbol to create a blank movie clip symbol.</p></li><li><p>Name the new symbol <tt class="literal">xchClip</tt>.</p></li><li><p>On the <em class="filename">xchLayer</em> layer, place an instance of the
<tt class="literal">xchClip</tt> symbol.</p></li><li><p>Name the instance <tt class="literal">xch</tt>.</p></li><li><p>Provide a series of buttons, text fields, and other interface
elements used to set variable values.</p></li><li><p>Variables set in the <tt class="literal">xch</tt> instance will
automatically be added to the Smart Clip as parameters. For example,
here is how you'd set values for two custom parameters:</p>
<blockquote><pre class="code">xch.<em class="replaceable">param1</em> = <em class="replaceable">value1</em>;  // Values may be of any datatype
xch.<em class="replaceable">param2</em> = <em class="replaceable">value2</em>;</pre></blockquote></li>
<li><p>To read the value of an existing Smart Clip parameter within a custom
interface <em class="filename">.swf</em>, refer to that parameter as a
property of <tt class="literal">xch</tt>. For example, the following
initializes the <tt class="literal">param1Input</tt> text field with the
value of <tt class="literal">param1</tt> from the Smart Clip:</p>
<blockquote><pre class="code">param1Input = xch.param1;</pre></blockquote></li>
<li><p>Export the <em class="filename">.swf</em> file.</p></li></ol>
</div>



<a name="ch16-25-fm2xml" /><div class="sect3">
<h3 class="sect3">16.8.2.2. Adding a custom interface to a Smart Clip</h3>


<p>Now <a name="INDEX-2107" /> <a name="INDEX-2108" />that we've seen how to create the
interface <em class="filename">.swf</em>, let's add it to a Smart
Clip as follows:</p>


<ol><li><p>Close the custom interface <em class="filename">.swf</em> and return to
the original <em class="filename">.fla</em> file containing the Smart
Clip.</p></li><li><p>Select the Smart Clip in the Library.</p></li><li><p>Choose Options <img align="absmiddle" src="figs/U2192.gif" /> Define Clip Parameters. The Define Clip
Parameters dialog box appears.</p></li><li><p>In the Link to Custom UI box, type the location of the
<em class="filename">.swf</em> file to use as the custom interface,
relative to the current <em class="filename">.fla</em> file. (You may also
select the <em class="filename">.swf</em> file using the folder <a name="INDEX-2109" />button.)</p></li></ol>
</div>
</div>




<a name="ch16-26-fm2xml" /><div class="sect2">
<h3 class="sect2">16.8.3. Using Smart Clips</h3>


<p>Once <a name="INDEX-2110" />clip parameters have been assigned to a
movie clip, the movie clip officially becomes a "Smart
Clip." Smart Clips are identified in the Library with a special
icon,
<img alt="Figure 16.8.3" src="figs/act.1605.gif" />.</p>

<p>To use a Smart Clip instance in a movie, follow these steps:</p>


<ol><li><p>Drag the Smart Clip from the Library onto the Stage.</p></li><li><p>Select Window <img align="absmiddle" src="figs/U2192.gif" /> Panels <img align="absmiddle" src="figs/U2192.gif" /> Clip Parameters.</p></li><li><p>If the clip has a standard interface, set each parameter value as
follows:</p>

<ol><li><p>For Default parameters, double-click the parameter value and type the
string or number.</p></li>
<li><p>For Array parameters, double-click the parameter value. In the Values
dialog box, double-click each array element value and type a string
or number. Click OK to accept your array element values.</p></li>
<li><p>For Object parameters, double-click the parameter value. In the
Values dialog box, double-click each object property value and type a
string or a number. Click OK to accept your Object properties.</p></li>
<li><p>For List parameters, double-click the parameter value, and then
select an option.</p></li></ol></li>
<li><p>If the clip has a custom interface, use the tools provided in the
custom interface to set the <a name="INDEX-2111" />clip's <a name="INDEX-2112" /> <a name="INDEX-2113" /> <a name="INDEX-2114" />parameters.</p></li></ol>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch16_07.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch16_09.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">16.7. Externalizing ActionScript Code</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">16.9. Onward!</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>