<html><head><title>Flash Forms (ActionScript: The Definitive Guide)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Colin Moock" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="1565928520L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="ActionScript: The Definitive Guide" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="ActionScript: The Definitive Guide" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch16_09.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm">ActionScript: The Definitive Guide</a></td><td align="right" valign="top" width="228"><a href="ch17_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>
<hr width="684" align="left" />



<h1 class="chapter">Chapter 17. Flash Forms</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch17_01.htm">The Flash Form Data Cycle</a><br />
<a href="ch17_02.htm">Creating a Flash Fill-in Form</a><br />
<a href="ch17_03.htm">Onward!</a><br /></p></div>


<p>Interactivity <a name="INDEX-2116" />on
<a name="INDEX-2117" />the Web reaches perhaps its loftiest status in
the guise of the fill-in form. Okay, that might sound a little
hyperbolic, but it's not meant to be. Forms may appear trivial
on the surface, but they are at the heart of online communities (chat
rooms and message boards), the persistence of data (personalization),
and of course, the saliva-in-the-jaws-of-business, e-commerce (buying
and selling online).</p>


<p>Flash 4 was the first version of Flash to include forms support.
Since then, Flash has gained many powerful means of communicating
with a server. This chapter explores the basics of using forms in
Flash, from capturing user input and displaying output within Flash,
to sending data to a server and receiving the server's
response. More advanced topics, such as XML handling, are covered in
<a href="part3.htm">Part III, "Language Reference"</a>.</p>


<div class="sect1"><a name="ch17-2-fm2xml" />
<h2 class="sect1">17.1. The Flash Form Data Cycle</h2>


<p>Before <a name="INDEX-2118" />we
delve into the particulars, let's take a macroscopic look at
the typical steps in a form submission process:</p>


<ol><li><p>Flash receives data as user input.</p></li><li><p>Flash prepares data for submission to the web server (collects and
validates variables).</p></li><li><p>Flash sends data to the web server via HTTP (or, optionally, HTTPS).</p></li><li><p>The web server receives data, passes it to a server-side
data-handling application (e.g., Perl script, PHP script, Cold
Fusion, or ASP).</p></li><li><p>The data-handling application parses and processes submitted data.</p></li><li><p>The data-handling application passes results to the web server, which
sends results to Flash.</p></li><li><p>Flash stores and optionally displays results.</p></li></ol>
<p>Therefore, a functioning Flash form requires:</p>


<ul><li><p>A frontend (what the user sees)</p></li><li><p>Some Flash scripting that submits the form's contents to a
server-side script or application</p></li><li><p>A server-side script or application</p></li><li><p>Some Flash scripting that handles data returned from the server</p></li></ul>
<p>Let's examine these components in a little more detail.</p>


<a name="ch17-3-fm2xml" /><div class="sect2">
<h3 class="sect2">17.1.1. Flash Client-Side User Input</h3>


<p>To <a name="INDEX-2119" />supply <a name="INDEX-2120" />input,
users typically type text into text fields and then click the
form's Submit button. Only text fields are supplied as prebuilt
form components; we have to build everything else, including the
Submit button, manually (as we'll see later). See <a href="ch18_02.htm">Section 18.2, "User-Input Text Fields"</a> in <a href="ch18_01.htm">Chapter 18, "On-Screen Text Fields"</a>, for
information on text fields.</p>


<p>Because Flash has a full scripting language, you can create
intelligent forms that preprocess data before it's submitted to
the server. We validate the user's entries before sending them
to the web server to ensure that our data-handling application always
receives usable data. Common validations include checking that all
required fields have been filled out and verifying that the correct
type of data has been entered. For example, an email address should
include a name, followed by an @ symbol, followed by a domain name.</p>
</div>




<a name="ch17-4-fm2xml" /><div class="sect2">
<h3 class="sect2">17.1.2. Transmitting Data for Server-Side Processing</h3>


<p>Once <a name="INDEX-2121" />our data is validated, we may safely
pass it to the web server. ActionScript provides several tools for
transferring form-based data to a web server:</p>


<ul><li><p>The <em class="filename">loadVariables( )</em> function, described later
in this chapter</p></li><li><p>The <em class="filename">XML</em> class's
<a name="INDEX-2122" />
<a name="INDEX-2123" /><em class="filename">send( )</em> and
<a name="INDEX-2124" />
<a name="INDEX-2125" /><em class="filename">sendAndLoad( )</em>
methods, described in <a href="part3.htm">Part III, "Language Reference"</a></p></li><li><p>The global function
<a name="INDEX-2126" /><em class="filename">getURL( )</em>,
described in <a href="part3.htm">Part III, "Language Reference"</a></p></li></ul>
<p>The web server passes the <a name="INDEX-2127" />Flash data to the server-side
application that will process the data, typically a middleware
database (e.g., Allaire's ColdFusion or Microsoft's ASP)
or a CGI script (e.g., a Perl or PHP script or a Java servlet).</p>


<p>In describing the web client/server data cycle, we make a point of
distinguishing between the web server and a data-handling
application. Often, this distinction is implicit -- the client
always has to make an HTTP request in order to send data to the
data-handling application, so it naturally follows that a web server
is involved. In Flash form development, however, we must remain aware
of the invisible handoff between the web server and the data-handling
application. Data moves from Flash to the server either on the end of
a URL (using GET) or in a stream of variable names and values (using
POST). When a web server error is encountered, Flash does not display
the HTTP error messages that the server sends (as a browser would).
For example, if the web server can't find a CGI script, it
sends a "404 Not Found" message, but Flash doesn't
display it. Similarly, if a CGI script's permissions
aren't set correctly, we don't see any execution-failure
error message. In order to isolate client/server problems when
working with Flash, it's useful to monitor the web
server's HTTP error log while attempting to run scripts. You
may find that the web server is trying to tell you something that
Flash can't express.</p>
</div>




<a name="ch17-5-fm2xml" /><div class="sect2">
<h3 class="sect2">17.1.3. The Data-Handling Application</h3>


<p>Upon <a name="INDEX-2128" />receiving a body of data, the
data-handling application must <em class="emphasis">parse</em> it (i.e.,
interpret it intelligently and, if necessary, split it out into
manageable pieces). After the data is parsed, it can be manipulated
in an endless number of ways by the server application. Usually data
processing involves saving content to a database or flat text file
for future retrieval.</p>


<p>Once data processing is complete, the data-handling application
produces a result to pass back to Flash. That result can be anything
from a simple confirmation message ("Thank you for submitting
your information") to a list of records from a database or the
current price of a product.</p>


<p>The application passes the result to the web server, which will
forward it on to Flash for storage or display.</p>




<a name="ch17-7-fm2xml" /><blockquote><h4>TIP</h4>
<p>Data-handling <a name="INDEX-2129" />application
developers should note that their application must set the MIME type
of the result to "application/x-www-urlform-encoded". If
that MIME type is missing, the result will likely be unusable when it
reaches Flash.</p>

</blockquote>
</div>




<a name="ch17-8-fm2xml" /><div class="sect2">
<h3 class="sect2">17.1.4. Flash Receives and Interprets Results</h3>


<p>We're <a name="INDEX-2130" />nearing the end of the Flash form
cycle, but we're not done yet. For one thing, we have to make
sure that Flash waits patiently while the server-side application
processes the data and transmits the result. Consider a movie that
looks up stock prices. The user enters a stock ticker symbol and
clicks the Get Stock Price button. Before the price can be displayed,
the stock-retrieval application must identify and return the price.
While the movie is waiting, it displays a "Loading"
message. When the price is received, the movie springs back into
action.</p>


<p>Data received by Flash in response to a <em class="filename">loadVariables(
)</em> invocation is stored in a specified target clip or
level. Once that data has been received, the Flash form cycle is
complete, and we're free to do whatever we like with our
precious, well-traveled bytes of content. Let's now put our
knowledge to practice by creating a simple fill-in <a name="INDEX-2131" />form.</p>
</div>
</div>






















<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch16_09.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch17_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">16.9. Onward!</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">17.2. Creating a Flash Fill-in Form</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area href="../index.htm" coords="0,1,78,93" shape="rect" /><area href="../wdesign/index.htm" coords="80,2,155,96" shape="rect" /><area href="../xhtml/index.htm" coords="158,0,263,97" shape="rect" /><area href="../audio/index.htm" coords="265,1,335,97" shape="rect" /><area href="../css/index.htm" coords="338,1,434,93" shape="rect" /><area href="index.htm" coords="439,0,540,102" shape="rect" /><area href="../infoarch/index.htm" coords="544,0,685,102" shape="rect" /></map>

</body></html>
