<html><head><title>XPath Operators (XSLT)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Doug Tidwell" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596000537L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XSLT" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XSL" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"></td><td align="right" valign="top" width="228"><a href="appb_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>



    <h2 class="sect1">B.4. XPath Operators</h2>
    <p>
<a name="INDEX-916" />

All operators defined by XPath are listed here. </p>
    <div class="sect2">
      <h3 class="sect2">B.4.1. Mathematical Operators</h3>
      <dl>
        
          <dt><tt class="literal">+</tt> <em>(plus)</em></dt>
          <dd>
            
<a name="INDEX-917" />


Adds one number to another</p>
          </dd>
        
        
          <dt><tt class="literal">-</tt><em> (minus)</em></dt>
          <dd>
            Subtracts one number from another</p>
          </dd>
        
        
          <dt><tt class="literal">*</tt> <em>(multiplication)</em></dt>
          <dd>
            Multiplies one number by another</p>
          </dd>
        
        
          <dt><tt class="literal">div</tt></dt>
          <dd>
            Performs a floating-point division between two numbers</p>
          </dd>
        
        
          <dt><tt class="literal">mod</tt></dt>
          <dd>
            Returns the floating-point remainder of dividing one number by another</p>
          </dd>
        
      </dl>
    </div>
    <a name="xslt-APP-B-SECT-4.2" /><div class="sect2">
      <h3 class="sect2">B.4.2. Boolean Operators</h3>
      <dl>
        
          <dt><tt class="literal">=</tt></dt>
          <dd>
            
<a name="INDEX-918" />

Tests whether two expressions are equal. </p>
          </dd>
        
        
          <dt><tt class="literal">&lt;</tt></dt>
          <dd>
            Tests whether the first expression is less than the second. Within an attribute, this operator must be coded <tt class="literal">&amp;lt;</tt>.</p>
          </dd>
        
        
          <dt><tt class="literal">&lt;=</tt></dt>
          <dd>
            Tests whether the first expression is less than or equal to the second. Within an attribute, this operator must be coded <tt class="literal">&amp;lt;=</tt>.</p>
          </dd>
        
        
          <dt><tt class="literal">&gt;</tt></dt>
          <dd>
            Tests whether the first expression is greater than the second. Within an attribute, this operator can be coded <tt class="literal">&amp;gt;</tt>.</p>
          </dd>
        
        
          <dt><tt class="literal">&gt;=</tt></dt>
          <dd>
            Tests whether the first expression is greater than or equal to the second. Within an attribute, this operator can be coded <tt class="literal">&amp;gt;=</tt>.</p>
          </dd>
        
        
          <dt><tt class="literal">!=</tt></dt>
          <dd>
            Tests whether the two expressions are not equal.</p>
          </dd>
        
        
          <dt><tt class="literal">and</tt></dt>
          <dd>
            Tests whether both the first and second expressions are <tt class="literal">true</tt>. If the first expression is <tt class="literal">false</tt>, the second is not evaluated. </p>
          </dd>
        
        
          <dt><tt class="literal">or</tt></dt>
          <dd>
            Tests whether either the first or second expressions are <tt class="literal">true</tt>. If the first expression is <tt class="literal">true</tt>, the second is not evaluated.</p>
          </dd>
        
      </dl>
      <div class="sect3">
        <h3 class="sect3">B.4.2.1. Comparing values of various datatypes</h3>
        <p>For the first six boolean operators, comparing values of various datatypes is complicated. We explain the various possibilities here:</p>
        


<dl>
<dt><i>If both objects are boolean values</i></dt>
<dd>
Then they are equal if they have the same value. For less-than and greater-than comparisons, <tt class="literal">false</tt> is considered less than <tt class="literal">true</tt> (the function call <tt class="literal">number(false())</tt> returns <tt class="literal">0</tt>, while <tt class="literal">number(true())</tt> returns <tt class="literal">1</tt>).</p>
</dd>


<dt><i>If both objects are numbers</i></dt>
<dd>
Then the operators work just the way you'd think they would.</p>
</dd>


<dt><i>If both objects are strings</i></dt>
<dd>
Then they are equal if their Unicode characters are identical. For less-than and greater-than comparisons, the character codes are compared.</p>
</dd>


<dt><i>If neither object is a node-set and the operator is = or !=</i></dt>
<dd>
Then the two objects are converted to the same object type, and the comparison works as described previously. If one of the objects is a boolean, then the objects are converted to boolean values as if by a call to the <tt class="literal">boolean()</tt> function. If none of the objects are boolean, the next attempted conversion is to a number. If one of the objects is a number, then the objects are converted to numeric values as if by a call to the <tt class="literal">number()</tt> function. Otherwise, all objects are converted to strings as if by a call to the <tt class="literal">string()</tt> function. </p>
</dd>


<dt><i>If neither object is a node-set and the operator is &lt;, &gt;, or &gt;=</i></dt>
<dd>        
Then the objects are converted to numbers and compared.</p>
</dd>


<dt><i>If one or both of the objects is a node-set</i></dt>
<dd>
Then things really get complicated. If both objects are node-sets, a comparison is true when the string value of at least one node in the first node-set is equal to the string value of at least one node in the second node-set. If one object is a node-set and the other is a number, string, or boolean, the comparison is true when there is at least one node in the node set whose number, string, or boolean value is equal to that number, string, or boolean value.
<a name="INDEX-919" />

</p>
</dd>

</dl>
      </div>
    </div>
    <div class="sect2">
      <h3 class="sect2">B.4.3. Expression Operators</h3>
      <dl>
        
          <dt><tt class="literal">/</tt></dt>
          <dd>
            
<a name="INDEX-920" />

The stepping operator, which is used to separate steps in a location path. If an XPath expression begins with <tt class="literal">/</tt>, it represents the root of the document.</p>
          </dd>
        
        
          <dt><tt class="literal">//</tt></dt>
          <dd>
            The abbreviated syntax for the <tt class="literal">descendant-or-self</tt> axis.</p>
          </dd>
        
        
          <dt><tt class="literal">.</tt></dt>
          <dd>
            The abbreviated syntax for the <tt class="literal">self</tt> axis.</p>
          </dd>
        
        
          <dt><tt class="literal">..</tt></dt>
          <dd>
            The abbreviated syntax for the <tt class="literal">parent</tt> axis.</p>
          </dd>
        
        
          <dt><tt class="literal">@</tt></dt>
          <dd>
            The abbreviated syntax for the <tt class="literal">attribute</tt> axis.</p>
          </dd>
        
        
          <dt><tt class="literal">|</tt></dt>
          <dd>
            The union operator. For example, the <tt class="literal">match</tt> attribute in the element <tt class="literal">&lt;xsl:template match="a|b"&gt;</tt> matches all <tt class="literal">&lt;a&gt;</tt> and <tt class="literal">&lt;b&gt;</tt> elements.</p>
          </dd>
        
        
          <dt><tt class="literal">*</tt></dt>
          <dd>
            A wildcard that represents any node of the principal node type. <tt class="literal">child::*</tt> selects all element children of the context node, <tt class="literal">attribute::*</tt> selects all attributes of the context node, etc. Using the abbreviated syntax, <tt class="literal">*</tt> selects all element children of the context node, and <tt class="literal">@*</tt> selects all attributes of the context node. Contrast the wildcard operator with the <tt class="literal">node()</tt> node test, which matches any node, regardless of type. </p>
          </dd>
        
        
          <dt><tt class="literal">[]</tt></dt>
          <dd>
            The predicate operator, used to contain a predicate expression that filters a group of nodes.</p>
          </dd>
        
        
          <dt><tt class="literal">$</tt></dt>
          <dd>
            The variable operator, used to indicate that a given symbol is a variable name.
<a name="INDEX-921" />

</p>
          </dd>
        
      </dl>
    </div>
  

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="appb_05.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">B.3. XPath Axes</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">B.5. Datatypes</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>
