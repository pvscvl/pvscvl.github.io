<html><head><title>Combining XML Documents (XSLT)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Doug Tidwell" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596000537L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XSLT" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XSLT" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"></td><td align="right" valign="top" width="228"><a href="ch07_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>



  <h1 class="chapter">Chapter 7. Combining XML Documents</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4>
  <p> <a href="#INDEX-567">Overview</a><br />
<a href="ch07_02.htm">The document() Function</a><br />
<a href="ch07_03.htm">Invoking the document() Function</a><br />
<a href="ch07_04.htm">More Sophisticated Techniques</a><br />
<a href="ch07_05.htm">Summary</a><br /></p></div>
  <p>
<a name="INDEX-561" /></a>
<a name="INDEX-562" /></a>
<a name="INDEX-563" /></a>
<a name="INDEX-564" /></a>
<a name="INDEX-565" /></a>
<a name="INDEX-566" /></a>
<a name="INDEX-567" /></a>


One of XSLT's most powerful features is the <tt class="literal">document()</tt> function. <tt class="literal">document()</tt> lets you use part of an XML document (identified with an XPath expression, of course) as a URI. In other words, you can look in a document, use parts of that document as URLs (or filenames), open and parse those files, then perform stylesheet functions on the combination of all those documents. In this chapter, we'll cover the <tt class="literal">document()</tt> function in all its glory.</p>
  <div class="sect1">
    <h2 class="sect1">7.1. Overview</h2>
    <p>The <tt class="literal">document()</tt> function is very useful for defining views of multiple XML documents. In this chapter, we'll use XML-tagged purchase orders that look like this:</p>
    <blockquote><pre class="code">
&lt;purchase-order id="38292"&gt;
  &lt;customer id="4738" level="Platinum"&gt;
    &lt;address type="business"&gt;
      &lt;name&gt;
        &lt;title&gt;Mr.&lt;/title&gt;
        &lt;first-name&gt;Chester Hasbrouck&lt;/first-name&gt;
        &lt;last-name&gt;Frisby&lt;/last-name&gt;
      &lt;/name&gt;
      &lt;street&gt;1234 Main Street&lt;/street&gt;
      &lt;city&gt;Sheboygan&lt;/city&gt;
      &lt;state&gt;WI&lt;/state&gt;
      &lt;zip&gt;48392&lt;/zip&gt;
    &lt;/address&gt;
    &lt;address type="ship-to"/&gt;
  &lt;/customer&gt;
  &lt;items&gt;
    &lt;item part_no="28392-33-TT"&gt;
      &lt;name&gt;Turnip Twaddler&lt;/name&gt;

      &lt;qty&gt;3&lt;/qty&gt;
      &lt;price&gt;9.95&lt;/price&gt;
    &lt;/item&gt;
    &lt;item part_no="28813-70-PG"&gt;
      &lt;name&gt;Prawn Goader&lt;/name&gt;
      &lt;qty&gt;1&lt;/qty&gt;
      &lt;price&gt;18.95&lt;/price&gt;
    &lt;/item&gt;
  &lt;/items&gt;
&lt;/purchase-order&gt;</pre></blockquote>
    <p>If we had a few dozen documents like this, we might want to view the collection of purchase orders in a number of ways. We could view them sorted (or even grouped) by customer, by part number, by the amount of the total order, by the state to which they were shipped, etc. One way to do this would be to write code that worked directly with the Document Object Model. We could parse each document, retrieve its DOM tree, then use DOM functions to order and group the various DOM trees, display certain parts of the DOM trees, etc. Because this is an XSLT book, though, you probably won't be surprised to learn that XSLT provides a function to handle most of the heavy lifting for us. </p>
  </div>
  
  
  
  


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_03.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch07_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">6.3. Summary</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">7.2. The document() Function</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
      </map>

</body></html>