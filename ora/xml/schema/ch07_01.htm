<html><head><title>Creating Complex Datatypes (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_06.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch07_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Chapter 7. Creating Complex Datatypes</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4>
  <p> <a href="#xmlschema-CHP-7-SECT-1">Simple Versus Complex Types</a><br />
<a href="ch07_02.htm">Examining the Landscape</a><br />
<a href="ch07_03.htm">Simple Content Models</a><br />
<a href="ch07_04.htm">Complex Content Models</a><br />
<a href="ch07_05.htm">Mixed Content Models</a><br />
<a href="ch07_06.htm">Empty Content Models</a><br />
<a href="ch07_07.htm">Back to Our Library</a><br />
<a href="ch07_08.htm">Derivation or Groups</a><br /></p></div>

<p>We <a name="INDEX-505" /></a>have
<a name="INDEX-506" /></a>seen <a name="INDEX-507" /></a>how to create simple datatypes that can
be applied to attributes or simple type elements.
It's now time to learn how complex types can be
created.
</p>
<div class="sect1"><a name="xmlschema-CHP-7-SECT-1" /></a>
<h2 class="sect1">7.1. Simple Versus Complex Types</h2>

<p>Before <a name="INDEX-508" /></a>we start diving into complex
types, I would like to reiterate the fundamental difference between
simple and complex types. The simple datatypes that we saw in the
previous chapters describe the content of a text node or an attribute
value. They are completely independent of the other nodes and,
therefore, independent of the markup. The same datatype system can be
used to describe the content of any format, even if it is not XML but
an RDBMS (Relational DataBase Management System), CSV (Comma
Separated Values), or a fixed-sized text format.
</p>

<p>The complex types discussed in this chapter (and, more specifically,
the complex content models) are, on the contrary, a description of
the markup structure. They use simple datatypes to describe their
leaf element nodes and attribute values, but have no other links with
simple datatypes. Keep this in mind, especially when we study the
derivation methods for complex datatypes. Even though the names (and
elements) are sometimes the same as those we've seen
for simple datatypes, their meaning, usage, and content models are
different. When we discuss the <tt class="literal">xs:restriction</tt> element,
for instance, you will see that this element has a different meaning
and content model for simple types than it does for complex types.
(In fact, this element even has two different content models for
complex types, depending on its context.) Among the different content
models composing complex types, the simple and mixed content models
are special cases in which elements may have text nodes.
</p>

<p>There is a kind of no man's land between simple
types and complex contents, where the distinction between data and
markup (or datatypes and structures) becomes fuzzier for W3C XML
Schema. This ambiguity is a frequent source of confusion and
complexity for human readers, but also for W3C XML Schema editing
software and reference guides.
</p>

</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_06.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch07_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">6.6. Back to Our Library</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">7.2. Examining the Landscape</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
      </map>

</body></html>