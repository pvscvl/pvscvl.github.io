<html><head><title>Numeric Datatypes (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch04_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch04_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">4.4. Numeric Datatypes</h2>

<p>The <a name="INDEX-160" /> <a name="INDEX-161" />numeric
datatypes are built on top of four primitive datatypes: <tt class="literal"><a href="ch16_01.htm">xs:decimal</a></tt> for all the decimal types (including the
integer datatypes, considered decimals without a fractional part),
<tt class="literal"><a href="ch16_01.htm">xs:double</a></tt> and <tt class="literal"><a href="ch16_01.htm">xs:float</a></tt> for
single and double precision floats, and <tt class="literal"><a href="ch16_01.htm">xs:boolean</a></tt>
for Booleans. Whitespaces are collapsed for all these datatypes.
</p>

<p>The datatypes covered in this section are shown in <a href="ch04_04.htm">Figure 4-3</a>. 
</p>

<a name="xmlschema-CHP-4-FIG-3" /><div class="figure"><img src="figs/xsch_0403.gif" alt="Figure 4-3" width="250" height="366" /></div><h4 class="objtitle">Figure 4-3. Numeric datatypes</h4>

<a name="xmlschema-CHP-4-SECT-4.1" /><div class="sect2">
<h3 class="sect2">4.4.1. Decimal Types</h3>

<p>All <a name="INDEX-162" />
<a name="INDEX-163" />decimal
types are derived from the <tt class="literal"><a href="ch16_01.htm">xs:decimal</a></tt> primary type
and constitute a set of predefined types that address the most common
usages.
</p>

<dl>
<dt><tt class="literal"><a href="ch16_01.htm">xs:decimal</a></tt> </dt>
<dd>
<a name="INDEX-164" />This
datatype represents the decimal numbers. The number of digits can be
arbitrarily long (the datatype doesn't impose any
restriction), but obviously, since a XML document has an arbitrary
but finite length, the number of digits of the lexical representation
of a <tt class="literal"><a href="ch16_01.htm">xs:decimal</a></tt> value needs to be finite. Although
the number of digits is not limited, we will see in the next chapter
how the author of a schema can derive user-defined datatypes with a
limited number of digits if needed.
</p>


<p>Leading and trailing zeros are not significant and may be trimmed.
The decimal separator is always a dot
("."); a leading sign
("+" or
"-") may be specified and any
characters other than the 10 digits (including whitespaces) are
forbidden. Scientific notation
("E+2") is also forbidden and has
been reserved to the float datatypes only.
</p>

<p>Valid values for <tt class="literal"><a href="ch16_01.htm">xs:decimal</a></tt> include:</p>

<blockquote class="simplelist">

<p><tt class="literal">123.456</tt></p>



<p><tt class="literal">+1234.456</tt></p>



<p><tt class="literal">-1234.456</tt></p>



<p><tt class="literal">-.456</tt></p>



<p><tt class="literal">-456</tt></p>

</blockquote>

<p>The following values are invalid: </p>

<blockquote class="simplelist">

<p><tt class="literal">1 234.456</tt> (spaces are forbidden)</p>



<p><tt class="literal">1234.456E+2</tt> (scientific notation ("E+2") is forbidden)</p>



<p><tt class="literal">+ 1234.456</tt> (spaces are forbidden)</p>



<p><tt class="literal">+1,234.456</tt> (delimiters between thousands are forbidden)</p>

</blockquote>

<p><tt class="literal"><a href="ch16_01.htm">xs:integer</a></tt> is the only datatype directly derived
from <tt class="literal"><a href="ch16_01.htm">xs:decimal</a></tt>.
</p>
</dd>


<dt><tt class="literal"><a href="ch16_01.htm">xs:integer</a></tt> </dt>
<dd>
<a name="INDEX-165" />This
integer datatype is a subset of <tt class="literal"><a href="ch16_01.htm">xs:decimal</a></tt>,
representing numbers which don't have any fractional
digits in its lexical or value spaces. The characters that are
accepted are reduced to 10 digits and an optional leading sign. Like
its base datatype, <tt class="literal"><a href="ch16_01.htm">xs:integer</a></tt>
doesn't impose any limitation on the number of
digits, and leading zeros are not significant.
</p>

<p>Valid values for <tt class="literal"><a href="ch16_01.htm">xs:integer</a></tt> include: </p>

<blockquote class="simplelist">

<p><tt class="literal">123456</tt></p>



<p><tt class="literal">+00000012</tt></p>



<p><tt class="literal">-1</tt></p>



<p><tt class="literal">-456</tt></p>

</blockquote>

<p>The following values are invalid: </p>

<blockquote class="simplelist">

<p><tt class="literal">1 234</tt> (spaces are forbidden)</p>



<p><tt class="literal">1.</tt> (the decimal separator is forbidden)</p>



<p><tt class="literal">+1,234</tt> (delimiters between thousands are forbidden).</p>

</blockquote>

<p><tt class="literal"><a href="ch16_01.htm">xs:integer</a></tt> has given birth to three derived
datatypes: <tt class="literal"><a href="ch16_01.htm">xs:nonPositiveInteger</a></tt> and <tt class="literal"><a href="ch16_01.htm">xs:nonNegativeInteger</a></tt> (which have still an unlimited length) and
<tt class="literal"><a href="ch16_01.htm">xs:long</a></tt> (to fit in a 64-bit word).
</p>
</dd>


<dt><tt class="literal"><a href="ch16_01.htm">xs:nonPositiveInteger</a></tt> and <tt class="literal"><a href="ch16_01.htm">xs:negativeInteger</a></tt> </dt>
<dd>
<a name="INDEX-166" />The <a name="INDEX-167" />W3C XML Schema Working Group thought that
it would be more clear that the value
"0" was included if they used
litotes as names, and used <tt class="literal"><a href="ch16_01.htm">xs:nonPositiveInteger</a></tt> if the
integers are negative or null. <tt class="literal"><a href="ch16_01.htm">xs:negativeInteger</a></tt> is
derived from <tt class="literal"><a href="ch16_01.htm">xs:nonPositiveInteger</a></tt> to represent the integers
that are strictly negative. These two datatypes allow integers of
arbitrary length.
</p>
</dd>


<dt><tt class="literal"><a href="ch16_01.htm">xs:nonNegativeInteger</a></tt> and <tt class="literal"><a href="ch16_01.htm">xs:positiveInteger</a></tt> </dt>
<dd>
<a name="INDEX-168" />Similarly,
<a name="INDEX-169" /><tt class="literal"><a href="ch16_01.htm">xs:nonNegativeInteger</a></tt> is the
integers that are positive or equal to zero and <tt class="literal"><a href="ch16_01.htm">xs:positiveInteger</a></tt> is derived from this type. The
"unsigned" family branch (<tt class="literal"><a href="ch16_01.htm">xs:unsignedLong</a></tt>, <tt class="literal"><a href="ch16_01.htm">xs:unsignedInt</a></tt>, <tt class="literal"><a href="ch16_01.htm">xs:unsignedShort</a></tt>, and <tt class="literal"><a href="ch16_01.htm">xs:unsignedByte</a></tt>) is also
derived from <tt class="literal"><a href="ch16_01.htm">xs:nonNegativeInteger</a></tt>.
</p>
</dd>


<dt><tt class="literal"><a href="ch16_01.htm">xs:long</a></tt>, <tt class="literal"><a href="ch16_01.htm">xs:int</a></tt>, <tt class="literal"><a href="ch16_01.htm">xs:short</a></tt>, and <tt class="literal"><a href="ch16_01.htm">xs:byte</a></tt>.</dt>
<dd>
<a name="INDEX-170" />The
<a name="INDEX-171" />datatypes
<a name="INDEX-172" />we
<a name="INDEX-173" />have seen up
to now have an unconstrained length. This approach
isn't very microprocessor-friendly. This subfamily
represents signed integers that can fit into 8, 16, 32, and 64-bit
words. <tt class="literal"><a href="ch16_01.htm">xs:long</a></tt> is defined as all of the integers
between -9223372036854775808 and 9223372036854775807, i.e., the
values that can be stored in a 64-bit word. The same process is
applied again to derive <tt class="literal"><a href="ch16_01.htm">xs:int</a></tt> with a range
between -2147483648 and 2147483647 (32 bits), to derive <tt class="literal"><a href="ch16_01.htm">xs:short</a></tt> with a range between -32768 and 32767 (16
bits), and to derive <tt class="literal"><a href="ch16_01.htm">xs:byte</a></tt> with a range
between -128 and 127 (8 bits).
</p>
</dd>


<dt><tt class="literal"><a href="ch16_01.htm">xs:unsignedLong</a></tt>, <tt class="literal"><a href="ch16_01.htm">xs:unsignedInt</a></tt>, <tt class="literal"><a href="ch16_01.htm">xs:unsignedShort</a></tt>, and <tt class="literal"><a href="ch16_01.htm">xs:unsignedByte</a></tt>.</dt>
<dd>
<a name="INDEX-174" />The
<a name="INDEX-175" />last
<a name="INDEX-176" />of
<a name="INDEX-177" />the
predefined integer datatypes is the subfamily of unsigned (i.e.,
positive) integers that can fit into 8, 16, 32, and 64-bit words.
<tt class="literal"><a href="ch16_01.htm">xs:unsignedLong</a></tt> is defined as the integers in a range
between 0 and 18446744073709551615, i.e., the values that can be
stored in a 64-bit word. The same process is applied again to derive
<tt class="literal"><a href="ch16_01.htm">xs:unsignedInt</a></tt> with a range between 0 and 4294967295
(32 bits), to derive <tt class="literal"><a href="ch16_01.htm">xs:unsignedShort</a></tt> with a range
between 0 and 65535 (16 bits), and to derive <tt class="literal"><a href="ch16_01.htm">xs:unsignedByte</a></tt> with a range between 0 and <a name="INDEX-178" /> <a name="INDEX-179" />255 (8 bits).
</p>
</dd>

</dl>

</div>
<a name="xmlschema-CHP-4-SECT-4.2" /><div class="sect2">
<h3 class="sect2">4.4.2. Float Datatypes</h3>

<dl>
<dt><tt class="literal"><a href="ch16_01.htm">xs:float</a></tt> and <tt class="literal"><a href="ch16_01.htm">xs:double</a></tt></dt>
<dd>
<a name="INDEX-180" />
<a name="INDEX-181" /><tt class="literal"><a href="ch16_01.htm">xs:float</a></tt> <a name="INDEX-182" /> <a name="INDEX-183" />and <tt class="literal"><a href="ch16_01.htm">xs:double</a></tt> are both
primitive datatypes and represent IEEE simple (32 bits) and double
(64 bits) precision floating-point types. These store the values in
the form of mantissa and an exponent of a power of 2 (m x
2^e), allowing a large scale of numbers in a storage that has a fixed
length. Fortunately, the lexical space doesn't
require that we use powers of 2 (in fact, it doesn't
accept powers of 2), but instead lets us use a traditional scientific
notation with integer powers of 10. Since the value spaces (powers of
2) don't exactly match the values from the lexical
space (powers of 10), the recommendation specifies that the closest
value is taken. The consequence of this approximate matching is that
float datatypes are the domain of approximation; most of the float
values can't be considered exact, and are
approximate.
</p>


<p>These datatypes accept several
"special" values: positive zero
(0), negative zero (-0) (which is greater than positive 0 but less
than any negative value), infinity (INF) (which is greater than any
value), negative infinity (-INF) (which is less than any float, and
"not a number" (NaN).
</p>

<p>Valid values for <tt class="literal"><a href="ch16_01.htm">xs:float</a></tt> and <tt class="literal"><a href="ch16_01.htm">xs:double</a></tt> include:
</p>

<blockquote class="simplelist">

<p><tt class="literal">123.456</tt></p>



<p><tt class="literal">+1234.456</tt></p>



<p><tt class="literal">-1.2344e56</tt></p>



<p><tt class="literal">-.45E-6</tt></p>



<p><tt class="literal">INF</tt></p>



<p><tt class="literal">-INF</tt></p>



<p><tt class="literal">NaN</tt></p>

</blockquote>

<p>The following values are invalid: </p>

<blockquote class="simplelist">

<p><tt class="literal">1234.4E 56</tt> (spaces are forbidden)</p>



<p><tt class="literal">1E+2.5</tt> (the power of 10 must be an integer)</p>



<p><tt class="literal">+INF</tt> (positive infinity doesn't expect a sign)</p>



<p><tt class="literal">NAN</tt> (capitalization matters in special values)</p>

</blockquote>
</dd>

</dl>
</div>
<a name="xmlschema-CHP-4-SECT-4.3" /><div class="sect2">
<h3 class="sect2">4.4.3. <tt class="literal"><a href="ch16_01.htm">xs:boolean</a></tt></h3>

<dl>
<dt><tt class="literal"><a href="ch16_01.htm">xs:boolean</a></tt></dt>
<dd>
<a name="INDEX-184" />This is a
primitive datatype that can take the values <tt class="literal">true</tt>
and <tt class="literal">false</tt> <a name="INDEX-185" /> <a name="INDEX-186" />(or 1 and 0).
</p>
</dd>

</dl>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch04_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch04_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">4.3. String Datatypes</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">4.5. Date and Time Datatypes</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>