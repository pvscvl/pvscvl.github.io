<html><head><title>First Findings (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch03_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">2.3. First Findings</h2>

<p>Even in this very simple schema, we have learned a lot about what W3C
XML Schema has to offer.
</p>

<a name="xmlschema-CHP-2-SECT-3.1" /><div class="sect2">
<h3 class="sect2">2.3.1. W3C XML Schema Is Modular</h3>

<p>In <a name="INDEX-57" /> <a name="INDEX-58" />this example, we defined simple
components (elements and attributes in this case, but we will see in
the next chapters how to define other kinds of components) that we
used to build more complex components. This is one of the key
principles that have guided the editors of W3C XML Schema. These
editors have borrowed many concepts of object-oriented design to
develop complex components.
</p>

<p>If we draw a parallel between datatypes and classes, the elements and
attributes can be compared to objects. Each of the component
definitions that we included in our first schema is similar to an
object. Referencing one of these components to build a new element is
similar to creating a new object by cloning the already defined
component.
</p>

<p>In the next chapters, we will see how we can also create the
components "in place" (where they
are needed) as well as create datatypes from which we can derive
elements and attributes the same way we can instantiate a class to
create an object.
</p>

</div>
<a name="xmlschema-CHP-2-SECT-3.2" /><div class="sect2">
<h3 class="sect2">2.3.2. W3C XML Schema Is Both About Structure and Datatyping</h3>

<p>Note also that W3C XML Schema is pursuing two different levels of
<a name="INDEX-59" />
<a name="INDEX-60" />validation
in this first example: we have defined both rules about the structure
of the document and rules above the content of leaf nodes of the
document. The W3C Recommendation makes a clear distinction between
these two levels by publishing the recommendation in two parts (Part
1: Structures and Part 2: Datatypes), which are relatively
independent.
</p>

<p>There is also a big difference between simple types, which are about
datatyping and constraining the content of leaf nodes in the tree
structure of an XML document, and complex types, which are about
defining the structure of a document.
</p>

</div>
<a name="xmlschema-CHP-2-SECT-3.3" /><div class="sect2">
<h3 class="sect2">2.3.3. Flat Design, Global Components</h3>

<p>Finally, note the flatness of this schema: each component (element or
attribute) is defined directly under the
<a name="INDEX-61" /> <a name="INDEX-62" /> <a name="INDEX-63" />
<a name="INDEX-64" /><tt class="literal"><a href="ch15_01.htm">xs:schema</a></tt>
<a name="INDEX-65" /> <a name="INDEX-66" />document element.
</p>

<p>Components defined directly under the <tt class="literal"><a href="ch15_01.htm">xs:schema</a></tt> document element are called
"global" components. These have a
couple of notable properties: they can be referenced anywhere in the
schema as well as in the other schema that may include or import this
schema (we will see in the next chapters how to import or include
schemas), and all the global elements can be used as document root
elements.
</p>





</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch03_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">2.2. Our First Schema</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">3. Giving Some Depth to Our First Schema</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>