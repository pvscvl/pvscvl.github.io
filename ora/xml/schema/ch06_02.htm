<html><head><title>The Simplest Possible Patterns (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch06_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">6.2. The Simplest Possible Patterns</h2>

<p>In their simplest form,
<a name="INDEX-383" />patterns may be used as enumerations
applied to the lexical space rather than on the value space.
</p>

<p>If, for instance, we have a byte value that can only take the values
"1,"
"5," or
"15," the classical way to define
such a datatype is to use the <a name="INDEX-384" /><tt class="literal"><a href="ch15_01.htm">xs:enumeration</a></tt> facet:
</p>

<blockquote><pre class="code">&lt;xs:simpleType name="myByte"&gt;
  &lt;xs:restriction base="xs:byte"&gt;
    &lt;xs:enumeration value="1"/&gt;
    &lt;xs:enumeration value="5"/&gt;
    &lt;xs:enumeration value="15"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;</pre></blockquote>

<p>This is the "normal" way of
defining this datatype if it matches the lexical space and the value
space of an <tt class="literal"><a href="ch16_01.htm">xs:byte</a></tt>. It gives
the flexibility to accept the instance documents with values such as
"1,"
"5," and
"15," but also
"01" or
"0000005." One of the
particularities of <a name="INDEX-385" /><tt class="literal"><a href="ch15_01.htm">xs:pattern</a></tt> is it must be the only facet
constraining the lexical space. If we have an application that is
disturbed by leading zeros, we can use patterns instead of
enumerations to define our datatype:
</p>

<blockquote><pre class="code">&lt;xs:simpleType name="myByte"&gt;
  &lt;xs:restriction base="xs:byte"&gt;
    &lt;xs:pattern value="1"/&gt;
    &lt;xs:pattern value="5"/&gt;
    &lt;xs:pattern value="15"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;</pre></blockquote>

<p>This new datatype is still derived from <tt class="literal"><a href="ch16_01.htm">xs:byte</a></tt> and has the semantic of a byte, but
its lexical space is now constrained to accept only
"1,"
"5," and
"15," leaving out any variation
that has the same value but a different lexical representation.
</p>



<a name="ch06-4-fm2xml" /><blockquote><b>TIP:</b> 
This is an important difference from Perl regular expressions, on
which <a name="INDEX-386" />W3C XML Schema patterns are built.
A Perl expression such as <tt class="literal">/15/</tt> matches any string
containing "15," while the W3C XML
Schema pattern matches only the string equal to
"15." The Perl expression
equivalent to this pattern is thus <tt class="literal">/^15$/</tt>.
</p>
</blockquote>

<p>This example has been carefully chosen to avoid using any of the meta
characters used within patterns, which are:
".",
"\",
"?",
"*",
"+",
"{",
"}",
"(",
")",
"[", and
"]". We will see the meaning of
these characters later in this chapter; for the moment, we just need
to know that each of these <a name="INDEX-387" /> <a name="INDEX-388" /> <a name="INDEX-389" />characters needs to be
"escaped" by a leading
"\" to be used as a literal. For
instance, to define a similar datatype for a decimal when lexical
space is limited to "1" and
"1.5," we write:
</p>

<blockquote><pre class="code">&lt;xs:simpleType name="myDecimal"&gt;
  &lt;xs:restriction base="xs:decimal"&gt;
    &lt;xs:pattern value="1"/&gt;
    &lt;xs:pattern value="1\.5"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;</pre></blockquote>

<p>A common source of errors is that
"normal" characters should not be
escaped: we will see later that a leading
"\" changes their meaning (for
instance, "\P" matches all the
Unicode punctuation characters and not the character
"P").
</p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch06_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">6. Using Regular Expressions to Specify Simple Datatypes</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">6.3. Quantifying</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>