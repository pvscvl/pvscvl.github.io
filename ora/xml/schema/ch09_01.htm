<html><head><title>Defining Uniqueness, Keys, and Key References (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch09_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Chapter 9. Defining Uniqueness, Keys, and Key References</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4>
  <p> <a href="#xmlschema-CHP-9-SECT-1">xs:ID and xs:IDREF</a><br />
<a href="ch09_02.htm">XPath-Based Identity Checks</a><br />
<a href="ch09_03.htm">ID/IDREF Versus xs:key/xs:keyref</a><br />
<a href="ch09_04.htm">Using  and  As Co-occurrence Constraints</a><br /></p></div>

<p>Like any storage system, a XML document needs to provide ways to
identify and reference pieces of the information it contains. In this
chapter, we will present and compare the two features that allow XML
to do so with W3C XML Schema. One directly emulates the ID, IDREF,
and IDREFs attribute types from the XML DTDs, while the other was
introduced to provide more flexibility through the use of XPath
expressions.
</p>
<div class="sect1"><a name="xmlschema-CHP-9-SECT-1" /></a>
<h2 class="sect1">9.1. <a href="ch16_01.htm">xs:ID</a> and <a href="ch16_01.htm">xs:IDREF</a></h2>

<p>The first way to describe <a name="INDEX-676" /></a>identifiers and references
with W3C XML Schema is inherited from XML's DTDs. We
already discussed this in <a href="ch05_01.htm">Chapter 5, "Creating Simple Datatypes"</a>: the
<tt class="literal"><a href="ch16_01.htm">xs:ID</a></tt><a name="INDEX-677" /></a>, <a name="INDEX-678" /></a><tt class="literal"><a href="ch16_01.htm">xs:IDREF</a></tt>, and <a name="INDEX-679" /></a><tt class="literal"><a href="ch16_01.htm">xs:IDREFS</a></tt> datatypes introduced in W3C XML
Schema emulate the behavior of the XML DTD's ID,
IDREF, and IDREFS attribute types.
</p>

<p>Unlike their DTD counterparts, these simple types can be used to
describe both elements and attributes, but inherit the other
restrictions from the DTDs: their lexical space is the same as the
unqualified XML name (known as the <tt class="literal"><a href="ch16_01.htm">xs:NCName</a></tt><a name="INDEX-680" /></a> datatype), and they are global to a
document, meaning that you won't be allowed to use
the same ID value to identify, for instance, both an author and a
character within the same document.
</p>

<p>The restriction on the <a name="INDEX-681" /></a>lexical space can
often prevent you from using an existing node as an identifier. For
instance, in our library, we will not be able to use an ISBN number
as an ID since <tt class="literal"><a href="ch16_01.htm">xs:NCName</a></tt> cannot start with a number
and whitespace is prohibited. We will therefore need to create
completely arbitrary IDs and derive their values from existing nodes.
The ISBN number "0836217462" can,
for instance, be used to build the ID
<tt class="literal">isbn-0836217462</tt>, and the name
"Charles M. Schulz" can become the
ID <tt class="literal">au-Charles-M.-Schulz</tt>. Adding a prefix (ISBN,
AU, etc.) is also a way to avoid a collision between IDs used for
different element types.
</p>

<p>These IDs can be used to define either
<a name="INDEX-682" /></a>attributes or
<a name="INDEX-683" /></a>elements; however,
the Recommendation reminds us that if we want to maintain
compatibility with XML 1.0 IDs and IDREFs, they should be used only
for attributes. In both cases (elements or attributes), the
contribution to the PSVI is done in a similar fashion through a
"ID/IDREF table"; except for
maintaining compatibility with the feature as it was previously
defined in XML 1.0, there is no reason to avoid using ID, IDREF, and
IDREFS to define elements.
</p>

<p>For example, to show how these styles can be combined, a
<tt class="literal">book</tt> element of our library can be written as:
</p>

<blockquote><pre class="code">&lt;book identifier="isbn-0836217462"&gt;
  &lt;isbn&gt;
    0836217462
  &lt;/isbn&gt;
  &lt;title&gt;
    Being a Dog Is a Full-Time Job
  &lt;/title&gt;
  &lt;author-ref ref="au-Charles_M._Schulz"/&gt;
  &lt;character-refs&gt;
    ch-Peppermint_Patty ch-Snoopy ch-Schroeder ch-Lucy
  &lt;/character-refs&gt;
&lt;/book&gt;</pre></blockquote>

<p>The <tt class="literal">book</tt> element is identified by an
<tt class="literal">identifier</tt> (ID) attribute, and references its
author though the <tt class="literal">ref</tt> (IDREF) attribute of an
author-ref element as well as a whitespace-separated list of
characters through a <tt class="literal">character-refs</tt> (IDREFS)
element. The piece of schema for this element can be:
</p>

<blockquote><pre class="code">&lt;xs:element name="book"&gt;
  &lt;xs:complexType&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="isbn" type="xs:NMTOKEN"/&gt;
      &lt;xs:element name="title" type="xs:string"/&gt;
      &lt;xs:element name="author-ref"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:attribute name="ref" type="xs:IDREF" use="required"/&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
      &lt;xs:element name="character-refs" type="xs:IDREFS"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="identifier" type="xs:ID" use="required"/&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:element&gt;</pre></blockquote>

</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch09_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">8.4. Simplifying the Library</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">9.2. XPath-Based Identity Checks</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
      </map>

</body></html>
