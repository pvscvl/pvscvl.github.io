<html><head><title>Examining the Landscape (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch07_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch07_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">7.2. Examining the Landscape</h2>

<p>W3C XML Schema has introduced many different ways of reaching your
information modeling goals, and we will try to draw a global picture
of the landscape to avoid getting lost! We have to make two key
choices: which content model to use, and whether to create new types
or to derive them from previously defined types.
</p>

<a name="xmlschema-CHP-7-SECT-2.1" /><div class="sect2">
<h3 class="sect2">7.2.1. Content Models</h3>

<p>Let's <a name="INDEX-509" />go back on the definition of the
content models and try to illustrate the different cases in <a href="ch07_02.htm">Table 7-1</a>. It shows the relationship between content
model and child text and element nodes.
</p>

<a name="xmlschema-CHP-7-TABLE-1" /><h4 class="objtitle">Table 7-1. Content models </h4><table border="1" cellpadding="3">






<tr>
<th>
<p>Content model</p>
</th>
<th>
<p>Mixed</p>
</th>
<th>
<p>Complex</p>
</th>
<th>
<p>Simple</p>
</th>
<th>
<p>Empty</p>
</th>
</tr>


<tr>
<td>
<p>Child elements</p>
</td>
<td>
<p>Yes</p>
</td>
<td>
<p>Yes</p>
</td>
<td>
<p>No</p>
</td>
<td>
<p>No</p>
</td>
</tr>
<tr>
<td>
<p>Child text</p>
</td>
<td>
<p>Yes</p>
</td>
<td>
<p>No</p>
</td>
<td>
<p>Yes</p>
</td>
<td>
<p>No</p>
</td>
</tr>

</table><p>

<p>W3C XML Schema provides two main ways to define complex types: one
for complex content models and one for simple content models. It also
offers several tricks for piggybacking the definition of mixed and
empty contents on these definitions (through a
<a name="INDEX-510" /><tt class="literal">mixed</tt> attribute on
a complex type definition for mixed contents, and by omitting the
option to declare elements or assigning a simple content that imposes
a null value for empty contents).
</p>

</div>
<a name="xmlschema-CHP-7-SECT-2.2" /><div class="sect2">
<h3 class="sect2">7.2.2. Named Versus Anonymous Types</h3>

<p>Like <a name="INDEX-511" /> <a name="INDEX-512" />simple
<a name="INDEX-513" />datatypes, complex datatypes can be
either named (i.e., global) or anonymous (i.e., local). Global
definitions must have a name and be a top-level element that is
included directly in the <tt class="literal"><a href="ch15_01.htm">xs:schema</a></tt> document element. The global
definitions can then be referenced directly in an element definition
using the element <tt class="literal">type</tt><a name="INDEX-514" />
attribute; new complex types can be derived from the global
definitions. <a name="INDEX-515" />Local complex types are defined directly
where they are needed in a schema; they are anonymous (i.e., no name
attribute); and they have a local scope.
</p>

</div>
<a name="xmlschema-CHP-7-SECT-2.3" /><div class="sect2">
<h3 class="sect2">7.2.3. Creation Versus Derivation</h3>

<p>For <a name="INDEX-516" />simple datatypes, there is no choice:
you cannot create new primitive datatypes and we must define them by
derivation. For complex datatypes, the situation is the opposite:
there are no primitive complex types, and complex types must be
created before we can do any derivation. When we create our first
complex types, we have the choice of defining new content models from
scratch or deriving them by extension or restriction from previously
defined complex types. This makes it possible for libraries of
complex datatypes to be reused within a schema or between different
schemas. As far as validation is concerned, these derivations do not
change anything compared to simpler definitions: they allow
definition of exactly the same models applying to the same instance
documents. On the other hand, some applications might be able to draw
conclusions from the chain of derivations.
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch07_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch07_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">7. Creating Complex Datatypes</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">7.3. Simple Content Models</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>