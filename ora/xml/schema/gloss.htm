<html><head><title>Glossary (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h3 class="objtitle">Glossary</h3>

<p><b>abstract</b>
<br>
A
type of element or complex datatype that cannot be used directly in
the instance documents. An abstract element must be substituted and
is usually the head of a substitution group. An abstract complex type
may be used to define content models, in which case the type will
have to be substituted in the instance documents using
<tt>xsi:type</tt>. There is no feature to define simple
types as abstract (even though the predefined type
<tt>xs:NOTATION</tt> could be considered abstract).
</glossentry>
<p><b>atom</b>
<br>
<para>In a regular expression, an atom expresses a condition on a
substring. Atoms may be followed by a quantifier defining the
expected number of the atom's occurrences. The atom,
with its optional number of occurrences, constitutes a
"piece." An atom may be a
character, a wildcard, a special character, a character class, or a
regular expression.
</glossentry>
<p><b>atomic type</b>
<br>
<para>A simple type that is not derived by list or union from another
simple type.
</glossentry>
<p><b>attributes</b>
<br>
<para>Pieces of information attached to an element and defined in its start
tag. Considered child nodes by the XPath data model, and considered
property nodes by the DOM, attributes are
"information items" to the XML
Infoset.
</glossentry>
<p><b>attribute groups</b>
<br>
<para>Containers that allow you to define, reference, and redefine groups
of attributes.
</glossentry>
</glossdiv>

<glossdiv><title>B</title>
<p><b>base type</b>
<br>
<para>The datatype that is used as the starting point to define a new
datatype by derivation by restriction or extension.
</glossentry>
<p><b>Berners-Lee, Tim</b>
<br>
<para>Inventor of HTML and HTTP, and Director of the W3C; he is considered
the father of the World Wide Web (see <a href="../../../../../../www.w3.org/People/all#timbl">http://www.w3.org/People/all#timbl</a>).
</glossentry>
<p><b>block</b>
<br>
<para>Elements and complex datatypes that cannot be substituted in the
instance documents. A blocked element or complex type is restricted
in the substitutions that may occur in the instance documents. There
is no feature to block simple types.
</glossentry>
</glossdiv>

<glossdiv><title>C</title>
<p><b>canonical lexical representation</b>
<br>
<para>When a value in the value space may have different lexical
representations in the lexical space, the W3C XML Schema
Recommendation provides (when possible) a canonical representation,
which is the most "normal" or
"classical" and may be used as a
reference. Although most of the types have canonical representations,
some such as <tt>xs:duration</tt> or
<tt>xs:QName</tt>, do not have one.
</glossentry>
<p><b>chameleon design</b>
<br>
<para>Importing a schema without a namespace into a schema with a target
namespace is known as "chameleon
design." This is because the imported schema takes
the target namespace of the schema in which it is imported like a
chameleon takes the color of the environment in which it is placed.
</glossentry>
<p><b>character class</b>
<br>
<para>In a regular expression, a character class is an atom matching a set
of characters. Character classes may be classical Perl character
classes, Unicode character classes, or user-defined character
classes.
</glossentry>
<p><b>classical Perl character class</b>
<br>
<para>A set of character classes designated by a single letter, for which
upper- and lowercases of the same letter are complementary (for
instance, "\d" is all the decimal
digits, and "\D" is all the
characters that are not decimal digits).
</glossentry>
<p><b>complex content</b>
<br>
<para>An element has a complex content model when it has child element
nodes only (and no text node).
</glossentry>
<p><b>component</b>
<br>
<para>Something that can be defined and referenced in a schema. Elements,
attributes, simple and complex types, and element and attribute
groups are components.
</glossentry>
<p><b>compositor</b>
<br>
<para>Containers that allow the manipulation of a set of elements as a
whole and defines their relative order. Compositors include
<tt>xs:sequence</tt>, <literal>xs:choice</literal>, and
<tt>xs:all</tt>. Compositors may be included in other
compositors to form complex combinations (with some limitations).
Most can also be used as particles and have
<tt>minOccurs</tt> and <literal>maxOccurs</literal>
attributes, which allow definition of the number of repetitions
expected for the whole group of elements that they define. The child
elements of a compositor are
"particles." A restriction applies
to <tt>xs:all</tt> as a compositor: it can only include
<tt>xs:element</tt> particles.
</glossentry>
<p><b>Consistent Declaration rule</b>
<br>
<para>This states that an element referenced by one
"location" in a schema cannot be
associated with two different simple or complex types.
</glossentry>
<p><b>content model</b>
<br>
<para>A description of the structure of children elements and text nodes
(independent of attributes). The content model is
"simple" when there is a text node
but no elements, "complex" when
there are element nodes but no text,
"mixed" when there are text and
element nodes, and "empty" when
there are neither text nor element nodes. These definitions are
commonly used by XML developers and slightly different from those of
W3C XML Schema, for which there are only simple and complex content
models. (Mixed models are considered special cases of complex
contents, and empty models are considered either simple or complex
contents with no child nodes.)
</glossentry>
</glossdiv>

<glossdiv><title>D</title>
<p><b>datatype</b>
<br>
<para>A term used by W3C XML Schema to qualify both the content and the
structure of an element or attribute. Datatypes can be either simple
(when they describe an attribute or an element without an embedded
element or attribute) or complex (when they describe elements with
embedded child elements or attributes). W3C XML Schema datatypes
should not be confused with XML 1.0 element types, which are called
element names by W3C XML Schema.
</glossentry>
<p><b>default value</b>
<br>
<para>A value that is used when no value is provided in the instance
document. Default values apply to attributes that are either empty or
missing in the instance documents and that apply to empty elements.
</glossentry>
<p><b>derivation</b>
<br>
<para>The action of defining a datatype by using the definition of one or
several other datatypes. Simple datatypes may be defined by
derivation by restriction, list, or union, while complex datatypes
can be defined by derivation by restriction or extension.
</glossentry>
<p><b>derivation by extension</b>
<br>
</glossentry>
<p><b>derivation by list</b>
<br>
<para>The action of using a simple datatype (called the list type) to
define a new simple datatype as a whitespace-separated list of values
of the list type. Derivation by list applies only to simple
datatypes.
</glossentry>
<p><b>derivation by restriction</b>
<br>
<para>For simple datatypes, a derivation by restriction is the action of
defining a simple datatype by adding new constraints (called facets)
on the lexical or value space of an existing datatype (called the
base type). For complex datatypes, a derivation by restriction is the
action of giving a new content model for the datatype that is a
restriction of the base type.
</glossentry>
<p><b>derivation by union</b>
<br>
<para>The action of using a set of simple datatypes (called the member
types) to define a new simple datatype whose lexical space is the
union of the lexical spaces of the member types.
</glossentry>
<p><b>derived datatype</b>
<br>
<para>A datatype that is defined by derivation from other datatypes. They
can be user-defined when defined in a schema, or predefined when
defined in the W3C XML Schema Recommendation.
</glossentry>
<p><b>DOM</b>
<br>
<para>Document Object Model. An object-oriented model of XML documents,
including the definition of the API allowing its manipulation. The
third version of DOM (DOM Level 3) will include an API named
"Abstract Schemas" to facilitate
schema-guided editions of XML documents (see <a href="../../../../../../www.w3.org/TR/DOM-Level-3-Core">http://www.w3.org/TR/DOM-Level-3-Core</a>).
</glossentry>
<p><b>DSDL</b>
<br>
<para>Document Schema Definition Language (DSDL) is a project undertaken by
the ISO (ISO/IEC JTC 1/SC 34/WG 1, to be precise) whose objective is
"to create a framework within which multiple
validation tasks of different types can be applied to an XML document
in order to achieve more complete validation results than just the
application of a single technology" (see <a href="../../../../../../dsdl.org/">http://dsdl.org</a>). DSDL has classified W3C XML
Schema as "object-oriented schema
language."
</glossentry>
<p><b>DTD</b>
<br>
<para>Document Type Definition. XML 1.0 DTDs are inherited from SGML, in
which rules were included that allow the customization of the markup
itself and played a very central role. Because of the syntactical
rules included in their DTDs, SGML applications need a DTD to be able
to read an SGML document. One of the simplifications of XML is to
state that a XML parser should be able to read a document without
needing a DTD. DTDs have therefore been simplified over their SGML
ancestors and remain the first incarnation of what is today called a
XML Schema language.
</glossentry>
</glossdiv>

<glossdiv><title>E</title>
<p><b>element</b>
<br>
<para>One of the basic type of nodes in the tree represented by a XML
document. An element is delimited by start and end tags. In the
corresponding tree, an element is a nonterminal node, which may have
subnodes of type element, character (text), and namespace and
attribute, as well as comment and processing instruction nodes.
</glossentry>
<p><b>element type</b>
<br>
<para>Term used in the XML 1.0 Recommendation, which is equivalent to the
notion of element names in W3C XML Schema and should not be confused
with the simple or complex datatype of an element.
</glossentry>
<p><b>element groups</b>
<br>
<para>Containers that allow you to define, reference, and redefine groups
of elements.
</glossentry>
<p><b>empty content</b>
<br>
<para>An element that has neither child element nor text nodes (with or
without attributes).
</glossentry>
</glossdiv>

<glossdiv><title>f</title>
<p><b>facet</b>
<br>
<para>A constraint added to the lexical or value space of a simple datatype
during a derivation by restriction. The list of facets that can be
used depends on the simple datatype. Facets can be
"fixed" to disable their use during
further derivations.
</glossentry>
<p><b>final</b>
<br>
<para>Elements and datatypes that cannot be substituted or derived any
longer in the schema. A final element may not be chosen as the head
of a substitution group while a final complex or simple type cannot
be used as a base for further derivation.
</glossentry>
<p><b>fixed facets</b>
<br>
<para>Facets that are "fixed" during a
derivation by restriction cannot be used during further derivations
by restriction.
</glossentry>
<p><b>fixed values</b>
<br>
<para>A value that must match the value found in the instance document.
Used as default values if no value is supplied.
</glossentry>
</glossdiv>

<glossdiv><title>G</title>
<p><b>global definition</b>
<br>
<para>All the components (elements, attributes, simple and complex types,
element and attribute groups) can be defined at the top level of the
schema, directly under the <tt>xs:schema</tt> document
element. Their definition is said to be
"global," and they can be
referenced elsewhere in the schema, as well as in any schema that has
imported or included this schema.
</glossentry>
</glossdiv>

<glossdiv><title>I</title>
<p><b>Infoset</b>
<br>
<para>XML Information Set. A formal description of the information that may
be found in a well-formed XML document.
</glossentry>
<p><b>instance document</b>
<br>
<para>A XML document that is a candidate to be validated by a schema. Any
well-formed XML 1.0 document that conforms to the Namespaces in XML
1.0 Recommendation can be considered a valid or invalid instance
document.
</glossentry>
<p><b>item type</b>
<br>
<para>The simple datatype that is used as the starting point to define a
new simple datatype using a derivation by list.
</glossentry>
</glossdiv>

<glossdiv><title>L</title>
<p><b>lexical space</b>
<br>
<para>The set of all representations (after parsing and whitespace
processing) allowed for a simple datatype.
</glossentry>
<p><b>local definition</b>
<br>
<para>Most of the components (elements, attributes, simple and complex
types) can be defined inside of other components where they are used.
Their definition is said to be
"local" and they cannot be
referenced in other parts of the schema.
</glossentry>
<p><b>local name</b>
<br>
<para>The name of a component in its namespace, i.e., the part of the
qualified name that comes after the namespace prefix.
</glossentry>
</glossdiv>

<glossdiv><title>M</title>
<p><b>member types</b>
<br>
<para>The simple datatypes used as the starting point to define a new
simple datatype using a derivation by union.
</glossentry>
<p><b>mixed content</b>
<br>
<para>The content of an element that contains both child element and text
nodes.
</glossentry>
</glossdiv>

<glossdiv><title>N</title>
<p><b>namespace</b>
<br>
<para>A unique identifier that can be associated with a set of XML elements
and attributes. This identifier is a URI, which is not required to
point to an actual resource but must
"belong" to the author of these
elements and attributes. Since this full URI can't
be included in the name of each element and attribute, a namespace
prefix is assigned to the namespace URI through a namespace
declaration. This prefix is added to the local name of the elements
and attributes to form a qualified name. Namespaces are optional and
elements and attributes may have no namespaces attached. W3C XML
Schema has extended the scope of namespaces by using them not only
for elements and attributes but also for all the components of a
schema. A schema identifies the namespace of the components described
in a schema as a target namespace. When these components do not have
a namespace, the schema is said to have no target namespace.
</glossentry>
</glossdiv>

<glossdiv><title>P</title>
<p><b>parsed space</b>
<br>
<para>The set of values that are sent by the parser to the applications. It
is at the interface between the parser and the schema validator.
Values from the parsed space undergo whitespace processing, as
defined by their simple datatype, to feed the lexical space. The
parsed space is, therefore, not visible by the facets.
</glossentry>
<p><b>particle</b>
<br>
<para>An element, such as a compositor, a group of elements
(<tt>xs:group</tt>), an element definition or reference
(<tt>xs:element</tt>), or an element wildcard
(<tt>xs:any</tt>), which is included in a compositor to
define a list of elements. A restriction applies to
<tt>xs:all</tt>, which cannot be used as a particle even
though it is defined as a compositor. The number of occurrences of
particles may be constrained using their <tt>minOccurs</tt>
and <tt>maxOccurs</tt> attributes.
</glossentry>
<p><b>pattern</b>
<br>
<para>A facet that allows definition of a regular expression, which will be
applied to the lexical space to check its validity. By extension, the
regular expression defined in a pattern is often called
"pattern" as well.
</glossentry>
<p><b>piece</b>
<br>
<para>Regular expressions (or patterns) are composed of pieces. Each piece
is itself composed of an atom describing a condition on a substring
and an optional quantifier defining the expected number of
occurrences of the atom.
</glossentry>
<p><b>predefined datatype</b>
<br>
<para>The simple datatypes (both primitive and derived) that are defined in
the W3C XML Schema Recommendation.
</glossentry>
<p><b>primitive datatype</b>
<br>
<para>A simple datatype that cannot be defined by derivation from other
datatypes. There is no way to create primitive datatypes, so all the
primitive datatypes are therefore predefined.
</glossentry>
<p><b>PSVI</b>
<br>
<para>The Post Schema Validation Infoset. The Infoset after the information
gathered during a schema validation is added.
</glossentry>
</glossdiv>

<glossdiv><title>Q</title>
<p><b>qualified element or attribute</b>
<br>
<para>Elements and attributes that belong to a namespace; i.e., a namespace
URI is defined for them. The name of qualified elements may have no
prefix if a default namespace is defined, but the name of qualified
attributes must be prefixed.
</glossentry>
<p><b>qualified name</b>
<br>
<para>The complete name of a component, including the prefix associated to
its target namespace if one is defined.
</glossentry>
</glossdiv>

<glossdiv><title>R</title>
<p><b>RDBMS</b>
<br>
<para>Relational DataBase Management System. Developed in the late 70s,
this system has taken most of the database market and hosts a
significant amount of the data of many organizations. XML Schema
languages may help to insure the interface between that information
and XML documents.
</glossentry>
<p><b>Recommendation</b>
<br>
<para>Specifications published by the W3C. They cannot be officially called
"standards," since the W3C is a
consortium that does not have the status of the standard body
reserved for the ISO and national standard bodies. The
specifications, which are finalized and approved by the Director, are
then called "W3C Recommendations."
</glossentry>
<p><b>reference</b>
<br>
<para>All of the components (elements, attributes, simple and complex
types, element and attribute groups) that have been created with a
global definition can be referenced when needed in the schema in
which they are defined, and in any schema that has imported or
included this schema. Their definition is used at the location where
they are referenced.
</glossentry>
<p><b>regular expression</b>
<br>
<para>A syntax to express conditions on strings. The syntax used by the W3C
XML Schema for its patterns is very close to the syntax introduced by
the Perl programming language. A regular expression is composed of
elementary "pieces."
</glossentry>
<p><b>RELAX</b>
<br>
<para>A grammar-based XML Schema language developed by Murata Makoto and
published in March 2000 as a Japanese ISO Standard (see <a href="../../../../../../www.xml.gr.jp/relax">http://www.xml.gr.jp/relax</a>).
</glossentry>
<p><b>RELAX NG</b>
<br>
<para>A grammar-based XML Schema language resulting from a merger between
RELAX and TREX (see <a href="../../../../../../relaxng.org/">http://relaxng.org</a>).
</glossentry>
</glossdiv>

<glossdiv><title>S</title>
<p><b>SAX</b>
<br>
<para>Simple API for XML. A streaming event-based API used between parsers
and applications. Its streaming nature means that pipelines of XML
processing may be created using SAX (see <a href="../../../../../../www.saxproject.org/">http://www.saxproject.org</a>).
</glossentry>
<p><b>Schematron</b>
<br>
<para>A rule-based XML Schema language, developed by Rick Jelliffe, using
XPath expressions to describe validation rules (see <a href="../../../../../../www.ascc.net/xml/resource/schematron/schematron.html">http://www.ascc.net/xml/resource/schematron/schematron.html</a>).
</glossentry>
<p><b>serialization space</b>
<br>
<para>The set of values as they are stored in a document. These values are
transformed by the parser, as defined in the Recommendation XML 1.0,
before reaching the application. The serialization space is not
visible to the schema processors.
</glossentry>
<p><b>SGML</b>
<br>
<para>Standard Generalized Markup Language. Created in 1980, the ancestor
of XML. XML was designed as a simplified subset of SGML to be used on
the Web.
</glossentry>
<p><b>simple content</b>
<br>
<para>An element has a simple content model when it has a child text node
only (and no subelements). A simple content element has a simple type
if it has no attributes, and it has a complex type if it has any
attributes.
</glossentry>
<p><b>simple datatype</b>
<br>
<para>A datatype that accepts only a text value. Simple datatypes can be
directly assigned to attributes and simple content elements that do
not accept any attribute. Simple datatypes can be used to define
complex datatypes by extension.
</glossentry>
<p><b>SOAP</b>
<br>
<para>The major XML protocol used by Web Services; relies on W3C XML Schema
to describe the messages exchanged (see <a href="../../../../../../www.w3.org/TR/SOAP">http://www.w3.org/TR/SOAP</a>).
</glossentry>
<p><b>space</b>
<br>
<para>W3C XML Schema uses the term
"space" to mean a set of values
(lexical versus value spaces). For completeness, we introduced two
additional spaces in this book (the serialization and parsed spaces).
</glossentry>
<p><b>special character</b>
<br>
<para>A character that may be used as an atom after a
"\" to accept a specific character,
either for convenience or because this character is interpreted
differently in the context of a regular expression.
</glossentry>
<p><b>substitution group</b>
<br>
<para>A feature of W3C XML Schema, allowing you to define groups of
elements that may be used interchangeably in instance documents. They
are not declared as element groups, but through the
<tt>substitutionGroup</tt> attribute of
<tt>xs:element</tt> global definitions.
</glossentry>
</glossdiv>

<glossdiv><title>T</title>
<p><b>target namespace</b>
<br>
<para>The namespace of the components described in a schema. When these
components do not have a namespace, the schema is said to have no
target namespace.
</glossentry>
<p><b>TREX</b>
<br>
<para>A grammar-based XML Schema language developed by James Clark (see
<systemitem role="url">http://www.thaiopensource.com/trex</systemitem>).
</glossentry>
</glossdiv>

<glossdiv><title>U</title>
<p><b>Unicode block</b>
<br>
<para>A set of characters classified by their
"localization" (Latin, Arabic,
Hebrew, Tibetan, and even Gothic or musical symbols).
</glossentry>
<p><b>Unicode category</b>
<br>
<para>A set of characters classified by their usage (letters, uppercase,
digit, punctuation, etc.).
</glossentry>
<p><b>Unicode character class</b>
<br>
<para>A set of character classes defined based on the Unicode blocks and
categories.
</glossentry>
<p><b>unqualified element or attribute</b>
<br>
<para>Elements and attributes that don't belong to a
namespace; i.e., no namespace URI is defined for them. Any unprefixed
attribute is unqualified, but unprefixed elements are unqualified
only if no default namespace is defined.
</glossentry>
<p><b>UPA rule</b>
<br>
<para>The UPA (Unique Particle Attribution) rule states that at any given
moment, a W3C XML Schema processor must know&mdash;without ambiguity
and without needing any forward reference in the document&mdash;which
particle in the schema describes an element in the instance document.
This rule is roughly equivalent to the restrictions known as
"non-deterministic content models"
for the XML 1.0 DTDs and as "ambiguous content
models" by SGML. The UPA rule is often associated
with the "Consistent Declaration
rule."
</glossentry>
<p><b>URI</b>
<br>
<para>Uniform Resource Identifier. Defined by the RFCs 2396 and 2732. URIs
were created to extend the notion of URLs (Uniform Resource Locators)
to include abstract identifiers that do not necessarily need to
"locate" a resource.
</glossentry>
<p><b>URL</b>
<br>
<para>Uniform Resource Locator, a common identifier used on the Web. URLs
are absolute when the full path to the resource is indicated, and
relative when a partial path is given that needs to be evaluated in
relation with a base URL.
</glossentry>
<p><b>user-defined character class</b>
<br>
</glossentry>
<p><b>user-defined datatype</b>
<br>
<para>Datatypes that are defined in a schema. All the datatypes can be
defined by derivation or, for the complex datatypes only, by
definition.
</glossentry>
</glossdiv>

<glossdiv><title>V</title>
<p><b>valid</b>
<br>
<para>A XML document that is well-formed and conforms to a schema (DTD, W3C
XML Schema, etc.) of some kind.
</glossentry>
<p><b>value space</b>
<br>
<para>The set of all the possible values for a simple datatype, independent
of their actual representation in the instance documents.
</glossentry>
</glossdiv>

<glossdiv><title>W</title>
<p><b>W3C</b>
<br>
<para>World Wide Web Consortium. Originally created to settle HTML and HTTP
as de facto standards. The main specification body for the core
specifications of the World Wide Web and the keeper of the core XML
specifications (see <a href="../../../../../../www.w3.org/">http://www.w3.org</a>).
</glossentry>
<p><b>Web Services</b>
<br>
<para>An approach to using the Web for applications, as opposed to the Web
for human consumption that we use on a daily basis. Those services
rely on the same infrastructure as the Web, and exchange XML
documents over HTTP though a layer of protocols (such as SOAP or
XML-RPC), which are themselves based on XML. XML Schema languages are
used by these services to describe and control the XML documents that
are exchanged.
</glossentry>
<p><b>well-formed</b>
<br>
<para>An XML document that meets the conditions defined in the XML 1.0
Recommendation: it must be readable without ambiguity. Syntax errors
will be detected by a XML parser without schema of any type.
</glossentry>
<p><b>whitespace</b>
<br>
<para>Characters <tt>#x9</tt> (tab), <literal>#xA</literal>
(linefeed), <tt>#xD</tt> (carriage return), and
<tt>#x20</tt> (space). These are often used to indent the
XML documents to give them a more readable aspect, and are filtered
by an operation named "whitespace
processing."
</glossentry>
<p><b>whitespace collapsing</b>
<br>
<para>The action of applying the whitespace replacement, trimming the
leading and trailing spaces, and replacing all the sequences of
contiguous whitespaces by a single space between the parsed and
lexical spaces. Most of the simple datatypes apply whitespace
collapsing.
</glossentry>
<p><b>whitespace preservation</b>
<br>
<para>The action of preserving all the whitespaces from the parsed to the
lexical space. The <tt>xs:string</tt> datatypes and the
user-defined simple types derived from <tt>xs:string</tt>
(which do not change the value of the
<tt>xs:whitespace</tt> facet) are the only datatypes
applying whitespace preservation.
</glossentry>
<p><b>whitespace processing</b>
<br>
<para>The operation of filtering that is done on the whitespaces present in
the value of a simple datatype. The whitespace processing is done
during the transformation between parsed and lexical spaces. W3C XML
Schema defines three whitespace processing approaches (depending on
the simple type): whitespace preservation, whitespace replacement,
and whitespace collapsing.
</glossentry>
<p><b>whitespace replacement</b>
<br>
<para>The action of replacing all the occurrences of the characters
<tt>#x9</tt> (tab), <literal>#xA</literal> (linefeed), and
<tt>#xD</tt> (carriage return) by a <literal>#x20</literal>
(space) between the parsed and the lexical space. Whitespace
replacement doesn't change the length of the string.
<tt>xs:normalizedString</tt> and the user-defined simple
types derived from <tt>xs:string</tt> and
<tt>xs:normalizedString</tt> (for which the value of the
<tt>xs:whitespace</tt> facet is
"replace") are the only datatypes
that apply whitespace replacement.
</glossentry>
<p><b>wildcard</b>
<br>
<para>A character used as an atom in a regular expression to accept a set
of characters. W3C XML Schema supports only one such wildcard: the
character ".", which means
"any character." This expression is
also used to designate the <tt>xs:any</tt> and
<tt>xs:anyAttribute</tt> particles.
</glossentry>
</glossdiv>

<glossdiv><title>X</title>
<p><b>Xerces</b>
<br>
<para>The XML parser developed by the XML Apache project (see <a href="../../../../../../xml.apache.org/xerces2-j/index.html">http://xml.apache.org/xerces2-j/index.html</a>).
</glossentry>
<p><b>XInclude</b>
<br>
<para>A W3C specification defining a general purpose inclusion mechanism
for XML documents (see <a href="../../../../../../www.w3.org/TR/xinclude">http://www.w3.org/TR/xinclude</a>).
</glossentry>
<p><b>XLink</b>
<br>
<para>XML Linking Language is a W3C Recommendation (<systemitem role="url">http://www.w3.org/TR/xlink</systemitem>)
"which allows elements to be inserted into XML
documents in order to create and describe links between
resources."
</glossentry>
<p><b>XML</b>
<br>
<para>Extensible Markup Language. A subset of SGML created to be used on
the Web. Its core specification (XML 1.0) was published by the W3C in
February 1998. New specifications have been added since this date,
and the W3C considers that, with the addition of W3C XML Schema, the
core specifications are now complete.
</glossentry>
<p><b>XML-RPC</b>
<br>
<para>Considered the ancestor of SOAP, XML-RPC is a simple XML protocol
that may be used to implement Web Services. It does not rely on the
W3C XML Schema to describe the content of its messages but has
defined a simpler binding mechanism (see <a href="../../../../../../www.xmlrpc.com/">http://www.xmlrpc.com</a>).
</glossentry>
<p><b>XPath</b>
<br>
<para>A query language used to identify a set of nodes within a XML
document. Originally defined to be used with XSLT, it is also used by
XPointer and a simple subset is used in the
<tt>xs:key</tt>, <literal>xs:keyref</literal>, and
<tt>xs:unique</tt> W3C XML Schema elements. The XQuery
specification will be a superset of the second version of XPath. This
version will use type information provided by W3C XML Schema (see
<systemitem role="url">http://www.w3.org/TR/xpath</systemitem>).
</glossentry>
<p><b>XQuery</b>
<br>
<para>XML Query language. This will be a superset of XPath 2.0 that will
use type information provided by the W3C XML Schema to optimize its
queries, and for features such as sort orders (see <a href="../../../../../../www.w3.org/TR/xquery">http://www.w3.org/TR/xquery</a>).
</glossentry>
<p><b>XSLT</b>
<br>
<para>Extensible Stylesheet Language Transformations. A programming
language specialized for the transformation of XML documents (see
<systemitem role="url">http://www.w3.org/TR/xslt</systemitem>).
</glossentry>
<p><b>XSV</b>
<br>
<para>An open source W3C XML Schema implementation available at <systemitem role="url">http://www.w3.org/2001/03/webdata/xsv</systemitem>.<indexterm class="endofrange" startref="xmlschema-IDXTERM-1245" number="1246"/>
</glossentry>
</glossdiv>
</glossary>

<p>
<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">B.3. Other</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">Index</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
      </map>

</body></html>
