<html><head><title>Quantifying (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch06_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">6.3. Quantifying</h2>

<p>Despite <a name="INDEX-390" />an
apparent similarity, the <tt class="literal"><a href="ch15_01.htm">xs:pattern</a></tt> facet interprets its value attribute
in a very different way than <tt class="literal"><a href="ch15_01.htm">xs:enumeration</a></tt> does. <tt class="literal"><a href="ch15_01.htm">xs:enumeration</a></tt> reads the value as a lexical representation,
and converts it to the corresponding value for its base datatype,
while <tt class="literal"><a href="ch15_01.htm">xs:pattern</a></tt> reads the value
as a set of conditions to apply on lexical values. When we write:
</p>

<blockquote><pre class="code">&lt;xs:pattern value="15"/&gt;</pre></blockquote>

<p>we specify three conditions (first character equals
"1," second character equals
"5," and the string must finish
after this). Each of the matching conditions (such as first character
equals "1" and second character
equals "5") is called a piece. This
is just the simplest form to specify piece.
</p>

<p>Each piece in a pattern is composed of an <a name="INDEX-391" />atom
<a name="INDEX-392" />identifying a
character, or a set of characters, and an optional quantifier.
Characters (except special characters that must be escaped) are the
simplest form of atoms. In our example, we have omitted the
quantifiers. <a name="INDEX-393" />
<a name="INDEX-394" />Quantifiers may be defined using two
different syntaxes: either a special character (<tt class="literal">*</tt>
for 0 or more, <tt class="literal">+</tt> for one or more, and
<tt class="literal">?</tt> for 0 or 1) or a numeric range within curly
braces (<tt class="literal">{n}</tt> for exactly n times,
<tt class="literal">{n,m}</tt> for between n and m times, or
<tt class="literal">{n,}</tt> for n or more times).
</p>

<p>Using these quantifiers, we can merge our three patterns into one:</p>

<blockquote><pre class="code">&lt;xs:simpleType name="myByte"&gt;
  &lt;xs:restriction base="xs:byte"&gt;
    &lt;xs:pattern value="1?5?"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;</pre></blockquote>

<p>This new pattern means there must be zero or one character
("1") followed by zero or one
character ("5"). This is not
exactly the same meaning as our three previous patterns since the
empty string "" is now accepted by
the pattern. However, since the empty string doesn't
belong to the lexical space of our base type (<tt class="literal"><a href="ch16_01.htm">xs:byte</a></tt>), the new datatype has the same
lexical space as the previous one.
</p>

<p>We could also use quantifiers to limit the number of leading
zeros--for instance, the following pattern limits the number of
leading zeros to up to 2:
</p>

<blockquote><pre class="code">&lt;xs:simpleType name="myByte"&gt;
  &lt;xs:restriction base="xs:byte"&gt;
    &lt;xs:pattern value="0{0,2}1?5?"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;</pre></blockquote>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch06_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">6.2. The Simplest Possible Patterns</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">6.4. More Atoms</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>