<html><head><title>More Atoms (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch06_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">6.4. More Atoms</h2>

<p>By this point, we have seen the simplest atoms that can be used in a
pattern: "1,"
"5," and
"\." are atoms that exactly match a
character. The other atoms that can be used in patterns are special
characters, a wildcard that matches any character, or predefined and
user-defined character classes.
</p>

<a name="xmlschema-CHP-6-SECT-4.1" /><div class="sect2">
<h3 class="sect2">6.4.1. Special Characters</h3>

<p><a href="ch06_04.htm">Table 6-1</a> shows the<a name="INDEX-395" /> <a name="INDEX-396" /> <a name="INDEX-397" /> <a name="INDEX-398" /> <a name="INDEX-399" />list of atoms that match a single
character, exactly like the characters we have already seen, but also
correspond to characters that must be escaped or (for the first three
characters on the list) that are just provided for convenience.
</p>

<a name="xmlschema-CHP-6-TABLE-1" /><h4 class="objtitle">Table 6-1. Special characters</h4><table border="1" cellpadding="3">



<tr>
<td>
<p>\n</p>
</td>
<td>
<p><a name="INDEX-400" />New line (can also
be written as "&amp;#x0A;-- since we
are in a XML document).
</p>
</td>
</tr>
<tr>
<td>
<p>\r</p>
</td>
<td>
<p><a name="INDEX-401" />Carriage return (can also be written as
"&amp;#x0D; -- ). 
</p>
</td>
</tr>
<tr>
<td>
<p>\t</p>
</td>
<td>
<p><a name="INDEX-402" />Tabulation (can also be written
as "&amp;#x09; -- )
</p>
</td>
</tr>
<tr>
<td>
<p>\\</p>
</td>
<td>
<p><a name="INDEX-403" />Character
"\"
</p>
</td>
</tr>
<tr>
<td>
<p>\|</p>
</td>
<td>
<p><a name="INDEX-404" />Character
"|"
</p>
</td>
</tr>
<tr>
<td>
<p>\.</p>
</td>
<td>
<p><a name="INDEX-405" />Character
"."
</p>
</td>
</tr>
<tr>
<td>
<p>\-</p>
</td>
<td>
<p><a name="INDEX-406" />Character
"-"
</p>
</td>
</tr>
<tr>
<td>
<p>\^</p>
</td>
<td>
<p><a name="INDEX-407" />Character
"^"
</p>
</td>
</tr>
<tr>
<td>
<p>\?</p>
</td>
<td>
<p><a name="INDEX-408" />Character
"?"
</p>
</td>
</tr>
<tr>
<td>
<p>\*</p>
</td>
<td>
<p><a name="INDEX-409" />Character
"*"
</p>
</td>
</tr>
<tr>
<td>
<p>\+</p>
</td>
<td>
<p><a name="INDEX-410" />Character
"+"
</p>
</td>
</tr>
<tr>
<td>
<p>\{</p>
</td>
<td>
<p><a name="INDEX-411" />Character
"{"
</p>
</td>
</tr>
<tr>
<td>
<p>\}</p>
</td>
<td>
<p><a name="INDEX-412" />Character
"}"
</p>
</td>
</tr>
<tr>
<td>
<p>\(</p>
</td>
<td>
<p><a name="INDEX-413" />Character
"("
</p>
</td>
</tr>
<tr>
<td>
<p>\)</p>
</td>
<td>
<p><a name="INDEX-414" />Character
")"
</p>
</td>
</tr>
<tr>
<td>
<p>\[</p>
</td>
<td>
<p><a name="INDEX-415" />Character
"["
</p>
</td>
</tr>
<tr>
<td>
<p>\]</p>
</td>
<td>
<p><a name="INDEX-416" />Character
"]"
</p>
</td>
</tr>

</table><p>

</div>
<a name="xmlschema-CHP-6-SECT-4.2" /><div class="sect2">
<h3 class="sect2">6.4.2. Wildcard</h3>

<p>The <a name="INDEX-417" /> <a name="INDEX-418" /> <a name="INDEX-419" /> <a name="INDEX-420" /> <a name="INDEX-421" />character
"." has a special meaning:
it's a wildcard atom that matches any XML valid
character except newlines and carriage returns. As with any atom,
"." may be followed by an optional
quantifier and ".*" is a common
construct to match zero or more occurrences of any character. To
illustrate the usage of ".*" (and
the fact that <tt class="literal"><a href="ch15_01.htm">xs:pattern</a></tt> is a Swiss army knife), a
pattern may be used to define the integers that are multiples of 10:
</p>

<blockquote><pre class="code">&lt;xs:simpleType name="multipleOfTen"&gt;
  &lt;xs:restriction base="xs:integer"&gt;
    &lt;xs:pattern value=".*0"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;</pre></blockquote>

</div>
<a name="xmlschema-CHP-6-SECT-4.3" /><div class="sect2">
<h3 class="sect2">6.4.3. Character Classes</h3>

<p>W3C <a name="INDEX-422" /> <a name="INDEX-423" /> <a name="INDEX-424" />XML Schema has adopted the
"classical" Perl and Unicode
character classes (but not the POSIX-style character classes also
available in Perl).
</p>

<a name="xmlschema-CHP-6-SECT-4.3.1" /><div class="sect3">
<h3 class="sect3">6.4.3.1. Classical Perl character classes</h3>

<p>W3C <a name="INDEX-425" /> <a name="INDEX-426" />XML Schema supports the classical Perl
character classes plus a couple of additions to match XML-specific
productions. Each of these classes are designated by a single letter;
the classes designated by the upper- and lowercase versions of the
same letter are complementary:
</p>

<dl>
<dt><tt class="literal">\s</tt></dt>
<dd>
<a name="INDEX-427" />Spaces. Matches the XML whitespaces (space
#x20, tabulation #x09, line feed #x0A, and carriage return #x0D).
</p>
</dd>


<dt><tt class="literal">\S</tt></dt>
<dd>
<a name="INDEX-428" />Characters that are not spaces.
</p>
</dd>


<dt><tt class="literal">\d</tt></dt>
<dd>
<a name="INDEX-429" />Digits
("0" to
"9" but also digits in other
alphabets).
</p>
</dd>


<dt><tt class="literal">\D</tt></dt>
<dd>
<a name="INDEX-430" />Characters that are not digits.
</p>
</dd>


<dt><tt class="literal">\w</tt></dt>
<dd>
<a name="INDEX-431" />Extended
"word" characters (any Unicode
character not defined as
"punctuation",
"separator," and
"other"). This conforms to the Perl
definition, assuming UTF8 support has been switched on.
</p>
</dd>


<dt><tt class="literal">\W</tt></dt>
<dd>
<a name="INDEX-432" />Nonword characters.
</p>
</dd>


<dt><tt class="literal">\i</tt></dt>
<dd>
<a name="INDEX-433" />XML 1.0 initial name characters (i.e., all
the "letters" plus
"-"). This is a W3C XML Schema
extension over Perl regular expressions.
</p>
</dd>


<dt><tt class="literal">\I</tt></dt>
<dd>
<a name="INDEX-434" />Characters that may not be used as a XML
initial name character.
</p>
</dd>


<dt><tt class="literal">\c</tt></dt>
<dd>
<a name="INDEX-435" />XML 1.0 name characters (initial name
characters, digits, ".",
":",
"-", and the characters defined by
Unicode as "combining" or
"extender"). This is a W3C XML
Schema extension to Perl regular expressions.
</p>
</dd>


<dt><tt class="literal">\C</tt></dt>
<dd>
<a name="INDEX-436" />Characters that may not be used in a XML
1.0 name.
</p>
</dd>

</dl>

<p>These character classes may be used with an optional quantifier like
any other atom. The last pattern that we saw:
</p>

<blockquote><pre class="code">&lt;xs:pattern value=".*0"/&gt;</pre></blockquote>

<p>constrains the lexical space to be a string of characters ending with
a zero. Knowing that the base type is a
<tt class="literal">xs:integer</tt>, this is good enough for our purposes,
but if the base type had been a <tt class="literal"><a href="ch16_01.htm">xs:decimal</a></tt> (or <tt class="literal"><a href="ch16_01.htm">xs:string</a></tt>), we could be more restrictive and
write:
</p>

<blockquote><pre class="code">&lt;xs:pattern value="-?\d*0"/&gt;</pre></blockquote>

<p>This checks that the characters before the trailing zero are digits
with an optional leading <tt class="literal">-</tt> (we will see later on
in <a href="ch06_05.htm">Section 6.5.2.2, "Fixed format"</a> how to specify an optional
leading <tt class="literal">-</tt> or <tt class="literal">+</tt>).
</p>

</div>

<a name="xmlschema-CHP-6-SECT-4.3.2" /><div class="sect3">
<h3 class="sect3">6.4.3.2. Unicode character classes</h3>

<p>Patterns <a name="INDEX-437" />support character classes matching
both Unicode <a name="INDEX-438" /> <a name="INDEX-439" />
<a name="INDEX-440" />
<a name="INDEX-441" />categories
and blocks. Categories and blocks are two complementary
classification systems: categories classify the characters by their
usage independently to their localization (letters, uppercase, digit,
punctuation, etc.), while blocks classify characters by their
localization independently of their usage (Latin, Arabic, Hebrew,
Tibetan, and even Gothic or musical symbols).
</p>

<p>The syntax <tt class="literal">\p{Name}</tt> is similar for blocks and
categories; the prefix <tt class="literal">Is</tt> is added to the name of
categories to make the distinction. The syntax
<tt class="literal">\P{Name}</tt> is also available to select the
characters that do not match a block or category. A list of Unicode
blocks and categories is given in the specification. <a href="ch06_04.htm">Table 6-2</a> shows the Unicode character classes and <a href="ch06_04.htm">Table 6-3</a> shows the Unicode character blocks.
</p>

<a name="xmlschema-CHP-6-TABLE-2" /><h4 class="objtitle">Table 6-2. Unicode character classes </h4><table border="1" cellpadding="3">




<tr>
<th>
<p>Unicode Character Class</p>
</th>
<th>
<p>Includes</p>
</th>
</tr>



<tr>
<td>
<p>C</p>
</td>
<td>
<p>Other characters (non-letters, non symbols, non-numbers,
non-separators)
</p>
</td>
</tr>

<tr>
<td>
<p>Cc</p>
</td>
<td><p>Control characters</p>
</td>
</tr>

<tr>
<td>
<p>Cf</p>
</td>
<td>
<p>Format characters</p>
</td>
</tr>

<tr>
<td>
<p>Cn</p>
</td>
<td>
<p>Unassigned code points</p>
</td>

</tr>
<tr>
<td>
<p>Co</p>
</td>
<td>
<p>Private use characters</p>
</td>
</tr>

<tr>
<td>
<p>L</p>
</td>
<td>
<p>Letters</p>
</td>
</tr>

<tr>
<td>
<p>Ll</p>
</td>
<td>
<p>Lowercase letters</p>
</td>
</tr>

<tr>
<td>
<p>Lm</p>
</td>
<td>
<p>Modifier letters</p>
</td>
</tr>

<tr>
<td>
<p>Lo</p>
</td>
<td>
<p>Other letters</p>
</td>
</tr>

<tr>
<td>
<p>Lt</p>
</td>
<td>
<p>Titlecase letters</p>
</td>
</tr>

<tr>
<td>
<p>Lu</p>
</td>
<td>
<p>Uppercase letters</p>
</td>
</tr>

<tr>
<td>
<p>M</p>
</td>
<td>
<p>All Marks</p>
</td>
</tr>

<tr>
<td>
<p>Mc</p>
</td>
<td>
<p>Spacing combining marks</p>
</td>
</tr>

<tr>
<td>
<p>Me</p>
</td>
<td>
<p>Enclosing marks</p>
</td>
</tr>

<tr>
<td>
<p>Mn</p>
</td>
<td>
<p>Non-spacing marks</p>
</td>
</tr>

<tr>
<td>
<p>N</p>
</td>
<td>
<p>Numbers</p>
</td>
</tr>

<tr>
<td>
<p>Nd</p>
</td>
<td>
<p>Decimal digits</p>
</td>
</tr>

<tr>
<td>
<p>Nl</p>
</td>
<td>
<p>Number letters</p>
</td>
</tr>


<tr>
<td>
<p>No</p>
</td>
<td>
<p>Other numbers</p>
</td>
</tr>

<tr>
<td>
<p>P</p>
</td>
<td>
<p>Punctuation</p>
</td>
</tr>

<tr>
<td>
<p>Pc</p>
</td>
<td>
<p>Connector punctuation</p>
</td>
</tr>

<tr>
<td>
<p>Pd</p>
</td>
<td>
<p>Dashes</p>
</td>
</tr>

<tr>
<td>
<p>Pe</p>
</td>
<td>
<p>Closing punctuation</p>
</td>
</tr>

<tr>
<td>
<p>Pf</p>
</td>
<td>
<p>Final quotes (may behave like Ps or Pe)</p>
</td>
</tr>

<tr>
<td>
<p>Pi</p>
</td>
<td>
<p>Initial quotes (may behave like Ps or Pe)</p>
</td>
</tr>

<tr>
<td>
<p>Po</p>
</td>
<td>
<p>Other forms of punctuation</p>
</td>
</tr>

<tr>
<td>
<p>Ps</p>
</td>
<td>
<p>Opening punctuation</p>
</td>
</tr>



<tr>
<td>
<p>S</p>
</td>
<td>
<p>Symbols</p>
</td>
</tr>

<tr>
<td>
<p>Sc</p>
</td>
<td>
<p>Currency symbols</p>
</td>
</tr>

<tr>
<td>
<p>Sk</p>
</td>
<td>
<p>Modifier symbols</p>
</td>
</tr>

<tr>
<td>
<p>Sm</p>
</td>
<td>
<p>Mathematical symbols</p>
</td>
</tr>

<tr>
<td>
<p>So</p>
</td>
<td>
<p>Other symbols</p>
</td>
</tr>

<tr>
<td>
<p>Z</p>
</td>
<td>
<p>Separators</p>
</td>
</tr>

<tr>
<td>
<p>Zl</p>
</td>
<td>
<p>Line breaks</p>
</td>
</tr>

<tr>
<td>
<p>Zp</p>
</td>
<td>
<p>Paragraph breaks</p>
</td>
</tr>

<tr>
<td>
<p>Zs</p>
</td>
<td>
<p>Spaces</p>
</td>
</tr>

</table><p>

<a name="xmlschema-CHP-6-TABLE-3" /><h4 class="objtitle">Table 6-3. Unicode character blocks</h4><table border="1" cellpadding="3">




<tr>
<td>
<p>AlphabeticPresentationForms</p>
</td>
<td>
<p>Arabic</p>
</td>
<td>
<p>ArabicPresentationForms-A</p>
</td>
</tr>
<tr>
<td>
<p>ArabicPresentationForms-B</p>
</td>
<td>
<p>Armenian</p>
</td>
<td>
<p>Arrows</p>
</td>
</tr>
<tr>
<td>
<p>BasicLatin</p>
</td>
<td>
<p>Bengali</p>
</td>
<td>
<p>BlockElements</p>
</td>
</tr>
<tr>
<td>
<p>Bopomofo</p>
</td>
<td>
<p>BopomofoExtended</p>
</td>
<td>
<p>BoxDrawing</p>
</td>
</tr>
<tr>
<td>
<p>BraillePatterns</p>
</td>
<td>
<p>ByzantineMusicalSymbols</p>
</td>
<td>
<p>Cherokee</p>
</td>
</tr>
<tr>
<td>
<p>CJKCompatibility</p>
</td>
<td>
<p>CJKCompatibilityForms</p>
</td>
<td>
<p>CJKCompatibilityIdeographs</p>
</td>
</tr>
<tr>
<td>
<p>CJKCompatibilityIdeographsSupplement</p>
</td>
<td>
<p>CJKRadicalsSupplement</p>
</td>
<td>
<p>CJKSymbolsandPunctuation</p>
</td>
</tr>
<tr>
<td>
<p>CJKUnifiedIdeographs</p>
</td>
<td>
<p>CJKUnifiedIdeographsExtensionA</p>
</td>
<td>
<p>CJKUnifiedIdeographsExtensionB</p>
</td>
</tr>
<tr>
<td>
<p>CombiningDiacriticalMarks</p>
</td>
<td>
<p>CombiningHalfMarks</p>
</td>
<td>
<p>CombiningMarksforSymbols</p>
</td>
</tr>
<tr>
<td>
<p>ControlPictures</p>
</td>
<td>
<p>CurrencySymbols</p>
</td>
<td>
<p>Cyrillic</p>
</td>
</tr>
<tr>
<td>
<p>Deseret</p>
</td>
<td>
<p>Devanagari</p>
</td>
<td>
<p>Dingbats</p>
</td>
</tr>
<tr>
<td>
<p>EnclosedAlphanumerics</p>
</td>
<td>
<p>EnclosedCJKLettersandMonths</p>
</td>
<td>
<p>Ethiopic</p>
</td>
</tr>
<tr>
<td>
<p>GeneralPunctuation</p>
</td>
<td>
<p>GeometricShapes</p>
</td>
<td>
<p>Georgian</p>
</td>
</tr>
<tr>
<td>
<p>Gothic</p>
</td>
<td>
<p>Greek</p>
</td>
<td>
<p>GreekExtended</p>
</td>
</tr>
<tr>
<td>
<p>Gujarati</p>
</td>
<td>
<p>Gurmukhi</p>
</td>
<td>
<p>HalfwidthandFullwidthForms</p>
</td>
</tr>
<tr>
<td>
<p>HangulCompatibilityJamo</p>
</td>
<td>
<p>HangulJamo</p>
</td>
<td>
<p>HangulSyllables</p>
</td>
</tr>
<tr>
<td>
<p>Hebrew</p>
</td>
<td>
<p>HighPrivateUseSurrogates</p>
</td>
<td>
<p>HighSurrogates</p>
</td>
</tr>
<tr>
<td>
<p>Hiragana</p>
</td>
<td>
<p>IdeographicDescriptionCharacters</p>
</td>
<td>
<p>IPAExtensions</p>
</td>
</tr>
<tr>
<td>
<p>Kanbun</p>
</td>
<td>
<p>KangxiRadicals</p>
</td>
<td>
<p>Kannada</p>
</td>
</tr>
<tr>
<td>
<p>Katakana</p>
</td>
<td>
<p>Khmer</p>
</td>
<td>
<p>Lao</p>
</td>
</tr>
<tr>
<td>
<p>Latin-1Supplement</p>
</td>
<td>
<p>LatinExtended-A</p>
</td>
<td>
<p>LatinExtendedAdditional</p>
</td>
</tr>
<tr>
<td>
<p>LatinExtended-B</p>
</td>
<td>
<p>LetterlikeSymbols</p>
</td>
<td>
<p>LowSurrogates</p>
</td>
</tr>
<tr>
<td>
<p>Malayalam</p>
</td>
<td>
<p>MathematicalAlphanumericSymbols</p>
</td>
<td>
<p>MathematicalOperators</p>
</td>
</tr>
<tr>
<td>
<p>MiscellaneousSymbols</p>
</td>
<td>
<p>MiscellaneousTechnical</p>
</td>
<td>
<p>Mongolian</p>
</td>
</tr>
<tr>
<td>
<p>MusicalSymbols</p>
</td>
<td>
<p>Myanmar</p>
</td>
<td>
<p>NumberForms</p>
</td>
</tr>
<tr>
<td>
<p>Ogham</p>
</td>
<td>
<p>OldItalic</p>
</td>
<td>
<p>OpticalCharacterRecognition</p>
</td>
</tr>
<tr>
<td>
<p>Oriya</p>
</td>
<td>
<p>PrivateUse</p>
</td>
<td>
<p>PrivateUse</p>
</td>
</tr>
<tr>
<td>
<p>PrivateUse</p>
</td>
<td>
<p>Runic</p>
</td>
<td>
<p>Sinhala</p>
</td>
</tr>
<tr>
<td>
<p>SmallFormVariants</p>
</td>
<td>
<p>SpacingModifierLetters</p>
</td>
<td>
<p>Specials</p>
</td>
</tr>
<tr>
<td>
<p>Specials</p>
</td>
<td>
<p>SuperscriptsandSubscripts</p>
</td>
<td>
<p>Syriac</p>
</td>
</tr>
<tr>
<td>
<p>Tags</p>
</td>
<td>
<p>Tamil</p>
</td>
<td>
<p>Telugu</p>
</td>
</tr>
<tr>
<td>
<p>Thaana</p>
</td>
<td>
<p>Thai</p>
</td>
<td>
<p>Tibetan</p>
</td>
</tr>
<tr>
<td>
<p>UnifiedCanadianAboriginalSyllabics</p>
</td>
<td>
<p>YiRadicals</p>
</td>
<td>
<p>YiSyllables</p>
</td>
</tr>

</table><p>

<p>We don't yet know how to specify intersections
between a block and a category in a single pattern, or how to specify
that a datatype must be composed of only basic Latin letters. So, to
"cross" these classifications and
define the intersection of the block <tt class="literal">L</tt> (all the
letters) and the category <tt class="literal">BasicLatin</tt> (ASCII
characters below #x7F), we can perform two successive restrictions:
</p>

<blockquote><pre class="code">&lt;xs:simpleType name="BasicLatinLetters"&gt;
  &lt;xs:restriction&gt;
    &lt;xs:simpleType&gt;
      &lt;xs:restriction base="xs:token"&gt;
        &lt;xs:pattern value="\p{IsBasicLatin}*"/&gt;
      &lt;/xs:restriction&gt;
    &lt;/xs:simpleType&gt;
    &lt;xs:pattern value="\p{L}*"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;</pre></blockquote>

</div>

<a name="xmlschema-CHP-6-SECT-4.3.3" /><div class="sect3">
<h3 class="sect3">6.4.3.3. User-defined character classes</h3>

<p>These <a name="INDEX-442" /> <a name="INDEX-443" />classes <a name="INDEX-444" />are lists of characters between square
brackets that <a name="INDEX-445" />
<a name="INDEX-446" />accept <tt class="literal">-</tt> signs to
define ranges and a <a name="INDEX-447" />
<a name="INDEX-448" />leading <tt class="literal">^</tt> to negate
the whole list--for instance:
</p>

<blockquote><pre class="code">[azertyuiop]</pre></blockquote>

<p>to define the list of letters on the first row of a French keyboard,</p>

<blockquote><pre class="code">[a-z]</pre></blockquote>

<p>to specify all the characters between
"a" and
"z",
</p>

<blockquote><pre class="code">[^a-z]</pre></blockquote>

<p>for all the characters that are not between
"a" and
"z," but also
</p>

<blockquote><pre class="code">[-^\\]</pre></blockquote>

<p>to define the characters "-,"
"^," and
"\," or
</p>

<blockquote><pre class="code">[-+]</pre></blockquote>

<p>to specify a decimal sign.</p>

<p>These examples are enough to see that what's between
these square brackets follows a specific syntax and semantic. Like
the regular expression's main syntax, we have a list
of atoms, but instead of matching each atom against a character of
the instance string, we define a logical space. Between the atoms and
the character class is the set of characters matching any of the
atoms found between the brackets.
</p>

<p>We see also two special characters that have a different meaning
depending on their location! The character <tt class="literal">-</tt>,
which is a range delimiter when it is between <tt class="literal">a</tt>
and <tt class="literal">z</tt>, is a normal character when it is just after
the opening bracket or just before the closing bracket
(<tt class="literal">[+-]</tt> and <tt class="literal">[-+]</tt> are, therefore,
both legal). On the contrary, <tt class="literal">^</tt>, which is a
negator when it appears at the beginning of a class, loses this
special meaning to become a normal character later in the class
definition.
</p>

<p>We <a name="INDEX-449" /> <a name="INDEX-450" /> <a name="INDEX-451" />also notice that characters may or
must be escaped: "\\" is used to
match the character "\". In fact,
in a class definition, all the escape sequences that we have seen as
atoms can be used. Even though some of the special characters lose
their special meaning inside square brackets, they can always be
escaped. So, the following:
</p>

<blockquote><pre class="code">[-^\\]</pre></blockquote>

<p>can also be written as:</p>

<blockquote><pre class="code">[\-\^\\]</pre></blockquote>

<p>or as:</p>

<blockquote><pre class="code">[\^\\-]</pre></blockquote>

<p>since the location of the characters doesn't matter
any longer when they are escaped.
</p>

<p>Within square brackets, the character
"\" also keeps its meaning of a
reference to a Perl or Unicode class. The following:
</p>

<blockquote><pre class="code">[\d\p{Lu}]</pre></blockquote>

<p>is a set of decimal digits (Perl class <tt class="literal">\d</tt>) and
uppercase letters (Unicode category
"Lu").
</p>

<p>Mathematicians <a name="INDEX-452" />have found that three basic
operations are needed to manipulate sets and that these operations
can be chosen from a larger set of operations. In our square
brackets, we already saw two of these operations:
<a name="INDEX-453" />union (the
square bracket is an implicit union of its atoms) and
<a name="INDEX-454" />complement (a leading
<tt class="literal">^</tt> realizes the complement of the set defined in
the square bracket). W3C XML Schema extended the syntax of the Perl
regular expressions to introduce a third operation: the difference
between sets. The syntax follows:
</p>

<blockquote><pre class="code">[set1-[set2]]</pre></blockquote>

<p>Its meaning is all the characters in <tt class="literal">set1</tt> that do
not belong to <tt class="literal">set2</tt>, where <tt class="literal">set1</tt>
and <tt class="literal">set2</tt> can use all the syntactic tricks that we
have seen up to now.
</p>

<p>This operator can be used to perform
<a name="INDEX-455" />intersections of character classes (the
intersection between two sets A and B is the difference between A and
the complement of B), and we can now define a class for the
<tt class="literal">BasicLatin Letters</tt> as:
</p>

<blockquote><pre class="code">[\p{IsBasicLatin}-[^\p{L}]]</pre></blockquote>

<p>Or, using the <tt class="literal">\P</tt> construct, which is also a
complement, we can define the class as:
</p>

<blockquote><pre class="code">[\p{IsBasicLatin}-[\P{L}]]</pre></blockquote>

<p>The corresponding datatype definition would be:</p>

<a name="INDEX-456" /><a name="INDEX-457" /><a name="INDEX-458" /><a name="INDEX-459" /><a name="INDEX-460" /><blockquote><pre class="code">&lt;xs:simpleType name="BasicLatinLetters"&gt;
  &lt;xs:restriction base="xs:token"&gt;
    &lt;xs:pattern value="[\p{IsBasicLatin}-[\P{L}]]*"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;

</pre></blockquote>

</div>
</div>
<a name="xmlschema-CHP-6-SECT-4.4" /><div class="sect2">
<h3 class="sect2">6.4.4. Oring and Grouping</h3>

<p>In <a name="INDEX-461" /> <a name="INDEX-462" />our <a name="INDEX-463" />
<a name="INDEX-464" />first <a name="INDEX-465" />
<a name="INDEX-466" /> <a name="INDEX-467" />example pattern, we used
three separate patterns to express three possible values. We can
condense this definition using the
"|" character, which is the
"or" operator when used outside
square brackets. The simple type definition is then:
</p>

<blockquote><pre class="code">&lt;xs:simpleType name="myByte"&gt;
  &lt;xs:restriction base="xs:byte"&gt;
    &lt;xs:pattern value="1|5|15"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;</pre></blockquote>

<p>This syntax is more concise, but whether or not it's
more readable is subject to discussion. Also, these
"ors" would not be very interesting
if it were not possible to use them in conjunction with groups.
Groups are complete regular expressions, which are, themselves,
considered atoms and can be used with an optional quantifier to form
more complete (and complex) regular expressions. Groups are enclosed
by brackets ("(" and
")"). To define a comma-separated
list of "1,"
"5," or
"15," ignoring whitespaces between
values and commas, the following pattern could be used:
</p>

<blockquote><pre class="code">&lt;xs:simpleType name="myListOfBytes"&gt;
  &lt;xs:restriction base="xs:token"&gt;
    &lt;xs:pattern value="(1|5|15)( *, *(1|5|15))*"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;</pre></blockquote>

<p>Note how we have relied on the whitespace processing of the base
datatype (<tt class="literal"><a href="ch16_01.htm">xs:token</a></tt> collapses the whitespaces). We
have not tested leading and trailing whitespaces that are trimmed and
we have only tested single occurrences of spaces with the following
atom:
</p>

<blockquote><pre class="code">run back " * " run back</pre></blockquote>

<p>before and after the <a name="INDEX-468" />comma. 
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch06_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch06_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">6.3. Quantifying</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">6.5. Common Patterns</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>
