<html><head><title>Allowing Any Elements or Attributes from a Particular Namespace (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_10.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch11_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">10.11. Allowing Any Elements or Attributes from a Particular Namespace</h2>

<p>We are going to see how to accommodate any element or attribute from
other <a name="INDEX-836" />namespaces
using our marketing extension, the
<tt class="literal">http://dyomedea.com/ns/library/mkt</tt> namespace, as
an example:
</p>

<blockquote><pre class="code">&lt;?xml version="1.0"?&gt;
&lt;!-- Namespace: http://dyomedea.com/ns/library --&gt; 
&lt;library xmlns="http://dyomedea.com/ns/library"
  xmlns:mkt="http://dyomedea.com/ns/library/mkt"&gt;
  &lt;book id="b0836217462"&gt;
    &lt;title&gt;
      Being a Dog Is a Full-Time Job
    &lt;/title&gt;
    &lt;authors&gt;
      &lt;person id="CMS"&gt;
        &lt;name&gt;
          Charles M Schulz
        &lt;/name&gt;
      &lt;/person&gt;
    &lt;/authors&gt;
    &lt;mkt:cover&gt;
      Paperback
    &lt;/mkt:cover&gt;
    &lt;mkt:pages&gt;
      128
    &lt;/mkt:pages&gt;
  &lt;/book&gt;
&lt;/library&gt;</pre></blockquote>

<p>To allow any elements from the
<tt class="literal">http://dyomedea.com/ns/library/mkt</tt> namespace after
the <tt class="literal">author</tt> element, we use a
<a name="INDEX-837" /><tt class="literal"><a href="ch15_01.htm">xs:any</a></tt> element:
</p>

<blockquote><pre class="code">&lt;xs:any namespace="http://dyomedea.com/ns/library/mkt"
  processContents="skip"minOccurs="0" maxOccurs="unbounded"/&gt;</pre></blockquote>

<p><tt class="literal"><a href="ch15_01.htm">xs:anyAttribute</a></tt><a name="INDEX-838" /> should be used to allow attributes:
</p>

<blockquote><pre class="code">&lt;xs:anyAttribute namespace="http://dyomedea.com/ns/library/mkt"
  processContents="skip"/&gt;</pre></blockquote>

<p>The two new attributes shown above are
<tt class="literal">namespace</tt><a name="INDEX-839" /> and
<tt class="literal">processContents</tt><a name="INDEX-840" />.
</p>

<p><tt class="literal">namespace</tt> specifies the namespaces of the elements
or attributes that will be accepted. The value should be a list of
namespaces that
<a name="INDEX-841" />URIs allow a number of
<a name="INDEX-842" />wildcards. The wildcards permitted
within the list are
<tt class="literal">##local</tt><a name="INDEX-843" /> <a name="INDEX-844" /> (a nonqualified
element) and
<tt class="literal">##targetNamespace</tt><a name="INDEX-845" /> <a name="INDEX-846" /> (the target namespace). Two wildcards
can also be used instead of the list:
<tt class="literal">##any</tt><a name="INDEX-847" /> <a name="INDEX-848" /> (any namespace) and
<tt class="literal">##other</tt><a name="INDEX-849" /> <a name="INDEX-850" /> (any namespace other
than the target namespace).
</p>



<a name="ch10-19-fm2xml" /><blockquote><b>TIP:</b> 
It is not possible to specify that the possible namespaces are all
the namespaces not defined in a schema, or even all the namespaces
except those in a list. This is a serious limitation for
multi-namespace
<a name="INDEX-851" />vocabularies that would like
to restrict some of the imported namespaces while remaining open to
undefined namespaces.
</p>
</blockquote>

<p><tt class="literal">processContents</tt> specifies the behavior of the
validator regarding the elements or attributes from the specified
namespaces. The possible values are
"skip" (no validation is attempted
on these elements or attributes),
"strict" (schemas for the
namespaces that will be included need to be available, and validators
will validate the elements and attributes against these schemas), or
"lax" (validators will do their
best to find a schema for the included elements and attributes,
validate them when they have found one, and silently skip the
validation when they haven't). For example:
</p>

<blockquote><pre class="code">&lt;?xml version="1.0"?&gt; 
&lt;xs:schema targetNamespace="http://dyomedea.com/ns/library"
  elementFormDefault="qualified"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns="http://dyomedea.com/ns/library"&gt;
  &lt;xs:element name="library"&gt;
    &lt;xs:complexType&gt;
      &lt;xs:sequence&gt;
        &lt;xs:element ref="book"/&gt;
      &lt;/xs:sequence&gt; 
      &lt;xs:anyAttribute namespace="http://dyomedea.com/ns/library/mkt"
        processContents="skip"/&gt;
    &lt;/xs:complexType&gt;
  &lt;/xs:element&gt;
  &lt;xs:element name="book"&gt;
    &lt;xs:complexType&gt;
      &lt;xs:sequence&gt;
        &lt;xs:element name="title" type="xs:string"/&gt;
        &lt;xs:element name="authors"&gt;
          &lt;xs:complexType&gt;
            &lt;xs:sequence&gt;
              &lt;xs:element name="person"&gt;
                &lt;xs:complexType&gt;
                 &lt;xs:sequence&gt;
                 &lt;xs:element name="name" type="xs:string"/&gt;
                 &lt;/xs:sequence&gt; 
                 &lt;xs:attribute name="id" type="xs:string"
                   use="required"/&gt;
                &lt;/xs:complexType&gt;
              &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
        &lt;/xs:element&gt; 
        &lt;xs:any namespace="http://dyomedea.com/ns/library/mkt"
          processContents="skip"minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;/xs:sequence&gt;
      &lt;xs:attribute name="id" use="required"&gt;
        &lt;xs:simpleType&gt;
          &lt;xs:restriction base="xs:hexBinary"/&gt;
        &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
    &lt;/xs:complexType&gt;
  &lt;/xs:element&gt;
&lt;/xs:schema&gt;</pre></blockquote>

<p>This schema has been opened to accept any element from a single
namespace and can be further opened to accept any element from any
namespace other than the target namespace:
</p>

<blockquote><pre class="code">&lt;xs:anyAttribute namespace="##other" processContents="skip"/&gt;</pre></blockquote>

<p>This mechanism is flexible enough (with the exception of the lack of
support for any undefined namespaces already mentioned) to
accommodate a large majority of applications, but we must note that
these wildcards are considered particles and can't
replace global element definitions. The unfortunate consequence is
that document elements cannot be wildcarded because a schema needs to
provide a closed list of possible <a name="INDEX-852" />document <a name="INDEX-853" />elements. 
</p>





<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_10.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch11_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">10.10. Chameleon Design</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">11. Referencing Schemas and Schema Datatypes in XML Documents</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>