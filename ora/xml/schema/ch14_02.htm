<html><head><title>The W3C XML Schema Annotation Element (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch14_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch14_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">14.2. The W3C XML Schema Annotation Element</h2>

<p>The recommended way to add <a name="INDEX-1020" />comments and documentation in a W3C
XML Schema is through <a name="INDEX-1021" />the <tt class="literal"><a href="ch15_01.htm">xs:annotation</a></tt> element. This element can be added
within pretty much all the W3C XML Schema elements (in fact, it can
be added within all the schema elements except <tt class="literal"><a href="ch15_01.htm">xs:annotation</a></tt> and its child elements,
<tt class="literal"><a href="ch15_01.htm">xs:documentation</a></tt><a name="INDEX-1022" /> and <tt class="literal"><a href="ch15_01.htm">xs:appinfo</a></tt><a name="INDEX-1023" />). It generally appears as the first child
element (except for the <tt class="literal"><a href="ch15_01.htm">xs:schema</a></tt> element in which <tt class="literal"><a href="ch15_01.htm">xs:annotation</a></tt> can appear anywhere).
</p>

<p>The <tt class="literal"><a href="ch15_01.htm">xs:annotation</a></tt> element is a
container for the <tt class="literal"><a href="ch15_01.htm">xs:documentation</a></tt> and
<tt class="literal"><a href="ch15_01.htm">xs:appinfo</a></tt> elements that contain
additional information. These two elements are dedicated to holding
human readable documentation (<tt class="literal"><a href="ch15_01.htm">xs:documentation</a></tt>) and machine-processable information
(<tt class="literal"><a href="ch15_01.htm">xs:appinfo</a></tt>). They accept any
text and child elements. (These are the only W3C XML Schema elements
that have a <a name="INDEX-1024" />mixed content model.) Note, though, that
the schema for schema specifies that the processing to apply to the
content of these elements is lax. Concretely, this means that
although W3C XML Schema elements can be included within these
elements, they must be valid per the schema for schema. This mixed
content model allows the inclusion of almost any content, such as
text:
</p>

<blockquote><pre class="code">&lt;xs:element name="author" type="author"&gt;
  &lt;xs:annotation&gt;
    &lt;xs:documentation xml:lang="en"&gt;
      The author of a book.
    &lt;/xs:documentation&gt;
    &lt;xs:documentation xml:lang="fr"&gt;
      Designe l'auteur d'un livre.
    &lt;/xs:documentation&gt;
  &lt;/xs:annotation&gt;
&lt;/xs:element&gt;</pre></blockquote>

<p>It also allows rich content, such as <a name="INDEX-1025" />XHTML, which can
be assembled to create more user friendly and readable documentation:
</p>

<blockquote><pre class="code">&lt;xs:element name="author" type="author"&gt;
  &lt;xs:annotation&gt;
    &lt;xs:documentation xml:lang="en"&gt;
      &lt;p id="author" xmlns="http://www.w3.org/1999/xhtml"&gt;
        This element describes the
        &lt;em&gt;
          author
        &lt;/em&gt;
        of a
        &lt;a href="#book"&gt;
          book
        &lt;/a&gt;
      &lt;/p&gt;
      .
    &lt;/xs:documentation&gt;
  &lt;/xs:annotation&gt;
&lt;/xs:element&gt;</pre></blockquote>

<p>It even allows <a name="INDEX-1026" />SVG, such as the following, which
provides a picture of what an author may look like:
</p>

<blockquote><pre class="code">&lt;xs:element name="author" type="author"&gt;
  &lt;xs:annotation&gt;
    &lt;xs:documentation&gt;
      &lt;svg xmlns="http://www.w3.org/2000/svg"&gt;
        &lt;title&gt;
          An author
        &lt;/title&gt; 
        &lt;ellipse style="stroke:#000000; fill:#e3e000;
          stroke-width:2pt;" id="head" cx="280" cy="250" rx="110"
          ry="130"/&gt; 
        &lt;ellipse style="stroke:none; fill:#7f7f7f; " id="leftEye"
          cx="240"cy="225" rx="18" ry="18"/&gt; 
        &lt;ellipse style="stroke:none; fill:#7f7f7f; " id="rightEye"
          cx="320"cy="225" rx="18" ry="18"/&gt; 
        &lt;path style="fill:none;stroke:#7F7F7F; stroke-width:5pt;"
          id="mouth"d="M 222 280 A 58 48 0 0 0 338 280"/&gt;
      &lt;/svg&gt;
    &lt;/xs:documentation&gt;
  &lt;/xs:annotation&gt;
&lt;/xs:element&gt;</pre></blockquote>

<p><a name="INDEX-1027" />Dublin Core elements are a set of
elements widely used on the Web to qualify web pages and supported by
a large range of applications. They may be used as general purpose
metadata embedded within annotations:
</p>

<blockquote><pre class="code">&lt;xs:element name="author" type="author"&gt;
  &lt;xs:annotation&gt;
    &lt;xs:appinfo xmlns:dc="http://purl.org/dc/elements/1.1/"&gt;
      &lt;dc:creator&gt;
        Eric van der Vlist (mailto:vdv@dyomedea.com)
      &lt;/dc:creator&gt;
      &lt;dc:date&gt;
        2002-02-01
      &lt;/dc:date&gt;
      &lt;dc:subject&gt;
        author,person,book
      &lt;/dc:subject&gt;
      &lt;dc:description&gt;
        This element describes the author of a book.
      &lt;/dc:description&gt;
    &lt;/xs:appinfo&gt;
  &lt;/xs:annotation&gt;
&lt;/xs:element&gt;</pre></blockquote>

<p>Annotations are also a good container for application-specific
metadata, such as those used by the schema for schema to describe the
list of facets and properties of its primitive datatypes:
</p>

<blockquote><pre class="code">&lt;xs:simpleType name="string" id="string"&gt;
  &lt;xs:annotation&gt;
    &lt;xs:appinfo&gt;
      &lt;hfp:hasFacet name="length"/&gt;
      &lt;hfp:hasFacet name="minLength"/&gt;
      &lt;hfp:hasFacet name="maxLength"/&gt;
      &lt;hfp:hasFacet name="pattern"/&gt;
      &lt;hfp:hasFacet name="enumeration"/&gt;
      &lt;hfp:hasFacet name="whiteSpace"/&gt;
      &lt;hfp:hasProperty name="ordered" value="false"/&gt;
      &lt;hfp:hasProperty name="bounded" value="false"/&gt; 
      &lt;hfp:hasProperty name="cardinality" value="countably
        infinite"/&gt;
      &lt;hfp:hasProperty name="numeric" value="false"/&gt;
    &lt;/xs:appinfo&gt; 
    &lt;xs:documentation
      source="http://www.w3.org/TR/xmlschema-2/#string"/&gt;
  &lt;/xs:annotation&gt;
  &lt;xs:restriction base="xs:anySimpleType"&gt;
    &lt;xs:whiteSpace value="preserve" id="string.preserve"/&gt;
  &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;</pre></blockquote>

<p>The <a name="INDEX-1028" />Schema Adjunct Framework (SAF) is a
proposal to complement schemas with the information needed to
generate applications. It is found at <a href="../../../../../../www.extensibility.com/saf/">http://www.extensibility.com/saf/</a>. One of
its syntaxes, "<a name="INDEX-1029" /> <a name="INDEX-1030" />schema adornments," also
uses <tt class="literal"><a href="ch15_01.htm">xs:appinfo</a></tt><a name="INDEX-1031" />; although this syntax
hasn't been adapted to the W3C XML Schema
Recommendation yet, it could be something like this (note that this
is my own unofficial adaptation given here just as an example):
</p>

<blockquote><pre class="code">&lt;xs:element name="author" type="author"&gt;
  &lt;xs:annotation&gt; 
    &lt;xs:appinfo source="saf:meta-data-item"
      xmlns:sql="http://www.extensibility.com/saf/spec/safsample/sql-map.saf"
      &gt;
      &lt;sql:select&gt;
        select
        &lt;sql:elem&gt;
          name
        &lt;/sql:elem&gt;
        ,
        &lt;sql:elem&gt;
          birthdate
        &lt;/sql:elem&gt;
        ,
        &lt;sql:attr&gt;
          deathdate
        &lt;/sql:attr&gt;
        from tbl_author
      &lt;/sql:select&gt;
    &lt;/xs:appinfo&gt;
  &lt;/xs:annotation&gt;
&lt;/xs:element&gt;</pre></blockquote>

<p>SAF also defines a syntax to embed rules written as XPath
expressions, which is also the domain of
<a name="INDEX-1032" />Schematron (which is discussed in Appendix
A). Schematron rules can be embedded in <tt class="literal">xs:appinfo</tt>
elements and used to test things that W3C XML Schema
cannot--like ensuring that the birth of a person took place
before their death.
</p>

<p>How can this work, given that the <a name="INDEX-1033" />XPath 1.0 on which Schematron is built
can't interpret dates? This is a fairly dangerous
practice, but assuming that the dates use four digits for the years,
as well as the same time zone (which we saw how to impose through
patterns in <a href="ch06_01.htm">Chapter 6, "Using Regular Expressions to Specify Simple Datatypes"</a>), this works because
<a name="INDEX-1034" />ISO 8601 dates are then following the
alphabetical sort order!
</p>

<blockquote><pre class="code">&lt;xs:element name="author" type="author"&gt;
  &lt;xs:annotation&gt;
    &lt;xs:appinfo xmlns:sch="http://www.ascc.net/xml/schematron"&gt;
      &lt;sch:pattern name="Born before dead"&gt;
        &lt;sch:rule context="author"&gt; 
          &lt;sch:assert test="not(dead) or (dead &gt; born)"
            diagnostics="bornAfterDead"&gt;
            An author should die after her or his death.
          &lt;/sch:assert&gt;
          &lt;sch:diagnostics&gt;
            &lt;sch:diagnostic id="bornAfterDead"&gt; 
              Error, this author is born after her or his birth!
              Author=
              &lt;sch:value-of select="name"/&gt;
              Birth =
              &lt;sch:value-of select="born"/&gt;
              Death =
              &lt;sch:value-of select="dead"/&gt;
            &lt;/sch:diagnostic&gt;
          &lt;/sch:diagnostics&gt;
        &lt;/sch:rule&gt;
      &lt;/sch:pattern&gt;
    &lt;/xs:appinfo&gt;
  &lt;/xs:annotation&gt;
&lt;/xs:element&gt;</pre></blockquote>

<p>Although not a common practice, it is also possible to embed code
snippets, such as this <a name="INDEX-1035" />XSLT template:
</p>

<blockquote><pre class="code">&lt;xs:element name="book" type="book"&gt;
  &lt;xs:annotation&gt;
    &lt;xs:appinfo xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
      &lt;xsl:template match="book"&gt;
        &lt;xsl:apply-templates select="title"/&gt;
        &lt;xsl:apply-templates select="isbn"/&gt;
        &lt;p&gt;
          Authors:
        &lt;/p&gt;
        &lt;ul&gt;
          &lt;xsl:apply-templates select="author"/&gt;
        &lt;/ul&gt;
        &lt;p&gt;
          Characters:
        &lt;/p&gt;
        &lt;ul&gt;
          &lt;xsl:apply-templates select="character"/&gt;
        &lt;/ul&gt;
      &lt;/xsl:template&gt;
    &lt;/xs:appinfo&gt;
  &lt;/xs:annotation&gt;
&lt;/xs:element&gt;</pre></blockquote>

<p>Instead of embedding resources, you can also link them using
<a name="INDEX-1036" />XLink. RDDL, a
vocabulary aimed at describing namespaces may be diverted from its
original goal to provide the glue for expressing these links:
</p>

<blockquote><pre class="code">&lt;xs:element name="author" type="author"&gt;
  &lt;xs:annotation&gt; 
    &lt;xs:appinfo xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:rddl="http://www.rddl.org/"&gt; 
      &lt;rddl:resource id="author-transform"
        xlink:arcrole="http://www.w3.org/1999/xhtml"
        xlink:role="http://www.w3.org/1999/XSL/Transform"
        xlink:title="Author template"
        xlink:href="library.xslt#author"&gt;
        &lt;div class="resource"&gt;
          &lt;h4&gt;
            XSLT Transformation
          &lt;/h4&gt;
          &lt;p&gt;
            This
            &lt;a href="library.xslt#author"&gt;
              template
            &lt;/a&gt;
            displays the description of an author.
          &lt;/p&gt;
        &lt;/div&gt;
      &lt;/rddl:resource&gt; 
      &lt;rddl:resource id="CSS" xlink:title="CSS Stylesheet"
        xlink:role="http://www.isi.edu/in-notes/iana/assignments/media-types/text/css"
        xlink:href="author.css"&gt;
        &lt;div class="resource"&gt;
          &lt;h4&gt;
            CSS Stylesheet
          &lt;/h4&gt;
          &lt;p&gt;
            A
            &lt;a href="author.css"&gt;
              CSS stylesheet
            &lt;/a&gt; 
            defining the styles which may be used to display an author.
          &lt;/p&gt;
        &lt;/div&gt;
      &lt;/rddl:resource&gt;
    &lt;/xs:appinfo&gt;
  &lt;/xs:annotation&gt;
&lt;/xs:element&gt;</pre></blockquote>

<p>RDDL should be pronounced "riddle,"
and its specification is available at <a href="../../../../../../rddl.org/">http://rddl.org</a>.
</p>



<a name="ch14-3-fm2xml" /><blockquote><b>TIP:</b> 
<tt class="literal"><a href="ch15_01.htm">xs:documentation</a></tt><a name="INDEX-1037" /> and <tt class="literal"><a href="ch15_01.htm">xs:appinfo</a></tt><a name="INDEX-1038" /> both accept an optional
<tt class="literal">source</tt> attribute, which is a URI, and can identify
the source or the nature of the included information. Since
it's designed for human consumption, <tt class="literal"><a href="ch15_01.htm">xs:documentation</a></tt> also accepts an <a name="INDEX-1039" />optional
<tt class="literal">xml:lang</tt> <a name="INDEX-1040" />attribute.
</p>
</blockquote>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch14_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch14_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">14. Documenting Schemas</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">14.3. Foreign Attributes</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>