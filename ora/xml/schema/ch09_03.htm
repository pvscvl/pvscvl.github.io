<html><head><title>ID/IDREF Versus / (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch09_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">9.3. ID/IDREF Versus <a href="ch15_01.htm">xs:key</a>/<a href="ch15_01.htm">xs:keyref</a></h2>

<p>We <a name="INDEX-705" />
<a name="INDEX-706" />have
<a name="INDEX-707" />enumerated the features that key and key
references provide beyond those of ID and IDREF: no constraint on
datatypes, tests done on values rather than on lexical
representation, and independent sets of values for each key. To get a
complete picture, we need to see if key and key references can
emulate ID and IDREF; in other words, we must determine which
features of ID and IDREF are missing from key and key references.
</p>

<p>First of all, the location of our key and keyref definition needs to
be on the root of the document to fully emulate the ID and IDREF that
is global to a document, whatever its document element is. Our best
move with W3C XML Schema, which doesn't directly
constrain the root node, is to locate our declaration in the global
element that is likely to be used as a document element.
</p>

<p>Then, to define the <a name="INDEX-708" /><tt class="literal"><a href="ch15_01.htm">xs:selector</a></tt>, we will need to provide the list of
all the elements holding ID attributes within a single XPath
expression.
</p>

<p>The last difference is that ID allows definition of a
whitespace-separated list of ID references (through IDREFS
datatypes), while there is no similar possibility with <tt class="literal"><a href="ch15_01.htm">xs:key</a></tt>. (There is no
<tt class="literal">xs:keyrefs</tt>!)
</p>

<p>To use <tt class="literal"><a href="ch15_01.htm">xs:key</a></tt> and
<tt class="literal"><a href="ch15_01.htm">xs:keyref</a></tt>, we, therefore, have
to modify the instance document that is used in the section about ID
and IDREF to transform the list of IDs referencing characters into a
series of references, and to use the same convention for IDs and
references in all our elements:
</p>

<blockquote><pre class="code">&lt;library xsi:noNamespaceSchemaLocation="library-keys-id-key.xsd"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
  &lt;book id="isbn-0836217462"&gt;
    &lt;isbn&gt;
      0836217462
    &lt;/isbn&gt;
    &lt;title&gt;
      Being a Dog Is a Full-Time Job
    &lt;/title&gt;
    &lt;author-ref ref="au-Charles_M._Schulz"/&gt;
    &lt;character-ref ref="ch-Peppermint_Patty"/&gt;
    &lt;character-ref ref="ch-Snoopy"/&gt;
    &lt;character-ref ref="ch-Schroeder"/&gt;
    &lt;character-ref ref="ch-Lucy"/&gt;
  &lt;/book&gt;
  .../...
  &lt;author id="au-Charles-M.-Schulz"&gt;
    &lt;name&gt;
      Charles M. Schulz
    &lt;/name&gt;
    &lt;nickName&gt;
      SPARKY
    &lt;/nickName&gt;
    &lt;born&gt;
      November 26, 1922
    &lt;/born&gt;
    &lt;dead&gt;
      February 12, 2000
    &lt;/dead&gt;
  &lt;/author&gt;
  &lt;character id="ch-Peppermint-Patty"&gt;
    &lt;name&gt;
      Peppermint Patty
    &lt;/name&gt;
    &lt;since&gt;
      Aug. 22, 1966
    &lt;/since&gt;
    &lt;qualification&gt;
      bold, brash and tomboyish
    &lt;/qualification&gt;
  &lt;/character&gt;
  ...
&lt;/library&gt;</pre></blockquote>

<p>The definition follows:</p>

<blockquote><pre class="code">&lt;xs:element name="library"&gt;
  &lt;xs:complexType&gt;
    .../...
  &lt;/xs:complexType&gt;
  &lt;xs:key name="ID"&gt;
    &lt;xs:selector xpath="book|author|character"/&gt;
    &lt;xs:field xpath="@id"/&gt;
  &lt;/xs:key&gt;
  &lt;xs:keyref name="IDREF" refer="ID"&gt;
    &lt;xs:selector xpath="book/author-ref|book/character-ref"/&gt;
    &lt;xs:field xpath="@ref"/&gt;
  &lt;/xs:keyref&gt;
&lt;/xs:element&gt;</pre></blockquote>

<p>This example illustrates the main difference between the two
mechanisms: ID/IDREF declarations are done at the level where they
are used, and are, therefore, fully integrated with the
pseudo-object-oriented features of W3C XML Schema, while key/keyref
definitions are done at the level of a common ancestor and rely on
the actual structure of the instance documents rather than on its
object-oriented schema.
</p>



<a name="ch09-14-fm2xml" /><blockquote><b>TIP:</b> 
Since key/keyref rely on the actual structure of the instance
documents, they ignore features such as substitution groups. Their
XPath expressions need to explicitly define each of the possible
element names (except when they use a
"*" to indicate
"any element" at a particular
<a name="INDEX-709" />level).
</p>
</blockquote>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch09_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch09_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">9.2. XPath-Based Identity Checks</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">9.4. Using  and  As Co-occurrence Constraints</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>