<html><head><title>Referencing Other Namespaces (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch10_07.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">10.6. Referencing Other Namespaces</h2>

<p>One <a name="INDEX-780" />of <a name="INDEX-781" />the goals of the namespaces
specification is to allow the use of documents mixing elements and
attributes from different <a name="INDEX-782" />vocabularies. W3C XML Schema
lets you take full advantage of this possibility.
</p>

<p>Part of the library vocabulary describes persons. This could be
reused by other applications, and we might want to define a specific
namespace and give it the URI reference
<tt class="literal">"http://dyomedea.com/ns/people"</tt>:
</p>

<blockquote><pre class="code">&lt;?xml version="1.0"?&gt; 
&lt;library xmlns:ppl="http://dyomedea.com/ns/people"
  xmlns="http://dyomedea.com/ns/library"&gt;
  &lt;book id="b0836217462" available="yes"&gt;
    &lt;isbn&gt;
      0836217462
    &lt;/isbn&gt;
    &lt;title&gt;
      Being a Dog Is a Full-Time Job
    &lt;/title&gt;
    &lt;authors&gt;
      &lt;ppl:person id="CMS"&gt;
        &lt;ppl:name&gt;
          Charles M Schulz
        &lt;/ppl:name&gt;
        &lt;ppl:born&gt;
          1922-11-26
        &lt;/ppl:born&gt;
        &lt;ppl:dead&gt;
          2000-02-12
        &lt;/ppl:dead&gt;
      &lt;/ppl:person&gt;
    &lt;/authors&gt;
    &lt;characters&gt;
      &lt;ppl:person id="PP"&gt;
        &lt;ppl:name&gt;
          Peppermint Patty
        &lt;/ppl:name&gt;
        &lt;ppl:born&gt;
          1966-08-22
        &lt;/ppl:born&gt;
        &lt;ppl:qualification&gt;
          bold, brash and tomboyish
        &lt;/ppl:qualification&gt;
      &lt;/ppl:person&gt;
      &lt;ppl:person id="Snoopy"&gt;
        &lt;ppl:name&gt;
          Snoopy
        &lt;/ppl:name&gt;
        &lt;ppl:born&gt;
          1950-10-04
        &lt;/ppl:born&gt;
        &lt;ppl:qualification&gt;
          extroverted beagle
        &lt;/ppl:qualification&gt;
      &lt;/ppl:person&gt;
      &lt;ppl:person id="Schroeder"&gt;
        &lt;ppl:name&gt;
          Schroeder
        &lt;/ppl:name&gt;
        &lt;ppl:born&gt;
          1951-05-30
        &lt;/ppl:born&gt;
        &lt;ppl:qualification&gt;
          brought classical music to the Peanuts strip
        &lt;/ppl:qualification&gt;
      &lt;/ppl:person&gt;
      &lt;ppl:person id="Lucy"&gt;
        &lt;ppl:name&gt;
          Lucy
        &lt;/ppl:name&gt;
        &lt;ppl:born&gt;
          1952-03-03
        &lt;/ppl:born&gt;
        &lt;ppl:qualification&gt;
          bossy, crabby and selfish
        &lt;/ppl:qualification&gt;
      &lt;/ppl:person&gt;
    &lt;/characters&gt;
  &lt;/book&gt;
&lt;/library&gt;</pre></blockquote>

<p>To handle these two namespaces, we need to define two different
schemas (one per namespace). One will describe our vocabulary about
persons as well as include the definitions of the element
<tt class="literal">person</tt> and its child elements:
</p>

<blockquote><pre class="code">&lt;?xml version="1.0"?&gt; 
&lt;xs:schema targetNamespace="http://dyomedea.com/ns/people"
  elementFormDefault="qualified" attributeFormDefault="unqualified"
  xmlns:ppl="http://dyomedea.com/ns/people"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
  &lt;xs:element name="person"&gt;
    &lt;xs:complexType&gt;
      &lt;xs:sequence&gt;
        &lt;xs:element name="name" type="xs:string"/&gt;
        &lt;xs:element name="born" type="xs:date"/&gt;
        &lt;xs:element name="dead" type="xs:date" minOccurs="0"/&gt; 
        &lt;xs:element name="qualification" type="xs:string"
          minOccurs="0"/&gt;
      &lt;/xs:sequence&gt;
      &lt;xs:attribute name="id" type="xs:ID" use="required"/&gt;
    &lt;/xs:complexType&gt;
  &lt;/xs:element&gt;
&lt;/xs:schema&gt;</pre></blockquote>

<p>This schema describes the namespace
<tt class="literal">"http://dyomedea.com/ns/people"</tt>,
and this vocabulary doesn't include anything from
any other namespace. The schema is then similar to the examples
we've seen in this chapter so far. It can be used
alone with documents that use only this namespace, but can also be
"imported" by schemas that describe
other namespaces but would like to use some of its definitions.
</p>

<p>To do this, the schema that describes the including vocabulary needs
two pieces of information. It must have a prefix for the namespaces
that will be included; this is done by a usual namespace declaration.
It also must have a hint on where it can find the schema for this
namespace; this is done using a <tt class="literal"><a href="ch15_01.htm">xs:import</a></tt><a name="INDEX-783" /> <a name="INDEX-784" /> element:
</p>

<blockquote><pre class="code">&lt;xs:import namespace="http://dyomedea.com/ns/people"
  schemaLocation="simple-2-ns-ppl.xsd"/&gt;</pre></blockquote>

<p>The schema now has all the information it needs to resolve references
to schema components that belong to the
<tt class="literal">http://dyomedea.com/ns/people</tt> namespace.
References can be made just using its prefix:
</p>

<blockquote><pre class="code">&lt;xs:element ref="ppl:person"/&gt;</pre></blockquote>

<p>A full schema for the library vocabulary can then be:</p>

<blockquote><pre class="code">&lt;?xml version="1.0"?&gt; 
&lt;xs:schema targetNamespace="http://dyomedea.com/ns/library"
  elementFormDefault="qualified" attributeFormDefault="unqualified"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:ppl="http://dyomedea.com/ns/people"
  xmlns:lib="http://dyomedea.com/ns/library"&gt; 
  &lt;xs:import namespace="http://dyomedea.com/ns/people"
    schemaLocation="simple-2-ns-ppl.xsd"/&gt;
  &lt;xs:element name="library"&gt;
    &lt;xs:complexType&gt;
      &lt;xs:sequence&gt;
        &lt;xs:element name="book" type="lib:bookType"/&gt;
      &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;
  &lt;/xs:element&gt;
  &lt;xs:complexType name="bookType"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="isbn" type="xs:NMTOKEN"/&gt;
      &lt;xs:element name="title" type="xs:string"/&gt;
      &lt;xs:element name="authors"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:element ref="ppl:person"/&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
      &lt;xs:element name="characters"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:element ref="ppl:person" maxOccurs="unbounded"/&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="id" type="xs:ID" use="required"/&gt;
    &lt;xs:attribute name="available" type="xs:string" use="required"/&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:schema&gt;</pre></blockquote>



<a name="ch10-11-fm2xml" /><blockquote><b>TIP:</b> 
When importing schemas from other namespaces, we can only refer to
the global components defined in <a name="INDEX-785" />the <a name="INDEX-786" />imported <a name="INDEX-787" />schemas. 
</p>
</blockquote>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch10_07.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">10.5. Namespaces and XPath Expressions</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">10.7. Schemas for XML, XML Base and XLink</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>