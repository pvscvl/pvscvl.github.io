<html><head><title>Schema Inclusion with Redefinition (XML Schema)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Eric van der Vlist" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002521L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML Schema" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML Schema" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch08_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">8.2. Schema Inclusion with Redefinition</h2>

<p>Inclusion <a name="INDEX-631" /> <a name="INDEX-632" />does <a name="INDEX-633" />not <a name="INDEX-634" />provide any means to modify the
definitions that are being included, and since they are considered
<a name="INDEX-635" />global definitions after the import, they
can't be modified afterward either. W3C XML Schema
contains a feature that allows derivation of global types and group
definitions during an inclusion; it keeps the same name after the
derivation. Thus, the semantic of these redefinitions is
"take this definition instead of the one
you've found in the included schema, but make sure
that it's a valid derivation so that applications
are not too surprised about the change." These are
implemented using the <tt class="literal"><a href="ch15_01.htm">xs:redefine</a></tt>
element with a
<tt class="literal">schemaLocation</tt><a name="INDEX-636" /> attribute (like
<tt class="literal">xs:include</tt>). Its children are component
definitions that replace the definition found in the included schema.
The definitions that are not included in the
<tt class="literal">xs:redefine</tt> element are kept unchanged, which
means that a <tt class="literal">xs:redefine</tt> with no child element is
strictly equivalent to <tt class="literal">xs:include</tt>.
</p>

<p>It is noteworthy that the effect of the redefinition is global to the
resulting schema. References made to redefined components are all
impacted by the modifications made to these components, even if they
are made within the redefined schema.
</p>

<a name="xmlschema-CHP-8-SECT-2.1" /><div class="sect2">
<h3 class="sect2">8.2.1. Redefining of Simple and Complex Types</h3>

<p>Simple <a name="INDEX-637" />
<a name="INDEX-638" />and
<a name="INDEX-639" />complex types are redefined by deriving
them (by restriction for simple types and by restriction or extension
for complex types) inside the <tt class="literal"><a href="ch15_01.htm">xs:redefine</a></tt> element. We can apply this to our
last example. The definition of <tt class="literal">bookTmp</tt> is
currently used to describe the <tt class="literal">book</tt> element though
derivation:
</p>

<blockquote><pre class="code">&lt;xs:element name="book"&gt;
  &lt;xs:complexType&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:restriction base="bookTmp"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element ref="isbn"/&gt;
          &lt;xs:element ref="title"/&gt; 
          &lt;xs:element ref="author" minOccurs="0"
            maxOccurs="unbounded"/&gt; 
          &lt;xs:element ref="character" minOccurs="0"
            maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:attribute name="id" type="bookID"/&gt;
        &lt;xs:attribute ref="available"/&gt;
      &lt;/xs:restriction&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:element&gt;</pre></blockquote>

<p>Instead of doing this, we can also redefine the definition of the
<tt class="literal">book</tt> complex type. The new schema to define the
complex types is then:
</p>

<blockquote><pre class="code">&lt;?xml version="1.0"?&gt; 
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
  &lt;xs:complexType name="elementWithID"&gt;
    &lt;xs:attribute ref="id"/&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="book"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="elementWithID"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element ref="isbn"/&gt;
          &lt;xs:element ref="title"/&gt; 
          &lt;xs:element ref="author" minOccurs="0"
            maxOccurs="unbounded"/&gt; 
          &lt;xs:element ref="character" minOccurs="0"
            maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:attribute ref="available"/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="personType"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="elementWithID"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element ref="name"/&gt;
          &lt;xs:element ref="born"/&gt;
          &lt;xs:element ref="dead" minOccurs="0"/&gt;
          &lt;xs:element ref="qualification" minOccurs="0"/&gt;
        &lt;/xs:sequence&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:schema&gt;</pre></blockquote>

<p>The redefinition--note how a <tt class="literal">book</tt> complex type is
redefined using a base type with the same name, which would be
forbidden anywhere else--and usage of the
<tt class="literal">book</tt> element looks like:
</p>

<blockquote><pre class="code">&lt;xs:redefine schemaLocation="complex-types2.xsd"&gt;
  &lt;xs:complexType name="book"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:restriction base="book"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element ref="isbn"/&gt;
          &lt;xs:element ref="title"/&gt; 
          &lt;xs:element ref="author" minOccurs="0"
            maxOccurs="unbounded"/&gt; 
          &lt;xs:element ref="character" minOccurs="0"
            maxOccurs="unbounded"/&gt;
        &lt;/xs:sequence&gt;
        &lt;xs:attribute name="id" type="bookID"/&gt;
        &lt;xs:attribute ref="available"/&gt;
      &lt;/xs:restriction&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:redefine&gt;
          
&lt;xs:element name="book" type="book"/&gt;</pre></blockquote>

</div>
<a name="xmlschema-CHP-8-SECT-2.2" /><div class="sect2">
<h3 class="sect2">8.2.2. Redefinition of Element and Attribute Groups</h3>

<p>The <a name="INDEX-640" />
<a name="INDEX-641" />redefinition
of complex and simple types seems quite natural and should not be
much of a surprise, since it builds on things we've
discussed in detail in previous chapters. The new part of
<tt class="literal"><a href="ch15_01.htm">xs:redefine</a></tt> is that element and
attribute groups--which cannot be derived--can also be
redefined. Redefinition of element and attribute groups is done
without any special schema element: a group redefinition that
contains a reference to itself is considered an extension; otherwise,
it's considered a restriction. These two methods
have their own rules and semantics, which are similar but not
identical to the rules and semantics of the derivation of complex
types. These deserve a specific description. As we will see, the
general principles are the same, and the asymmetry between extension
and restriction is preserved for group redefinitions.
</p>

<a name="xmlschema-CHP-8-SECT-2.2.1" /><div class="sect3">
<h3 class="sect3">8.2.2.1. Extension</h3>

<p>Group <a name="INDEX-642" /> <a name="INDEX-643" />extensions
<a name="INDEX-644" />are
done by referencing the group somewhere in its redefinition. The
semantic is, therefore, similar to the semantic of the derivation by
extension of complex content complex types (some new content is added
to the base type) with more flexibility. The location where the
content of the base type is added may be chosen during the extension
of a complex content complex type, and the new content is always
appended after the content of the base type. If we have, for
instance, a group definition such as:
</p>

<blockquote><pre class="code">&lt;?xml version="1.0"?&gt; 
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
  &lt;xs:group name="character"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element ref="born"/&gt;
      &lt;xs:element ref="qualification"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:group&gt;
&lt;/xs:schema&gt;</pre></blockquote>

<p>We can redefine it to add the <tt class="literal">name</tt> element, which
is missing at the beginning of the content:
</p>

<blockquote><pre class="code">&lt;xs:redefine schemaLocation="character-group.xsd"&gt;
  &lt;xs:group name="character"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element ref="name"/&gt;
      &lt;xs:group ref="character"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:group&gt;
&lt;/xs:redefine&gt;
             
&lt;xs:element name="character"&gt;
  &lt;xs:complexType&gt;
    &lt;xs:group ref="character"/&gt;
    &lt;xs:attribute ref="id"/&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:element&gt;</pre></blockquote>

<p>We see that we have been able to choose the insertion point of the
content of the base group, which is after the <tt class="literal">name</tt>
element. The <tt class="literal">name</tt> element has been added; this is
an enhancement over complex content complex type derivation.
</p>

<p>This method of extending element or attribute groups is clearly
underspecified in the Recommendation and should be used in its
simplest form with caution to avoid interoperability issues. The
Recommendation specifies that the
<tt class="literal">minOccurs</tt><a name="INDEX-645" /> and
<tt class="literal">maxOccurs</tt><a name="INDEX-646" /> attributes of the reference need
to be exactly one, which shows a wish to include the content of the
base group during an extension exactly one time. However, the wording
of the Recommendation does not forbid inclusion of this reference in
a branch that has a different number of occurrences, such as:
</p>

<blockquote><pre class="code">&lt;xs:redefine schemaLocation="bar.xsd"&gt;
  &lt;xs:group name="foo"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:sequence minOccurs="0"&gt;
        &lt;xs:group ref="foo"/&gt;
      &lt;/xs:sequence&gt;
      &lt;xs:element ref="bar"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:group&gt;
&lt;/xs:redefine&gt;</pre></blockquote>

<p>This is functionally equivalent to having
<tt class="literal">minOccurs</tt> equal to zero on the group reference and
allows content models without any occurrences of the base group.
Since this is contrary to the philosophy behind derivations by
extension, these kind of structures shouldn't be
used. Similarly, the Recommendation does not forbid the use of
another compositor other than a <tt class="literal">xs:sequence</tt> to
redefine a group. However, since using <a name="INDEX-647" /><tt class="literal">xs:choice</tt>
instead of <tt class="literal">xs:sequence</tt> leads to redefined groups in
which the content of the base can be omitted, this is certainly
something to avoid.
</p>

<p>The references used to extend groups during a redefinition must be
done at the top level of the group definition. The last thing to note
about element group extensions is that even though its syntax uses a
group reference to the group being defined, self references cannot be
used in regular global group definitions for defining recursive
content models. These need to be done at a lower level, such as:
</p>

<blockquote><pre class="code">&lt;xs:group name="group"&gt;
  &lt;!-- This group definition is *not* valid --&gt;
  &lt;xs:sequence&gt;
    &lt;xs:element name="foo"&gt;
      &lt;xs:complexType&gt;
        &lt;xs:group ref="group" minOccurs="0"/&gt;
      &lt;/xs:complexType&gt;
    &lt;/xs:element&gt;
    &lt;xs:element name="bar" type="xs:token"/&gt;
  &lt;/xs:sequence&gt;
&lt;/xs:group&gt;</pre></blockquote>

</div>

<a name="xmlschema-CHP-8-SECT-2.2.2" /><div class="sect3">
<h3 class="sect3">8.2.2.2. Restriction</h3>

<p>The <a name="INDEX-648" /> <a name="INDEX-649" />redefinition <a name="INDEX-650" />of
attribute <a name="INDEX-651" />and element groups by
restriction is similar, in principle, to a derivation of a complex
content complex type by restriction. A new definition of the group is
given; this new definition must match the same criteria as that of a
complex content complex type restriction, and must be a valid
restriction of the base group. A content that matches the redefined
group must always match the base group and the elements used by the
new definition must be explicit restrictions of the elements used in
the base group. If we have a group definition available, such as:
</p>

<blockquote><pre class="code">&lt;?xml version="1.0"?&gt; 
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
  &lt;xs:group name="author"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element ref="name"/&gt;
      &lt;xs:element ref="born"/&gt;
      &lt;xs:element ref="dead" minOccurs="0"/&gt;
      &lt;xs:element name="nationality" type="xs:NMTOKEN" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:group&gt;
&lt;/xs:schema&gt;</pre></blockquote>

<p>We can redefine it to remove the element
<tt class="literal">nationality</tt>, which is optional:
</p>

<blockquote><pre class="code">&lt;xs:redefine schemaLocation="author.xsd"&gt;
  &lt;xs:group name="author"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element ref="name"/&gt;
      &lt;xs:element ref="born"/&gt;
      &lt;xs:element ref="dead" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:group&gt;
&lt;/xs:redefine&gt;
             
&lt;xs:element name="author"&gt;
  &lt;xs:complexType&gt;
    &lt;xs:group ref="author"/&gt;
    &lt;xs:attribute ref="id"/&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:element&gt;</pre></blockquote>

<p>Before we leave this subject, we need to note that the rules for
restricting <a name="INDEX-652" />attribute groups are different than the
rules for restricting complex types. The list of attributes must
include all the attributes that are kept. (This is unlike complex
type restrictions in which attributes that are not mentioned are
considered unchanged.) If we have an attribute group such as:
</p>

<blockquote><pre class="code">&lt;xs:attributeGroup name="commonAttributes"&gt;
  &lt;xs:attribute name="id" type="xs:ID"/&gt;
  &lt;xs:attribute name="available" type="xs:boolean"/&gt;
  &lt;xs:attribute name="lang" type="xs:language"/&gt;
&lt;/xs:attributeGroup&gt;</pre></blockquote>

<p>If we want to restrict it to remove the <tt class="literal">available</tt>
attribute through a redefinition, we then must repeat the definitions
of the two other attributes:
</p>

<a name="INDEX-653" /><a name="INDEX-654" /><a name="INDEX-655" /><a name="INDEX-656" /><a name="INDEX-657" /><a name="INDEX-658" /><a name="INDEX-659" /><a name="INDEX-660" /><blockquote><pre class="code">&lt;xs:redefine schemaLocation="attributes.xsd"&gt;
  &lt;xs:attributeGroup name="commonAttributes"&gt;
    &lt;xs:attribute name="id" type="xs:ID"/&gt;
    &lt;xs:attribute name="lang" type="xs:language"/&gt;
  &lt;/xs:attributeGroup&gt;
&lt;/xs:redefine&gt;
</pre></blockquote>

</div>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch08_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">8. Creating Building Blocks</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">8.3. Other Alternatives</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>