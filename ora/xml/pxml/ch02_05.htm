<html><head><title>Entities (Perl and XML)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Erik T. Ray and Jason McIntosh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600205XL" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl and XML" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl &amp; XML" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_04.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch02_06.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>



<h2 class="sect1">2.5. Entities</h2>

<p>For<a name="INDEX-94" />
<a name="INDEX-95" /> your
authoring convenience, XML has another feature called
<em class="emphasis">entities</em>. An entity is useful when you need a
placeholder for text or markup that would be inconvenient or
impossible to just type in. It's a piece of XML set
aside from your document;<a href="#FOOTNOTE-8">[8]</a> you use an <em class="emphasis">entity
reference</em><a name="INDEX-96" /> to stand in for it. An XML processor
must resolve all entity references with their replacement text at the
time of parsing. Therefore, every referenced entity must be declared
somewhere so that the processor knows how to resolve it.
</p><blockquote class="footnote"> <a name="FOOTNOTE-8" /><p>[8]Technically, the whole
document is one entity, called the <em class="emphasis">document
entity</em>. However, people usually use the term
"entity" to refer to a subset of
the document. </p> </blockquote>

<p>The <em class="emphasis">Document Type
Declaration</em><a name="INDEX-97" /> (DTD) is the place to declare an
entity. It has two parts, the <em class="emphasis">internal
subset</em><a name="INDEX-98" /> that is part of your document, and the
<em class="emphasis">external subset</em><a name="INDEX-99" /> <a name="INDEX-100" /> that lives in another document.
(Often, people talk about the external subset as
"the DTD" and call the internal
subset "the internal subset," even
though both subsets together make up the whole DTD.) In both places,
the method for declaring entities is the same. The document in <a href="ch02_05.htm">Example 2-3</a> shows how this feature works.
</p>

<a name="perlxml-CHP-2-EX-3" /><div class="example">
<h4 class="objtitle">Example 2-3. A document with entity declarations </h4>
<blockquote><pre class="code">&lt;!DOCTYPE memo
  SYSTEM "/xml-dtds/memo.dtd"
[
  &lt;!ENTITY companyname "Willy Wonka's Chocolate Factory"&gt;
  &lt;!ENTITY healthplan  SYSTEM "hp.txt"&gt;
]&gt;

&lt;memo&gt;
  &lt;to&gt;All Oompa-loompas&lt;/to&gt;
  &lt;para&gt;
    &amp;companyname; has a new owner and CEO, Charlie Bucket. Since
    our name, &amp;companyname;, has considerable brand recognition,
    the board has decided not to change it. However, at Charlie's
    request, we will be changing our healthcare provider to the
    more comprehensive &amp;Uuml;mpacare, which has better facilities
    for 'Loompas (text of the plan to follow). Thank you for working
    at &amp;companyname;!
  &lt;/para&gt;
  &amp;healthplan;
&lt;/memo&gt;</pre></blockquote>
</div>

<p>Let's examine the new material in this example. At
the top is the DTD, a special markup instruction that contains a lot
of important information, including the internal subset and a path to
the external subset. Like all declarative markup (i.e., it defines
something new), it starts with an exclamation point, and is followed
by a keyword, <tt class="literal">DOCTYPE</tt><a name="INDEX-101" />. After that keyword is the name of an
element that will be used to contain the document. We call that
element the <em class="emphasis">root
element</em><a name="INDEX-102" /> <a name="INDEX-103" /> or <em class="emphasis">document
element</em>. This element is followed by a path to the
external subset, given by <tt class="literal">SYSTEM
"/xml-dtds/memo.dtd"</tt>, and the internal subset of
declarations, enclosed in <a name="INDEX-104" /> <a name="INDEX-105" />square brackets ([ ]).
</p>

<p>The external subset is used for declarations that will be used in
many documents, so it naturally resides in another file. The internal
subset is best used for declarations that are local to the document.
They may override declarations in the external subset or contain new
ones. As you see in the example, two entities are declared in the
internal subset. An entity declaration has two parameters: the entity
name and its replacement text. The entities are named
<tt class="literal">companyname</tt> and <tt class="literal">healthplan</tt>.
</p>

<p>These entities are called<a name="INDEX-106" /> <em class="emphasis">general entities</em>
and are distinguished from other kinds of entities because they are
declared by you, the author. Replacement text for general entities
can come from two different places. The first entity declaration
defines the text within the declaration itself. The second points to
another file where the text resides. It uses a <em class="emphasis">system
identifier</em><a name="INDEX-107" /> to specify the
file's location, acting much like a URL used by a
web browser to find a page to load. In this case, the file is loaded
by an XML processor and inserted verbatim wherever an entity is
referenced. Such an entity is called an <em class="emphasis">external
entity</em>.
</p>

<p>If you look closely at the example, you'll see
markup instructions of the form
<tt class="literal">&amp;</tt><em class="replaceable">name</em>;. The
<a name="INDEX-108" />
<a name="INDEX-109" />ampersand
(<tt class="literal">&amp;</tt>) indicates an entity reference, where
<em class="replaceable">name</em> is the name of the entity being
referenced. The same reference can be used repeatedly, making it a
convenient way to insert repetitive text or markup, as we do with the
entity <tt class="literal">companyname</tt>.
</p>

<p>An entity can contain markup as well as text, as is the case with
<tt class="literal">healthplan</tt> (actually, we don't
know what's in that entity because
it's in another file, but since
it's going to be a large document, you can assume it
will have markup as well as text). An entity can even contain other
entities, to any nesting level you want. The only restriction is that
entities can't contain themselves, at any level,
lest you create a circular definition that can never be constructed
by the XML processor. Some XML technologies, such as XSLT, do let you
have fun with recursive logic, but think of entity references as code
constants -- playing with circular references here will make any
parser very unhappy.
</p>

<p>Finally, the <tt class="literal">&amp;Uuml;</tt> entity reference is
declared somewhere in the external subset to fill in for a character
that the chocolate factory's ancient text editor
programs have trouble rendering -- in this case, a capital
"U" with an umlaut over it:
&Uuml;. Since the referenced entity is one character wide, the
reference in this case is almost more of an alias than a pointer. The
usual way to handle unusual characters (the way
that's built into the XML specification) involves
using a numeric <a name="INDEX-110" /> <a name="INDEX-111" /> <a name="INDEX-112" />character entity, which, in
this case, would be <tt class="literal">&amp;#00DC;</tt>.
<tt class="literal">0x00DC</tt> is the hexadecimal equivalent of the number
220, which is the position of the U-umlaut character in Unicode (the
character set used natively by XML, which we cover in more detail in
the next section).
</p>

<p>However, since an abbreviated descriptive name like
<tt class="literal">Uuml</tt> is generally easier to remember than the
arcane <tt class="literal">00DC</tt>, some XML users prefer to use these
types of aliases by placing lines such as this into their<a name="INDEX-113" /> <a name="INDEX-114" />
documents' DTDs:
</p>

<blockquote><pre class="code">&lt;!ENTITY % Uuml &amp;#x00DC;&gt;</pre></blockquote>

<p>XML recognizes only five built-in, named entity references, shown in
<a href="ch02_05.htm">Table 2-1</a>. They're not actually
references, but are escapes for five punctuation marks that have
special meaning for XML.
</p>

<a name="perlxml-CHP-2-TABLE-1" /><h4 class="objtitle">Table 2-1. XML entity references</h4><table border="1">



<tr>
<th>
<p>Character</p>
</th>
<th>
<p>Entity</p>
</th>
</tr>


<tr>
<td>
<p><tt class="literal">&lt;</tt></p>
</td>
<td>
<p><tt class="literal">&amp;lt;</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&gt;</tt></p>
</td>
<td>
<p><tt class="literal">&amp;gt;</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">&amp;</tt></p>
</td>
<td>
<p><tt class="literal">&amp;amp;</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">"</tt></p>
</td>
<td>
<p><tt class="literal">&amp;quot;</tt></p>
</td>
</tr>
<tr>
<td>
<p><tt class="literal">'</tt></p>
</td>
<td>
<p><tt class="literal">&amp;apos;</tt></p>
</td>
</tr>

</table><p>

<p>The only two of these references that must be used throughout any XML
document are <tt class="literal">&amp;lt</tt> and
<tt class="literal">&amp;amp;</tt>. Element tags and entity references can
appear at any point in a document. No parser could guess, for
example, whether a <tt class="literal">&lt;</tt> character is used as a
less-than math symbol or as a genuine XML token; it will always
assume the latter and will report a malformed document if this
assumption proves false.
</p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_04.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch02_06.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">2.4. Spacing</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">2.6. Unicode, Character Sets, and Encodings</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="index.htm"></map>

</body></html>