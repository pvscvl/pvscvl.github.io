<html><head><title>XML::Handler::YAWriter as a Base Handler Class (Perl and XML)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Erik T. Ray and Jason McIntosh" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600205XL" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Perl and XML" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Perl &amp; XML" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch05_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch05_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>



<h2 class="sect1">5.6. XML::Handler::YAWriter as a Base Handler Class</h2>

<p>Michael
Koehne's<a name="INDEX-412" /> <a name="INDEX-413" /> <tt class="literal">XML::Handler::YAWriter</tt>
serves as the "yet another" XML
writer it bills itself as, but in doing so also sets itself up as a
handy base class for all sorts of SAX-related work.
</p>

<p>If you've ever worked with Perl's
various <tt class="literal">Tie::*</tt> base classes, the idea is similar:
you start out with a base class with callbacks defined that
don't do anything very exciting, but by their
existence satisfy all the subroutine calls triggered by SAX events.
In your own driver class, you simply redefine the subroutines that
should do something special and let the default behavior rule for all
the events you don't care much about.
</p>

<p>The default behavior, in this case, gives you something nice, too:
access to an array of strings (stored as an instance variable on the
handler object) holding the XML document that the incoming SAX events
built. This isn't necessarily very interesting if
your data source was XML, but if you use a PerlSAXish driver to
generate an event stream out of an unsuspecting data source, then
this feature is lovely. It gives you an easy way to, for instance,
convert a non-XML file into its XML equivalent and save it to disk.
</p>

<p>The trade-off is that you must remember to invoke
<tt class="literal">$self-&gt;SUPER::[methodname]</tt> with all your own
event handler methods. Otherwise, your class may forget its roots and
fail to add things to that internal strings array in its youthful
na&iuml;vet&eacute;, and thus leave embarrassing holes in
the generated XML document.
</p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch05_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch05_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">5.5. A Handler Base Class</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">5.7. XML::SAX: The Second Generation</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map"><area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="index.htm"></map>

</body></html>