<html><head><title>XSL Transformations (XSLT) (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch07_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch08_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Chapter 8. XSL Transformations (XSLT)</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch08_01.htm">An Example Input Document</a><br />
<a href="ch08_02.htm">xsl:stylesheet and xsl:transform</a><br />
<a href="ch08_03.htm">Stylesheet Processors</a><br />
<a href="ch08_04.htm">Templates and Template Rules</a><br />
<a href="ch08_05.htm">Calculating the Value of an Element with xsl:value-of</a><br />
<a href="ch08_06.htm">Applying Templates with xsl:apply-templates</a><br />
<a href="ch08_07.htm">The Built-in Template Rules</a><br />
<a href="ch08_08.htm">Modes</a><br />
<a href="ch08_09.htm">Attribute Value Templates</a><br />
<a href="ch08_10.htm">XSLT and Namespaces</a><br />
<a href="ch08_11.htm">Other XSLT Elements</a><br /></p></div><p>The <a name="xmlnut2-IDXTERM-742" />Extensible
<a name="IXT-8-239697" />Stylesheet Language (XSL) is
divided into two parts: XSL Transformations (XSLT) and XSL Formatting
Objects (XSL-FO). This chapter describes XSLT. <a href="ch13_01.htm">Chapter 13</a> covers XSL-FO.
</p><p>XSLT is an XML application for specifying rules by which one XML
document is transformed into another XML document. An XSLT
document--that is, an <a name="IXT-8-239698" />XSLT stylesheet--contains
template rules. Each template rule has a pattern and a template. An
<a name="IXT-8-239699" />XSLT
processor compares the elements and other nodes in an input XML
document to the template-rule patterns in a stylesheet. When one
matches, it writes the template from that rule into the output tree.
When it's done, it may further serialize the output
tree into an XML document or some other format like plain text or
HTML.
</p><p>This chapter describes the template rules and a few other elements
that appear in an XSLT stylesheet. XSLT uses the XPath syntax to
identify matching nodes. We'll introduce a few
pieces of XPath here, but most of it will be covered in <a href="ch09_01.htm">Chapter 9</a>. 
</p><div class="sect1"><a name="xmlnut2-CHP-8-SECT-1" />
<h2 class="sect1">8.1. An Example Input Document</h2>

<p>To demonstrate XSL transformations, we first need a document to
transform. <a href="ch08_01.htm">Example 8-1</a> shows the document used in
this chapter. The root element is <tt class="literal">people</tt>, which
contains two <tt class="literal">person</tt> elements. The
<tt class="literal">person</tt> elements have roughly the same structure (a
name followed by professions and hobbies) with some differences. For
instance, <a name="xmlnut2-IDXTERM-746" />Alan Turing has three professions, but
Richard <a name="xmlnut2-IDXTERM-747" />Feynman only has one. Feynman has a
<tt class="literal">middle_initial</tt> and a <tt class="literal">hobby</tt>, but
Turing doesn't. Still these are clearly variations
on the same basic structure. A DTD that permitted both of these would
be easy to write.
</p>

<a name="xmlnut2-CHP-8-EX-1" /><div class="example">
<h4 class="objtitle">Example 8-1. An XML document describing two people </h4>
<blockquote><pre class="code">&lt;?xml version="1.0"?&gt;
&lt;people&gt;
  &lt;person born="1912" died="1954"&gt;
    &lt;name&gt;
      &lt;first_name&gt;Alan&lt;/first_name&gt;
      &lt;last_name&gt;Turing&lt;/last_name&gt;
    &lt;/name&gt;
    &lt;profession&gt;computer scientist&lt;/profession&gt;
    &lt;profession&gt;mathematician&lt;/profession&gt;
    &lt;profession&gt;cryptographer&lt;/profession&gt;
  &lt;/person&gt;
  &lt;person born="1918" died="1988"&gt;
    &lt;name&gt;
      &lt;first_name&gt;Richard&lt;/first_name&gt;
      &lt;middle_initial&gt;P&lt;/middle_initial&gt;
      &lt;last_name&gt;Feynman&lt;/last_name&gt;
    &lt;/name&gt;
    &lt;profession&gt;physicist&lt;/profession&gt;
    &lt;hobby&gt;Playing the bongoes&lt;/hobby&gt;
  &lt;/person&gt;
&lt;/people&gt;</pre></blockquote>
</div>

<p><a href="ch08_01.htm">Example 8-1</a> is an XML document. For purposes of this
example, it will be stored in a file called
<em class="filename">people.xml</em>. It doesn't have a
DTD; however, this is tangential. XSLT works equally well with valid
and invalid (but well-formed) documents. This document
doesn't use namespaces either, though it could. XSLT
works just fine with namespaces. Unlike DTDs, XSLT does pay attention
to the namespace URIs instead of the prefixes. Thus,
it's possible to use one prefix for an element in
the input document and different prefixes for the same namespace in
the stylesheet and output documents.
</p>

</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch07_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch08_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">7.4. Prospects for Improved Web-Search Methods</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">8.2. xsl:stylesheet and xsl:transform</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
      </map>

</body></html>