<html><head><title>XSL Formatting Objects (XSL-FO) (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch12_09.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch13_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Chapter 13. XSL Formatting Objects (XSL-FO)</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch13_01.htm">XSL Formatting Objects</a><br />
<a href="ch13_02.htm">The Structure of an XSL-FO Document</a><br />
<a href="ch13_03.htm">Laying Out the Master Pages</a><br />
<a href="ch13_04.htm">XSL-FO Properties</a><br />
<a href="ch13_05.htm">Choosing Between CSS and XSL-FO</a><br /></p></div><p>The <a name="xmlnut2-IDXTERM-1220" />last <a name="IXT-13-239861" />chapter covered CSS;
this chapter discusses XSL-FO. In distinct contrast to CSS, XSL-FO is
a complete XML application for describing the precise layout of text
on a page. It has elements that represent pages, blocks of text on
the pages, graphics, horizontal rules, and more. Most of the time,
however, you don't write XSL-FO directly. Instead,
you write an <a name="IXT-13-239862" />XSLT stylesheet that transforms your
document's native markup into XSL-FO. The
application rendering the document reads the XSL-FO and displays it
to the user. Since no major browsers currently support direct
rendering of XSL-FO documents, there's normally a
third step in which another processor transforms the XSL-FO into a
third format, such as PDF or TEX.
</p><p>Once again we demonstrate the features of XSL-FO by applying it to
the simple well-formed XML document shown in <a href="ch12_01.htm">Example 12-1</a> in the last chapter and repeated here in <a href="ch13_01.htm">Example 13-1</a> for convenience.
</p><a name="xmlnut2-CHP-13-EX-1" /><div class="example">
<h4 class="objtitle">Example 13-1. Marjorie Anderson's recipe for Southern Corn Bread </h4>
<blockquote><pre class="code">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;recipe source="Marjorie Anderson"&gt;
  &lt;dish&gt;Southern Corn Bread&lt;/dish&gt;
  &lt;ingredients&gt;
    &lt;ingredient&gt;
      &lt;quantity&gt;1 cup&lt;/quantity&gt;
      &lt;component&gt;flour&lt;/component&gt;
    &lt;/ingredient&gt;
    &lt;ingredient&gt;
      &lt;quantity&gt;4 tablespoons&lt;/quantity&gt;
      &lt;component&gt;Royal Baking Powder&lt;/component&gt;
    &lt;/ingredient&gt;
    &lt;ingredient&gt;
      &lt;quantity&gt;<sup class="superscript">1</sup>/<sub class="subscript">2</sub> teaspoon&lt;/quantity&gt;
      &lt;component&gt;salt&lt;/component&gt;
    &lt;/ingredient&gt;
    &lt;ingredient&gt;
      &lt;quantity&gt;1 cup&lt;/quantity&gt;
      &lt;component&gt;corn meal&lt;/component&gt;
    &lt;/ingredient&gt;
    &lt;ingredient&gt;
      &lt;quantity&gt;1<sup class="superscript">1</sup>/<sub class="subscript">2</sub> cups&lt;/quantity&gt;
      &lt;component&gt;whole milk&lt;/component&gt;
    &lt;/ingredient&gt;
    &lt;ingredient&gt;
      &lt;quantity&gt;4 tablespoons&lt;/quantity&gt;
      &lt;component&gt;melted butter&lt;/component&gt;
    &lt;/ingredient&gt;
  &lt;/ingredients&gt;

  &lt;directions&gt;
    &lt;step&gt;Sift flour, baking powder, sugar &amp;amp; salt together.&lt;/step&gt;
    &lt;step&gt;Add 1 cup corn meal.&lt;/step&gt;
    &lt;step&gt;
      Beat egg in cup and add beaten egg and 1<sup class="superscript">1</sup>/<sub class="subscript">2</sub> cups whole
       milk to make a batter. Stir well.
    &lt;/step&gt;
    &lt;step&gt;
      Add melted shortening and beat until light and thoroughly mixed.
    &lt;/step&gt;
    &lt;step&gt;
      Pour into greased shallow pan or greased muffin rings.
    &lt;/step&gt;
    &lt;step&gt;
      Bake in hot oven at &lt;temperature&gt;425&#xBA; F&lt;/temperature&gt; for
      &lt;duration&gt;25 minutes&lt;/duration&gt;.
    &lt;/step&gt;
    &lt;step optional="yes"&gt;
      Cut into squares if cooked in shallow pan.
    &lt;/step&gt;
  &lt;/directions&gt;

  &lt;story&gt;
    After my mother-in-law &lt;person&gt;Marjorie Anderson&lt;/person&gt; died,
    Beth and I found this recipe written on the "extra recipes"
    page in a local cookbook in her cupboard.
    This was published by the The Episcopal Churchwomen,
    Church of Ascension, &lt;city&gt;Mt. Sterling&lt;/city&gt;,
    &lt;state&gt;Kentucky&lt;/state&gt;.
  &lt;/story&gt;
&lt;/recipe&gt;</pre></blockquote>
</div><div class="sect1"><a name="xmlnut2-CHP-13-SECT-1" />
<h2 class="sect1">13.1. XSL Formatting Objects</h2>

<p>An XSL-FO document describes the layout of a series of nested boxes
or areas that are placed on one or more pages. These
<a name="IXT-13-239863" />boxes contain text or occasionally other
items, such as an external image or a horizontal rule. There are four
kinds of boxes:
</p>

<ul><li>
<p><a name="IXT-13-239864" />Block
areas
</p>
</li><li>
<p><a name="IXT-13-239865" />Inline
areas
</p>
</li><li>
<p><a name="IXT-13-239866" />Line
areas
</p>
</li><li>
<p><a name="IXT-13-239867" />Glyph
areas
</p>
</li></ul>
<p>Block and inline areas are created by particular elements in the
formatting objects document. Line and glyph areas are created by the
formatter as necessary. For the most part, the rendering engine
decides exactly where to place the boxes and how big to make them,
based on their contents. However, you can specify properties for
these boxes that adjust both their relative and absolute position,
spacing, and size on a page. Most of the time the individual boxes
don't overlap. However, they can be forced to do so
by setting the properties <tt class="literal">absolute-position</tt>,
<tt class="literal">left</tt>, <tt class="literal">top</tt>,
<tt class="literal">right</tt>, and <tt class="literal">top</tt> on the boxes.
</p>

<p>Considered by itself, each box has a content area in which its
content, generally text but possibly an image or a rule, is placed.
This content area is surrounded by a padding area of blank space. An
optional border can surround the padding. The size of the area is the
combined size of the border, padding, and content. The box may also
have a margin that adds blank space outside the
box's area, as diagramed in <a href="ch13_01.htm">Figure 13-1</a>.
</p>

<a name="xmlnut2-CHP-13-FIG-1" /><div class="figure"><img src="figs/XIAN2_1301.gif" alt="Figure 13-1" width="324" /></div><h4 class="objtitle">Figure 13-1. Content, padding, border, and margin of an XSL-FO area</h4>

<p>Text <a name="IXT-13-239868" />properties
such as font family, font size, alignment, and font weight can be
applied by attaching the appropriate properties to one of the boxes
that contains the text. Text takes on the properties specified on the
nearest enclosing box. Properties are set by attaching attributes to
the elements that generate the boxes. For the most part these
properties have the same semantics as the CSS properties of the same
name. Only the syntax for applying the properties to particular
ranges of text is different.
</p>

<p>The <a name="IXT-13-239869" />elements
in the XSL-FO document do not map in a one-to-one fashion to the
boxes on the page. Instead, the XSL-FO document contains a slightly
more abstract representation of the document. The formatting software
uses the XSL-FO elements to decide which boxes to create and where to
place them. In the process it will split the large blocks, which the
XSL-FO document describes with
<tt class="literal">fo:block</tt><a name="IXT-13-239870" /> <a name="IXT-13-239871" /> elements, into smaller line and glyph
areas. It may also split single block areas that the XSL-FO document
describes into multiple block areas if a page break is required in
the middle of a large block, though XSL-FO does let you prevent these
breaks if necessary. The formatter also generates the correct number
of pages for the content that's found. In short, the
XSL-FO document contains hints and instructions that the formatter
uses to decide what items to place where on which pages, but you do
not need to specify the exact position of each and every box.
</p>

</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch12_09.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch13_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">12.9. Colors</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">13.2. The Structure of an XSL-FO Document</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
      </map>

</body></html>