<html><head><title>Extended Links (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch10_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">10.4. Extended Links</h2>

<p>Whereas a <a name="xmlnut2-IDXTERM-1005" />simple
<a name="IXT-10-240570" />link <a name="xmlnut2-IDXTERM-1007" />describes a single unidirectional
connection between one XML element and one remote resource, an
extended link describes a collection of resources and a collection of
paths between those resources. Each path connects exactly two
resources. Any individual resource may be connected to one of the
other resources, two of the other resources, zero of the other
resources, all of the other resources, or any subset of the other
resources in the collection. It may even be connected back to itself.
In computer science terms, an extended link is a directed, labeled
graph in which the paths are arcs, the documents are vertices, and
the URIs are labels.
</p>

<p>Simple links are very easy to understand by analogy with HTML links.
However, there's no obvious analogy for extended
links. What they look like, how applications treat them, what user
interfaces present them to people, is all up in the air. No simple
visual metaphors like "click on the blue underlined
text to jump to a new page" have been invented for
extended links, and no browsers support them. How
they'll be used and what user interfaces will be
designed for them remains to be seen.
</p>

<p>In XML, an extended link is represented by an extended link element,
that is, an element of arbitrary type that has an
<tt class="literal">xlink:type</tt><a name="IXT-10-240571" /> attribute with the value
<tt class="literal">extended</tt>. For example, this is an extended link
element that refers to the novel <em class="emphasis">The Wonderful Wizard of
Oz</em>:
</p>

<blockquote><pre class="code">&lt;novel xlink:type="extended"&gt;
  &lt;title&gt;The Wonderful Wizard of Oz&lt;/title&gt;
  &lt;author&gt;L. Frank Baum&lt;/author&gt;
  &lt;year&gt;1900&lt;/year&gt;
&lt;/novel&gt;</pre></blockquote>

<p>Although this extended link is quite Spartan, most extended links
contain local resources, remote resources, and arcs between those
resources. A <a name="IXT-10-240572" />remote resource is represented by a
locator element, that is, an element of any type that has an
<tt class="literal">xlink:type</tt> attribute with the value
<tt class="literal">locator</tt>. A <a name="IXT-10-240573" />local resource is represented
by a resource element, that is, an element of any type that has an
<tt class="literal">xlink:type</tt> attribute with the value
<tt class="literal">resource</tt>. And an arc between two resources,
whether local or remote, is represented by an arc element, that is,
an element of any type that has an <tt class="literal">xlink:type</tt>
attribute with the value <tt class="literal">arc</tt>.
</p>

<a name="xmlnut2-CHP-10-SECT-4.1" /><div class="sect2">
<h3 class="sect2">10.4.1. Locators</h3>

<p>Each <a name="IXT-10-240574" />
<a name="IXT-10-240575" />locator element has an
<tt class="literal">xlink:type</tt><a name="IXT-10-240576" /> attribute with the value
<tt class="literal">locator</tt> and an
<tt class="literal">xlink:href</tt><a name="IXT-10-240577" /> attribute containing a URI for the
resource it locates. For example, this <tt class="literal">novel</tt>
element for <em class="emphasis">The Wonderful Wizard of Oz</em> contains
three locator elements that identify particular editions of the book:
</p>

<blockquote><pre class="code">&lt;novel xlink:type = "extended"&gt;
  &lt;title&gt;The Wonderful Wizard of Oz&lt;/title&gt;
  &lt;author&gt;L. Frank Baum&lt;/author&gt;
  &lt;year&gt;1900&lt;/year&gt;
<b class="emphasis-bold">  &lt;edition xlink:type="locator" xlink:href="urn:isbn:0688069444" /&gt;</b>
<b class="emphasis-bold">  &lt;edition xlink:type="locator" xlink:href="urn:isbn:0192839306" /&gt;</b>
<b class="emphasis-bold">  &lt;edition xlink:type="locator" xlink:href="urn:isbn:0700609857" /&gt;</b>
&lt;/novel&gt;</pre></blockquote>

<p>Most of the time each locator element also has an
<tt class="literal">xlink:label</tt><a name="IXT-10-240578" /> <a name="IXT-10-240579" /> attribute that serves as a name for the
element. The value of this attribute can be any XML name that does
not contain a colon (i.e., that does not have a namespace prefix).
For instance, in the previous example, we could add labels based on
the ISBN number like this:
</p>

<blockquote><pre class="code">&lt;novel xlink:type = "extended"&gt;
  &lt;title&gt;The Wonderful Wizard of Oz&lt;/title&gt;
  &lt;author&gt;L. Frank Baum&lt;/author&gt;
  &lt;year&gt;1900&lt;/year&gt;
  &lt;edition xlink:type="locator" xlink:href="urn:isbn:0688069444"
<b class="emphasis-bold">                                xlink:label="ISBN0688069444"/&gt;</b>
  &lt;edition xlink:type="locator" xlink:href="urn:isbn:0192839306"
<b class="emphasis-bold">                                xlink:label="ISBN0192839306"/&gt;</b>
  &lt;edition xlink:type="locator" xlink:href="urn:isbn:0700609857"
<b class="emphasis-bold">                                xlink:label="ISBN0700609857"/&gt;</b>
&lt;/novel&gt;</pre></blockquote>

<p>The number alone cannot be used because XML names cannot start with
digits. In this and most cases, the labels are unique within the
extended link, but they don't absolutely have to be.
</p>

<p>Locators may also have the optional semantic attributes
<tt class="literal">xlink:title</tt><a name="IXT-10-240580" /> and
<tt class="literal">xlink:role</tt><a name="IXT-10-240581" /> to provide more information about the
remote resource. These attributes have the same meanings they have
for simple XLinks. The <tt class="literal">xlink:title</tt> attribute
contains a small amount of text describing the remote resource, and
the <tt class="literal">xlink:role</tt> attribute contains an absolute URI
that somehow describes or annotates the remote resource. For
instance, the <tt class="literal">edition</tt> elements could provide the
publisher's name and URL using these attributes like
this:
</p>

<blockquote><pre class="code">&lt;novel xlink:type = "extended"&gt;
  &lt;title&gt;The Wonderful Wizard of Oz&lt;/title&gt;
  &lt;author&gt;L. Frank Baum&lt;/author&gt;
  &lt;year&gt;1900&lt;/year&gt;
  &lt;edition xlink:type="locator" xlink:href="urn:isbn:0688069444"
<b class="emphasis-bold">           xlink:title="William Morrow"</b>
<b class="emphasis-bold">           xlink:role="http://www.williammorrow.com/"</b>
           xlink:label="ISBN0688069444"/&gt;
  &lt;edition xlink:type="locator" xlink:href="urn:isbn:0192839306"
<b class="emphasis-bold">           xlink:title="Oxford University Press"</b>
<b class="emphasis-bold">           xlink:role="http://www.oup-usa.org/"</b>
           xlink:label="ISBN0192839306"/&gt;
  &lt;edition xlink:type="locator" xlink:href="urn:isbn:0700609857"
<b class="emphasis-bold">           xlink:title="University Press of Kansas"</b>
<b class="emphasis-bold">           xlink:role="http://www.kansaspress.ku.edu/"</b>
           xlink:label="ISBN0700609857"/&gt;
&lt;/novel&gt;</pre></blockquote>

</div>
<a name="xmlnut2-CHP-10-SECT-4.2" /><div class="sect2">
<h3 class="sect2">10.4.2. Arcs</h3>

<p>Paths <a name="xmlnut2-IDXTERM-1019" /> <a name="xmlnut2-IDXTERM-1020" />between
resources are called <em class="emphasis">arcs</em>, and they are
represented by arc elements, that is, elements of arbitrary type that
have an <tt class="literal">xlink:type</tt><a name="xmlnut2-IDXTERM-1021" /> attribute with the value
<tt class="literal">arc</tt>. Each arc element should have an
<tt class="literal">xlink:from</tt> attribute and an
<tt class="literal">xlink:to</tt> attribute. The
<tt class="literal">xlink:from</tt><a name="xmlnut2-IDXTERM-1022" /> <a name="xmlnut2-IDXTERM-1023" /> attribute identifies the source of the
link<a name="xmlnut2-IDXTERM-1024" /> <a name="xmlnut2-IDXTERM-1025" />. The <tt class="literal">xlink:to</tt>
attribute identifies the target of the link. These attributes do not
contain URIs as you might expect. Rather they contain a name matching
the value of the <tt class="literal">xlink:label</tt> attribute of one of
the locator elements in the extended link.
</p>

<p><a href="ch10_04.htm">Example 10-1</a> shows an extended link that contains the
first three novels in the Wizard of Oz series: <em class="emphasis">The
Wonderful Wizard of Oz</em>, <em class="emphasis">The Marvelous Land of
Oz</em>, and <em class="emphasis">Ozma of Oz</em>. Arcs connect the
first book in the series to the second and the second to the third,
and then back again. In this example, the root
<tt class="literal">series</tt> element is the extended link element; each
<tt class="literal">novel</tt> element is a locator element; and the
<tt class="literal">next</tt> and <tt class="literal">previous</tt> elements are
arc elements.
</p>

<a name="xmlnut2-CHP-10-EX-1" /><div class="example">
<h4 class="objtitle">Example 10-1. An extended link with three locators and four arcs </h4>
<blockquote><pre class="code">&lt;series xlink:type="extended" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;

  &lt;author&gt;L. Frank Baum&lt;/author&gt;
  &lt;!-- locator elements --&gt;
  &lt;novel xlink:type="locator" xlink:label="oz1"
         xlink:href="ftp://archive.org/pub/etext/etext93/wizoz10.txt"&gt;
    &lt;title&gt;The Wonderful Wizard of Oz&lt;/title&gt;
    &lt;year&gt;1900&lt;/year&gt;
  &lt;/novel&gt;
  &lt;novel xlink:type="locator" xlink:label="oz2"
         xlink:href="ftp://archive.org/pub/etext/etext93/ozland10.txt"&gt;
    &lt;title&gt;The Marvelous Land of Oz&lt;/title&gt;
    &lt;year&gt;1904&lt;/year&gt;
  &lt;/novel&gt;
  &lt;novel xlink:type="locator" xlink:label="oz3"
         xlink:href="ftp://archive.org/pub/etext/etext93/wizoz10.txt"&gt;
    &lt;title&gt;Ozma of Oz&lt;/title&gt;
    &lt;year&gt;1907&lt;/year&gt;
  &lt;/novel&gt;

  &lt;!-- arcs --&gt;
<b class="emphasis-bold">  &lt;next     xlink:type="arc" xlink:from="oz1" xlink:to="oz2" /&gt;</b>
<b class="emphasis-bold">  &lt;next     xlink:type="arc" xlink:from="oz2" xlink:to="oz3" /&gt;</b>
<b class="emphasis-bold">  &lt;previous xlink:type="arc" xlink:from="oz2" xlink:to="oz1" /&gt;</b>
<b class="emphasis-bold">  &lt;previous xlink:type="arc" xlink:from="oz3" xlink:to="oz2" /&gt;</b>
&lt;/series&gt;</pre></blockquote>
</div>

<p><a href="ch10_04.htm">Figure 10-1</a> diagrams this extended link. Resources
are represented by books. Arcs are represented by arrows. However,
although we can understand this link in this sort of abstract sense,
this doesn't really tell us anything about how a
browser might present it to a user and how users might choose which
links to follow. For instance, this extended link might be
interpreted as nothing more than a list of the order in which to
print these documents. All details of interpretation are left up to
the application.
</p>

<a name="xmlnut2-CHP-10-FIG-1" /><div class="figure"><img src="figs/XIAN2_1001.gif" alt="Figure 10-1" width="432" /></div><h4 class="objtitle">Figure 10-1. An extended link with three resources and four arcs between them</h4>

<a name="xmlnut2-CHP-10-SECT-4.2.1" /><div class="sect3">
<h3 class="sect3">10.4.2.1. Multiple arcs from one arc element</h3>

<p>On occasion a single <a name="xmlnut2-IDXTERM-1026" />arc element defines
multiple arcs. If multiple elements share the same label, then an arc
element that uses that label in either its
<tt class="literal">xlink:to</tt> or <tt class="literal">xlink:from</tt>
attribute defines arcs between all resources that share that label.
<a href="ch10_04.htm">Example 10-2</a> shows an extended link containing
locator elements for three different online bookstores and one
edition of <em class="emphasis">The Wonderful Wizard of Oz</em>. Each
<tt class="literal">bookstore</tt> element has the label
<tt class="literal">buy</tt>, and a single <tt class="literal">purchase</tt> arc
element connects all of these. <a href="ch10_04.htm">Figure 10-2</a> shows the
graph structure of this extended link.
</p>

<a name="xmlnut2-CHP-10-EX-2" /><div class="example">
<h4 class="objtitle">Example 10-2. An extended link with one arc element but three arcs </h4>
<blockquote><pre class="code">&lt;book xlink:type="extended" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;

  &lt;author&gt;L. Frank Baum&lt;/author&gt;
  &lt;title&gt;The Wonderful Wizard of Oz&lt;/title&gt;

  &lt;!-- locator elements --&gt;
  &lt;edition xlink:type="locator" xlink:href="urn:isbn:0192839306"
           xlink:title="Oxford University Press"
           xlink:role="http://www.oup-usa.org/"
           xlink:label="ISBN0192839306"/&gt;

  &lt;store xlink:type="locator"
         xlink:href="http://www.amazon.com/exec/obidos/ASIN/0192839306"
         xlink:label="buy"&gt;Amazon&lt;/store&gt;

  &lt;store xlink:type="locator" xlink:href=
   "http://www1.fatbrain.com/asp/bookinfo/bookinfo.asp?theisbn=0192839306"
    xlink:label="buy"&gt;Fatbrain&lt;/store&gt;

  &lt;store xlink:type="locator" xlink:href=
"http://shop.bn.com/booksearch/isbninquiry.asp?isbn=0192839306"
    xlink:label="buy"&gt;Barnes &amp;amp; Noble&lt;/store&gt;

  &lt;!-- arcs --&gt;
  &lt;purchase xlink:type="arc" xlink:from="ISBN0192839306" xlink:to="buy" /&gt;

&lt;/book&gt;</pre></blockquote>
</div>

<a name="xmlnut2-CHP-10-FIG-2" /><div class="figure"><img src="figs/XIAN2_1002.gif" alt="Figure 10-2" width="292" /></div><h4 class="objtitle">Figure 10-2. One arc element can generate several arcs</h4>

<p>If an arc element does not have an <tt class="literal">xlink:to</tt>
attribute, then it uses all the resources in the extended link as
sources. If an arc element does not have an
<tt class="literal">xlink:from</tt> attribute, then it uses all the
resources in the extended link as targets.
</p>

<p>However, it is an error for more than one arc element to define an
arc between the same two resources, whether implicitly or explicitly.
For example, if an extended link contains N resources and an arc
element such as <tt class="literal">&lt;edition xlink:type="arc"/&gt;</tt>
with neither an <tt class="literal">xlink:to</tt> or
<tt class="literal">xlink:from</tt> attribute, then it cannot contain any
other arc elements because this one arc element defines all N2
possible arcs between the resources in the extended <a name="IXTR3-233" />link.
</p>

</div>

<a name="xmlnut2-CHP-10-SECT-4.2.2" /><div class="sect3">
<h3 class="sect3">10.4.2.2. Arc titles</h3>

<p>Each <a name="IXT-10-240582" /> <a name="IXT-10-240583" />arc element may optionally
have an
<tt class="literal">xlink:title</tt><a name="IXT-10-240584" /> attribute, just like all other XLink
elements. This contains a small amount of text describing the arc
intended for humans to read. For instance, in <a href="ch10_04.htm">Example 10-1</a>, we might give these titles to the arcs:
</p>

<blockquote><pre class="code">&lt;next     xlink:type="arc" xlink:from="oz1" xlink:to="oz2"
<b class="emphasis-bold">          xlink:title="Next" /&gt;</b>
&lt;next     xlink:type="arc" xlink:from="oz2" xlink:to="oz3"
<b class="emphasis-bold">          xlink:title="Next" /&gt;</b>
&lt;previous xlink:type="arc" xlink:from="oz2" xlink:to="oz1"
<b class="emphasis-bold">          xlink:title="Previous" /&gt;</b>
&lt;previous xlink:type="arc" xlink:from="oz3" xlink:to="oz2"
<b class="emphasis-bold">          xlink:title="Previous" /&gt;</b></pre></blockquote>

<p>When processing an extended link, a browser might show the title to
the user as the contents of a link so they could choose which arc
they wanted to follow from their current position, or they might
appear in a pop-up menu when the user was on one of the referenced
pages. XLink does not require or suggest any specific user interface
for arcs or arc titles.
</p>

</div>

<a name="xmlnut2-CHP-10-SECT-4.2.3" /><div class="sect3">
<h3 class="sect3">10.4.2.3. Arc roles</h3>

<p>Arc <a name="IXT-10-240585" /> <a name="IXT-10-240586" />elements cannot have
<tt class="literal">xlink:role</tt> attributes. However, an arc element can
have <a name="IXT-10-240587" /> <a name="IXT-10-240588" />an <tt class="literal">xlink:arcrole</tt>
attribute that contains an absolute URI pointing to a description of
the arc. More specifically, this URI should point to a resource that
indicates which relationship the arc describes (e.g., parent-child,
employer-employee). However, there's really no way
to validate this at all beyond checking to see that
<tt class="literal">xlink:arcrole</tt> does contain a legal URI (and even
that is not strictly required). For instance, in <a href="ch10_04.htm">Example 10-2</a> we might add an
<tt class="literal">xlink:arcrole</tt> attribute to the purchase arc that
pointed to the URL <em class="emphasis">http://www.example.com/purchase_details.txt</em>.
</p>

<blockquote><pre class="code">&lt;purchase xlink:type="arc" xlink:from="ISBN0192839306" xlink:to="buy"
          xlink:arcrole="http://www.example.com/purchase_details.txt" /&gt;</pre></blockquote>

<p>The file <em class="filename">purchase_details.html</em> might then
contain the text "will be bought
from." This would indicate that the source of the
link is bought from the target of the link; that is,
"<em class="emphasis">The Wonderful Wizard of Oz</em>
will be bought from Amazon," or
"<em class="emphasis">The Wonderful Wizard of Oz</em>
will be bought from Fatbrain," or
"<em class="emphasis">The Wonderful Wizard of Oz</em>
will be bought from Barnes &amp; Noble." However,
although this usage is suggested, XLink processors will not enforce
it, and indeed there's really no way they could be
asked to do this since that would require that they actually
understand what they read. The <tt class="literal">xlink:arcrole</tt>
attribute is optional. You don't have to include it
on your arcs, and XLink processors don't have to do
anything with it even if <a name="IXTR3-234" />you <a name="IXTR3-235" /> <a name="IXTR3-236" />do.
</p>

</div>
</div>
<a name="xmlnut2-CHP-10-SECT-4.3" /><div class="sect2">
<h3 class="sect2">10.4.3. Local Resources</h3>

<p>Locators <a name="IXT-10-240589" /> <a name="IXT-10-240590" />represent remote resources, that is,
resources that are not part of the document that contains the
extended link. Extended links can also contain local resources in
which the data is contained inside the extended link
<a name="IXT-10-240591" />element.
Each such resource is represented by a <em class="emphasis">resource
element</em>. This is an element of arbitrary type that has an
<tt class="literal">xlink:type</tt><a name="IXT-10-240592" /> attribute with the value
<tt class="literal">resource</tt>. For instance, in <a href="ch10_04.htm">Example 10-1</a> the <tt class="literal">series</tt> extended link
element contains an <tt class="literal">author</tt> child element. This can
easily be made a local resource simply by giving it an
<tt class="literal">xlink:type="resource"</tt> attribute:
</p>

<blockquote><pre class="code">&lt;author xlink:type="resource"&gt;L. Frank Baum&lt;/author&gt;</pre></blockquote>

<p>A resource element can and generally does have the same attributes as
a locator element, that is,
<tt class="literal">xlink:label</tt><a name="IXT-10-240593" /> <a name="IXT-10-240594" />,
<tt class="literal">xlink:role</tt><a name="IXT-10-240595" />, and
<tt class="literal">xlink:title</tt><a name="IXT-10-240596" />. These all have the same semantics as
they do for locator elements. For instance, the label is a name arcs
use to connect resources. An arc can connect a resource to a
resource, a resource to a locator, a locator to a resource, or a
locator to a locator. Arcs really don't care whether
resources are local or remote. To link to or from this resource, it
needs an <tt class="literal">xlink:label</tt> attribute like this:
</p>

<blockquote><pre class="code">&lt;author xlink:type="resource" xlink:label="baum"&gt;L. Frank Baum&lt;/author&gt;</pre></blockquote>

<p>To establish links from this local resource to all the books,
we'd simply add these three arc elements:
</p>

<blockquote><pre class="code">&lt;book xlink:type="arc" xlink:from="baum" xlink:to="oz1" /&gt;
&lt;book xlink:type="arc" xlink:from="baum" xlink:to="oz2" /&gt;
&lt;book xlink:type="arc" xlink:from="baum" xlink:to="oz3" /&gt;</pre></blockquote>

<p>To move in the other direction, you'd simply reverse
the values of the <tt class="literal">xlink:from</tt> and
<tt class="literal">xlink:to</tt> attributes.
</p>

</div>
<a name="xmlnut2-CHP-10-SECT-4.4" /><div class="sect2">
<h3 class="sect2">10.4.4. Title Elements</h3>

<p>As you've seen, <a name="IXT-10-240597" /> <a name="IXT-10-240598" />extended link elements, locator
elements, arc elements, and resource elements can all have
<tt class="literal">xlink:title</tt> attributes that provide a short blurb
of text identifying the link. However, this isn't
always enough. For instance, in a document that was a rather large
extended link, you might want to mark up the titles using XHTML or
some other vocabulary. To this end, a title can instead (or in
addition) be provided as a title type child element, that is, an
element whose <tt class="literal">xlink:type</tt> attribute has the value
<tt class="literal">title</tt>.
</p>

<p>For example, suppose you wanted to provide a more complete
description of each edition of <em class="emphasis">The Wonderful Wizard of
Oz</em> than simply who published it. Then you would give the
<tt class="literal">edition</tt> element a title type element containing
any convenient markup like this:
</p>

<blockquote><pre class="code">&lt;edition xlink:type="locator" xlink:href="urn:isbn:0700609857"
         xlink:title="University Press of Kansas"
         xlink:role="http://www.kansaspress.ku.edu/"
         xlink:label="ISBN0700609857"&gt;
<b class="emphasis-bold">  &lt;publisher_info xlink:type="title"&gt;</b>
<b class="emphasis-bold">    &lt;ul&gt;</b>
<b class="emphasis-bold">      &lt;li&gt;The Kansas Centennial Edition&lt;/li&gt;</b>
<b class="emphasis-bold">      &lt;li&gt;Illustrated by Michael McCurdy&lt;/li&gt;</b>
<b class="emphasis-bold">      &lt;li&gt;Foreword by Ray Bradbury&lt;/li&gt;</b>
<b class="emphasis-bold">      &lt;li&gt;1999&lt;/li&gt;</b>
<b class="emphasis-bold">      &lt;li&gt;216 pages&lt;/li&gt;</b>
<b class="emphasis-bold">      &lt;li&gt;SRP: $24.95&lt;/li&gt;</b>
<b class="emphasis-bold">    &lt;/ul&gt;</b>
<b class="emphasis-bold">  &lt;/publisher_info&gt;</b>
&lt;/edition&gt;</pre></blockquote>

<p>What markup you use inside the title element is up to you as long as
it's well-formed XML. XLink doesn't
constrain it in any way. How the application interprets that markup
is its own business. Here we've used basic HTML that
a browser might perhaps be able to render. Once again, however, this
is far enough past the bleeding edge that exact browser behavior,
even when browsers do support extended XLinks, is <a name="IXTR3-237" />hard to <a name="IXTR3-238" />predict.
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch10_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">10.3. Link Semantics</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">10.5. Linkbases</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>