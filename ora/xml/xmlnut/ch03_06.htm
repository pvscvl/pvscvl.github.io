<html><head><title>External Unparsed Entities and Notations (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch03_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch03_07.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">3.6. External Unparsed Entities and Notations</h2>

<p>Not <a name="xmlnut2-IDXTERM-293" />
<a name="xmlnut2-IDXTERM-294" /> <a name="xmlnut2-IDXTERM-295" /> <a name="xmlnut2-IDXTERM-296" />all data <a name="xmlnut2-IDXTERM-297" /> <a name="xmlnut2-IDXTERM-298" />is
XML. There are a lot of ASCII text files in the world that
don't give two cents about escaping
<tt class="literal">&lt;</tt> as <tt class="literal">&amp;lt;</tt> or adhering to
the other constraints by which an XML document is limited. There are
probably even more JPEG photographs, GIF line art, QuickTime movies,
MIDI sound files, and so on. None of these are well-formed XML, yet
all of them are necessary components of many documents.
</p>

<p>The mechanism that XML suggests for embedding these things in your
documents is the <em class="emphasis">external unparsed entity</em>. The
DTD specifies a name and a URI for the entity containing the non-XML
data. For example, this <a name="IXTR3-136" /><tt class="literal">ENTITY</tt> declaration
associates the name <a name="IXT-3-239829" /><tt class="literal">turing_getting_off_bus</tt>
with the JPEG image at <a href="../../../../../../www.turing.org.uk/turing/pi1/bus.jpg">http://www.turing.org.uk/turing/pi1/bus.jpg</a>:
</p>

<blockquote><pre class="code">&lt;!ENTITY turing_getting_off_bus
         SYSTEM "http://www.turing.org.uk/turing/pi1/bus.jpg"
         NDATA jpeg&gt;</pre></blockquote>

<a name="xmlnut2-CHP-3-SECT-6.1" /><div class="sect2">
<h3 class="sect2">3.6.1. Notations</h3>

<p>Since the data is not in XML format, the <a name="IXT-3-239830" /><tt class="literal">NDATA</tt> declaration
specifies the type of the data. Here the name <tt class="literal">jpeg</tt>
is used. XML does not recognize this as meaning an image in a format
defined by the Joint Photographs Experts Group. Rather this is the
name of a notation declared elsewhere in the DTD using a
<tt class="literal">NOTATION</tt> declaration like this:
</p>

<blockquote><pre class="code">&lt;!NOTATION jpeg SYSTEM "image/jpeg"&gt;</pre></blockquote>

<p>Here we've used the MIME media type image/jpeg as
the external identifier for the notation. However, there is
absolutely no standard or even a suggestion for exactly what this
identifier should be. Individual applications must define their own
requirements for the contents and meaning of notations.
</p>

</div>
<a name="xmlnut2-CHP-3-SECT-6.2" /><div class="sect2">
<h3 class="sect2">3.6.2. Embedding Unparsed Entities in Documents</h3>

<p>The DTD only declares the existence, location, and type of the
unparsed entity. To actually include the entity in the document at
one or more locations, you insert an element with an
<a name="IXT-3-239831" /><tt class="literal">ENTITY</tt> type
attribute whose value is the name of an unparsed entity declared in
the DTD. You do not use an entity reference like
<tt class="literal">&amp;turing_getting_off_bus;</tt>. Entity references
can only refer to parsed entities.
</p>

<p>Suppose the <tt class="literal">image</tt> element and its
<tt class="literal">source</tt> attribute are declared like this:
</p>

<blockquote><pre class="code">&lt;!ELEMENT image EMPTY&gt;
&lt;!ATTLIST image source ENTITY #REQUIRED&gt;</pre></blockquote>

<p>Then, this <tt class="literal">image</tt> element would refer to the
photograph at <a href="../../../../../../www.turing.org.uk/turing/pi1/bus.jpg">http://www.turing.org.uk/turing/pi1/bus.jpg</a>:
</p>

<blockquote><pre class="code">&lt;image source="turing_getting_off_bus"/&gt;</pre></blockquote>

<p>We should warn you that XML doesn't guarantee any
particular behavior from an application that encounters this type of
unparsed entity. It very well may not display the image to the user.
Indeed, the parser may be running in an environment where
there's no user to display the image to. It may not
even understand that this is an image. The parser may not load or
make any sort of connection with the server where the actual image
resides. At most, it will tell the application on whose behalf
it's parsing that there is an unparsed entity at a
particular URI with a particular notation and let the application
decide what, if anything, it wants to do with that information.
</p>



<a name="ch03-42-fm2xml" /><blockquote><b>TIP:</b> 
Unparsed general entities are not the only plausible way to embed
non-XML content in XML documents. In particular, a simple URL,
possibly associated with an XLink, does a fine job for many purposes,
just as it does in HTML (which gets along just fine without any
unparsed entities). Including all the necessary information in a
single empty element like <tt class="literal">&lt;image</tt>
<tt class="literal">source</tt> <tt class="literal">=</tt>
<tt class="literal">"http://www.turing.org.uk/turing/pi1/bus.jpg"</tt>
<tt class="literal">/&gt;</tt> is arguably preferable to splitting the same
information between the element where it's used and
the DTD of the document in which it's used. The only
thing an unparsed entity really adds is the notation, but
that's too nonstandard to be of much use.</p>
<p> In fact,
many experienced XML developers, including the authors of this book,
feel strongly that unparsed entities are a complicated, confusing
mistake that should never have been included in XML in the first
place. Nonetheless, they are a part of the specification, so we
describe them here.
</p>
</blockquote>

</div>
<a name="xmlnut2-CHP-3-SECT-6.3" /><div class="sect2">
<h3 class="sect2">3.6.3. Notations for Processing Instruction Targets</h3>

<p>Notations <a name="IXT-3-239832" />can also be used to identify the exact
target of a processing instruction. A processing instruction target
must be an XML name, which means it can't be a full
path like <em class="filename">/usr/local/bin/tex</em>. A notation can
identify a short XML name like <tt class="literal">tex</tt> with a more
complete specification of the external program for which the
processing instruction is intended. For example, this notation
associates the target <tt class="literal">tex</tt> with the more complete
path <em class="filename">/usr/local/bin/tex</em>:
</p>

<blockquote><pre class="code">&lt;!NOTATION tex SYSTEM "/usr/local/bin/tex"&gt;</pre></blockquote>

<p>In practice, this technique isn't much used or
needed. Most applications that read XML files and pay attention to
particular processing instructions simply recognize a particular
target <a name="IXTR3-137" />
<a name="IXTR3-138" /><a name="IXTR3-139" />string like <tt class="literal">php</tt> or
<a name="IXTR3-140" />
<a name="IXTR3-141" />
<a name="IXTR3-142" />
<a name="IXTR3-143" /><tt class="literal">robots</tt>. 
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch03_05.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch03_07.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">3.5. External Parsed General Entities</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">3.7. Parameter Entities</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>