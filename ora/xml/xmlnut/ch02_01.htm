<html><head><title>XML Fundamentals (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch02_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Chapter 2. XML Fundamentals</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch02_01.htm">XML Documents and XML Files</a><br />
<a href="ch02_02.htm">Elements, Tags, and Character Data</a><br />
<a href="ch02_03.htm">Attributes</a><br />
<a href="ch02_04.htm">XML Names</a><br />
<a href="ch02_05.htm">Entity References</a><br />
<a href="ch02_06.htm">CDATA Sections</a><br />
<a href="ch02_07.htm">Comments</a><br />
<a href="ch02_08.htm">Processing Instructions</a><br />
<a href="ch02_09.htm">The XML Declaration</a><br />
<a href="ch02_10.htm">Checking Documents for Well-Formedness</a><br /></p></div><p>This chapter shows you how to write simple XML documents.
You'll see that an XML document is built from text
content marked up with text tags such as
<tt class="literal">&lt;SKU&gt;</tt>, <tt class="literal">&lt;Record_ID&gt;</tt>,
and <tt class="literal">&lt;author&gt;</tt> that look superficially like
HTML tags. However, in HTML you're limited to about
a hundred predefined tags that describe web-page formatting. In XML
you can create as many tags as you need. Furthermore, these tags will
mostly describe the type of content they contain rather than
formatting or layout information. In XML you don't
say that something is italicized or indented or bold; you say that
it's a book or a biography or a calendar.
</p><p>Although XML is looser than HTML in regards to which tags it allows,
it is much stricter about where those tags are placed and how
they're written. In particular, all XML documents
must be well-formed.
<a name="IXT-2-238773" />Well-formedness
rules specify constraints such as "Every start-tag
must have a matching end-tag" and
"Attribute values must be quoted."
These rules are unbreakable, which makes parsing XML documents easy
and writing them a little harder, but they still allow an almost
unlimited flexibility of expression.
</p><div class="sect1"><a name="xmlnut2-CHP-2-SECT-1" />
<h2 class="sect1">2.1. XML Documents and XML Files</h2>

<p>An XML
<a name="IXT-2-238774" />
<a name="IXT-2-238775" />
<a name="IXT-2-238776" />document contains text, never binary data.
It can be opened with any program that knows how to read a text file.
<a href="ch02_01.htm">Example 2-1</a> is close to the simplest XML document
imaginable. Nonetheless, t is a well-formed XML document. XML parsers
can read it and understand it (at least as far as a computer program
can be said to understand anything).
</p>

<a name="xmlnut2-CHP-2-EX-1" /><div class="example">

<a name="xmlnut2-IDXTERM-105" /><h4 class="objtitle">Example 2-1. A very simple yet complete XML document </h4>
<blockquote><pre class="code">&lt;person&gt;
  Alan Turing
&lt;/person&gt;</pre></blockquote>
</div>

<p>In the most common scenario, this document would be the entire
contents of a file named <em class="filename">person.xml</em>, or perhaps
<em class="filename">2-1.xml</em>. However, XML is not picky about the
filename. As far as the parser is concerned, this file could be
called <em class="emphasis">person.txt</em>, <em class="emphasis">person</em>,
or <em class="emphasis">Hey you, there's some XML in this here
file!</em> Your operating system may or may not like these
names, but an XML parser won't care. The document
might not even be in a file at all. It could be a record or a field
in a database. It could be generated on the fly by a CGI program in
response to a browser query. It could even be stored in more than one
file, though that's unlikely for such a simple
document. If it is served by a web server, it will probably be
assigned the MIME media type <tt class="literal">application/xml</tt> or
<tt class="literal">text/xml</tt>. However, specific XML applications may
use more specific MIME media types such as
<tt class="literal">application/mathml+xml</tt>,
<tt class="literal">application/XSLT+xml</tt>,
<tt class="literal">image/svg+xml</tt>,
<tt class="literal">text/vnd.wap.wml</tt>, or even
<tt class="literal">text/html</tt> (in very special cases).
</p>

<a name="ch02-3-fm2xml" /><blockquote><b>WARNING:</b> 
For generic XML documents, <tt class="literal">application/xml</tt> should
be preferred to <tt class="literal">text/xml</tt>, although most web
servers use <tt class="literal">text/xml</tt> by default.
<tt class="literal">text/xml</tt> uses the ASCII character set as a
default, which is incorrect for most XML documents.
</p>
</blockquote>

</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_04.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch02_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">1.4. The Evolution of XML</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">2.2. Elements, Tags, and Character Data</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
      </map>

</body></html>