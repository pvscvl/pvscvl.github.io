<html><head><title>SAX Features and Properties (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch19_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch19_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">19.2. SAX Features and Properties</h2>

<p>SAX <a name="IXT-19-239954" /><a name="IXT-19-239955" />uses
<a name="IXT-19-239956" />properties <a name="IXT-19-239957" />and
<a name="IXT-19-239958" />features
<a name="IXT-19-239959" />to control parser behavior. Each
feature and property has a name that's an absolute
URI. Like namespace URIs, these URIs are only used to name things and
do not necessarily point to a real page you can load into a web
browser. Features are either true or false; that is,
they're
<a name="IXT-19-239960" />Booleans. Properties have values of
an appropriate <tt class="literal">Object</tt> type.
</p>

<p>The <em class="emphasis">http://xml.org/sax/features/validation</em>
feature controls whether a parser validates. If this feature is true,
then the parser will report validity errors in the document to the
registered <tt class="literal">ErrorHandler</tt>; otherwise, it
won't. This feature is turned off by default. To
turn a feature on, pass the feature's name and value
to the <tt class="literal">XMLReader</tt>'s
<a name="IXT-19-239961" /><tt class="literal">setFeature( )</tt> method:
</p>

<blockquote><pre class="code">try {
  parser.setFeature("http://xml.org/sax/features/validation", true);
}
catch (SAXNotSupportedException e) {
  System.out.println("Cannot turn on validation right now.");
}
catch (SAXNotRecognizedException e) {
  System.out.println("This is not a validating parser.");
}</pre></blockquote>

<p>Not all parsers can validate. If you try to turn on validation in a
parser that doesn't validate or set any other
feature the parser doesn't provide,
<tt class="literal">setFeature( )</tt> throws a <a name="IXT-19-239962" />
<a name="IXT-19-239963" /><tt class="literal">SAXNotRecognizedException</tt>.
If you try to set a feature the parser does recognize but cannot
change at the current time--e.g., you try to turn on validation
when the parser has already read half of the
document--<tt class="literal">setFeature( )</tt> throws a
<a name="IXT-19-239964" />
<a name="IXT-19-239965" /><tt class="literal">SAXNotSupportedException</tt>.
Both are subclasses of <tt class="literal">SAXException</tt>.
</p>

<p>You can check a feature's current value using
<tt class="literal">XMLReader</tt>'s
<a name="IXT-19-239966" /><tt class="literal">getFeature( )</tt> method.
This method returns a <tt class="literal">boolean</tt> and throws the same
exceptions for the same reasons as <tt class="literal">setFeature( )</tt>.
If you want to know whether the parser validates, you can ask in the
following manner:
</p>

<blockquote><pre class="code">try {
  boolean isValidating =
   parser.getFeature("http://xml.org/sax/features/validation");
}
catch (SAXException e) {
  System.out.println("This is not a validating parser");
}</pre></blockquote>

<p>Properties are similar to features, but they allow a broader choice
than a simple Boolean on/off, true/false dichotomy. Each property
value is an object of unspecified type. For example, if you want to
know the literal string of data parsed to produce the current SAX
event, you can ask by reading the
<em class="emphasis">http://xml.org/sax/properties/xml-string</em>
property with the <a name="IXT-19-239967" /><tt class="literal">getProperty( )</tt> method:
</p>

<blockquote><pre class="code">try {
  String tag = (String) parser.getProperty(
   "http://xml.org/sax/properties/xml-string");
}
catch (SAXNotSupportedException e) {
  System.out.println("This parser does not provide the original data");
}
catch (SAXNotRecognizedException e) {
  System.out.println("Parser does not recognize the " +
   "http://xml.org/sax/properties/xml-string property");
}</pre></blockquote>

<p>You can change a property value by invoking the
<a name="IXT-19-239968" /><tt class="literal">setProperty( )</tt> method
with two arguments. The first is the URI of the property to set. The
second is the object specifying the value for the property. For
example, this code fragment attempts to set the
<em class="emphasis">http://xml.org/sax/properties/LexicalHandler</em>
property to a new instance of the
<tt class="literal">MyLexicalHandlerClass</tt>. The parser reports lexical
events (comments, CDATA sections, and entity references) to the
<tt class="literal">org.xml.sax.ext.LexicalHandler</tt> implementation
object named by this property:
</p>

<blockquote><pre class="code">try {
  parser.setProperty(
    "http://xml.org/sax/properties/LexicalHandler",
    new MyLexicalHandlerClass( )
  );
}
catch (SAXException e) {
  System.out.println("This parser does not provide lexical events.");
}</pre></blockquote>

<p>If you pass in the wrong kind of object for a property (e.g., an
object that does not implement the <tt class="literal">LexicalHandler</tt>
interface for the
<em class="emphasis">http://xml.org/sax/properties/LexicalHandler</em>
property), then <tt class="literal">setProperty( )</tt> throws a
<tt class="literal">SAXNotSupportedException</tt>.
</p>

<p>Not all features and properties can be set at all times. For example,
you cannot suddenly decide to start validating when the parser is
already halfway through a document. An attempt to do so will fail and
throw a <tt class="literal">SAXNotSupportedException</tt>. However, you can
change a parser's features in between documents
-- after parsing one document, but before parsing the next. You
can read most feature and property values at any time.
</p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch19_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch19_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">19. Simple API for XML </td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">19.3. Filters</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>