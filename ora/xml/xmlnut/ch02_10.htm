<html><head><title>Checking Documents for Well-Formedness (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_09.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch03_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">2.10. Checking Documents for Well-Formedness</h2>

<p>Every
<a name="IXT-2-238837" />XML
<a name="IXT-2-238838" />
<a name="IXT-2-238839" />document,
<a name="IXT-2-238840" />without
exception, must be well-formed. This means it must adhere to a number
of rules, including the following:
</p>

<ol><li>
<p>Every start-tag must have a matching end-tag.</p>
</li><li>
<p>Elements may nest, but may not overlap.</p>
</li><li>
<p>There must be exactly one root element.</p>
</li><li>
<p>Attribute values must be quoted.</p>
</li><li>
<p>An element may not have two attributes with the same name.</p>
</li><li>
<p>Comments and processing instructions may not appear inside tags.</p>
</li><li>
<p>No unescaped <tt class="literal">&lt;</tt> or <tt class="literal">&amp;</tt>
signs may occur in the character data of an element or attribute.
</p>
</li></ol>
<p>This is not an exhaustive list. There are many, many ways a document
can be malformed. You'll find a complete list in
<a href="ch20_01.htm">Chapter 20</a>. Some of these involve constructs that
we have not yet discussed such as DTDs. Others are extremely unlikely
to occur if you follow the examples in this chapter (for example,
including whitespace between the opening <tt class="literal">&lt;</tt> and
the element name in a tag).
</p>

<p>Whether the error is small or large, likely or unlikely, an XML
parser reading a document is required to report it. It may or may not
report multiple well-formedness errors it detects in the document.
However, the parser is not allowed to try to fix the document and
make a best-faith effort of providing what it thinks the author
really meant. It can't fill in missing quotes around
attribute values, insert an omitted end-tag, or ignore the comment
that's inside a start-tag. The parser is required to
return an error. The objective here is to avoid the bug-for-bug
compatibility wars that plagued early web browsers and continue to
this day. Consequently, before you publish an XML document, whether
that document is a web page, input to a database, or something else,
you'll want to check it for well-formedness.
</p>

<p>The simplest way to do this is by loading the document into a web
browser that understands XML documents such as Mozilla. If the
document is well-formed, the browser will display it. If it
isn't, then it will show an error message.
</p>

<p>Instead of loading the document into a web browser, you can use an
XML parser directly. Most XML parsers are not intended for end users.
They are class libraries designed to be embedded into an
easier-to-use program such as Mozilla. They provide a minimal
command-line interface, if that; that interface is often not
particularly well documented. Nonetheless, it can sometimes be
quicker to run a batch of files through a command-line interface than
loading each of them into a web browser. Furthermore, once you learn
about DTDs and schemas, you can use the same tools to validate
documents, which most web browsers won't do.
</p>

<p>There are many XML parsers available in a variety of languages. Here,
we'll demonstrate checking for well-formedness with
the <a name="IXT-2-238841" />
<a name="IXT-2-238842" />Apache XML
Project's Xerces-J 1.4, which you can download from
<a href="../../../../../../xml.apache.org/xerces-j">http://xml.apache.org/xerces-j</a>.
This open source package is written in pure Java so it should run
across all major platforms. The procedure should be similar for other
parsers, though details will vary.
</p>

<p>To use this parser, you'll first need a Java 1.1 or
later compatible virtual machine. Virtual machines for Windows,
Solaris, and Linux are available from <a href="../../../../../../java.sun.com/">http://java.sun.com/</a>. To install Xerces-J
1.4.4, just add <em class="filename">xerces.jar</em> and
<em class="filename">xercesSamples.jar</em> files to your Java class path.
In Java 2 you can simply put those <em class="filename">.jar</em> files
into your <em class="filename">jre/lib/ext</em> directory.
</p>

<p>The class that actually checks files for well-formedness is called
<a name="IXT-2-238843" /><tt class="literal">sax.SAXCount</tt>.
It's run from a Unix shell or DOS prompt like any
other standalone Java program. The command-line arguments are the
URLs to or filenames of the documents you want to check.
Here's the result of running
<em class="filename">SAXCount</em> against an early version of <a href="ch02_03.htm">Example 2-5</a>. The very first line of output tells you where
the first problem in the file is. The rest of the output is a more or
less irrelevant stack trace.
</p>

<blockquote><pre class="code">D:\xian\examples\02&gt;<tt class="userinput"><b>java sax.SAXCount 2-5.xml</b></tt>
<b class="emphasis-bold">[Fatal Error] 2-5.xml:3:30: The value of attribute "height" must not contain the '&lt;' character.</b>
Stopping after fatal error: The value of attribute "height" must not contain the '&lt;' character.
at org.apache.xerces.framework.XMLParser.reportError(XMLParser.java:
1282)
at org.apache.xerces.framework.XMLDocumentScanner.reportFatalXMLError(
XMLDocumentScanner.java:644)
at org.apache.xerces.framework.XMLDocumentScanner.scanAttValue(
XMLDocumentScanner.java:519)
at org.apache.xerces.framework.XMLParser.scanAttValue(
XMLParser.java:1932)
at org.apache.xerces.framework.XMLDocumentScanner.scanElement(
XMLDocumentScanner.java:1800)
at org.apache.xerces.framework.XMLDocumentScanner$ContentDispatcher.
dispatch(XMLDocumentScanner.java:1223)
at org.apache.xerces.framework.XMLDocumentScanner.parseSome(
XMLDocumentScanner.java:381)
at org.apache.xerces.framework.XMLParser.parse(XMLParser.java:1138)
at org.apache.xerces.framework.XMLParser.parse(XMLParser.java:1177)
at sax.SAXCount.print(SAXCount.java:135)
at sax.SAXCount.main(SAXCount.java:331)</pre></blockquote>

<p>As you can see, it found an error. In this case the error message
wasn't particularly helpful. The actual problem
wasn't that an attribute value contained a
<tt class="literal">&lt;</tt> character. It was that the closing quote was
missing from the <tt class="literal">height</tt> attribute value. Still,
that was enough for us to locate and fix the problem. Despite the
long list of output, <em class="filename">SAXCount</em> only reports the
first error in the document, so you may have to run it multiple times
until all the mistakes are found and fixed. Once we fixed <a href="ch02_03.htm">Example 2-5</a> to make it well-formed,
<em class="filename">SAXCount</em> simply reported how long it took to
parse the document and what it saw when it did:
</p>

<blockquote><pre class="code">D:\xian\examples\02&gt;<tt class="userinput"><b>java sax.SAXCount 2-5.xml</b></tt>
2-5.xml: 140 ms (17 elems, 12 attrs, 0 spaces, 564 chars)</pre></blockquote>

<p>Now that the document has been corrected to be well-formed, it can be
passed to a web browser, a database, or whatever other program is
waiting to receive it. Almost any nontrivial document crafted by hand
will contain well-formedness mistakes. That makes it important to
check your work before publishing it.
</p>



<a name="ch02-23-fm2xml" /><blockquote><b>TIP:</b> 
This example works with Xerces-J 1.0 through 1.4.4. The recently
released Xerces-J 2.0 provides a similar program named
<tt class="literal">sax.Counter</tt>.
</p>
</blockquote>





<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_09.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch03_01.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">2.9. The XML Declaration</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">3. Document Type Definitions </td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>