<html><head><title>Elements, Tags, and Character Data (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch02_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">2.2. Elements, Tags, and Character Data</h2>

<p>The document in <a href="ch02_01.htm">Example 2-1</a> is composed of a single
<a name="IXT-2-238777" /><em class="emphasis">element</em> named person.
The element is delimited by
<a name="IXT-2-238778" />the
<a name="IXT-2-238779" /><em class="emphasis">start-tag</em>
<tt class="literal">&lt;person&gt;</tt> and the
<a name="IXT-2-238780" /><em class="emphasis">end-tag</em>
<tt class="literal">&lt;/person&gt;</tt>. Everything between the start-tag
and the end-tag of the element (exclusive) is called the
element's <em class="emphasis">content</em>. The content
of this element is the text string:
</p>

<blockquote><pre class="code">Alan Turing</pre></blockquote>

<p>The <a name="IXT-2-238781" />whitespace is part of the content,
though many applications will choose to ignore it.
<tt class="literal">&lt;person&gt;</tt> and
<tt class="literal">&lt;/person&gt;</tt> are
<a name="IXT-2-238782" /><em class="emphasis">markup</em>. The string
"Alan Turing" and its surrounding
whitespace are <a name="xmlnut2-IDXTERM-112" /><em class="emphasis">character data</em>. The
tag is the most common form of markup in an XML document, but there
are other kinds we'll discuss later.
</p>

<a name="xmlnut2-CHP-2-SECT-2.1" /><div class="sect2">
<h3 class="sect2">2.2.1. Tag Syntax</h3>

<p><a name="IXT-2-238783" />XML tags look superficially like HTML tags.
Start-tags begin with <tt class="literal">&lt;</tt> and end-tags begin with
<tt class="literal">&lt;/</tt>. Both of these are followed by the name of
the element and are closed by <tt class="literal">&gt;</tt>. However,
unlike HTML tags, you are allowed to make up new XML tags as you go
along. To describe a person, use <tt class="literal">&lt;person&gt;</tt>
and <tt class="literal">&lt;/person&gt;</tt> tags. To describe a calendar,
use <tt class="literal">&lt;calendar&gt;</tt> and
<tt class="literal">&lt;/calendar&gt;</tt> tags. The names of the tags
generally reflect the type of content inside the element, not how
that content will be formatted.
</p>

<a name="xmlnut2-CHP-2-SECT-2.1.1" /><div class="sect3">
<h3 class="sect3">2.2.1.1. Empty elements</h3>

<p>There's also a special <a name="IXT-2-238784" />
<a name="IXT-2-238785" />syntax for <em class="emphasis">empty
elements</em>, i.e., elements that have no content. Such an
element can be represented by a single <em class="emphasis">empty-element
tag</em> that begins with <tt class="literal">&lt;</tt> but ends with
<tt class="literal">/&gt;</tt>. For instance, in XHTML, an XMLized
reformulation of standard HTML, the line-break and horizontal-rule
elements are written as <tt class="literal">&lt;br</tt>
<tt class="literal">/&gt;</tt> and <tt class="literal">&lt;hr</tt>
<tt class="literal">/&gt;</tt> instead of <tt class="literal">&lt;br&gt;</tt> and
<tt class="literal">&lt;hr&gt;</tt>. These are exactly equivalent to
<tt class="literal">&lt;br&gt;&lt;/br&gt;</tt> and
<tt class="literal">&lt;hr&gt;&lt;/hr&gt;</tt>, however. Which form you use
for empty elements is completely up to you. However, what you cannot
do in XML and XHTML (unlike HTML) is use only the start-tag--for
instance <tt class="literal">&lt;br&gt;</tt> or
<tt class="literal">&lt;hr&gt;</tt>--without using the matching the
end-tag. That would be a well-formedness error.
</p>

</div>

<a name="xmlnut2-CHP-2-SECT-2.1.2" /><div class="sect3">
<h3 class="sect3">2.2.1.2. Case sensitivity</h3>

<p>XML, <a name="IXT-2-238786" /> <a name="IXT-2-238787" />unlike HTML, is case
sensitive. <tt class="literal">&lt;Person&gt;</tt> is not the same as
<tt class="literal">&lt;PERSON&gt;</tt> is not the same as
<tt class="literal">&lt;person&gt;</tt>. If you open an element with a
<tt class="literal">&lt;person&gt;</tt> tag, you can't
close it with a <tt class="literal">&lt;/PERSON&gt;</tt> tag.
You're free to use upper- or lowercase or both as
you choose. You just have to be consistent within any one element.
</p>

</div>
</div>
<a name="xmlnut2-CHP-2-SECT-2.2" /><div class="sect2">
<h3 class="sect2">2.2.2. XML Trees</h3>

<p><a name="IXT-2-238788" />Let's
look at a slightly more complicated XML document. <a href="ch02_02.htm">Example 2-2</a> is a <tt class="literal">person</tt> element that
contains more information suitably marked up to show its meaning.
</p>

<a name="xmlnut2-CHP-2-EX-2" /><div class="example">
<h4 class="objtitle">Example 2-2. A more complex XML document describing a person </h4>
<blockquote><pre class="code">&lt;person&gt;
  &lt;name&gt;
    &lt;first_name&gt;Alan&lt;/first_name&gt;
    &lt;last_name&gt;Turing&lt;/last_name&gt;
  &lt;/name&gt;
  &lt;profession&gt;computer scientist&lt;/profession&gt;
  &lt;profession&gt;mathematician&lt;/profession&gt;
  &lt;profession&gt;cryptographer&lt;/profession&gt;
&lt;/person&gt;</pre></blockquote>
</div>

<a name="xmlnut2-CHP-2-SECT-2.2.1" /><div class="sect3">
<h3 class="sect3">2.2.2.1. Parents and children</h3>

<p>This <a name="IXT-2-238789" />XML
document is still composed of one <tt class="literal">person</tt> element.
However, now this element doesn't merely contain
undifferentiated character data. It contains four <em class="emphasis">child
elements</em>: a <tt class="literal">name</tt> element and three
<tt class="literal">profession</tt> elements. The <tt class="literal">name</tt>
element contains two child elements of its own,
<tt class="literal">first_name</tt> and <tt class="literal">last_name</tt>.
</p>

<p>The <a name="IXT-2-238790" /><tt class="literal">person</tt> element is
called the <em class="emphasis">parent</em> of the <tt class="literal">name</tt>
element and the three <tt class="literal">profession</tt> elements. The
<tt class="literal">name</tt> element is the <tt class="literal">parent</tt> of
the <tt class="literal">first_name</tt> and <tt class="literal">last_name</tt>
elements. The <tt class="literal">name</tt> element and the three
<tt class="literal">profession</tt> elements are sometimes called each
other's <a name="IXT-2-238791" /><em class="emphasis">siblings</em>. The
<tt class="literal">first_name</tt> and <tt class="literal">last_name</tt>
elements are also siblings.
</p>

<p>As in human society, any one parent may have multiple children.
However, unlike human society, XML gives each child exactly one
parent, not two or more. Each element (with one exception
I'll note shortly) has exactly one parent element.
That is, it is completely enclosed by another element. If an
element's start-tag is inside some element, then its
end-tag must also be inside that element. Overlapping
<a name="IXT-2-238792" />
<a name="IXT-2-238793" />tags, as in
<tt class="literal">&lt;strong&gt;&lt;em&gt;this</tt>
<tt class="literal">common</tt> <tt class="literal">example</tt>
<tt class="literal">from</tt>
<tt class="literal">HTML&lt;/strong&gt;&lt;/em&gt;</tt>, are prohibited in
XML. Since the <tt class="literal">em</tt> element begins inside the
<tt class="literal">strong</tt> element, it must also finish inside the
<tt class="literal">strong</tt> element.
</p>

</div>

<a name="xmlnut2-CHP-2-SECT-2.2.2" /><div class="sect3">
<h3 class="sect3">2.2.2.2. The root element</h3>

<p>Every XML document has one element that does not have a parent. This
is the first element in the document and the element that contains
all other elements. In <a href="ch02_01.htm">Example 2-1</a> and
<a href="ch02_02.htm">Example 2-2</a>, the <tt class="literal">person</tt> element
filled this role. It is called the <em class="emphasis">root element</em>
of the document<a name="IXT-2-238794" />
<a name="IXT-2-238795" />. It is also sometimes called the
<em class="emphasis">document element</em>. Every well-formed XML document
has exactly one root element. Since elements may not overlap, and
since all elements except the root have exactly one parent, XML
documents form a data structure programmers call a
<em class="emphasis">tree</em>. <a href="ch02_02.htm">Figure 2-1</a> diagrams this
relationship for <a href="ch02_02.htm">Example 2-2</a>. Each gray box
represents an element. Each black box represents character data. Each
arrow represents a containment relationship.
</p>

<a name="xmlnut2-CHP-2-FIG-1" /><div class="figure"><img src="figs/XIAN2_0201.gif" alt="Figure 2-1" width="392" /></div><h4 class="objtitle">Figure 2-1. A tree diagram for <a href="ch02_02.htm">Example 2-2</a></h4>

</div>
</div>
<a name="xmlnut2-CHP-2-SECT-2.3" /><div class="sect2">
<h3 class="sect2">2.2.3. Mixed Content</h3>

<p>In <a href="ch02_02.htm">Example 2-2</a>, the <a name="IXT-2-238796" />
<a name="IXT-2-238797" />contents of the
<tt class="literal">first_name</tt>, <tt class="literal">last_name</tt>, and
<tt class="literal">profession</tt> elements were character data, that is,
text that does not contain any tags. The contents of the
<tt class="literal">person</tt> and <tt class="literal">name</tt> elements were
child elements and some whitespace that most applications will
ignore. This dichotomy between elements that contain only character
data and elements that contain only child elements (and possibly a
little whitespace) is common in documents that are data oriented.
However, XML can also be used for more free-form, narrative documents
such as business reports, magazine articles, student essays, short
stories, web pages, and so forth, as shown by <a href="ch02_02.htm">Example 2-3</a>. 
</p>

<a name="xmlnut2-CHP-2-EX-3" /><div class="example">
<h4 class="objtitle">Example 2-3. A narrative-organized XML document </h4>
<blockquote><pre class="code">&lt;biography&gt;
  &lt;name&gt;&lt;first_name&gt;Alan&lt;/first_name&gt; &lt;last_name&gt;Turing&lt;/last_name&gt;
  &lt;/name&gt; was one of the first people to truly deserve the name 
  &lt;emphasize&gt;computer scientist&lt;/emphasize&gt;. Although his contributions 
  to the field are too numerous to list, his best-known are the 
  eponymous &lt;emphasize&gt;Turing Test&lt;/emphasize&gt; and 
  &lt;emphasize&gt;Turing Machine&lt;/emphasize&gt;.

  &lt;definition&gt;The &lt;term&gt;Turing Test&lt;/term&gt; is to this day the standard
  test for determining whether a computer is truly intelligent. This 
  test has yet to be passed. &lt;/definition&gt;

  &lt;definition&gt;The &lt;term&gt;Turing Machine&lt;/term&gt; is an abstract finite 
  state automaton with infinite memory that can be proven equivalent 
  to any any other finite state automaton with arbitrarily large memory. 
  Thus what is true for a Turing machine is true for all equivalent 
  machines no matter how implemented.
  &lt;/definition&gt;

  &lt;name&gt;&lt;last_name&gt;Turing&lt;/last_name&gt;&lt;/name&gt; was also an accomplished   
  &lt;profession&gt;mathematician&lt;/profession&gt; and
  &lt;profession&gt;cryptographer&lt;/profession&gt;. His assistance 
  was crucial in helping the Allies decode the German Enigma
  machine. He committed suicide on &lt;date&gt;&lt;month&gt;June&lt;/month&gt; 
  &lt;day&gt;7&lt;/day&gt;, &lt;year&gt;1954&lt;/year&gt;&lt;/date&gt; after being 
  convicted of homosexuality and forced to take female 
  hormone injections.
&lt;/biography&gt;</pre></blockquote>
</div>

<p>The root element of this document is <tt class="literal">biography</tt>.
The <tt class="literal">biography</tt> contains <tt class="literal">name</tt>,
<tt class="literal">definition</tt>, <tt class="literal">profession</tt>, and
<tt class="literal">emphasize</tt> child elements. It also contains a lot
of raw character data. Some of these elements such as
<tt class="literal">last_name</tt> and <tt class="literal">profession</tt> only
contain character data. Others such as <tt class="literal">name</tt>
contain only child elements. Still others such as
<tt class="literal">definition</tt> contain both <a name="IXTR3-0" />character data and
child elements. These elements are said to contain <em class="emphasis">mixed
content</em>. Mixed content is common in XML documents
containing articles, essays, stories, books, novels, reports, web
pages, and anything else that's organized as a
written narrative. Mixed content is less common and harder to work
with in computer-generated and processed XML documents used for
purposes such as database exchange, object serialization, persistent
file formats, and so on. One of the strengths of XML is the ease with
which it can be adapted to the very different requirements of
human-authored and computer-generated documents.
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch02_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">2. XML Fundamentals</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">2.3. Attributes</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>