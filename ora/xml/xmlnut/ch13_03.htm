<html><head><title>Laying Out the Master Pages (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch13_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch13_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">13.3. Laying Out the Master Pages</h2>

<p>XSL-FO 1.0 <a name="xmlnut2-IDXTERM-1239" /> <a name="xmlnut2-IDXTERM-1240" />only defines one kind of master page, the
<tt class="literal">fo:simple-page-master</tt><a name="xmlnut2-IDXTERM-1241" /> <a name="xmlnut2-IDXTERM-1242" />. This represents a standard
rectangular page with margins on all four sides. This master page
also has a unique name given by a
<tt class="literal">master-name</tt><a name="IXT-13-239879" /> attribute. For example, this
element describes a master page named <tt class="literal">first</tt> that
represents an 8.5 by 11 inch page with one inch margins on all four
sides:
</p>

<blockquote><pre class="code">&lt;fo:simple-page-master margin-right="1in"  margin-left="1in"
                       margin-bottom="1in" margin-top="1in"
                       page-width="8.5in"  page-height="11in"
                       master-name="first"&gt;
  &lt;!-- Separate parts of the page go here --&gt;
&lt;/fo:simple-page-master&gt;</pre></blockquote>

<p>The part of the page inside the margins is divided into five regions:
the start region, the end region, the before region, the after
region, and the body region. Where these fall on a page depends on
the writing direction. In left-to-right, top-to-bottom languages like
English, start is on the lefthand side, end is on the righthand side,
before is on top, and after is on bottom as diagramed in <a href="ch13_03.htm">Figure 13-2</a>. However, if the text were Hebrew, then the
start region would be on the righthand side of the page, and the end
region would be on the lefthand side of the page. If the text were
traditional Chinese, then the start would be on top, the end on
bottom, the before on the lefthand side, and the after on the
righthand side. Other combinations are possible.
</p>

<a name="xmlnut2-CHP-13-FIG-2" /><div class="figure"><img src="figs/XIAN2_1302.gif" alt="Figure 13-2" width="427" /></div><h4 class="objtitle">Figure 13-2. The five regions in a left-to-right, top-to-bottom writing system</h4>

<p>These regions are represented by
<tt class="literal">fo:region-start</tt><a name="IXT-13-239880" /> <a name="IXT-13-239881" />,
<tt class="literal">fo:region-end</tt><a name="IXT-13-239882" /> <a name="IXT-13-239883" />,
<tt class="literal">fo:region-before</tt><a name="IXT-13-239884" /> <a name="IXT-13-239885" />,
<tt class="literal">fo:region-after</tt><a name="IXT-13-239886" /> <a name="IXT-13-239887" />, and
<tt class="literal">fo:region-body</tt><a name="IXT-13-239888" /> <a name="IXT-13-239889" /> child elements of the
<tt class="literal">fo:simple-page-master</tt> element. You can place
different content into each of the five regions. For instance, the
after region often contains a page number, and the before region may
contain the title of the book or chapter.
</p>

<p>The body region and the corresponding
<tt class="literal">fo:region-body</tt> element are required. The other
four are optional. By default, the body region takes up the entire
page, and the other four regions have zero area. To specify this
simplest page, you add an empty <tt class="literal">fo:region-body</tt>
child element to the <tt class="literal">fo:simple-page-master</tt> element
like this:
</p>

<blockquote><pre class="code">&lt;fo:simple-page-master margin-right="1in"  margin-left="1in"
                       margin-bottom="1in" margin-top="1in"
                       page-width="8.5in"  page-height="11in"
                       master-name="first"&gt;
<b class="emphasis-bold">  &lt;fo:region-body/&gt;</b>
&lt;/fo:simple-page-master&gt;</pre></blockquote>

<p>However, you can add
<tt class="literal">extent</tt><a name="IXT-13-239890" /> attributes to the four nonbody regions
to specify the height of the before and after regions and the width
of the start and end regions. Then the region body should have margin
properties that are at least as large as the extent of each region to
push it out of the way of each nonbody region. Otherwise, content
placed in the body will be drawn on top of content placed in the
other four regions. For example, this
<tt class="literal">fo:simple-page-master</tt> element has half-inch
margins on each side, representing the unprintable area on many
common printers. The start and end regions are half an inch wide. The
before and after regions are one inch wide. The body has margins that
match the region sizes.
</p>

<blockquote><pre class="code">&lt;fo:simple-page-master margin-right="0.5in"  margin-left="0.5in"
                       margin-bottom="0.5in" margin-top="0.5in"
                       page-width="8.5in"    page-height="11in"
                       master-name="first"&gt;
<b class="emphasis-bold">  &lt;fo:region-before extent="0.5in"/&gt;</b>
<b class="emphasis-bold">  &lt;fo:region-after  extent="0.5in"/&gt;</b>
<b class="emphasis-bold">  &lt;fo:region-start  extent="0.5in"/&gt;</b>
<b class="emphasis-bold">  &lt;fo:region-end    extent="0.5in"/&gt;</b>
<b class="emphasis-bold">  &lt;fo:region-body   margin-top="1.0in"  margin-bottom="1.0in"</b>
<b class="emphasis-bold">                    margin-left="0.5in" margin-right="0.5in"/&gt;</b>
&lt;/fo:simple-page-master&gt;</pre></blockquote>

<p>Most of the time, the details of the layout-master set are fixed in
the stylesheet. For example, here's the revised XSLT
template that includes a full
<tt class="literal">fo:layout-master-set</tt><a name="IXT-13-239891" /> <a name="IXT-13-239892" />:
</p>

<a name="IXTR3-147" /><a name="IXTR3-148" /><blockquote><pre class="code">&lt;xsl:template match="/"&gt;
  &lt;fo:root&gt;
    &lt;fo:layout-master-set&gt;
      &lt;fo:simple-page-master margin-right="1in"  margin-left="1in"
                             margin-bottom="1in" margin-top="1in"
                             page-width="8.5in"  page-height="11in"
                             master-name="first"&gt;
        &lt;fo:region-body/&gt;
      &lt;/fo:simple-page-master&gt;
    &lt;/fo:layout-master-set&gt;

    &lt;fo:page-sequence master-reference="first"&gt;
      &lt;!-- data to place on the page --&gt;

    &lt;/fo:page-sequence&gt;
  &lt;/fo:root&gt;
&lt;/xsl:template&gt;
</pre></blockquote>

<a name="xmlnut2-CHP-13-SECT-3.1" /><div class="sect2">
<h3 class="sect2">13.3.1. Flowing Content into the Pages</h3>

<p>Next we add a <tt class="literal">fo:flow</tt><a name="IXT-13-239893" /> <a name="IXT-13-239894" /> child to the
<tt class="literal">fo:page-sequence</tt><a name="IXT-13-239895" /> <a name="IXT-13-239896" /> where the actual text of the
transformed document appears. This element has a
<tt class="literal">flow-name</tt> attribute specifying into which region
of the page its content will flow. Possible values include
<tt class="literal">xsl-region-body</tt>,
<tt class="literal">xsl-region-start</tt>,
<tt class="literal">xsl-region-end</tt>,
<tt class="literal">xsl-region-before</tt>, and
<tt class="literal">xsl-region-after</tt>.
</p>

<p>The formatter instantiates a page based on the master page named by
the <tt class="literal">fo:page-sequence</tt>'s
<tt class="literal">master-reference</tt> attribute, fills one of its
regions with content from the <tt class="literal">fo:flow</tt> element
until the page is full, then instantiates a second page, fills it
with more content from the <tt class="literal">fo:flow</tt>, instantiates a
third page, and continues this process until it's
used up all the data in the <tt class="literal">fo:flow</tt>.
</p>

<p>The <tt class="literal">fo:flow</tt> element must contain
<a name="IXT-13-239897" />block-level formatting
object elements. The most basic of these is
<tt class="literal">fo:block</tt><a name="IXT-13-239898" /> <a name="IXT-13-239899" />. Others include
<tt class="literal">fo:block-container</tt><a name="IXT-13-239900" /> <a name="IXT-13-239901" />,
<tt class="literal">fo:list-block</tt><a name="IXT-13-239902" /> <a name="IXT-13-239903" />,
<tt class="literal">fo:table</tt><a name="IXT-13-239904" /> <a name="IXT-13-239905" />, and
<tt class="literal">fo:table-and-caption</tt><a name="IXT-13-239906" /> <a name="IXT-13-239907" />. We'll begin
with the most basic, <tt class="literal">fo:block</tt>. A
<tt class="literal">fo:block</tt> can contain a combination of raw text and
formatting objects such as <tt class="literal">fo:external-graphic</tt>,
<tt class="literal">fo:inline</tt>, <tt class="literal">fo:page-number</tt>,
<tt class="literal">fo:footnote</tt>, and even other
<tt class="literal">fo:block</tt> elements. For the moment,
we'll restrict ourselves to parsed character data.
For example, here's a basic
<tt class="literal">fo:flow</tt> for the recipe:
</p>

<blockquote><pre class="code">&lt;fo:flow flow-name="xsl-region-body"&gt;
  &lt;fo:block&gt;Southern Corn Bread&lt;/fo:block&gt;

  &lt;fo:block&gt;1 cup flour&lt;/fo:block&gt;
  &lt;fo:block&gt;4 tablespoons Royal Baking Powder&lt;/fo:block&gt;
  &lt;fo:block&gt;<sup class="superscript">1</sup>/<sub class="subscript">2</sub> teaspoon salt&lt;/fo:block&gt;
  &lt;fo:block&gt;1 cup corn meal&lt;/fo:block&gt;
  &lt;fo:block&gt;1<sup class="superscript">1</sup>/<sub class="subscript">2</sub> cups whole milk&lt;/fo:block&gt;
  &lt;fo:block&gt;4 tablespoons melted butter&lt;/fo:block&gt;

  &lt;fo:block&gt;
    Sift flour, baking powder, sugar &amp;amp; salt together.
    Add 1 cup corn meal.
    Beat egg in cup and add beaten egg and 1<sup class="superscript">1</sup>/<sub class="subscript">2</sub> cups whole
    milk to make a batter. Stir well.
    Add melted shortening and beat until light and thoroughly mixed.
    Pour into greased shallow pan or greased muffin rings.
    Bake in hot oven at 425&#xBA; F for 25 minutes.
    Cut into squares if cooked in shallow pan.
  &lt;/fo:block&gt;

  &lt;fo:block&gt;
    After my mother-in-law Marjorie Anderson died,
    Beth and I found this recipe written on the "extra recipes"
    page in a local cookbook in her cupboard.
    This was published by the The Episcopal Churchwomen,
    Church of Ascension, Mt. Sterling, Kentucky.
  &lt;/fo:block&gt;

&lt;/fo:flow&gt;</pre></blockquote>

<p>Here's an <a name="IXT-13-239908" />XSLT template that produces the content
of this <tt class="literal">fo:flow</tt> element (modulo insignificant
whitespace) from <a href="ch13_01.htm">Example 13-1</a> through judicious use
of the default templates:
</p>

<blockquote><pre class="code">&lt;xsl:template match="dish|ingredient|directions|story"&gt;
  &lt;fo:block&gt;&lt;xsl:apply-templates/&gt;&lt;/fo:block&gt;
&lt;/xsl:template&gt;</pre></blockquote>

</div>
<a name="xmlnut2-CHP-13-SECT-3.2" /><div class="sect2">
<h3 class="sect2">13.3.2. Generating the Finished Document</h3>

<p>We <a name="xmlnut2-IDXTERM-1273" />now
have the minimum set of pieces needed to put together a full XSL-FO
document. <a href="ch13_03.htm">Example 13-2</a> is an <a name="xmlnut2-IDXTERM-1274" />XSLT stylesheet that transforms
documents like <a href="ch13_01.htm">Example 13-1</a> into XSL formatting
objects documents.
</p>

<a name="xmlnut2-CHP-13-EX-2" /><div class="example">
<h4 class="objtitle">Example 13-2. An XSLT to XSL-FO transform </h4>
<blockquote><pre class="code">&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:fo="http://www.w3.org/1999/XSL/Format"&gt;

  &lt;xsl:template match="/"&gt;
    &lt;fo:root&gt;
      &lt;fo:layout-master-set&gt;
        &lt;fo:simple-page-master margin-right="1in"  margin-left="1in"
                               margin-bottom="1in" margin-top="1in"
                               page-width="8.5in"  page-height="11in"
                               master-name="first"&gt;
          &lt;fo:region-body/&gt;
        &lt;/fo:simple-page-master&gt;
      &lt;/fo:layout-master-set&gt;

      &lt;fo:page-sequence master-reference="first"&gt;

        &lt;fo:flow flow-name="xsl-region-body"&gt;
          &lt;xsl:apply-templates/&gt;
        &lt;/fo:flow&gt;

      &lt;/fo:page-sequence&gt;

    &lt;/fo:root&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="dish|ingredient|directions|story"&gt;
    &lt;fo:block&gt;&lt;xsl:apply-templates/&gt;&lt;/fo:block&gt;
  &lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</pre></blockquote>
</div>

<p><a href="ch13_03.htm">Example 13-3</a> shows the complete XSL-FO document
produced by running the cornbread recipe through an XSLT engine such
as Xalan or SAXON with this stylesheet. The whitespace is a little
off because of the way XSLT treats whitespace in the transform
document. However, this won't be significant when
the document is rendered.
</p>

<a name="xmlnut2-CHP-13-EX-3" /><div class="example">
<h4 class="objtitle">Example 13-3. An XSL-FO document describing a recipe for cornbread </h4>
<blockquote><pre class="code">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format"&gt;
&lt;fo:layout-master-set&gt;
&lt;fo:simple-page-master margin-right="1in" margin-left="1in"
margin-bottom="1in" margin-top="1in" page-width="8.5in" page-height="11in"
master-name="first"&gt;&lt;fo:region-body/&gt;&lt;/fo:simple-page-master&gt;
&lt;/fo:layout-master-set&gt;&lt;fo:page-sequence master-reference="first"&gt;
&lt;fo:flow flow-name="xsl-region-body"&gt;
  &lt;fo:block&gt;Southern Corn Bread&lt;/fo:block&gt;

    &lt;fo:block&gt;
      1 cup
      flour
    &lt;/fo:block&gt;
    &lt;fo:block&gt;
      4 tablespoons
      Royal Baking Powder
    &lt;/fo:block&gt;
    &lt;fo:block&gt;
      <sup class="superscript">1</sup>/<sub class="subscript">2</sub> teaspoon
      salt
    &lt;/fo:block&gt;
    &lt;fo:block&gt;
      1 cup
      corn meal
    &lt;/fo:block&gt;
    &lt;fo:block&gt;
      1<sup class="superscript">1</sup>/<sub class="subscript">2</sub> cups
      whole milk
    &lt;/fo:block&gt;
    &lt;fo:block&gt;
      4 tablespoons
      melted butter
    &lt;/fo:block&gt;

  &lt;fo:block&gt;
    Sift flour, baking powder, sugar &amp;amp; salt together.
    Add 1 cup corn meal.

      Beat egg in cup and add beaten egg and 1<sup class="superscript">1</sup>/<sub class="subscript">2</sub> cups whole
       milk to make a batter. Stir well.

      Add melted shortening and beat until light and thoroughly mixed.

      Pour into greased shallow pan or greased muffin rings.

      Bake in hot oven at 425&#xBA; F for
      25 minutes.

      Cut into squares if cooked in shallow pan.
  &lt;/fo:block&gt;
  &lt;fo:block&gt;
    After my mother-in-law Marjorie Anderson died,
    Beth and I found this recipe written on the "extra recipes"
    page in a local cookbook in her cupboard.
    This was published by the The Episcopal Churchwomen,
    Church of Ascension, Mt. Sterling,
    Kentucky.
  &lt;/fo:block&gt;

&lt;/fo:flow&gt;&lt;/fo:page-sequence&gt;&lt;/fo:root&gt;</pre></blockquote>
</div>

<p>The final step in this process is to convert the formatting objects
document into some other format that can be viewed onscreen or on
paper. This requires running a formatting program such as the
<a name="IXT-13-239909" /> <a name="IXT-13-239910" />Apache XML Project's
open source FOP (<a href="../../../../../../xml.apache.org/fop/">http://xml.apache.org/fop/</a>). FOP is a Java program that runs on most platforms. At
the time of this writing, it has some significant holes in its
coverage but is making rapid progress. After you install FOP in the
class path, this command line transforms the file
<em class="filename">cornbread.fo</em> into a PDF document:
</p>

<blockquote><pre class="code">% <tt class="userinput"><b>java org.apache.fop.apps.Fop -fo cornbread.fo -pdf cornbread.pdf</b></tt></pre></blockquote>

<p>FOP can also transform XSL-FO documents into plain text, raw
PostScript, a PCL file, or SVG slides, or display it on the screen
using the Java 2D API. This command produces the window shown in
<a href="ch13_03.htm">Figure 13-3</a>.
</p>

<a name="xmlnut2-CHP-13-FIG-3" /><div class="figure"><img src="figs/XIAN2_1303.gif" alt="Figure 13-3" width="431" /></div><h4 class="objtitle">Figure 13-3. The XSL-FO recipe document in FOP's AWT preview</h4>

<p>There are several other <a name="IXT-13-239911" />programs for working with
XSL-FO documents:
</p>

<ul><li>
<p>RenderX's <a name="IXT-13-239912" /> <a name="IXT-13-239913" />XEP (<a href="../../../../../../www.renderx.com/FO2PDF.html">http://www.renderx.com/FO2PDF.html</a>) is a
payware Java XSL-FO-to-PDF converter program much like FOP.
</p>
</li><li>
<p>Sebastian <a name="IXT-13-239914" />Rahtz's
<a name="IXT-13-239915" />PassiveTEX (<a href="../../../../../../users.ox.ac.uk/~rahtz/passivetex/">http://users.ox.ac.uk/~rahtz/passivetex/</a>) is
an open source collection of TEX macros for converting XSL-FO
documents to TEX . A reasonably modern TEX distribution is required.
</p>
</li><li>
<p>The <a name="IXT-13-239916" />Antenna House XSL Formatter
(<a href="../../../../../../www.antennahouse.com/xslformatter.html">http://www.antennahouse.com/xslformatter.html</a>)
is a payware Windows program that can print and display XSL-FO
documents <a name="IXTR3-149" />using <a name="IXTR3-150" /> <a name="IXTR3-151" />the <a name="IXTR3-152" />Windows GDI .
</p>
</li><li>
<p>IBM's XSL Formatting Objects Composer (<a href="../../../../../../www.alphaworks.ibm.com/tech/xfc">http://www.alphaworks.ibm.com/tech/xfc</a>) is a
free-beer Java program that implements a
"substantial portion" of XSL
Formatting Objects 1.0. It can display XSL-FO documents on the screen
or convert them to PDF.
</p>
</li></ul>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch13_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch13_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">13.2. The Structure of an XSL-FO Document</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">13.4. XSL-FO Properties</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>