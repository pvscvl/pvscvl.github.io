<html><head><title>How Parsers Handle Namespaces (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch04_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch04_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">4.3. How Parsers Handle Namespaces</h2>

<p>Namespaces <a name="IXT-4-239527" />
<a name="IXT-4-239528" />are not part of XML 1.0. They were
invented about a year after the original XML specification was
released. However, care was taken to ensure backwards compatibility.
Thus, an XML 1.0 parser that does not know about namespaces should
not have any trouble reading a document that uses namespaces. Colons
are legal characters in XML 1.0 element and attribute names. The
parser will simply report that some of the names contain colons.
Possible problems arise in the rare cases where different qualified
names resolve to the same full name or where the same qualified name
indicates a different full name in different parts of a document.
</p>

<p>A namespace-aware parser does add a couple of checks to the normal
well-formedness checks that a parser performs. Specifically, it
checks to see that all prefixes are mapped to URIs. It will reject
documents that use unmapped prefixes (except for
<tt class="literal">xml</tt> and <tt class="literal">xmlns</tt> when used as
specified in the XML 1.0 or Namespaces in XML specifications.) It
will further reject any element or attribute names that contain more
than one colon. Otherwise, it behaves almost exactly like a
non-namespace-aware parser. Other software that sits on top of the
raw XML parser, an XSLT engine for example, may treat elements
differently depending on to which namespace they belong. However, the
XML parser itself mostly doesn't care as long as all
well-formedness and namespace constraints are met.
</p>

<p>A possible exception occurs in the unlikely event that elements with
different prefixes belong to the same namespace. In this case, a
namespace-aware parser will report the elements as being the same,
while a non-namespace-aware parser will report them as different.
About equally unlikely is the case where two elements or attributes
with the same qualified name are in different namespaces because the
common prefix is bound to different URIs in different places in the
document. Slightly more likely is the case where two unprefixed names
are placed in different default namespaces. In both these cases, a
namespace-aware processor will report them as different, whereas a
non-namespace-aware processor will treat them the same. Many parsers
let you turn namespace processing on or off as you see fit.
</p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch04_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch04_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">4.2. Namespace Syntax</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">4.4. Namespaces and DTDs</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>