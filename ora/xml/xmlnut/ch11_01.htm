<html><head><title>XPointers (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_06.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch11_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Chapter 11. XPointers</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch11_01.htm">XPointers on URLs</a><br />
<a href="ch11_02.htm">XPointers in Links</a><br />
<a href="ch11_03.htm">Bare Names</a><br />
<a href="ch11_04.htm">Child Sequences</a><br />
<a href="ch11_05.htm">Namespaces</a><br />
<a href="ch11_06.htm">Points</a><br />
<a href="ch11_07.htm">Ranges</a><br /></p></div><p>XPointers <a name="xmlnut2-IDXTERM-1067" />are a
non-XML syntax for identifying locations inside XML documents. An
XPointer is attached to the end of the URI as its fragment identifier
to indicate a particular part of an XML document rather than the
entire document. XPointer syntax builds on the XPath syntax used by
XSLT and covered in <a href="ch09_01.htm">Chapter 9</a>. To the four
fundamental XPath data types--Boolean, node-set, number, and
string--XPointer adds points and ranges, as well as the
functions needed to work with these types. It also adds some
shorthand syntax for particularly useful and common forms of XPath
expressions.
</p><a name="ch11-2-fm2xml" /><blockquote><b>WARNING:</b> 
This chapter is based on the September 11, 2001 W3C Candidate
Recommendation of XPointer. However, there are known issues with this
draft, and some of the details described here are likely to change.
The most current version of the XPointer recommendation can be found
at <a href="../../../../../../www.w3.org/TR/xptr">http://www.w3.org/TR/xptr</a>.
</p>
</blockquote><div class="sect1"><a name="xmlnut2-CHP-11-SECT-1" />
<h2 class="sect1">11.1. XPointers on URLs</h2>

<p>A <a name="IXT-11-239668" />URL <a name="IXT-11-239669" />that identifies
a document typically looks something like <em class="emphasis">http://java.sun.com:80/products/jndi/index.html</em>.
The scheme, <em class="emphasis">http</em> in this example,
tells you what protocol the application should use to retrieve the
document. The authority, <em class="emphasis">java.sun.com:80</em> in this example, tells you
from which host the application should retrieve the document. The
authority may also contain the port to connect to that host and the
username and password to use. The path, <em class="emphasis">/products/jndi/index.html</em> in this example,
tells you which file in which directory to ask the server for. This
may not always be a real file in a real filesystem, but it should be
a complete document the server knows how to generate and return. All
of this you're already familiar with, and XPointer
doesn't change any of it.
</p>

<p>You probably also know that some URLs contain
<a name="IXT-11-239670" />fragment identifiers that point to a
particular named anchor inside the document the URL locates. This is
separated from the path by the sharp sign <em class="emphasis">#</em>. For example, if we were to add the
fragment <em class="emphasis">download</em> to the previous
URL, then it would become <em class="emphasis">http://java.sun.com:80/products/jndi/index.html#download</em>.
When a <a name="IXT-11-239671" />web browser follows a link to this URL, it
looks for a named anchor in the document at <em class="emphasis">http://java.sun.com:80/products/jndi/index.html</em>
with the name <em class="emphasis">download</em> such as
this one:
</p>

<blockquote><pre class="code">&lt;a name="download"&gt;&lt;/a&gt;</pre></blockquote>

<p>It would then scroll the browser window to the position in the
document where the anchor with that name is found. This is a simple
and straightforward system, and it works well for
HTML's simple needs. However, it has one major
drawback: to link to a particular point of a particular document, you
must be able to modify the document to which you're
linking in order to insert a named anchor at the point to which you
want to link. XPointer endeavors to eliminate this restriction by
allowing you to specify where you want to link to using full XPath
expressions as fragment identifiers. Furthermore, XPointer expands on
XPath by providing operations to select particular points in or
ranges of an XML document that do not necessarily coincide with any
one node or set of nodes. For instance, an XPointer can describe the
range of text currently selected by the mouse.
</p>

<p>The most basic form of XPointer is simply an XPath expression --
often, though not necessarily, a location path--enclosed in
the parentheses of <tt class="literal">xpointer(
)</tt><a name="IXT-11-239672" />. For
example, these are all acceptable XPointers:
</p>

<blockquote><pre class="code">xpointer(/)
xpointer(//first_name)
xpointer(id('sec-intro'))
xpointer(/people/person/name/first_name/text( ))
xpointer(//middle_initial[position( )=1]/../first_name)
xpointer(//profession[.="physicist"])
xpointer(/child::people/child::person[@index&lt;4000])
xpointer(/child::people/child::person/attribute::id)</pre></blockquote>

<p>Not all of these XPointers necessarily refer to a single element.
Depending on which document the XPointer is evaluated relative to, an
XPointer may identify zero, one, or more than one node. Most commonly
the nodes identified are elements, but they can also be attribute
nodes or text nodes, as well as points or ranges.
</p>

<p>If you're uncertain whether a given XPointer will
locate something, you can back it up with an alternative XPointer.
For example, this XPointer looks first for
<tt class="literal">first_name</tt> elements. However, if it
doesn't find any, it looks for
<tt class="literal">last_name</tt> elements instead:
</p>

<blockquote><pre class="code">xpointer(//first_name)xpointer(//last_name)</pre></blockquote>

<p>The <tt class="literal">last_name</tt> elements will be found only if there
are no <tt class="literal">first_name</tt> elements. You can string as many
of these XPointer parts together as you like. For example, this
XPointer looks first for <tt class="literal">first_name</tt> elements. If
it doesn't find any, it then seeks out
<tt class="literal">last_name</tt> elements. If it doesn't
find any of those, it looks for <tt class="literal">middle_initial</tt>
elements. If it doesn't find any of those, it
returns an empty node set:
</p>

<blockquote><pre class="code">xpointer(//first_name)xpointer(//last_name)xpointer(//middle_initial)</pre></blockquote>

<p>No special separator character or whitespace is required between the
individual <tt class="literal">xpointer( )</tt> parts, though whitespace is
allowed. This XPointer means the same thing:
</p>

<blockquote><pre class="code">xpointer(//first_name) xpointer(//last_name) xpointer(//middle_initial)</pre></blockquote>

</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_06.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch11_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">10.6. DTDs for XLinks</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">11.2. XPointers in Links</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
      </map>

</body></html>