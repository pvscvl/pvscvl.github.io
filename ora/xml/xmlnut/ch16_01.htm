<html><head><title>XML Schemas (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch15_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch16_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Chapter 16. XML Schemas</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch16_01.htm">Overview</a><br />
<a href="ch16_02.htm">Schema Basics</a><br />
<a href="ch16_03.htm">Working with Namespaces</a><br />
<a href="ch16_04.htm">Complex Types</a><br />
<a href="ch16_05.htm">Empty Elements</a><br />
<a href="ch16_06.htm">Simple Content</a><br />
<a href="ch16_07.htm">Mixed Content</a><br />
<a href="ch16_08.htm">Allowing Any Content</a><br />
<a href="ch16_09.htm">Controlling Type Derivation</a><br /></p></div><p>Although <a name="xmlnut2-IDXTERM-1348" />Document
Type Definitions can enforce basic structural rules on documents,
many applications need a more powerful and expressive validation
method. The W3C developed the XML Schema Recommendation, released on
May 2, 2001 after a long incubation period, to address these needs.
Schemas can describe complex restrictions on elements and attributes.
Multiple schemas can be combined to validate documents that use
multiple XML vocabularies. This chapter provides a rapid introduction
to key W3C XML Schema concepts and usage.
</p><p>This chapter progressively introduces the structures and concepts of
XML Schemas, beginning with the fundamental structure that is common
to all schemas. The chapter begins with a very simple schema and
proceeds to add more functionality to it until ever major feature of
XML Schemas has been introduced.
</p><div class="sect1"><a name="xmlnut2-CHP-16-SECT-1" />
<h2 class="sect1">16.1. Overview</h2>

<p>A schema is a formal description of what comprises a valid document.
An XML schema is an XML document containing a formal description of
what comprises a valid XML document. A W3C XML Schema Language schema
is an XML schema written in the particular syntax recommended by the
W3C.
</p>



<a name="ch16-3-fm2xml" /><blockquote><b>TIP:</b> 
In this chapter when we use the word <em class="emphasis">schema</em>
without further qualification, we are referring specifically to a
schema written in the W3C XML schema language. However, there are
numerous other XML schema languages, including
<a name="IXT-16-240017" />RELAX NG and
<a name="IXT-16-240018" />Schematron, each with their own
strengths and weaknesses. </p>
</blockquote>

<p>An
<a name="IXT-16-240019" />XML
document described by a schema is called an <em class="filename">instance
document</em><a name="IXT-16-240020" /><a name="IXT-16-240021" />. If a
document satisfies all the constraints specified by the schema, it is
considered to be <em class="emphasis">schema-valid</em>. The schema
document is associated with an instance document through one of the
following methods: </p> <ul><li> <p>An
<tt class="literal">xsi:schemaLocation</tt><a name="IXT-16-240022" /> attribute on an element contains a
list of namespaces used within that element and the URLs of the
schemas with which to validate elements in those namespaces. </p>
</li><li> <p>An
<tt class="literal">xsi:noNamespaceSchemaLocation</tt><a name="IXT-16-240023" /> attribute contains a URL for the
schema used to validate elements that are not in any namespace.
</p> </li><li> <p>The
<a name="IXT-16-240024" />
<a name="IXT-16-240025" />validating parser may
attempt to locate the schema using the namespace of the element
itself in one of these ways: directly by looking for a schema at that
namespace, indirectly by looking for a RDDL document at that
namespace, or implicitly by knowing in advance which schema is right
for that namespace. </p> </li><li> <p>A validating
parser may be instructed to validate a given document against an
explicitly provided schema, ignoring any hints that might be provided
within the document itself. </p> </li></ul>


<a name="xmlnut2-CHP-16-SECT-1.1" /><div class="sect2">
<h3 class="sect2">16.1.1. Schemas Versus DTDs</h3>

<p>DTDs <a name="IXT-16-240026" />provide
<a name="IXT-16-240027" />the capability to do basic validation of
the following items in XML documents:
</p>

<ul><li>
<p>Element nesting</p>
</li><li>
<p>Element occurrence constraints</p>
</li><li>
<p>Permitted attributes</p>
</li><li>
<p>Attribute types and default values</p>
</li></ul>
<p>However, DTDs do not provide fine control over the format and data
types of element and attribute values. Other than the various special
attribute types (<tt class="literal">ID</tt>, <tt class="literal">IDREF</tt>,
<tt class="literal">ENTITY</tt>, <tt class="literal">NMTOKEN</tt>, and so forth),
once an element or attribute has been declared to contain character
data, no limits may be placed on the length, type, or format of that
content. For narrative documents (such as web pages, book chapters,
newsletters, etc.), this level of control is probably good enough.
</p>

<p>But as XML makes inroads into more data-intensive applications (such
as web services using SOAP), more precise control over the text
content of elements and attributes becomes important. The W3C XML
Schema standard includes the following features:
</p>

<ul><li>
<p>Simple and complex data types</p>
</li><li>
<p>Type derivation and inheritance</p>
</li><li>
<p>Element occurrence constraints</p>
</li><li>
<p>Namespace-aware element and attribute declarations</p>
</li></ul>
<p>The most important of these features is the addition of simple data
types for parsed character data and attribute values. Unlike DTDs,
schemas can enforce specific rules about the contents of elements and
attributes. In addition to a wide range of built-in simple types
(such as <tt class="literal">string</tt>, <tt class="literal">integer</tt>,
<tt class="literal">decimal</tt>, and <tt class="literal">dateTime</tt>), the
schema language provides a framework for declaring new data types,
deriving new types from old types, and reusing types from other
schemas.
</p>

<p>Besides simple data types, schemas add the ability to place more
explicit restrictions on the number and sequence of child elements
that can appear in a given location. This is even true when elements
are mixed with character data, unlike the mixed content model
(<tt class="literal">#PCDATA</tt>) supported by DTDs.
</p>

<a name="ch16-5-fm2xml" /><blockquote><b>WARNING:</b> 
There are a few things that DTDs do that XML Schema
can't do. Defining general entities for use in
documents is one of these. XML Inclusions (XInclude) may be able to
replace some uses of general entities, but DTDs remain extremely
convenient for short entities.
</p>
</blockquote>

</div>
<a name="xmlnut2-CHP-16-SECT-1.2" /><div class="sect2">
<h3 class="sect2">16.1.2. Namespace Issues</h3>

<p>As <a name="IXT-16-240028" />
<a name="IXT-16-240029" />XML documents are exchanged between
different people and organizations around the world, proper use of
namespaces becomes critical to prevent misunderstandings. Depending
on what type of document is being viewed, a simple element like
<tt class="literal">&lt;fullName&gt;Zoe&lt;/fullName&gt;</tt> could have
widely different meanings. It could be a person's
name, a pet's name, or the name of a ship that
recently docked. By associating every element with a namespace URI,
it is possible to distinguish between two elements with the same
local name.
</p>

<p>Because the <em class="emphasis">Namespaces in
XML</em><a name="IXT-16-240030" /> recommendation was released after the XML
1.0 recommendation, DTDs do not provide explicit support for
declaring namespace-aware XML applications. Unlike DTDs (where
element and attribute declarations must include a namespace prefix),
schemas validate against the combination of the namespace URI and
local name rather than the prefixed name.
</p>

<p>Namespaces are also used within <a name="IXT-16-240031" />instance documents to include directives
to the schema processor. For example, the special attributes that are
used to associate an element with a schema
(<tt class="literal">schemaLocation</tt> and
<tt class="literal">noNamespaceSchemaLocation</tt>) must be associated with
the official XML Schema instance namespace URI
(<tt class="literal">http://www.w3.org/2001/XMLSchema-instance</tt>) in
order for the schema processor to recognize it as an instruction to
itself.
</p>

</div>
</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch15_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch16_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">15.3. Sharing Your XML format</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">16.2. Schema Basics</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
      </map>

</body></html>