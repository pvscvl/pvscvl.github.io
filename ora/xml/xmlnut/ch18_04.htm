<html><head><title>Specific Node-Type Interfaces (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch18_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch18_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">18.4. Specific Node-Type Interfaces</h2>

<p>Though it is possible to access the data from the original XML
document using only the <tt class="literal">Node</tt> interface, the DOM
Core provides a number of specific node-type interfaces that simplify
common programming tasks. These specific node types can be divided
into two broad types: structural nodes and content nodes.
</p>

<a name="xmlnut2-CHP-18-SECT-4.1" /><div class="sect2">
<h3 class="sect2">18.4.1. Structural Nodes</h3>

<p>Within <a name="IXT-18-239567" /> <a name="IXT-18-239568" />an
XML document, a number of syntax structures exist that are not
formally part of the content. The following interfaces provide access
to the portions of the document that are not related to character or
element data.
</p>

<a name="xmlnut2-CHP-18-SECT-4.1.1" /><div class="sect3">
<h3 class="sect3">18.4.1.1. DocumentType</h3>

<p>The <tt class="literal">DocumentType</tt><a name="IXT-18-239569" /> interface provides access to
the XML document type definition's notations,
entities, internal subset, public ID, and system ID. Since a document
can have only one <tt class="literal">!DOCTYPE</tt> declaration, only one
<tt class="literal">DocumentType</tt> node can exist for a given document.
It is accessed via the <tt class="literal">doctype</tt> attribute of the
<tt class="literal">Document</tt> interface. The definition of the
<tt class="literal">DocumentType</tt> interface is shown in <a href="ch18_04.htm">Table 18-6</a>.
</p>

<a name="xmlnut2-CHP-18-TABLE-6" /><h4 class="objtitle">Table 18-6. DocumentType interface, derived from Node </h4><table border="1" cellpadding="3">





<tr>
<th>
<p>Type</p>
</th>
<th>
<p>Name</p>
</th>
<th>
<p>Read-only</p>
</th>
<th>
<p>DOM 2.0</p>
</th>
</tr>


<tr>
<td>
<p><b class="emphasis-bold">Attributes</b></p>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td></tr>
<tr>
<td>
<p>NamedNodeMap</p>
</td>
<td>
<p>entities</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>
<p>name</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>NamedNodeMap</p>
</td>
<td>
<p>notations</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>
<p>publicId</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>
<p>systemId</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>

</table><p>

<p>Using additional fields available from DOM Level 2, it is now
possible to fully reconstruct a parsed document using only the
information provided with the DOM framework. No programmatic way to
modify <tt class="literal">DocumentType</tt> node contents currently
exists.
</p>

</div>

<a name="xmlnut2-CHP-18-SECT-4.1.2" /><div class="sect3">
<h3 class="sect3">18.4.1.2. ProcessingInstruction</h3>

<p>This <a name="IXT-18-239570" />node type provides direct access to an XML
name processing instruction's contents. Though
processing instructions appear in the document's
text, they may also appear before or after the root element, as well
as in DTDs. <a href="ch18_04.htm">Table 18-7</a> describes the
<tt class="literal">ProcessingInstruction</tt> node's
attributes.
</p>

<a name="xmlnut2-CHP-18-TABLE-7" /><h4 class="objtitle">Table 18-7. ProcessingInstruction interface, derived from Node </h4><table border="1" cellpadding="3">





<tr>
<th>
<p><b class="emphasis-bold">Type</b></p>
</th>
<th>
<p><b class="emphasis-bold">Name</b></p>
</th>
<th>
<p><b class="emphasis-bold">Read-only</b></p>
</th>
<th>
<p><b class="emphasis-bold">DOM 2.0</b></p>
</th>
</tr>


<tr>
<td>
<p><b class="emphasis-bold">Attributes</b></p>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td></tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>
<p>data</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>
<p>target</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>

</table><p>

<p>Though processing instructions resemble normal XML tags, remember
that the only syntactically defined part is the target name, which is
an XML name token. The remaining data (up to the terminating
<tt class="literal">&gt;</tt>) is free-form. See <a href="ch17_01.htm">Chapter 17</a> for more information about uses (and potential
misuses) of XML processing instructions.
</p>

</div>

<a name="xmlnut2-CHP-18-SECT-4.1.3" /><div class="sect3">
<h3 class="sect3">18.4.1.3. Notation</h3>

<p>XML <a name="IXT-18-239571" />notations formally declare the format for
external unparsed entities and processing instruction targets. The
list of all available notations is stored in a
<tt class="literal">NamedNodeMap</tt> within the
document's <tt class="literal">DOCTYPE</tt> node, which is
accessed from the <tt class="literal">Document</tt> interface. The
definition of the <tt class="literal">Notation</tt> interface is shown in
<a href="ch18_04.htm">Table 18-8</a>.
</p>

<a name="xmlnut2-CHP-18-TABLE-8" /><h4 class="objtitle">Table 18-8. Notation interface, derived from Node  </h4><table border="1" cellpadding="3">





<tr>
<th>
<p>Type</p>
</th>
<th>
<p>Name</p>
</th>
<th>
<p>Read-only</p>
</th>
<th>
<p>DOM 2.0</p>
</th>
</tr>


<tr>
<td>
<p><b class="emphasis-bold">Attributes</b></p>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td></tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>
<p>publicId</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>
<p>systemId</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>

</table><p>

</div>

<a name="xmlnut2-CHP-18-SECT-4.1.4" /><div class="sect3">
<h3 class="sect3">18.4.1.4. Entity</h3>

<p>The <a name="IXT-18-239572" />name of the <tt class="literal">Entity</tt>
interface is somewhat ambiguous, but its meaning becomes clear when
it is connected with the <tt class="literal">EntityReference</tt>
interface, which is also part of the DOM Core. The
<tt class="literal">Entity</tt> interface provides access to the entity
declaration's notation name, public ID, and system
ID. Parsed entity nodes have <tt class="literal">childNodes</tt>, while
unparsed entities have a <tt class="literal">notationName</tt>. The
definition of this interface is shown in <a href="ch18_04.htm">Table 18-9</a>. 
</p>

<a name="xmlnut2-CHP-18-TABLE-9" /><h4 class="objtitle">Table 18-9. Entity interface, derived from Node </h4><table border="1" cellpadding="3">





<tr>
<th>
<p>Type</p>
</th>
<th>
<p>Name</p>
</th>
<th>
<p>Read-only</p>
</th>
<th>
<p>DOM 2.0</p>
</th>
</tr>


<tr>
<td>
<p><b class="emphasis-bold">Attributes</b></p>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td></tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>
<p>notationName</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>
<p>publicId</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>
<p>systemId</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>

</table><p>

<p>All members of this interface are read-only and cannot be modified at
runtime.
</p>

</div>
</div>
<a name="xmlnut2-CHP-18-SECT-4.2" /><div class="sect2">
<h3 class="sect2">18.4.2. Content Nodes</h3>

<p>The <a name="xmlnut2-IDXTERM-1655" /> <a name="xmlnut2-IDXTERM-1656" />actual data conveyed by an XML document
is contained completely within the document element. The following
node types map directly to the XML document's
nonstructural parts, such as character data, elements, and attribute
values.
</p>

<a name="xmlnut2-CHP-18-SECT-4.2.1" /><div class="sect3">
<h3 class="sect3">18.4.2.1. Document</h3>

<p>Each <a name="IXT-18-239573" />parsed document causes the creation of a
single <tt class="literal">Document</tt> node in memory. (Empty
<tt class="literal">Document</tt> nodes can be created through the
<a name="IXT-18-239574" /><tt class="literal">DOMImplementation</tt>
interface.) This interface provides access to the document type
information and the single, top-level <tt class="literal">Element</tt> node
that contains the entire body of the parsed document. It also
provides access to the class factory methods that allow an
application to create new content nodes that were not created by
parsing a document. <a href="ch18_04.htm">Table 18-10</a> shows all attributes
and methods of the <tt class="literal">Document</tt> interface.
</p>

<a name="xmlnut2-CHP-18-TABLE-10" /><h4 class="objtitle">Table 18-10. Document interface, derived from Node </h4><table border="1" cellpadding="3">






<tr>
<th>
<p>Type</p>
</th>
<th>&nbsp;</th>
<th>
<p>Name</p>
</th>
<th>
<p>Read-only</p>
</th>
<th>
<p>DOM 2.0</p>
</th>
</tr>


<tr>
<td>
<p><b class="emphasis-bold">Attributes</b></p>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td></tr>
<tr>
<td>
<p>DocumentType</p>
</td>
<td>&nbsp;</td>
<td>
<p>doctype</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>DOMImplementation</p>
</td>
<td>&nbsp;</td>
<td>
<p>implementation</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Element</p>
</td>
<td>&nbsp;</td>
<td>
<p>documentElement</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr><td>
<p><b class="emphasis-bold">Methods</b></p>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td></tr>
<tr>
<td>
<p>Attr</p>
</td>
<td>&nbsp;</td>
<td>
<p>createAttribute</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>name</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Attr</p>
</td>
<td>&nbsp;</td>
<td>
<p>createAttributeNS</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>namespaceURI</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>qualifiedName</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>
<p>CDATASection</p>
</td>
<td>&nbsp;</td>
<td>
<p>createCDATASection</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>data</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Comment</p>
</td>
<td>&nbsp;</td>
<td>
<p>createComment</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>data</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>DocumentFragment</p>
</td>
<td>&nbsp;</td>
<td>
<p>createDocumentFragment</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Element</p>
</td>
<td>&nbsp;</td>
<td>
<p>createElement</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>tagName</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Element</p>
</td>
<td>&nbsp;</td>
<td>
<p>createElementNS</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>namespaceURI</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>qualifiedName</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>
<p>EntityReference</p>
</td>
<td>&nbsp;</td>
<td>
<p>createEntityReference</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>name</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>ProcessingInstruction</p>
</td>
<td>&nbsp;</td>
<td>
<p>createProcessingInstruction</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>target</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>data</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Text</p>
</td>
<td>&nbsp;</td>
<td>
<p>createTextNode</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>data</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Element</p>
</td>
<td>&nbsp;</td>
<td>
<p>getElementById</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>elementId</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>NodeList</p>
</td>
<td>&nbsp;</td>
<td>
<p>getElementsByTagName</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>tagname</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>NodeList</p>
</td>
<td>&nbsp;</td>
<td>
<p>getElementsByTagNameNS</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>namespaceURI</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>localName</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>
<p>Node</p>
</td>
<td>&nbsp;</td>
<td>
<p>importNode</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>Node</p>
</td>
<td>
<p>importedNode</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>Boolean</p>
</td>
<td>
<p>deep</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>

</table><p>

<p>The various <tt class="literal">create...( )</tt> methods are important for
applications that wish to modify the structure of a document that was
previously parsed. Note that nodes created using one
<tt class="literal">Document</tt> instance may only be inserted into the
document tree belonging to the <tt class="literal">Document</tt> that
created them. <a name="IXT-18-239575" />DOM Level 2 provides a new
<tt class="literal">importNode( )</tt> method that allows a node, and
possibly its children, to be essentially copied from one document to
another.
</p>

<p>Besides the various node-creation methods, some methods can locate
specific XML elements or lists of elements. The
<tt class="literal">getElementsByTagName(
)</tt><a name="IXT-18-239576" /> and <tt class="literal">getElementsByTagNameNS(
)</tt><a name="IXT-18-239577" /> methods return a list of all XML elements
with the name, and possibly namespace, specified. The
<tt class="literal">getElementById(
)</tt><a name="IXT-18-239578" /> method returns the single element with
the given <tt class="literal">ID</tt> attribute.
</p>

</div>

<a name="xmlnut2-CHP-18-SECT-4.2.2" /><div class="sect3">
<h3 class="sect3">18.4.2.2. DocumentFragment</h3>

<p>Applications <a name="IXT-18-239579" />that allow real-time editing of XML
documents sometimes need to temporarily park document nodes outside
the hierarchy of the parsed document. A visual editor that wants to
provide clipboard functionality is one example. When the time comes
to implement the cut function, it is possible to move the cut nodes
temporarily to a <tt class="literal">DocumentFragment</tt> node without
deleting them, rather than having to leave them in place within the
live document. Then when they need to be pasted back into the
document, they can be moved back. The
<tt class="literal">DocumentFragment</tt> interface, derived from
<tt class="literal">Node</tt>, has no interface-specific attributes or
methods.
</p>

</div>

<a name="xmlnut2-CHP-18-SECT-4.2.3" /><div class="sect3">
<h3 class="sect3">18.4.2.3. Element</h3>

<p><tt class="literal">Element</tt> <a name="IXT-18-239580" />nodes are the most frequently encountered
node type in a typical XML document. These nodes are parents for the
<tt class="literal">Text</tt>, <tt class="literal">Comment</tt>,
<tt class="literal">EntityReference</tt>,
<tt class="literal">ProcessingInstruction</tt>,
<tt class="literal">CDATASection</tt>, and child <tt class="literal">Element</tt>
nodes that comprise the document's body. They also
allow access to the <tt class="literal">Attr</tt> objects that contain the
element's attributes. <a href="ch18_04.htm">Table 18-11</a>
shows all attributes and methods supported by the
<tt class="literal">Element</tt> interface.
</p>

<a name="xmlnut2-CHP-18-TABLE-11" /><h4 class="objtitle">Table 18-11. Element interface, derived from Node </h4><table border="1" cellpadding="3">






<tr>
<th>
<p>Type</p>
</th>
<th>&nbsp;</th>
<th>
<p>Name</p>
</th>
<th>
<p>Read-only</p>
</th>
<th>
<p>DOM 2.0</p>
</th>
</tr>


<tr>
<td>
<p><b class="emphasis-bold">Attributes</b></p>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td></tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>&nbsp;</td>
<td>
<p>tagName</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p><b class="emphasis-bold">Methods</b></p>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td></tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>&nbsp;</td>
<td>
<p>getAttribute</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>name</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Attr</p>
</td>
<td>&nbsp;</td>
<td>
<p>getAttributeNode</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>name</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Attr</p>
</td>
<td>&nbsp;</td>
<td>
<p>getAttributeNodeNS</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>namespaceURI</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>localName</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>&nbsp;</td>
<td>
<p>getAttributeNS</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>namespaceURI</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>localName</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>
<p>NodeList</p>
</td>
<td>&nbsp;</td>
<td>
<p>getElementsByTagName</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>name</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>NodeList</p>
</td>
<td>&nbsp;</td>
<td>
<p>getElementsByTagNameNS</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>namespaceURI</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>localName</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>
<p>Boolean</p>
</td>
<td>&nbsp;</td>
<td>
<p>hasAttribute</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>name</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>
<p>Boolean</p>
</td>
<td>&nbsp;</td>
<td>
<p>hasAttributeNS</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>namespaceURI</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>localName</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>
<p>Void</p>
</td>
<td>&nbsp;</td>
<td>
<p>removeAttribute</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>name</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Attr</p>
</td>
<td>&nbsp;</td>
<td>
<p>removeAttributeNode</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>Attr</p>
</td>
<td>
<p>oldAttr</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Attr</p>
</td>
<td>&nbsp;</td>
<td>
<p>removeAttributeNS</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>namespaceURI</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>localName</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>
<p>Void</p>
</td>
<td>&nbsp;</td>
<td>
<p>setAttribute</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>name</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Attr</p>
</td>
<td>&nbsp;</td>
<td>
<p>setAttributeNode</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>Attr</p>
</td>
<td>
<p>newAttr</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Attr</p>
</td>
<td>&nbsp;</td>
<td>
<p>setAttributeNodeNS</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>Attr</p>
</td>
<td>
<p>newAttr</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Attr</p>
</td>
<td>&nbsp;</td>
<td>
<p>setAttributeNS</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>namespaceURI</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>qualifiedName</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>value</p>
</td>
<td>
&nbsp;
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>

</table><p>

</div>

<a name="xmlnut2-CHP-18-SECT-4.2.4" /><div class="sect3">
<h3 class="sect3">18.4.2.4. Attr</h3>

<p>Since <a name="IXT-18-239581" />XML attributes may contain either text
values or entity references, the DOM stores element attribute values
as <tt class="literal">Node</tt> subtrees. The following XML fragment shows
an element with two attributes:
</p>

<blockquote><pre class="code">&lt;!ENTITY bookcase_pic SYSTEM "bookcase.gif" NDATA gif&gt;
&lt;!ELEMENT picture EMPTY&gt;
&lt;!ATTLIST picture
   src ENTITY #REQUIRED
   alt CDATA #IMPLIED&gt;
. . .
&lt;picture src="bookcase_pic" alt="3/4 view of bookcase"/&gt;</pre></blockquote>

<p>The first attribute contains a reference to an unparsed entity; the
second contains a simple string. Since the DOM framework stores
element attributes as instances of the <tt class="literal">Attr</tt>
interface, a few parsers make the contents of attributes available as
actual subtrees of <tt class="literal">Node</tt> objects. In this example,
the <tt class="literal">src</tt> attribute would contain an
<tt class="literal">EntityReference</tt> object instance. Note that the
<tt class="literal">nodeValue</tt> of the <tt class="literal">Attr</tt> node
gives the flattened text value from the <tt class="literal">Attr</tt>
node's children. <a href="ch18_04.htm">Table 18-12</a> shows
the attributes and methods supported by the <tt class="literal">Attr</tt>
interface.
</p>

<a name="xmlnut2-CHP-18-TABLE-12" /><h4 class="objtitle">Table 18-12. Attr interface, derived from Node </h4><table border="1" cellpadding="3">





<tr>
<th>
<p>Type</p>
</th>
<th>
<p>Name</p>
</th>
<th>
<p>Read-only</p>
</th>
<th>
<p>DOM 2.0</p>
</th>
</tr>


<tr>
<td>
<p><b class="emphasis-bold">Attributes</b></p>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td></tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>
<p>name</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Element</p>
</td>
<td>
<p>ownerElement</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
</tr>
<tr>
<td>
<p>Boolean</p>
</td>
<td>
<p>specified</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>
<p>value</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>

</table><p>

<p>Besides the attribute name and value, the <tt class="literal">Attr</tt>
interface exposes the <tt class="literal">specified</tt> flag that
indicates whether this particular attribute instance was included
explicitly in the XML document or inherited from the
<tt class="literal">!ATTLIST</tt> declaration of the DTD. There is also a
back pointer to the <tt class="literal">Element</tt> node that owns this
attribute object.
</p>

</div>

<a name="xmlnut2-CHP-18-SECT-4.2.5" /><div class="sect3">
<h3 class="sect3">18.4.2.5. CharacterData</h3>

<p>Several <a name="IXT-18-239582" />types of data within a DOM node tree
represent blocks of character data that do not include markup.
<tt class="literal">CharacterData</tt> is an abstract interface that
supports common text-manipulation methods that are used by the
concrete interfaces <tt class="literal">Comment</tt>,
<tt class="literal">Text</tt>, and <tt class="literal">CDATASection</tt>. <a href="ch18_04.htm">Table 18-13</a> shows the attributes and methods supported by
the <tt class="literal">CharacterData</tt> interface.
</p>

<a name="xmlnut2-CHP-18-TABLE-13" /><h4 class="objtitle">Table 18-13. CharacterData interface, derived from Node </h4><table border="1" cellpadding="3">






<tr>
<th>
<p>Type</p>
</th>
<th>&nbsp;</th>
<th>
<p>Name</p>
</th>
<th>
<p>Read-only</p>
</th>
<th>
<p>DOM 2.0</p>
</th>
</tr>


<tr>
<td>
<p><b class="emphasis-bold">Attributes</b></p>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td></tr>
<tr>
<td>
<p>DOMString</p>
</td>
<td>&nbsp;</td>
<td>
<p>data</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Unsigned long</p>
</td>
<td>&nbsp;</td>
<td>
<p>length</p>
</td>
<td>
<p><img src="figs/check.gif" alt="Figure " />
</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr><td>
<p><b class="emphasis-bold">Methods</b></p>
</td>
<td>
&nbsp;
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td></tr>
<tr>
<td>
<p>Void</p>
</td>
<td>&nbsp;</td>
<td>
<p>appendData</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>arg</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Void</p>
</td>
<td>&nbsp;</td>
<td>
<p>deleteData</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>Unsigned long</p>
</td>
<td>
<p>offset</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>Unsigned long</p>
</td>
<td>
<p>count</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Void</p>
</td>
<td>&nbsp;</td>
<td>
<p>insertData</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>Unsigned long</p>
</td>
<td>
<p>offset</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>arg</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>
<p>Void</p>
</td>
<td>&nbsp;</td>
<td>
<p>replaceData</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>Unsigned long</p>
</td>
<td>
<p>offset</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>Unsigned long</p>
</td>
<td>
<p>count</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>DOMString</p>
</td>
<td>
<p>arg</p>
</td>
<td>
&nbsp;
</td>
<td>
&nbsp;
</td>
</tr>

</table><p>

</div>

<a name="xmlnut2-CHP-18-SECT-4.2.6" /><div class="sect3">
<h3 class="sect3">18.4.2.6. Comment</h3>

<p>DOM <a name="IXT-18-239583" />parsers are not required to make the
contents of XML comments available after parsing, and relying on
comment data in your application is poor programming practice at
best. If your application requires access to metadata that should not
be part of the basic XML document, consider using processing
instructions instead. The <tt class="literal">Comment</tt> interface,
derived from <tt class="literal">CharacterData</tt>, has no
interface-specific attributes or methods.
</p>

</div>

<a name="xmlnut2-CHP-18-SECT-4.2.7" /><div class="sect3">
<h3 class="sect3">18.4.2.7. EntityReference</h3>

<p>If an <a name="IXT-18-239584" />XML document contains references to
general entities within the body of its elements, the DOM-compliant
parser may pass these references along as
<tt class="literal">EntityReference</tt> nodes. This behavior is not
guaranteed because the parser is free to expand any entity or
character reference included with the actual Unicode character
sequence it represents. The <tt class="literal">EntityReference</tt>
interface, derived from <tt class="literal">Node</tt>, has no
interface-specific attributes or methods.
</p>

</div>

<a name="xmlnut2-CHP-18-SECT-4.2.8" /><div class="sect3">
<h3 class="sect3">18.4.2.8. Text</h3>

<p>The <a name="IXT-18-239585" />character data of an XML document is
stored within <tt class="literal">Text</tt> nodes. <tt class="literal">Text</tt>
nodes are children of either <tt class="literal">Element</tt> or
<tt class="literal">Attr</tt> nodes. After parsing, every contiguous block
of character data from the original XML document is translated
directly into a single <tt class="literal">Text</tt> node. Once the
document has been parsed, however, it is possible that the client
application may insert, delete, and split <tt class="literal">Text</tt>
nodes so that <tt class="literal">Text</tt> nodes may be side by side
within the document tree. <a href="ch18_04.htm">Table 18-14</a> describes the
<tt class="literal">Text</tt> interface.
</p>

<a name="xmlnut2-CHP-18-TABLE-14" /><h4 class="objtitle">Table 18-14. Text interface, derived from CharacterData </h4><table border="1" cellpadding="3">





<tr>
<th>
<p>Type</p>
</th>
<th>&nbsp;</th>
<th>
<p>Name</p>
</th>
<th>
<p>DOM 2.0</p>
</th>
</tr>


<tr>
<td>
<p><b class="emphasis-bold">Methods</b></p>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td></tr>
<tr>
<td>
<p>Text</p>
</td>
<td>&nbsp;</td>
<td>
<p>splitText</p>
</td>
<td>
&nbsp;
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<p>Unsigned long</p>
</td>
<td>
<p>offset</p>
</td>
<td>
&nbsp;
</td>
</tr>

</table><p>

<p>The <tt class="literal">splitText</tt> method provides a way to split a
single <tt class="literal">Text</tt> node into two nodes at a given point.
This split would be useful if an editing application wished to insert
additional markup nodes into an existing island of character data.
After the split, it is possible to insert additional nodes into the
resulting gap.
</p>

</div>

<a name="xmlnut2-CHP-18-SECT-4.2.9" /><div class="sect3">
<h3 class="sect3">18.4.2.9. CDATASection</h3>

<p><tt class="literal">CDATA</tt> sections <a name="IXT-18-239586" />provide a simplified way to
include characters that would normally be considered markup in an XML
document. These sections are stored within a DOM document tree as
<tt class="literal">CDATASection</tt> nodes. The <a name="IXTR3-94" /> <a name="IXTR3-95" /><tt class="literal">CDATASection</tt>
interface, derived from <tt class="literal">Text</tt>, has no
interface-specific attributes or methods.
</p>

</div>
</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch18_03.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch18_05.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">18.3. Node and Other Generic Interfaces</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">18.5. The DOMImplementation Interface</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>