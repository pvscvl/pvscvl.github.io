<html><head><title>Cascading Style Sheets (CSS) (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch12_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>


<h1 class="chapter">Chapter 12. Cascading Style Sheets (CSS)</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4><p>
<a href="ch12_01.htm">The Three Levels of CSS</a><br />
<a href="ch12_02.htm">CSS Syntax</a><br />
<a href="ch12_03.htm">Associating Stylesheets with XML Documents</a><br />
<a href="ch12_04.htm">Selectors</a><br />
<a href="ch12_05.htm">The Display Property</a><br />
<a href="ch12_06.htm">Pixels, Points, Picas, and Other Units of Length</a><br />
<a href="ch12_07.htm">Font Properties</a><br />
<a href="ch12_08.htm">Text Properties</a><br />
<a href="ch12_09.htm">Colors</a><br /></p></div><p>The names of <a name="xmlnut2-IDXTERM-1109" />most <a name="IXT-12-240865" />elements describe the
semantic meaning of the content they contain. However, ultimately
this content needs to be formatted and displayed to users. For this
to occur, there must be a step where formatting information is
applied to the XML document and the semantic markup is transformed
into presentational markup. There are a variety of choices for the
syntax of this presentation layer. However, two are particularly
noteworthy:
</p><ul><li>
<p>Cascading Style Sheets (CSS)</p>
</li><li>
<p><a name="IXT-12-240866" />XSL Formatting Objects (XSL-FO)
</p>
</li></ul><p>CSS is a non-XML syntax for describing the appearance of particular
elements in a document. CSS is a very straight-forward language. No
transformation is performed. The parsed character data of the
document is presented more or less exactly as it appears in the XML
document, though of course you can always transform the document with
XSLT and then apply a CSS stylesheet to it if you need to rearrange
the content of a document before showing it to the user. A CSS
stylesheet does not change the markup of an XML document at all; it
merely applies styles to the content that already exists.
</p><p>By way of contrast, XSL-FO is a complete XML application for
describing the layout of text on a page. It has elements that
represent pages, blocks of text on the pages, graphics, horizontal
rules, and more. You do not normally work with this application
directly. Instead, you write an XSLT stylesheet that transforms your
document's native markup into XSL-FO. The
application rendering the document reads the XSL-FO and displays it
to the user.
</p><p>In this and the next chapter, we'll demonstrate the
features of the two major stylesheet languages by applying them to
the simple well-formed XML document shown in <a href="ch12_01.htm">Example 12-1</a>. This document does not have a document type
declaration and is not valid, though a DTD or schema could be added
easily enough. In general, DTDs and schemas don't
have any impact on stylesheets, except insofar as they change the
document content through entity declarations, default attribute
values, and the like.
</p><a name="xmlnut2-CHP-12-EX-1" /><div class="example">
<h4 class="objtitle">Example 12-1. Marjorie Anderson's recipe for Southern Corn Bread </h4>
<blockquote><pre class="code">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;?xml-stylesheet type="text/css" href="recipe.css"?&gt;
&lt;recipe source="Marjorie Anderson"&gt;
  &lt;dish&gt;Southern Corn Bread&lt;/dish&gt;
  &lt;ingredients&gt;
    &lt;ingredient&gt;
      &lt;quantity&gt;1 cup&lt;/quantity&gt;
      &lt;component&gt;flour&lt;/component&gt;
    &lt;/ingredient&gt;
    &lt;ingredient&gt;
      &lt;quantity&gt;4 tablespoons&lt;/quantity&gt;
      &lt;component&gt;Royal Baking Powder&lt;/component&gt;
    &lt;/ingredient&gt;
    &lt;ingredient&gt;
      &lt;quantity&gt;<sup class="superscript">1</sup>/<sub class="subscript">2</sub> teaspoon&lt;/quantity&gt;
      &lt;component&gt;salt&lt;/component&gt;
    &lt;/ingredient&gt;
    &lt;ingredient&gt;
      &lt;quantity&gt;1 cup&lt;/quantity&gt;
      &lt;component&gt;corn meal&lt;/component&gt;
    &lt;/ingredient&gt;
    &lt;ingredient&gt;
      &lt;quantity&gt;1<sup class="superscript">1</sup>/<sub class="subscript">2</sub> cups&lt;/quantity&gt;
      &lt;component&gt;whole milk&lt;/component&gt;
    &lt;/ingredient&gt;
    &lt;ingredient&gt;
      &lt;quantity&gt;4 tablespoons&lt;/quantity&gt;
      &lt;component&gt;melted butter&lt;/component&gt;
    &lt;/ingredient&gt;
  &lt;/ingredients&gt;

  &lt;directions&gt;
    &lt;step&gt;Sift flour, baking powder, sugar &amp;amp; salt together.&lt;/step&gt;
    &lt;step&gt;Add 1 cup corn meal.&lt;/step&gt;
    &lt;step&gt;
      Beat egg in cup and add beaten egg and 1<sup class="superscript">1</sup>/<sub class="subscript">2</sub> cups whole
       milk to make a batter. Stir well.
    &lt;/step&gt;
    &lt;step&gt;
      Add melted shortening and beat until light and thoroughly mixed.
    &lt;/step&gt;
    &lt;step&gt;
      Pour into greased shallow pan or greased muffin rings.
    &lt;/step&gt;
    &lt;step&gt;
      Bake in hot oven at &lt;temperature&gt;425&#xBA; F&lt;/temperature&gt; for
      &lt;duration&gt;25 minutes&lt;/duration&gt;.
    &lt;/step&gt;
    &lt;step optional="yes"&gt;
      Cut into squares if cooked in shallow pan.
    &lt;/step&gt;
  &lt;/directions&gt;

  &lt;story&gt;
    After my mother-in-law &lt;person&gt;Marjorie Anderson&lt;/person&gt; died,
    Beth and I found this recipe written on the "extra recipes"
    page in a local cookbook in her cupboard.
    This was published by The Episcopal Churchwomen,
    Church of Ascension, &lt;city&gt;Mt. Sterling&lt;/city&gt;,
    &lt;state&gt;Kentucky&lt;/state&gt;.
  &lt;/story&gt;

&lt;/recipe&gt;</pre></blockquote>
</div><div class="sect1"><a name="xmlnut2-CHP-12-SECT-1" />
<h2 class="sect1">12.1. The Three Levels of CSS</h2>

<p>At the time of this writing, there are three versions of CSS.
<a name="IXT-12-240867" /> <a name="IXT-12-240868" />CSS Level 1 was an early
W3C Recommendation from 1996 for HTML only, though the extension to
XML was obvious. The CSS Level 1 specification was incomplete and led
to inconsistent browser implementations.
</p>

<p><a name="IXT-12-240869" /> <a name="IXT-12-240870" />CSS Level 2 is the current
recommendation and the version of CSS on which this chapter focuses.
CSS Level 2 places XML on an equal footing with HTML. Indeed, CSS
Level 2 often works better with XML than with HTML because CSS styles
don't have to interact with any predefined rendering
semantics. For the most part, CSS Level 2 is a superset of CSS Level
1. That is, all CSS Level 1 stylesheets are also CSS Level 2
stylesheets that mean pretty much the same thing.
</p>

<p>The W3C is now working on <a name="IXT-12-240871" /> <a name="IXT-12-240872" />CSS Level 3.
When complete, it will modularize the CSS specification so software
can implement particular subsets of CSS functionality without having
to implement everything. For instance, an audio browser could
implement audio stylesheets but ignore the visual formatting model.
Furthermore, CSS Level 3 adds a number of features to CSS, including
multi-column layouts, better support for non-Western languages, such
as Arabic and Chinese, XML namespace support, more powerful
selectors, paged media, and more. However, CSS Level 3 is not yet
implemented by any browsers.
</p>

</div>

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch11_07.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch12_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">11.7. Ranges</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">12.2. CSS Syntax</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
      </map>

</body></html>