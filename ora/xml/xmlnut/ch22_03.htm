<html><head><title>Location Paths (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch22_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch22_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">22.3. Location Paths</h2>

<p>Node-<a name="IXT-22-240472" /><a name="IXT-22-240473" />sets <a name="IXT-22-240474" />are returned by location-path
expressions. Location paths consist of location steps. Each
<a name="IXT-22-240475" />location step contains an axis and a
node test separated by a double colon. That is, a location step looks
like this:
</p>

<blockquote><pre class="code"><em class="replaceable"><tt>axis</em>::<em class="replaceable">node test</tt></em></pre></blockquote>

<p>The <a name="IXT-22-240476" />axis specifies in
which direction from the context node the processor searches for
nodes. The <a name="IXT-22-240477" />node test specifies which nodes along that
axis are selected. These are some location steps with different axes
and node tests:
</p>

<blockquote><pre class="code">child::set
descendant-or-self::node( )
ancestor-or-self::*
attribute::xlink:href</pre></blockquote>

<p>Each location step may be suffixed with one or more
<a name="IXT-22-240478" /><a name="IXT-22-240479" />
<a name="IXT-22-240480" />predicates enclosed in square brackets
that further winnow the node-set. For example:
</p>

<blockquote><pre class="code">child::set[position( )=2]
descendant-or-self::node( )[.='Eunice']
ancestor-or-self::*[position( )=2][.="Celeste"]
attribute::xlink:href[starts-with('http')]</pre></blockquote>

<p>Each individual location step is itself a
<a name="IXT-22-240481" />relative location path. The context node
against which the relative location path is evaluated is established
by some means external to XPath--for example, by the current
matched node in an XSLT template.
</p>

<p>Location <a name="IXT-22-240482" />steps can be combined by separating them
with forward slashes. Each step in the resulting location path sets
the context node (or nodes) for the next path in the step. For
example:
</p>

<blockquote><pre class="code">ancestor-or-self::*/child::*[position( )=1]
child::document/child::set[position( )=2]/following-sibling::*
descendant::node( )[.='Eunice']/attribute::ID</pre></blockquote>

<p>An <a name="IXT-22-240483" />absolute location path is formed by
prefixing a forward slash to a relative location path. This sets the
context node for the first step in the location path to the
<a name="IXT-22-240484" />root of
the document. For example, these are all absolute location paths:
</p>

<blockquote><pre class="code">/descendant::ship/ancestor-or-self::*/child::*[position( )=1]
/child::document/child::set[position( )=2]/following-sibling::*
/descendant::node( )[.='Eunice']/attribute::ID</pre></blockquote>

<p>Multiple location paths can be combined with the union operator
(<tt class="literal">|)</tt> to form an expression that selects a node-set
containing all the nodes identified by any of the location paths. For
example, this expression selects a node-set containing all the
<tt class="literal">set</tt> children of the context node, all the
<tt class="literal">vector</tt> descendants of the context node, all
<tt class="literal">ancestor</tt> elements of the context node and the root
node, and all <tt class="literal">attributes</tt> of the context node named
<tt class="literal">href</tt>:
</p>

<blockquote><pre class="code">child::set | descendant::vector | ancestor::* | attribute::href</pre></blockquote>

<a name="xmlnut2-CHP-22-SECT-3.1" /><div class="sect2">
<h3 class="sect2">22.3.1. Abbreviated Syntax</h3>

<p>An abbreviated syntax is available for particularly common location
steps. This is the syntax allowed in XSLT match patterns. In this
syntax, five axes may use this shorthand:
</p>

<dl>
<dt><tt class="literal">.</tt></dt>
<dd>
The <a name="IXT-22-240485" /> <a name="IXT-22-240486" />context node
</p>
</dd>


<dt><tt class="literal">..</tt></dt>
<dd>
The <a name="IXT-22-240487" />parent <a name="IXT-22-240488" />node
</p>
</dd>


<dt><i><tt><em class="replaceable"><tt>name</tt></em></tt></i></dt>
<dd>
The <a name="IXT-22-240489" /><a name="IXT-22-240490" />child
element <a name="IXT-22-240491" />or
<a name="IXT-22-240492" />elements with the
specified name
</p>
</dd>


<dt><tt class="literal">//</tt></dt>
<dd>
All descendants of the context node, and the context node itself</p>
</dd>


<dt><tt class="literal">@</tt><tt><em class="replaceable">name</em></tt></dt>
<dd>
The <a name="IXT-22-240493" /><a name="IXT-22-240494" />attribute
<a name="IXT-22-240495" />of the context node with the specified
name
</p>
</dd>

</dl>

<p>Using the abbreviated syntax, the previous examples can be rewritten
in the following manner:
</p>

<blockquote><pre class="code">set
descendant-or-self::node( )
ancestor-or-self::*
@xlink:href
set[position( )=2]
descendant-or-self::node( )[.='Eunice']
ancestor-or-self::*[position( )=2][.="Celeste"]
@xlink:href[starts-with('http')]
ancestor-or-self::*/*[position( )=1]
document/set[position( )=2]/following-sibling::*
descendant::node( )[.='Eunice']/@ID
//ship/ancestor-or-self::*/*[position( )=1]
/document/set[position( )=2]/following-sibling::*
/descendant::node( )[.='Eunice']/@ID
set | .//vector | ancestor::* | @href</pre></blockquote>

<p>Not all location steps can be rewritten using the abbreviated syntax.
In particular, only the child, self, attribute, descendant-or-self,
and parent axes can be abbreviated. The remaining axes must be
spelled out in full.
</p>

</div>
<a name="xmlnut2-CHP-22-SECT-3.2" /><div class="sect2">
<h3 class="sect2">22.3.2. Axes</h3>

<p>Each <a name="IXT-22-240496" />XPath location
step moves along an axis from a <a name="IXT-22-240497" />context node. The context node is a
particular root, element, attribute, comment, processing-instruction,
namespace, or text node in the XML document. (In practice,
it's almost always an element node or the root
node.) The context node may be a node selected by the previous
location step in the location path, or it may be determined by
extra-XPath rules, such as which node is matched by an
<tt class="literal">xsl:template</tt> element.
</p>

<p>However the context node is determined, it has some relationship to
every other node in the document. The various axes divide the
document into different, overlapping sets, depending on their
relationship to the context node. There are exactly 13 axes you can
use in an XPath location step:
</p>

<dl>
<dt><tt class="literal">child</tt></dt>
<dd>
<a name="IXT-22-240498" />All children of
the context node. Only root and element nodes have children.
Attribute and namespace nodes are not children of any node, though
they do have parent nodes.
</p>
</dd>


<dt><tt class="literal">descendant</tt></dt>
<dd>
<a name="IXT-22-240499" />All nodes
contained inside the context node, that is, a child node, a child of
a child node, a child of a child of a child node, and so on. Only
root and element nodes have descendants. Like the
<tt class="literal">child</tt> axis, the <tt class="literal">descendant</tt> axis
never contains attribute or namespace nodes.
</p>
</dd>


<dt><tt class="literal">descendant-or-self</tt></dt>
<dd>
<a name="IXT-22-240500" />Any
descendant of the context node or the context node itself.
<tt class="literal">//</tt> is an abbreviation for
<tt class="literal">/descendant-or-self::node( )/</tt>.
</p>
</dd>


<dt><tt class="literal">parent</tt></dt>
<dd>
<a name="IXT-22-240501" />The element or
root node that immediately contains the context node. Only the root
node does not have a parent node. <tt class="literal">..</tt> is an
abbreviation for <tt class="literal">parent::node( )</tt>.
</p>
</dd>


<dt><tt class="literal">ancestor</tt></dt>
<dd>
<a name="IXT-22-240502" />The root node
and all element nodes that contain the context node. The root node
itself has no ancestors.
</p>
</dd>


<dt><tt class="literal">ancestor-or-self</tt></dt>
<dd>
<a name="IXT-22-240503" />All
ancestors of the context node, as well as the node itself.
</p>
</dd>


<dt><tt class="literal">following-sibling</tt></dt>
<dd>
<a name="IXT-22-240504" />All
nodes that follow the end of the context node and have the same
parent node. Attribute and namespace nodes do not have siblings.
</p>
</dd>


<dt><tt class="literal">preceding-sibling</tt></dt>
<dd>
<a name="IXT-22-240505" />All
nodes that precede the start of the context node and have the same
parent node. Attribute and namespace nodes do not have siblings.
</p>
</dd>


<dt><tt class="literal">following</tt></dt>
<dd>
<a name="IXT-22-240506" />All nodes
that begin after the context node ends, except for attribute nodes
and namespace nodes; that is, all nodes after the context node except
descendants.
</p>
</dd>


<dt><tt class="literal">preceding</tt></dt>
<dd>
<a name="IXT-22-240507" />All nodes
that end before the context node begins, except for attribute nodes
and namespace nodes; that is, all nodes before the context node
except ancestors.
</p>
</dd>


<dt><tt class="literal">attribute</tt></dt>
<dd>
<a name="IXT-22-240508" />All
attributes of the context node; the axis is empty if the context node
is not an element node. This axis does not contain
<tt class="literal">xmlns</tt> and
<tt class="literal">xmlns:</tt><em class="replaceable"><tt>prefix</tt></em>
attributes. <tt class="literal">@</tt><em class="replaceable"><tt>name</tt></em> is an
abbreviation for
<tt class="literal">attribute::</tt><em class="replaceable"><tt>name</tt></em>.
</p>
</dd>


<dt><tt class="literal">namespace</tt></dt>
<dd>
<a name="IXT-22-240509" />All
namespaces in scope (not merely declared) on the context node; this
axis is empty if the context node is not an element node.
</p>
</dd>


<dt><tt class="literal">self</tt></dt>
<dd>
<a name="IXT-22-240510" />The context node
itself. A single period (<tt class="literal">.</tt>) is an abbreviation for
<tt class="literal">self::node</tt>.
</p>
</dd>

</dl>

</div>
<a name="xmlnut2-CHP-22-SECT-3.3" /><div class="sect2">
<h3 class="sect2">22.3.3. Node Tests</h3>

<p>Each <a name="IXT-22-240511" />location step has at least an axis and a
node test. The node test further refines the nodes selected by the
location step. In an unabbreviated location step, a double colon
(<tt class="literal">::</tt>) separates the axis from the node test. There
are seven kinds of node tests:
</p>

<dl>
<dt><i><tt><em class="replaceable"><tt>name</tt></em></tt></i></dt>
<dd>
An XML name matches all elements with the same name. However, along
the attribute axis it matches all attributes with the same name
instead; along the namespace axis it matches all namespaces with that
prefix. As usual, if the element or attribute name is prefixed, only
the URI to which the prefix is mapped matters, not the prefix itself.
</p>
</dd>


<dt><i><tt><em class="replaceable"><tt>prefix</em></tt><tt class="literal">:</tt><tt><em class="replaceable">*</tt></em></tt></i></dt>
<dd>
Along most axes, this node test matches all element nodes whose
namespace URIs are the same as the namespace URI to which this prefix
is mapped, regardless of name. However, along the attribute axis,
this node test matches all attribute nodes whose namespace URIs are
the same as the namespace URI to which this prefix is mapped.
</p>
</dd>


<dt><tt class="literal">comment( )</tt></dt>
<dd>
<a name="IXT-22-240512" />This includes all comment nodes.
</p>
</dd>


<dt><tt class="literal">text( )</tt></dt>
<dd>
<a name="IXT-22-240513" />This includes all text nodes. Each text
node is a maximum contiguous run of text between other types of
nodes.
</p>
</dd>



<dt><tt class="literal">processing-instruction( )</tt></dt>
<dt><tt class="literal">processing-instruction('</tt><tt><em class="replaceable">target</em></tt><tt class="literal">')</tt></dt>
<dd>
<a name="IXT-22-240514" />With no arguments, this node test selects
all processing instructions. With a single string argument, it
selects all processing instructions that have the specified target.
</p>
</dd>


<dt><tt class="literal">node( )</tt></dt>
<dd>
<a name="IXT-22-240515" />This node test selects all nodes,
regardless of type: attribute, namespace, element, text, comment,
processing instruction, and root.
</p>
</dd>


<dt><tt class="literal">*</tt> </dt>
<dd>
<a name="IXT-22-240516" />This test normally selects all element
nodes, regardless of name. However, if the axis is the attribute
axis, then it selects all attribute nodes. If the axis is the
namespace axis, then it selects all namespace nodes.
</p>
</dd>

</dl>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch22_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch22_04.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">22.2. Data Types</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">22.4. Predicates</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>