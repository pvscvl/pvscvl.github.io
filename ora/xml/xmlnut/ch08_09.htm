<html><head><title>Attribute Value Templates (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_08.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch08_10.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">8.9. Attribute Value Templates</h2>

<p><a name="IXT-8-239736" />It's easy to
include known <a name="IXT-8-239737" />attribute values in the output document as
the literal content of a <a name="IXT-8-239738" />literal result element. For example, this
template rule wraps each input <tt class="literal">person</tt> element in
an HTML <tt class="literal">span</tt> element that has a
<tt class="literal">class</tt> attribute with the value
<tt class="literal">person</tt>:
</p>

<blockquote><pre class="code">&lt;xsl:template match="person"&gt;
  &lt;span class="person"&gt;&lt;xsl:apply-templates/&gt;&lt;/span&gt;
&lt;/xsl:template&gt;</pre></blockquote>

<p>However, it's trickier if the value of the attribute
is not known when the stylesheet is written, but instead must be read
from the input document. The solution is to use an
<em class="emphasis">attribute value template</em>. An attribute value
template is an XPath expression enclosed in curly braces
that's placed in the attribute value in the
stylesheet. When the processor outputs that attribute, it replaces
the attribute value template with its value. For example, suppose you
wanted to write a name template that changed the input
<tt class="literal">name</tt> elements to empty elements with
<tt class="literal">first_name</tt>, <tt class="literal">middle_initial</tt>, and
<tt class="literal">last_name</tt> attributes like this:
</p>

<blockquote><pre class="code">&lt;name first="Richard" initial="P" last="Feynman"/&gt;</pre></blockquote>

<p>This template accomplishes that task:</p>

<blockquote><pre class="code">&lt;xsl:template match="name"&gt;
  &lt;name first="{first_name}"
        initial="{middle_initial}"
        last="{last_name}" /&gt;
&lt;/xsl:template&gt;</pre></blockquote>

<p>The value of the <tt class="literal">first</tt> attribute in the stylesheet
is replaced by the value of the <tt class="literal">first_name</tt> element
from the input document. The value of the <tt class="literal">initial</tt>
attribute is replaced by the value of the
<tt class="literal">middle_initial</tt> element from the input document;
the value of the <tt class="literal">last</tt> attribute is replaced by the
value of the <tt class="literal">last_name</tt> element from the input
document.
</p>



<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_08.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch08_10.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">8.8. Modes</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">8.10. XSLT and Namespaces</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>