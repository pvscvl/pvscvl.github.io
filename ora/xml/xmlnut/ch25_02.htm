<html><head><title>The org.xml.sax.helpers Package (XML in a Nutshell, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Elliotte Rusty Harold and W. Scott Means" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0-596-00292-0" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="XML in a Nutshell, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="XML in a Nutshell" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch25_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch25_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr></table></div>



<h2 class="sect1">25.2. The org.xml.sax.helpers Package</h2>

<p>The <tt class="literal">org.xml.sax.helpers</tt><a name="xmlnut2-IDXTERM-2527" /> <a name="xmlnut2-IDXTERM-2528" /> package contains support classes for
the core SAX classes. These classes include factory classes used to
build instances of particular <tt class="literal">org.xml.sax</tt>
interfaces and default implementations of those interfaces.
</p>



<a name="ch25-16-fm2xml" /><a name="IXT-25-241007" /><a name="IXT-25-241008" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>The AttributesImpl Class</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><table width="515" border="0" cellpadding="5"><tr><td align="left" /><td align="right" /></tr></table><p><a name="IXT-25-241007" /><tt class="literal">AttributesImpl</tt>
<a name="IXT-25-241008" />is a default implementation of the
<tt class="literal">Attributes</tt> interface that SAX parsers and filters
may use. Besides the methods of the <tt class="literal">Attributes</tt>
interface, this class offers manipulator methods so the list of
attributes can be modified or reused. These methods allow you to take
a persistent snapshot of an <tt class="literal">Attributes</tt> object in
<tt class="literal">startElement( )</tt> and construct or modify an
<tt class="literal">Attributes</tt> object in a SAX driver or filter:
</p><blockquote><pre class="code">package org.xml.sax.helpers;

public class <b class="emphasis-bold">AttributesImpl</b> implements Attributes {

    public <b class="emphasis-bold">AttributesImpl</b>( );
    public <b class="emphasis-bold">AttributesImpl</b>(Attributes <em class="replaceable"><tt>atts</tt></em>);

    public int    <b class="emphasis-bold">getLength</b>( );
    public String <b class="emphasis-bold">getURI</b>(int <em class="replaceable"><tt>index</tt></em>);
    public String <b class="emphasis-bold">getLocalName</b>(int <em class="replaceable"><tt>index</tt></em>);
    public String <b class="emphasis-bold">getQName</b>(int <em class="replaceable"><tt>index</tt></em>);
    public String <b class="emphasis-bold">getType</b>(int <em class="replaceable"><tt>index</tt></em>);
    public String <b class="emphasis-bold">getValue</b>(int <em class="replaceable"><tt>index</tt></em>);
    public int    <b class="emphasis-bold">getIndex</b>(String <em class="replaceable"><tt>uri</em>, String <em class="replaceable">localName</tt></em>);
    public int    <b class="emphasis-bold">getIndex</b>(String <em class="replaceable"><tt>qualifiedName</tt></em>);
    public String <b class="emphasis-bold">getType</b>(String <em class="replaceable"><tt>uri</em>, String <em class="replaceable">localName</tt></em>);
    public String <b class="emphasis-bold">getType</b>(String <em class="replaceable"><tt>qualifiedName</tt></em>);
    public String <b class="emphasis-bold">getValue</b>(String <em class="replaceable"><tt>uri</em>, String <em class="replaceable">localName</tt></em>);
    public String <b class="emphasis-bold">getValue</b>(String <em class="replaceable"><tt>qualifiedName</tt></em>);
    public void   <b class="emphasis-bold">clear</b>( );
    public void   <b class="emphasis-bold">setAttributes</b>(Attributes <em class="replaceable"><tt>atts</tt></em>);
    public void   <b class="emphasis-bold">addAttribute</b>(String <em class="replaceable"><tt>uri</em>, String <em class="replaceable">localName</tt></em>,
     String <em class="replaceable"><tt>qualifiedName</em>, String <em class="replaceable">type</em>, String <em class="replaceable">value</tt></em>);
    public void   <b class="emphasis-bold">setAttribute</b>(int <em class="replaceable"><tt>index</em>, String <em class="replaceable">uri</em>, String <em class="replaceable">localName</tt></em>,
     String <em class="replaceable"><tt>qualifiedName</em>, String <em class="replaceable">type</em>, String <em class="replaceable">value</tt></em>);
    public void   <b class="emphasis-bold">removeAttribute</b>(int <em class="replaceable"><tt>index</tt></em>)
    public void   <b class="emphasis-bold">setURI</b>(int <em class="replaceable"><tt>index</em>, String <em class="replaceable">uri</tt></em>)
    public void   <b class="emphasis-bold">setLocalName</b>(int <em class="replaceable"><tt>index</em>, String <em class="replaceable">localName</tt></em>)
    public void   <b class="emphasis-bold">setQName</b>(int <em class="replaceable"><tt>index</em>, String <em class="replaceable">qualifiedName</tt></em>);
    public void   <b class="emphasis-bold">setType</b>(int <em class="replaceable"><tt>index</em>, String <em class="replaceable">type</tt></em>);
    public void   <b class="emphasis-bold">setValue</b>(int <em class="replaceable"><tt>index</em>, String <em class="replaceable">value</tt></em>);

}</pre></blockquote></div>

<a name="ch25-17-fm2xml" /><a name="IXT-25-241009" /><a name="IXT-25-241010" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>The DefaultHandler Class</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><table width="515" border="0" cellpadding="5"><tr><td align="left" /><td align="right" /></tr></table><p><a name="IXT-25-241009" /><tt class="literal">DefaultHandler</tt>
<a name="IXT-25-241010" />is a convenience class that implements
the <tt class="literal">EntityResolver</tt>, <tt class="literal">DTDHandler</tt>,
<tt class="literal">ContentHandler</tt>, and
<tt class="literal">ErrorHandler</tt> interfaces with do-nothing methods.
You can subclass <tt class="literal">DefaultHandler</tt> and override
methods for events to which you actually want to respond. You never
have to use this class. You can always implement the interfaces
directly instead. The pattern is similar to the adapter classes in
the AWT, such as <tt class="literal">MouseAdapter</tt> and
<tt class="literal">WindowAdapter</tt>:
</p><blockquote><pre class="code">package org.xml.sax.helpers;

public class <b class="emphasis-bold">DefaultHandler</b>
 implements EntityResolver, DTDHandler, ContentHandler, ErrorHandler {

  // Default implementation of the EntityResolver interface.
  public InputSource <b class="emphasis-bold">resolveEntity</b>(String <em class="replaceable"><tt>publicID</em>, String <em class="replaceable">systemID</tt></em>)
   throws SAXException {
    return null;
  }

  // Default implementation of the DTDHandler interface.
  public void <b class="emphasis-bold">notationDecl</b>(String <em class="replaceable"><tt>name</em>, String <em class="replaceable">publicID</em>, String <em class="replaceable">systemID</tt></em>)
   throws SAXException {}
  public void <b class="emphasis-bold">unparsedEntityDecl</b>(String <em class="replaceable"><tt>name</em>, String <em class="replaceable">publicID</tt></em>,
   String <em class="replaceable"><tt>systemID</em>, String <em class="replaceable">notationName</tt></em>) throws SAXException{}

  // Default implementation of the ContentHandler interface.
  public void <b class="emphasis-bold">setDocumentLocator</b>(Locator <em class="replaceable"><tt>locator</tt></em>) {}
  public void <b class="emphasis-bold">startDocument</b>( ) throws SAXException {}
  public void <b class="emphasis-bold">endDocument</b>( ) throws SAXException {}
  public void <b class="emphasis-bold">startPrefixMapping</b>(String <em class="replaceable"><tt>prefix</em>, String <em class="replaceable">uri</tt></em>)
   throws SAXException {}
  public void <b class="emphasis-bold">endPrefixMapping</b>(String <em class="replaceable"><tt>prefix</tt></em>) throws SAXException {}
  public void <b class="emphasis-bold">startElement</b>(String <em class="replaceable"><tt>uri</em>, String <em class="replaceable">localName</tt></em>,
   String qualifiedName, Attributes <em class="replaceable"><tt>attributes</tt></em>) throws SAXException {}
  public void <b class="emphasis-bold">endElement</b>(String <em class="replaceable"><tt>uri</em>, String <em class="replaceable">localName</tt></em>,
   String <em class="replaceable"><tt>qualifiedName</tt></em>) throws SAXException {}
  public void <b class="emphasis-bold">characters</b>(char[] <em class="replaceable"><tt>text</em>, int <em class="replaceable">start</em>, int <em class="replaceable">length</tt></em>)
   throws SAXException {}
  public void <b class="emphasis-bold">ignorableWhitespace</b>(char[] <em class="replaceable"><tt>whitespace</em>, int <em class="replaceable">start</tt></em>,
   int length) throws SAXException {}
  public void <b class="emphasis-bold">processingInstruction</b>(String <em class="replaceable"><tt>target</em>, String <em class="replaceable">data</tt></em>)
   throws SAXException {}
  public void <b class="emphasis-bold">skippedEntity</b>(String <em class="replaceable"><tt>name</tt></em>) throws SAXException {}

  // Default implementation of the ErrorHandler interface.
  public void <b class="emphasis-bold">warning</b>(SAXParseException <em class="replaceable"><tt>ex</tt></em>) throws SAXException {}
  public void <b class="emphasis-bold">error</b>(SAXParseException <em class="replaceable"><tt>ex</tt></em>) throws SAXException {}
  public void <b class="emphasis-bold">fatalError</b>(SAXParseException <em class="replaceable"><tt>ex</tt></em>) throws SAXException {
    throw ex;
  }

}</pre></blockquote></div>

<a name="ch25-18-fm2xml" /><a name="IXT-25-241011" /><a name="IXT-25-241012" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>The LocatorImpl Class</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><table width="515" border="0" cellpadding="5"><tr><td align="left" /><td align="right" /></tr></table><p><a name="IXT-25-241011" /><tt class="literal">LocatorImpl</tt> is a
<a name="IXT-25-241012" />default implementation of the
<tt class="literal">Locator</tt> interface for the convenience of parser
writers. You probably won't need to use it directly.
Besides the constructors, it adds setter methods to set the public
ID, system ID, line number, and column number returned by the getter
methods declared in <tt class="literal">Locator</tt>:
</p><blockquote><pre class="code">package org.xml.sax.helpers;

public class <b class="emphasis-bold">LocatorImpl</b> implements Locator {

    public <b class="emphasis-bold">LocatorImpl</b>( );
    public <b class="emphasis-bold">LocatorImpl</b>(Locator <em class="replaceable"><tt>locator</tt></em>);

    public String <b class="emphasis-bold">getPublicId</b>( );
    public String <b class="emphasis-bold">getSystemId</b>( );
    public int    <b class="emphasis-bold">getLineNumber</b>( );
    public int    <b class="emphasis-bold">getColumnNumber</b>( );
    public void   <b class="emphasis-bold">setPublicId</b>(String <em class="replaceable"><tt>publicID</tt></em>);
    public void   <b class="emphasis-bold">setSystemId</b>(String <em class="replaceable"><tt>systemID</tt></em>);
    public void   <b class="emphasis-bold">setLineNumber</b>(int <em class="replaceable"><tt>lineNumber</tt></em>);
    public void   <b class="emphasis-bold">setColumnNumber</b>(int <em class="replaceable"><tt>columnNumber</tt></em>);

}</pre></blockquote></div>

<a name="ch25-19-fm2xml" /><a name="IXT-25-241013" /><a name="IXT-25-241014" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>The NamespaceSupport Class</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><table width="515" border="0" cellpadding="5"><tr><td align="left" /><td align="right" /></tr></table><p><tt class="literal">NamespaceSupport</tt>
<a name="IXT-25-241013" />provides <a name="IXT-25-241014" />a stack that can track the namespaces in
scope at various points in the document. To use it, push a new
context at the beginning of each element's namespace
mappings, and place it at the end of each element. Each
<tt class="literal">startPrefixMapping( )</tt> invocation should call
<tt class="literal">declarePrefix( )</tt> to add a new mapping to the
<tt class="literal">NamespaceSupport</tt> object. Then at any point where
you need to figure out to which URI a prefix is bound, you can call
<tt class="literal">getPrefix( )</tt>. The empty string indicates the
default namespace. The getter methods can then tell you the prefix
that is mapped to any URI or the URI that is mapped to any prefix at
each point in the document. If you reuse the same
<tt class="literal">NamespaceSupport</tt> object for multiple documents, be
sure to call <tt class="literal">reset( )</tt> in between documents.
</p><blockquote><pre class="code">package org.xml.sax.helpers;

public class NamespaceSupport {

 public final static String <b class="emphasis-bold">XMLNS</b>="http://www.w3.org/XML/1998/namespace";

  public NamespaceSupport( );

  public void        <b class="emphasis-bold">reset</b>( );
  public void        <b class="emphasis-bold">pushContext</b>( );
  public void        <b class="emphasis-bold">popContext</b>( );
  public boolean     <b class="emphasis-bold">declarePrefix</b>(String <em class="replaceable"><tt>prefix</em>, String <em class="replaceable">uri</tt></em>);
  public String[]    <b class="emphasis-bold">processName</b>(String <em class="replaceable"><tt>qualifiedName</em>, String[] <em class="replaceable">parts</tt></em>,
   boolean <em class="replaceable"><tt>isAttribute</tt></em>);
  public String      <b class="emphasis-bold">getURI</b>(String <em class="replaceable"><tt>prefix</tt></em>);
  public Enumeration <b class="emphasis-bold">getPrefixes</b>( );
  public String      <b class="emphasis-bold">getPrefix</b>(String <em class="replaceable"><tt>uri</tt></em>);
  public Enumeration <b class="emphasis-bold">getPrefixes</b>(String <em class="replaceable"><tt>uri</tt></em>);
  public Enumeration <b class="emphasis-bold">getDeclaredPrefixes</b>( );

}</pre></blockquote></div>

<a name="ch25-20-fm2xml" /><a name="IXT-25-241015" /><a name="IXT-25-241016" /><a name="IXT-25-241017" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>The ParserAdapter Class</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><table width="515" border="0" cellpadding="5"><tr><td align="left" /><td align="right" /></tr></table><p>The <a name="IXT-25-241015" /><tt class="literal">ParserAdapter</tt>
<a name="IXT-25-241016" />class uses the <a name="IXT-25-241017" />adapter design pattern to convert
a SAX1 <tt class="literal">org.xml.sax.Parser</tt> object into a SAX2
<tt class="literal">org.xml.sax.XMLReader</tt> object. As more parsers
support SAX2, this class becomes less necessary. Note that some SAX2
features are not available through an adapted SAX1 parser. For
instance, a parser created with this adapter does not report skipped
entities and does not support most features and properties, not even
the core features and properties:
</p><blockquote><pre class="code">package org.xml.sax.helpers;

public class <b class="emphasis-bold">ParserAdapter</b> implements XMLReader, DocumentHandler {

  public <b class="emphasis-bold">ParserAdapter</b>( ) throws SAXException;
  public <b class="emphasis-bold">ParserAdapter</b>(Parser <em class="replaceable"><tt>parser</tt></em>);

  // Implementation of org.xml.sax.XMLReader.
  public void           <b class="emphasis-bold">setFeature</b>(String <em class="replaceable"><tt>name</em>, boolean <em class="replaceable">state</tt></em>)
   throws SAXNotRecognizedException, SAXNotSupportedException;
  public boolean        <b class="emphasis-bold">getFeature</b>(String <em class="replaceable"><tt>name</tt></em>)
   throws SAXNotRecognizedException, SAXNotSupportedException;
  public void           <b class="emphasis-bold">setProperty</b>(String <em class="replaceable"><tt>name</em>, Object <em class="replaceable">value</tt></em>)
   throws SAXNotRecognizedException, SAXNotSupportedException;
  public Object         <b class="emphasis-bold">getProperty</b>(String <em class="replaceable"><tt>name</tt></em>)
   throws SAXNotRecognizedException, SAXNotSupportedException;
  public void           <b class="emphasis-bold">setEntityResolver</b>(EntityResolver <em class="replaceable"><tt>resolver</tt></em>);
  public EntityResolver <b class="emphasis-bold">getEntityResolver</b>( );
  public void           <b class="emphasis-bold">setDTDHandler</b>(DTDHandler <em class="replaceable"><tt>handler</tt></em>);
  public DTDHandler     <b class="emphasis-bold">getDTDHandler</b>( );
  public void           <b class="emphasis-bold">setContentHandler</b>(ContentHandler <em class="replaceable"><tt>handler</tt></em>);
  public ContentHandler <b class="emphasis-bold">getContentHandler</b>( );
  public void           <b class="emphasis-bold">setErrorHandler</b>(ErrorHandler <em class="replaceable"><tt>handler</tt></em>);
  public ErrorHandler   <b class="emphasis-bold">getErrorHandler</b>( );
  public void <b class="emphasis-bold">parse</b>(String <em class="replaceable"><tt>systemID</tt></em>) throws IOException, SAXException;
  public void <b class="emphasis-bold">parse</b>(InputSource <em class="replaceable"><tt>input</tt></em>) throws IOException, SAXException;

  // Implementation of org.xml.sax.DocumentHandler.
  public void <b class="emphasis-bold">setDocumentLocator</b>(Locator <em class="replaceable"><tt>locator</tt></em>);
  public void <b class="emphasis-bold">startDocument</b>( ) throws SAXException;
  public void <b class="emphasis-bold">endDocument</b>( ) throws SAXException;
  public void <b class="emphasis-bold">startElement</b>(String <em class="replaceable"><tt>qualifiedName</tt></em>,
   AttributeList <em class="replaceable"><tt>qualifiedAttributes</tt></em>) throws SAXException;
  public void <b class="emphasis-bold">endElement</b>(String <em class="replaceable"><tt>qualifiedName</tt></em>) throws SAXException;
  public void characters(char[] <em class="replaceable"><tt>text</em>, int <em class="replaceable">start</em>, int <em class="replaceable">length</tt></em>)
   throws SAXException;
  public void <b class="emphasis-bold">ignorableWhitespace</b>(char[] <em class="replaceable"><tt>text</em>, int <em class="replaceable">start</em>, int <em class="replaceable">length</tt></em>)
   throws SAXException;
  public void <b class="emphasis-bold">processingInstruction</b>(String <em class="replaceable"><tt>target</em>, String <em class="replaceable">data</tt></em>)
   throws SAXException;

}</pre></blockquote></div>

<a name="ch25-21-fm2xml" /><a name="IXT-25-241018" /><a name="IXT-25-241019" /><a name="IXT-25-241020" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>The XMLFilterImpl Class</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><table width="515" border="0" cellpadding="5"><tr><td align="left" /><td align="right" /></tr></table><p><a name="IXT-25-241018" /><tt class="literal">XMLFilterImpl</tt>
<a name="IXT-25-241019" />is invaluable for implementing
<a name="IXT-25-241020" />XML filters correctly. An
instance of this class sits between an <tt class="literal">XMLReader</tt>
and the client application's event handlers. It
receives messages from the reader and passes them to the application
unchanged, and vice versa. However, by subclassing this class and
overriding particular methods, you can change the events that are
sent before the application gets to see them. You chain a filter to
an <tt class="literal">XMLReader</tt> by passing the reader as an argument
to the filter's constructor. When parsing, you
invoke the filter's <tt class="literal">parse( )</tt>
method, not the reader's <tt class="literal">parse( )</tt>
method.
</p><blockquote><pre class="code">package org.xml.sax.helpers;

public class <b class="emphasis-bold">XMLFilterImpl</b> implements XMLFilter, EntityResolver,
 DTDHandler, ContentHandler, ErrorHandler {

  public XMLFilterImpl( );
  public <b class="emphasis-bold">XMLFilterImpl</b>(XMLReader <em class="replaceable"><tt>parent</tt></em>);

  // Implementation of org.xml.sax.XMLFilter
  public void      <b class="emphasis-bold">setParent</b>(XMLReader <em class="replaceable"><tt>parent</tt></em>);
  public XMLReader <b class="emphasis-bold">getParent</b>( );

  // Implementation of org.xml.sax.XMLReader
  public void           <b class="emphasis-bold">setFeature</b>(String <em class="replaceable"><tt>name</em>, boolean <em class="replaceable">state</tt></em>)
   throws SAXNotRecognizedException, SAXNotSupportedException;
  public boolean        <b class="emphasis-bold">getFeature</b>(String <em class="replaceable"><tt>name</tt></em>)
   throws SAXNotRecognizedException, SAXNotSupportedException;
  public void           <b class="emphasis-bold">setProperty</b>(String <em class="replaceable"><tt>name</em>, Object <em class="replaceable">value</tt></em>)
   throws SAXNotRecognizedException, SAXNotSupportedException;
  public Object         <b class="emphasis-bold">getProperty</b>(String <em class="replaceable"><tt>name</tt></em>)
   throws SAXNotRecognizedException, SAXNotSupportedException;
  public void           <b class="emphasis-bold">setEntityResolver</b>(EntityResolver <em class="replaceable"><tt>resolver</tt></em>);
  public EntityResolver <b class="emphasis-bold">getEntityResolver</b>( );
  public void           <b class="emphasis-bold">setDTDHandler</b>(DTDHandler <em class="replaceable"><tt>handler</tt></em>);
  public DTDHandler     <b class="emphasis-bold">getDTDHandler</b>( );
  public void           <b class="emphasis-bold">setContentHandler</b>(ContentHandler <em class="replaceable"><tt>handler</tt></em>);
  public ContentHandler <b class="emphasis-bold">getContentHandler</b>( );
  public void           <b class="emphasis-bold">setErrorHandler</b>(ErrorHandler <em class="replaceable"><tt>handler</tt></em>);
  public ErrorHandler   <b class="emphasis-bold">getErrorHandler</b>( );
  public void <b class="emphasis-bold">parse</b>(InputSource <em class="replaceable"><tt>input</tt></em>) throws SAXException, IOException;
  public void <b class="emphasis-bold">parse</b>(String <em class="replaceable"><tt>systemID</tt></em>) throws SAXException, IOException

  // Implementation of org.xml.sax.EntityResolver
  public InputSource <b class="emphasis-bold">resolveEntity</b>(String <em class="replaceable"><tt>publicID</em>, String <em class="replaceable">systemID</tt></em>)
   throws SAXException, IOException;

  // Implementation of org.xml.sax.DTDHandler
  public void <b class="emphasis-bold">notationDecl</b>(String <em class="replaceable"><tt>name</em>, String <em class="replaceable">publicID</em>, String <em class="replaceable">systemID</tt></em>)
   throws SAXException;
  public void <b class="emphasis-bold">unparsedEntityDecl</b>(String <em class="replaceable"><tt>name</em>, String <em class="replaceable">publicID</tt></em>,
   String <em class="replaceable"><tt>systemID</em>, String <em class="replaceable">notationName</tt></em>) throws SAXException;

  // Implementation of org.xml.sax.ContentHandler
  public void <b class="emphasis-bold">setDocumentLocator</b>(Locator <em class="replaceable"><tt>locator</tt></em>);
  public void <b class="emphasis-bold">startDocument</b>( ) throws SAXException;
  public void <b class="emphasis-bold">endDocument</b>( ) throws SAXException;
  public void <b class="emphasis-bold">startPrefixMapping</b>(String <em class="replaceable"><tt>prefix</em>, String <em class="replaceable">uri</tt></em>)
   throws SAXException;
  public void <b class="emphasis-bold">endPrefixMapping</b>(String <em class="replaceable"><tt>prefix</tt></em>) throws SAXException;
  public void <b class="emphasis-bold">startElement</b>(String <em class="replaceable"><tt>namespaceURI</em>, String <em class="replaceable">localName</tt></em>,
   String <em class="replaceable"><tt>qualifiedName</em>, Attributes <em class="replaceable">atts</tt></em>) throws SAXException;
  public void <b class="emphasis-bold">endElement</b>(String <em class="replaceable"><tt>namespaceURI</em>, String <em class="replaceable">localName</tt></em>,
   String <em class="replaceable"><tt>qualifiedName</tt></em>) throws SAXException;
  public void <b class="emphasis-bold">characters</b>(char[] <em class="replaceable"><tt>text</em>, int <em class="replaceable">start</em>, int <em class="replaceable">length</tt></em>)
   throws SAXException;
  public void <b class="emphasis-bold">ignorableWhitespace</b>(char[] <em class="replaceable"><tt>text</em>, int <em class="replaceable">start</em>, int <em class="replaceable">length</tt></em>)
   throws SAXException;
  public void <b class="emphasis-bold">processingInstruction</b>(String <em class="replaceable"><tt>target</em>, String <em class="replaceable">data</tt></em>)
   throws SAXException;
  public void <b class="emphasis-bold">skippedEntity</b>(String <em class="replaceable"><tt>name</tt></em>) throws SAXException;

  // Implementation of org.xml.sax.ErrorHandler
  public void <b class="emphasis-bold">warning</b>(SAXParseException <em class="replaceable"><tt>ex</tt></em>) throws SAXException;
  public void <b class="emphasis-bold">error</b>(SAXParseException <em class="replaceable"><tt>ex</tt></em>) throws SAXException;
  public void <b class="emphasis-bold">fatalError</b>(SAXParseException <em class="replaceable"><tt>ex</tt></em>) throws SAXException;

}</pre></blockquote></div>

<a name="ch25-22-fm2xml" /><a name="IXT-25-241021" /><a name="IXT-25-241022" /><a name="IXT-25-241023" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>The XMLReaderAdapter Class</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><table width="515" border="0" cellpadding="5"><tr><td align="left" /><td align="right" /></tr></table><p><a name="IXT-25-241021" /><tt class="literal">XMLReaderAdapter</tt>
<a name="IXT-25-241022" />is the reverse of
<tt class="literal">ParserAdapter</tt>; it uses the
<a name="IXT-25-241023" />Adapter design pattern to adapt a SAX2
<tt class="literal">XMLReader</tt> to a SAX1 <tt class="literal">Parser</tt>.
This lets you use SAX2 parsers for legacy programs written to a SAX1
interface:
</p><blockquote><pre class="code">package org.xml.sax.helpers;

public class <b class="emphasis-bold">XMLReaderAdapter</b> implements Parser, ContentHandler {

  public <b class="emphasis-bold">XMLReaderAdapter</b>( ) throws SAXException;
  public <b class="emphasis-bold">XMLReaderAdapter</b>(XMLReader <em class="replaceable"><tt>reader</tt></em>);

  // Implementation of org.xml.sax.Parser.
  public void <b class="emphasis-bold">setLocale</b>(Locale <em class="replaceable"><tt>locale</tt></em>) throws SAXException;
  public void <b class="emphasis-bold">setEntityResolver</b>(EntityResolver <em class="replaceable"><tt>resolver</tt></em>);
  public void <b class="emphasis-bold">setDTDHandler</b>(DTDHandler <em class="replaceable"><tt>handler</tt></em>);
  public void <b class="emphasis-bold">setDocumentHandler</b>(DocumentHandler <em class="replaceable"><tt>handler</tt></em>);
  public void <b class="emphasis-bold">setErrorHandler</b>(ErrorHandler <em class="replaceable"><tt>handler</tt></em>);
  public void <b class="emphasis-bold">parse</b>(String <em class="replaceable"><tt>systemID</tt></em>) throws IOException, SAXException;
  public void <b class="emphasis-bold">parse</b>(InputSource <em class="replaceable"><tt>input</tt></em>) throws IOException, SAXException

  // Implementation of org.xml.sax.ContentHandler.
  public void <b class="emphasis-bold">setDocumentLocator</b>(Locator <em class="replaceable"><tt>locator</tt></em>);
  public void <b class="emphasis-bold">startDocument</b>( ) throws SAXException;
  public void <b class="emphasis-bold">endDocument</b>( ) throws SAXException;
  public void <b class="emphasis-bold">startPrefixMapping</b>(String <em class="replaceable"><tt>prefix</em>, String <em class="replaceable">uri</tt></em>)
   throws SAXException;
  public void <b class="emphasis-bold">endPrefixMapping</b>(String <em class="replaceable"><tt>prefix</tt></em>) throws SAXException;
  public void <b class="emphasis-bold">startElement</b>(String <em class="replaceable"><tt>namespaceURI</em>, String <em class="replaceable">localName</tt></em>,
   String <em class="replaceable"><tt>qualifiedName</em>, Attributes <em class="replaceable">atts</tt></em>) throws SAXException;
  public void <b class="emphasis-bold">endElement</b>(String <em class="replaceable"><tt>namespaceURI</em>, String <em class="replaceable">localName</tt></em>,
   String <em class="replaceable"><tt>qualifiedName</tt></em>) throws SAXException;
  public void <b class="emphasis-bold">characters</b>(char[] <em class="replaceable"><tt>text</em>, int <em class="replaceable">start</em>, int <em class="replaceable">length</tt></em>)
   throws SAXException;
  public void <b class="emphasis-bold">ignorableWhitespace</b>(char[] <em class="replaceable"><tt>text</em>, int <em class="replaceable">start</em>, int <em class="replaceable">length</tt></em>)
   throws SAXException;
  public void <b class="emphasis-bold">processingInstruction</b>(String <em class="replaceable"><tt>target</em>, String <em class="replaceable">data</tt></em>)
   throws SAXException;
  public void <b class="emphasis-bold">skippedEntity</b>(String <em class="replaceable"><tt>name</tt></em>) throws SAXException;

}</pre></blockquote></div>

<a name="ch25-23-fm2xml" /><a name="IXT-25-241024" /><a name="IXT-25-241025" /><a name="IXT-25-241026" /><a name="IXTR3-255" /><a name="IXTR3-256" /><div class="refentry"><table width="515" border="0" cellpadding="5"><tr><td align="left"><font size="+1"><b>The XMLReaderFactory Class</b></font></td><td align="right"><i></i></td></tr></table><hr width="515" size="3" noshade="true" align="left" color="black" /><table width="515" border="0" cellpadding="5"><tr><td align="left" /><td align="right" /></tr></table><p><a name="IXT-25-241024" /><tt class="literal">XMLReaderFactory</tt>
<a name="IXT-25-241025" />creates <tt class="literal">XMLReader</tt>
instances in a parser-independent manner. The noargs
<a name="IXT-25-241026" /><tt class="literal">createXMLReader( )</tt>
method instantiates the class named by the
<tt class="literal">org.xml.sax.driver</tt> system property. The other
<tt class="literal">createXMLReader( )</tt> method instantiates the class
named by its argument. This argument should be a fully packaged
qualified <a name="IXTR3-255" /> <a name="IXTR3-256" />name, such as
<tt class="literal">org.apache.xerces.parsers.SAXParser</tt>:
</p><blockquote><pre class="code">package org.xml.sax.helpers;

public final class <b class="emphasis-bold">XMLReaderFactory</b> {

  public static XMLReader <b class="emphasis-bold">createXMLReader</b>( ) throws SAXException;
  public static XMLReader <b class="emphasis-bold">createXMLReader</b>(String <em class="replaceable"><tt>className</tt></em>)
   throws SAXException;

}</pre></blockquote></div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch25_01.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0" /></a></td><td align="right" valign="top" width="228"><a href="ch25_03.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0" /></a></td></tr><tr><td align="left" valign="top" width="228">25. SAX Reference</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0" /></a></td><td align="right" valign="top" width="228">25.3. SAX Features and Properties</td></tr></table></div>
<hr width="684" align="left" />

<img src="../gifs/navbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>