<html><head><title>Some Popular SAX2 Parser Distributions  (SAX2)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="David Brownell" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002378L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="SAX2" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="SAX2" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch01_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>



	<h2 class="sect1">1.6. Some Popular SAX2 Parser Distributions </h2>

	<p>

<a name="INDEX-89" />
<a name="INDEX-90" />

        Today a variety of high-quality SAX2 parsers are available.
	Increasingly, they are packaged with Java programming environments,
	so you may not need to fetch one yourself unless you need upgrades
	(or bug fixes), or are constructing such a programming environment
	yourself (perhaps packaging an embedded system or a standalone
	application).
	You should be able to bootstrap any SAX parser.
	As a rule, if an XML parser is part of your Java programming
	environment, it already supports SAX and probably SAX2.
	The documentation should say whether SAX2 is supported.
	If it only mentions SAX1, you can upgrade to get most of
	the core SAX2 features; see <a href="ch05_02.htm">Section 5.2, "SAX1 Support "</a>, in <a href="ch05_01.htm">Chapter 5, "Other SAX Classes"</a>, for more information.
	</p>

	<p>If your programming environment doesn't include a SAX parser, 
        you'll need to get and install one.
	This section provides a brief summary of some of the
	most widely available open source SAX2 parsers.<a href="#FOOTNOTE-5">[5]</a> These packages all include SAX2, DOM Level 2, and JAXP 1.1 support, and can validate XML for you. They also have full support for the standard SAX2 extensions. If you don't happen to download documentation that includes the SAX2 documentation, it'll be available from the same site as the parser. All of these perform well in most applications, as long as you avoid the memory penalties of DOM.
	</p><blockquote class="footnote"><a name="FOOTNOTE-5" /><p>[5]Proprietary SAX2 parsers exist, such as one from Oracle that is commonly used in Oracle-hosted server-side applications. More information is available on the Oracle web site, <a href="../../../../../../www.oracle.com/xml/">http://www.oracle.com/xml/</a>.</p></blockquote>

	<p>Current versions of all these parsers do quite well on the 
	open source SAX/XML conformance tests, available at
<a href="../../../../../../xmlconf.sourceforge.net/java/">http://xmlconf.sourceforge.net/java/</a>.
	Those tests verify that these processors report essential information
	required of a SAX1 processor, and evaluate how
	well they support the XML 1.0 specification.
	SAX2 conformance testing isn't yet as well advanced, though some tests are now available.
	</p>

	<p>In addition to a SAX2 parser, you will likely want to have
	some SAX2/XML utilities that are layered on top of that parser.
	The packages described here include a DOM implementation, which is
	normally provided as a clean layer over SAX2.
	You might also consider other more Java-friendly packages such as
	DOM4J (<a href="../../../../../../www.dom4j.org/">http://www.dom4j.org</a>)
	or
	JDOM (<a href="../../../../../../www.jdom.org/">http://www.jdom.org</a>),
	both of which are layered over SAX2, as well as
	other APIs that provide more data-structure options.
	When you're learning SAX, having access to the source code
	of tools and applications built with SAX can help you
	learn the API, at least if it's high-quality source that
	uses the SAX APIs correctly.
	</p>

	<a name="sax2-CHP-1-SECT-6.1" /><div class="sect2">
	    <h3 class="sect2">1.6.1. &AElig;lfred2</h3>

	    <p>
<a name="INDEX-91" />
<a name="INDEX-92" />


            One of the original XML parsers mentioned earlier,
	    &AElig;lfred, has long been recognized for its simplicity,
	    small size, and good performance.
	    As XML parsers go, it is easy to read and understand.
	    With a different maintainer (your humble author),
	    this parser was updated
	    to be the first with full native SAX2 support, and to
	    substantially improve its conformance to the XML specification.
	    This updated version is called &AElig;lfred2, and versions have been
	    incorporated in a variety of applications where its simplicity,
	    size, and conformance are compelling features.
	    It is now part of the GNU Classpath Extensions project
	    and forms the core of the GNU JAXP library.
	    </p>

	    <p>
<a name="INDEX-93" />

            The updated version has taken SAX2 further
	    than most other parsers. It has a highly modular structure;
	    the reference distribution is able to use an optional
	    "stream validator" that uses the SAX2 events.
	    The model of an XML pipeline of such events is a
	    natural and powerful way to think about SAX; the SAX2 pipeline
	    package in this distribution lets applications compose arbitrary
	    processing modules in series or parallel.
	    This style of SAX2 processing is emphasized in this book,
	    and some of the examples show how to use these advanced
	    components.
	    Validation and DOM support remain completely modular, and use
	    SAX event pipelines, so &AElig;lfred can still be distributed as a
	    lightweight nonvalidating parser without those components. 
	    Likewise, the validation and DOM support don't need &AElig;lfred to work.
	    </p>

	    <p>

<a name="INDEX-94" />
<a name="INDEX-95" />
<a name="INDEX-96" />
<a name="INDEX-97" />

            The current version of &AElig;lfred is licensed under the
	    GNU General Public License (GPL), with the 
	    "library exception" clause to ensure that it can be used in 
	    proprietary applications (notably, embedded systems)
	    that aren't themselves licensed under the GPL.
	    That license is used with many GNU libraries, such as the
	    GCC Java (GCJ) runtime libraries.
	    &AElig;lfred includes a <em class="filename">gnujaxp.jar</em>
	    file that needs installation.
	    </p>

	    <p>See <a href="../../../../../../www.gnu.org/software/classpathx/jaxp/">http://www.gnu.org/software/classpathx/jaxp/</a>
	    for information about the current distribution of &AElig;lfred.
	    </p>



	</div>

	<a name="sax2-CHP-1-SECT-6.2" /><div class="sect2">
	    <h3 class="sect2">1.6.2. Crimson</h3>

	    <p>
<a name="INDEX-98" />
<a name="INDEX-99" />
<a name="INDEX-100" />


            Sun, through <em class="emphasis">Java Project X</em> in
	    its Java division, was one of the earliest major Java
	    vendors to support SAX and XML namespaces. This parser
	    was the first to demonstrate that XML could be validated without
	    a significant penalty.
	    It was dozens of times faster than its competitors and offered more
	    XML conformance. 
	    History buffs may like to know that its validation
	    was based on some of the SGML/HTML validation code from the
	    HotJava web browser, the original Java-and-the-Web showpiece
	    software package. This XML code ties directly to some of
	    the earliest Java software seen outside of JavaSoft.
	    </p>

	    <p>Crimson is a version of the Java Project X software,
	    updated to support SAX2, DOM Level 2, and JAXP 1.1 (for
	    which it is the reference implementation).
	    It was submitted to the Apache XML project to help trigger
	    a "best of breed" XML parser.
	    </p>

	    <p>
            <a name="INDEX-101" />
            <a name="INDEX-102" />
            
            Crimson is licensed under the Apache Software License.
	    The Crimson parser has been incorporated into
	    Sun's JDK 1.4 release as its standard XML parser.
	    It is separately distributed as the reference parser
	    for JAXP, so most JAXP distributions include it.
	    This book describes Crimson Version 1.1.3
	    (matching JDK 1.4), dated October 2001,
	    which includes <em class="filename">jaxp.jar</em> and
	    <em class="filename">crimson.jar</em> files that need installation.
	    </p>

	    <p>See <a href="../../../../../../java.sun.com/xml/">http://java.sun.com/xml/</a>
	    for information about this distribution.
	    </p>

	</div>

	<a name="sax2-CHP-1-SECT-6.3" /><div class="sect2">
	    <h3 class="sect2">1.6.3. Xerces</h3>

	    <p>
<a name="INDEX-103" />
<a name="INDEX-104" />
<a name="INDEX-105" />


            Xerces is a family of XML parsers in the Apache XML
	    project; in this book, we refer only to the Java version,
	    not the C/C++ version.
	    It has evolved from the second generation of
	    IBM's XML for Java (XML4J) parser, and much of its
	    development and maintenance is still handled by IBM.
	    It is relatively large, and is monolithic rather than
	    modular. It also supports many nonstandard extensions.
	    For example, validation against W3C's XML schemas is
	    part of the parser, rather than a layered feature.
	    </p>

	    <p><em class="emphasis">Xerces v2</em> is a third-generation 
	    project. Goals of that project include a
	    more maintainable and modular design.
	    It includes an internal XML event pipeline model, which is
	    strikingly similar to that used in &AElig;lfred to layer validation
	    and DOM support, except that it doesn't use SAX2 to
	    represent the XML Infoset data.
	    </p>

	    <p>Xerces is licensed under the Apache Software License.
	    This book describes Xerces Version 1.4.3, dated August 2001,
	    which includes a <em class="filename">xerces.jar</em> file that needs installation.
	    </p>

	    <p>See <a href="../../../../../../xml.apache.org/">http://xml.apache.org/</a>
	    for information about this distribution.
	    
<a name="INDEX-106" />
<a name="INDEX-107" />


            </p>

	</div>

    

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch01_07.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">1.5. Packages in the SAX2 API</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">1.7. Installing a SAX2 Parser</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>