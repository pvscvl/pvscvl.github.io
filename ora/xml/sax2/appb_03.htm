<html><head><title>Document Information Item  (SAX2)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="David Brownell" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002378L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="SAX2" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="SAX2" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="appb_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>



	<h2 class="sect1">B.3. Document Information Item </h2>

	<p>
<a name="INDEX-809" />
The <em class="emphasis">Document Information Item</em> is the root
	of the information found in an XML document.
	There is only one such root item.
	</p>
<?troff .hw ContentHandler.start-Element()?>	
	<p>This information item begins with the
	<tt class="literal">ContentHandler.startDocument()</tt> call and
	ends with the <tt class="literal">ContentHandler.endDocument()</tt>
	call. Many SAX2 event calls are used to construct its children
	or constituents.
	</p>
<?troff .Nd 5?>
<?troff .hw ContentHandler.skipped-Entity()?>
	<table cellpadding="4" border="1">
    
    
    
    
	    <tr>
		<th><p>Property</p></th>
		<th><p>Callbacks</p></th>
		<th><p>Explanation</p></th>
	    </tr>
	
	    <tr>
		<td><p>[children]</p></td>
		<td>&nbsp;</td>
		<td><p>See the sections for each type of Information
		    Item: Document Type Declaration (one, if present),
		    Element (one),
		    processing instruction (possibly many),
		    Comment (possibly many).
		    </p></td>
	    </tr>
	
	    <tr>
		<td><p>[document element]</p></td>
		<td>&nbsp;</td>
		<td><p>This is the element in the [children] property.
		</p></td>
	    </tr>

	    <tr>
		<td><p>[notations]</p></td>
		<td>&nbsp;</td>
		<td><p>See the section on Notation Information Items.
		(Unordered.)</p></td>
	    </tr>

	    <tr>
		<td><p>[unparsed entities]</p></td>
		<td>&nbsp;</td>
		<td><p>See the section on Unparsed Entity
		Information Items.
		(Unordered.)</p></td>
	    </tr>

	    <tr>
		<td><p>[base URI]</p></td>
		<td><p>
<a name="INDEX-810" />
<a name="INDEX-811" />
		    
                <tt class="literal">Locator.getSystemId()</tt>, or <tt class="literal">XMLReader.parse()</tt></p></td>
		<td><p><em class="emphasis">Locator</em> may be used
		    during the <tt class="literal">startDocument()</tt> callback
		    (and earlier callbacks, unless they were made in the
		    context of an external parameter entity).</p>
&nbsp;
		    <p>Alternatively, for any parsers that don't 
		    provide a Locator,
		    applications using an <em class="emphasis">XMLReader</em>
		    are responsible for providing this information (if it
		    exists) to the <tt class="literal">parse()</tt> method.
		    This is passed directly as the string parameter
		    or indirectly as the <em class="emphasis">systemId</em>
		    property of an <em class="emphasis">InputSource</em>.
		    </p></td>
	    </tr>

	    <tr>
		<td><p>[character encoding scheme]</p></td>
		<td><p>
<a name="INDEX-812" />
                    unavailable; or
		    <tt class="literal">InputSource.getEncoding()</tt>
		</p></td>
		<td><p>Normally this property is unavailable; it won't
		    affect the interpretation of character data in Java.
		    However, applications will in rare
		    cases provide this to the parser when they call
		    <tt class="literal">XMLReader.parse(InputSource)</tt>
		    to start parsing.
		    It's likely that an upcoming extension API
		    will provide this information. 
		    </p></td>
	    </tr>

	    <tr>
		<td><p>[standalone]</p></td>
		<td><p>
<a name="INDEX-813" />
                    <tt class="literal">XMLReader.getFeature()</tt>
		    </p></td>
		<td><p>It's likely that an upcoming
		    extension API will provide this information
		    using an <em class="emphasis">is-standalone</em> feature flag.
		    </p></td>
	    </tr>

	    <tr>
		<td><p>[version]</p></td>
		<td><p>unavailable</p></td>
		<td><p>You can probably assume the value of this
		    property is "1.0" for now.
		    It's likely that an upcoming extension API
		    will provide this information.
		    </p></td>
	    </tr>

	    <tr>
		<td><p>[all declarations processed]</p></td>
		<td><p>
		    <a name="INDEX-814" />
<a name="INDEX-815" />
                    <tt class="literal">ContentHandler.skippedEntity()</tt>:
		    <tt class="literal">LexicalHandler.endDTD()</tt>
		   </p></td>
		<td><p>
		    When <tt class="literal">endDTD()</tt> is invoked, the
		    value of this property is known. If no external
		    parameter entities
		    are reported as skipped, then the value is <em class="emphasis">true</em>.
		    If the parser doesn't support the lexical handler, then
		    the later call to <tt class="literal">startElement()</tt>
		    may be used instead of <tt class="literal">endDTD()</tt>.
		    </p></td>
	    </tr>

	</table><p>

	<p>Because text in Java is always accessed using UTF-16
	character strings or arrays,
	most applications won't need to worry about encoding issues;
	the SAX2 parser handles that. However, there are cases when
	encoding may matter: </p>

	<dl>
	    <dt><i>Input normalization</i></dt>

		<dd><p>
<a name="INDEX-816" />
<a name="INDEX-817" />
<a name="INDEX-818" />
<a name="INDEX-819" />
<a name="INDEX-820" />
<a name="INDEX-821" />
                Some recent XML standards require that
		text be normalized.
		For example, XML Canonicalization (as used in digital
		signature applications) requires the use of Unicode
		Normalization Form C; some other W3C specifications
		have the same requirement.
		Text originally <?troff .ne 10?>represented in UTF-8 or UTF-16
		might need further normalization to remove some
		deprecated character codes that can be represented
		using those encodings.
		</p>
		
		<p>Such encoding data is required on a per-entity basis,
		not a per-document basis as implied by the Infoset specification. And for internal entity expansions or defaulted attributes, you'll need to normalize if the encoding associated with the original definition supported denormalized text.</p></dd>

		

	    <dt><i>Output encoding</i></dt>

		<dd><p>
<a name="INDEX-822" />
                When using an output encoding that is not
		based on the Unicode character set, you may not be able
		to represent XML names that use particular characters.
		For example, ASCII cannot handle element or attribute names
		using accented characters (used in Europe and Latin
		America) or using ideographic characters (used in Asia).
		</p>
		
		<p>The preferred encoding solution is to always use UTF-8
		or UTF-16 when outputting XML, so that such problems cannot
		occur and so that all XML processors can work with such
		output. Similar logic applies to display systems like
		window systems: prefer font rendering systems that use
		Unicode over those tied to some specific encoding.
<a name="INDEX-823" />
		
</p></dd>

		
	</dl>

    

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="appb_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="appb_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">B.2. Event Consumer Issues </td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">B.4. Element Information Items </td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>
