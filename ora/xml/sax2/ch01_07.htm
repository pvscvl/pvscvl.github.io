<html><head><title>Installing a SAX2 Parser (SAX2)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="David Brownell" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="0596002378L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="SAX2" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="SAX2" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_06.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228" /><td align="right" valign="top" width="228"><a href="ch01_08.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>



	<h2 class="sect1">1.7. Installing a SAX2 Parser</h2>

	<p>
<a name="INDEX-108" />
<a name="INDEX-109" />
<a name="INDEX-110" />


        Unless you use JDK 1.4 (which bundles SAX2 and
	the Crimson parser) or some other environment that's already
	set up with SAX2 support (such as any up-to-date web application
	server), you will need to update your Java
	programming environment so that you can use SAX. Consult the
	documentation that comes with your parser and Java Virtual
	Machine for specific details. Assuming the SAX interfaces
	and your SAX parser are distributed in a single JAR file
	called <em class="filename">xml.jar</em> (you'll need to know and
	use the correct full pathname, including the directory),
	you'll probably use one of these approaches shown in the following list. </p>

	<dl>

	    <dt><i>Add to extensions directory</i></dt>

		<dd><p>

<a name="INDEX-111" />

                If you use JDK 1.2 or later for
		your runtime environment,<a href="#FOOTNOTE-6">[6]</a> you can install
		the JAR file into the <em class="filename">jre/lib/ext</em>
		subdirectory of your Java distribution.
		This is the preferred solution during
		development, since it's the simplest and least
		error-prone.
		</p><blockquote class="footnote"><a name="FOOTNOTE-6" /><p>[6]Most current graphical
		development tools, called IDEs, bundle
		this software for Java.</p></blockquote><p>
		On Windows, you may need to add this to two different
		locations: one for the development environment as well as one for the runtime environment.
		</p></dd>

	    <dt><i>Update class path on command line</i></dt>

		<dd><p>
<a name="INDEX-112" />
<a name="INDEX-113" />


                This solution works with JDK 1.2
		and later. Whenever you invoke a
		program that needs the SAX support (such as
		<i class="command">java</i>, <i class="command">javac</i>,
		or <i class="command">javadoc</i>) pass the <i class="command">-cp
		xml.jar</i> parameter to add SAX to the
		class path.
		</p></dd>

	    <dt><i>Add to CLASSPATH in environment</i></dt>

		<dd><p>This is the original way to
		add software to your Java environment, and it works
		on a JDK 1.1-based system and 
		on many Java implementations that
		aren't derived from Sun's JDK. You may
		prefer this technique if you have to make several
		different Java execution environments cooperate -- perhaps one for each IDE and test environment
		used for application development. You could also have 
		your application use its bundled JVM
		when it's deployed, rather than whatever the end
		user happened to have around.
		</p><p>
		The details vary from operating system to
		operating system, and from installation to
		installation, because you may need to ensure that your
		CLASSPATH includes libraries internal to the JVM.
		Put the CLASSPATH assignment into your login
		script (<em class="filename">autoexec.bat</em> or your environment variables, <em class="filename">.profile</em>, <em class="filename">.login</em>, or other file). On Windows, you'll likely need to reboot after you modify <em class="filename">autoexec.bat</em>, to ensure that all new JVM instances see the new configuration.</p></dd>

	</dl>

	<p>You may end up with a variety of SAX2 parsers in
	your environment. Sometimes which parser you use will be 
        important, but you should avoid
	creating such problems.
	See <a href="ch03_02.htm">Section 3.2, "Bootstrapping an XMLReader"</a> in <a href="ch03_01.htm">Chapter 3, "Producing  SAX2 Events"</a> for information about
	making sure you're using a particular parser; there are
	several mechanisms, including setting system properties
	and adding <em class="filename">META-INF/services/</em> resources
	to your class path.
	If you work within some application environment
	(perhaps a web server), you may want to look for specialized
	configuration mechanisms.
	Also, if you have SAX1 support <?troff .ne 10?>in your environment, you can
	easily upgrade it; see <a href="ch05_02.htm">Section 5.2, "SAX1 Support "</a> in <a href="ch05_01.htm">Chapter 5, "Other SAX Classes"</a>.
	</p>

	<p>

<a name="INDEX-114" />

        Note that because SAX lets applications hand character
	streams to parsers with <em class="emphasis">java.io.Reader</em>,
	you can't use JDK 1.0 with SAX. You need JDK 1.1, which is
	a more complete and stable release in any case.
	Since the Java environments that aren't based on Sun's code
	generally treat JDK 1.1 as the conformance target,<a href="#FOOTNOTE-7">[7]</a> that should
	cause no real trouble.
	SAX itself doesn't require more recent APIs, but some
	of the tools you use with SAX might have such requirements.
	For portability, the example code in this book avoids use of
	APIs added in JDK 1.2 and later.
	The main impact of this restriction is that in a few cases you'll
	be able to get minor performance improvements by using the
	collections APIs.
	
<a name="INDEX-115" />
<a name="INDEX-116" />


        </p><blockquote class="footnote"><a name="FOOTNOTE-7" /><p>[7]Many Macintosh
	developers can't use JDK 1.2 yet. The Microsoft JVM also does not support JDK 1.2 APIs.</p></blockquote>

    

<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_06.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch01_08.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">1.6. Some Popular SAX2 Parser Distributions </td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">1.8. What XML Are We Talking About? </td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="../jxml/index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>