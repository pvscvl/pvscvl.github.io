<html><head><title>SAX (Java &amp; XML, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Brett McLaughlin" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600197L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Java &amp; XML, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XML, 2nd Edition" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"></td><td align="right" valign="top" width="228"><a href="ch03_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>




<h1 class="chapter">Chapter 3. SAX</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4>
  <p> <a href="#javaxml2-CHP-3-SECT-1">Getting Prepared</a><br />
<a href="ch03_02.htm">SAX Readers</a><br />
<a href="ch03_03.htm">Content Handlers</a><br />
<a href="ch03_04.htm">Error Handlers</a><br />
<a href="ch03_05.htm">Gotcha!</a><br />
<a href="ch03_06.htm">What's Next?</a><br /></p></div>

<p><a name="INDEX-183" /></a> <a name="INDEX-184" /></a>
<a name="INDEX-185" /></a>When
dealing with XML programmatically, one of the first things you have
to do is take an XML document and parse it. As the document is
parsed, the data in the document becomes available to the application
using the parser, and suddenly you are within an XML-aware
application! If this sounds a little too simple to be true, it almost
is. This chapter describes how an XML document is parsed, focusing on
the events that occur within this process. These events are
important, as they are all points where application-specific code can
be inserted and data manipulation can occur.
</p>

<p>As a vehicle for this chapter, I'm going to introduce the
Simple API for XML (SAX). SAX is what makes insertion of this
application-specific code into events possible. The interfaces
provided in the SAX package will become an important part of any
programmer's toolkit for handling XML. Even though the SAX
classes are small and few in number, they provide a critical
framework for Java and XML to operate within. Solid understanding of
how they help in accessing XML data is critical to effectively
leveraging XML in your Java programs. In later chapters, we'll
add to this toolkit other Java and XML APIs like DOM, JDOM, JAXP, and
data binding. But, enough fluff; it's time to talk SAX.
</p>

<div class="sect1"><a name="javaxml2-CHP-3-SECT-1" /></a>
<h2 class="sect1">3.1. Getting Prepared</h2>

<p>There are a few items that you must have before beginning to code.
They are:
</p>

<ul><li>
<p>An XML parser</p>
</li><li>
<p>The SAX classes</p>
</li><li>
<p>An XML document</p>
</li></ul>
<p>First, you must obtain an XML parser. Writing a parser for XML is a
serious task, and there are several efforts going on to provide
excellent XML parsers, especially in the open source arena. I am not
going to detail the process of actually writing an XML parser here;
rather, I will discuss the applications that wrap this parsing
behavior, focusing on using existing tools to manipulate XML data.
This results in better and faster programs, as neither you nor I
spend time trying to reinvent what is already available. After
selecting a parser, you must ensure that a copy of the SAX classes is
on hand. These are easy to locate, and are key to Java code's
ability to process XML. Finally, you need an XML document to parse.
Then, on to the code!
</p>

<a name="javaxml2-CHP-3-SECT-1.1" /></a><div class="sect2">
<h3 class="sect2">3.1.1. Obtaining a Parser</h3>

<p><a name="INDEX-186" /></a>The
first step to coding Java that uses XML is locating and obtaining the
parser you want to use. I briefly talked about this process in <a href="ch01_01.htm">Chapter 1, "Introduction"</a>, and listed various XML parsers that could be
used. To ensure that your parser works with all the examples in the
book, you should verify your parser's compliance with the XML
specification. Because of the variety of parsers available and the
rapid pace of change within the XML community, all of the details
about which parsers have what compliance levels are beyond the scope
of this book. Consult the parser's vendor and visit the web
sites previously given for this information.
</p>

<p>In the spirit of the open source community, all of the examples in
this book use the <a name="INDEX-187" /></a> <a name="INDEX-188" /></a>
<a name="INDEX-189" /></a>Apache
Xerces parser. Freely available in binary and source form at
<a name="INDEX-190" /></a><a href="../../../../../../xml.apache.org/">http://xml.apache.org</a>, this C- and Java-based
parser is already one of the most widely contributed-to parsers
available (not that hardcore Java developers like us care about C,
though, right?). In addition, using an open source parser such as
Xerces allows you to send questions or bug reports to the
parser's authors, resulting in a better product, as well as
helping you use the software quickly and correctly. 
To subscribe to
the general list and request help on the Xerces parser, send a blank
email to <a name="INDEX-191" />
<a href="mailto:xerces-j-dev-subscribe@xml.apache.org"><em>xerces-j-dev-subscribe@xml.apache.org</em></a>.
The
members of this list can help if you have questions or problems with
a parser not specifically covered in this book. Of course, the
examples in this book all run normally on any parser that uses the
SAX implementation covered here.
</p>

<p>Once you have selected and downloaded an XML parser, make sure that
your Java environment, whether it be an IDE (Integrated Development
Environment) or a command line, has the <a name="INDEX-192" />
<a name="INDEX-193" /></a>
<a name="INDEX-194" /></a>XML parser classes in its classpath.
This will be a basic requirement for all further examples.
</a></em></p>

<a name="ch03-4-fm2xml" />

<blockquote><b>NOTE:</b> 
If you don't know how to deal with <tt class="literal">CLASSPATH</tt> issues, you may be in a bit over your head. However, assuming you are comfortable with your system <tt class="literal">CLASSPATH</tt>, set it to include your parser's <em class="emphasis">jar</em> file, as shown here:<p></p>
<blockquote><pre class="code">c: set CLASSPATH=.;c:\javaxml2\lib\xerces.jar;%CLASSPATH%

c: echo %CLASSPATH%
.;c:\javaxml2\lib\xerces.jar;c:\java\jdk1.3\lib\tools.jar</pre></blockquote>


<p>Of course, your path will be different from mine, but you get the
idea.
</p>
</blockquote>

<h3 class="sect2">3.1.2. Getting the SAX Classes and Interfaces</h3>

<p>Once you have your parser, you need to locate the
<a name="INDEX-195" /></a>
<a name="INDEX-196" /></a>SAX classes. These classes are almost
always included with a parser when downloaded, and Xerces is no
exception. If this is the case with your parser, you should be sure
not to download the SAX classes explicitly, as your parser is
probably packaged with the latest version of SAX that is supported by
the parser. At this time, SAX 2.0 has long been final, so expect the
examples detailed here (which are all using SAX 2) to work as shown,
with no modifications.
</p>

<p>If you are not sure whether you have the SAX classes, look at the
<em class="filename">jar</em> file or class structure used by your parser.
The SAX classes are
<a name="INDEX-197" /></a>packaged
in the <tt class="literal">org.xml.sax</tt> structure. Ensure, at a
minimum, that you see the class
<tt class="literal">org.xml.sax.XMLReader</tt>. This will indicate that you
are (almost certainly) using a parser with SAX 2 support, as the
<tt class="literal">XMLReader</tt> class is core to SAX 2.
</p>


<p>Finally, many parsers include documentation with a download, and this
documentation may have the SAX API documentation packaged with it
(Xerces being an example of this case).
</p>

</div>
<a name="javaxml2-CHP-3-SECT-1.3" /></a><div class="sect2">
<h3 class="sect2">3.1.3. Have an XML Document on Hand</h3>

<p>You should also make sure that you have an XML document to parse. The
output shown in the examples is based on parsing the XML document
discussed in <a href="ch02_01.htm">Chapter 2, "Nuts and Bolts"</a>. Save this file as
<em class="emphasis">contents.xml</em><a name="INDEX-201" /></a>
somewhere on your local hard drive. I highly recommend that you
follow what I'm demonstrating by using this document; it
contains various XML constructs for demonstration purposes. You can
simply type the file in from the book, or you may download the XML
file from the book's web site, <a name="INDEX-202" /></a><a href="../../../../../../www.newInstance.com/">http://www.newInstance.com</a>.
</p>

</div>
</em></div><em class="email">












<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch02_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch03_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">2.5. What's Next?</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">3.2. SAX Readers</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
      </map>

</em></body></html>
