<html><head><title>JAXP (Java &amp; XML, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Brett McLaughlin" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600197L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Java &amp; XML, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XML, 2nd Edition" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"></td><td align="right" valign="top" width="228"><a href="ch09_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>




<h1 class="chapter">Chapter 9. JAXP</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4>
  <p> <a href="#javaxml2-CHP-9-SECT-1">API or Abstraction</a><br />
<a href="ch09_02.htm">JAXP 1.0</a><br />
<a href="ch09_03.htm">JAXP 1.1</a><br />
<a href="ch09_04.htm">Gotcha!</a><br />
<a href="ch09_05.htm">What's Next?</a><br /></p></div>

<p>When Sun released the <a name="INDEX-853" /></a>Java API for XML Parsing, generally
referred to as JAXP, they managed to launch a series of
contradictions into the Java world. In one swoop, they released the
most important API that wasn't an API to Java developers, and
caused great confusion with the simplest API. People switched to a
new parser without knowing they had switched to a new parser. There
is a lot of confusion surrounding JAXP, not only about how to use it,
but even about what it is.
</p>

<p>In this chapter, I'll first address some of the confusion about
what JAXP is and is not.<a href="#FOOTNOTE-13">[13]</a> Then you'll get a look at
JAXP 1.0, which is still used heavily. Once you get the basics, we
will move on to JAXP 1.1, the latest version (not quite released as
of the writing of this chapter, but almost certainly available by
publication time). That will give you a leg up on the new features in
the latest version, and in particular the TrAX API included in JAXP
1.1. Buckle up, and be prepared to finally understand the mystery
behind JAXP.
</p><blockquote class="footnote"> <a name="FOOTNOTE-13" /></a><p>[13]If this chapter feels a
little bit like d&eacute;j&agrave; vu, you may have read an earlier
version of this text at IBM DeveloperWorks. There were originally two
articles published at <em class="emphasis">http://www.ibm.com/developer</em> that explored
JAXP. This chapter is an updated and slightly modified version of
those articles.</p> </blockquote>

<div class="sect1"><a name="javaxml2-CHP-9-SECT-1" /></a>
<h2 class="sect1">9.1. API or Abstraction</h2>

<p>Before diving into code, it's important to cover some basic
concepts. Strictly speaking, <a name="INDEX-854" /></a>JAXP is an API, but it is more accurately
called an <a name="INDEX-855" /></a>abstraction layer. It does not provide a
new means of parsing XML, add to SAX, DOM, or JDOM, or provide new
functionality in handling Java and XML. Instead, it makes it easier
to deal with some difficult tasks with DOM and SAX. It also makes it
possible to handle vendor-specific tasks encountered when using the
DOM and SAX APIs, which in turn allows those APIs to be used in a
vendor-neutral way.
</p>

<p>While I'll go through these features individually, the thing
you really need to get a handle on is that <a name="INDEX-856" /></a>JAXP does not provide parsing
functionality! Without SAX, DOM, or another XML parsing API,
<em class="emphasis">you cannot parse XML</em>. I have seen many requests
for a comparison of DOM, SAX, or JDOM to JAXP. Making these
comparisons is impossible because the first three APIs serve a
completely different purpose than JAXP. SAX, DOM, and JDOM all parse
XML. JAXP provides a means to get to these APIs and the results of
parsing a document. It doesn't offer a new way to parse the
document itself. This is a critical distinction to make if
you're going to use JAXP correctly. It will also most likely
put you miles ahead of many of your fellow XML developers.
</p>

<p>If you're still dubious, download the <a name="INDEX-857" /></a>JAXP 1.0
distribution from Sun's web site at <a name="INDEX-858" /></a>
<a name="INDEX-859" /></a><a href="../../../../../../java.sun.com/xml">http://java.sun.com/xml</a> and you'll get
an idea of how basic JAXP is. In the included
<em class="filename">jar</em> (<em class="emphasis">jaxp.jar</em>), you will find only six classes!
How hard could this API be? All of the classes (part of the
<tt class="literal">javax.xml.parsers</tt>
<a name="INDEX-860" /></a>package)
sit on top of an existing parser. And two of these classes are for
error handling. JAXP is simpler than people think.
</p>

<a name="javaxml2-CHP-9-SECT-1.1" /></a><div class="sect2">
<h3 class="sect2">9.1.1. Sun's JAXP and Parser</h3>

<p>Part of the trouble stems from the fact that
<a name="INDEX-861" /></a>Sun's parser is included with
the JAXP download. The parser classes are all in the <em class="emphasis">parser.jar</em> archive as part of the
<tt class="literal">com.sun.xml.parser</tt>
<a name="INDEX-862" /></a>package
and related subpackages. This parser (now code-named Crimson) is
<em class="emphasis">not</em> part of JAXP. It is part of the JAXP
<em class="emphasis">distribution</em>, but it is not part of the JAXP
<em class="emphasis">API</em>. Confusing? A little bit. Think about it
this way: JDOM downloads include the Apache Xerces parser. That
parser isn't part of JDOM but is used by JDOM, so it's
included to ensure that JDOM is usable out of the box. The same
principle applies for JAXP, but it isn't as clearly publicized:
JAXP comes with Sun's parser so it can be used immediately.
However, many people refer to the classes included in Sun's
parser as part of the JAXP API itself. For example, a common question
on newsgroups is, "How can I use the
<tt class="literal">XMLDocument</tt> class that comes with JAXP? What is
its purpose?" The answer is somewhat complicated.
</p>

<p>First, the <tt class="literal">com.sun.xml.tree.XMLDocument</tt> class is
<em class="emphasis">not part of JAXP</em>. It is part of Sun's
parser. So the question is misleading from the start. Second, the
whole point of <a name="INDEX-863" /></a>JAXP is to provide
vendor-independence when dealing with parsers. The same code, using
JAXP, could be used with Sun's XML parser, Apache's
Xerces XML parser, and Oracle's XML parser. Using a
Sun-specific class, then, is a bad idea. It violates the entire point
of using JAXP. Are you starting to see how this subject has gotten
muddied up? The parser and the API in the JAXP distribution (at least
the one from Sun) have been lumped together, and developers mistake
classes and features from one as part of the other, and vice versa.
</p>

</div>
<a name="javaxml2-CHP-9-SECT-1.2" /></a><div class="sect2">
<h3 class="sect2">9.1.2. The Old and the New</h3>

<p>There is another confusing issue related to <a name="INDEX-864" /></a> <a name="INDEX-865" /></a> <a name="INDEX-866" /></a>JAXP. JAXP 1.0 supports only
SAX 1.0 and DOM Level 1. It is generally Sun's policy not to
ship any API or product based on a working draft, beta, or other
nonfinal version of underlying APIs. When JAXP 1.0 was finalized, Sun
settled on SAX 1.0, as SAX 2.0 was still in beta, and DOM Level 1, as
Level 2 was still in candidate recommendation. There were a lot of
users who layered JAXP on top of existing parsers (like Apache
Xerces, for example) that had SAX 2.0 and DOM Level 2 support, and
suddenly lost functionality. The result was a lot of questions about
how to use features that simply couldn't be used with JAXP. It
was also right about this time that SAX 2.0 went from beta to final,
and <em class="emphasis">really</em> threw things into a mess. However,
that hasn't stopped many who didn't need these later
versions of DOM and SAX from putting JAXP 1.0 into production, and so
I'd be remiss in not covering both the old version (1.0), as
well as the new version (1.1), which does support SAX 2.0 and DOM
Level 2. The rest of this chapter is split into two parts: the first
dealing with JAXP 1.0, and the second with 1.1. Since 1.1 builds on
what 1.0 provided in terms of functionality, you should read both
sections regardless of the version of the API you're using.
</p>

</div>
</div>










<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch08_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch09_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">8.5. What's Next?</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">9.2. JAXP 1.0</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
      </map>

</body></html>