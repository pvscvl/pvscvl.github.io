<html><head><title>Installation (Java &amp; XML, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Brett McLaughlin" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600197L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Java &amp; XML, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XML, 2nd Edition" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"></td><td align="right" valign="top" width="228"><a href="ch10_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>



<h2 class="sect1">10.2. Installation</h2>

<p><a name="INDEX-989" />In
other chapters, installation instructions generally involved pointing
you at a web site where you could obtain a distribution of the
software and letting you add the included <em class="emphasis">jar</em> file to your classpath. Installing a
framework such as Cocoon is not quite as simple, and the procedures
are documented here. Additionally, Cocoon has instructions online for
various other servlet engines; check these out at <a href="../../../../../../xml.apache.org/cocoon/install.html">http://xml.apache.org/cocoon/install.html</a>.
</p>

<a name="javaxml2-CHP-10-SECT-2.1" /><div class="sect2">
<h3 class="sect2">10.2.1. Source Code or Binaries</h3>

<p>The first thing you need to do is decide if you want the source code
or binaries for Cocoon. This decision actually can be boiled down
even further: do you want the very latest features, or the most
reliable build? If you are a hardcore developer who wants to dig into
Cocoon, you should get a copy of CVS and pull the latest Cocoon
source code from the <a name="INDEX-990" />
<a name="INDEX-991" /><em class="emphasis">xml.apache.org</em> CVS repository. Rather than
detail this process, as it probably involves the minority of you,
I'll simply refer you to the <em class="emphasis">CVS Pocket
Reference</em> by Gregor Purdy (O'Reilly). This will get
you set up, in concert with the instructions online at
<a name="INDEX-992" />
<a name="INDEX-993" /><a href="../../../../../../xml.apache.org/cvs.html">http://xml.apache.org/cvs.html</a>.
</p>

<p>For those interested in trying Cocoon out or actually running it in
production, download the latest Cocoon binary from <a href="../../../../../../xml.apache.org/cocoon/dist">http://xml.apache.org/cocoon/dist</a>. As I
write, the latest version, 1.8.2, is available for
<a name="INDEX-994" />Windows (<em class="emphasis">Cocoon-1.8.2.zip</em>) and
<a name="INDEX-995" />Linux/Unix (<em class="emphasis">Cocoon-1.8.2.tar.gz</em>). Once you download the
archive, expand it to a temporary directory that you can work with.
The most important thing to note here is the <em class="emphasis">lib/</em> directory that's created. This
directory includes all of the libraries needed to run Cocoon using
your servlet engine.
</p>

<a name="ch10-9-fm2xml" /><blockquote><b>NOTE:</b> 

If you don't have a <em class="emphasis">lib/</em> directory, or if it doesn't contain several <em class="emphasis">jar</em> files within it, you may have an older version of Cocoon. It's only in the newer releases (1.8 and up) that the download contains these libraries (which make life significantly easier, by the way!).
</p>
</blockquote>
</div>
<a name="javaxml2-CHP-10-SECT-2.2" /><div class="sect2">
<h3 class="sect2">10.2.2. Configuring the Servlet Engine</h3>

<p><a name="INDEX-996" />Once
you have built Cocoon, configure your servlet engine to use Cocoon
and tell it which requests Cocoon should handle. I'll look at
setting up Cocoon to work with the <a name="INDEX-997" /> <a name="INDEX-998" /> <a name="INDEX-999" />Jakarta Tomcat
servlet engine here; as this is the reference implementation for the
Java Servlet API (Version 2.2), you should be able to mimic these
steps for your own servlet engine if you are not using the Tomcat
implementation.
</p>

<p>The first step is to copy all of the libraries needed for Cocoon at
runtime into Tomcat's library directory. This is located at
<em class="emphasis">TOMCAT_HOME/lib</em>, where
<em class="emphasis">TOMCAT_HOME</em> is the directory of your Tomcat
installation. On my Windows machine, this is <em class="emphasis">c:\java\jakarta-tomcat</em>, and on Linux
it's <em class="emphasis">/usr/local/jakarta-tomcat</em>. However, this does
not mean simply copy everything in Cocoon's <em class="emphasis">lib/</em> directory over (unless you want to); the
required <em class="emphasis">jar</em> files needed at
runtime are:
</p>

<ul><li>
<p><em class="emphasis">bsfengines.jar</em> (Bean Scripting
Framework)
</p>
</li><li>
<p><em class="emphasis">bsf.jar</em> (Bean Scripting Framework)</p>
</li><li>
<p><em class="emphasis">fop_0_15_0.jar</em> (FOP)</p>
</li><li>
<p><em class="emphasis">sax-bugfix.jar</em> (SAX fixes to
error handling)
</p>
</li><li>
<p><em class="emphasis">turbine-pool.jar</em> (Turbine)</p>
</li><li>
<p><em class="emphasis">w3c.jar</em> (W3C)</p>
</li><li>
<p><em class="emphasis">xalan_1_2_D02.jar</em> (Xalan)</p>
</li><li>
<p><em class="emphasis">xerces_1_2.jar</em> (Xerces)</p>
</li></ul>
<p>Additionally, copy Cocoon's <em class="emphasis">bin/cocoon.jar</em> file into this same directory
(<em class="emphasis">TOMCAT_HOME/lib</em>). At that point, you'll
have all the libraries needed to run Cocoon.
</p>

<p>The latest versions of <a name="INDEX-1000" />Tomcat (I'm using 3.2.1)
automatically load all libraries in the Tomcat <em class="emphasis">lib/</em> directory, which means you don't
have to mess with the classpath. If you are using a servlet engine
that doesn't support this automatic loading, add each
<em class="emphasis">jar</em> to the servlet engine's
classpath.
</p>

<p>Once the required libraries are in place, let the servlet engine know
which context to run Cocoon under. This essentially tells the servlet
engine where to look for files requested through the Cocoon engine.
This is handled by modifying the <em class="emphasis">server.xml</em><a name="INDEX-1001" /> file, located in Tomcat's
<em class="emphasis">conf/</em> directory.
<a name="INDEX-1002" />
<a name="INDEX-1003" />Add
the following directive in at the end of the file, within the
<tt class="literal">ContextManager</tt> element:
</p>

<blockquote><pre class="code">&lt;Server&gt;
  &lt;!-- Other Server elements --&gt;

  &lt;ContextManager&gt;
    &lt;!-- Other Context directives --&gt;

    &lt;Context path="/cocoon" 
             docBase="webapps/cocoon" 
             debug="0"
             reloadable="true" &gt;
    &lt;/Context&gt;
  &lt;/ContextManager&gt;
&lt;/Server&gt;</pre></blockquote>

<p>In other words, requests based on the URI <em class="emphasis">/cocoon</em> (such as <em class="emphasis">/cocoon/index.xml</em>) should be mapped to the
context within the specified directory (<em class="emphasis">webapps/cocoon</em>). Of course, you'll need
to create the directories for the context you've just defined.
So add a <em class="emphasis">cocoon</em> and <em class="emphasis">cocoon/WEB-INF</em> directory to Tomcat's
<em class="emphasis">webapps</em> directory. You should
have a directory structure similar to <a href="ch10_02.htm">Figure 10-1</a>.
</p>

<a name="javaxml2-CHP-10-FIG-1" /><div class="figure"><img height="606" alt="Figure 10-1" src="figs/javax_1001.gif" width="173" /></div><h4 class="objtitle">Figure 10-1. Cocoon context directory structure</h4>

<p>With this setup, you'll need to copy a few files from the
Cocoon distribution into the context. Copy Cocoon's <em class="emphasis">conf/cocoon.properties</em> and <em class="emphasis">src/WEB-INF/web.xml</em> files into the
<em class="emphasis">TOMCAT_HOME/webapps/cocoon/WEB-INF/</em> directory.
Once this is in place, you only need to modify the <em class="emphasis">web.xml</em> file that you just copied. Change the
reference in it to point to the <em class="emphasis">cocoon.properties</em> file you just copied over:
</p>

<blockquote><pre class="code">&lt;web-app&gt;
 &lt;servlet&gt;
  &lt;servlet-name&gt;org.apache.cocoon.Cocoon&lt;/servlet-name&gt;
  &lt;servlet-class&gt;org.apache.cocoon.Cocoon&lt;/servlet-class&gt;
  &lt;init-param&gt;
   &lt;param-name&gt;properties&lt;/param-name&gt;<tt class="userinput"><b>
   &lt;param-value&gt;WEB-INF/cocoon.properties&lt;/param-value&gt;</b></tt>
  &lt;/init-param&gt;
 &lt;/servlet&gt;
 
 &lt;servlet-mapping&gt;
  &lt;servlet-name&gt;org.apache.cocoon.Cocoon&lt;/servlet-name&gt;
  &lt;url-pattern&gt;*.xml&lt;/url-pattern&gt;
 &lt;/servlet-mapping&gt;
&lt;/web-app&gt;</pre></blockquote>

<p>At this point, you have one last, rather annoying, step to perform.
<a name="INDEX-1004" />Tomcat automatically loads all the
<em class="emphasis">jar</em> files in its <em class="emphasis">lib/</em>
directory, and it does it alphabetically, according to the name of
the <em class="emphasis">jar</em> file. The problem is that Cocoon
requires a DOM Level 2 implementation (such as the one in Xerces,
included with Cocoon in <em class="emphasis">xerces_1_2.jar</em>); however, Tomcat uses a DOM
Level 1 implementation, included in <em class="emphasis">parser.jar</em>. Of course, because of the
alphabetical listing, <em class="emphasis">parser.jar</em>
gets loaded before <em class="emphasis">xerces_1_2.jar</em>, and Cocoon bombs out. To
solve this, rename your <em class="emphasis">parser.jar</em> archive something that will get
loaded after Xerces; I used <em class="emphasis">z_parser.jar</em>. This step ensures that the
classes are still available to Tomcat, but that the DOM Level 2
classes are loaded first and used by Cocoon.
</p>

<p>Once you complete these steps, test Cocoon by loading up the Cocoon
information URI, which reports details about Cocoon's
installation. Access <em class="emphasis">http://[hostname:port]/cocoon/Cocoon.xml</em>. In
a default installation, this would be <em class="emphasis">http://localhost:8080/cocoon/Cocoon.xml</em>. Your
browser should give you results similar to those in <a href="ch10_02.htm">Figure 10-2</a>. 
</p>

<a name="javaxml2-CHP-10-FIG-2" /><div class="figure"><img height="557" alt="Figure 10-2" src="figs/javax_1002.gif" width="481" /></div><h4 class="objtitle">Figure 10-2. Checking the Cocoon installation</h4>

<p>Once this is set up, you're ready to put some real content into
place. With the setup you already have, all requests that end in
<em class="emphasis">.xml</em> and are within the defined
Cocoon context will be handled by the Cocoon servlet.<a name="INDEX-1005" /><a name="INDEX-1006" /> <a name="INDEX-1007" /> <a name="INDEX-1008" />
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch10_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch10_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">10. Web Publishing Frameworks</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">10.3. Using a Publishing Framework</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>