<html><head><title>What's Important? (Java &amp; XML, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Brett McLaughlin" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600197L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Java &amp; XML, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XML, 2nd Edition" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"></td><td align="right" valign="top" width="228"><a href="ch01_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>



<h2 class="sect1">1.2. What's Important?</h2>

<p>Once you've accepted that XML can help you out, the next
question is what <em class="emphasis">part</em> of it you need. As I
mentioned earlier, there are literally hundreds of applications of
XML, and trying to find the right one is not an easy task. I've
got to pick out twelve or thirteen key topics from these hundreds,
and manage to make them all applicable to you; not an easy task!
Fortunately, I've had a year to gather feedback from the first
edition of this book, and have been working with XML in production
applications for well over two years now. That means that I've
at least got an idea of what's interesting and useful. When you
boil all the various XML machinery down, you end up with just a few
categories.
</p>

<a name="javaxml2-CHP-1-SECT-2.1" /><div class="sect2">
<h3 class="sect2">1.2.1. Low-Level APIs</h3>

<p>An <a name="INDEX-31" /> <a name="INDEX-32" /> <a name="INDEX-33" />
<a name="INDEX-34" />API
is an application programming interface, and a low-level API is one
that lets you deal directly with an XML document's content. In
other words, there is little to no preprocessing, and you get raw XML
content to work with. It is the most efficient way to deal with XML,
and also the most powerful. At the same time, it requires the most
knowledge about XML, and generally involves the most work to turn
document content into something useful.
</p>

<p>The two most common low-level APIs today are SAX, the Simple API for
XML, and DOM, the Document Object Model. Additionally, JDOM (which is
not an acronym, nor is it an extension of DOM) has gained a lot of
momentum lately. All three of these are in some form of
standardization (SAX as a de facto, DOM by the W3C, and JDOM by Sun),
and are good bets to be long-lasting technologies. All three offer
you access to an XML document, in differing forms, and let you do
pretty much anything you want with the document. I'll spend
quite a bit of time on these APIs, as they are the basis for
everything else you'll do in XML. I've also devoted a
chapter to JAXP, Sun's Java API for XML Processing, which
provides a thin abstraction layer over SAX and DOM.
</p>

</div>
<a name="javaxml2-CHP-1-SECT-2.2" /><div class="sect2">
<h3 class="sect2">1.2.2. High-Level APIs</h3>

<p>High-level APIs are the next step up the ladder. Instead of offering
direct access to a document, they rely on low-level APIs to do that
work for them. Additionally, these APIs present the document in a
different form, either more user-friendly, or modeled in a certain
way, or in some form other than a basic XML document structure. While
these APIs are often easier to use and quicker to develop with, you
may pay an additional processing cost while your data is converted to
a different format. Also, you'll need to spend some time
learning the API, most likely in addition to some lower-level APIs.
</p>

<p>In this book, the main example of a high-level API is
<a name="INDEX-35" />
<a name="INDEX-36" />XML data
binding. Data binding allows for taking an XML document and providing
that document as a Java object. Not a tree-based object, mind you,
but a custom Java object. If you had elements named
"person" and "firstName", you would get an
object with methods like <tt class="literal">getPerson( )</tt> and
<tt class="literal">setFirstName( )</tt>. Obviously, this is a simple way
to quickly get going with XML; hardly any in-depth knowledge is
required! However, you can't easily change the structure of the
document (like making that "person" element become an
"employee" element), so data binding is suited for only
certain applications. You can find out all about data binding in
<a href="ch14_01.htm">Chapter 14, "Content Syndication"</a>.
</p>

</div>
<a name="javaxml2-CHP-1-SECT-2.3" /><div class="sect2">
<h3 class="sect2">1.2.3. XML-Based Applications</h3>

<p><a name="INDEX-37" />In
addition to APIs built specifically for working with a document or
its content, there are a number of applications built on XML. These
applications use XML directly or indirectly, but are focused on a
specific business process, like displaying stylized web content or
communicating between applications. These are all examples of
XML-based applications that use XML as a part of their core behavior.
Some require extensive XML knowledge, some require none; but all
belong in discussions about Java and XML. I've picked out the
most popular and useful to discuss here.
</p>

<p>First, I'll cover <a name="INDEX-38" />web publishing frameworks, which are
used to take XML and format them as HTML, WML (Wireless Markup
Language), or as binary formats like Adobe's PDF (Portable
Document Format). These frameworks are typically used to serve
clients complex, highly customized web applications. Next, I'll
look at <a name="INDEX-39" />XML-RPC,
which provides an XML variant on remote procedure calls. This is the
beginning of a complete suite of tools for application communication.
Building on XML-RPC, I'll describe <a name="INDEX-40" />SOAP, the Simple
Object Access Protocol, and how it expands upon what XML-RPC
provides. Then you'll get to see the emerging players in the
web services field by examining <a name="INDEX-41" />UDDI
(Universal Discovery, Description, and Integration) and
<a name="INDEX-42" />WSDL (Web Services Descriptor
Language) in a business-to-business chapter. Putting all these tools
in your toolbox will make you formidable not only in XML, but in any
enterprise application environment.
</p>

<p>And finally, in the last chapter I'll gaze into my crystal ball
and point out what appears to be gathering strength in the coming
months and years, and try and give you a heads-up on what is worth
monitoring. This should keep you ahead of the curve, which is where
any good developer should be.
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_01.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch01_03.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">1. Introduction</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">1.3. The Essentials</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>