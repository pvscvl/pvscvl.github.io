<html><head><title>The Essentials (Java &amp; XML, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Brett McLaughlin" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600197L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Java &amp; XML, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XML, 2nd Edition" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"></td><td align="right" valign="top" width="228"><a href="ch01_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>



<h2 class="sect1">1.3. The Essentials</h2>

<p>Now you're ready to learn how to use Java and XML to their
best. What do you need? I will address that subject, give you some
basics, and then let you get after it.
</p>

<a name="javaxml2-CHP-1-SECT-3.1" /><div class="sect2">
<h3 class="sect2">1.3.1. An Operating System and Java</h3>

<p>I say this almost tongue in cheek; if you expect to get through this
book with no <a name="INDEX-43" />
<a name="INDEX-44" /> <a name="INDEX-45" />OS (operating system)
and no Java installation, you just might be in a bit over your head.
Still, it's worth letting you know what I expect.
<a name="INDEX-46" />I wrote the first half of this book and
the examples for those chapters on a Windows 2000 machine, running
both JDK 1.2 and JDK 1.3 (as well as 1.3.1). I did most of my
compiling under Cygwin (from Cygnus), so I usually operate in a
Unix-esque environment. The last half of the book was written on my
(at the time) brand new Macintosh G4 running OS X. That system comes
with JDK 1.3, and is a beauty, for those of you who are curious.
</p>

<p>In any case, all the examples should work unchanged with Java 1.2 or
above; I used no features of JDK 1.3. However, I did not write this
code to compile under Java 1.1, as I felt using the Java 2
Collections classes was important. Additionally, if you're
working with XML, you need to take a long hard look at updating your
JDK if you're still on 1.1 (I know some of you have no choice).
If you are stuck on a 1.1 JVM, you should be able to get the
collections from Sun (<a href="../../../../../../java.sun.com/">http://java.sun.com</a>), make some small
modifications, and be up and running.
</p>

</div>
<a name="javaxml2-CHP-1-SECT-3.2" /><div class="sect2">
<h3 class="sect2">1.3.2. A Parser</h3>

<p>You will need an <a name="INDEX-47" />
<a name="INDEX-48" />XML parser. One of
the most important layers to any XML-aware application is the XML
parser. This component handles the important task of taking a raw XML
document as input and making sense of the document; it will ensure
that the document is well-formed, and if a DTD or schema is
referenced, it may be able to ensure that the document is valid. What
results from an XML document being parsed is typically a data
structure that can be manipulated and handled by other XML tools or
Java APIs. I'm going to leave the detailed discussions of these
APIs for later chapters. For now, just be aware that the parser is
one of the core building blocks to using XML data.
</p>

<p>Selecting an XML parser is not an easy task. There are no hard and
fast rules, but two main criteria are typically used. The first is
the speed of the parser. As XML documents are used more often and
their complexity grows, the speed of an XML parser becomes extremely
important to the overall performance of an application. The second
factor is conformity to the XML specification. Because performance is
often more of a priority than some of the obscure features in XML,
some parsers may not conform to finer points of the XML specification
in order to squeeze out additional speed. You must decide on the
proper balance between these factors based on your
application's needs. In addition, most XML parsers are
<a name="INDEX-49" />
<a name="INDEX-50" />validating,
which means they offer the option to validate your XML with a DTD or
XML Schema, but some are not. Make sure you use a validating parser
if that capability is needed in your applications.
</p>

<p>Here's a list of the most commonly used <a name="INDEX-51" />
<a name="INDEX-52" /> <a name="INDEX-53" />XML
parsers. The list does not show whether a parser validates or not, as
there are current efforts to add validation to several of the parsers
that do not yet offer it. No overall ranking is suggested here, but
there is a wealth of information on the web pages for each parser:
</p>

<ul><li>
<p><a name="INDEX-54" />Apache Xerces:
<a href="../../../../../../xml.apache.org/">http://xml.apache.org</a>
</p>
</li><li>
<p><a name="INDEX-55" />IBM XML4J:
<a href="../../../../../../alphaworks.ibm.com/tech/xml4j">http://alphaworks.ibm.com/tech/xml4j</a>
</p>
</li><li>
<p>James Clark's <a name="INDEX-56" />XP:
<a href="../../../../../../www.jclark.com/xml/xp">http://www.jclark.com/xml/xp</a>
</p>
</li><li>
<p><a name="INDEX-57" />Oracle XML
Parser: <a href="../../../../../../technet.oracle.com/tech/xml">http://technet.oracle.com/tech/xml</a>
</p>
</li><li>
<p><a name="INDEX-58" />Sun Microsystems Crimson: <a href="../../../../../../xml.apache.org/crimson">http://xml.apache.org/crimson</a>
</p>
</li><li>
<p>Tim Bray's <a name="INDEX-59" />Lark and Larval: <a href="../../../../../../www.textuality.com/Lark">http://www.textuality.com/Lark</a>
</p>
</li><li>
<p>The Mind Electric's <a name="INDEX-60" />Electric XML: <a href="../../../../../../www.themindelectric.com/products/xml/xml.html">http://www.themindelectric.com/products/xml/xml.html</a>
</p>
</li><li>
<p><a name="INDEX-61" />Microsoft's MXSML Parser:
<a href="../../../../../../msdn.microsoft.com/xml/default.asp">http://msdn.microsoft.com/xml/default.asp</a>
</p>
</li></ul>

<blockquote><b>WARNING:</b> 


I've included Microsoft's MSXML parser in this list in deference to their efforts to address numerous compliance issues in their latest versions. However, their parser still tends to be "doing its own thing" and is not guaranteed to work with the examples in this book because of that. Use it if you need to, but be willing to do a little extra work if you make this decision.
</p>

</blockquote>

<p>Throughout this book, I tend to use Apache Xerces because it is open
source. This is a huge plus to me, so I'd recommend you try out
Xerces if you don't already have a parser selected.
</p>

</div>
<a name="javaxml2-CHP-1-SECT-3.3" /><div class="sect2">
<h3 class="sect2">1.3.3. APIs</h3>

<p>Once you've gotten the parser part of the equation taken care
of, you'll need the various APIs I'll be talking about
(low-level and high-level). Some of these will be included with your
parser download, while others need to be downloaded manually.
I'll expect you to either have these on hand, or be able to get
them from an Internet web site, so ensure you've got web access
before getting too far into any of the chapters.
</p>

<p>First, the <a name="INDEX-62" />low-level APIs: SAX, DOM, JDOM, and JAXP.
SAX and DOM should be included with any parser you download, as those
APIs are interface-based and will be implemented within the parser.
You'll also get JAXP with most of these, although you may end
up with an older version; hopefully by the time this book is out,
most parsers will have full JAXP 1.1 (the latest production version)
support. JDOM is currently bundled as a separate download, and you
can get it from the web site at <a href="../../../../../../www.jdom.org/">http://www.jdom.org</a>.
</p>

<p>As for the <a name="INDEX-63" />high-level APIs, I cover a couple of
alternatives in the data binding chapter. I'll look briefly at
Castor and Quick, available online at <a href="../../../../../../castor.exolab.org/">http://castor.exolab.org</a> and <a href="../../../../../../sourceforge.net/projects/jxquick">http://sourceforge.net/projects/jxquick</a>,
respectively. I'll also take some time to look at Zeus,
available at <a href="../../../../../../zeus.enhydra.org/">http://zeus.enhydra.org</a>. All of these
packages contain any needed dependencies within the downloaded
bundles.
</p>

</div>
<a name="javaxml2-CHP-1-SECT-3.4" /><div class="sect2">
<h3 class="sect2">1.3.4. Application Software</h3>

<p>Last in this list is the myriad of specific technologies I'll
talk about in the chapters. These technologies include things like
SOAP toolkits, WSDL validators, the Cocoon web publishing framework,
and so on. Rather than try and cover each of these here, I'll
address the more specific applications in appropriate chapters,
including where to get the packages, what versions are needed,
installation issues, and anything else you'll need to get up
and running. I can spare you all the ugly details here, and only bore
those of you who choose to be bored (just kidding! I'll try to
stay entertaining). In any case, you can follow along and learn
everything you need to know.
</p>

<p>In some cases, I do build on examples in previous chapters. For
example, if you start reading <a href="ch06_01.htm">Chapter 6, "Advanced DOM"</a> before
going through <a href="ch05_01.htm">Chapter 5, "DOM"</a>, you'll probably get
a bit lost. If this occurs, just back up a chapter and you'll
see where the confusing code originated. As I already mentioned, you
can skim <a href="ch02_01.htm">Chapter 2, "Nuts and Bolts"</a> on XML basics, but I'd
recommend you go through the rest of the book in order, as I try to
logically build up concepts and knowledge.
</p>

</div>


<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch01_02.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch01_04.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">1.2. What's Important?</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">1.4. What's Next?</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
</map>

</body></html>
