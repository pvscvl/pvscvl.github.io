<html><head><title>Looking Forward (Java &amp; XML, 2nd Edition)</title><link rel="stylesheet" type="text/css" href="../style/style1.css" />

<meta name="DC.Creator" content="Brett McLaughlin" /><meta name="DC.Format" content="text/xml" scheme="MIME" /><meta name="DC.Language" content="en-US" /><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc." /><meta name="DC.Source" scheme="ISBN" content="059600197L" /><meta name="DC.Subject.Keyword" content="stuff" /><meta name="DC.Title" content="Java &amp; XML, 2nd Edition" /><meta name="DC.Type" content="Text.Monograph" />

</head><body bgcolor="#ffffff">

<img alt="Book Home" border="0" src="gifs/smbanner.gif" usemap="#banner-map" /><map name="banner-map"><area shape="rect" coords="1,-2,616,66" href="index.htm" alt="Java and XML, 2nd Edition" /><area shape="rect" coords="629,-11,726,25" href="jobjects/fsearch.htm" alt="Search this book" /></map>

<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch15_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"></td><td align="right" valign="top" width="228"><a href="ch16_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr></table></div>




<h1 class="chapter">Chapter 16. Looking Forward</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4>
  <p> <a href="#javaxml2-CHP-16-SECT-1">XLink</a><br />
<a href="ch16_02.htm">XPointer</a><br />
<a href="ch16_03.htm">XML Schema Bindings</a><br />
<a href="ch16_04.htm">And the Rest. . . </a><br />
<a href="ch16_05.htm">What's Next?</a><br /></p></div>

<p>It's <a name="INDEX-1460" /></a> <a name="INDEX-1461" /></a>almost time to wrap up the
journey through Java and XML. I hope you've had fun. Before I
leave you to mull over all the possibilities, I want to finish up
with a little crystal-ball gazing. Like any good programmer, I always
try and outguess the technology space and be ahead of the curve. This
usually involves knowing more than just cursory information about a
whole lot of technologies, so I can easily get up to speed when
something breaks. In this chapter, I'm going to point out some
of the interesting things coming up over the horizon, and let you in
on some extra knowledge on each. I'll be the first to admit
that some of these guesses may be completely off; others may be the
next big thing. Take a look at each, and then be ready to react when
you see where they might fit into your applications.<a href="#FOOTNOTE-28">[28]</a>
</p><blockquote class="footnote">
<a name="FOOTNOTE-28" /></a><p>[28]Many of the sections within this chapter are based in whole or
in part on articles and tips I have written for the IBM
DeveloperWorks online publication, located at <a href="../../../../../../www.ibm.com/developer">http://www.ibm.com/developer</a>. Thanks to Nancy
Dunn and the kind folks at IBM for letting me update and reprint
parts of those articles.</p> </blockquote>

<div class="sect1"><a name="javaxml2-CHP-16-SECT-1" /></a>
<h2 class="sect1">16.1. XLink</h2>

<p>First on my list of up-and-coming stars in the XML world is
<a name="INDEX-1462" /></a>XLink.
XLink defines an XML linking mechanism for referring to other
documents. For those of you who are HTML authors, this may sound like
the "a" element you are used to:
</p>

<blockquote><pre class="code">&lt;a href="http://www.nickelcreek.com"&gt;Check out Nickel Creek!&lt;/a&gt;.</pre></blockquote>

<p>However, XLink offers much more than simply unidirectional (one-way)
linking. Using XLink, you can create bidirectional links, define how
links are processed, and most importantly, allow linking from any XML
element (instead of just the "a" element). For all these
reasons, it's worth getting into here.
</p>

<p><a href="ch16_01.htm">Example 16-1</a> is a small XML document, representing a
few of my guitars.
</p>

<a name="javaxml2-CHP-16-EX-1" /></a><div class="example">
<h4 class="objtitle">Example 16-1. XML document using XLink </h4>
<blockquote><pre class="code">&lt;?xml version="1.0"?&gt;

&lt;guitars xmlns="http://www.newInstance.com/about/guitars"
         xmlns:xlink="http://www.w3.org/1999/xlink"&gt;
 &lt;guitar luthier="Bourgeois"
          xlink:type="simple"
          xlink:href="http://www.newInstance.com/about/guitars/bourgeoisOM"&gt;
  &lt;descripton xlink:type="simple"  
              xlink:href="http://www.newinstance.com/pics/bougOM_front_full.jpg"
              xlink:actuate="onLoad" xlink:show="embed"&gt;
  This is a real beauty in a small body. Although this is an OM, I use it for
  flatpicking bluegrass as well as for producing some beautiful fingerstyle sounds.
  &lt;/description&gt;
 &lt;/guitar&gt;
 &lt;guitar luthier="Bourgeois"
          xlink:type="simple"
          xlink:href="http://www.newInstance.com/about/guitars/bourgeoisD150"&gt;
  &lt;descripton xlink:type="simple"
              xlink:href="http://www.newinstance.com/pics/bougd150_con_rim2.jpg"
              xlink:actuate="onLoad" xlink:show="embed"&gt;
   Here's the holy grail in process. Dana Bourgeois is building this Brazilian 
  rosewood and adirondack bluegrass monster right now... you'll know it's 
  finished when you hear a run and your windows shatter!
  &lt;/description&gt;
 &lt;/guitar&gt;
&lt;/guitars&gt;</pre></blockquote>
</div>

<p>First, you'll notice that I reference the XLink namespace, so
that the document has access to the XLink attributes and features.
Second, I'm going to cover only XLinks of the
"simple" type, specified by the
<tt class="literal">xlink:type</tt><a name="INDEX-1463" /></a> attribute. That's because
browser support for XLinks is minimal, found only in Mozilla and
Netscape 6 (I haven't been able to test IE 6.0, but 5.5 has no
support for them), so keeping to the basic aspects will serve you
well.
</p>

<p>Once the formalities are out of the way, XLinking just requires using
some attributes on the elements that have links. Take my
document's guitar element. It specifies a luthier for each
guitar (that's a guitar maker for those of you who are missing
out on guitar playing!). I already mentioned the use of the
<tt class="literal">xlink:type</tt> attribute, which is set to the value
"simple". It then specifies a URL to link to using XLink.
To specify this URL, it uses the
<tt class="literal">xlink:href</tt><a name="INDEX-1464" /></a> attribute. So far, this looks a lot
like HTML. No big deal, right? By default (assuming browser support,
of course), this will set the link up to replace the current window
when clicked upon. If you want the target of the link to open in a
new window, you can add the
<tt class="literal">xlink:show</tt><a name="INDEX-1465" /></a> attribute, and give it a value of
"new"; the default is "replace", which is
normal HTML behavior.
</p>

<p>Of course, this only covers basic linking. Things get more
interesting when you want to access remote locations as resources,
such as linking in images. Look at the description element; this sets
the value of the <tt class="literal">xlink:show</tt> attribute to
"embed". The resource, in this case an image file showing
the guitar being described, should be processed inline within the
page. This instructs an XLink-aware browser to insert the specified
document inline within the XML. It becomes really interesting when
you consider this could be <em class="emphasis">another XML document</em>,
and not just an image.
</p>

<p>Taking things even further, you can specify <em class="emphasis">when</em>
the resource should be shown. This is handled by the
<tt class="literal">xlink:actuate</tt><a name="INDEX-1466" /></a>
attribute. It defines when the resource is read and shown. When the
value is "onLoad", as it is in <a href="ch16_01.htm">Example 16-1</a>, the resource should be loaded when the
initial document is loaded. You could also specify the value
"onRequest", which means that until the link is clicked,
the resource is not shown. This is handy for keeping bandwidth low,
allowing the user to view only the resources that they want to see.
</p>

<p>XLink could definitely have major impact on the next generation of
XML documents. For the complete specification, check out <a href="../../../../../../www.w3.org/TR/xlink">http://www.w3.org/TR/xlink</a>. I'd also
keep an eye on the latest browsers and versions to see when complete
XLink support shows up.<a name="INDEX-1467" /></a> 
</p>

</div>










<hr width="684" align="left" />
<div class="navbar"><table width="684" border="0"><tr><td align="left" valign="top" width="228"><a href="ch15_05.htm"><img alt="Previous" border="0" src="../gifs/txtpreva.gif" /></a></td><td align="center" valign="top" width="228"><a href="index.htm"><img alt="Home" border="0" src="../gifs/txthome.gif" /></a></td><td align="right" valign="top" width="228"><a href="ch16_02.htm"><img alt="Next" border="0" src="../gifs/txtnexta.gif" /></a></td></tr><tr><td align="left" valign="top" width="228">15.5. What's Next?</td><td align="center" valign="top" width="228"><a href="index/index.htm"><img alt="Book Index" border="0" src="../gifs/index.gif" /></a></td><td align="right" valign="top" width="228">16.2. XPointer</td></tr></table></div>
<hr width="684" align="left" />

<img alt="Library Navigation Links" border="0" src="../gifs/navbar.gif" usemap="#library-map" />
<p><p><font size="-1"><a href="copyrght.htm">Copyright &copy; 2002</a> O'Reilly &amp; Associates. All rights reserved.</font></p>

<map name="library-map">
<area shape="rect" coords="0,0,85,93" href="../index.htm"><area shape="rect" coords="85,0,180,98" href="../sax2/index.htm"><area shape="rect" coords="182,-1,261,100" href="../xmlnut/index.htm"><area shape="rect" coords="263,1,384,96" href="index.htm"><area shape="rect" coords="386,1,463,100" href="../jxslt/index.htm"><area shape="rect" coords="466,1,533,112" href="../xslt/index.htm"><area shape="rect" coords="535,-1,610,108" href="../schema/index.htm"><area shape="rect" coords="613,1,696,121" href="../pxml/index.htm">
      </map>

</body></html>