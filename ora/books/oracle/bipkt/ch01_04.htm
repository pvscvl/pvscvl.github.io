<HTML
><HEAD
><TITLE
>[Chapter 1] 1.4 Built-in Functions</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein, John Beresniewicz &amp; Chip Dawes"><META
NAME="DC.Date"
CONTENT="2000-04-29T17:35:03Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-456-8E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-456-8E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL Oracle Built-ins SQL"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Built-ins Pocket Reference"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch01_01.htm"
TITLE="1. Oracle PL/SQL Built-ins Pocket Reference"><LINK
REL="prev"
HREF="ch01_03.htm"
TITLE="1.3 Built-in Packages"><LINK
REL="next"
HREF="ch01_05.htm"
TITLE="1.5 RESTRICT REFERENCES Pragmas "></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Built-ins Pocket Reference"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_03.htm"
TITLE="1.3 Built-in Packages"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.3 Built-in Packages"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch01_01.htm"
TITLE="1. Oracle PL/SQL Built-ins Pocket Reference"
>Chapter 1<BR>Oracle PL/SQL Built-ins Pocket Reference</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_05.htm"
TITLE="1.5 RESTRICT REFERENCES Pragmas "
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.5 RESTRICT REFERENCES Pragmas "
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="plsqlbip-24257"
>1.4 Built-in Functions</A
></H2
><P
CLASS="para"
>Built-in functions, implemented by Oracle in the STANDARD built-in package, are predefined functions that give you convenient ways to manipulate your data. There are six basic types of built-in functions, each described here in its own section:</P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><EM
CLASS="emphasis"
>Character functions</EM
> analyze and modify the contents of CHAR and VARCHAR2 string variables.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><EM
CLASS="emphasis"
>Numeric functions</EM
> are a full range of operations that manipulate numbers, including trigonometric, logarithmic, and exponential functions.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><EM
CLASS="emphasis"
>Date functions</EM
> are utilities that allow programmers to perform high-level actions on date variables, including date arithmetic. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><EM
CLASS="emphasis"
>Conversion functions</EM
> convert from one datatype to another, often formatting the output data at the same time.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><EM
CLASS="emphasis"
>LOB functions</EM
> allow operations on LOB (large object) data.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><EM
CLASS="emphasis"
>Miscellaneous functions</EM
> perform operations that don't fall into any of the other categories.</P
></LI
></UL
><P
CLASS="para"
>STANDARD contains definitions and functions for the PL/SQL language. These definitions include all of the PL/SQL datatypes, the named exceptions, and the functions and operators (which are defined as functions). Note that almost all STANDARD functions have corresponding SQL native functions.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsqlbip-SECT-4.1"
>1.4.1 Character Functions</A
></H3
><P
CLASS="para"
>Character functions parse names, concatenate strings, and perform other character operations.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION ASCII
    (ch IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN BINARY_INTEGER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the numeric ASCII code for <EM
CLASS="emphasis"
>ch</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION CHR (n BINARY_INTEGER) RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the character associated with the numeric collating sequence <EM
CLASS="emphasis"
>n</EM
>, according to the database's character set.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION CONCAT 
    (left IN VARCHAR2 CHARACTER SET ANY_CS
    ,right IN VARCHAR2 CHARACTER SET left%CHARSET)
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the string <EM
CLASS="emphasis"
>right</EM
> appended to string <EM
CLASS="emphasis"
>left</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION INITCAP
    (ch IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the string <EM
CLASS="emphasis"
>ch</EM
> with the first letter of each word in uppercase and all other letters in lowercase.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION INSTR
    (str1 IN VARCHAR2 CHARACTER SET ANY_CS
    ,str2 IN VARCHAR2 CHARACTER SET str1%CHARSET
    ,pos BINARY_INTEGER := 1
    ,nth IN POSITIVE := 1)
RETURN BINARY_INTEGER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the character position of the <EM
CLASS="emphasis"
>nth</EM
> appearance of <EM
CLASS="emphasis"
>str2</EM
> in the string <EM
CLASS="emphasis"
>str1</EM
>. The search begins <EM
CLASS="emphasis"
>pos</EM
> characters into <EM
CLASS="emphasis"
>str1</EM
> and continues for the length of <EM
CLASS="emphasis"
>str1</EM
>. A negative <EM
CLASS="emphasis"
>pos</EM
> forces a right to left (backwards) search.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION INSTRB
    (str1 IN VARCHAR2 CHARACTER SET ANY_CS
    ,str2 IN VARCHAR2 CHARACTER SET str1%CHARSET
    ,pos BINARY_INTEGER := 1
    ,nth IN POSITIVE := 1)
RETURN BINARY_INTEGER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Same as INSTR except <EM
CLASS="emphasis"
>pos</EM
> and <EM
CLASS="emphasis"
>len</EM
> are expressed in bytes (for multi-byte character sets).</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION LENGTH
    (ch IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN NATURAL;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the length of string <EM
CLASS="emphasis"
>ch</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION LENGTHB
    (ch IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the length in bytes of <EM
CLASS="emphasis"
>ch</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION LOWER
    (ch IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>ch</EM
> with all characters in lowercase.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION LPAD
    (str1 IN VARCHAR2 CHARACTER SET ANY_CS
    ,len BINARY_INTEGER
   [,pad IN VARCHAR2 CHARACTER SET str1%CHARSET])
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>str1</EM
> padded on the left to a length of <EM
CLASS="emphasis"
>len</EM
> with pad character <EM
CLASS="emphasis"
>pad</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION LTRIM
    (str1 IN VARCHAR2 CHARACTER SET ANY_CS := ` `
    [,tset IN VARCHAR2 CHARACTER SET str1%CHARSET])
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>str1</EM
> stripped of any leading characters that appear in <EM
CLASS="emphasis"
>tset</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION REPLACE
    (srcstr IN VARCHAR2 CHARACTER SET ANY_CS
    ,oldsub IN VARCHAR2 CHARACTER SET srcstr%CHARSET
    ,newsub IN VARCHAR2 CHARACTER SET
        srcstr%CHARSET:= NULL)
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>scrstr</EM
> with all occurrences of <EM
CLASS="emphasis"
>oldsub</EM
> replaced with <EM
CLASS="emphasis"
>newsub</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION RPAD
    (str1 IN VARCHAR2 CHARACTER SET ANY_CS
    ,len BINARY_INTEGER
   [,pad IN VARCHAR2 CHARACTER SET str1%CHARSET])
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>str1</EM
> padded on the right to a length of <EM
CLASS="emphasis"
>len</EM
> using pad character <EM
CLASS="emphasis"
>pad</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION RTRIM
    (str1 IN VARCHAR2 CHARACTER SET ANY_CS := ` `
   [,tset IN VARCHAR2 CHARACTER SET str1%CHARSET])
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>str1</EM
> stripped of any trailing characters that appear in <EM
CLASS="emphasis"
>tset</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION SOUNDEX
    (ch IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the soundex (phonetic) encoding of <EM
CLASS="emphasis"
>ch</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION SUBSTR
    (str1 IN VARCHAR2 CHARACTER SET ANY_CS
    ,pos BINARY_INTEGER
    ,len BINARY_INTEGER := NULL)
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the portion of <EM
CLASS="emphasis"
>str1</EM
> beginning <EM
CLASS="emphasis"
>pos</EM
> characters into <EM
CLASS="emphasis"
>str1</EM
> and extending for <EM
CLASS="emphasis"
>len</EM
> characters. Negatives in <EM
CLASS="emphasis"
>pos</EM
> or <EM
CLASS="emphasis"
>len</EM
> cause the positions to be counted from right to left (backwards).</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION SUBSTRB
    (str1 IN VARCHAR2 CHARACTER SET ANY_CS
    ,pos BINARY_INTEGER
    ,len BINARY_INTEGER := NULL)
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Same as SUBSTR except <EM
CLASS="emphasis"
>pos</EM
> and <EM
CLASS="emphasis"
>len</EM
> are expressed in bytes (for multi-byte character sets).</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION TRANSLATE
    (str1 IN VARCHAR2 CHARACTER SET ANY_CS
    ,src IN VARCHAR2 CHARACTER SET str1%CHARSET
    ,dest IN VARCHAR2 CHARACTER SET str1%CHARSET)
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>str1</EM
> with all occurrences of characters in <EM
CLASS="emphasis"
>src</EM
> replaced by positionally corresponding characters in <EM
CLASS="emphasis"
>dest</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION UPPER
    (ch IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the string <EM
CLASS="emphasis"
>ch</EM
> in all uppercase.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsqlbip-SECT-4.2"
>1.4.2 Numeric Functions</A
></H3
><P
CLASS="para"
>Numeric functions manipulate numbers.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION ABS (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the absolute value of <EM
CLASS="emphasis"
>n</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION ACOS (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the arc cosine of <EM
CLASS="emphasis"
>n</EM
> where -1 &lt; <EM
CLASS="emphasis"
>n</EM
> &lt; 1.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION ASIN (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the arc sine of <EM
CLASS="emphasis"
>n</EM
> where -1 &lt; <EM
CLASS="emphasis"
>n</EM
> &lt; 1.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION ATAN (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the inverse tangent of <EM
CLASS="emphasis"
>n</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION ATAN2
    (x IN NUMBER, y IN NUMBER)
RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the arc tangent of <EM
CLASS="emphasis"
>x</EM
> and <EM
CLASS="emphasis"
>y</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION CEIL (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the nearest integer greater than or equal to <EM
CLASS="emphasis"
>n</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION COS (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the trigonometric cosine of <EM
CLASS="emphasis"
>n</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION COSH (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the hyperbolic cosine of <EM
CLASS="emphasis"
>n</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION EXP (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the value of <EM
CLASS="emphasis"
>e</EM
> raised to the <EM
CLASS="emphasis"
>n</EM
>th power where <EM
CLASS="emphasis"
>e</EM
> is the base of the natural logarithms.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION FLOOR (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the nearest integer less than or equal to <EM
CLASS="emphasis"
>n</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION LN (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the natural logarithm of <EM
CLASS="emphasis"
>n</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION LOG
    (left IN NUMBER, right IN NUMBER)
RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the logarithm of <EM
CLASS="emphasis"
>right</EM
> in base <EM
CLASS="emphasis"
>left</EM
> where <EM
CLASS="emphasis"
>left</EM
> &gt;1 and <EM
CLASS="emphasis"
>right</EM
> &gt; 0.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION MOD
    (n1 IN NUMBER, n2 IN NUMBER)
RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the remainder of <EM
CLASS="emphasis"
>n1</EM
> after division by <EM
CLASS="emphasis"
>n2</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION POWER
    (n IN NUMBER, e IN NUMBER)
RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>n</EM
> raised to the <EM
CLASS="emphasis"
>e</EM
>th power.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION ROUND 
   (left IN NUMBER
   ,right BINARY_INTEGER := 0)
RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>left</EM
> rounded to <EM
CLASS="emphasis"
>right</EM
> decimal places.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION SIGN (n IN NUMBER) RETURN SIGNTYPE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns -1, 0, or 1, depending on the sign of <EM
CLASS="emphasis"
>n</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION SIN (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the trigonometric sine function of <EM
CLASS="emphasis"
>n</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION SINH (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the hyperbolic sine of <EM
CLASS="emphasis"
>n</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION SQRT (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the square root of <EM
CLASS="emphasis"
>n</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION TAN (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the trigonometric tangent function of <EM
CLASS="emphasis"
>n</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION TANH (n IN NUMBER) RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the hyperbolic tangent of <EM
CLASS="emphasis"
>n</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION TRUNC 
   (n IN NUMBER
   ,places BINARY_INTEGER := 0)
RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Truncates <EM
CLASS="emphasis"
>n</EM
> to <EM
CLASS="emphasis"
>places</EM
> decimal places.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsqlbip-SECT-4.3"
>1.4.3 Date Functions</A
></H3
><P
CLASS="para"
>Date functions manipulate date information.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION ADD_MONTHS 
   (left IN DATE | NUMBER
   ,right IN NUMBER | DATE)
RETURN DATE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the date resulting from adding right months to the <EM
CLASS="emphasis"
>left</EM
> date.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION LAST_DAY (right IN DATE) RETURN DATE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the last day of the month containing date <EM
CLASS="emphasis"
>right</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION MONTHS_BETWEEN
    (left IN DATE, right IN DATE)
RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the number of months between <EM
CLASS="emphasis"
>left</EM
> and <EM
CLASS="emphasis"
>right</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION NEW_TIME 
   (right IN DATE
   ,middle IN VARCHAR2
   ,left IN VARCHAR2)
RETURN DATE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the date when date <EM
CLASS="emphasis"
>right</EM
> is converted from time zone <EM
CLASS="emphasis"
>middle</EM
> to time zone <EM
CLASS="emphasis"
>left</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION NEXT_DAY
    (left IN DATE, right IN VARCHAR2)
RETURN DATE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the next occurrence of day of the week <EM
CLASS="emphasis"
>right</EM
> ("Monday", "Tuesday", etc.) after date <EM
CLASS="emphasis"
>left</EM
>. </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION ROUND
    (left IN DATE [,right IN VARCHAR2])
RETURN DATE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns date <EM
CLASS="emphasis"
>left</EM
> rounded according to format mask <EM
CLASS="emphasis"
>right</EM
> (or the default format DD).</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION SYSDATE RETURN DATE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the current system date from the database.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION TRUNC
    (left IN DATE [,right IN VARCHAR2])
RETURN DATE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the date <EM
CLASS="emphasis"
>left</EM
> truncated using format mask <EM
CLASS="emphasis"
>right</EM
> (or the default format DD).</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsqlbip-SECT-4.4"
>1.4.4 Conversion Functions</A
></H3
><P
CLASS="para"
>Conversion functions convert data to the right datatype for an operation.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION CHARTOROWID (str IN VARCHAR2) RETURN ROWID;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>str</EM
> converted from VARCHAR2 to the ROWID datatype. See also DBMS_ROWID.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION CONVERT 
    (src IN VARCHAR2
    ,destcset IN VARCHAR2
   [,srccset IN VARCHAR2])
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>src</EM
> converted from character set <EM
CLASS="emphasis"
>srcset</EM
> to <EM
CLASS="emphasis"
>destcset</EM
>. The default for <EM
CLASS="emphasis"
>srccset</EM
> is the database's default character set.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION HEXTORAW (c IN VARCHAR2) RETURN RAW;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the hexadecimal encoded VARCHAR <EM
CLASS="emphasis"
>c</EM
> as a RAW string.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION RAWTOHEX (r IN RAW) RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the RAW string <EM
CLASS="emphasis"
>r</EM
> as a hexadecimal encoded VARCHAR.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION ROWIDTOCHAR (str IN ROWID) RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the ROWID data in <EM
CLASS="emphasis"
>str</EM
> converted to a VARCHAR.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION TO_CHAR
    (left IN DATE | NUMBER
    [,right IN VARCHAR2])
    [,parms IN VARCHAR2])
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>left</EM
> converted from a NUMBER or DATE to a VARCHAR, using format mask <EM
CLASS="emphasis"
>right</EM
> if specified. The optional <EM
CLASS="emphasis"
>parms</EM
> can specify NLS language parameters.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION TO_DATE
    (left IN VARCHAR2 | NUMBER
    [,right IN VARCHAR2]
    [,parms IN VARCHAR2])
RETURN DATE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>left</EM
> converted from a NUMBER or VARCHAR to a DATE, using format mask <EM
CLASS="emphasis"
>right</EM
> if specified. The optional <EM
CLASS="emphasis"
>parms</EM
> can specify NLS language parameters.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION TO_NUMBER
    (left IN VARCHAR2 | NUMBER
    [,right IN VARCHAR2]
    [,parms IN VARCHAR2])
RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns <EM
CLASS="emphasis"
>left</EM
> converted from a VARCHAR or NUMBER to a DATE, using format mask <EM
CLASS="emphasis"
>right</EM
> if specified. The optional <EM
CLASS="emphasis"
>parms</EM
> can specify NLS language parameters.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsqlbip-SECT-4.5"
>1.4.5 LOB Functions</A
></H3
><P
CLASS="para"
>LOB functions initialize large object (LOB) values.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION BFILENAME
    (directory IN VARCHAR2
    ,filename IN VARCHAR2)
RETURN BFILE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns a BFILE locator (handle) to <EM
CLASS="emphasis"
>filename</EM
> in directory <EM
CLASS="emphasis"
>directory</EM
>. See also DBMS_LOB.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION EMPTY_BLOB RETURN BLOB;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns an empty locator of type BLOB.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION EMPTY_CLOB RETURN CLOB;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns an empty locator of type CLOB.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsqlbip-SECT-4.6"
>1.4.6 Miscellaneous Functions</A
></H3
><P
CLASS="para"
>Miscellaneous functions return a variety of useful information.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION BITAND
    (left BINARY_INTEGER
    ,right BINARY_INTEGER)
RETURN BINARY_INTEGER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the bitwise AND of <EM
CLASS="emphasis"
>left</EM
> and <EM
CLASS="emphasis"
>right</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION DUMP
    (e IN NUMBER | DATE | VARCHAR2
    ,df BINARY_INTEGER := NULL
    ,sp BINARY_INTEGER := NULL
    ,len BINARY_INTEGER := NULL)
RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the internal representation of the portion of <EM
CLASS="emphasis"
>e</EM
> starting at <EM
CLASS="emphasis"
>sp</EM
> of length <EM
CLASS="emphasis"
>len</EM
> and using dump format <EM
CLASS="emphasis"
>df</EM
> (8 = octal; 10 = decimal; 16 = hex; 17 = char).</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION GREATEST
    (pattern IN NUMBER | VARCHAR | DATE)
RETURN NUMBER | VARCHAR | DATE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the greatest value of the (two or more) expressions listed in <EM
CLASS="emphasis"
>pattern</EM
>. <EM
CLASS="emphasis"
>pattern</EM
> expressions must all have the same datatype.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION LEAST
    (pattern IN NUMBER | VARCHAR | DATE)
RETURN NUMBER | VARCHAR | DATE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the smallest value of the (two or more) expressions listed in <EM
CLASS="emphasis"
>pattern</EM
>. <EM
CLASS="emphasis"
>pattern</EM
> is a comma-delimited list of expressions that all have the same datatype.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION NVL
    (s1 | n1 | d1 | b1  IN VARCHAR2 | NUMBER | DATE |
       BOOLEAN
    ,s2 | n2 | d2 | b2 IN VARCHAR2 CHARACTER SET
       s1%CHARSET)
RETURN VARCHAR2 | NUMBER | DATE | BOOLEAN;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>NULL value function; returns <EM
CLASS="emphasis"
>s2 | n2 | d2 | b2</EM
> when <EM
CLASS="emphasis"
>s1 | n1 | d1 | b1</EM
> is NULL, otherwise <EM
CLASS="emphasis"
>s1 | n1 | d1 | b1</EM
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION SQLCODE RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the numeric code associated with the current execution status.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION SQLERRM [(code IN NUMBER)] RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the error message associated with <EM
CLASS="emphasis"
>code</EM
> (or the current SQLCODE by default).</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION UID RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the numeric user id of the current user.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION USER RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the character username of the current user.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION USERENV (envstr IN VARCHAR2) RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the user session environment information specified by <EM
CLASS="emphasis"
>envstr</EM
>, which can have the following values:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>ENTRYID </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>To return an auditing identifier.</P
></DD
><DT
CLASS="term"
>INSTANCE </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>To return the instance identifier for an OPS database.</P
></DD
><DT
CLASS="term"
>LANGUAGE </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>To return NLS settings (language, territory, and character set) for the session.</P
></DD
><DT
CLASS="term"
>TERMINAL </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>To return the operating system terminal identifier.</P
></DD
></DL
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION VSIZE
    (e IN NUMBER | DATE | VARCHAR2)
RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns the number of bytes used to store <EM
CLASS="emphasis"
>e</EM
> internally.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION XOR
    (left IN BOOLEAN, right IN BOOLEAN)
RETURN BOOLEAN;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Returns TRUE when either <EM
CLASS="emphasis"
>left</EM
> or <EM
CLASS="emphasis"
>right</EM
> is TRUE but not both. See also UTL_RAW.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_03.htm"
TITLE="1.3 Built-in Packages"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.3 Built-in Packages"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Built-ins Pocket Reference"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Built-ins Pocket Reference"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_05.htm"
TITLE="1.5 RESTRICT REFERENCES Pragmas "
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.5 RESTRICT REFERENCES Pragmas "
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>1.3 Built-in Packages</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
>&nbsp;</TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>1.5 RESTRICT REFERENCES Pragmas </TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
