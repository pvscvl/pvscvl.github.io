<HTML
><HEAD
><TITLE
>[Chapter 2] 2.7 Block Structure</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein &amp; Bill Pribyl"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:50:48Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-335-9E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-335-9E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle PL/SQL"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming, 2nd Edition"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch02_01.htm"
TITLE="2. PL/SQL Language Fundamentals"><LINK
REL="prev"
HREF="ch02_06.htm"
TITLE="2.6 The PRAGMA Keyword"><LINK
REL="next"
HREF="ch03_01.htm"
TITLE="3. Effective Coding Style"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd Edition"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_06.htm"
TITLE="2.6 The PRAGMA Keyword"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.6 The PRAGMA Keyword"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch02_01.htm"
TITLE="2. PL/SQL Language Fundamentals"
>Chapter 2<BR>PL/SQL Language Fundamentals</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch03_01.htm"
TITLE="3. Effective Coding Style"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3. Effective Coding Style"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="SQL2-CH-2-SECT-7"
>2.7 Block Structure</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch02-idx-115498-1"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-115498-2"
></A
> <A
CLASS="indexterm"
NAME="ch02-idx-115498-3"
></A
> PL/SQL is a block-structured language. Each of the basic programming units you write to build your application is (or should be) a logical unit of work. The PL/SQL block allows you to reflect that logical structure in the physical design of your programs. </P
><P
CLASS="para"
>The block structure is at the core of two key concepts and features of the PL/SQL language: </P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Modularization</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The PL/SQL block is the basic unit of work from which modules, such as procedures and functions, are built. The ability to modularize is central to successfully developing complex applications. </P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Scope</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The block provides a scope or context for logically related objects. In the block, you group together declarations of variables and executable statements that belong together. </P
></DD
></DL
><P
CLASS="para"
>You can create anonymous blocks (blocks of code that have no name) and named blocks, which are procedures and functions. Furthermore, you can build packages in PL/SQL that group together multiple procedures and functions. </P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-2237"
></A
>The following sections briefly examine the block structure and related concepts. </P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-2-SECT-7.1"
>2.7.1 Sections of the PL/SQL Block</A
></H3
><P
CLASS="para"
>Each PL/SQL block has up to four different sections (some are optional under certain circumstances): </P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Header</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Relevant for named blocks only. The header determines the way the named block or program must be called. </P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Declaration section</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The part of the block that declares variables, cursors, and sub-blocks that are referenced in the execution and exception sections. </P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Execution section</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The part of the PL/SQL block containing the executable statements, the code that is executed by the PL/SQL runtime engine. </P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Exception section</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The section that handles exceptions to normal processing (warnings and error conditions). </P
></DD
></DL
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch02_07.htm"
>Figure 2.1</A
> shows the structure of the PL/SQL block for a procedure. </P
><H4
CLASS="figure"
><A
CLASS="title"
NAME="SQL2-CH-2-FIG-4"
>Figure 2.1: The PL/SQL block structure</A
></H4
><IMG
CLASS="graphic"
SRC="figs/sql2.0201.gif"
ALT="Figure 2.1"><P
CLASS="para"
>The ordering of the sections in a block corresponds to the way you would write your programs and the way they are executed: </P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Step 1</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Define the type of block (procedure, function, anonymous) and the way it is called (header). </P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Step 2</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Declare any variables used in that block (declaration section).</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Step 3</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Use those local variables and other PL/SQL objects to perform the required actions (execution section). </P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Step 4</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Handle any problems that arise during the execution of the block (exception section). </P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-2-SECT-7.2"
>2.7.2 Scope of a Block</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-2294"
></A
>In the declaration section of the block, you may define variables, modules, and other structures. These declarations are local to that block. When the execution of the block finishes, those structures no longer exist. For example, if you open a cursor in a block, that cursor is automatically closed at the end of the block. </P
><P
CLASS="para"
>The block is the scope of any objects declared in that block. The block also provides the scope for exceptions that are declared and raised. In fact, one of the most important reasons to create a block is to take advantage of the exception section that comes with that block. It gives you a finer granularity of control over how you can handle errors in your programs. </P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-2-SECT-7.3"
>2.7.3 Nested Blocks</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-2300"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-2303"
></A
> A block may also contain nested sub-blocks of code. The following example shows a procedure with an anonymous, nested block defined within it: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE calc_totals
IS
   year_total NUMBER;
BEGIN
   year_total := 0;

   /* Nested anonymous block */
   DECLARE
      month_total NUMBER;
   BEGIN
      month_total := year_total / 12;
   END;

END;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Notice that I can reference the year_total variable inside the nested block. Any element declared in an outer block is global to all blocks nested within it. Any element declared within an inner block cannot, however, be referenced in an outer block. </P
><P
CLASS="para"
>Although I refer to the PL/SQL block structure throughout this book, 	it will figure most prominently in <A
CLASS="xref"
HREF="part04.htm"
>Part 4, <CITE
CLASS="part"
>Modular Code </CITE
></A
>. </P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_06.htm"
TITLE="2.6 The PRAGMA Keyword"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.6 The PRAGMA Keyword"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming, 2nd Edition"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch03_01.htm"
TITLE="3. Effective Coding Style"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3. Effective Coding Style"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>2.6 The PRAGMA Keyword</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3. Effective Coding Style</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
