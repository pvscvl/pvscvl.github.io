<HTML
><HEAD
><TITLE
>[Chapter 21] 21.3 Syntax for External Procedures</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein &amp; Bill Pribyl"><META
NAME="DC.Date"
CONTENT="2000-04-29T19:10:28Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-335-9E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-335-9E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle PL/SQL"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming, 2nd Edition"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch21_01.htm"
TITLE="21. External Procedures"><LINK
REL="prev"
HREF="ch21_02.htm#SQL2-CH-21-SECT-2.1"
TITLE="21.2 Steps in Creating an External Procedure"><LINK
REL="next"
HREF="ch21_04.htm#ch21-26-fm2xml"
TITLE="21.4 Mapping Parameters"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd Edition"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch21_02.htm#SQL2-CH-21-SECT-2.1"
TITLE="21.2 Steps in Creating an External Procedure"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 21.2 Steps in Creating an External Procedure"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch21_01.htm"
TITLE="21. External Procedures"
>Chapter 21<BR>External Procedures</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch21_04.htm#ch21-26-fm2xml"
TITLE="21.4 Mapping Parameters"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 21.4 Mapping Parameters"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="SQL2-CH-21-SECT-3"
>21.3 Syntax for External Procedures</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch21-idx-7574-1"
></A
>Now that we've gone through the basic steps and seen examples of the kind of code you must write in order to take advantage of external procedures, let's explore each syntactic element in more detail. </P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-21-SECT-3.1"
>21.3.1 CREATE LIBRARY: Creating the External Procedure Library</A
></H3
><P
CLASS="para"
>Step 3 in the random number generator example we presented in the previous section uses the SQL statement <A
CLASS="indexterm"
NAME="ch21-idx-7595-1"
></A
>CREATE LIBRARY. The general syntax for this command is: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>CREATE [ OR REPLACE ] LIBRARY &lt;library name&gt;
AS
   '&lt;path to file&gt;';</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Where:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>library name</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>A legal PL/SQL identifier. This name will be used in subsequent bodies of external procedures that need to call the shared object (or DLL) file. </P
></DD
><DT
CLASS="term"
>path to file</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The fully qualified pathname to the shared object (or DLL) file. As shown above, it must be enclosed in single quotes. </P
></DD
></DL
><P
CLASS="para"
>Here are some things to keep in mind when issuing a CREATE LIBRARY statement: </P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>The statement must be executed by the DBA or by a user who has been granted CREATE LIBRARY or CREATE ANY LIBRARY privileges. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>As with most other database objects, libraries are owned by a specific Oracle user (schema). Other users can refer to the library using <EM
CLASS="emphasis"
>owner.library</EM
> syntax, or they can create synonyms for the library (or use a synonym) if desired. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Oracle doesn't check whether the named shared library file exists when you execute the CREATE LIBRARY statement. Nor will it check when you later create an external procedure declaration for a function in that library (see Step 4). If you have a syntax error in the path, you won't know it until the first time you try to execute the function. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Setting up a listener is typically a DBA task performed (in UNIX, anyway) when the DBA is logged on as the "oracle user." However, for security reasons, Oracle recommends setting up a different OS-level user with a limited profile to run the listener for external procedures.<A
CLASS="indexterm"
NAME="AUTOID-19722"
></A
> </P
></LI
></UL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-21-SECT-3.2"
>21.3.2 EXTERNAL: Creating the PL/SQL Body</A
></H3
><P
CLASS="para"
>In lieu of a BEGIN..END block, the body of your PL/SQL function or procedure must contain an <A
CLASS="indexterm"
NAME="ch21-idx-7599-1"
></A
> EXTERNAL clause. This section describes the content of this clause. Syntactically, it looks like this: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>EXTERNAL LIBRARY &lt;library name&gt;
   [ NAME &lt;external routine name&gt; ]
   [ LANGUAGE &lt;language name&gt; ]
   [ CALLING STANDARD  C | PASCAL ]
   [ PARAMETERS (&lt;external parameter list&gt;) ]
   [ WITH CONTEXT ];</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Where:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>library name</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Name defined previously in the CREATE LIBRARY statement.</P
></DD
><DT
CLASS="term"
>external routine name</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Name of the function as defined in the C language library. If the name is lowercase, you must put double quotes around it. You can omit this parameter; if you do, the name of the external routine must match your PL/SQL module's name (defaults to uppercase). </P
></DD
><DT
CLASS="term"
>language name</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Lets PL/SQL know the language in which the external routine is written. In early releases of Oracle8, this parameter can only be C, which is the default. </P
></DD
><DT
CLASS="term"
>CALLING STANDARD</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>On Windows NT, your application may use the Pascal calling standard, which means that arguments are "reversed" on the stack and that your called function will deal with them accordingly. CALLING STANDARD defaults to C if omitted. </P
></DD
><DT
CLASS="term"
>PARAMETERS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>This section gives the position and datatypes of parameters exchanged between PL/SQL and C. </P
></DD
><DT
CLASS="term"
><I
CLASS="firstterm"
>external parameter list</I
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>External parameters appear in a comma-delimited list. Each item in the list is one of three things: </P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>The keyword CONTEXT, which is a placeholder for the context pointer </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Information about a formal parameter's mapping between PL/SQL and C </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>The keyword RETURN and information about its mapping</P
></LI
></UL
><P
CLASS="para"
>The syntax and rules are discussed in "Mapping Parameters" below. </P
></DD
><DT
CLASS="term"
>WITH CONTEXT</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The presence of this clause indicates that you want PL/SQL to pass a "context pointer" to the called program. The called program must be expecting the pointer as a formal parameter of type <EM
CLASS="emphasis"
>OCIExtProcContext *</EM
> (defined in the C header file <EM
CLASS="emphasis"
>ociextp.h</EM
>). </P
><P
CLASS="para"
>This "context" that we are passing via a pointer is a data structure that contains a variety of Oracle-specific information. The called procedure doesn't actually refer directly to the data structure's content; instead, the structure simply facilitates other Oracle Call Interface (OCI) calls which perform various Oracle-specific tasks. These tasks include raising predefined or user-defined exceptions, allocating session-only memory (which gets released as soon as control returns to PL/SQL), and obtaining information about the Oracle user's environment.<A
CLASS="indexterm"
NAME="AUTOID-19771"
></A
> </P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-21-SECT-3.3"
>21.3.3 DROP: Dropping Libraries</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch21-idx-7603-1"
></A
><A
CLASS="indexterm"
NAME="ch21-idx-7603-2"
></A
> <A
CLASS="indexterm"
NAME="ch21-idx-7603-3"
></A
> The syntax for dropping a library is simply: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>DROP LIBRARY &lt;library name&gt;;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The Oracle user who executes this command must have the DROP LIBRARY or DROP ANY LIBRARY privilege. </P
><P
CLASS="para"
>Oracle does not check dependency information before dropping the library. This is useful if you need to change the name or location of the shared object file to which the library points. You can just drop it and rebuild it, and any dependent routines will continue to function. (More useful, perhaps, would be a requirement that you use a DROP LIBRARY FORCE command, but such an option does not exist). </P
><P
CLASS="para"
>Before you drop the library permanently, you'll probably want to look in the DBA_DEPENDENCIES view to see if any PL/SQL module relies on<A
CLASS="indexterm"
NAME="AUTOID-19787"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-19788"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-19789"
></A
> the library.<A
CLASS="indexterm"
NAME="AUTOID-19790"
></A
> </P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch21_02.htm#SQL2-CH-21-SECT-2.1"
TITLE="21.2 Steps in Creating an External Procedure"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 21.2 Steps in Creating an External Procedure"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming, 2nd Edition"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch21_04.htm#ch21-26-fm2xml"
TITLE="21.4 Mapping Parameters"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 21.4 Mapping Parameters"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>21.2 Steps in Creating an External Procedure</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>21.4 Mapping Parameters</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
