<HTML
><HEAD
><TITLE
>[Chapter 2] 2.2 Identifiers</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein &amp; Bill Pribyl"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:50:40Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-335-9E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-335-9E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle PL/SQL"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming, 2nd Edition"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch02_01.htm"
TITLE="2. PL/SQL Language Fundamentals"><LINK
REL="prev"
HREF="ch02_01.htm"
TITLE="2.1 The PL/SQL Character Set"><LINK
REL="next"
HREF="ch02_03.htm#SQL2-CH-2-SECT-3.1"
TITLE="2.3 Literals"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd Edition"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_01.htm"
TITLE="2.1 The PL/SQL Character Set"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.1 The PL/SQL Character Set"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch02_01.htm"
TITLE="2. PL/SQL Language Fundamentals"
>Chapter 2<BR>PL/SQL Language Fundamentals</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_03.htm#SQL2-CH-2-SECT-3.1"
TITLE="2.3 Literals"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.3 Literals"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="SQL2-CH-2-SECT-2"
>2.2 Identifiers</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch02-idx-115471-1"
></A
> <A
CLASS="indexterm"
NAME="ch02-idx-115471-2"
></A
> <A
CLASS="indexterm"
NAME="ch02-idx-115471-3"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-115471-4"
></A
> <A
CLASS="indexterm"
NAME="ch02-idx-115471-5"
></A
>An identifier is a name for a PL/SQL object, including any of the following: </P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Constant</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Variable</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Exception</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Procedure</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Function</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Package</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Record</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>PL/SQL table</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Cursor</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Reserved word</P
></LI
></UL
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-1863"
></A
> Properties of an identifier are summarized below: </P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Up to 30 characters in length</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Must start with a letter</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Can include <KBD
CLASS="command"
>$</KBD
> (dollar sign), <KBD
CLASS="command"
>_</KBD
> (underscore), and <KBD
CLASS="command"
>#</KBD
> (pound sign) </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Cannot contain spaces</P
></LI
></UL
><P
CLASS="para"
>Remember that PL/SQL is not case-sensitive, so if the only difference between two identifiers is the case of one or more letters, PL/SQL treats those two identifiers as the same. For example, the following identifiers are all considered by PL/SQL to be the same, because the characters in the name are the same; the only difference is their case: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>lots_of_$MONEY$
LOTS_of_$MONEY$
Lots_of_$Money$</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The following strings are valid identifier names:</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>lots_of_$MONEY$</PRE
></BLOCKQUOTE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FirstName</PRE
></BLOCKQUOTE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>company_id#</PRE
></BLOCKQUOTE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>address_line1</PRE
></BLOCKQUOTE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>primary_acct_responsibility</PRE
></BLOCKQUOTE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>address_line2</PRE
></BLOCKQUOTE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>First_Name</PRE
></BLOCKQUOTE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>S123456</PRE
></BLOCKQUOTE
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>The following identifiers are all illegal in PL/SQL:</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>1st_year</PRE
></BLOCKQUOTE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>-- Starts with numeral</PRE
></BLOCKQUOTE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>procedure-name</PRE
></BLOCKQUOTE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>-- Contains invalid character &quot;-&quot;</PRE
></BLOCKQUOTE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>minimum_%_due</PRE
></BLOCKQUOTE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>-- Contains invalid character &quot;%&quot;</PRE
></BLOCKQUOTE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>maximum_value_exploded_for_detail</PRE
></BLOCKQUOTE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>-- Name is too long</PRE
></BLOCKQUOTE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>company ID</PRE
></BLOCKQUOTE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>-- Cannot have embedded spaces in name</PRE
></BLOCKQUOTE
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>Identifiers are the handles for objects in your program. Be sure to name your objects carefully, so the names describe the objects and their uses. Avoid identifier names like X1 and temp; they are too ambiguous to mean anything to you or anyone else reading your code. </P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-2-SECT-2.1"
>2.2.1 Reserved Words</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-1941"
></A
>Of course, you don't get to name all the identifiers in your programs. Many elements of your program have been named by PL/SQL itself. These are the reserved words in the language. An identifier is a reserved word if it has a special meaning in PL/SQL and therefore should not&nbsp;-- and, in most cases, cannot&nbsp;-- be redefined by programmers for their own use. </P
><P
CLASS="para"
>One very important reserved word is END. It is used to terminate programs, IF statements, and loops. If you try to declare a variable named "end", as I do below, then you will get the subsequent compile error: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>DECLARE
   end VARCHAR2(10) := 'blip';
BEGIN
   DBMS_OUTPUT.PUT_LINE (end);
END;
/
PLS-00103: Encountered the symbol &quot;END&quot; when expecting one of the following:</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The appearance of the word "end" in the declaration section signals to PL/SQL the premature termination of that anonymous block. </P
><P
CLASS="para"
>PL/SQL tries to be as accommodating as possible when you do redefine reserved words in your program. It makes its best effort to interpret and compile your code. You would be much better off, however, if you never redefined a reserved word for your own use. Even if you do get away with it, the resulting code will be confusing. And a later version of the PL/SQL compiler might decide that your use of that keyword is, after all, unacceptable. </P
><P
CLASS="para"
>In any case, finding a valid name for your identifier should be the least of your problems. There are thousands and thousands of permutations of the legal characters. </P
><P
CLASS="para"
>You can find a full list of all PL/SQL reserved words in an appendix of <EM
CLASS="emphasis"
>Oracle Corporation's PL/SQL User's Guide and Reference</EM
>. </P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-2-SECT-2.2"
>2.2.2 Whitespace and Keywords</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-1953"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-1955"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-1958"
></A
>Identifiers must be separated by at least one space or by a delimiter, but you can format your text by adding additional spaces, line breaks (carriage returns), and tabs wherever you can put a space, without changing the meaning of your entry. </P
><P
CLASS="para"
>The two statements shown below are therefore equivalent:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>IF too_many_orders
THEN
   warn_user;
ELSIF no_orders_entered
THEN
   prompt_for_orders;
END IF;

IF too_many_orders THEN warn_user;
ELSIF no_orders_entered THEN prompt_for_orders;
END IF;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>You may not, however, place a space or carriage return or tab within a lexical unit, such as a compound delimiter like the "not equals" symbol (<KBD
CLASS="command"
>!=</KBD
>). The following statement raises a compile error: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>IF max_salary ! = min_salary THEN</PRE
></BLOCKQUOTE
><P
CLASS="para"
>because there is a space between the <KBD
CLASS="command"
>!</KBD
> and the <KBD
CLASS="command"
>=</KBD
>. </P
><P
CLASS="para"
>See <A
CLASS="xref"
HREF="ch03_01.htm"
>Chapter 3, <CITE
CLASS="chapter"
>Effective Coding Style</CITE
></A
>, for more information on how you can use whitespace to format your code for improved readability.<A
CLASS="indexterm"
NAME="AUTOID-1971"
></A
> </P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_01.htm"
TITLE="2.1 The PL/SQL Character Set"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.1 The PL/SQL Character Set"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming, 2nd Edition"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_03.htm#SQL2-CH-2-SECT-3.1"
TITLE="2.3 Literals"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.3 Literals"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>2.1 The PL/SQL Character Set</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>2.3 Literals</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
