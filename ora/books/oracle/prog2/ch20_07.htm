<HTML
><HEAD
><TITLE
>[Chapter 20] 20.7 Object Views Housekeeping</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein &amp; Bill Pribyl"><META
NAME="DC.Date"
CONTENT="2000-04-29T19:09:58Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-335-9E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-335-9E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle PL/SQL"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming, 2nd Edition"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch20_01.htm"
TITLE="20. Object Views"><LINK
REL="prev"
HREF="ch20_06.htm"
TITLE="20.6 Schema Evolution"><LINK
REL="next"
HREF="ch20_08.htm"
TITLE="20.8 Postscript: Using the BFILE Datatype"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd Edition"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch20_06.htm"
TITLE="20.6 Schema Evolution"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 20.6 Schema Evolution"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch20_01.htm"
TITLE="20. Object Views"
>Chapter 20<BR>Object Views</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch20_08.htm"
TITLE="20.8 Postscript: Using the BFILE Datatype"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 20.8 Postscript: Using the BFILE Datatype"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="SQL2-CH-20-SECT-7"
>20.7 Object Views Housekeeping</A
></H2
><P
CLASS="para"
>There are a few commands and facilities we haven't yet discussed that will help you to manage and control object views. </P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-20-SECT-7.1"
>20.7.1 Data Dictionary</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch20-idx-6399-1"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-6399-2"
></A
>The USER_VIEWS (or ALL_VIEWS or DBA_VIEWS) view in the data dictionary includes several columns specific to object views. <A
CLASS="xref"
HREF="ch20_07.htm#SQL2-CH-20-SECT-7.3"
>Table 20.2</A
> lists some examples of using this information. </P
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="SQL2-CH-20-TABLE-4"
>Table 20.2: Entries for Object ViewsData Dictionary </A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>To Answer the Question...</P
> </TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Use This View</P
> </TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>As In</P
> </TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>What object views have I created?</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>USER_VIEWS</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>SELECT view_name
  FROM user_views
 WHERE type_text IS NOT NULL;</PRE
></BLOCKQUOTE
> </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>What object views have I created of the Foo_t type?</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>USER_VIEWS</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>SELECT view_name
  FROM user_views
 WHERE UPPER(type_text)
       LIKE 'FOO_T%';</PRE
></BLOCKQUOTE
> </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>What is the virtual OID of the Foo_v view?</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>USER_VIEWS</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>SELECT oid_text
  FROM user_views
 WHERE UPPER(type_text)
       LIKE 'FOO_T%';</PRE
></BLOCKQUOTE
> </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>What is the query on which I defined the Foo view?</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>USER_VIEWS</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>SET LONG 1000 -- or greater
SELECT text
  FROM user_views
 WHERE view_name = 'FOO';</PRE
></BLOCKQUOTE
> </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>What columns are in view Foo?</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>USER_TAB_COLUMNS</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>SELECT column_name, data_type_
       mod, data_type
  FROM user_tab_columns
 WHERE table_name = 'FOO';</PRE
></BLOCKQUOTE
> </TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>Another way of getting a quick listing of the columns in a view is to "describe" it in SQL*Plus: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; desc images_v

Name                            Null?    Type
------------------------------- -------- ----
IMAGE_ID                                 NUMBER(38)
FILE_NAME                                VARCHAR2(512)
FILE_TYPE                                VARCHAR2(12)
BYTES                                    NUMBER(38)
ARTIST_REF                               REF OF ARTIST_T
KEYWORDS                                 KEYWORD_TAB_T<A
CLASS="indexterm"
NAME="AUTOID-19371"
></A
>
<A
CLASS="indexterm"
NAME="AUTOID-19372"
></A
></PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-20-SECT-7.2"
>20.7.2 Privileges</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-19376"
></A
><A
CLASS="indexterm"
NAME="AUTOID-19379"
></A
>As with conventional views, creating an object view requires the creator to have either the CREATE VIEW or the CREATE ANY VIEW system privilege. </P
><P
CLASS="para"
>If you are attempting to create an instance of an object type by using the default constructor, you must have the EXECUTE privilege on that type. </P
><P
CLASS="para"
>However, if a user has a DML privilege on a view that has an INSTEAD OF trigger for that DML operation, he doesn't need explicit EXECUTE privileges if the trigger invokes a constructor; the trigger runs with the "owner rights model" described in <A
CLASS="xref"
HREF="ch18_01.htm"
>Chapter 18</A
>. </P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-20-SECT-7.3"
>20.7.3 Forcing Compilation</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch20-idx-6402-1"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-6402-2"
></A
> As with conventional views, if you make changes to an underlying database object on which an object view is based, Oracle will mark the view as "invalid." When this happens, Oracle will also mark as invalid any other database objects (such as other views, INSTEAD OF triggers, or PL/SQL packages) that depend on the view. Then, the next time that you use the view, Oracle is supposed to attempt to "recompile" it first. </P
><P
CLASS="para"
>However, when you are modifying schema, there are some cases where Oracle does not seem to automatically recompile the view. One case in particular occurs when you CREATE OR REPLACE, or otherwise recompile, the object type on which the view is defined. When this happens, your view becomes invalid, leading to some disconcerting error messages; at this point, you must either recreate or recompile the object view. The command to compile the view is: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>ALTER VIEW &lt;view name&gt; COMPILE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>If compilation fails, Oracle should return an error message, and the view will remain "invalid." You may need to redefine the view using, for example, CREATE OR REPLACE VIEW. </P
><P
CLASS="para"
>The ALTER VIEW ... COMPILE command has the side effect of marking as invalid all database objects that are dependent on the view, such as other views or types. Oracle does appear to automatically recompile these dependent database objects. </P
><P
CLASS="para"
>Similarly, <A
CLASS="indexterm"
NAME="AUTOID-19398"
></A
> INSTEAD OF triggers can be recompiled using the following: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>ALTER TRIGGER &lt;trigger name&gt; COMPILE [ DEBUG ];<A
CLASS="indexterm"
NAME="AUTOID-19402"
></A
>
<A
CLASS="indexterm"
NAME="AUTOID-19403"
></A
></PRE
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch20_06.htm"
TITLE="20.6 Schema Evolution"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 20.6 Schema Evolution"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming, 2nd Edition"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch20_08.htm"
TITLE="20.8 Postscript: Using the BFILE Datatype"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 20.8 Postscript: Using the BFILE Datatype"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>20.6 Schema Evolution</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>20.8 Postscript: Using the BFILE Datatype</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
