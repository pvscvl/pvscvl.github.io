<HTML
><HEAD
><TITLE
>[Chapter 26] 26.4 Structured Interface Filtering</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein &amp; Bill Pribyl"><META
NAME="DC.Date"
CONTENT="2000-04-29T19:13:58Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-335-9E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-335-9E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle PL/SQL"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming, 2nd Edition"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch26_01.htm"
TITLE="26. Tracing PL/SQL Execution"><LINK
REL="prev"
HREF="ch26_03.htm"
TITLE="26.3 Free Format Filtering"><LINK
REL="next"
HREF="ch26_05.htm"
TITLE="26.5 Quick-and-Dirty Tracing"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd Edition"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch26_03.htm"
TITLE="26.3 Free Format Filtering"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 26.3 Free Format Filtering"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch26_01.htm"
TITLE="26. Tracing PL/SQL Execution"
>Chapter 26<BR>Tracing PL/SQL Execution</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch26_05.htm"
TITLE="26.5 Quick-and-Dirty Tracing"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 26.5 Quick-and-Dirty Tracing"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="SQL2-CH-26-SECT-4"
>26.4 Structured Interface Filtering</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch26-idx-998441-1"
></A
>You get into a lot more code with this approach. Let's look at implementing an interface to support numeric levels. You will be able to ask to see trace information for one level, or a range of levels, or even a list of distinct levels. Because of the complexity and the need to maintain consistent formats of information, you would no longer perform your own direct inserts into the tracetab_activate table. Instead, you call a procedure which converts your request into the format necessary to store in the table. Here are some of those procedures: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PACKAGE trace
IS
   /* Just show the programs for this filtering. */
   PROCEDURE filter_by
      (username_in IN VARCHAR2, level_in IN INTEGER);

   PROCEDURE filter_by
      (username_in IN VARCHAR2, min_in IN INTEGER, max_in IN INTEGER);

   PROCEDURE filter_by
      (username_in IN VARCHAR2, list_in IN VARCHAR2);

END trace;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Notice that all three of these filtering programs have the same name. These are <EM
CLASS="emphasis"
>overloaded</EM
> procedures; overloading is discussed in the section "Module Overloading" in  <A
CLASS="xref"
HREF="ch15_01.htm"
>Chapter 15, <CITE
CLASS="chapter"
>Procedures and Functions</CITE
></A
>. </P
><P
CLASS="para"
>Here are some examples of these programs in use:</P
><P
CLASS="para"
>1. Request activation of trace on the SFEUERST account for level 16:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; exec trace.filter_by ('sfeuerst', 16);</PRE
></BLOCKQUOTE
><P
CLASS="para"
>2. Request activation of trace on the LELLISON account for levels 16-25: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; exec trace.filter_by ('lellsion', 16, 25);</PRE
></BLOCKQUOTE
><P
CLASS="para"
>3. Request activation of trace on the WGATES account for levels 2, 6, 10, and 55: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; exec trace.filter_by ('wgates', '2,6,10,55');</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Gee, that looks easy enough to use! Of course, the devil is in the details. In all three cases, the procedures must convert the levels provided into a string with a consistent format so that the trace.startup program (and others) can query the tracetab_activate table and properly interpret the request. </P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-26-SECT-4.1"
>26.4.1 From Idea to Implementation</A
></H3
><P
CLASS="para"
>Sure, this section doesn't provide all of the code behind the interface. However, don't underestimate the importance of getting that interface right. Too many of us spend too little time thinking about how our programs will be used and how the interface to our functionality would be best constructed. Instead, we are eager to dive into the implementation of the programs. Without question, package bodies will be needed for most every package specification you ever write, but if your specification is poorly designed, it will be hard to understand and use&nbsp;-- which means that most likely your code will not be used.<A
CLASS="indexterm"
NAME="AUTOID-23543"
></A
> </P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch26_03.htm"
TITLE="26.3 Free Format Filtering"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 26.3 Free Format Filtering"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming, 2nd Edition"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch26_05.htm"
TITLE="26.5 Quick-and-Dirty Tracing"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 26.5 Quick-and-Dirty Tracing"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>26.3 Free Format Filtering</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>26.5 Quick-and-Dirty Tracing</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
