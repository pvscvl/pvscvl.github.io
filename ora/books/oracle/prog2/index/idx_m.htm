<HTML>

<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
<HEAD>
<TITLE>Index</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<P><A HREF="../index.htm"><IMG SRC="../gifs/smbanns.gif" ALT="Book Home" BORDER=0 usemap="#srchmap"><MAP NAME="srchmap"><AREA SHAPE="RECT" COORDS="0,0,466,65" HREF="../index.htm" ALT="Book Home"><AREA SHAPE="RECT" COORDS="467,0,514,18" HREF="../jobjects/fsearch.htm" ALT="Search this book"></MAP></A><P><P>

<FONT SIZE="-1">
<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| <A HREF="idx_c.htm">C</A>
| <A HREF="idx_d.htm">D</A>
| <A HREF="idx_e.htm">E</A>
| <A HREF="idx_f.htm">F</A>
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| <A HREF="idx_i.htm">I</A>
| <A HREF="idx_j.htm">J</A>
| <A HREF="idx_k.htm">K</A>
| <A HREF="idx_l.htm">L</A>
| M
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| <A HREF="idx_p.htm">P</A>
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_y.htm">Y</A>
| <A HREF="idx_z.htm">Z</A></FONT>

<H1>Index: M</H1>

<DL>
<DT><A NAME="magic-values">magic values</A>
: <A HREF="../ch16_03.htm#SQL2-CH-16-SECT-3.1.2">16.3.1.2. A package of magic values</A>
<DD><DL>
  <DT>hard-coding
: <A HREF="../ch01_07.htm#SQL2-CH-1-SECT-7.5">1.7.5. Structured Code and Other Best Practices</A>
</DL>
<DT><A NAME="mail">mail</A>
: <A HREF="../appc_08.htm">C.8. DBMS_MAIL</A>
<DT><A NAME="mail">mail, sending with external procedures</A>
: <A HREF="../ch21_07.htm#SQL2-CH-21-SECT-7.2">21.7.2. Example: Sending Email</A>
<DT><A NAME="make.5fref-function">MAKE_REF function</A>
: <A HREF="../ch20_03.htm#SQL2-CH-20-SECT-3.3">20.3.3. MAKE_REF: Returning a Virtual REF</A>
<DD><DL>
  <DT>DECODE function in
: <A HREF="../ch20_04.htm#SQL2-CH-20-SECT-4.2.3">20.4.2.3. Working around the ORA-22972 problem</A>
</DL>
<DT><A NAME="managing-work-queue">managing work queue (example)</A>
: <A HREF="../ch06_13.htm#SQL2-CH-6-SECT-13.2">6.13.2. Managing a Work Queue with SELECT FOR UPDATE</A>
<DT><A NAME="manual-records">manual records</A>
: <A HREF="../ch09_06.htm#SQL2-CH-9-SECT-6.1.1">9.6.1.1. Manual records</A>
<DT><A NAME="map-methods">MAP methods</A>
: <A HREF="../ch18_03.htm#SQL2-CH-18-SECT-3.6.1">18.3.6.1. The MAP and ORDER methods</A>
<DT><A NAME="maxlen-property">MAXLEN property</A>
<DD><DL>
  <DT><A HREF="../ch21_04.htm#ch21-26-fm2xml">21.4.1. Datatype Conversion</A>
  <DT><A HREF="../ch21_04.htm#ch21-26-fm2xml">21.4.3.3.  MAXLEN property</A>
</DL>
<DT><A NAME="member-methods">member methods</A>
: <A HREF="../ch18_03.htm#SQL2-CH-18-SECT-3.6.1">18.3.1. About Object Types</A>
<DT><A NAME="memory">memory</A>
<DD><DL>
  <DT>analyzing size of code
: <A HREF="../ch23_06.htm#SQL2-CH-23-SECT-6.3">23.6.3. Analyzing the Size of PL/SQL Code</A>
  <DT>and conditional control statements
: <A HREF="../ch05_01.htm">5.1.4. Nested IF Statements</A>
  <DT>determining free disk space (example)
: <A HREF="../ch21_01.htm">21.1.1. Example: Determining Free Disk Space on Windows NT</A>
  <DT>memory-based architecture of code
: <A HREF="../ch23_01.htm">23.1.3. Memory-Based Architecture of PL/SQL Code </A>
  <DT>reducing package variables usage
: <A HREF="../ch25_02.htm#SQL2-CH-25-SECT-2.3">25.2.5. Reducing Memory Usage of Package Variables</A>
  <DT>SGA (System Global Area)
  <DD><DL>
    <DT>pinning critical code in
: <A HREF="../ch25_02.htm#SQL2-CH-25-SECT-2.3">25.2.2. Pin Critical Code into the SGA</A>
    <DT>tuning shared pool size
: <A HREF="../ch25_02.htm#SQL2-CH-25-SECT-2.3">25.2.1. Tune the Size of the Shared Pool of the SGA</A>
  </DL>
  <DT>used by open cursors
: <A HREF="../ch06_08.htm">6.8. Closing Cursors</A>
  <DT>VSIZE function
: <A HREF="../ch13_03.htm#SQL2-CH-13-SECT-3.0.3">13.3.10. The VSIZE function</A>
</DL>
<DT><A NAME="messages-about-debugging">messages about debugging</A>
: <A HREF="../ch24_02.htm#SQL2-CH-24-SECT-2.6">24.2.9. Build Debugging Messages into Your Packages</A>
<DT><A NAME="methods">methods</A>
: <A HREF="../ch18_01.htm">18.1.1. Terminology</A>
<DD><DL>
  <DT>dot notation for
: <A HREF="../ch18_03.htm#SQL2-CH-18-SECT-3.6.1">18.3.4.2. Dots in method invocations</A>
  <DT>for collections, built-in
: <A HREF="../ch19_06.htm#SQL2-CH-19-SECT-6.0.5">19.6. Collection Built-Ins</A>
  <DT>modifying persistent objects
: <A HREF="../ch18_05.htm#SQL2-CH-18-SECT-5.3">18.5.2. Approach 2: Define Methods and Permit Limited Use of Conventional SQL</A>
  <DT>types of
: <A HREF="../ch18_03.htm#SQL2-CH-18-SECT-3.6.1">18.3.1. About Object Types</A>
</DL>
<DT><A NAME="minute">minute</A>
: (see <A HREF="idx_d.htm">date</A>; <A HREF="idx_t.htm">time</A>)
<DT><A NAME="mod-function">MOD function</A>
: <A HREF="../ch13_01.htm">13.1.13. The MOD function</A>
<DT><A NAME="modes">modes, cursor parameters</A>
: <A HREF="../ch06_10.htm#SQL2-CH-6-SECT-10.2">6.10.4. Cursor Parameter Modes </A>
<DT><A NAME="modifying-table-rows">modifying table rows</A>
: <A HREF="../ch10_05.htm">10.5. Referencing and Modifying PL/SQL Table Rows</A>
<DT><A NAME="modularization">modularization</A>
: <A HREF="../ch15_01.htm">15.1. Modular Code</A>
<DT><A NAME="modules">modules</A>
<DD><DL>
  <DT>(see also <A HREF="idx_b.htm">blocks</A>; <A HREF="idx_f.htm">functions</A>; <A HREF="idx_p.htm">packages</A>; <A HREF="idx_p.htm">procedures</A>)
  <DT><A HREF="../ch01_04.htm#SQL2-CH-1-SECT-4.7.6">1.4.3.10. Modular construction</A>
  <DT><A HREF="../ch02_07.htm">2.7. Block Structure</A>
  <DT><A HREF="../ch15_01.htm">15. Procedures and Functions</A>
  <DT><A HREF="../ch22_01.htm">22.1.1. Make Sure the Module Name Explains the Module</A>
  <DT>anchoring to variables in
: <A HREF="../ch04_05.htm">4.5.4. Anchoring to Variables in Other PL/SQL Blocks</A>
  <DT>assertion
: <A HREF="../ch22_02.htm#SQL2-CH-22-SECT-2.1.1">22.2.4. Use Assertion Modules to Validate Parameters and Assumptions</A>
  <DT>collections as parameters of
: <A HREF="../ch19_02.htm#SQL2-CH-19-SECT-2.1.1">19.2.2.3. Collections as module parameters</A>
  <DT>constructing
: <A HREF="../ch15_02.htm#SQL2-CH-15-SECT-2.1">15.2.1. Sequence of Section Construction</A>
  <DT>designing with NULL statements
: <A HREF="../ch05_02.htm#SQL2-CH-5-SECT-2.1">5.2.2.3. Supporting top-down design of modules</A>
  <DT>exception handlers in
  <DD><DL>
    <DT>(see also <A HREF="idx_e.htm">exceptions</A>)
    <DT><A HREF="../ch22_02.htm#SQL2-CH-22-SECT-2.1.1">22.2.3. Avoid Exception Handlers for Normal Program Exits</A>
  </DL>
  <DT>formatting
: <A HREF="../ch03_04.htm">3.4. Formatting PL/SQL Blocks</A>
  <DT>forward declarations of
: <A HREF="../ch15_09.htm">15.9. Forward Declarations</A>
  <DT>independent
: <A HREF="../ch22_05.htm#SQL2-CH-22-SECT-5.4">22.5. Create Independent Modules</A>
  <DT>local
  <DD><DL>
    <DT><A HREF="../ch01_07.htm#SQL2-CH-1-SECT-7.5">1.7.1. Write as Little Code as Possible</A>
    <DT><A HREF="../ch15_07.htm">15.7. Local Modules</A>
    <DT><A HREF="../ch22_03.htm">22.3. Take Full Advantage of Local Modularization</A>
  </DL>
  <DT>naming
  <DD><DL>
    <DT><A HREF="../ch15_03.htm">15.3.4.3. Named modules offer scoping effect of nested block</A>
    <DT><A HREF="../ch15_03.htm">15.3.5.3. Qualifying identifier names with module names</A>
    <DT><A HREF="../ch22_01.htm">22.1.1. Make Sure the Module Name Explains the Module</A>
  </DL>
  <DT>nested
  <DD><DL>
    <DT><A HREF="../ch01_06.htm#SQL2-CH-1-SECT-6.0.4">1.6.5. Scoping with nested blocks</A>
    <DT><A HREF="../ch02_07.htm">2.7.3. Nested Blocks</A>
    <DT>raising exceptions in
: <A HREF="../ch08_04.htm#SQL2-CH-8-SECT-4.1.3">8.4.1.2. Raising exceptions in nested blocks</A>
  </DL>
  <DT>overloaded
  <DD><DL>
    <DT><A HREF="../ch01_06.htm#SQL2-CH-1-SECT-6.0.4">1.6.6. Module overloading</A>
    <DT><A HREF="../ch15_08.htm#SQL2-CH-15-SECT-8.4">15.8. Module Overloading</A>
  </DL>
  <DT>overloading
: <A HREF="../ch18_01.htm">18.1.4.4. Polymorphism </A>
  <DT>parameters of
: <A HREF="../ch15_06.htm#SQL2-CH-15-SECT-6.2.3">15.6. Parameters</A>
  <DD><DL>
    <DT>without
: <A HREF="../ch22_04.htm">22.4. Be Wary of Modules Without Any Parameters </A>
  </DL>
  <DT>specifying in packages
: <A HREF="../ch16_03.htm#SQL2-CH-16-SECT-3.1.2">16.3. The Package Specification</A>
  <DT>status of
: <A HREF="../ch23_03.htm">23.3. Module Validation and Dependency Management</A>
  <DT>stored
: <A HREF="../ch23_01.htm">23. Managing Code in the Database</A>
  <DT>and target labels
: <A HREF="../ch05_02.htm#SQL2-CH-5-SECT-2.1">5.2.1.3. Target labels and PL/SQL blocks</A>
  <DT>utility
: <A HREF="../appc_16.htm#appc-133-fm2xml">C.16. DBMS_UTILITY</A>
  <DT>validating
: <A HREF="../ch23_03.htm">23.3. Module Validation and Dependency Management</A>
</DL>
<DT><A NAME="monitor-tool">MONITOR tool</A>
: <A HREF="../ch25_01.htm">25.1. Analyzing Program Performance</A>
<DT><A NAME="months">months</A>
: (see <A HREF="idx_d.htm">date</A>)
<DT><A NAME="months.5fbetween-function">MONTHS_BETWEEN function</A>
: <A HREF="../ch12_01.htm">12.1.3. The MONTHS_BETWEEN function</A>
<DT><A NAME="multiline-comments">multiline comments</A>
: (see <A HREF="idx_b.htm">block comments</A>)
<DT><A NAME="multiline-statements">multiline statements, formatting</A>
: <A HREF="../ch03_01.htm">3.1.6. Formatting Multiline Statements </A>
<DT><A NAME="multiset-pseudo.2dfunction">MULTISET pseudo-function</A>
: <A HREF="../ch19_05.htm#SQL2-CH-19-SECT-5.2">19.5.3. The MULTISET Pseudo-function</A>
<DT><A NAME="mutual-recursion">mutual recursion</A>
: (see <A HREF="idx_f.htm">forward declarations</A>)
</DL>

<P>
<HR WIDTH="515" ALIGN="LEFT">

<FONT SIZE="-1">
<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| <A HREF="idx_c.htm">C</A>
| <A HREF="idx_d.htm">D</A>
| <A HREF="idx_e.htm">E</A>
| <A HREF="idx_f.htm">F</A>
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| <A HREF="idx_i.htm">I</A>
| <A HREF="idx_j.htm">J</A>
| <A HREF="idx_k.htm">K</A>
| <A HREF="idx_l.htm">L</A>
| M
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| <A HREF="idx_p.htm">P</A>
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_y.htm">Y</A>
| <A HREF="idx_z.htm">Z</A></FONT>

<HR WIDTH="515" ALIGN="LEFT"><IMG SRC="../../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../../copyrght.htm#copy">Copyright (c) 2000</A> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY>

<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML>
