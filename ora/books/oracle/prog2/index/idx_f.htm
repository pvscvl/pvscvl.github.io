<HTML>

<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
<HEAD>
<TITLE>Index</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<P><A HREF="../index.htm"><IMG SRC="../gifs/smbanns.gif" ALT="Book Home" BORDER=0 usemap="#srchmap"><MAP NAME="srchmap"><AREA SHAPE="RECT" COORDS="0,0,466,65" HREF="../index.htm" ALT="Book Home"><AREA SHAPE="RECT" COORDS="467,0,514,18" HREF="../jobjects/fsearch.htm" ALT="Search this book"></MAP></A><P><P>

<FONT SIZE="-1">
<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| <A HREF="idx_c.htm">C</A>
| <A HREF="idx_d.htm">D</A>
| <A HREF="idx_e.htm">E</A>
| F
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| <A HREF="idx_i.htm">I</A>
| <A HREF="idx_j.htm">J</A>
| <A HREF="idx_k.htm">K</A>
| <A HREF="idx_l.htm">L</A>
| <A HREF="idx_m.htm">M</A>
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| <A HREF="idx_p.htm">P</A>
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_y.htm">Y</A>
| <A HREF="idx_z.htm">Z</A></FONT>

<H1>Index: F</H1>

<DL>
<DT><A NAME="false">FALSE</A>
: (see <A HREF="idx_b.htm">Boolean literals</A>)
<DT><A NAME="fclose-procedure">FCLOSE procedure</A>
: <A HREF="../appc_17.htm#appc-144-fm2xml">C.17.1.1. The  FCLOSE procedure</A>
<DT><A NAME="fclose.5fall-procedure">FCLOSE_ALL procedure</A>
: <A HREF="../appc_17.htm#appc-144-fm2xml">C.17.1.2. The  FCLOSE_ALL procedure</A>
<DT><A NAME="fetch-clause">FETCH clause</A>,
assigning objects
: <A HREF="../ch18_04.htm#SQL2-CH-18-SECT-4.1.3">18.4.1.3. Assignment via FETCH (with SELECT)</A>

<DT><A NAME="fetch-into-statement">FETCH INTO statement</A>
: <A HREF="../ch09_05.htm">9.5.3. FETCH INTO from an Explicit Cursor</A>
<DT><A NAME="fetch-statement">FETCH statement</A>
<DD><DL>
  <DT>(see also <A HREF="idx_c.htm">cursors</A>)
  <DT><A HREF="../ch04_02.htm#SQL2-CH-4-SECT-2.7.7">4.2.3.2. The VARCHAR2 and VARCHAR datatypes</A>
  <DT><A HREF="../ch06_02.htm#SQL2-CH-6-SECT-2.2">6.2.2. Cursor Operations</A>
  <DT><A HREF="../ch06_06.htm">6.6. Fetching from Cursors</A>
  <DT>with cursor variables
: <A HREF="../ch06_12.htm#SQL2-CH-6-SECT-12.5">6.12.5. Fetching from Cursor Variables</A>
  <DT>initializing collections
: <A HREF="../ch19_04.htm#SQL2-CH-19-SECT-4.1.3">19.4.1.3. Initializing implicitly via fetch</A>
</DL>
<DT><A NAME="fetch.5frow-function">FETCH_ROW function</A>
: <A HREF="../appc_14.htm#SQL2-AP-C-SECT-14.0.2">C.14.8. The FETCH_ROWS function</A>
<DT><A NAME="fetching">fetching</A>
<DD><DL>
  <DT>from cursor variables
: <A HREF="../ch06_12.htm#SQL2-CH-6-SECT-12.5">6.12.5. Fetching from Cursor Variables</A>
  <DT>from cursors
: <A HREF="../ch06_06.htm">6.6. Fetching from Cursors</A>
  <DD><DL>
    <DT>checking status of FETCH
: <A HREF="../ch06_09.htm#SQL2-CH-6-SECT-9.1">6.9.1. The %FOUND Attribute</A>
  </DL>
  <DT>to cursors, multiple times
: <A HREF="../ch06_13.htm#SQL2-CH-6-SECT-13.2">6.13.1.2. Using multiple fetches more efficiently </A>
</DL>
<DT><A NAME="fflush-procedure">FFLUSH procedure</A>
: <A HREF="../appc_17.htm#appc-144-fm2xml">C.17.1.3. The  FFLUSH procedure</A>
<DT><A NAME="fields">fields, record</A>
: (see <A HREF="idx_r.htm">records</A>)
<DT><A NAME="fileclose-procedure">FILECLOSE procedure</A>
: <A HREF="../appc_06.htm#appc-35-fm2xml">C.6.5. The  FILECLOSE procedure</A>
<DT><A NAME="filecloseall-procedure">FILECLOSEALL procedure</A>
: <A HREF="../appc_06.htm#appc-35-fm2xml">C.6.6. The  FILECLOSEALL procedure</A>
<DT><A NAME="fileexists-function">FILEEXISTS function</A>
: <A HREF="../appc_06.htm#appc-35-fm2xml">C.6.7. The  FILEEXISTS function</A>
<DT><A NAME="filegetname-procedure">FILEGETNAME procedure</A>
: <A HREF="../appc_06.htm#appc-35-fm2xml">C.6.8. The  FILEGETNAME procedure</A>
<DT><A NAME="fileisopen-function">FILEISOPEN function</A>
: <A HREF="../appc_06.htm#appc-35-fm2xml">C.6.9. The  FILEISOPEN function </A>
<DT><A NAME="filenames">filenames</A>,

encrypted file extensions
: <A HREF="../ch23_07.htm#SQL2-CH-23-SECT-7.3">23.7.2. Working with Encrypted Code</A>

<DT><A NAME="fileopen-procedure">FILEOPEN procedure</A>
: <A HREF="../appc_06.htm#appc-35-fm2xml">C.6.10. The  FILEOPEN procedure</A>
<DT><A NAME="files">files</A>
<DD><DL>
  <DT>encrypted code, size of
: <A HREF="../ch23_07.htm#SQL2-CH-23-SECT-7.3">23.7.3. Impact of Encrypting Code</A>
  <DT>operating system
: <A HREF="../appc_17.htm#appc-144-fm2xml">C.17. UTL_FILE</A>
  <DT>for package specifications
: <A HREF="../ch01_07.htm#SQL2-CH-1-SECT-7.5">1.7.3. Center All Development Around Packages</A>
</DL>
<DT><A NAME="filtering-trace-information">filtering trace information</A>
: <A HREF="../ch26_02.htm#SQL2-CH-26-SECT-2.1">26.2.3. Filtering Trace Information</A>
<DT><A NAME="first-function">FIRST function</A>
<DD><DL>
  <DT><A HREF="../ch10_08.htm#SQL2-CH-10-SECT-8.2">10.8.2.4. The FIRST function</A>
  <DT><A HREF="../ch19_06.htm#SQL2-CH-19-SECT-6.0.5">19.6.5. FIRST, LAST</A>
</DL>
<DT><A NAME="fixed.2dpoint-numbers">fixed-point numbers</A>
: <A HREF="../ch04_02.htm#SQL2-CH-4-SECT-2.7.7">4.2.2.  Numeric Subtypes</A>
<DT><A NAME="float-subtype">FLOAT subtype</A>
: <A HREF="../ch04_02.htm#SQL2-CH-4-SECT-2.7.7">4.2.2.  Numeric Subtypes</A>
<DT><A NAME="floating.2dpoint-numbers">floating-point numbers</A>
: <A HREF="../ch04_02.htm#SQL2-CH-4-SECT-2.7.7">4.2.2.  Numeric Subtypes</A>
<DT><A NAME="floor-function">FLOOR function</A>
: <A HREF="../ch13_01.htm">13.1.10. The FLOOR function</A>
<DT><A NAME="fm">FM (fill mode) modifier</A>
: <A HREF="../ch14_03.htm#SQL2-CH-14-SECT-3.1">14.3.1. FM: Suppressing Blanks and Zeros</A>
<DT><A NAME="fopen-function">FOPEN function</A>
: <A HREF="../appc_17.htm#appc-144-fm2xml">C.17.1.4. The  FOPEN function</A>
<DT><A NAME="for-loops">FOR loops</A>
<DD><DL>
  <DT><A HREF="../ch01_07.htm#SQL2-CH-1-SECT-7.5">1.7.1. Write as Little Code as Possible</A>
  <DT><A HREF="../ch01_07.htm#SQL2-CH-1-SECT-7.5">1.7.5. Structured Code and Other Best Practices</A>
  <DT>cursor
  <DD><DL>
    <DT><A HREF="../ch01_06.htm#SQL2-CH-1-SECT-6.0.4">1.6.4. The cursor FOR loop</A>
    <DT><A HREF="../ch07_04.htm">7.4. The Cursor FOR Loop</A>
  </DL>
  <DT>formatting
: <A HREF="../ch03_03.htm#SQL2-CH-3-SECT-3.1">3.3.2. Formatting Loops</A>
  <DT>numeric
: <A HREF="../ch07_03.htm">7.3. The Numeric FOR Loop</A>
  <DT>premature termination of
: <A HREF="../ch07_07.htm#SQL2-CH-7-SECT-7.2.2">7.7.2.1. Premature FOR loop termination</A>
  <DT>scope of
: <A HREF="../ch07_06.htm#SQL2-CH-7-SECT-6.1.2">7.6.2.1. Scope in FOR loops</A>
</DL>
<DT><A NAME="force-parameter">FORCE parameter</A>
: <A HREF="../ch18_03.htm#SQL2-CH-18-SECT-3.6.1">18.3.2. CREATE TYPE and DROP TYPE: Creating and Dropping Types</A>
<DT><A NAME="forced-compilation">forced compilation</A>
: <A HREF="../ch20_07.htm#SQL2-CH-20-SECT-7.3">20.7.3. Forcing Compilation</A>
<DT><A NAME="foreign-key">foreign key</A>
<DD><DL>
  <DT>lookups, optimizing in tables
: <A HREF="../ch10_09.htm#SQL2-CH-10-SECT-9.5.6">10.9.5. Optimizing Foreign Key Lookups with PL/SQL Tables</A>
  <DT>object reference versus
: <A HREF="../ch18_02.htm#SQL2-CH-18-SECT-2.3">18.2.3. Adding Complex Data Structures</A>
  <DT>validating entry of (example)
: <A HREF="../ch06_13.htm#SQL2-CH-6-SECT-13.2">6.13.1. Validating Foreign Key Entry with Cursors</A>
</DL>
<DT><A NAME="formal-parameters">formal parameters</A>
<DD><DL>
<DT><A HREF="../ch15_06.htm#SQL2-CH-15-SECT-6.2.3">15.6.3. Actual and Formal Parameters</A>

  <DT>naming
: <A HREF="../ch22_01.htm">22.1.2. Develop Consistent Naming Conventions for Your Formal Parameters </A>
</DL>
<DT><A NAME="format">format</A>
<DD><DL>
  <DT>FM and FX modifiers
: <A HREF="../ch14_03.htm#SQL2-CH-14-SECT-3.1">14.3.1. FM: Suppressing Blanks and Zeros</A>
  <DT>models
: <A HREF="../ch14_01.htm">14.1. Conversion Formats</A>
  <DT>RR model
: <A HREF="../ch14_03.htm#SQL2-CH-14-SECT-3.1">14.3.3. RR: Changing Millenia</A>
  <DT>verifying string
: <A HREF="../ch11_02.htm#SQL2-CH-11-SECT-2.4">11.2.5. Verifying String Formats with TRANSLATE</A>
</DL>
<DT><A NAME="format.5fcall.5fstack-function">FORMAT_CALL_STACK function</A>
: <A HREF="../appc_16.htm#appc-133-fm2xml">C.16.4. The  FORMAT_CALL_STACK function</A>
<DT><A NAME="format.5ferror.5fstack-function">FORMAT_ERROR_STACK function</A>
: <A HREF="../appc_16.htm#appc-133-fm2xml">C.16.5. The  FORMAT_ERROR_STACK function</A>
<DT><A NAME="formatting-code">formatting code</A>
: <A HREF="../ch03_01.htm">3.1. Fundamentals of Effective Layout</A>
<DT><A NAME="forward-declarations">forward declarations</A>
: <A HREF="../ch15_09.htm">15.9. Forward Declarations</A>
<DT><A NAME="forward-type-definitions">forward type definitions</A>
: <A HREF="../ch18_03.htm#SQL2-CH-18-SECT-3.6.1">18.3.5.1. Forward type definitions</A>
<DT><A NAME=".25found-cursor-attribute">%FOUND cursor attribute</A>
: <A HREF="../ch06_09.htm#SQL2-CH-6-SECT-9.1">6.9.1. The %FOUND Attribute</A>
<DT><A NAME="free-format-trace-filtering">free format trace filtering</A>
: <A HREF="../ch26_03.htm">26.3. Free Format Filtering</A>
<DT><A NAME="functional-abstraction">functional abstraction</A>
: <A HREF="../ch18_01.htm">18.1.5.3. Abstraction </A>
<DT><A NAME="functions">functions</A>
<DD><DL>
  <DT>(see also <A HREF="idx_m.htm">modules</A>)
  <DT><A HREF="../ch01_04.htm#SQL2-CH-1-SECT-4.7.6">1.4.3.10. Modular construction</A>
  <DT><A HREF="../ch15_01.htm">15. Procedures and Functions</A>
  <DT><A HREF="../ch15_05.htm#SQL2-CH-15-SECT-5.3">15.5. Functions</A>
  <DT><A HREF="../ch22_01.htm">22.1.1. Make Sure the Module Name Explains the Module</A>
  <DT><A HREF="../ch22_02.htm#SQL2-CH-22-SECT-2.1.1">22.2. Build the Most Functional Functions</A>
  <DT>built-in
  <DD><DL>
    <DT><A HREF="../ch01_04.htm#SQL2-CH-1-SECT-4.7.6">1.4.3.5. Built-in functions </A>
    <DT><A HREF="../ch01_06.htm#SQL2-CH-1-SECT-6.0.4">1.6.2. Built-in functions</A>
  </DL>
  <DT>for characters, strings
: <A HREF="../ch11_01.htm">11. Character Functions</A>
  <DT>for collections
  <DD><DL>
    <DT>built-in
: <A HREF="../ch19_06.htm#SQL2-CH-19-SECT-6.0.5">19.6. Collection Built-Ins</A>
    <DT>pseudo-functions
: <A HREF="../ch19_05.htm#SQL2-CH-19-SECT-5.2">19.5. Collection Pseudo-Functions</A>
  </DL>
  <DT>collections as return values
: <A HREF="../ch19_02.htm#SQL2-CH-19-SECT-2.1.1">19.2.2.4. Collections as the datatype of a function's return value</A>
  <DT>conversion
: <A HREF="../ch14_01.htm">14. Conversion Functions</A>
  <DT>date and time
: <A HREF="../ch12_01.htm">12. Date Functions</A>
  <DT>formatting
: <A HREF="../ch03_04.htm">3.4. Formatting PL/SQL Blocks</A>
  <DT>group
: <A HREF="../ch06_13.htm#SQL2-CH-6-SECT-13.2">6.13.1.1. Inefficiency of group functions in cursors</A>
  <DT>headers of
: <A HREF="../ch15_05.htm#SQL2-CH-15-SECT-5.3">15.5.5. Function Header</A>
  <DT>IN OUT and OUT parameters in
: <A HREF="../ch22_02.htm#SQL2-CH-22-SECT-2.1.1">22.2.1.1. Do not use OUT and IN OUT parameters</A>
  <DT>for LOBs
: <A HREF="../ch13_02.htm#SQL2-CH-13-SECT-2.0.1">13.2. LOB Function Descriptions</A>
  <DT>local
  <DD><DL>
    <DT><A HREF="../ch15_07.htm">15.7. Local Modules</A>
    <DT><A HREF="../ch22_03.htm">22.3. Take Full Advantage of Local Modularization</A>
  </DL>
  <DT>miscellaneous
: <A HREF="../ch13_03.htm#SQL2-CH-13-SECT-3.0.3">13.3. Miscellaneous Function Descriptions</A>
  <DT>names for
: <A HREF="../ch01_07.htm#SQL2-CH-1-SECT-7.5">1.7.5. Structured Code and Other Best Practices</A>
  <DT>naming precedence
: <A HREF="../ch17_06.htm">17.6. Column/Function Name Precedence</A>
  <DT>with NULL arguments
: <A HREF="../ch04_03.htm#SQL2-CH-4-SECT-3.3">4.3.3. Function Results with NULL Arguments</A>
  <DT>numeric
: <A HREF="../ch13_01.htm">13. Numeric, LOB, and Miscellaneous Functions</A>
  <DT>overloaded
: <A HREF="../ch15_08.htm#SQL2-CH-15-SECT-8.4">15.8.4. Restrictions on Overloading</A>
  <DT>packaged
: <A HREF="../ch17_05.htm#SQL2-CH-17-SECT-5.1.1">17.5. Calling Packaged Functions in SQL</A>
  <DT>parameters of
: <A HREF="../ch15_06.htm#SQL2-CH-15-SECT-6.2.3">15.6. Parameters</A>
  <DD><DL>
    <DT>without
: <A HREF="../ch15_05.htm#SQL2-CH-15-SECT-5.3">15.5.4.1. Functions without parameters</A>
  </DL>
  <DT>PL/SQL, calling in SQL
: <A HREF="../ch25_03.htm#SQL2-CH-25-SECT-3.4">25.3.2. Call PL/SQL Functions in SQL to Reduce I/O</A>
  <DT>records as parameters
: <A HREF="../ch09_01.htm">9.1.4. Guidelines for Using Records</A>
  <DT>RETURN statement
: <A HREF="../ch15_05.htm#SQL2-CH-15-SECT-5.3">15.5.8. The RETURN Statement</A>
  <DT>returned value of
: <A HREF="../ch15_05.htm#SQL2-CH-15-SECT-5.3">15.5.2. The RETURN Datatype</A>
  <DT>returning objects
: <A HREF="../ch18_01.htm">18.1.2. Some Simple Examples</A>
  <DT>returning tables from
: <A HREF="../ch10_08.htm#SQL2-CH-10-SECT-8.2">10.8.1.1. Referencing fields of record elements in PL/SQL tables</A>
  <DT>shared
: <A HREF="../ch23_01.htm">23.1.2. Executing Functions</A>
  <DT>tables as parameters for
: <A HREF="../ch10_05.htm">10.5.4. Passing PL/SQL Tables as Parameters</A>
  <DT>template for
: <A HREF="../ch22_02.htm#SQL2-CH-22-SECT-2.1.1">22.2.2.1. Build a function template</A>
  <DT>user information
: <A HREF="../ch13_03.htm#SQL2-CH-13-SECT-3.0.3">13.3.7. The UID function</A>
  <DT>using single RETURN statement
: <A HREF="../ch22_02.htm#SQL2-CH-22-SECT-2.1.1">22.2.2. Use a Single RETURN Statement for Successful Termination</A>
</DL>
<DT><A NAME="fx">FX (format exact) modifier</A>
: <A HREF="../ch14_03.htm#SQL2-CH-14-SECT-3.1">14.3.2. FX: Matching Formats Exactly</A>
</DL>

<P>
<HR WIDTH="515" ALIGN="LEFT">

<FONT SIZE="-1">
<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| <A HREF="idx_c.htm">C</A>
| <A HREF="idx_d.htm">D</A>
| <A HREF="idx_e.htm">E</A>
| F
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| <A HREF="idx_i.htm">I</A>
| <A HREF="idx_j.htm">J</A>
| <A HREF="idx_k.htm">K</A>
| <A HREF="idx_l.htm">L</A>
| <A HREF="idx_m.htm">M</A>
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| <A HREF="idx_p.htm">P</A>
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_y.htm">Y</A>
| <A HREF="idx_z.htm">Z</A></FONT>

<HR WIDTH="515" ALIGN="LEFT"><IMG SRC="../../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../../copyrght.htm#copy">Copyright (c) 2000</A> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY>

<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML>
