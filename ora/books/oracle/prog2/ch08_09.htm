<HTML
><HEAD
><TITLE
>[Chapter 8] 8.9 Exception Handler as IF Statement</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein &amp; Bill Pribyl"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:58:24Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-335-9E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-335-9E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle PL/SQL"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming, 2nd Edition"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch08_01.htm"
TITLE="8. Exception Handlers"><LINK
REL="prev"
HREF="ch08_08.htm"
TITLE="8.8 NO_DATA_FOUND: Multipurpose Exception"><LINK
REL="next"
HREF="ch08_10.htm"
TITLE="8.10 RAISE Nothing but Exceptions"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd Edition"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_08.htm"
TITLE="8.8 NO_DATA_FOUND: Multipurpose Exception"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.8 NO_DATA_FOUND: Multipurpose Exception"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch08_01.htm"
TITLE="8. Exception Handlers"
>Chapter 8<BR>Exception Handlers</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_10.htm"
TITLE="8.10 RAISE Nothing but Exceptions"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.10 RAISE Nothing but Exceptions"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="SQL2-CH-8-SECT-9"
>8.9 Exception Handler as IF Statement</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch08-idx-963076-1"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-963076-2"
></A
>I pointed out earlier in this chapter the similarity between the CASE structure of the exception section and the IF statement. Now let's draw on this similarity to implement an interesting kind of exception handler. You can also use nested exception handlers as a kind of conditional statement, similar to an IF-THEN-ELSIF construct. In the function below, I want to convert an incoming string to a date. The user can enter the string in any of these three formats: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>MM/DD/YY
DD-MON-YY
MM/YY </PRE
></BLOCKQUOTE
><P
CLASS="para"
>In the case of MM/YY, the date always defaults to the first day of the month. I don't know in advance what format has been used. The easiest way to identify the appropriate format is to try and convert the string with one of the formats using TO_DATE. If it works, then I found a match and can return the date. If it doesn't match, I will try the next format with another call to TO_DATE, and so on. (See the discussion of TO_DATE in <A
CLASS="xref"
HREF="ch14_01.htm"
>Chapter 14, <CITE
CLASS="chapter"
>Conversion Functions</CITE
></A
>.) </P
><P
CLASS="para"
>Sounds like an IF statement, right? The problem with this approach is that the phrase "if it doesn't match" doesn't convert very neatly to an IF statement. If I call TO_DATE to convert a string to a date, the string must conform to the format mask. If it doesn't, PL/SQL raises an exception in the ORA-01800 through ORA-01899 range (and it could be just about any of those exceptions). Once the exception is raised, my IF statement would fail as well, with control passing to the exception section&nbsp;-- not to the ELSIF clause. </P
><P
CLASS="para"
>If, on the other hand, I apply the concepts of exception scope and propagation to the above "if this then that" logic, I come up with the pseudocode summarized below: </P
><OL
CLASS="orderedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Try to convert the string with TO_DATE and the first mask, MM/DD/YY. If it works, I am done. If it doesn't work, an exception is raised. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Using an exception section, trap this exception as the "else" in my pseudo-IF statement. Within the exception handler, try to convert the string with TO_DATE and the second mask, DD-MON-YY. If it works, I am done. If it doesn't work, an exception is raised. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Using another exception section within the first exception section, trap this exception as the "else" in this pseudo-IF statement. Within the exception handler, try to convert the string with TO_DATE and the third mask, MM/YY. If it works, I am done. If it doesn't work, an exception is raised. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>I have only three masks, so if I cannot convert the string after these three TO_DATE calls, the user entry is invalid and I will simply return NULL. </P
></LI
></OL
><P
CLASS="para"
>The function convert_date that follows illustrates the full PL/SQL version of the preceding pseudocode description. I make liberal use of the WHEN OTHERS exception handler because I have no way of knowing which exception would have been raised by the conversion attempt: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION convert_date (value_in IN VARCHAR2) RETURN DATE
IS
   return_value DATE;
BEGIN
   IF value_int IS NULL THEN return_value := NULL;
   ELSE
      BEGIN
         /* <B
CLASS="emphasis.bold"
>IF MM/DD/YY mask works, set return value. */</B
>
         return_value := TO_DATE (value_in, 'MM/DD/YY');
      EXCEPTION
         /* <B
CLASS="emphasis.bold"
>OTHERWISE: */</B
>
         WHEN OTHERS THEN
            BEGIN
               /* <B
CLASS="emphasis.bold"
>IF DD-MON-YY mask works, set return value. */</B
>
               return_value := TO_DATE (value_in, 'DD-MON-YY');
            EXCEPTION
               /* <B
CLASS="emphasis.bold"
>OTHERWISE: */</B
>
               WHEN OTHERS THEN
                  BEGIN
                     /* <B
CLASS="emphasis.bold"
>IF MM/YY mask works, set return value. */</B
>
                     return_value := TO_DATE (value_in, 'MM/YY');
                  EXCEPTION
                     /* <B
CLASS="emphasis.bold"
>OTHERWISE RETURN NULL. */</B
>
                     WHEN OTHERS THEN
                        return_value := NULL;
                  END;
            END;
      END;
   END IF;
   RETURN (return_value);
END;<A
CLASS="indexterm"
NAME="AUTOID-7907"
></A
>
<A
CLASS="indexterm"
NAME="AUTOID-7908"
></A
></PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_08.htm"
TITLE="8.8 NO_DATA_FOUND: Multipurpose Exception"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.8 NO_DATA_FOUND: Multipurpose Exception"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming, 2nd Edition"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_10.htm"
TITLE="8.10 RAISE Nothing but Exceptions"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.10 RAISE Nothing but Exceptions"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>8.8 NO_DATA_FOUND: Multipurpose Exception</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>8.10 RAISE Nothing but Exceptions</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
