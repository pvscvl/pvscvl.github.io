<HTML
><HEAD
><TITLE
>[Appendix C] C.16 DBMS_UTILITY</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein &amp; Bill Pribyl"><META
NAME="DC.Date"
CONTENT="2000-04-29T19:14:45Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-335-9E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-335-9E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle PL/SQL"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming, 2nd Edition"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="appc_01.htm"
TITLE="C. Built-In Packages"><LINK
REL="prev"
HREF="appc_15.htm#appc-127-fm2xml"
TITLE="C.15 DBMS_TRANSACTION"><LINK
REL="next"
HREF="appc_17.htm#appc-144-fm2xml"
TITLE="C.17 UTL_FILE"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd Edition"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appc_15.htm#appc-127-fm2xml"
TITLE="C.15 DBMS_TRANSACTION"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: C.15 DBMS_TRANSACTION"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="appendix"
REL="up"
HREF="appc_01.htm"
TITLE="C. Built-In Packages"
>Appendix C<BR>Built-In Packages</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appc_17.htm#appc-144-fm2xml"
TITLE="C.17 UTL_FILE"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: C.17 UTL_FILE"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="SQL2-AP-C-SECT-16"
>C.16 DBMS_UTILITY</A
></H2
><P
CLASS="para"
>The <A
CLASS="indexterm"
NAME="appc-idx-854962-1"
></A
><A
CLASS="indexterm"
NAME="appc-idx-854962-2"
></A
> <A
CLASS="indexterm"
NAME="appc-idx-854962-3"
></A
> DBMS_UTILITY package includes several utility modules you might find useful when managing objects in the database. </P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appc-132-fm2xml"
>C.16.1 The <A
CLASS="indexterm"
NAME="AUTOID-25023"
></A
> ANALYZE_SCHEMA procedure</A
></H3
><P
CLASS="para"
>This procedure analyzes all the tables, clusters, and indexes in the specified schema. The specification is: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE DBMS_UTILITY.ANALYZE_SCHEMA
   (schema VARCHAR2,
    method VARCHAR2,
    estimate_rows NUMBER DEFAULT NULL,
    estimate_percent NUMBER DEFAULT NULL);</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appc-133-fm2xml"
>C.16.2 The <A
CLASS="indexterm"
NAME="AUTOID-25029"
></A
> COMMA_TO_TABLE procedure</A
></H3
><P
CLASS="para"
>The COMMA_TO_TABLE procedure parses a comma-delimited list and places each name into a PL/SQL table. The specification is: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE DBMS_UTILITY.COMMA_TO_TABLE
   (list IN VARCHAR2,
    tablen OUT BINARY_INTEGER,
    tab OUT uncl_array);</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appc-134-fm2xml"
>C.16.3 The <A
CLASS="indexterm"
NAME="AUTOID-25035"
></A
> COMPILE_SCHEMA procedure</A
></H3
><P
CLASS="para"
>This procedure compiles all procedures, functions, and packages in the specified schema. The specification is: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE DBMS_UTILITY.COMPILE_SCHEMA (schema VARCHAR2);</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appc-135-fm2xml"
>C.16.4 The <A
CLASS="indexterm"
NAME="AUTOID-25041"
></A
> FORMAT_CALL_STACK function</A
></H3
><P
CLASS="para"
>This function formats and returns the current call stack. You can use this function to access the call stack in your program. The specification is: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION DBMS_UTILITY.FORMAT_CALL_STACK RETURN VARCHAR2;</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appc-136-fm2xml"
>C.16.5 The <A
CLASS="indexterm"
NAME="AUTOID-25047"
></A
> FORMAT_ERROR_STACK function</A
></H3
><P
CLASS="para"
>This function formats and returns the current error stack. You might use this in an exception handler to examine the sequence of errors raised. The specification is: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION DBMS_UTILITY.FORMAT_ERROR_STACK RETURN VARCHAR2;</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appc-137-fm2xml"
>C.16.6 The <A
CLASS="indexterm"
NAME="AUTOID-25053"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-25055"
></A
> GET_TIME function</A
></H3
><P
CLASS="para"
>This function returns the number of 100ths of seconds which have elapsed from an arbitrary time. Without GET_TIME, Oracle functions can only record and provide elapsed time in second intervals, which is a very coarse granularity in today's world of computing. With GET_TIME, you can get a much finer understanding of the processing times of lines in your program. The specification is: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION DBMS_UTILITY.GET_TIME RETURN NUMBER;</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appc-138-fm2xml"
>C.16.7 The <A
CLASS="indexterm"
NAME="AUTOID-25061"
></A
> IS_PARALLEL_SERVER function</A
></H3
><P
CLASS="para"
>This function helps determine if the database is running in Parallel Server mode. The specification is: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION DBMS_UTILITY.IS_PARALLEL_SERVER RETURN BOOLEAN;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The function returns TRUE if the database is running in Parallel Server mode; otherwise it returns FALSE. </P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appc-139-fm2xml"
>C.16.8 The <A
CLASS="indexterm"
NAME="AUTOID-25068"
></A
> NAME_RESOLVE procedure</A
></H3
><P
CLASS="para"
>This procedure resolves the name of an object into its component parts, performing synonym translations as necessary. The specification is: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE DBMS_UTILITY.NAME_RESOLVE
   (name IN VARCHAR2,
    context IN NUMBER,
    schema OUT VARCHAR2,
    part1 OUT VARCHAR2,
    part2 OUT VARCHAR2,
    dblink OUT VARCHAR2,
    part1_type OUT NUMBER,
    object_number OUT NUMBER);</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appc-140-fm2xml"
>C.16.9 The <A
CLASS="indexterm"
NAME="AUTOID-25074"
></A
> NAME_TOKENIZE procedure</A
></H3
><P
CLASS="para"
>The NAME_TOKENIZE procedure calls the PL/SQL parser to parse the given name that is in the following format: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>a [ . b [. c]] [@dblink ]</PRE
></BLOCKQUOTE
><P
CLASS="para"
>where dblink is the name of a database link. NAME_TOKENIZE follows these rules: </P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Strips off all double quotes</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Converts to uppercase if there are no quotes</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Ignores any inline comments</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Does no semantic analysis</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Leaves any missing values as NULL</P
></LI
></UL
><P
CLASS="para"
>The specification is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE DBMS_UTILITY.NAME_TOKENIZE
   (name  IN VARCHAR2,
    a OUT VARCHAR2,
    b OUT VARCHAR2,
    c OUT VARCHAR2,
    dblink OUT VARCHAR2,
    nextpos OUT BINARY_INTEGER);</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appc-141-fm2xml"
>C.16.10 The <A
CLASS="indexterm"
NAME="AUTOID-25094"
></A
> PORT_STRING function</A
></H3
><P
CLASS="para"
>The PORT_STRING function returns a string that uniquely identifies the version of Oracle Server and the platform or operating system of the current database instance. The specification is: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION DBMS_UTILITY.PORT_STRING RETURN VARCHAR2;</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="appc-142-fm2xml"
>C.16.11 The <A
CLASS="indexterm"
NAME="AUTOID-25100"
></A
> TABLE_TO_COMMA procedure</A
></H3
><P
CLASS="para"
>The TABLE_TO_COMMA procedure converts a PL/SQL table into a comma-delimited list. The specification is: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE DBMS_UTILITY.TABLE_TO_COMMA
   (tab IN uncl_array,
   tablen OUT BINARY_INTEGER,
   list OUT VARCHAR2);<A
CLASS="indexterm"
NAME="AUTOID-25104"
></A
>
<A
CLASS="indexterm"
NAME="AUTOID-25105"
></A
>
<A
CLASS="indexterm"
NAME="AUTOID-25106"
></A
></PRE
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appc_15.htm#appc-127-fm2xml"
TITLE="C.15 DBMS_TRANSACTION"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: C.15 DBMS_TRANSACTION"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming, 2nd Edition"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appc_17.htm#appc-144-fm2xml"
TITLE="C.17 UTL_FILE"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: C.17 UTL_FILE"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>C.15 DBMS_TRANSACTION</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>C.17 UTL_FILE</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
