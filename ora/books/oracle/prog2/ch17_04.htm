<HTML
><HEAD
><TITLE
>[Chapter 17] 17.4 Restrictions on PL/SQL Functions in SQL</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein &amp; Bill Pribyl"><META
NAME="DC.Date"
CONTENT="2000-04-29T19:04:48Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-335-9E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-335-9E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle PL/SQL"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming, 2nd Edition"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch17_01.htm"
TITLE="17. Calling PL/SQL Functions in SQL"><LINK
REL="prev"
HREF="ch17_03.htm"
TITLE="17.3 Requirements for Stored Functions in SQL"><LINK
REL="next"
HREF="ch17_05.htm#SQL2-CH-17-SECT-5.1.1"
TITLE="17.5 Calling Packaged Functions in SQL"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd Edition"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_03.htm"
TITLE="17.3 Requirements for Stored Functions in SQL"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 17.3 Requirements for Stored Functions in SQL"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch17_01.htm"
TITLE="17. Calling PL/SQL Functions in SQL"
>Chapter 17<BR>Calling PL/SQL Functions in SQL</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_05.htm#SQL2-CH-17-SECT-5.1.1"
TITLE="17.5 Calling Packaged Functions in SQL"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 17.5 Calling Packaged Functions in SQL"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="SQL2-CH-17-SECT-4"
>17.4 Restrictions on PL/SQL Functions in SQL</A
></H2
><P
CLASS="para"
>Stored functions in SQL offer tremendous power. As you might expect, however, power introduces the possibility of abuse and the need for responsible action. In the context of SQL, abuse of power involves the rippling impact of side effects in a function. Consider the following function: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION total_comp
   (salary_in IN employee.salary%TYPE, bonus_in IN employee.bonus%TYPE)
   RETURN NUMBER
IS
BEGIN
   UPDATE employee SET salary = salary_in / 2;
   RETURN salary_in + NVL (bonus_in, 0);
END;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>This simple little calculation, introduced at the beginning of the chapter, now also updates the salary of all employees to half of the specified value. This action affects the results of the query from which total_comp might originate; even worse, it affects any other SQL statement in this session. </P
><P
CLASS="para"
>Along with modification of database tables, modification of <A
CLASS="indexterm"
NAME="AUTOID-15053"
></A
><A
CLASS="indexterm"
NAME="AUTOID-15056"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-15059"
></A
>package variables is another side effect of stored functions in SQL. Package variables act as globals within a particular session. A function that changes a package variable could have an impact on another stored function or procedure, which in turn could affect a SQL statement using that stored function. </P
><P
CLASS="para"
>A PL/SQL function could also cause a side effect in the <A
CLASS="indexterm"
NAME="AUTOID-15063"
></A
>WHERE clause of a query. The query optimizer can reorder the evaluation of predicates in the WHERE clause to minimize the number of rows processed. A function executing in this clause could therefore subvert the query optimization process. </P
><P
CLASS="para"
>My general recommendation for a function is that it should be narrowly focused on computing and returning a value. But a recommendation is not enough when it comes to database integrity: in order to guard against nasty side effects and upredictable behavior, the Oracle Server makes it impossible for your stored function in SQL to take any of the following actions: </P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>The stored function may not modify database tables. It cannot execute an INSERT, DELETE, or UPDATE statement. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>A stored function that is called remotely or through a parallelized action may not read or write the values of package variables. The Oracle Server does not support side effects that cross user sessions. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>A stored function can update the values of package variables only if that function is called in a SELECT, VALUES, or SET clause. If the store function is called in the WHERE or GROUP BY clause, it cannot write package variables. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Prior to Oracle8, you can call very few built-in packaged programs inside a function which will be used in SQL. This means that your PL/SQL function cannot contain calls to DBMS_OUTPUT.PUT_LINE, DBMS_PIPE, and DBMS_SQL, to name just a few. In some cases, this makes perfect sense. If you are not allowed to perform an UPDATE, you certainly shouldn't be able to use DBMS_SQL to sneak that UPDATE by "the censors." But with other packages, the restriction is unnecessary and present only because Oracle did not enable those programs. In Oracle8, some of these restrictions are removed. You <EM
CLASS="emphasis"
>can</EM
> call DBMS_OUTPUT.PUT_LINE from within a function called in SQL. You can even send information to database pipes.[<A
CLASS="footnote"
HREF="#AUTOID-15077"
>1</A
>] </P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="AUTOID-15077"
>[1]</A
> My book, <CITE
CLASS="citetitle"
>Oracle Built-in Packages</CITE
>, contains a comprehensive discussion of the packaged functions which are available for use in SQL.</P
></DIV
></BLOCKQUOTE
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Prior to Oracle8, you cannot call RAISE_APPLICATION_ERROR from within the stored function. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>In Oracle Server 7.3, you cannot apply PL/SQL table methods (COUNT, FIRST, LAST, NEXT, PRIOR, etc.) in a stored function which is used in SQL (this is a "known bug" fixed in Oracle8). For example, if your function contains the following code, it cannot be used in SQL: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>DECLARE
   TYPE emptabtype IS TABLE of emp%ROWTYPE INDEX BY BINARY_INTEGER;
   emptab emptabtype;
BEGIN
   IF emptab.COUNT &gt; 0 THEN -- Causes rejection inside SQL</PRE
></BLOCKQUOTE
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>The stored function may not call another module (stored procedure or function) that breaks any of the above rules. A function is only as pure as the most impure of any modules it, in turn, calls. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>The stored function may not reference a view that breaks any of the above rules. A view is a stored SELECT statement; that view's SELECT may use stored functions. </P
></LI
></UL
><P
CLASS="para"
>If your function violates any of these rules or is a function defined in a package and is missing its RESTRICT_REFERENCES pragma, you will receive the dreaded ORA-06571 error: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>ORA-06571: Function TOTAL_COMP does not guarantee not to update database</PRE
></BLOCKQUOTE
><P
CLASS="para"
>As discussed in <A
CLASS="xref"
HREF="ch17_07.htm#SQL2-CH-17-SECT-7.1"
>Section 17.7, "Realities: Calling PL/SQL Functions in SQL"</A
>, it can be very difficult at times (and sometimes impossible) to avoid this error. In other situations, however, there is an easy resolution (certainly do check the above list of restrictions). </P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_03.htm"
TITLE="17.3 Requirements for Stored Functions in SQL"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 17.3 Requirements for Stored Functions in SQL"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming, 2nd Edition"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_05.htm#SQL2-CH-17-SECT-5.1.1"
TITLE="17.5 Calling Packaged Functions in SQL"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 17.5 Calling Packaged Functions in SQL"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>17.3 Requirements for Stored Functions in SQL</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>17.5 Calling Packaged Functions in SQL</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
