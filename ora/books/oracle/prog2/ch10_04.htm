<HTML
><HEAD
><TITLE
>[Chapter 10] 10.4 Declaring a PL/SQL Table</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein &amp; Bill Pribyl"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:59:08Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-335-9E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-335-9E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle PL/SQL"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming, 2nd Edition"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch10_01.htm"
TITLE="10. PL/SQL Tables"><LINK
REL="prev"
HREF="ch10_03.htm"
TITLE="10.3 PL/SQL Tables and DML Statements"><LINK
REL="next"
HREF="ch10_05.htm"
TITLE="10.5 Referencing and Modifying PL/SQL Table Rows"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd Edition"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_03.htm"
TITLE="10.3 PL/SQL Tables and DML Statements"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.3 PL/SQL Tables and DML Statements"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch10_01.htm"
TITLE="10. PL/SQL Tables"
>Chapter 10<BR>PL/SQL Tables</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_05.htm"
TITLE="10.5 Referencing and Modifying PL/SQL Table Rows"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.5 Referencing and Modifying PL/SQL Table Rows"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="SQL2-CH-10-SECT-4"
>10.4 Declaring a PL/SQL Table</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-8722"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-8725"
></A
> As with a record, a PL/SQL table is declared in two stages: </P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Define a particular PL/SQL table structure (made up of strings, dates, etc.) using the table TYPE statement. The result of this statement is a datatype you can use in declaration statements. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Declare the actual table based on that table type. The declaration of a PL/SQL table is a specific instance of a generic datatype. </P
></LI
></UL
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-10-SECT-4.1"
>10.4.1 Defining the Table TYPE</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-8736"
></A
>The TYPE statement for a PL/SQL table has the following format: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>TYPE &lt;table_type_name&gt; IS TABLE OF &lt;datatype&gt; [ NOT NULL ]
   INDEX BY BINARY_INTEGER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>where &lt;table_type_name&gt; is the name of the table structure you are creating and &lt;datatype&gt; is the datatype of the single column in the table. You can optionally specify that the table be NOT NULL, meaning that every row in the table that has been created must have a value. </P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-8742"
></A
><A
CLASS="indexterm"
NAME="AUTOID-8745"
></A
>You must always specify INDEX BY BINARY_INTEGER at the end of the TYPE...TABLE statement, even though it is the only type of index you can have currently in a PL/SQL table. </P
><P
CLASS="para"
>PL/SQL uses BINARY_INTEGER indexes because they allow for the fastest retrieval of data. (In this case, the primary key is already in the internal binary format, so it does not have to be converted before it can be used by the runtime environment.) </P
><P
CLASS="para"
>The rules for the table type name are the same as for any identifier in PL/SQL: the name can be up to 30 characters in length, it must start with a letter, and it can include some special characters such as underscore ( <CODE
CLASS="literal"
>_</CODE
> ) and dollar sign (<CODE
CLASS="literal"
>$</CODE
>). </P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-8752"
></A
>The datatype of the table type's column can be any of the following: </P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Scalar datatype</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Any PL/SQL-supported scalar datatype, such as VARCHAR2, POSITIVE, DATE, or BOOLEAN. </P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Anchored datatype</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>A datatype inferred from a column, previously defined variable, or cursor expression using the %TYPE attribute. </P
></DD
></DL
><P
CLASS="para"
>Here are some examples of table type declarations:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>TYPE company_keys_tabtype IS TABLE OF company.company_id%TYPE NOT NULL
   INDEX BY BINARY_INTEGER;

TYPE reports_requested_tabtype IS TABLE OF VARCHAR2 (100)
   INDEX BY BINARY_INTEGER;</PRE
></BLOCKQUOTE
><BLOCKQUOTE
CLASS="note"
><P
CLASS="para"
><STRONG
>NOTE:</STRONG
> Prior to PL/SQL Release 2.3, you may not use composite datatypes declaring a PL/SQL table's column. With Release 2.3, you can create PL/SQL tables of records. </P
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-10-SECT-4.2"
>10.4.2 Declaring the PL/SQL Table</A
></H3
><P
CLASS="para"
>Once you have created your table type, you can reference that table type to declare the actual table. The general format for a table declaration is: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>&lt;table_name&gt; &lt;table_type&gt;;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>where &lt;table_name&gt; is the name of the table and &lt;table_type&gt; is the name of a previously declared table type. In the following example I create a general table type for primary keys in PACKAGE and then use that table type to create two tables of primary keys: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PACKAGE company_pkg
IS
   /* Create a generic table type for primary keys */
   TYPE primary_keys_tabtype IS TABLE OF NUMBER NOT NULL
      INDEX BY BINARY_INTEGER;

   /* Declare two tables based on this table type */
   company_keys_tab primary_keys_tabtype;
   emp_keys_tab primary_keys_tabtype;

END company_pkg;</PRE
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_03.htm"
TITLE="10.3 PL/SQL Tables and DML Statements"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.3 PL/SQL Tables and DML Statements"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming, 2nd Edition"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_05.htm"
TITLE="10.5 Referencing and Modifying PL/SQL Table Rows"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.5 Referencing and Modifying PL/SQL Table Rows"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>10.3 PL/SQL Tables and DML Statements</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>10.5 Referencing and Modifying PL/SQL Table Rows</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
