<HTML
><HEAD
><TITLE
>[Chapter 26] Tracing PL/SQL Execution</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein &amp; Bill Pribyl"><META
NAME="DC.Date"
CONTENT="2000-04-29T19:13:51Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-335-9E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-335-9E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle PL/SQL"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming, 2nd Edition"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="part06.htm"
TITLE="VI. Making PL/SQL Programs Work"><LINK
REL="prev"
HREF="ch25_05.htm"
TITLE="25.5 Overview of PL/SQL8 Enhancements"><LINK
REL="next"
HREF="ch26_02.htm#SQL2-CH-26-SECT-2.1"
TITLE="26.2 Tracing for Production Support"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd Edition"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch25_05.htm"
TITLE="25.5 Overview of PL/SQL8 Enhancements"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 25.5 Overview of PL/SQL8 Enhancements"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
>Chapter 26</SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch26_02.htm#SQL2-CH-26-SECT-2.1"
TITLE="26.2 Tracing for Production Support"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 26.2 Tracing for Production Support"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="chapter"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="SQL2-CH-26"
>26. Tracing PL/SQL Execution</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="sect1"
HREF="#SQL2-CH-26-SECT-1"
TITLE="26.1 The PL/SQL Trace Facility"
>The PL/SQL Trace Facility</A
><BR><A
CLASS="sect1"
HREF="ch26_02.htm#SQL2-CH-26-SECT-2.1"
TITLE="26.2 Tracing for Production Support"
>Tracing for Production Support</A
><BR><A
CLASS="sect1"
HREF="ch26_03.htm"
TITLE="26.3 Free Format Filtering"
>Free Format Filtering</A
><BR><A
CLASS="sect1"
HREF="ch26_04.htm"
TITLE="26.4 Structured Interface Filtering"
>Structured Interface Filtering</A
><BR><A
CLASS="sect1"
HREF="ch26_05.htm"
TITLE="26.5 Quick-and-Dirty Tracing"
>Quick-and-Dirty Tracing</A
></P
><P
></P
></DIV
><P
CLASS="para"
>As you build more and more complex applications, it can be very difficult to keep track of which procedure calls which function; execution call stacks grow deep and bewildering. Yet there are times when it is very important to be able to trace the activity in your PL/SQL code base. </P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch26-idx-998406-1"
></A
><A
CLASS="indexterm"
NAME="ch26-idx-998406-2"
></A
><A
CLASS="indexterm"
NAME="ch26-idx-998406-3"
></A
>Oracle offers a trace facility for your PL/SQL code which allows you to generate voluminous information about the particular paths your programs take to get their job done. Of course, Oracle has for years offered a SQL trace facility which provides extensive data on the processing of your SQL statements. See Oracle Performance Tuning for more information on this feature, as well as other tuning/tracing utilities like TKPROF. </P
><P
CLASS="para"
>In addition to these standard Oracle facilities, you can build your own tracing utilities; the final section in this chapter offers an architecture and some implementational ideas for a utility designed specifically to trace execution within a running application. (Such a utility is particularly useful for production support.) </P
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="SQL2-CH-26-SECT-1"
>26.1 The PL/SQL Trace Facility</A
></H2
><P
CLASS="para"
>PL/SQL8 offers a tracing tool for server-side PL/SQL. You can use this tool to trace the execution of PL/SQL programs and the raising of exceptions within those programs. The output from the trace is written to the Oracle Server trace file. On Windows NT, you can find this trace file in the <I
CLASS="filename"
>\OraNT\RDBMS80\TRACE</I
> directory. In UNIX, check the <I
CLASS="filename"
>$ORACLE_HOME\rdbms\trace</I
> directory. The name of the file has the format <I
CLASS="filename"
>ORANNNNN.TRC</I
>, where <I
CLASS="filename"
>NNNNN</I
> is a left zero-padded number assigned internally by the Oracle Trace facility. Order your directory by date to find the latest trace file. </P
><BLOCKQUOTE
CLASS="note"
><P
CLASS="para"
><STRONG
>NOTE:</STRONG
> You cannot use the PL/SQL tracing tool with the multi-threaded server option (MTS). </P
></BLOCKQUOTE
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-26-SECT-1.1"
>26.1.1 Enabling Program Units for Tracing</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-23370"
></A
>In order to trace the execution of a program, you will first have to enable that program by recompiling it with the debug option. You can do this either by altering your session and then issuing a CREATE OR REPLACE statement, or by directly recompiling an existing program unit with the debug option. </P
><P
CLASS="para"
>To alter your session to turn on PL/SQL debug mode for compilation, issue this command:<A
CLASS="indexterm"
NAME="ch26-idx-998422-1"
></A
> </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; ALTER SESSION SET PLSQL_DEBUG=TRUE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Then compile your program unit with a CREATE OR REPLACE statement. That program unit will then be available for tracing. </P
><P
CLASS="para"
>You can also recompile your existing, stored program with debug mode as follows: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; ALTER [PROCEDURE|FUNCTION|PACKAGE] &lt;program_name&gt; COMPILE DEBUG;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>So if you wanted to enable the emp_pkg package for tracing, you would issue this command: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; ALTER PACKAGE emp_pkg COMPILE DEBUG;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>From within a PL/SQL program you can also turn on debug mode for a module by using DBMS_SQL as follows: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>CREATE OR REPLACE PROCEDURE debugpkg (name IN VARCHAR2)
IS
   cur INTEGER := DBMS_SQL.OPEN_CURSOR;
   fdbk INTEGER;
BEGIN
   DBMS_SQL.PARSE (cur,
      'ALTER PACKAGE ' || name || ' COMPILE DEBUG',
      DBMS_SQL.NATIVE);

   fdbk := DBMS_SQL.EXECUTE (cur);

   DBMS_SQL.CLOSE_CURSOR (cur);
END;
/</PRE
></BLOCKQUOTE
><P
CLASS="para"
>For more information on DBMS_SQL, see <A
CLASS="xref"
HREF="appc_01.htm"
>Appendix C, <CITE
CLASS="appendix"
>Built-In Packages</CITE
></A
>.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-26-SECT-1.2"
>26.1.2 Turning On the Trace</A
></H3
><P
CLASS="para"
>Once you have enabled the desired program units for tracing, you can execute those programs (or the application code which makes use of those programs). To get trace output, however, you must turn on tracing for your session. You can request tracing of program calls and/or exceptions raised in programs. </P
><P
CLASS="para"
>You do this with the ALTER SESSION command as follows:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>   SQL&gt; ALTER SESSION SET EVENTS='10938 TRACE NAME CONTEXT LEVEL &lt;number&gt;';</PRE
></BLOCKQUOTE
><P
CLASS="para"
>where 10938 is the event number for PL/SQL tracing and &lt;number&gt; is a number indicating the level of tracing you desire. Valid tracing levels are: </P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Level</P
> </TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Description</P
> </TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>1</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Trace all calls</P
> </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>2</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Trace calls to enabled programs only</P
> </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>4</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Trace all exceptions</P
> </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>8</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Trace exceptions in enabled program units only</P
> </TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-23424"
></A
>You can activate multiple event levels for tracing by adding the level values. For example, the following statement sets tracing for levels 2 and 8: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; ALTER SESSION SET EVENTS='10938 TRACE NAME CONTEXT LEVEL 10';</PRE
></BLOCKQUOTE
><P
CLASS="para"
>while this next command activates tracing for levels 2, 4, and 8:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; ALTER SESSION SET EVENTS='10938 TRACE NAME CONTEXT LEVEL 14';</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Lower trace levels supersede higher levels. So if you activate tracing for level combination 12, level 8 will be ignored and trace output will be produced for all exceptions, not just exceptions in enabled program units. </P
><P
CLASS="para"
>As you can see, you have some control over the granularity of tracing. It is not possible, however, to activate tracing just within a specific program. It is either all programs or all programs in which tracing has been enabled with a debug-mode compile.<A
CLASS="indexterm"
NAME="AUTOID-23431"
></A
> </P
><BLOCKQUOTE
CLASS="note"
><P
CLASS="para"
><STRONG
>NOTE:</STRONG
> You cannot turn on tracing for remote procedure calls (RPCs)&nbsp;-- that is, programs which are stored in remote databases. </P
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="SQL2-CH-26-SECT-1.3"
>26.1.3 A Sample Tracing Session</A
></H3
><P
CLASS="para"
>To make it easier for me to test and use this facility I created the following scripts: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>alter package &amp;1 compile debug;

alter session set events='10938 trace name context level &amp;1';</PRE
></BLOCKQUOTE
><P
CLASS="para"
>So I can now prepare a package for tracing with the following statement: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; @compdbg PKGNAME</PRE
></BLOCKQUOTE
><P
CLASS="para"
>where PKGNAME is the name of my package. In the following session, I turn on tracing for all levels by passing 14 (2 + 4 + 8); then I call my PL/Vision substitute for DBMS_OUTPUT.PUT followed by the raising of an exception. The following code: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; @trace 14
SQL&gt; BEGIN
  2     p.l (1);
  3     raise no_data_found;
  4  END;
  5  /
begin
*
ERROR at line 1:
SQL&gt; </PRE
></BLOCKQUOTE
><P
CLASS="para"
>resulted in this trace file:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>Dump file D:\ORANT\RDBMS80\trace\ORA00089.TRC
Wed Jun 11 13:22:52 1997
ORACLE V8.0.2.0.2 - Beta vsnsta=1
vsnsql=c vsnxtr=3
Windows NT V4.0, OS V5.101, CPU type 586
Oracle8 Server Release 8.0.2.0.2 - Beta
With the distributed, heterogeneous, replication, objects
and parallel query options
PL/SQL Release 3.0.2.0.2 - Beta
Windows NT V4.0, OS V5.101, CPU type 586
Instance name: orcl
Redo thread mounted by this instance: 1
Oracle process number: 11
pid: 59
Wed Jun 11 13:22:52 1997
*** SESSION ID:(11.18) 1997.06.11.13.22.52.431
------------ PL/SQL TRACE INFORMATION -----------
Levels set :  2    4    8
------------ PL/SQL TRACE INFORMATION -----------
Levels set :  2    4    8
Trace:   PACKAGE PLVPRO.P: P Stack depth = 2
Trace:   PACKAGE BODY PLVPRO.P: P Stack depth = 2
Trace:   PACKAGE BODY PLVPRO.P: L Stack depth = 2
Trace:   PACKAGE BODY PLVPRO.P: DISPLAY_LINE Stack depth = 3
Trace:   PACKAGE BODY PLVPRO.P: LINELEN Stack depth = 4
Trace:   PACKAGE BODY PLVPRO.P: PUT_LINE Stack depth = 4
Trace:   Pre-defined exception - OER 1403 at line 0 of ANONYMOUS BLOCK:</PRE
></BLOCKQUOTE
><P
CLASS="para"
>As you can see, trace files can get big fast, but they contain some extremely useful information. </P
></DIV
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch25_05.htm"
TITLE="25.5 Overview of PL/SQL8 Enhancements"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 25.5 Overview of PL/SQL8 Enhancements"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming, 2nd Edition"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch26_02.htm#SQL2-CH-26-SECT-2.1"
TITLE="26.2 Tracing for Production Support"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 26.2 Tracing for Production Support"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>25.5 Overview of PL/SQL8 Enhancements</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>26.2 Tracing for Production Support</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
