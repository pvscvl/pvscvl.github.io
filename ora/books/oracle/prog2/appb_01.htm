<HTML
><HEAD
><TITLE
>[Appendix B] Calling Stored Procedures from PL/SQL Version 1.1</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein &amp; Bill Pribyl"><META
NAME="DC.Date"
CONTENT="2000-04-29T19:14:16Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-335-9E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-335-9E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle PL/SQL"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming, 2nd Edition"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="part07.htm"
TITLE="VII. Appendixes"><LINK
REL="prev"
HREF="appa_02.htm"
TITLE="A.2 Using the Guide"><LINK
REL="next"
HREF="appb_02.htm#SQL2-AP-B-SECT-2.3"
TITLE="B.2 Restrictions on Calling Stored Procedures"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd Edition"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_02.htm"
TITLE="A.2 Using the Guide"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: A.2 Using the Guide"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
>Appendix B</SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appb_02.htm#SQL2-AP-B-SECT-2.3"
TITLE="B.2 Restrictions on Calling Stored Procedures"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: B.2 Restrictions on Calling Stored Procedures"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="appendix"
><H1
CLASS="appendix"
><A
CLASS="title"
NAME="SQL2-AP-B"
>B. Calling Stored Procedures from PL/SQL Version 1.1</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="sect1"
HREF="#SQL2-AP-B-SECT-1"
TITLE="B.1 Using Stubs to Talk to Server-Side PL/SQL"
>Using Stubs to Talk to Server-Side PL/SQL</A
><BR><A
CLASS="sect1"
HREF="appb_02.htm#SQL2-AP-B-SECT-2.3"
TITLE="B.2 Restrictions on Calling Stored Procedures"
>Restrictions on Calling Stored Procedures</A
></P
><P
></P
></DIV
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="appb-idx-989959-1"
></A
><A
CLASS="indexterm"
NAME="appb-idx-989959-2"
></A
><A
CLASS="indexterm"
NAME="appb-idx-989959-3"
></A
><A
CLASS="indexterm"
NAME="appb-idx-989959-4"
></A
>The Oracle Developer/2000 tools use PL/SQL Version 1.1, while the PL/SQL versions on the server range from 2.0 to 8.x. The PL/SQL version inside the Oracle Developer/2000 tools will be upgraded to PL/SQL Release 2.3 sometime in 1998 with Release 2 of Oracle Developer/2000. In the meantime, the tools group at Oracle Corporation has had to come up with a way to allow applications based on Oracle Developer/2000 to call stored procedures in the most transparent fashion possible. The end result is a mechanism which: </P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Does not require any changes to the PL/SQL Version 1.1 base product</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Does allow the Oracle Developer/2000 application to find and execute stored procedures </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Does not require any special syntax to distinguish between stored and local PL/SQL modules </P
></LI
></UL
><P
CLASS="para"
>Achieving this effect, however, imposes several restrictions on the use of stored procedures: </P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Only four datatypes are supported for module parameters: DATE, VARCHAR2, BOOLEAN, and NUMBER. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>You cannot directly reference a package object using the dot notation &lt;schema&gt;.&lt;package&gt;.&lt;objname&gt;. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>You cannot directly execute remote procedure calls using the standard syntax &lt;procedure&gt;&lt;dblink&gt; </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>You must provide an argument for each parameter in a stored module's parameter list, even if that parameter has a default value. (This restriction applies only to PL/SQL Version 2.0; this restriction goes away in Release 2.1 and beyond.) </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>A stored procedure called from Oracle Developer/2000 cannot have only OUT argument types. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>From Oracle Developer/2000, you can call stored procedures, but you cannot debug them from within the Oracle Developer/2000 tool. (You will be able to do so with PL/SQL Release 2.2 and above; this release runs against Oracle7 Server Release 7.2, which contains the hooks for the step debugging in PL/SQL.) </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>You cannot look up a remote subprogram via a synonym until RDBMS Version 7.1.1. </P
></LI
></UL
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="SQL2-AP-B-SECT-1"
>B.1 Using Stubs to Talk to Server-Side PL/SQL</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-23711"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-23714"
></A
><A
CLASS="indexterm"
NAME="appb-idx-989022-3"
></A
>The mechanism employed by the Oracle Developer/2000 tools to handle stored procedures is called stub generation. A stub is a PL/SQL procedure or function which has the same header as the actual procedure or function. A stub for a package contains a stub or specification for each module in the package. </P
><P
CLASS="para"
>When the Oracle Developer/2000 tool encounters an identifier in a PL/SQL code segment, it checks to see if it is a local PL/SQL variable, then a tool bind variable, table/view, synonym, sequence, and so on through the precedence order of object name resolution. If it is unable to resolve the reference, the PL/SQL compiler calls a stub generator to see if it can resolve the identifier as a stored function or procedure. In that case, a stub is generated for syntactical checking, and the compiler continues. Because the stub looks the same to the Oracle Developer/2000 tool as the stored module, the tool can continue to perform syntactical checks using that stub. Stub generation only occurs at compile time. </P
><P
CLASS="para"
>You can see what kind of stub PL/SQL generates in the Oracle Developer/2000 tool by executing the stub generator directly from SQL*Plus, as shown below: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>VARIABLE not_needed VARCHAR2(2000);
VARIABLE stubtext VARCHAR2(2000);
DELETE FROM SYS.PSTUBTBL;
EXECUTE SYS.PSTUB ('&amp;1', NULL, :not_needed, :stubtext);
PRINT stubtext;
DELETE FROM SYS.PSTUBTBL;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>where "&amp;1" is a substitution variable. Notice that I delete from the stub table, SYS.PSTUBTBL, before and after my call to the SYS pstub generator program. This is a temporary table and must be cleaned up manually if you are going to call the PSTUB program yourself. </P
><P
CLASS="para"
>Place this code in a file named <I
CLASS="filename"
>showstub.sql</I
> and you can then call it as follows to show a module's stub: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; start showstub calc_totals</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The following is an example of the output from this showstub program:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; CREATE PROCEDURE calc_totals
SQL&gt;      (company_id_in IN NUMBER, type_inout IN OUT VARCHAR2)
SQL&gt; IS
SQL&gt; BEGIN
SQL&gt;       ... all the code ...
SQL&gt; END;
SQL&gt; /

Procedure created.

SQL&gt; start showstub calc_totals

STUBTEXT
----------------------------------------------------------------------
procedure calc_totals (COMPANY_ID_IN NUMBER, TYPE_INOUT in out CHAR) is
begin stproc.in('begin calc_totls(:COMPANY_ID_IN, :TYPE_INOUT); end;');
stproc.bind_i(COMPANY_ID_IN); stproc.bind_io(TYPE_INOUT);
stproc.execute;
stproc.retrieve(2, TYPE_INOUT); end;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>If the output from showstub is `$$$ s_notv6Compat', you may be trying to use parameters with the %TYPE attribute, which are not allowed in the parameter list of a stored procedure called from Oracle Developer/2000 tools. If the output is `$$$ s_subp not found', the problem is that the stub generator cannot find the module. This will happen if you have not created a synonym for a module which is owned by another user. The stub generator cannot search across different users to resolve a named object reference. You will have to create a public synonym for this module and then grant EXECUTE authority on that module to PUBLIC. </P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appa_02.htm"
TITLE="A.2 Using the Guide"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: A.2 Using the Guide"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming, 2nd Edition"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming, 2nd Edition"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appb_02.htm#SQL2-AP-B-SECT-2.3"
TITLE="B.2 Restrictions on Calling Stored Procedures"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: B.2 Restrictions on Calling Stored Procedures"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>A.2 Using the Guide</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>B.2 Restrictions on Calling Stored Procedures</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
