<HTML
><HEAD
><TITLE
>[Chapter 9] 9.3 The Document Type Definition (DTD)</TITLE
><META
NAME="DC.Creator"
CONTENT="Andrew Odewahn"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:37:44Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CDROM-1-56592-687-0E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-687-0E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle Web 8i"><META
NAME="DC.Title"
CONTENT="Oracle Web Applications: PL/SQL Developer's Introduction"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch09_01.htm"
TITLE="9. XML"><LINK
REL="prev"
HREF="ch09_02.htm"
TITLE="9.2 XML Syntax"><LINK
REL="next"
HREF="ch09_04.htm"
TITLE="9.4 The XML Parser"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_02.htm"
TITLE="9.2 XML Syntax"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.2 XML Syntax"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch09_01.htm"
TITLE="9. XML"
>Chapter 9<BR>XML</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_04.htm"
TITLE="9.4 The XML Parser"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.4 The XML Parser"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="BOOK-CH-9-SECT-3"
>9.3 The Document Type Definition (DTD)</A
></H2
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-7608"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-7611"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-7613"
></A
> If we're going to use XML to exchange documents electronically, we must be able to judge whether a document meets a certain set of necessary requirements. For example, an electronic invoice must, at minimum, include an invoice number, a date, and at least one item. Our systems should be smart enough to reject an invoice if it doesn't contain the required information. Additionally, we should be able to create these requirements ourselves. </P
><P
CLASS="para"
>You can associate a document type definition (DTD) with an XML document to enforce these sorts of rules. You can either create a DTD or use one that already exists. A major goal of XML is to encourage various groups (industry, community, academic, etc.) to form standards bodies to define collective DTDs. Eventually, these DTDs will form the basis for a variety of electronic data exchange systems. </P
><P
CLASS="para"
>A DTD is a lot like a database schema.[<A
CLASS="footnote"
HREF="#AUTOID-7617"
>3</A
>] Just as you would define the columns in a database table, you can use a DTD to define the name and datatype of every element that can appear in an XML document. Just as you define a column constraint, you can require that particular elements appear within the document. Just as you would normalize a set of database tables into one-to-many or one-to-one relationships, you can create the same relationships by defining how the elements can be hierarchically nested. </P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="AUTOID-7617"
>[3]</A
> Oracle Corporation is an active participant in the World Wide Web Consortium's (W3C) "XML Schema" working group. The W3C oversees the development of almost all the major Internet standards.</P
></DIV
></BLOCKQUOTE
><P
CLASS="para"
>Let's revisit the invoice example from the beginning of this chapter. If we were to simply model a basic invoice using an entity relationship diagram (ERD), we might wind up with something like <A
CLASS="xref"
HREF="ch09_03.htm"
>Figure 9.2</A
>. </P
><H4
CLASS="figure"
><A
CLASS="title"
NAME="BOOK-CH-9-FIG-2"
>Figure 9.2: An ERD for a simple invoice</A
></H4
><IMG
CLASS="graphic"
SRC="figs/owa.0902.gif"
ALT="Figure 9.2"><P
CLASS="para"
>We can use this diagram as a guide to constructing a corresponding DTD. For clarity, though, we'll start with the finished DTD and work backwards: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>&lt;!ELEMENT INVOICE (INVOICE_NUMBER, DATE, CUSTOMER+,INVOICE_ITEMS,TOTAL?)&gt;
   &lt;!ELEMENT INVOICE_NUMBER (#PCDATA)&gt;
   &lt;!ELEMENT DATE (#PCDATA)&gt;
   &lt;!ELEMENT CUSTOMER (#PCDATA)&gt;
   &lt;!ELEMENT INVOICE_ITEMS (ITEM+)&gt;
      &lt;!ELEMENT ITEM (ITEM_NAME, QUANTITY, PRICE)&gt;
         &lt;!ELEMENT ITEM_NAME (#PCDATA)&gt;
         &lt;!ATTLIST ITEM_NAME
            ITEM_NUM CDATA #REQUIRED&gt;
      &lt;!ELEMENT QUANTITY (#PCDATA)&gt;
      &lt;!ELEMENT PRICE (#PCDATA)&gt;
   &lt;!ELEMENT TOTAL (#PCDATA)&gt;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>As you can see from the example, the majority of the DTD consists of instructions to define the elements that can appear within an invoice. The first line defines the root element, <CODE
CLASS="literal"
>INVOICE</CODE
>, the highest element in the nesting tree, as well as the names of all the elements that <CODE
CLASS="literal"
>INVOICE</CODE
> can contain. A single character that indicates how often the element can appear follows each element declaration. <A
CLASS="xref"
HREF="ch09_03.htm"
>Table 9.1</A
> summarizes the function of each character. </P
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="BOOK-CH-9-TABLE-2"
>Table 9.1: Characters Used to Define Element Occurrences </A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Character</P
> </TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Translation</P
> </TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Rough Database Equivalent</P
> </TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Blank</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Element must appear exactly once.</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Non-NULL column constraint</P
> </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
><CODE
CLASS="literal"
>?</CODE
></P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Element can appear 0 or 1 times.</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Constraint/one-to-one relationship</P
> </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
><CODE
CLASS="literal"
>*</CODE
></P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Element can appear 0 or more times.</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Constraint/one-to-many relationship</P
> </TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
><CODE
CLASS="literal"
>+</CODE
></P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Element can appear 1 or more times.</P
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <P
CLASS="para"
>Constraint/one-to-many relationship</P
> </TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>As we can see from the preceding code example, the <CODE
CLASS="literal"
>INVOICE</CODE
> must include an <CODE
CLASS="literal"
>INVOICE_NUMBER</CODE
>, an invoice <CODE
CLASS="literal"
>DATE</CODE
>, at least one <CODE
CLASS="literal"
>CUSTOMER</CODE
> (the <CODE
CLASS="literal"
>+</CODE
> character leaves open our double-billing options), and an <CODE
CLASS="literal"
>INVOICE_ITEMS</CODE
> section. Finally, it can include an optional invoice <CODE
CLASS="literal"
>TOTAL</CODE
> (why should you have to do all the work?). </P
><P
CLASS="para"
>Declarations for each of these elements follow the root declaration. The first four items are the simplest declaration, and consist of a name and a datatype. XML datatypes are much more limited than the standard NUMBER, VARCHAR2, and RAW types used to define table columns. The datatype used here (<CODE
CLASS="literal"
>PCDATA</CODE
>) tells the XML parser that the element consists of formatted text. </P
><P
CLASS="para"
>The next declaration, <CODE
CLASS="literal"
>INVOICE_ITEMS</CODE
>, is an example of a nested element (notice how similar it is to the declaration for the root element.) The <CODE
CLASS="literal"
>INVOICE_ITEMS</CODE
> section must contain at least one <CODE
CLASS="literal"
>ITEM</CODE
>, which is itself a nested structure consisting of an <CODE
CLASS="literal"
>ITEM_NAME</CODE
>, a <CODE
CLASS="literal"
>QUANTITY</CODE
>, and a <CODE
CLASS="literal"
>PRICE</CODE
>. As a final wrinkle, the <CODE
CLASS="literal"
>ATTLIST</CODE
> command is used to further refine the <CODE
CLASS="literal"
>&lt;ITEM_NAME&gt;</CODE
> tag by defining a tag attribute called <CODE
CLASS="literal"
>ITEM_NUM</CODE
>. </P
><P
CLASS="para"
>That's it&nbsp;-- we've defined everything we need for our simple example: the name of each element, the number of times each element can appear, and the allowable nesting arrangements they can follow. All that remains now is to make sure our XML documents are valid, which means that they are both well-formed and comply with the associated DTD. This is the job of the XML parser. </P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_02.htm"
TITLE="9.2 XML Syntax"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.2 XML Syntax"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle Web Applications: PL/SQL Developer's Introduction"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_04.htm"
TITLE="9.4 The XML Parser"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.4 The XML Parser"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>9.2 XML Syntax</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>9.4 The XML Parser</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
