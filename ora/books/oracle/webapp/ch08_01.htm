<HTML
><HEAD
><TITLE
>[Chapter 8] Developing Applications</TITLE
><META
NAME="DC.Creator"
CONTENT="Andrew Odewahn"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:37:17Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CDROM-1-56592-687-0E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-687-0E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle Web 8i"><META
NAME="DC.Title"
CONTENT="Oracle Web Applications: PL/SQL Developer's Introduction"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="index.htm"
TITLE="Oracle Web Applications: PL/SQL Developer's Introduction"><LINK
REL="prev"
HREF="ch07_04.htm#BOOK-CH-7-SECT-4.1.5"
TITLE="7.4 Improving Productivity"><LINK
REL="next"
HREF="ch08_02.htm#BOOK-CH-8-SECT-2.4"
TITLE="8.2 Example 1: An Anonymous Survey"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch07_04.htm#BOOK-CH-7-SECT-4.1.5"
TITLE="7.4 Improving Productivity"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.4 Improving Productivity"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
>Chapter 8</SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_02.htm#BOOK-CH-8-SECT-2.4"
TITLE="8.2 Example 1: An Anonymous Survey"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.2 Example 1: An Anonymous Survey"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="chapter"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="BOOK-CH-8"
>8. Developing Applications</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="sect1"
HREF="#BOOK-CH-8-SECT-1"
TITLE="8.1 Designing a Web Application"
>Designing a Web Application</A
><BR><A
CLASS="sect1"
HREF="ch08_02.htm#BOOK-CH-8-SECT-2.4"
TITLE="8.2 Example 1: An Anonymous Survey"
>Example 1: An Anonymous Survey</A
><BR><A
CLASS="sect1"
HREF="ch08_03.htm#BOOK-CH-8-SECT-3.4"
TITLE="8.3 Example 2: A Discussion Forum"
>Example 2: A Discussion Forum</A
></P
><P
></P
></DIV
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="ch-webapp_dev-TERMREF"
></A
> In the last chapter, we learned about the individual packages of the PL/SQL toolkit. In this chapter, we'll use these packages to create two realistic web applications. The first application allows us to create and distribute anonymous surveys; the second allows users to communicate over the Web in a threaded discussion forum. </P
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="BOOK-CH-8-SECT-1"
>8.1 Designing a Web Application</A
></H2
><P
CLASS="para"
>Before looking at these two systems, however, let's take a quick look at four simple steps that can improve the design process. When you are confronted with any design task, it can greatly help to break the process down into manageable pieces, as follows: </P
><OL
CLASS="orderedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Evaluate your development options; be sure PL/SQL and HTML are really the right tools for the job.[<A
CLASS="footnote"
HREF="#AUTOID-6756"
>1</A
>] </P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="AUTOID-6756"
>[1]</A
> We'll assume that in this chapter!</P
></DIV
></BLOCKQUOTE
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-6760"
></A
> Create a storyboard that will help you visualize the relationship between an application's various web pages. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Create a data model to help you create the screens.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Use PL/SQL packages to actually structure the code.</P
></LI
></OL
><P
CLASS="para"
>The next few sections describe these steps in more detail.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="BOOK-CH-8-SECT-1.1"
>8.1.1 Evaluate Development Options</A
></H3
><P
CLASS="para"
>Choosing the right development language is always the critical first step in building any application. While you can use HTML and PL/SQL to create very powerful systems, there are still some things you should think about before you start coding. For example: </P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Does the proposed application require a lot of sophisticated data entry screens? </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Will users accept a new kind of interface?</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Do all users have modern browsers? </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Is the system brand-new, or is it replacing an existing system you could easily retrofit for the Web? For example, you could take an existing Oracle Forms application and access it using the web-enabled version of Developer. </P
></LI
></UL
><P
CLASS="para"
>The first of these questions is the most important. As a rule of thumb, it's probably better to use Java or client/server than HTML for mission-critical applications with sophisticated data entry screens requiring lots of user interactions, which would be very difficult to code from scratch. For example, you would not want to develop an accounts payable system in HTML. In my own experience, the most effective use of PL/SQL and HTML is for creating systems that generate information from a database, not those that put information into a database. </P
><P
CLASS="para"
>Also, once again, it's important to remember that you must always accommodate your design to the stateless nature of HTML. For example, a complex, hierarchical system where users progressively drill down to lower and lower levels, all the while picking up extra state information, might be difficult to implement in a web environment. </P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="BOOK-CH-8-SECT-1.2"
>8.1.2 Create a Storyboard</A
></H3
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-6784"
></A
> Once you've decided to build an HTML system using PL/SQL, the next step is to create a diagram, called a <EM
CLASS="emphasis"
>storyboard</EM
>, that helps you visualize the relationship between an application's various web pages. <A
CLASS="xref"
HREF="ch08_01.htm"
>Figure 8.1</A
> shows a simple storyboard for an organizational chart application. </P
><H4
CLASS="figure"
><A
CLASS="title"
NAME="BOOK-CH-8-FIG-1"
>Figure 8.1: A simple storyboard</A
></H4
><IMG
CLASS="graphic"
SRC="figs/owa.0801.gif"
ALT="Figure 8.1"><P
CLASS="para"
>Each block on the diagram represents a page. The arrowed lines represent links between the pages. The labels on the link represent the information needed to move from one screen to the next. For example, to generate the second screen of the organization chart application, we must use the department ID code (dept_id) to fetch the correct employees. </P
><P
CLASS="para"
>There are several benefits to building a simple storyboard before you begin an application: </P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Since a storyboard gives even a casual observer an overview of the entire system, you can get useful feedback from potential end users before you begin any actual coding. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>The elements on the storyboard translate almost directly into PL/SQL structures. For example, a quick look at the organization chart storyboard shows that we need at least three procedures. The labels on the links give us the formal parameters for each of these procedures. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>The storyboard, even if sketched out on the back of a napkin, is a useful piece of system documentation that can help future developers to quickly grasp the system's major functions. </P
></LI
></UL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="BOOK-CH-8-SECT-1.3"
>8.1.3 Create a Data Model</A
></H3
><P
CLASS="para"
>Once you have completed the storyboard, you should build a simple data model to help you create the screens. Tables and relationships are your bread-and-butter resources; put them to work in your web systems. For example, suppose your company reorganizes and adopts some crazy new management plan. Inevitably, you will be called upon to develop hundreds of online surveys, with questions such as "Do you meet your core objectives?" or "How can you better align your personal life to the strategic goals of the company?" </P
><P
CLASS="para"
>We could take two approaches to this problem. In the first, we'll simply wait by the phone until someone in human resources (probably Bob) calls and asks us to create a particular survey (perhaps "Cross-Functional Teams and You"). Unfortunately, every call means that we have to build a new form, as well as analyze the results. This really cuts into our recreational web surfing. </P
><P
CLASS="para"
>A second, more interesting approach is to build a data-driven system that uses a data model to create any survey. Each time we have to create a new survey, we can simply enter the questions into the tables of our model, and out pops a complete form. Since the forms are standardized, we can also build a general system to store the user's responses and analyze the results. </P
><P
CLASS="para"
>Building a robust data model is a key part of this idea, and data models require data entry forms to populate their tables. We could build these tables with HTML, but it makes more sense to use a WebDB form or a client/server tool. If we, as IS developers, are the only people who will use a maintenance application, why spend the effort developing a complex system no one else will ever see? </P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="BOOK-CH-8-SECT-1.4"
>8.1.4 Use PL/SQL Packages</A
></H3
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-6809"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-6812"
></A
>  The final step in building an application is to actually structure the code. As we've seen, the best tool for organizing PL/SQL is the package. Breaking your systems down along logical lines can simplify the design process and eliminate huge, monolithic programs. Package design is the most important PL/SQL skill to master, and simple web applications are a great place to practice your techniques. Here are some guidelines you should keep in mind when designing your systems: </P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Separate the "business rule" parts of your code from the user interface code. This will help you reuse these business rules in non-HTML applications, such as Java, client/server, and even Pro*COBOL. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Build a standard library of web functions that you can use over and over. Coding is hard work; anything you can do to reuse what you've already done (or better yet, what someone else has done) makes your life much easier. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Follow best-practices coding standards. A good PL/SQL book will help get you started; see <A
CLASS="xref"
HREF="appa_01.htm"
>Appendix A, <CITE
CLASS="appendix"
>Appendix: Resources for the Oracle Web Developer</CITE
></A
> for further information. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Follow best-practices naming conventions for parameters and variables. As we've seen in earlier chapters, WebDB and OAS are very picky about variable names and types. </P
></LI
></UL
><P
CLASS="para"
>Okay, enough sermonizing. Let's look at some code.</P
></DIV
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch07_04.htm#BOOK-CH-7-SECT-4.1.5"
TITLE="7.4 Improving Productivity"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.4 Improving Productivity"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle Web Applications: PL/SQL Developer's Introduction"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_02.htm#BOOK-CH-8-SECT-2.4"
TITLE="8.2 Example 1: An Anonymous Survey"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.2 Example 1: An Anonymous Survey"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>7.4 Improving Productivity</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>8.2 Example 1: An Anonymous Survey</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
