<HTML
><HEAD
><TITLE
>[Chapter 2] 2.3 Content Delivery Model</TITLE
><META
NAME="DC.Creator"
CONTENT="Andrew Odewahn"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:35:16Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CDROM-1-56592-687-0E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-687-0E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle Web 8i"><META
NAME="DC.Title"
CONTENT="Oracle Web Applications: PL/SQL Developer's Introduction"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch02_01.htm"
TITLE="2. Foundations"><LINK
REL="prev"
HREF="ch02_02.htm#BOOK-CH-2-SECT-2.6"
TITLE="2.2 Server-to-Client Communication"><LINK
REL="next"
HREF="ch02_04.htm#BOOK-CH-2-SECT-4.1"
TITLE="2.4 Database Integration"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_02.htm#BOOK-CH-2-SECT-2.6"
TITLE="2.2 Server-to-Client Communication"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.2 Server-to-Client Communication"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch02_01.htm"
TITLE="2. Foundations"
>Chapter 2<BR>Foundations</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_04.htm#BOOK-CH-2-SECT-4.1"
TITLE="2.4 Database Integration"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.4 Database Integration"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="BOOK-CH-2-SECT-3"
>2.3 Content Delivery Model</A
></H2
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="ch-02-contentdm"
></A
> In this section I'll explain how the OAS and WebDB servers apply the ideas introduced in the previous section to deliver content from the server to the client (e.g., URLs, virtual directories, ports, etc.). </P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-1550"
></A
> Although the specific details vary, OAS and WebDB follow the same basic process model to deliver web content and rely on a virtual schema mapping called a Database Access Descriptor (DAD) to access the database. A DAD is similar to a virtual directory mapping; it creates a name, used within a URL, that links the request to a specific schema in the database.</P
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch02_03.htm#BOOK-CH-2-SECT-3.1"
>Figure 2.1</A
> illustrates the basic parts of the model.</P
><H4
CLASS="figure"
><A
CLASS="title"
NAME="BOOK-CH-2-FIG-1"
>Figure 2.1: Basic components of OAS and WebDB systems</A
></H4
><IMG
CLASS="graphic"
SRC="figs/owa.0201.gif"
ALT="Figure 2.1"><P
CLASS="para"
> A request begins when a user submits a URL or an HTML form to an OAS or WebDB server. A server component called the <EM
CLASS="emphasis"
>HTTP listener</EM
> intercepts the request and extracts its path section. This step, called <EM
CLASS="emphasis"
>URL resolution</EM
>, determines what type of resource the request is for and how it will be processed. If the URL's path section matches a virtual directory mapping, then the request is for a static resource and the HTTP listener returns the requested resource (if found) to the user's browser. If the path section matches a DAD stored in the server's configuration files, the request is for a dynamic resource and the HTTP listener forwards, or <EM
CLASS="emphasis"
>dispatches</EM
>, the request to the PL/SQL gateway.</P
><P
CLASS="para"
>The PL/SQL gateway reparses the URL (or HTML form <CODE
CLASS="literal"
>action</CODE
> attribute), extracting the DAD name and the name of the procedure to execute, which is found in the resource name section of the URL. The gateway also extracts any parameters that might have been passed as part of the request. If the request was made with a URL, the parameters are stored in the query string. If the request was made with a form, the parameters are stored in the form's named data entry fields. </P
><P
CLASS="para"
>The gateway uses the DAD configuration information to connect to the appropriate database schema, then executes the specified procedure, passing any parameters included in the call. The procedure, which executes directly inside the database, usually calls procedures in a set of packages called the <EM
CLASS="emphasis"
>PL/SQL toolkit</EM
>. These calls create the page's contents by "printing" HTML tags into a temporary buffer. When the procedure completes, the gateway signals the HTTP listener to send the contents of the buffer&nbsp;-- now populated with the HTML output from the procedure&nbsp;-- back to the user's browser. The user's browser displays the page, just as it would any other static resource. </P
><P
CLASS="para"
>Let's look at this procedure in more detail, especially the functions of the HTTP listener and the PL/SQL gateway.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="BOOK-CH-2-SECT-3.1"
>2.3.1 The HTTP Listener</A
></H3
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-1569"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-1571"
></A
> The HTTP listener is what we normally think of as the web server. Its job is to receive the requests users make with their browsers, determine how to process them, then return the requested resources (along with their MIME types) to the client machines that made the request. Most of the listener's life is spent monitoring a TCP port for requests made from a web browser. Although OAS and WebDB use port 80 by default, they can be configured to use other ports. </P
><BLOCKQUOTE
CLASS="tip"
><P
CLASS="para"
><STRONG
>TIP:</STRONG
> Only one application at time can listen on a port. To run OAS and WebDB on the same machine, you must configure them to listen on different ports. For example, if OAS is listening on port 80, you could configure WebDB to listen on port 81.</P
></BLOCKQUOTE
><P
CLASS="para"
>The HTTP listener makes static resources available by mapping physical directories on the OAS or WebDB server to a virtual alias. These aliases are used in the URL to request a static resource that resides in the corresponding directory. The goal is to give clients a uniform way to locate a resource that is independent from the operating system of the OAS or WebDB server. For example, on an NT server, you can map the directory <EM
CLASS="emphasis"
>c:\files\public\web_stuff</EM
> to a virtual directory called <EM
CLASS="emphasis"
>web</EM
>. URLs that need to access resources in the directory must use the alias "web", rather than the actual directory name, to retrieve static resources.</P
><P
CLASS="para"
>You can configure OAS to make subdirectories beneath a mapped directory accessible from the Web; WebDB maps subdirectories by default. The subdirectory name, as defined on the server's operating system, is appended to the "root" alias of the URL. For example, if <EM
CLASS="emphasis"
>c:\files\public\web_stuff</EM
> had two subdirectories named <EM
CLASS="emphasis"
>bob</EM
> and <EM
CLASS="emphasis"
>sue</EM
>, the virtual mapping to them would be <EM
CLASS="emphasis"
>/web/bob</EM
> and <EM
CLASS="emphasis"
>/web/sue</EM
>.[<A
CLASS="footnote"
HREF="#BOOK-CH-2-FOOTNOTE-2"
>2</A
>]</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="BOOK-CH-2-FOOTNOTE-2"
>[2]</A
> Since the Web originated mostly on Unix systems, URLs use the forward slash ("/") to denote directories, much to the chagrin of the DOS world, which uses the backslash ("\"). </P
></DIV
></BLOCKQUOTE
><P
CLASS="para"
>Since they include operating system specific names, subdirectory mappings are not completely platform independent. On Unix systems, for example, directory names are case sensitive, so the directories <EM
CLASS="emphasis"
>Junk</EM
> and <EM
CLASS="emphasis"
>junk</EM
> are not the same. Consequently, a URL that accesses a subdirectory on a Unix server must be case sensitive as well. Other platforms have similar caveats. The spaces in Win9x directory names cause all sorts of headaches, and the 3.x version has an eight-character limit. The best advice on any platform is to keep subdirectory names simple.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="BOOK-CH-2-SECT-3.2"
>2.3.2 The PL/SQL Gateway</A
></H3
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-1593"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-1595"
></A
> The PL/SQL gateway is to the database what the HTTP listener is to the filesystem:</P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Just as static resources are accessed with a URL, PL/SQL dynamic resources are accessed with a URL.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Just as physical directories are mapped to virtual directories, physical database schemas are mapped to virtual schemas. These virtual mappings are used in a URL to select the database schema in which a particular dynamic resource resides.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Just as static resources are identified by filenames, PL/SQL dynamic resources are identified by procedure names (packaged procedures are identified with both a package and a procedure name). These names are used in a URL to select the procedure to execute.</P
></LI
></UL
><P
CLASS="para"
>Both OAS and WebDB use the Database Access Descriptors to connect to a specific schema, which includes all the information necessary to establish a database connection, such as a username, password, and connect string. In either case, the DAD is mapped to a virtual alias that is used within a URL to select a schema. </P
><P
CLASS="para"
>OAS schema mappings have two parts: a DAD, which maps a schema, and agents, which map to a DAD. The agent name, not the DAD, appears in the URL to make the connection between the Web and the database. Both the URL and the <CODE
CLASS="literal"
>ACTION </CODE
>attribute of a form that requests a dynamic resource have the following general format (optional sections are bracketed):</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>http://<I
CLASS="replaceable"
>server</I
>[<I
CLASS="replaceable"
>:port</I
>]/<I
CLASS="replaceable"
>agent_name</I
>/plsql/[<I
CLASS="replaceable"
>package.</I
>]<I
CLASS="replaceable"
>procedure</I
>[<I
CLASS="replaceable"
>?parm1=foo...</I
>]</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Here are a few examples:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>http://gandalf/agent_webtest/plsql/print_all_emps
http://gandalf/agent_webtest/plsql/show_emps?i_name=BOB
http://207.25.98.87:8181/secure_agent/plsql/show_users
http://betty/agent_webtest/plsql/forum.current_forum_list</PRE
></BLOCKQUOTE
><P
CLASS="para"
>WebDB has a slightly simpler mapping system that uses just the DAD in the URL; WebDB does not use agents. The URL's format is as follows (optional sections are bracketed): <A
CLASS="indexterm"
NAME="AUTOID-1618"
></A
> </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>http://<I
CLASS="replaceable"
>server</I
>[<I
CLASS="replaceable"
>:port</I
>]<I
CLASS="replaceable"
>/dad_name/</I
>[<I
CLASS="replaceable"
>package.</I
>]<I
CLASS="replaceable"
>procedure</I
>[<I
CLASS="replaceable"
>?parm1=foo...</I
>]</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Here are some examples:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>http://pcandrew.ora.com/WebDB/WEBDB.home
http://gandalf:8181/WebDB/show_emps?I_name=FRED+FLINTSTONE
http://www.travel.com/travelers_site/flights.show_list?country=FR</PRE
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_02.htm#BOOK-CH-2-SECT-2.6"
TITLE="2.2 Server-to-Client Communication"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.2 Server-to-Client Communication"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle Web Applications: PL/SQL Developer's Introduction"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_04.htm#BOOK-CH-2-SECT-4.1"
TITLE="2.4 Database Integration"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.4 Database Integration"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>2.2 Server-to-Client Communication</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>2.4 Database Integration</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
