<HTML
><HEAD
><TITLE
>[Chapter 1] 1.4 A Roadmap to Oracle8i</TITLE
><META
NAME="DC.Creator"
CONTENT="Andrew Odewahn"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:34:58Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CDROM-1-56592-687-0E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-687-0E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle Web 8i"><META
NAME="DC.Title"
CONTENT="Oracle Web Applications: PL/SQL Developer's Introduction"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch01_01.htm"
TITLE="1. Introduction"><LINK
REL="prev"
HREF="ch01_03.htm#BOOK-CH-1-SECT-3.8.1"
TITLE="1.3 Oracle's Solution&nbsp-- Oracle8i"><LINK
REL="next"
HREF="ch02_01.htm"
TITLE="2. Foundations"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_03.htm#BOOK-CH-1-SECT-3.8.1"
TITLE="1.3 Oracle's Solution&nbsp-- Oracle8i"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.3 Oracle's Solution&nbsp-- Oracle8i"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch01_01.htm"
TITLE="1. Introduction"
>Chapter 1<BR>Introduction</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch02_01.htm"
TITLE="2. Foundations"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2. Foundations"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="BOOK-CH-1-SECT-4"
>1.4 A Roadmap to Oracle8i</A
></H2
><P
CLASS="para"
>There's way too much new stuff to learn! You could spend the rest of your life&nbsp;-- including the additional 100 years you'll get because of Y2K&nbsp;-- learning the technologies listed in <A
CLASS="xref"
HREF="ch01_03.htm#BOOK-CH-1-SECT-3.8.1"
>Table 1.2</A
> and still not master them all. Oracle Corporation is far ahead of most of us; we're lucky if we can keep our existing production systems running, much less learn dozens of new tools and methodologies. </P
><P
CLASS="para"
>Given the increasing importance of the Internet, though, we need development skills that we can use right now, not in the distant future. Additionally, some sites, for one reason or another, haven't even moved from Oracle version 7.3 (or even 7.0) to Oracle8, much less Oracle8<EM
CLASS="emphasis"
>i</EM
>. What are they supposed to do?</P
><P
CLASS="para"
>In this section I'll suggest an approach to building web applications for Oracle8<EM
CLASS="emphasis"
>i</EM
> that you can learn in just a week or two, even if you currently know nothing about the Web and even if you're still using Oracle7. Everything I'll cover will migrate smoothly to Oracle8<EM
CLASS="emphasis"
>i</EM
>. In this way, you'll have time to start learning the other technologies even as you develop new systems. The approach I suggest here uses a subset of the technologies listed in <A
CLASS="xref"
HREF="ch01_03.htm#BOOK-CH-1-SECT-3.8.1"
>Table 1.2</A
>: OAS, WebDB, HTML, PL/SQL, and XML. I'll also tell you why I think Java should be your second step.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="BOOK-CH-1-SECT-4.1"
>1.4.1 Connect the Database to the Web Using OAS or WebDB</A
></H3
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-1159"
></A
> The first thing you'll need to do is connect the Oracle database to the Web. The simplest way to do this is to use either OAS or WebDB. Both products work with Oracle 7.3 or above. I'll cover each in its own chapter, focusing on what you, as an application developer, need to know to use and understand the technology.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="BOOK-CH-1-SECT-4.2"
>1.4.2 Develop Web Applications with HTML and PL/SQL</A
></H3
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-1164"
></A
> <A
CLASS="indexterm"
NAME="AUTOID-1166"
></A
> Once you've seen how to connect the database and the Web, you can start learning how to write web applications by combining HTML, the language used to create web pages, with PL/SQL, the SQL-like language used to develop Oracle stored procedures. The next three sections explore the reasons for choosing these tools.</P
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="BOOK-CH-1-SECT-4.2.1"
>1.4.2.1 Why HTML?</A
></H4
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-1171"
></A
> HTML is based on a simple principle: a limited syntax composed of tags and attributes can define almost any document, from a quarterly report to an online catalog. Each tag affects the text between the start tag and the end tag. Tag attributes act like parameters that refine the tag's behavior. There are several reasons why HTML is an appealing user interface:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>HTML is easy to learn </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>HTML uses a simple, forgiving syntax to create documents. These documents can range from a text-only listing of all employees in a particular table to a complete data entry form that inserts or updates a record in a table. This simplicity is in stark contrast to the host of proprietary languages that try to be all things to all people.</P
></DD
><DT
CLASS="term"
>HTML is platform-neutral</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>A browser running on a PC, a Macintosh, or a Unix system will display a document in roughly the same way. Because virtually all browsers support HTML, you can concentrate on developing the contents of a page without worrying about how it will be distributed. If you build an online employee directory, anyone with a browser can access it through an HTML interface, regardless of the type of machine they have. </P
></DD
><DT
CLASS="term"
>HTML is simple to deploy </DT
><DD
CLASS="listitem"
><P
CLASS="para"
>With a browser and a TCP/IP connection, a user can access any application on your network by simply typing in the appropriate URL. Imagine trying to coordinate a similar system based on Oracle Forms. Use of HTML eliminates the version conflicts, SQL*Net conflicts, and configuration headaches that make being an application developer a real drag.</P
></DD
><DT
CLASS="term"
>HTML provides some protection from constant change</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>HTML is a non-proprietary, standards-based language. If a browser supports the base HTML language, it can display any HTML document, even if the document is 10 years old. This gives considerable freedom to you as a developer, because as long as browsers support HTML, a user can modify or change his machine however he wants, and your application will still work.</P
></DD
></DL
><P
CLASS="para"
>Despite all these advantages, HTML is not a panacea. There are some limitations that affect the way you design an application:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>HTML is not a programming language</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>HTML is a specification for marking up a document's content, not a programming language. It doesn't support variables, loops, conditionals, or have a robust event model, so you are forced to put all your program logic on the server. Scripting languages like JavaScript can help mitigate this problem (WebDB can even generate this type of scripting code for you automatically).</P
></DD
><DT
CLASS="term"
>HTML applications are stateless</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>HTTP, the underlying protocol of HTML, is a stateless protocol, meaning that it doesn't preserve information between connections. This seriously affects the way you must design web applications. We'll discuss this in later chapters.</P
></DD
><DT
CLASS="term"
>HTML interfaces are not as sophisticated as client/server interfaces</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>HTML is, at heart, a layout tool. Consequently, it doesn't support all the GUI widgets found in client/server development tools like Oracle Forms or PowerBuilder. Again, JavaScript can help mitigate this problem.</P
></DD
></DL
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="BOOK-CH-1-SECT-4.2.2"
>1.4.2.2 Why PL/SQL?</A
></H4
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-1208"
></A
> Combining HTML with PL/SQL gives us all we need to develop useful web systems that are powerful, easy to design, and easy to develop. The language offers several benefits to overworked developers:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>PL/SQL is easy to learn and use</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>PL/SQL is an evolutionary, not revolutionary, step for most IS developers because it's a straightforward extension of standard SQL that's ideally suited for database processing.</P
></DD
><DT
CLASS="term"
>PL/SQL fosters code reuse</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Packages (groups of procedures and functions) provide many of the benefits of object-oriented languages without the hassle of learning a brand new programming methodology. </P
></DD
><DT
CLASS="term"
>PL/SQL integrates with other Oracle tools</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>PL/SQL stored procedures are accessible from any SQL*Net or ODBC product, from Oracle Forms to Pro*C to Microsoft Access to Java. As a result, you can implement a business rule in the database as a PL/SQL procedure and use it in any frontend tool, rather than writing the same logic again and again for each development environment.</P
></DD
><DT
CLASS="term"
>PL/SQL is portable</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>PL/SQL is included with Oracle version 7 and above and is supported on all Oracle platforms.</P
></DD
><DT
CLASS="term"
>PL/SQL is fast</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Oracle8 introduced, and Oracle8<EM
CLASS="emphasis"
>i</EM
> refined, a host of performance improvements to PL/SQL. Additionally, packages are parsed, stored, and executed inside the database, providing superfast data access. Once loaded, these packages may be shared across multiple sessions, resulting in even better performance.</P
></DD
><DT
CLASS="term"
>PL/SQL is proven</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Millions of lines of production PL/SQL code are quietly humming away in companies across the world. While it may not have the sex appeal of some other technologies, PL/SQL has proven itself a scalable, robust solution in thousands of mission-critical applications.</P
></DD
></DL
><P
CLASS="para"
>The major downside of PL/SQL is that it's a proprietary language supported only on Oracle systems. If you are concerned about locking yourself into an Oracle-only solution, you should consider using Java.</P
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="BOOK-CH-1-SECT-4.2.3"
>1.4.2.3 So why not Java?</A
></H4
><P
CLASS="para"
>You're probably wondering why, if Java is the future of Oracle, you should bother with PL/SQL at all. The answer is pretty simple: almost all IS developers are prepared to take advantage of PL/SQL and its many capabilities without a great deal of new training. Java, on the other hand, demands a solid understanding of object-oriented design and programming (a technique substantially different from the structured programming model used by languages like COBOL or C) before you can begin using it effectively. If you're worried that PL/SQL is doomed to go the way of Latin, consider the following:</P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>The millions of lines of production PL/SQL code provide a wonderful disincentive against the wild-eyed radicalism of Java zealots.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Oracle's strategy acknowledges that there is no "one-size-fits-all" solution for every problem, and has repeatedly emphasized that Java and PL/SQL will coexist in the database and play off one another in the future.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>The performance improvements for PL/SQL in Oracle8<EM
CLASS="emphasis"
>i</EM
>, combined with the fact that WebDB is a PL/SQL application, bode well for Oracle's commitment to the language.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Finally, and most importantly, Oracle has publicly committed that it will support PL/SQL forever!</P
></LI
></UL
><P
CLASS="para"
>By the way, I'm not advocating Ludditism. Java is a very important and interesting language that you need to learn. In the interim, though, you can use PL/SQL to develop hundreds of useful web applications that will make your users very happy. Additionally, you won't have wasted any effort; these programs will continue to work even after you've mastered Java and fully adopted Oracle8<EM
CLASS="emphasis"
>i</EM
>. Finally, Oracle allows you to call PL/SQL procedures from inside a Java program and vice versa, allowing you to use the language most appropriate for the task at hand.</P
></DIV
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="BOOK-CH-1-SECT-4.3"
>1.4.3 Start Learning XML</A
></H3
><P
CLASS="para"
>Other than Java, XML is probably one of the most important technological advances to hit the Web in a long time, especially in the arena of electronic commerce, electronic data exchange, and integrating the various parts of ERP systems. In the last chapter of this book you'll learn how to create XML documents from inside the Oracle database, using PL/SQL.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_03.htm#BOOK-CH-1-SECT-3.8.1"
TITLE="1.3 Oracle's Solution&nbsp-- Oracle8i"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.3 Oracle's Solution&nbsp-- Oracle8i"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle Web Applications: PL/SQL Developer's Introduction"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch02_01.htm"
TITLE="2. Foundations"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2. Foundations"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>1.3 Oracle's Solution&nbsp-- Oracle8i</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>2. Foundations</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
