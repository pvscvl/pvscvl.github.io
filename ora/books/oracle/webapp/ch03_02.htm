<HTML
><HEAD
><TITLE
>[Chapter 3] 3.2 WebDB Architecture</TITLE
><META
NAME="DC.Creator"
CONTENT="Andrew Odewahn"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:35:43Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CDROM-1-56592-687-0E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-687-0E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle Web 8i"><META
NAME="DC.Title"
CONTENT="Oracle Web Applications: PL/SQL Developer's Introduction"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_01.htm"
TITLE="3. WebDB"><LINK
REL="prev"
HREF="ch03_01.htm"
TITLE="3.1 Overview of WebDB"><LINK
REL="next"
HREF="ch04_01.htm"
TITLE="4. Oracle Application Server (OAS)"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_01.htm"
TITLE="3.1 Overview of WebDB"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.1 Overview of WebDB"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. WebDB"
>Chapter 3<BR>WebDB</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch04_01.htm"
TITLE="4. Oracle Application Server (OAS)"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 4. Oracle Application Server (OAS)"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="BOOK-CH-3-SECT-2"
>3.2 WebDB Architecture</A
></H2
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2398"
></A
>  Because WebDB uses the database's native components, it is a scalable, powerful development tool for building content-driven sites on Oracle. Since it's essentially written in the database's native language, it eliminates the need for cumbersome layers like ODBC or JDBC.</P
><P
CLASS="para"
>WebDB's dirty little secret is that its wizards are really just PL/SQL code generators that act on normal database objects. When you create a user with WebDB, you are really creating a corresponding database schema, just as you would for any other Oracle user. When you use the table wizard, you are really just filling in the pieces of a CREATE TABLE command. When you build a form, you are really creating a PL/SQL package. The options you enter into these wizards tell WebDB how to create the corresponding database objects.</P
><P
CLASS="para"
>WebDB is a standalone product that contains everything you need to create a complete application. Two built-in components&nbsp;-- the PL/SQL gateway and the HTTP listener&nbsp;-- make this possible. <A
CLASS="xref"
HREF="ch03_02.htm#BOOK-CH-3-SECT-2.2.1"
>Figure 3.9</A
> illustrates the relationships among the database objects, UI components, shared components, roles, users, the PL/SQL gateway, and the HTTP listener.</P
><H4
CLASS="figure"
><A
CLASS="title"
NAME="BOOK-CH-3-FIG-9"
>Figure 3.9: The components of WebDB</A
></H4
><IMG
CLASS="graphic"
SRC="figs/owa.0309.gif"
ALT="Figure 3.9"><P
CLASS="para"
>In the following sections, we'll look at WebDB's PL/SQL gateway and its integrated HTTP listener.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="BOOK-CH-3-SECT-2.1"
>3.2.1 The PL/SQL Gateway</A
></H3
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2411"
></A
>  Once we've created our WebDB user interface components, we can use the PL/SQL gateway to execute them from the Web. The gateway is situated between the database and the HTTP listener. The HTTP listener forwards a request for a component to the PL/SQL gateway, which executes the procedure and stores its output in a buffer. The HTTP listener then sends the contents of this buffer, which now contains the HTML instructions that create the component, back to the user's browser. </P
><P
CLASS="para"
>Users call a procedure using a URL that specifies the name of the package (which has the same name as the component), the procedure to execute, and any parameters required by the procedure. The PL/SQL gateway uses this information to call the correct procedure. Each procedure begins with a security check to make sure the user attempting to access the component has the required permissions.</P
><P
CLASS="para"
>The gateway uses DADs to authenticate web users. A DAD is a unique name included as part of a URL. The appearance of a DAD name in the URL signals the HTTP listener that the URL is requesting a WebDB component. The PL/SQL gateway combines the DAD configuration information with the other parts of the URL&nbsp;-- the package name, procedure name, and parameters&nbsp;-- to execute the requested procedure. The URL syntax is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>http://<I
CLASS="replaceable"
>webDB_server:port</I
>/<I
CLASS="replaceable"
>dad_name</I
>/<I
CLASS="replaceable"
>package.procedure?parm1=foo</I
></PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="BOOK-CH-3-SECT-2.2"
>3.2.2 Configuring a Database Access Descriptor (DAD)</A
></H3
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2423"
></A
> The DAD configuration information specifies a unique name for the DAD and various other configuration information. Again, the name of the DAD is used in the URL to map to the database schema specified in the DAD. <A
CLASS="xref"
HREF="ch03_02.htm#BOOK-CH-3-SECT-2.2.1"
>Figure 3.10</A
> shows the WebDB interface used to manage these settings (in this case, WebDB appears in the path section of the URL to the WebDB server).</P
><H4
CLASS="figure"
><A
CLASS="title"
NAME="BOOK-CH-3-FIG-10"
>Figure 3.10: DAD administration in WebDB</A
></H4
><IMG
CLASS="graphic"
SRC="figs/owa.0310.gif"
ALT="Figure 3.10"><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="BOOK-CH-3-SECT-2.2.1"
>3.2.2.1 DAD parameters</A
></H4
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2432"
></A
> The DAD parameters are:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>Database Access Descriptor Name</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2440"
></A
> The unique DAD name. When it appears in a URL, the DAD name signals the HTTP listener to forward the request to the PL/SQL gateway. This parameter is always required.</P
></DD
><DT
CLASS="term"
>Oracle User Name</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2446"
></A
> The Oracle schema that will execute the procedure. If this name is blank, the user is prompted for a username and password.</P
></DD
><DT
CLASS="term"
>Oracle Password</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2452"
></A
> The password for the Oracle schema. If this is blank, the user is prompted for authentication information.</P
></DD
><DT
CLASS="term"
>Oracle Connect String</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2458"
></A
> The connect string of the database running WebDB. The local database (ORA_SID) is used as the default if the field is left blank.</P
></DD
><DT
CLASS="term"
>Maximum Number of Worker Threads</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2464"
></A
> The maximum number of threads the WebDB server will use to process requests.</P
></DD
><DT
CLASS="term"
>Keep Database Connection Open between Requests?</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2470"
></A
> If this parameter is set to "yes," the listener keeps the database connection open after the request is finished. The next time the user makes a request from the DAD, the listener can open the connection rather than establishing a new one. This improves performance dramatically, since establishing the initial connection is usually quite time consuming. However, this is not the same as a persistent connection; state information such as the values of PL/SQL variables is lost after the request. If the parameter is set to "No," the connection is closed after each request, resulting in poorer performance.</P
></DD
><DT
CLASS="term"
>Default (Home) Page</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2476"
></A
> The default procedure to execute when the URL omits a procedure name.</P
></DD
><DT
CLASS="term"
>Document Table</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2482"
></A
> The table used to store files uploaded to WebDB.</P
></DD
><DT
CLASS="term"
>Document Access Path</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2488"
></A
> The path element used to retrieve an uploaded file.</P
></DD
><DT
CLASS="term"
>Document Access Procedure</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2494"
></A
> The procedure to execute immediately after an uploaded file is retrieved.</P
></DD
></DL
><BLOCKQUOTE
CLASS="tip"
><P
CLASS="para"
><STRONG
>TIP:</STRONG
> WebDB uses <I
CLASS="firstterm"
>basic authentication</I
>, a standard HTTP mechanism in which the user must supply a username and password before accessing the site. The password is transmitted as plain text (unencrypted) across the Web, making it fairly insecure. A second method, <I
CLASS="firstterm"
>digest authentication</I
>, is more secure because it encrypts the password before transmission. Unfortunately, while this method is supported in OAS, it is not (at least at the time of this writing) supported in WebDB.</P
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="BOOK-CH-3-SECT-2.2.2"
>3.2.2.2 Configuration file</A
></H4
><P
CLASS="para"
>The configuration information for the PL/SQL gateway is stored in the file <I
CLASS="filename"
>%ORACLE_HOME%/listener/wdbsvr.app</I
>. Here's an example configuration file that underlies the entries in <A
CLASS="xref"
HREF="ch03_02.htm#BOOK-CH-3-SECT-2.2.1"
>Figure 3.10</A
>:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>[DAD_WebDB]
;connect_string   = 
;password   = 
;username   = 
default_page   =  WEBDB.home
document_table   =  WEBDB.wwv_document
document_path   =  docs
document_proc   =  WEBDB.wwv_testdoc.process_download
;name_prefix   = 
;always_describe   = 
;after_proc   = 
reuse   =  Yes
connmax   =  4
;</PRE
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="BOOK-CH-3-SECT-2.3"
>3.2.3 The HTTP Listener</A
></H3
><P
CLASS="para"
>The HTTP listener, the last major component of WebDB, is basically a miniature web server. It has the following characteristics:</P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>It supports HTTP 1.0.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>It can serve static files residing in mapped directories.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>It supports application-specific MIME type mapping.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>It is multithreaded to provide increased performance.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>It is specifically designed to integrate with the Oracle database via PL/SQL applications. Although the listener was added to make WebDB a standalone product, it can be used to develop any PL/SQL toolkit application.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>It does not currently (as of WebDB version 2.0.5) support HTTP 1.1, SSL, or CGI; Oracle is considering adding support for SSL, CGI, Java(TM) Servlets, Java Server Pages, and XML.</P
></LI
></UL
><P
CLASS="para"
>The HTTP listener configuration parameters fall into three general categories: server settings, virtual directory mappings, and MIME type mappings.</P
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="BOOK-CH-3-SECT-2.3.1"
>3.2.3.1 Server settings</A
></H4
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2526"
></A
> The server settings govern the listener's general behavior. Parameters of note include: </P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>Server Port</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2533"
></A
> The port setting determines the communications port on which WebDB "listens" for incoming requests. The default is 80. If you choose another value, URLs referencing the site must specify this value. </P
></DD
><DT
CLASS="term"
>Default Mime Type</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2539"
></A
> The default MIME type returned for types that are not explicitly mapped.</P
></DD
><DT
CLASS="term"
>Logging Level</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2545"
></A
> The listener maintains a number of logs that can track requests and errors. There are separate log files for the listener and PL/SQL gateway, as well as for each thread. Log files all end with a  .LOG extension; log files for individual threads include the thread number as an index. Values for the logging level include:</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>None</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>No logging</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Standard</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Log requests using standard NCSA format</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Extended</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Log requests using extended NCSA format</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Error</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Log requests using NCSA format, including extended error information</P
></DD
></DL
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="BOOK-CH-3-SECT-2.3.2"
>3.2.3.2 Virtual directory mappings</A
></H4
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2570"
></A
> The virtual directory mappings allow the listener to return static files by mapping physical directories to aliases used as part of a URL. Mappings are made using multiple name/value pairs consisting of:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>Physical directory</DT
><DD
CLASS="listitem"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2577"
></A
> The physical directory on the machine running WebDB. Once mapped, all files and subdirectories are accessible from the Web. </P
></DD
><DT
CLASS="term"
>Virtual directory</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The corresponding alias for the physical directory. This alias is used as part of the URL to refer to a physical directory.</P
></DD
></DL
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="BOOK-CH-3-SECT-2.3.3"
>3.2.3.3 MIME type mappings</A
></H4
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2586"
></A
> The MIME type mappings map a specific type of file to a MIME type. The listener is preconfigured with most of the standard mappings (e.g., <CODE
CLASS="literal"
>image/jpeg</CODE
> to files with the <EM
CLASS="emphasis"
>.JPG</EM
> extension). You can extend these defaults with your own mappings (e.g., <CODE
CLASS="literal"
>application/rpt</CODE
> to files with the <EM
CLASS="emphasis"
>.RPT</EM
> extension). Mappings are made using multiple name/value pairs consisting of:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>MIME type</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The MIME type returned for the specified set of corresponding file extensions.</P
></DD
><DT
CLASS="term"
>File extension</DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-2601"
></A
> The file extensions mapped to the MIME type. These mappings are case sensitive, so you will often find the same extension listed in various ways (e.g., .<I
CLASS="filename"
>jpg</I
>, .<I
CLASS="filename"
>JPG</I
>, .<I
CLASS="filename"
>jpeg</I
>, .<I
CLASS="filename"
>JPEG</I
>).</P
></DD
></DL
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="BOOK-CH-3-SECT-2.3.4"
>3.2.3.4 Configuration file</A
></H4
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-2610"
></A
> The configuration information for the HTTP listener is stored in the file <I
CLASS="filename"
>%ORACLE_HOME%/listener/wdbsvr.cfg</I
>. The following listing is an example configuration file:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>;
[SERVER]
;HomePage = 
DefaultMimeType = application/octet-stream
LoggingLevel = Extended
;MaxFileCache = 
MaxFileThreads = 3
MaxDispatcherThreads = 7
;
[DirMaps]
D:\ORANT\webdb\images\  /images/
;
[MIMETypes]
text/html  htm   html
image/jpeg  jpg   jpeg  JPG
text/plain  txt   ksh   lst
application/pdf  pdf
application/powerpoint  ppt   PPT
application/msword  doc   dot   DOC  DOT
application/x-tar  tar   TAR
application/zip  zip
text/edi  edi
application/excel  xls   XLS
text/xml  xml
;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>WebDB is a big product with a huge set of features, and this overview has just scratched the surface of its many capabilities. WebDB comes with several manuals providing step-by-step instructions on configuring and using the product. Additionally, you can consult Rick Greenwald's <EM
CLASS="emphasis"
>Oracle WebDB Bible</EM
> (IDG Books Worldwide) for a thorough treatment of the subject.  <A
CLASS="indexterm"
NAME="AUTOID-2616"
></A
> </P
></DIV
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_01.htm"
TITLE="3.1 Overview of WebDB"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.1 Overview of WebDB"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle Web Applications: PL/SQL Developer's Introduction"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle Web Applications: PL/SQL Developer's Introduction"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch04_01.htm"
TITLE="4. Oracle Application Server (OAS)"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 4. Oracle Application Server (OAS)"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.1 Overview of WebDB</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>4. Oracle Application Server (OAS)</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
