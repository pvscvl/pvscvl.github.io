<HTML
><HEAD
><TITLE
>[Chapter 5] 5.25 PLVtab: Table Interface</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:25:53Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-238-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-238-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL SQL Oracle Packages"><META
NAME="DC.Title"
CONTENT="Advanced Oracle PL/SQL Programming with Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch05_01.htm"
TITLE="5. PL/Vision Package Specifications"><LINK
REL="prev"
HREF="ch05_24.htm#ch05-SECT-24.0.1"
TITLE="5.24 PLVstk: Stack Manager"><LINK
REL="next"
HREF="ch05_26.htm#ch05-SECT-26.0.2"
TITLE="5.26 PLVtkn: Token Table Interface"></HEAD>
<BODY><DIV CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Advanced Oracle PL/SQL Programming with Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_24.htm#ch05-SECT-24.0.1"
TITLE="5.24 PLVstk: Stack Manager"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.24 PLVstk: Stack Manager"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch05_01.htm"
TITLE="5. PL/Vision Package Specifications"
>Chapter 5<BR>PL/Vision Package Specifications</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_26.htm#ch05-SECT-26.0.2"
TITLE="5.26 PLVtkn: Token Table Interface"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.26 PLVtkn: Token Table Interface"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch05-SECT-25"
>5.25 PLVtab: Table Interface</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch05-idx-1001490-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001490-1"
></A
>The PLVtab (PL/Vision TABle) package makes it easier to declare, use, and display the contents of <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> tables by providing predefined <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table types and programs. See <A
CLASS="xref"
HREF="ch08_01.htm"
>Chapter 8, <CITE
CLASS="chapter"
>PLVtab: Easy Access to PL/SQL Tables</CITE
></A
> for details.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-25.0.1"
>5.25.1 <A
CLASS="indexterm"
NAME="ch05-idx-1001491-0"
></A
>Predefined table TYPEs</A
></H3
><P
CLASS="para"
>Since these table <SPAN
CLASS="acronym"
>TYPES</SPAN
> are already defined in the PLVtab package, you can use them to declare your own <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> tables&nbsp;-- and not deal with the cumbersome syntax.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>TYPE boolean_table IS TABLE OF BOOLEAN INDEX BY BINARY_INTEGER;
TYPE date_table IS TABLE OF DATE INDEX BY BINARY_INTEGER;
TYPE integer_table IS TABLE OF INTEGER INDEX BY BINARY_INTEGER;
TYPE number_table IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;
TYPE vc30_table IS TABLE OF VARCHAR2(30) INDEX BY BINARY_INTEGER;
TYPE vc60_table IS TABLE OF VARCHAR2(60) INDEX BY BINARY_INTEGER;
TYPE vc80_table IS TABLE OF VARCHAR2(80) INDEX BY BINARY_INTEGER;
TYPE vc2000_table IS TABLE OF VARCHAR2(2000) INDEX BY BINARY_INTEGER;
TYPE vcmax_table IS TABLE OF VARCHAR2(32767) INDEX BY BINARY_INTEGER;</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-25.0.2"
>5.25.2 <A
CLASS="indexterm"
NAME="ch05-idx-1001492-0"
></A
>The empty PL/SQL tables</A
></H3
><P
CLASS="para"
>An empty <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table is a structure in which no rows have been defined. The only way to delete all the rows from a <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table is to assign an empty table to that table. You can use these predefined <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> tables to accomplish this task easily.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>empty_boolean boolean_table;
empty_date date_table;
empty_integer integer_table;
empty_number number_table;
empty_vc30 vc30_table;
empty_vc60 vc60_table;
empty_vc80 vc80_table;
empty_vc2000 vc2000_table;
empty_vcmax vcmax_table;</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-25.0.3"
>5.25.3 Toggle for showing header</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE showhdr;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001493-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001493-1"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001493-2"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that a header be displayed with the contents of the table (the header text is passed in the call to the <KBD
CLASS="command"
>display</KBD
> procedure). This is the default.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE noshowhdr;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001494-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns off the display of the header text with the table contents.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION showing_header RETURN BOOLEAN;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001495-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns TRUE if the header is being displayed.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-25.0.4"
>5.25.4 <A
CLASS="indexterm"
NAME="ch05-idx-1001496-0"
></A
>Toggle for showing row numbers</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE showrow;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001497-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that the row number be displayed with the row contents.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE noshowrow;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001498-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns off display of the row number (the default).</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION showing_row RETURN BOOLEAN;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001499-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns TRUE if the row number is being displayed.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-25.0.5"
>5.25.5 Toggle for showing blanks in row</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE showblk;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001500-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001500-1"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001500-2"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001500-3"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that blank lines be displayed. A NULL row will display as the <KBD
CLASS="command"
>p.fornull</KBD
> NULL substitution value. A line consisting only of blanks will be displayed as the word BLANKS.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE noshowblk;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that blank lines be displayed as blank lines.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION showing_blk RETURN BOOLEAN;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns TRUE if showing the contents of blank lines.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-25.0.6"
>5.25.6 Setting the row prefix</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE set_prefix (prefix_in IN VARCHAR2 := NULL);</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001501-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001501-1"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Sets the character(s) used as a prefix to the text displayed before the value in the table's row (default is NULL).</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION prefix RETURN VARCHAR2;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001502-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the current prefix character(s).</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-25.0.7"
>5.25.7 Saving and restoring settings</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE save;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001503-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001503-1"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Saves the current settings for the toggles to private variables in the package.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE restore;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Restores the settings for the toggles from the saved values.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-25.0.8"
>5.25.8 Displaying a PLVtab table</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE display </CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001504-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (tab_in IN boolean_table|date_table|number_table|integer_table, </CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    end_in IN INTEGER,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    hdr_in IN VARCHAR2 := NULL,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    start_in IN INTEGER := 1,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    failure_threshold_in IN INTEGER := 0,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    increment_in IN INTEGER := +1);</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE display </CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (tab_in IN</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    vc30_table|vc60_table|vc80_table|vc2000_table|vcmax_table, </CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    end_in IN INTEGER,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    hdr_in IN VARCHAR2 := NULL,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    start_in IN INTEGER := 1,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    failure_threshold_in IN INTEGER := 0,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    increment_in IN INTEGER := +1);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The <KBD
CLASS="command"
>display</KBD
> procedure is overloaded nine times, for a variety of datatypes. The first version above shows the overloading for non-string datatypes. The second version shows all the different types of string <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> tables supported by the <KBD
CLASS="command"
>PLVtab.display</KBD
> procedure.</P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_24.htm#ch05-SECT-24.0.1"
TITLE="5.24 PLVstk: Stack Manager"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.24 PLVstk: Stack Manager"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Oracle PL/SQL Programming with Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_26.htm#ch05-SECT-26.0.2"
TITLE="5.26 PLVtkn: Token Table Interface"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.26 PLVtkn: Token Table Interface"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>5.24 PLVstk: Stack Manager</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>5.26 PLVtkn: Token Table Interface</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly & Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
