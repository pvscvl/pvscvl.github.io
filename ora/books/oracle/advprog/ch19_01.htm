<HTML
><HEAD
><TITLE
>[Chapter 19] PLVdyn and PLVfk: Dynamic SQL and PL/SQL</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:30:31Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-238-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-238-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL SQL Oracle Packages"><META
NAME="DC.Title"
CONTENT="Advanced Oracle PL/SQL Programming with Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="part05.htm"
TITLE="V. Plug-and-Play Packages"><LINK
REL="prev"
HREF="part05.htm"
TITLE="V. Plug-and-Play Packages"><LINK
REL="next"
HREF="ch19_02.htm"
TITLE="19.2 Declarative Programming in PL/SQL"></HEAD>
<BODY><DIV CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Advanced Oracle PL/SQL Programming with Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="part"
HREF="part05.htm"
TITLE="V. Plug-and-Play Packages"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: V. Plug-and-Play Packages"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
>Chapter 19</SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_02.htm"
TITLE="19.2 Declarative Programming in PL/SQL"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 19.2 Declarative Programming in PL/SQL"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="chapter"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="plsql-adv-ch-19"
>19. PLVdyn and PLVfk: Dynamic SQL and PL/SQL</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="sect1"
HREF="#ch19-32938"
TITLE="19.1 About Plug-and-Play"
>About Plug-and-Play</A
><BR><A
CLASS="sect1"
HREF="ch19_02.htm"
TITLE="19.2 Declarative Programming in PL/SQL"
>Declarative Programming in PL/SQL</A
><BR><A
CLASS="sect1"
HREF="ch19_03.htm"
TITLE="19.3 The Dynamic Packages of PL/Vision"
>The Dynamic Packages of PL/Vision</A
><BR><A
CLASS="sect1"
HREF="ch19_04.htm#ch19-SECT-4.1.7"
TITLE="19.4 PLVdyn: A Code Layer over DBMS_SQL"
>PLVdyn: A Code Layer over DBMS_SQL</A
><BR><A
CLASS="sect1"
HREF="ch19_05.htm#ch19-SECT-5.0.4"
TITLE="19.5 DML Operations"
>DML Operations</A
><BR><A
CLASS="sect1"
HREF="ch19_06.htm#ch19-SECT-6.4"
TITLE="19.6 PLVfk: Generic Foreign Key Lookups"
>PLVfk: Generic Foreign Key Lookups</A
></P
><P
></P
></DIV
><P
CLASS="para"
>This chapter describes several packages that provide a programmatic interface to the builtin <A
CLASS="indexterm"
NAME="ch19-idx-999287-0"
></A
><A
CLASS="indexterm"
NAME="ch19-idx-999287-1"
></A
>DBMS_SQL package. These packages are the first in the "plug-and-play" category. Before plunging into a description of the specifics of the packages, I want to explain what I mean here by "plug-and-play" in <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> code.</P
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch19-32938"
>19.1 About Plug-and-Play</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch19-idx-999288-0"
></A
>Plug-and-play packages allow you to replace whole sections of code with programs from PL/Vision packages. You essentially "plug-in" <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> code and immediately gain benefits in your application. The best example of a PL/Vision plug-and-play component is the PLVexc (PL/Vision EXCeption handling) package. It provides very high-level exception-handling programs so that individual developers can simply call a procedure that describes the desired action, such as "record and continue," and PLVexc figures out what to do. It makes use of PLVlog to automatically write errors to the log of your choice (database table, <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table, etc.). </P
><P
CLASS="para"
>To give you a sense of plug-and-play in <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> code, consider the following exception section. It has two different exception handlers: one for NO_DATA_FOUND and one for all other exceptions. When NO_DATA_FOUND is raised, I request that PLVexc display a message to the user, record the error, and then stop the program. When any other error occurs, I request that PLVexc record the error and then continue processing.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      PLVexc.recNstop ('Company has not been located.');
   WHEN OTHERS
   THEN
      PLVexc.recNgo;
END;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>So PLVexc does a lot of work for me. What's new about that? You build a module encapsulating multiple actions and then use it over and over again. That's the central concept of modularization and black-boxing of logic. Why give it a fancy name like "plug-and-play"? Maybe it's just a difference of semantics. But maybe there's more to it. </P
><P
CLASS="para"
>The package structure of <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> offers new opportunities when it comes to modularizing code. You can think of a package as nothing more than a list of programs, a convenient way to collect together related modules. With this perspective, you will not break new ground with packages. If, on the other hand, you look upon the package as a self-contained environment or product or object, with its own internal data structures, its own set of rules, you will find that you can construct a whole&nbsp;-- the package&nbsp;-- that is considerably greater than the sum of its parts (the individual elements defined in the package). </P
><P
CLASS="para"
>The PLVexc package certainly hides a lot of implementational complexity from its users. The real power of PLVexc is, however, reflected not so much in what or how much it hides. Rather, its strength resides more in what it lets you accomplish in your own programs&nbsp;-- and how you go about doing it.</P
><P
CLASS="para"
>For detailed information about the PLVexc package, see <A
CLASS="xref"
HREF="ch22_01.htm"
>Chapter 22, <CITE
CLASS="chapter"
>Exception Handling</CITE
></A
>.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="part"
HREF="part05.htm"
TITLE="V. Plug-and-Play Packages"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: V. Plug-and-Play Packages"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Oracle PL/SQL Programming with Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_02.htm"
TITLE="19.2 Declarative Programming in PL/SQL"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 19.2 Declarative Programming in PL/SQL"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>V. Plug-and-Play Packages</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>19.2 Declarative Programming in PL/SQL</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly & Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
