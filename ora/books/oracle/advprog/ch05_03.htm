<HTML
><HEAD
><TITLE
>[Chapter 5] 5.3 PLV: Top-Level Constants and Functions</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:24:07Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-238-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-238-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL SQL Oracle Packages"><META
NAME="DC.Title"
CONTENT="Advanced Oracle PL/SQL Programming with Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch05_01.htm"
TITLE="5. PL/Vision Package Specifications"><LINK
REL="prev"
HREF="ch05_02.htm#ch05-SECT-2.0.1"
TITLE="5.2 p: a DBMS_OUTPUT Substitute"><LINK
REL="next"
HREF="ch05_04.htm#ch05-SECT-4.0.1"
TITLE="5.4 PLVcase: PL/SQL Code Conversion"></HEAD>
<BODY><DIV CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Advanced Oracle PL/SQL Programming with Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_02.htm#ch05-SECT-2.0.1"
TITLE="5.2 p: a DBMS_OUTPUT Substitute"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.2 p: a DBMS_OUTPUT Substitute"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch05_01.htm"
TITLE="5. PL/Vision Package Specifications"
>Chapter 5<BR>PL/Vision Package Specifications</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_04.htm#ch05-SECT-4.0.1"
TITLE="5.4 PLVcase: PL/SQL Code Conversion"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.4 PLVcase: PL/SQL Code Conversion"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch05-SECT-3"
>5.3 PLV: Top-Level Constants and Functions</A
></H2
><P
CLASS="para"
>The PLV (PL/Vision) package provides a single collection point for constants and basic functions used throughout the PL/Vision library of packages. See <A
CLASS="xref"
HREF="ch06_01.htm"
>Chapter 6, <CITE
CLASS="chapter"
>PLV: Top-Level Constants and Functions </CITE
></A
> for details.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-3.0.1"
>5.3.1 PL/Vision constants</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> dbtab CONSTANT VARCHAR2(2) := 'DB';</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000400-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>pstab CONSTANT VARCHAR2(2) := 'PS';</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000401-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>file CONSTANT VARCHAR2(2) := 'F';</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000402-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>string CONSTANT VARCHAR2(2) := 'S';</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000403-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>stdout CONSTANT VARCHAR2(2) := 'SO';</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000404-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Names of different repositories supported within PL/Vision. These are mostly used by PLVio and by users of PLVio to set up the source and target repositories for <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> code.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> c_datemask CONSTANT VARCHAR2(100) :=</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000405-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   'FMMonth DD, YYYY FMHH24:MI:SS'</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The default date format mask for PL/Vision<A
CLASS="indexterm"
NAME="ch05-idx-1000406-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000406-1"
></A
>.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-3.0.2"
>5.3.2 Anchoring datatypes</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> plsql_identifier VARCHAR2(100) := 'IRRELEVANT';</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>max_varchar2 VARCHAR2(32767) := 'IRRELEVANT';</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>vcmax_len CONSTANT INTEGER := 32767;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000407-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The <KBD
CLASS="command"
>plsql_identifier</KBD
> variable<A
CLASS="indexterm"
NAME="ch05-idx-1000408-0"
></A
> offers a standard format for the declaration of any variables that will hold <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> identifiers, such as table and column names.</P
><P
CLASS="para"
>The <KBD
CLASS="command"
>max_varchar2</KBD
> variable<A
CLASS="indexterm"
NAME="ch05-idx-1000409-0"
></A
> offers a standard format for the declaration of any variables that require the maximum possible size for VARCHAR2 variables, which is 32,767 bytes and also reflected by the value of the <KBD
CLASS="command"
>vcmax_len</KBD
> constant.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-3.0.3"
>5.3.3 Setting the date format mask</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE set_datemask (datemask_in IN VARCHAR2 := c_datemask);</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000410-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Sets the string used as the default date format mask within PL/Vision.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION datemask RETURN VARCHAR2;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000411-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the string used as the default date format mask within PL/Vision.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-3.0.4"
>5.3.4 Setting the NULL substitution value<A
CLASS="indexterm"
NAME="ch05-idx-1000414-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000414-1"
></A
></A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE set_nullval (nullval_in IN VARCHAR2);</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000412-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Sets the string used as the substitution value for NULLs within PL/Vision.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION nullval RETURN VARCHAR2;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000413-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the current NULL substitution value.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-3.0.5"
>5.3.5 Assertion routines<A
CLASS="indexterm"
NAME="ch05-idx-1000421-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000421-1"
></A
></A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> assertion_failure EXCEPTION;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000426-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Exception raised by the various assertion routines when the assertion fails.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE assert (bool_in IN BOOLEAN, stg_in IN VARCHAR2 := NULL);</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000427-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Does nothing if the Boolean argument evaluates to TRUE. Otherwise (for FALSE <EM
CLASS="emphasis"
>or</EM
> NULL), it raises the <KBD
CLASS="command"
>assertion_failure</KBD
> exception and displays the message. </P
></DD
></DL
><P
CLASS="para"
>This same behavior holds for the other assertion routines shown below.</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE assert_notnull</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000428-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (val_in IN VARCHAR2, stg_in IN VARCHAR2 := NULL);</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE assert_notnull</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (val_in IN DATE, stg_in IN VARCHAR2 := NULL);</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE assert_notnull</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (val_in IN NUMBER, stg_in IN VARCHAR2 := NULL);</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE assert_notnull</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (val_in IN BOOLEAN, stg_in IN VARCHAR2 := NULL);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Overloadings for the NOT <SPAN
CLASS="acronym"
>NULL</SPAN
> assertion logic. </P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE assert_inrange</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000429-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (val_in IN DATE, </CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    start_in IN DATE := SYSDATE, end_in IN DATE := SYSDATE+1,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    stg_in IN VARCHAR2 := NULL, truncate_in IN BOOLEAN := TRUE);</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE assert_inrange</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (val_in IN NUMBER, start_in IN NUMBER, end_in IN NUMBER, </CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    stg_in IN VARCHAR2 := NULL);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Overloadings of "in range" assertions for both date and numeric information.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-3.0.6"
>5.3.6 Miscellaneous programs</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION boolstg (bool_in IN BOOLEAN, stg_in IN VARCHAR2 := NULL)</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000430-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>RETURN VARCHAR2;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns a string representing the value of the Boolean argument: TRUE if the Boolean argument is TRUE, FALSE if FALSE, and NULL if NULL.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION errm (code_in IN INTEGER := SQLCODE) RETURN VARCHAR2;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000431-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the error message provided by SQLERRM. Encapsulation inside this function allows SQLERRM to be referenced inside a <SPAN
CLASS="acronym"
>SQL</SPAN
> statement.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION now RETURN VARCHAR2;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000432-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch05-idx-1000434-0"
></A
>Returns the current date and time using the current PL/Vision date format mask.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE pause (secs_in IN INTEGER);</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000433-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000433-1"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch05-idx-1000435-0"
></A
>Pauses your <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> program for the specified number of seconds.<A
CLASS="indexterm"
NAME="ch05-idx-1000436-0"
></A
></P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_02.htm#ch05-SECT-2.0.1"
TITLE="5.2 p: a DBMS_OUTPUT Substitute"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.2 p: a DBMS_OUTPUT Substitute"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Oracle PL/SQL Programming with Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_04.htm#ch05-SECT-4.0.1"
TITLE="5.4 PLVcase: PL/SQL Code Conversion"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.4 PLVcase: PL/SQL Code Conversion"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>5.2 p: a DBMS_OUTPUT Substitute</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>5.4 PLVcase: PL/SQL Code Conversion</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly & Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
