<HTML>

<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
<HEAD>
<TITLE>Index</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<P><A HREF="../index.htm"><IMG SRC="../gifs/smbanns.gif" ALT="Book Home" BORDER=0 usemap="#srchmap"><MAP NAME="srchmap"><AREA SHAPE="RECT" COORDS="0,0,466,65" HREF="../index.htm" ALT="Book Home"><AREA SHAPE="RECT" COORDS="467,0,514,18" HREF="../jobjects/fsearch.htm" ALT="Search this book"></MAP></A><P>

<FONT SIZE="-1">
<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| <A HREF="idx_c.htm">C</A>
| <A HREF="idx_d.htm">D</A>
| <A HREF="idx_e.htm">E</A>
| <A HREF="idx_f.htm">F</A>
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| <A HREF="idx_i.htm">I</A>
| <A HREF="idx_k.htm">K</A>
| <A HREF="idx_l.htm">L</A>
| <A HREF="idx_m.htm">M</A>
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| P
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_y.htm">Y</A>
| <A HREF="idx_z.htm">Z</A></FONT>

<H1>Index: P</H1>

<DL>
<DT><A NAME="p-package">p package</A>
<DD><DL>
  <DT><A HREF="../ch02_08.htm">2.8.1.1. Supporting many data combinations</A>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
  <DT><A HREF="../ch05_02.htm#ch05-SECT-2.0.1">5.2. p: a DBMS_OUTPUT Substitute</A>
  <DT><A HREF="../ch07_01.htm">7. p: A Powerful Substitute for DBMS_OUTPUT</A>
  <DT>l
: (see <A HREF="idx_l.htm">l procedure</A>)
  <DT>output from
: <A HREF="../ch07_04.htm">7.4. Controlling Output from p</A>
</DL>
<DT><A NAME="package-libraries">package libraries</A>
: <A HREF="../ch01_05.htm#ch01-SECT-5.3">1.5.2. Prebuilt Packages</A>
<DT><A NAME="packages">packages</A>
<DD><DL>
  <DT>(see also <A HREF="idx_m.htm">modularizing</A>)
  <DT><A HREF="../appa_01.htm">A.1.6. Builtin Packages</A>
  <DT><A HREF="../ch01_01.htm">1.1. What Is a PL/SQL Package?</A>
  <DT><A HREF="../ch02_09.htm#ch02-SECT-9.2">2.9. Modularizing for Maintainable Packages</A>
  <DT><A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.6. Generating a package</A>
  <DT>access to elements
: <A HREF="../ch01_04.htm#ch01-SECT-4.1">1.4.4. Access to Package Elements</A>
  <DT>building
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6. Building Packages</A>
  <DT>built-in
: <A HREF="../appa_02.htm#appa-SECT-2.1">A.2.6. Builtin Packages</A>
  <DT>codependency
: <A HREF="../ch02_04.htm">2.4.1. Creating Codependent Packages</A>
  <DT>effective coding of
: <A HREF="../ch02_01.htm">2. Best Practices for Packages</A>
  <DT>exception
: (see <A HREF="idx_p.htm">PLVexc packages</A>)
  <DT>exception section
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.3.2. The exception section</A>
  <DT>flexibility
: <A HREF="../ch02_06.htm#ch02-SECT-6.3.1">2.6. Building Flexibility Into Your Packages</A>
  <DT>generating
: <A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.1. Generating a Package</A>
  <DT>help
: (see <A HREF="idx_d.htm">documentation</A>)
  <DT>hiding elements of
  <DD><DL>
    <DT>
<A HREF="../ch01_03.htm#ch01-SECT-3.1">1.3.1. Enforced Information Hiding</A>
  <DT><A HREF="../ch02_07.htm">2.7. Building Windows Into Your Packages</A>
    <DT><A HREF="../ch02_10.htm#ch02-SECT-10.5">2.10. Hiding Package Data</A>
  </DL>
  <DT>in PL/Vision
  <DD><DL>
    <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2. PL/Vision Package Bundles</A>
    <DT><A HREF="../ch04_03.htm#ch04-SECT-3.2">4.3.5. Creating the PL/Vision Packages</A>
    <DT><A HREF="../ch05_01.htm">5. PL/Vision Package Specifications</A>
  </DL>
  <DT>initializing
  <DD><DL>
    <DT><A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.3. The Initialization Section</A>
    <DT><A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.5.2. Asserting the purity level of the initialization section</A>
  </DL>
  <DT>interface
<DD><DL><DT>
<A HREF="../ch02_05.htm#ch02-SECT-5.3">2.5. Constructing the Optimal Interface to Your Package</A>

<DT> <A HREF="../ch02_10.htm#ch02-SECT-10.5">2.10.3. Simplifying Package Interfaces</A>
  </DL><DT>layering
: <A HREF="../ch02_09.htm#ch02-SECT-9.2">2.9. Modularizing for Maintainable Packages</A>
  <DT>memory architecture
: <A HREF="../ch01_04.htm#ch01-SECT-4.1">1.4.3. The Memory-Resident Architecture of Packages</A>
  <DT>memory requirements
: <A HREF="../ch04_03.htm#ch04-SECT-3.2">4.3.2. Storage Requirements</A>
  <DT>multiple, constructing
: <A HREF="../ch02_11.htm">2.11. Simultaneous Construction of Multiple Packages</A>
  <DT>naming
: <A HREF="../ch02_03.htm">2.3. Selecting Package Names</A>
  <DT>online help
: (see <A HREF="idx_p.htm">PLVhlp package</A>)
  <DT>ordering elements of
: <A HREF="../ch02_02.htm">2.2.1. Choosing the Order of Elements</A>
  <DT>package body
  <DD><DL>
    <DT><A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6. Building Packages</A>
    <DT><A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.2. The Package Body</A>
  </DL>
  <DT>package specification
  <DD><DL>
    <DT><A HREF="../ch01_04.htm#ch01-SECT-4.1">1.4.1. The Package Specification</A>
    <DT><A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6. Building Packages</A>
  </DL>
  <DT>PL/SQL
: <A HREF="../ch19_02.htm">19.2. Declarative Programming in PL/SQL</A>
  <DT>PLVctlg table
: <A HREF="../ch18_02.htm#ch18-SECT-2.2">18.2.2.1. PLVctlg table</A>
  <DT>recompiling
: <A HREF="../ch02_04.htm">2.4. Organizing Package Source Code</A>
  <DT>referencing elements of
: <A HREF="../ch01_04.htm#ch01-SECT-4.1">1.4.2. Referencing Package Elements</A>
  <DT>synonyms for
: <A HREF="../ch04_03.htm#ch04-SECT-3.2">4.3.6. Granting Access to PL/Vision</A>
  <DT>windows in
: <A HREF="../ch02_07.htm">2.7. Building Windows Into Your Packages</A>
  <DT>working with large
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.4. Working with Large Packages</A>
</DL>
<DT><A NAME="page-size">page size</A>
<DD><DL>
  <DT><A HREF="../ch17_04.htm#ch17-SECT-4.3">17.4.2. Setting the Page Size</A>
  <DT><A HREF="../ch17_05.htm#ch17-SECT-5.2">17.5.6.4. Maintaining the current page variables</A>
<DT><A NAME="page-size">online help</A>
: <A HREF="../ch05_14.htm#ch05-SECT-14.0.3">5.14.2. Setting the page size</A>

</DL>
<DT><A NAME="pagesize-function">pagesize function</A>
: <A HREF="../ch17_04.htm#ch17-SECT-4.3">17.4.2. Setting the Page Size</A>
<DT><A NAME="paragraphs">paragraphs</A>
<DD><DL>
  <DT><A HREF="../ch05_21.htm#ch05-SECT-21.0.1">5.21.2. Wrapping long strings into paragraphs </A>
  <DT><A HREF="../ch10_01.htm">10.1.4. Wrapping Strings into Paragraphs</A>
</DL>
<DT><A NAME="parallelization-of-programs">parallelization of programs</A>
: <A HREF="../ch01_05.htm#ch01-SECT-5.3">1.5.1.1. Leveraging builtin packages</A>
<DT><A NAME="parameter-list">parameter list</A>
: <A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.2.2. A procedure with parameter list and executable code</A>
<DT><A NAME="parse-procedure">PARSE procedure</A>
: <A HREF="../ch19_05.htm#ch19-SECT-5.0.4">19.5.6.1. Open and parse</A>
<DT><A NAME="parse-tree">parse tree</A>
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.4. Working with Large Packages</A>
<DT><A NAME="parse.5fdelete-procedure">parse_delete procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_09.htm#ch05-SECT-9.0.3">5.9.3. Bundled, low-level operations</A>
  <DT><A HREF="../ch19_05.htm#ch19-SECT-5.0.4">19.5.6.3. Parse for delete</A>
</DL>
<DT><A NAME="parse.5fname-procedure">parse_name procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_11.htm">5.11.13. Miscellaneous operations</A>
  <DT><A HREF="../ch13_02.htm#ch13-SECT-2.1">13.2.3. Parsing the File Name</A>
</DL>
<DT><A NAME="parsing">parsing</A>
<DD><DL>
  <DT>code
: <A HREF="../ch05_22.htm#ch05-SECT-22.0.2">5.22. PLVprsps: PL/SQL Source Code Parsing</A>
  <DT>delimiter, defining
: <A HREF="../ch10_01.htm">10.1.2. Customizing the Delimiter Set</A>
  <DT>file name
: <A HREF="../ch13_02.htm#ch13-SECT-2.1">13.2.3. Parsing the File Name</A>
  <DT>PL/SQL code
: <A HREF="../ch10_03.htm#ch10-SECT-3.2.2">10.3.2. Parsing PL/SQL Code</A>
  <DT>program names
: <A HREF="../ch11_03.htm#ch11-SECT-3.2">11.3.2. Converting the Program Name</A>
  <DT>strings
  <DD><DL>
    <DT><A HREF="../ch05_16.htm#ch05-SECT-16.0.1">5.16. PLVlex: Lexical Analysis</A>
    <DT><A HREF="../ch05_21.htm#ch05-SECT-21.0.1">5.21. PLVprs: String Parsing</A>
    <DT><A HREF="../ch10_01.htm">10. PLVprs, PLVtkn, and PLVprsps: Parsing Strings</A>
  </DL>
</DL>
<DT><A NAME="partial-installation">partial installation</A>
: <A HREF="../ch04_04.htm#ch04-SECT-4.4">4.4.4. A Warning About Partial Installation </A>
<DT><A NAME="pauding-programs">pauding programs</A>
: <A HREF="../ch05_03.htm#ch05-SECT-3.0.2">5.3.6. Miscellaneous programs</A>
<DT><A NAME="pause-procedure">pause procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_03.htm#ch05-SECT-3.0.2">5.3.6. Miscellaneous programs</A>
  <DT><A HREF="../ch06_04.htm#ch06-SECT-4.1">6.4.4. Pausing Your Program</A>
</DL>
<DT><A NAME="pausing">pausing</A>
help text
 (see <A HREF="idx_m.htm">more procedure</A>)




<DT><A NAME="pausing-programs">pausing programs</A>
<DD><DL>
<DT><A HREF="../ch06_04.htm#ch06-SECT-4.1">6.4.4. Pausing Your Program</A>
<DT><A HREF="../appa_02.htm#appa-SECT-2.1">A.2.6. Builtin Packages</A>
</DL>
<DT><A NAME="perform.5fcommit-procedure">perform_commit procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_07.htm#ch05-SECT-7.0.3">5.7.3. Performing commits</A>
  <DT><A HREF="../ch20_01.htm">20.1.2. The COMMIT Substitute</A>
</DL>
<DT><A NAME="perform.5frollback-function">perform_rollback function</A>
<DD><DL><DT><A HREF="../ch05_23.htm#ch05-SECT-23.0.4">5.23.3. Performing rollbacks</A>
<DT><A HREF="../ch20_02.htm#ch20-SECT-2.1">20.2.4. Performing Rollbacks</A>
</DL>
<DT><A NAME="performance">performance</A>
<DD><DL>
  <DT><A HREF="../appa_02.htm#appa-SECT-2.1">A.2.6. Builtin Packages</A>
  <DT><A HREF="../ch01_03.htm#ch01-SECT-3.1">1.3.6. Performance Improvement</A>
  <DT><A HREF="../ch03_10.htm">3.10. Choosing the Best Performer</A>
  <DT><A HREF="../ch05_27.htm#ch05-SECT-27.0.6">5.27.6. Calibration and timing scripts</A>
  <DT><A HREF="../ch14_01.htm">14. PLVtmr: Analyzing Program Performance</A>
  <DT>dynamic PL/SQL
: <A HREF="../ch19_05.htm#ch19-SECT-5.0.4">19.5.5.3. The overhead of dynamic PL/SQL</A>
  <DT>package size
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.4. Working with Large Packages</A>
</DL>
<DT><A NAME="permissions">permissions</A>
: (see <A HREF="idx_a.htm">access</A>)
<DT><A NAME="persistence">persistence</A>
<DD><DL>
  <DT><A HREF="../ch01_03.htm#ch01-SECT-3.1">1.3.4. Object Persistence</A>
  <DT><A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.1.3. Need global data structures for your PL/SQL programs</A>
</DL>
<DT><A NAME="pinning-code-into-memory">pinning code into memory</A>
: <A HREF="../ch01_04.htm#ch01-SECT-4.1">1.4.3.1. Managing packages in shared memory</A>
<DT><A NAME="pkg-procedure">pkg procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.6. Generating a package</A>
  <DT><A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.1. Generating a Package</A>
</DL>
<DT><A NAME="pky-procedure">pky procedure</A>
: <A HREF="../ch05_08.htm#ch05-SECT-8.0.3">5.8.3. Dumping the DDL</A>
<DT><A NAME="pl.2fsql">PL/SQL</A>
<DD><DL>
  <DT>call stack
: <A HREF="../ch21_02.htm#ch21-SECT-2.1">21.2.2. Accessing the PL/SQL Call Stack</A>
  <DT>code, parsing
: <A HREF="../ch10_03.htm#ch10-SECT-3.2.2">10.3.2. Parsing PL/SQL Code</A>
  <DT>declarative programming
: <A HREF="../ch19_02.htm">19.2. Declarative Programming in PL/SQL</A>
  <DT>dynamic code
: <A HREF="../ch19_05.htm#ch19-SECT-5.0.4">19.5.5. Executing Dynamic PL/SQL Code</A>
  <DT>objects
: <A HREF="../ch11_01.htm">11.  PLVobj: A Packaged Interface to ALL_OBJECTS</A>
  <DT>performance and
: <A HREF="../ch19_05.htm#ch19-SECT-5.0.4">19.5.5.3. The overhead of dynamic PL/SQL</A>
  <DT>reserved words
: <A HREF="../ch05_26.htm#ch05-SECT-26.0.2">5.26. PLVtkn: Token Table Interface</A>
  <DT>source code repositories
: <A HREF="../ch12_01.htm">12. PLVio: Reading and Writing PL/SQL Source Code</A>
<DT><A NAME="pl.2fsql-tokens">tokens</A>
: (see <A HREF="idx_r.htm">reserved words</A>)</DL>

<DT><A NAME="pl.2fvision">PL/Vision</A>
: <A HREF="../ch04_01.htm">4.1. What Is PL/Vision?</A>
<DD><DL>
  <DT>bindobj procedure in
: <A HREF="../ch11_05.htm">11.5.3. Using bindobj in PL/Vision</A>
  <DT>cataloging
: <A HREF="../ch18_02.htm#ch18-SECT-2.2">18.2.3.4. Cataloguing PL/Vision</A>
  <DT>enhancing PLVexc with
: <A HREF="../ch22_03.htm#ch22-SECT-3.3.1">22.3.4. Revamping the PLVexc Package</A>
  <DT>installing
: <A HREF="../ch04_03.htm#ch04-SECT-3.2">4.3. Installation Instructions</A>
  <DT>logging
: (see <A HREF="idx_l.htm">logging</A>)
  <DT>loopexec procedure in
: <A HREF="../ch11_07.htm">11.7.4. Applying loopexec in PL/Vision</A>
  <DT>packages of
  <DD><DL>
    <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2. PL/Vision Package Bundles</A>
    <DT><A HREF="../ch04_03.htm#ch04-SECT-3.2">4.3.5. Creating the PL/Vision Packages</A>
    <DT><A HREF="../ch05_01.htm">5. PL/Vision Package Specifications</A>
  </DL>
  <DT>PLVgen and
: <A HREF="../ch16_04.htm#ch16-SECT-4.3.2">16.4.6. Leveraging PL/Vision in PLVgen</A>
  <DT>PLVmsg with
: <A HREF="../ch09_05.htm">9.5.1. Using PLVmsg in PL/Vision </A>
  <DT>sharing among users
: <A HREF="../ch04_03.htm#ch04-SECT-3.2">4.3.6. Granting Access to PL/Vision</A>
  <DT>tracing
: (see <A HREF="idx_t.htm">tracing</A>)
</DL>
<DT><A NAME="pl.2fvision-lite">PL/Vision Lite</A>
: <A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2. PL/Vision Package Bundles</A>
<DT><A NAME="placeholder-function">placeholder function</A>
: <A HREF="../ch05_09.htm#ch05-SECT-9.0.3">5.9.7. Miscellaneous programs</A>
<DT><A NAME="plsql-procedure">plsql procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_08.htm#ch05-SECT-8.0.3">5.8.3. Dumping the DDL</A>
  <DT><A HREF="../ch05_09.htm#ch05-SECT-9.0.3">5.9.6. Executing dynamic PL/SQL</A>
  <DT><A HREF="../ch19_05.htm#ch19-SECT-5.0.4">19.5.5. Executing Dynamic PL/SQL Code</A>
</DL>
<DT><A NAME="plsql.5fblock-function">plsql_block function</A>
<DD><DL>
  <DT><A HREF="../ch05_09.htm#ch05-SECT-9.0.3">5.9.7. Miscellaneous programs</A>
  <DT><A HREF="../ch19_05.htm#ch19-SECT-5.0.4">19.5.5.1. Implementation of PLVdyn.plsql</A>
</DL>
<DT><A NAME="plsql.5fdelimiters-constant">plsql_delimiters constant</A>
<DD><DL>
  <DT><A HREF="../ch05_21.htm#ch05-SECT-21.0.1">5.21.1. Package constants</A>
  <DT><A HREF="../ch10_01.htm">10.1.2. Customizing the Delimiter Set</A>
</DL>
<DT><A NAME="plsql.5fidentifier-variable">plsql_identifier variable</A>
<DD><DL>
  <DT><A HREF="../ch05_03.htm#ch05-SECT-3.0.2">5.3.2. Anchoring datatypes</A>
  <DT><A HREF="../ch06_05.htm">6.5. The Predefined Datatypes</A>
  <DT><A HREF="../ch19_05.htm#ch19-SECT-5.0.4">19.5.5.2. Scope of a dynamic PL/SQL block</A>
</DL>
<DT><A NAME="plsql.5fstring-procedure">plsql_string procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_22.htm#ch05-SECT-22.0.2">5.22.3. Parsing PL/SQL source code</A>
  <DT><A HREF="../ch10_03.htm#ch10-SECT-3.2.2">10.3.2.1. plsql_string procedure</A>
</DL>
<DT><A NAME="plug.2dand.2dplay-packages">plug-and-play packages</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.3. Plug-and-Play Components</A>
  <DT><A HREF="../ch19_01.htm">19. PLVdyn and PLVfk: Dynamic SQL and PL/SQL</A>
</DL>
<DT><A NAME="plv-package">PLV package</A>
: <A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
<DD><DL>
  <DT>constants and functions
: <A HREF="../ch06_01.htm">6. PLV: Top-Level Constants and Functions </A>
</DL>
<DT><A NAME="plv.5ftoken-table">PLV_token table</A>
: <A HREF="../ch10_02.htm#ch10-SECT-2.3">10.2.1. Keeping Track of PL/SQL Keywords</A>
<DT><A NAME="plvcase-package">PLVcase package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.2. Developer Utilities</A>
  <DT><A HREF="../ch05_04.htm#ch05-SECT-4.0.1">5.4. PLVcase: PL/SQL Code Conversion</A>
  <DT><A HREF="../ch18_01.htm">18.1. PLVcase: Converting the Case of PL/SQL Programs</A>
</DL>
<DT><A NAME="plvcat-package">PLVcat package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.2. Developer Utilities</A>
  <DT><A HREF="../ch05_05.htm">5.5. PLVcat: PL/SQL Code Cataloguing</A>
  <DT><A HREF="../ch10_03.htm#ch10-SECT-3.2.2">10.3.1. Selecting Token Types for Parsing</A>
  <DT><A HREF="../ch18_02.htm#ch18-SECT-2.2">18.2. PLVcat: Cataloguing PL/SQL Source Code</A>
  <DT>references and dependencies
: <A HREF="../ch18_02.htm#ch18-SECT-2.2">18.2.4. Identifying References and Dependencies</A>
</DL>
<DT><A NAME="plvcat.2esql-script">plvcat.sql script</A>
: <A HREF="../ch18_02.htm#ch18-SECT-2.2">18.2.3.4. Cataloguing PL/Vision</A>
<DT><A NAME="plvchar-package">PLVchar package</A>
: <A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
<DT><A NAME="plvchr-package">PLVchr package</A>
: <A HREF="../ch05_06.htm#ch05-SECT-6.0.3">5.6. PLVchr: Operations on Single Characters</A>
<DT><A NAME="plvcmt-package">PLVcmt package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.3. Plug-and-Play Components</A>
  <DT><A HREF="../ch05_07.htm#ch05-SECT-7.0.3">5.7. PLVcmt: Commit Processing</A>
  <DT><A HREF="../ch20_01.htm">20.1. PLVcmt: Enhancing Commit Processing</A>
  <DT><A HREF="../ch21_01.htm">21.1.2.1. Using put_line</A>
</DL>
<DT><A NAME="plvctlg-table">PLVctlg table</A>
: <A HREF="../ch18_02.htm#ch18-SECT-2.2">18.2.2. The PLVcat Database Tables</A>
<DT><A NAME="plvddd-package">PLVddd package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.2. Developer Utilities</A>
  <DT><A HREF="../ch05_08.htm#ch05-SECT-8.0.3">5.8. PLVddd: DDL Syntax Dump</A>
</DL>
<DT><A NAME="plvdyn-package">PLVdyn package</A>
<DD><DL>
  <DT><A HREF="../ch02_07.htm">2.7. Building Windows Into Your Packages</A>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.3. Plug-and-Play Components</A>
  <DT><A HREF="../ch04_04.htm#ch04-SECT-4.4">4.4.1. Special Handling for PLVdyn</A>
  <DT><A HREF="../ch05_09.htm#ch05-SECT-9.0.3">5.9. PLVdyn: Dynamic SQL Operations</A>
  <DT><A HREF="../ch19_04.htm#ch19-SECT-4.1.7">19.4. PLVdyn: A Code Layer over DBMS_SQL</A>
  <DT>compiling code with
: <A HREF="../ch19_04.htm#ch19-SECT-4.1.7">19.4.1.7. Compiling source code with PLVdyn</A>
  <DT>displaying table contents
: <A HREF="../ch19_05.htm#ch19-SECT-5.0.4">19.5.7. Displaying a Table</A>
  <DT>schemas and
: <A HREF="../ch19_05.htm#ch19-SECT-5.0.4">19.5.10. Executing PLVdyn in Different Schemas</A>
</DL>
<DT><A NAME="plvdyn.31-package">PLVdyn1 package</A>
: <A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.3. Plug-and-Play Components</A>
<DT><A NAME="plvexc-package">PLVexc package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.3. Plug-and-Play Components</A>
  <DT><A HREF="../ch05_10.htm#ch05-SECT-10.0.2">5.10. PLVexc: Exception Handling</A>
  <DT><A HREF="../ch16_03.htm#ch16-SECT-3.3">16.3.5. Using the PLVexc Exception Handler</A>
  <DT><A HREF="../ch19_01.htm">19.1. About Plug-and-Play</A>
  <DT><A HREF="../ch21_01.htm">21.1.2.1. Using put_line</A>
  <DT><A HREF="../ch22_01.htm">22. Exception Handling</A>
  <DT>enhancing with PL/Vision
: <A HREF="../ch22_03.htm#ch22-SECT-3.3.1">22.3.4. Revamping the PLVexc Package</A>
  <DT>PLVlog package and
: <A HREF="../ch22_03.htm#ch22-SECT-3.3.1">22.3.4.1. Leveraging PLVLog </A>
  <DT>PLVmsg with
: <A HREF="../ch09_05.htm">9.5. Integrating PLVmsg with Error Handling</A>
  <DT>PLVtrc package and
: <A HREF="../ch22_01.htm">22.1.6.5. Integrating PLVexc with PLVtrc </A>
</DL>
<DT><A NAME="plvfile-package">PLVfile package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
  <DT><A HREF="../ch05_11.htm">5.11. PLVfile: Operating System I/O Manager</A>
  <DT><A HREF="../ch13_01.htm">13. PLVfile: Reading and Writing Operating System Files</A>
</DL>
<DT><A NAME="plvfk-package">PLVfk package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.3. Plug-and-Play Components</A>
  <DT><A HREF="../ch05_12.htm#ch05-SECT-12.0.4">5.12. PLVfk: Foreign Key Interface</A>
  <DT><A HREF="../ch19_06.htm#ch19-SECT-6.4">19.6. PLVfk: Generic Foreign Key Lookups</A>
</DL>
<DT><A NAME="plvgen-package">PLVgen package</A>
<DD><DL>
  <DT><A HREF="../ch02_02.htm">2.2. Using Effective Coding Style for Packages</A>
  <DT><A HREF="../ch02_06.htm#ch02-SECT-6.3.1">2.6.2. Toggles for Code Generation</A>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.2. Developer Utilities</A>
  <DT><A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13. PLVgen: PL/SQL Code Generator</A>
  <DT><A HREF="../ch16_01.htm">16. PLVgen: Generating PL/SQL Programs</A>
  <DT>overloading in
: <A HREF="../ch16_04.htm#ch16-SECT-4.3.2">16.4.4. Overloading in PLVgen</A>
</DL>
<DT><A NAME="plvgrant.2esql-script">plvgrant.sql script </A>
: <A HREF="../ch04_03.htm#ch04-SECT-3.2">4.3.6. Granting Access to PL/Vision</A>
<DT><A NAME="plvhlp">PLVhlp</A>
: <A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.2. Developer Utilities</A>
<DT><A NAME="plvhlp--package">PLVhlp  package</A>
: <A HREF="../ch05_01.htm">5.1. Common Package Elements</A>
<DT><A NAME="plvhlp-package">PLVhlp package</A>
<DD><DL>
  <DT><A HREF="../ch04_04.htm#ch04-SECT-4.4">4.4. Installing Online Help for PL/Vision</A>
  <DT><A HREF="../ch04_05.htm">4.5. Using Online Help</A>
  <DT><A HREF="../ch05_14.htm#ch05-SECT-14.0.3">5.14. PLVhlp: Online Help Architechture</A>
  <DT><A HREF="../ch12_01.htm">12.1. Why PLVio?</A>
  <DT><A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.5.1. Generating help text stubs</A>
  <DT><A HREF="../ch17_01.htm">17. PLVhlp: Online Help for PL/SQL Programs</A>
</DL>
<DT><A NAME="plvins.32.33.2esql-script">plvins23.sql script </A>
: <A HREF="../ch04_03.htm#ch04-SECT-3.2">4.3.5. Creating the PL/Vision Packages</A>
<DT><A NAME="plvinst.2esql-script">plvinst.sql script</A>
: <A HREF="../ch04_03.htm#ch04-SECT-3.2">4.3.5. Creating the PL/Vision Packages</A>
<DT><A NAME="plvio-package">PLVio package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
  <DT><A HREF="../ch05_15.htm#ch05-SECT-15.0.4">5.15. PLVio: Input/Output Processing</A>
  <DT><A HREF="../ch12_01.htm">12. PLVio: Reading and Writing PL/SQL Source Code</A>
  <DT>PLVhlp package and
: <A HREF="../ch17_05.htm#ch17-SECT-5.2">17.5.5. Constructing an Online Help Package</A>
</DL>
<DT><A NAME="plvlex-package">PLVlex package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
  <DT><A HREF="../ch05_16.htm#ch05-SECT-16.0.1">5.16. PLVlex: Lexical Analysis</A>
</DL>
<DT><A NAME="plvlog-package">PLVlog package</A>
<DD><DL>
  <DT><A HREF="../ch02_06.htm#ch02-SECT-6.3.1">2.6.3. Changing Package Behavior Without Changing the Application</A>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.3. Plug-and-Play Components</A>
  <DT><A HREF="../ch05_17.htm#ch05-SECT-17.0.5">5.17. PLVlog: Logging Facility</A>
  <DT><A HREF="../ch21_01.htm">21.1. PLVlog: Logging Activity in PL/SQL Programs</A>
  <DT>PLVexc package and
  <DD><DL>
    <DT><A HREF="../ch22_01.htm">22.1.7.1. Logging errors</A>
    <DT><A HREF="../ch22_03.htm#ch22-SECT-3.3.1">22.3.4.1. Leveraging PLVLog </A>
  </DL>
  <DT>rollbacks
: <A HREF="../ch21_01.htm">21.1.5. Rolling Back with PLVlog</A>
</DL>
<DT><A NAME="plvlst-package">PLVlst package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
  <DT><A HREF="../ch05_18.htm#ch05-SECT-18.0.2">5.18. PLVlst: List Manager</A>
</DL>
<DT><A NAME="plvmsg-package">PLVmsg package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
  <DT><A HREF="../ch05_19.htm#ch05-SECT-19.0.2">5.19. PLVmsg: Message Handling</A>
  <DT><A HREF="../ch09_01.htm">9. PLVmsg: Single-Sourcing PL/SQL Message Text</A>
  <DT><A HREF="../ch22_01.htm">22.1.6.4. Defining error messages with PLVmsg</A>
</DL>
<DT><A NAME="plvobj-package">PLVobj package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
  <DT><A HREF="../ch05_20.htm#ch05-SECT-20.0.8">5.20. PLVobj: Object Interface</A>
  <DT><A HREF="../ch11_01.htm">11.  PLVobj: A Packaged Interface to ALL_OBJECTS</A>
</DL>
<DT><A NAME="plvprs-package">PLVprs package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
  <DT><A HREF="../ch05_21.htm#ch05-SECT-21.0.1">5.21. PLVprs: String Parsing</A>
  <DT><A HREF="../ch10_01.htm">10.1. PLVprs: Useful String Parsing Extensions</A>
</DL>
<DT><A NAME="plvprsps">PLVprsps</A>
: <A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
<DT><A NAME="plvprsps-package">PLVprsps package</A>
: <A HREF="../ch10_03.htm#ch10-SECT-3.2.2">10.3. PLVprsps: Parsing PL/SQL Strings</A>
<DT><A NAME="plvpsyn.2esql-script">plvpsyn.sql script</A>
: <A HREF="../ch04_03.htm#ch04-SECT-3.2">4.3.6. Granting Access to PL/Vision</A>
<DT><A NAME="plvrb-package">PLVrb package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.3. Plug-and-Play Components</A>
  <DT><A HREF="../ch05_23.htm#ch05-SECT-23.0.4">5.23. PLVrb: Rollback Processing</A>
  <DT><A HREF="../ch20_02.htm#ch20-SECT-2.1">20.2. PLVrb: Performing Rollbacks</A>
</DL>
<DT><A NAME="plvrfrnc-table">PLVrfrnc table</A>
: <A HREF="../ch18_02.htm#ch18-SECT-2.2">18.2.4.1. Examining the references</A>
<DT><A NAME="plvstk-package">PLVstk package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
  <DT><A HREF="../ch05_24.htm#ch05-SECT-24.0.1">5.24. PLVstk: Stack Manager</A>
</DL>
<DT><A NAME="plvtab-package">PLVtab package</A>
<DD><DL>
  <DT><A HREF="../ch02_06.htm#ch02-SECT-6.3.1">2.6. Building Flexibility Into Your Packages</A>
  <DT><A HREF="../ch02_08.htm">2.8.1.1. Supporting many data combinations</A>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
  <DT><A HREF="../ch05_25.htm#ch05-SECT-25.0.3">5.25. PLVtab: Table Interface</A>
  <DT><A HREF="../ch08_01.htm">8. PLVtab: Easy Access to PL/SQL Tables</A>
</DL>
<DT><A NAME="plvtkn-package">PLVtkn package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.1. Building Blocks</A>
  <DT><A HREF="../ch05_26.htm#ch05-SECT-26.0.2">5.26. PLVtkn: Token Table Interface</A>
  <DT><A HREF="../ch10_02.htm#ch10-SECT-2.3">10.2. PLVtkn: Managing PL/SQL Tokens</A>
</DL>
<DT><A NAME="plvtmr-package">PLVtmr package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.2. Developer Utilities</A>
  <DT><A HREF="../ch05_27.htm#ch05-SECT-27.0.6">5.27. PLVtmr: Program Performance Analyzer</A>
  <DT><A HREF="../ch14_01.htm">14. PLVtmr: Analyzing Program Performance</A>
  <DT><A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.9. Generating a Timer Script</A>
  <DT><A HREF="../ch18_02.htm#ch18-SECT-2.2">18.2.3.3. Examining the catalogue</A>
  <DT><A HREF="../ch19_05.htm#ch19-SECT-5.0.4">19.5.5.3. The overhead of dynamic PL/SQL</A>
</DL>
<DT><A NAME="plvtrc-package">PLVtrc package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.3. Plug-and-Play Components</A>
  <DT><A HREF="../ch05_28.htm#ch05-SECT-28.0.8">5.28. PLVtrc: Trace Facility</A>
  <DT><A HREF="../ch16_03.htm#ch16-SECT-3.3">16.3.4. Using the Program Trace </A>
  <DT><A HREF="../ch21_02.htm#ch21-SECT-2.1">21.2. PLVtrc: Tracing Execution of PL/SQL Programs</A>
  <DT>PLVexc package and
: <A HREF="../ch22_01.htm">22.1.6.5. Integrating PLVexc with PLVtrc </A>
</DL>
<DT><A NAME="plvvu-package">PLVvu package</A>
<DD><DL>
  <DT><A HREF="../ch04_02.htm#ch04-SECT-2.1">4.2.2. Developer Utilities</A>
  <DT><A HREF="../ch05_29.htm#ch05-SECT-29.0.4">5.29. PLVvu: Code and Error Viewing </A>
  <DT><A HREF="../ch15_01.htm">15. PLVvu: Viewing Source Code and Compile Errors</A>
  <DT><A HREF="../ch17_02.htm">17.2. Current Sources of Information</A>
</DL>
<DT><A NAME="pop-procedure">pop procedure</A>
: <A HREF="../ch05_24.htm#ch05-SECT-24.0.1">5.24.3. Modifying stack contents</A>
<DT><A NAME="post.2dinsert-savepoint">post-insert savepoint</A>
: <A HREF="../ch21_01.htm">21.1.5.7. Setting the post-insert savepoint</A>
<DT><A NAME="pragmas">pragmas</A>
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.5.1. RESTRICT_REFERENCES pragma</A>
<DD><DL>
  <DT>EXCEPTION_INIT
: <A HREF="../ch05_10.htm#ch05-SECT-10.0.2">5.10.2. Package-based exceptions</A>
</DL>
<DT><A NAME="prebuilt-packages">prebuilt packages</A>
: <A HREF="../ch01_05.htm#ch01-SECT-5.3">1.5.2. Prebuilt Packages</A>
<DT><A NAME="predefined-exceptions">predefined exceptions</A>
: <A HREF="../ch22_01.htm">22.1.3. Impact of Predefined Exceptions</A>
<DT><A NAME="prefix">prefix</A>

table row value
: <A HREF="../ch08_05.htm">8.5. Setting the Display Prefix</A>

<DT><A NAME="prefix-function">prefix function</A>
<DD><DL>
  <DT><A HREF="../ch05_02.htm#ch05-SECT-2.0.1">5.2.3. Setting the line prefix</A>
  <DT><A HREF="../ch05_25.htm#ch05-SECT-25.0.3">5.25.6. Setting the row prefix</A>
</DL>
<DT><A NAME="prefixes-to-package-element-names">prefixes to package element names</A>
: <A HREF="../ch02_03.htm">2.3.3. Avoiding Superfluous Naming Elements</A>
<DT><A NAME="prependitem-procedure">prependitem procedure</A>
: <A HREF="../ch05_18.htm#ch05-SECT-18.0.2">5.18.3. Modifying list contents </A>
<DT><A NAME="prevmod-function">prevmod function</A>
<DD><DL>
  <DT><A HREF="../ch05_28.htm#ch05-SECT-28.0.8">5.28.6. Tracing PL/SQL code execution</A>
  <DT><A HREF="../ch21_02.htm#ch21-SECT-2.1">21.2.4.4. Previous module</A>
</DL>
<DT><A NAME="private">private</A>
PL/Vision package synonyms
: <A HREF="../ch04_03.htm#ch04-SECT-3.2">4.3.6. Granting Access to PL/Vision</A>

<DT><A NAME="private-elements">private elements</A>
<DD><DL>
  <DT><A HREF="../ch01_04.htm#ch01-SECT-4.1">1.4.4.1. Public and private data</A>
  <DT><A HREF="../ch02_07.htm">2.7. Building Windows Into Your Packages</A>
  <DT><A HREF="../ch02_10.htm#ch02-SECT-10.5">2.10. Hiding Package Data</A>
  <DT>declaring before public
: <A HREF="../ch02_02.htm">2.2.1. Choosing the Order of Elements</A>
  <DT>package elements
  <DD><DL>
    <DT><A HREF="../ch01_03.htm#ch01-SECT-3.1">1.3.1. Enforced Information Hiding</A>
    <DT><A HREF="../ch01_04.htm#ch01-SECT-4.1">1.4.4. Access to Package Elements</A>
  </DL>
</DL>
<DT><A NAME="privileges">privileges, DDL execution</A>
: <A HREF="../ch19_04.htm#ch19-SECT-4.1.7">19.4.1. DDL Operations </A>
<DT><A NAME="proc-procedure">proc procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.7. Generating a procedure</A>
  <DT><A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.2. Generating a Procedure</A>
  <DT><A HREF="../ch16_04.htm#ch16-SECT-4.3.2">16.4.2. Implementing the Procedure Generator</A>
</DL>
<DT><A NAME="procedures">procedures</A>
: (see <A HREF="idx_f.htm">functions</A>)
<DD><DL>
  <DT>execute authority
: <A HREF="../ch01_03.htm#ch01-SECT-3.1">1.3.5. Guaranteeing Transaction Integrity</A>
  <DT>generating
  <DD><DL>
    <DT><A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.2. Generating a Procedure</A>
    <DT><A HREF="../ch16_04.htm#ch16-SECT-4.3.2">16.4.2. Implementing the Procedure Generator</A>
  </DL>
  <DT>help
: <A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.5.2. Generating a help procedure</A>
</DL>
<DT><A NAME="process.5fhalted-exception">process_halted exception</A>
<DD><DL>
  <DT><A HREF="../ch05_10.htm#ch05-SECT-10.0.2">5.10.2. Package-based exceptions</A>
  <DT><A HREF="../ch22_01.htm">22.1.10. Bailing Out with PLVexc</A>
  <DT><A HREF="../ch22_01.htm">22.1.2. Package-Based Exceptions</A>
</DL>
<DT><A NAME="productivity">productivity</A>
: <A HREF="../ch04_01.htm">4.1.1. The Benefits of PL/Vision</A>
<DT><A NAME="programming-technique">programming technique</A>
<DD><DL>
  <DT><A HREF="../appa_01.htm">A. Appendix: PL/SQL Exercises</A>
  <DT><A HREF="../ch01_02.htm#ch01-SECT-2.2">1.2.1. The Iceberg Approach to Coding</A>
  <DT><A HREF="../ch10_01.htm">10.1.3.6. numinstr function</A>
  <DT>analyzing performance
: (see <A HREF="idx_p.htm">performance</A>)
  <DT>avoiding hard-coded literals
: <A HREF="../ch03_12.htm">3.12. Obliterating the Literals</A>
  <DT>avoiding redundancy
: (see <A HREF="idx_r.htm">redundancy</A>)
  <DT>backward compatibility
  <DD><DL>
    <DT><A HREF="../ch03_03.htm">3.3. Supplying Backward Compatibility</A>
    <DT><A HREF="../ch03_11.htm">3.11. Don't Forget Backward Compatibility</A>
  </DL>
  <DT>coding packages
: <A HREF="../ch02_01.htm">2. Best Practices for Packages</A>
  <DT>consistent error data
: <A HREF="../ch22_02.htm#ch22-SECT-2.1.1">22.2.1.1. Recording consistent error data</A>
  <DT>cover package
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.4. Working with Large Packages</A>
  <DT>declarative programming
: <A HREF="../ch19_02.htm">19.2. Declarative Programming in PL/SQL</A>
  <DT>handling exceptions
: <A HREF="../ch22_03.htm#ch22-SECT-3.3.1">22.3.1. Analyzing the Need</A>
  <DT>handling fatal errors
: <A HREF="../ch22_01.htm">22.1.10. Bailing Out with PLVexc</A>
  <DT>hard-coded transaction processing
: <A HREF="../ch20_01.htm">20.1.1. Who Needs PLVcmt?</A>
  <DT>logging
: (see <A HREF="idx_l.htm">logging</A>)
  <DT>modularizing
: <A HREF="../ch02_09.htm#ch02-SECT-9.2">2.9. Modularizing for Maintainable Packages</A>
  <DT>object-oriented design
: <A HREF="../ch01_03.htm#ch01-SECT-3.1">1.3.2. Object-Oriented Design</A>
  <DT>overloading
: <A HREF="../ch02_08.htm">2.8.1. When to Overload</A>
  <DT>simultaneous package construction
: <A HREF="../ch02_11.htm">2.11. Simultaneous Construction of Multiple Packages</A>
  <DT>testing/debugging
: <A HREF="../ch02_06.htm#ch02-SECT-6.3.1">2.6.3.1. The test/debug cycle in PL/SQL</A>
  <DT>toggles
: <A HREF="../ch02_06.htm#ch02-SECT-6.3.1">2.6.1. Toggling Package Behavior</A>
  <DT>top-down design
: <A HREF="../ch01_03.htm#ch01-SECT-3.1">1.3.3. Top-Down Design</A>
  <DT>user interface
: <A HREF="../ch03_04.htm">3.4. Improving the User Interface</A>
  <DT>using package initialization section
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.3.1. When to use the initialization section</A>
  <DT>using packages
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.1. When Should You Build a Package?</A>
  <DT>windows
: <A HREF="../ch02_07.htm">2.7. Building Windows Into Your Packages</A>
</DL>
<DT><A NAME="programs">programs</A>
: (see <A HREF="idx_c.htm">code</A>)
<DT><A NAME="ps.32db-procedure">ps2db procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_17.htm#ch05-SECT-17.0.5">5.17.6. Managing the log </A>
  <DT><A HREF="../ch21_01.htm">21.1.4.3. Transferring a PL/SQL table log to a database table</A>
</DL>
<DT><A NAME="ps.5fcallstack-function">ps_callstack function</A>
<DD><DL>
  <DT><A HREF="../ch05_28.htm#ch05-SECT-28.0.8">5.28.5. Accessing the PL/SQL call stack</A>
  <DT><A HREF="../ch21_02.htm#ch21-SECT-2.1">21.2.2. Accessing the PL/SQL Call Stack</A>
</DL>
<DT><A NAME="ps.5fmodule-function">ps_module function</A>
<DD><DL>
  <DT><A HREF="../ch05_28.htm#ch05-SECT-28.0.8">5.28.5. Accessing the PL/SQL call stack</A>
  <DT><A HREF="../ch21_02.htm#ch21-SECT-2.1">21.2.2. Accessing the PL/SQL Call Stack</A>
</DL>
<DT><A NAME="psformat-procedure">psformat procedure</A>
: <A HREF="../ch04_01.htm">4.1.2. The Origins of PL/Vision</A>
<DT><A NAME="pstab-constant">pstab constant</A>
: <A HREF="../ch05_03.htm#ch05-SECT-3.0.2">5.3.1. PL/Vision constants</A>
<DT><A NAME="pstab.32file-procedure">pstab2file procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_11.htm">5.11.11. Copying a file</A>
  <DT><A HREF="../ch13_07.htm#ch13-SECT-7.3">13.7.4. Copying PL/SQL Table to File</A>
</DL>
<DT><A NAME="pstab.5fcount-function">pstab_count function</A>
<DD><DL>
  <DT><A HREF="../ch05_17.htm#ch05-SECT-17.0.5">5.17.6. Managing the log </A>
  <DT><A HREF="../ch21_01.htm">21.1.4.1. Counting and clearing the PL/SQL table</A>
</DL>
<DT><A NAME="public">public</A>
PL/Vision package synonyms
: <A HREF="../ch04_03.htm#ch04-SECT-3.2">4.3.6. Granting Access to PL/Vision</A>

<DT><A NAME="public-data">public data</A>

package elements
: <A HREF="../ch01_04.htm#ch01-SECT-4.1">1.4.4. Access to Package Elements</A>

<DT><A NAME="public-elements">public elements</A>
<DD><DL>
  <DT><A HREF="../ch01_04.htm#ch01-SECT-4.1">1.4.4.1. Public and private data</A>
  <DT><A HREF="../ch02_07.htm">2.7. Building Windows Into Your Packages</A>
  <DT><A HREF="../ch02_10.htm#ch02-SECT-10.5">2.10. Hiding Package Data</A>
  <DT><A HREF="../ch02_10.htm#ch02-SECT-10.5">2.10.4. When to Make Data Public</A>
  <DT>anchored declarations
: <A HREF="../ch02_10.htm#ch02-SECT-10.5">2.10.5. Anchoring to Public Variables</A>
  <DT>declaring before private
: <A HREF="../ch02_02.htm">2.2.1. Choosing the Order of Elements</A>
  <DT>package elements
  <DD><DL>
    <DT><A HREF="../ch01_03.htm#ch01-SECT-3.1">1.3.1. Enforced Information Hiding</A>
    <DT><A HREF="../ch01_04.htm#ch01-SECT-4.1">1.4.1. The Package Specification</A>
  </DL>
</DL>
<DT><A NAME="purity-levels">purity levels</A>
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.5.1. RESTRICT_REFERENCES pragma</A>
<DT><A NAME="push-procedure">push procedure</A>
: <A HREF="../ch05_24.htm#ch05-SECT-24.0.1">5.24.3. Modifying stack contents</A>
<DT><A NAME="put.5fline-package">PUT_LINE package</A>
<DD><DL>
  <DT>(see also <A HREF="idx_p.htm">p package</A>)
  <DT>
<A HREF="../ch07_01.htm">7. p: A Powerful Substitute for DBMS_OUTPUT</A>

<DT><A HREF="../ch05_02.htm#ch05-SECT-2.0.1">5.2. p: a DBMS_OUTPUT Substitute</A>
</DL>
<DT><A NAME="put.5fline-procedure">put_line procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_11.htm">5.11.10. Writing to a file</A>
  <DT><A HREF="../ch05_15.htm#ch05-SECT-15.0.4">5.15.7. Reading and writing lines</A>
  <DT><A HREF="../ch05_17.htm#ch05-SECT-17.0.5">5.17.4. Writing to the log </A>
  <DT><A HREF="../ch12_07.htm">12.7. Writing to the Target</A>
  <DT><A HREF="../ch13_06.htm#ch13-SECT-6.1">13.6. Writing to a File</A>
  <DT><A HREF="../ch16_04.htm#ch16-SECT-4.3.2">16.4.3. put_line Procedure</A>
  <DT><A HREF="../ch21_01.htm">21.1.2. Writing to the Log</A>
  <DT>specifying rollbacks
: <A HREF="../ch21_01.htm">21.1.5.5. Specifying rollbacks when calling put_line</A>
</DL>
<DT><A NAME="put.5fline-procedure">PUT_LINE procedure</A>
: <A HREF="../ch02_08.htm">2.8.1.1. Supporting many data combinations</A>
<DT><A NAME="put.5fline-repository">put_line repository</A>
: <A HREF="../ch12_07.htm">12.7.3. Displaying the Target Repository</A>
</DL>

<P>
<HR WIDTH="515" ALIGN="LEFT">

<FONT SIZE="-1">
<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| <A HREF="idx_c.htm">C</A>
| <A HREF="idx_d.htm">D</A>
| <A HREF="idx_e.htm">E</A>
| <A HREF="idx_f.htm">F</A>
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| <A HREF="idx_i.htm">I</A>
| <A HREF="idx_k.htm">K</A>
| <A HREF="idx_l.htm">L</A>
| <A HREF="idx_m.htm">M</A>
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| P
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_y.htm">Y</A>
| <A HREF="idx_z.htm">Z</A></FONT>

<hr><IMG SRC="../../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../../copyrght.htm#copy">Copyright (c) 2000</A> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY>

<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML>
