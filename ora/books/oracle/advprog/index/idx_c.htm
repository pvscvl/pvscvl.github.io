<HTML>

<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
<HEAD>
<TITLE>Index</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<P><A HREF="../index.htm"><IMG SRC="../gifs/smbanns.gif" ALT="Book Home" BORDER=0 usemap="#srchmap"><MAP NAME="srchmap"><AREA SHAPE="RECT" COORDS="0,0,466,65" HREF="../index.htm" ALT="Book Home"><AREA SHAPE="RECT" COORDS="467,0,514,18" HREF="../jobjects/fsearch.htm" ALT="Search this book"></MAP></A><P>

<FONT SIZE="-1">
<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| C
| <A HREF="idx_d.htm">D</A>
| <A HREF="idx_e.htm">E</A>
| <A HREF="idx_f.htm">F</A>
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| <A HREF="idx_i.htm">I</A>
| <A HREF="idx_k.htm">K</A>
| <A HREF="idx_l.htm">L</A>
| <A HREF="idx_m.htm">M</A>
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| <A HREF="idx_p.htm">P</A>
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_y.htm">Y</A>
| <A HREF="idx_z.htm">Z</A></FONT>

<H1>Index: C</H1>

<DL>
<DT><A NAME="c.5fafter-constant">c_after constant</A>
: <A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.1. Package constants</A>
<DT><A NAME="c.5fall-constant">c_all constant</A>
: <A HREF="../ch05_21.htm#ch05-SECT-21.0.1">5.21.1. Package constants</A>
<DT><A NAME="c.5fall.5ftokens-constant">c_all_tokens constant</A>
: <A HREF="../ch05_22.htm#ch05-SECT-22.0.2">5.22.1. Package constants</A>
<DT><A NAME="c.5fappend-constant">c_append constant</A>
: <A HREF="../ch05_11.htm">5.11.1. Package constants and exceptions</A>
<DT><A NAME="c.5fbefore-constant">c_before constant</A>
: <A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.1. Package constants</A>
<DT><A NAME="c.5fbi.5ftokens-constant">c_bi_tokens constant</A>
: <A HREF="../ch05_22.htm#ch05-SECT-22.0.2">5.22.1. Package constants</A>
<DT><A NAME="c.5fboth-constant">c_both constant</A>
: <A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.1. Package constants</A>
<DT><A NAME="c.5fdatemask-constant">c_datemask constant</A>
<DD><DL>
  <DT><A HREF="../ch05_03.htm#ch05-SECT-3.0.2">5.3.1. PL/Vision constants</A>
  <DT><A HREF="../ch06_02.htm">6.2. Setting the PL/Vision Date Mask</A>
</DL>
<DT><A NAME="c.5fdef.5flength-constant">c_def_length constant</A>
: <A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.1. Package constants</A>
<DT><A NAME="c.5fdefault-constant">c_default constant</A>
: <A HREF="../ch21_01.htm">21.1.5.3. Types of rollback activity</A>
<DT><A NAME="c.5fdelim-constant">c_delim constant</A>
<DD><DL>
  <DT><A HREF="../ch05_21.htm#ch05-SECT-21.0.1">5.21.1. Package constants</A>
  <DT><A HREF="../ch21_01.htm">21.1.4. Managing a PL/SQL Table Log</A>
</DL>
<DT><A NAME="c.5fdosdelim-constant">c_dosdelim constant</A>
<DD><DL>
  <DT><A HREF="../ch05_11.htm">5.11.1. Package constants and exceptions</A>
  <DT><A HREF="../ch13_02.htm#ch13-SECT-2.1">13.2.1. Setting the Operating System Delimiter</A>
</DL>
<DT><A NAME="c.5fexamples-constant">c_examples constant</A>
: <A HREF="../ch05_14.htm#ch05-SECT-14.0.3">5.14.1. Package constants</A>
<DT><A NAME="c.5fgo-constant">c_go constant</A>
<DD><DL>
  <DT><A HREF="../ch05_10.htm#ch05-SECT-10.0.2">5.10.1. Package constants</A>
  <DT><A HREF="../ch22_01.htm">22.1.4. Exception Handling Actions</A>
</DL>
<DT><A NAME="c.5fignore.5fcase-constant">c_ignore_case constant</A>
: <A HREF="../ch05_21.htm#ch05-SECT-21.0.1">5.21.1. Package constants</A>
<DT><A NAME="c.5fincr.5findent-constant">c_incr_indent constant</A>
: <A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.1. Package constants</A>
<DT><A NAME="c.5findent-constant">c_indent constant</A>
: <A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.1. Package constants</A>
<DT><A NAME="c.5fint.5fno.5fchange-constant">c_int_no_change constant</A>
: <A HREF="../ch05_12.htm#ch05-SECT-12.0.4">5.12.1. Package Constants</A>
<DT><A NAME="c.5fkw.5ftokens-constant">c_kw_tokens constant</A>
: <A HREF="../ch05_22.htm#ch05-SECT-22.0.2">5.22.1. Package constants</A>
<DT><A NAME="c.5flast-constant">c_last constant</A>
: <A HREF="../ch21_01.htm">21.1.5.3. Types of rollback activity</A>
<DT><A NAME="c.5flast.5fpos-constant">c_last_pos constant</A>
: <A HREF="../ch05_28.htm#ch05-SECT-28.0.8">5.28.1. Package constants</A>
<DT><A NAME="c.5fleph-constant">c_leph constant</A>
<DD><DL>
  <DT><A HREF="../ch05_20.htm#ch05-SECT-20.0.8">5.20.6. Programmatic cursor FOR loop elements</A>
  <DT><A HREF="../ch11_07.htm">11.7. A Programmatic Cursor FOR Loop</A>
  <DT><A HREF="../ch11_07.htm">11.7.2. Constructing the Execution String</A>
</DL>
<DT><A NAME="c.5fliteral-constant">c_literal constant</A>
: <A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.1. Package constants</A>
<DT><A NAME="c.5fmain-constant">c_main constant</A>
: <A HREF="../ch05_14.htm#ch05-SECT-14.0.3">5.14.1. Package constants</A>
<DT><A NAME="c.5fmodname-constant">c_modname constant</A>
<DD><DL>
  <DT><A HREF="../ch05_20.htm#ch05-SECT-20.0.8">5.20.6. Programmatic cursor FOR loop elements</A>
  <DT><A HREF="../ch11_07.htm">11.7. A Programmatic Cursor FOR Loop</A>
</DL>
<DT><A NAME="c.5fmodspec-constant">c_modspec constant</A>
<DD><DL>
  <DT><A HREF="../ch05_20.htm#ch05-SECT-20.0.8">5.20.6. Programmatic cursor FOR loop elements</A>
  <DT><A HREF="../ch11_07.htm">11.7. A Programmatic Cursor FOR Loop</A>
</DL>
<DT><A NAME="c.5fno.5fchange-constant">c_no_change constant</A>
: <A HREF="../ch05_12.htm#ch05-SECT-12.0.4">5.12.1. Package Constants</A>
<DT><A NAME="c.5fnoaction-constant">c_noaction constant</A>
: <A HREF="../ch21_01.htm">21.1.5.3. Types of rollback activity</A>
<DT><A NAME="c.5fnone-constant">c_none constant</A>
<DD><DL>
  <DT><A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.1. Package constants</A>
  <DT><A HREF="../ch21_01.htm">21.1.5.3. Types of rollback activity</A>
</DL>
<DT><A NAME="c.5fnonkw.5ftokens-constant">c_nonkw_tokens constant</A>
: <A HREF="../ch05_22.htm#ch05-SECT-22.0.2">5.22.1. Package constants</A>
<DT><A NAME="c.5fnousecor-constant">c_nousecor constant</A>
: <A HREF="../ch05_04.htm#ch05-SECT-4.0.1">5.4.1. Package constants</A>
<DT><A NAME="c.5fplvlogsp-constant">c_PLVlogsp constant</A>
: <A HREF="../ch21_01.htm">21.1.5.3. Types of rollback activity</A>
<DT><A NAME="c.5fprefix-constant">c_prefix constant</A>
<DD><DL>
  <DT><A HREF="../ch05_02.htm#ch05-SECT-2.0.1">5.2.3. Setting the line prefix</A>
  <DT><A HREF="../ch05_12.htm#ch05-SECT-12.0.4">5.12.1. Package Constants</A>
  <DT><A HREF="../ch07_03.htm">7.3. The Output Prefix </A>
</DL>
<DT><A NAME="c.5fread-constant">c_read constant</A>
: <A HREF="../ch05_11.htm">5.11.1. Package constants and exceptions</A>
<DT><A NAME="c.5frecngo-constant">c_recNgo constant</A>
<DD><DL>
  <DT><A HREF="../ch05_10.htm#ch05-SECT-10.0.2">5.10.1. Package constants</A>
  <DT><A HREF="../ch22_01.htm">22.1.4. Exception Handling Actions</A>
</DL>
<DT><A NAME="c.5frecnstop-constant">c_recNstop constant</A>
<DD><DL>
  <DT><A HREF="../ch05_10.htm#ch05-SECT-10.0.2">5.10.1. Package constants</A>
  <DT><A HREF="../ch22_01.htm">22.1.4. Exception Handling Actions</A>
</DL>
<DT><A NAME="c.5frespect.5fcase-constant">c_respect_case constant</A>
: <A HREF="../ch05_21.htm#ch05-SECT-21.0.1">5.21.1. Package constants</A>
<DT><A NAME="c.5fshow.5fobject-constant">c_show_object constant</A>
<DD><DL>
  <DT><A HREF="../ch05_20.htm#ch05-SECT-20.0.8">5.20.6. Programmatic cursor FOR loop elements</A>
  <DT><A HREF="../ch11_07.htm">11.7. A Programmatic Cursor FOR Loop</A>
  <DT><A HREF="../ch11_07.htm">11.7.2. Constructing the Execution String</A>
</DL>
<DT><A NAME="c.5fstop-constant">c_stop constant</A>
<DD><DL>
  <DT><A HREF="../ch05_10.htm#ch05-SECT-10.0.2">5.10.1. Package constants</A>
  <DT><A HREF="../ch22_01.htm">22.1.4. Exception Handling Actions</A>
</DL>
<DT><A NAME="c.5fsuffix-constant">c_suffix constant</A>
: <A HREF="../ch05_12.htm#ch05-SECT-12.0.4">5.12.1. Package Constants</A>
<DT><A NAME="c.5ftop.5fpos-constant">c_top_pos constant</A>
<DD><DL>
  <DT><A HREF="../ch05_28.htm#ch05-SECT-28.0.8">5.28.1. Package constants</A>
  <DT><A HREF="../ch21_02.htm#ch21-SECT-2.1">21.2.4.7. Retrieving stack contents</A>
</DL>
<DT><A NAME="c.5funixdelim-constant">c_unixdelim constant</A>
<DD><DL>
  <DT><A HREF="../ch05_11.htm">5.11.1. Package constants and exceptions</A>
  <DT><A HREF="../ch13_02.htm#ch13-SECT-2.1">13.2.1. Setting the Operating System Delimiter</A>
</DL>
<DT><A NAME="c.5fusecor-constant">c_usecor constant</A>
: <A HREF="../ch05_04.htm#ch05-SECT-4.0.1">5.4.1. Package constants</A>
<DT><A NAME="c.5fword-constant">c_word constant</A>
: <A HREF="../ch05_21.htm#ch05-SECT-21.0.1">5.21.1. Package constants</A>
<DT><A NAME="c.5fwrite-constant">c_write constant</A>
: <A HREF="../ch05_11.htm">5.11.1. Package constants and exceptions</A>
<DT><A NAME="calc.5ftotals-procedure">calc_totals procedure</A>
: <A HREF="../ch22_01.htm">22.1.6.5. Integrating PLVexc with PLVtrc </A>
<DT><A NAME="calibrate-procedure">calibrate procedure</A>
: <A HREF="../ch05_27.htm#ch05-SECT-27.0.6">5.27.6. Calibration and timing scripts</A>
<DT><A NAME="calltype-function">calltype function</A>
: <A HREF="../ch06_03.htm#ch06-SECT-3.1">6.3.1. Using the assert Procedure</A>
<DT><A NAME="capitalization">capitalization</A>
<DD><DL>
  <DT><A HREF="../ch02_02.htm">2.2. Using Effective Coding Style for Packages</A>
  <DT><A HREF="../ch15_04.htm#ch15-SECT-4.1">15.4.1. How to Find Source Code</A>
  <DT><A HREF="../ch18_01.htm">18.1. PLVcase: Converting the Case of PL/SQL Programs</A>
  <DT>case sensitivity
: <A HREF="../ch02_05.htm#ch02-SECT-5.3">2.5.2. Making Your Programs Case-Insensitive</A>
</DL>
<DT><A NAME="capture-procedure">capture procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_27.htm#ch05-SECT-27.0.6">5.27.4. Capturing the current timestamp</A>
  <DT><A HREF="../ch14_02.htm">14.2. Capturing the Start Time</A>
</DL>
<DT><A NAME="case-sensitivity">case sensitivity</A>
: <A HREF="../ch02_05.htm#ch02-SECT-5.3">2.5.2. Making Your Programs Case-Insensitive</A>
<DT><A NAME="cataloging-code">cataloging code</A>
: <A HREF="../ch18_02.htm#ch18-SECT-2.2">18.2. PLVcat: Cataloguing PL/SQL Source Code</A>
<DT><A NAME="cfloop-procedure">cfloop procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.10. Miscellaneous code generators</A>
  <DT><A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.8. Generating a Cursor FOR Loop</A>
</DL>
<DT><A NAME="char.5fname-function">char_name function</A>
: <A HREF="../ch05_06.htm#ch05-SECT-6.0.3">5.6.3. Other functions and procedures</A>
<DT><A NAME="characters">characters</A>
<DD><DL>
  <DT>line separator
: <A HREF="../ch07_02.htm">7.2. The Line Separator</A>

<DT>string
:<A HREF="../ch05_06.htm#ch05-SECT-6.0.3">5.6. PLVchr: Operations on Single Characters</A>

  <DT>(see also <A HREF="idx_s.htm">strings</A>)
  </DL>
<DT><A NAME="checking">checking existence</A>
<DD><DL>


    <DT>Record Found? function
: <A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.7. Generating a "Record Found?" Function</A>

  <DT>of files
: <A HREF="../ch13_03.htm">13.3. Creating and Checking Existence of Files</A>
    <DT>last PLVobj cursor record
: <A HREF="../ch11_04.htm">11.4.3. Checking for Last Record</A>
</DL>
<DT><A NAME="checking-input">checking input</A>
: <A HREF="../ch03_08.htm#ch03-SECT-8.1">3.8.1. When the num_in Argument Is 0</A>
<DT><A NAME="clear.5fbailouts-procedure">clear_bailouts procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_10.htm#ch05-SECT-10.0.2">5.10.7. Bailing out program execution</A>
  <DT><A HREF="../ch22_01.htm">22.1.10.1. Managing the bailout error list</A>
</DL>
<DT><A NAME="clear.5fpstab-procedure">clear_pstab procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_17.htm#ch05-SECT-17.0.5">5.17.6. Managing the log </A>
  <DT><A HREF="../ch21_01.htm">21.1.4.1. Counting and clearing the PL/SQL table</A>
</DL>
<DT><A NAME="clearecs-procedure">clearecs procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_28.htm#ch05-SECT-28.0.8">5.28.8. Accessing the PLVtrc execution call stack (ECS)</A>
  <DT><A HREF="../ch21_02.htm#ch21-SECT-2.1">21.2.4.5. Emptying the stack</A>
</DL>
<DT><A NAME="clearing">clearing</A>
: (see <A HREF="idx_d.htm">deleting</A>)
<DT><A NAME="client.2dside-packages">client-side packages</A>
: <A HREF="../ch01_02.htm#ch01-SECT-2.2">1.2.2. The Client-Side Layers</A>
<DT><A NAME="close.5fobjects-procedure">close_objects procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_20.htm#ch05-SECT-20.0.8">5.20.5. Interfacing with the PLVobj cursor</A>
  <DT><A HREF="../ch11_04.htm">11.4.1. Opening and Closing the PLVobj Cursor</A>
</DL>
<DT><A NAME="closesrc-procedure">closesrc procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_15.htm#ch05-SECT-15.0.4">5.15.4. Managing the source repository</A>
  <DT><A HREF="../ch12_09.htm#ch12-SECT-9.2">12.9.1. Closing the Source</A>
</DL>
<DT><A NAME="closetrg-procedure">closetrg procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_15.htm#ch05-SECT-15.0.4">5.15.6. Managing the target repository</A>
  <DT><A HREF="../ch12_09.htm#ch12-SECT-9.2">12.9.2. Closing the Target</A>
</DL>
<DT><A NAME="closing">closing files</A>
  <DD><DL>
    <DT><A HREF="../ch13_04.htm">13.4. Opening and Closing Files</A>
    <DT><A HREF="../ch21_01.htm">21.1.3.2. Closing the file</A>
  <DT>
: <A HREF="../ch05_11.htm">5.11.8. Closing a file</A>

  <DT>PLVobj cursor
: <A HREF="../ch11_04.htm">11.4.1. Opening and Closing the PLVobj Cursor</A>
  <DT>repository
: <A HREF="../ch12_09.htm#ch12-SECT-9.2">12.9.1. Closing the Source</A>
</DL>

<DT><A NAME="clrtrg-procedure">clrtrg procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_15.htm#ch05-SECT-15.0.4">5.15.6. Managing the target repository</A>
  <DT><A HREF="../ch12_09.htm#ch12-SECT-9.2">12.9.3. Clearing the Target</A>
</DL>
<DT><A NAME="code">code</A>
<DD><DL>
  <DT>(see also <A HREF="idx_p.htm">programming technique</A>)
  <DT><A HREF="../ch01_02.htm#ch01-SECT-2.2">1.2.1. The Iceberg Approach to Coding</A>
  <DT>author
: <A HREF="../ch16_03.htm#ch16-SECT-3.3">16.3.2. Setting the Code Author</A>
  <DT>cataloging
: <A HREF="../ch18_02.htm#ch18-SECT-2.2">18.2. PLVcat: Cataloguing PL/SQL Source Code</A>
  <DT>compiling
: <A HREF="../ch15_01.htm">15. PLVvu: Viewing Source Code and Compile Errors</A>
  <DD><DL>
    <DT>with PLVdyn package
: <A HREF="../ch19_04.htm#ch19-SECT-4.1.7">19.4.1.7. Compiling source code with PLVdyn</A>
  </DL>
  <DT>consolidating
: <A HREF="../ch02_09.htm#ch02-SECT-9.2">2.9.2. Lava Lamp Code Consolidation</A>
  <DT>converting case of
: <A HREF="../ch18_01.htm">18.1.2. A Script to Convert Programs</A>
  <DT>converting to PL/SQL programs
: <A HREF="../ch04_04.htm#ch04-SECT-4.4">4.4.3. Converting Scripts to PL/SQL Programs</A>
  <DT>created during installation
: <A HREF="../ch04_06.htm#ch04-SECT-6.2">4.6. Summary of Files on Disk</A>
  <DT>customizing for users
: <A HREF="../ch02_08.htm">2.8.1.2. Fitting the program to the user </A>
  <DT>debugging/testing
: <A HREF="../ch22_01.htm">22.1. The Challenge of Exception Handling</A>
  <DT>development
: <A HREF="../ch03_01.htm">3. The PL/SQL Development Spiral</A>
  <DT>displaying
: <A HREF="../ch15_02.htm">15.2.2. Setting the Code Overlap</A>
  <DT>dynamic PL/SQL
: <A HREF="../ch19_05.htm#ch19-SECT-5.0.4">19.5.5. Executing Dynamic PL/SQL Code</A>
  <DT>elapsed time of
: <A HREF="../ch05_27.htm#ch05-SECT-27.0.6">5.27. PLVtmr: Program Performance Analyzer</A>
  <DT>execution time of
: (see <A HREF="idx_p.htm">performance</A>)
  <DT>finding source code
: <A HREF="../ch15_04.htm#ch15-SECT-4.1">15.4.1. How to Find Source Code</A>
  <DT>for testing code
: <A HREF="../ch04_06.htm#ch04-SECT-6.2">4.6.2. Contents of the test Subdirectory</A>
  <DT>generating
  <DD><DL>
    <DT><A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13. PLVgen: PL/SQL Code Generator</A>
    <DT><A HREF="../ch16_01.htm">16. PLVgen: Generating PL/SQL Programs</A>
  </DL>
  <DT>generation toggles
: <A HREF="../ch02_06.htm#ch02-SECT-6.3.1">2.6.2. Toggles for Code Generation</A>
  <DT>halting execution of
: <A HREF="../ch05_10.htm#ch05-SECT-10.0.2">5.10.6. Exception handlers</A>
  <DT>implementing windows
: <A HREF="../ch02_07.htm">2.7.3. Implementing the Window</A>
  <DT>layers of
: (see <A HREF="idx_p.htm">packages</A>)
  <DT>line numbers
: <A HREF="../ch16_03.htm#ch16-SECT-3.3">16.3.8. Generating Line Numbers</A>
  <DT>overloading programs
: <A HREF="../ch02_08.htm">2.8. Overloading for Smart Packages</A>
  <DT>parallelization
: <A HREF="../ch01_05.htm#ch01-SECT-5.3">1.5.1.1. Leveraging builtin packages</A>
  <DT>parsing
  <DD><DL>
    <DT><A HREF="../ch05_22.htm#ch05-SECT-22.0.2">5.22. PLVprsps: PL/SQL Source Code Parsing</A>
    <DT><A HREF="../ch10_03.htm#ch10-SECT-3.2.2">10.3.2. Parsing PL/SQL Code</A>
  </DL>
  <DT>parsing program name
: <A HREF="../ch11_03.htm#ch11-SECT-3.2">11.3.2. Converting the Program Name</A>
  <DT>pausing programs
: <A HREF="../ch05_03.htm#ch05-SECT-3.0.2">5.3.6. Miscellaneous programs</A>
  <DT>pinning into memory
: <A HREF="../ch01_04.htm#ch01-SECT-4.1">1.4.3.1. Managing packages in shared memory</A>
  <DT>PL/SQL repositories
: <A HREF="../ch12_01.htm">12. PLVio: Reading and Writing PL/SQL Source Code</A>
  <DT>PLVtmr package with
: <A HREF="../ch14_04.htm#ch14-SECT-4.1">14.4. Using PLVtmr in Scripts</A>
  <DT>redundant
: (see <A HREF="idx_r.htm">redundancy</A>)
  <DT>reusing
  <DD><DL>
    <DT>(see <A HREF="idx_f.htm">flexibilty, code</A>)
    <DT><A HREF="../ch01_02.htm#ch01-SECT-2.2">1.2.1. The Iceberg Approach to Coding</A>
    <DT><A HREF="../ch04_01.htm">4.1.1. The Benefits of PL/Vision</A>
  </DL>
  <DT>size restrictions
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.4. Working with Large Packages</A>
  <DT>standard header
: <A HREF="../ch16_03.htm#ch16-SECT-3.3">16.3.3. Using the Program Header</A>
  <DT>stored
: <A HREF="../ch05_29.htm#ch05-SECT-29.0.4">5.29. PLVvu: Code and Error Viewing </A>
  <DT>testing/debugging
: <A HREF="../ch04_01.htm">4.1.1. The Benefits of PL/Vision</A>
  <DT>tracing
: <A HREF="../ch16_03.htm#ch16-SECT-3.3">16.3.4. Using the Program Trace </A>
  <DT>upgrades and fixes
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.1.6. Hide weaknesses to facilitate upgrades and fixes.</A>
</DL>
<DT><A NAME="code-procedure">code procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_29.htm#ch05-SECT-29.0.4">5.29.3. Displaying stored code</A>
  <DT><A HREF="../ch15_04.htm#ch15-SECT-4.1">15.4.1. How to Find Source Code</A>
  <DT><A HREF="../ch17_02.htm">17.2. Current Sources of Information</A>
</DL>
<DT><A NAME="code.5fafter-procedure">code_after procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_29.htm#ch05-SECT-29.0.4">5.29.3. Displaying stored code</A>
  <DT><A HREF="../ch15_03.htm">15.3.2. Displaying Code by Keyword</A>
  <DT><A HREF="../ch17_02.htm">17.2. Current Sources of Information</A>
</DL>
<DT><A NAME="codependency">codependency, package</A>
: <A HREF="../ch02_04.htm">2.4.1. Creating Codependent Packages</A>
<DT><A NAME="columns">columns, table</A>
: (see <A HREF="idx_t.htm">tables</A>)
<DT><A NAME="comments">comments</A>
<DD><DL>
  <DT><A HREF="../ch02_02.htm">2.2. Using Effective Coding Style for Packages</A>
  <DT><A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.5. Help generators</A>
  <DT><A HREF="../ch05_16.htm#ch05-SECT-16.0.1">5.16.1. Analyzing PL/SQL string content</A>
  <DT><A HREF="../ch10_03.htm#ch10-SECT-3.2.2">10.3.2.1. plsql_string procedure</A>
  <DT><A HREF="../ch17_04.htm#ch17-SECT-4.3">17.4.3. Creating Help Text</A>
  <DT>generating
  <DD><DL>
    <DT><A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.5.1. Generating help text stubs</A>
    <DT><A HREF="../ch16_03.htm#ch16-SECT-3.3">16.3.7. Generating Online Help Text Stubs</A>
  </DL>
  <DT>retrieving
: <A HREF="../ch17_05.htm#ch17-SECT-5.2">17.5.3. Implementing Online Help</A>
</DL>
<DT><A NAME="commit-processing">commit processing</A>
: <A HREF="../ch20_01.htm">20.1. PLVcmt: Enhancing Commit Processing</A>
<DD><DL>
  <DT>incremental commits
: <A HREF="../ch20_01.htm">20.1.3. Performing Incremental Commits</A>
  <DT>toggling
: <A HREF="../ch20_01.htm">20.1.4. Controlling Commit Processing</A>
</DL>
<DT><A NAME="commit.5fafter-procedure">commit_after procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_07.htm#ch05-SECT-7.0.3">5.7.4. Managing the commit counter</A>
  <DT><A HREF="../ch12_09.htm#ch12-SECT-9.2">12.9.3. Clearing the Target</A>
  <DT><A HREF="../ch20_01.htm">20.1.3.1. Setting the commit point</A>
</DL>
<DT><A NAME="commits">commits</A>
: <A HREF="../appa_02.htm#appa-SECT-2.1">A.2.6. Builtin Packages</A>
<DT><A NAME="committing-function">committing function</A>
: <A HREF="../ch05_07.htm#ch05-SECT-7.0.3">5.7.1. Controlling commit activity</A>
<DT><A NAME="compatibility">compatibility</A>
<DD><DL>
  <DT><A HREF="../ch03_03.htm">3.3. Supplying Backward Compatibility</A>
  <DT><A HREF="../ch03_11.htm">3.11. Don't Forget Backward Compatibility</A>
</DL>
<DT><A NAME="compile-procedure">compile procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_09.htm#ch05-SECT-9.0.3">5.9.4. Data Definition Language operations</A>
  <DT><A HREF="../ch19_04.htm#ch19-SECT-4.1.7">19.4.1.7. Compiling source code with PLVdyn</A>
</DL>
<DT><A NAME="compiling">compiling errors</A>
<DD><DL>
<DT> <A HREF="../ch15_01.htm">15. PLVvu: Viewing Source Code and Compile Errors</A>
  <DT>
<A HREF="../ch05_29.htm#ch05-SECT-29.0.4">5.29.4. Displaying compile errors</A>
</DL>
<DT><A NAME="compiling-code">compiling code</A>
<DD><DL>
<DT> <A HREF="../ch01_03.htm#ch01-SECT-3.1">1.3.6. Performance Improvement</A>

  <DT>with PLVdyn
: <A HREF="../ch19_04.htm#ch19-SECT-4.1.7">19.4.1.7. Compiling source code with PLVdyn</A>
</DL>
<DT><A NAME="conditional-logic">conditional logic</A>
<DD><DL>
  <DT><A HREF="../appa_01.htm">A.1.1. Conditional Logic</A>
  <DT><A HREF="../appa_02.htm#appa-SECT-2.1">A.2.1. Conditional Logic</A>
</DL>
<DT><A NAME="configuring">configuring</A>
PLVfk package
: <A HREF="../ch19_06.htm#ch19-SECT-6.4">19.6.2. Configuring the PLVfk Package</A>

<DT><A NAME="connect-command">CONNECT command</A>
: <A HREF="../ch07_01.htm">7.1.2. Displaying Dates</A>
<DT><A NAME="consolidation-of-code">consolidation of code</A>
: <A HREF="../ch02_09.htm#ch02-SECT-9.2">2.9.2. Lava Lamp Code Consolidation</A>
<DT><A NAME="constant-declaration">CONSTANT declaration</A>
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.1.4. Remove hard-coded literals from your application</A>
<DT><A NAME="constants">constants</A>:
(see <A HREF="idx_l.htm">literals</A>)
  
<DT><A NAME="convert.5ftype-procedure">convert_type procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_20.htm#ch05-SECT-20.0.8">5.20.8. Miscellaneous PLVobj programs</A>
  <DT><A HREF="../ch11_03.htm#ch11-SECT-3.2">11.3.2. Converting the Program Name</A>
</DL>
<DT><A NAME="converting">converting</A>
<DD><DL>
  <DT>PL/SQL table to database table
: <A HREF="../ch21_01.htm">21.1.4.3. Transferring a PL/SQL table log to a database table</A>
 <DT><A NAME="converting-case">case</A>
: (see <A HREF="idx_c.htm">capitalization</A>)

 <DT>program name
: <A HREF="../ch11_03.htm#ch11-SECT-3.2">11.3.2. Converting the Program Name</A>
<DT><A NAME="converting-scripts-into-pl.2fsql">scripts into PL/SQL</A>
: <A HREF="../ch04_04.htm#ch04-SECT-4.4">4.4.3. Converting Scripts to PL/SQL Programs</A>

</DL>
<DT><A NAME="convobj-procedure">convobj procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_20.htm#ch05-SECT-20.0.8">5.20.8. Miscellaneous PLVobj programs</A>
  <DT><A HREF="../ch11_03.htm#ch11-SECT-3.2">11.3.2. Converting the Program Name</A>
</DL>
<DT><A NAME="copying">copying</A>
<DD><DL>
  <DT>file contents
: <A HREF="../ch13_07.htm#ch13-SECT-7.3">13.7. Copying File Contents</A>
  <DT><A NAME="copying-files">files</A>
: <A HREF="../ch05_11.htm">5.11.11. Copying a file</A>
<DT>from source to target repository
: <A HREF="../ch05_15.htm#ch05-SECT-15.0.4">5.15.9. Miscellaneous PLVio programs</A>
  <DT>object names into table
: <A HREF="../ch11_06.htm">11.6. Populating a PL/SQL Table with Object Names</A>
  <DT>source to target repository
: <A HREF="../ch12_07.htm">12.7.2. Batch Transfer of Source to Target</A>
</DL>

<DT><A NAME="cor-procedure">cor procedure</A>
: <A HREF="../ch19_04.htm#ch19-SECT-4.1.7">19.4.1.7. Compiling source code with PLVdyn</A>
<DT><A NAME="counter">counter, commit</A>
: <A HREF="../ch05_07.htm#ch05-SECT-7.0.3">5.7.4. Managing the commit counter</A>
<DT><A NAME="counter">counter, PLVcmt</A>
: (see <A HREF="idx_p.htm">PLVcmt package</A>)
<DT><A NAME="cover-packages">cover packages</A>
: <A HREF="../ch01_06.htm#ch01-SECT-6.2.1">1.6.4. Working with Large Packages</A>
<DT><A NAME="cpu-time">CPU time</A>
: (see <A HREF="idx_p.htm">performance</A>)
<DT><A NAME="create-or-replace">CREATE OR REPLACE</A>
<DD><DL>
<DT> <A HREF="../ch17_05.htm#ch17-SECT-5.2">17.5.2. Locating Text in the Data Dictionary</A>
<DT><A NAME="create-or-replace-programs"></A>
: <A HREF="../ch19_04.htm#ch19-SECT-4.1.7">19.4.1.7. Compiling source code with PLVdyn</A>
</DD></DL>
<DT><A NAME="create.2dor.2dreplace-syntax">create-or-replace syntax</A>
: <A HREF="../ch16_03.htm#ch16-SECT-3.3">16.3.9. Including CREATE OR REPLACE</A>
<DT><A NAME="creating">creating</A>
<DD><DL>
  <DT>files
: <A HREF="../ch13_03.htm">13.3. Creating and Checking Existence of Files</A>
  <DT><A NAME="creating-lists">lists</A>
: <A HREF="../ch05_18.htm#ch05-SECT-18.0.2">5.18.2. Creating and destroying lists</A>

<DT>messages
: <A HREF="../ch09_02.htm#ch09-SECT-2.2">9.2. Storing Message Text</A>
  <DT>stacks
: <A HREF="../ch05_24.htm#ch05-SECT-24.0.1">5.24.2. Creating and destroying stacks</A>

</DL><DT><A NAME="creativity">creativity</A>
: <A HREF="../ch04_01.htm">4.1.1. The Benefits of PL/Vision</A>
<DT><A NAME="curdecl-procedure">curdecl procedure</A>
<DD><DL>
  <DT><A HREF="../ch05_13.htm#ch05-SECT-13.0.5">5.13.10. Miscellaneous code generators</A>
  <DT><A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.6. Generating a Cursor Declaration</A>
</DL>
<DT><A NAME="curfail-procedure">curfail procedure</A>
: <A HREF="../ch05_27.htm#ch05-SECT-27.0.6">5.27.6. Calibration and timing scripts</A>
<DT><A NAME="currmod-function">currmod function</A>
<DD><DL>
  <DT><A HREF="../ch05_28.htm#ch05-SECT-28.0.8">5.28.6. Tracing PL/SQL code execution</A>
  <DT><A HREF="../ch21_02.htm#ch21-SECT-2.1">21.2.4.3. Current module</A>
</DL>
<DT><A NAME="currname-function">currname function</A>
<DD><DL>
  <DT><A HREF="../ch05_20.htm#ch05-SECT-20.0.8">5.20.4. Accessing the current object</A>
  <DT><A HREF="../ch11_03.htm#ch11-SECT-3.2">11.3.1. Setting Individual Elements of Current Object</A>
</DL>
<DT><A NAME="currschema-function">currschema function</A>
<DD><DL>
  <DT><A HREF="../ch05_20.htm#ch05-SECT-20.0.8">5.20.4. Accessing the current object</A>
  <DT><A HREF="../ch11_03.htm#ch11-SECT-3.2">11.3.1. Setting Individual Elements of Current Object</A>
</DL>
<DT><A NAME="currtype-function">currtype function</A>
<DD><DL>
  <DT><A HREF="../ch05_20.htm#ch05-SECT-20.0.8">5.20.4. Accessing the current object</A>
  <DT><A HREF="../ch11_03.htm#ch11-SECT-3.2">11.3.1. Setting Individual Elements of Current Object</A>
</DL>
<DT><A NAME="cursors">cursors</A>
<DD><DL>
  <DT><A HREF="../appa_01.htm">A.1.4. Cursors</A>
  <DT><A HREF="../appa_02.htm#appa-SECT-2.1">A.2.4. Cursors</A>
  <DT><A HREF="../ch01_03.htm#ch01-SECT-3.1">1.3.4. Object Persistence</A>
  <DT><A HREF="../ch01_04.htm#ch01-SECT-4.1">1.4.1. The Package Specification</A>
  <DT>binding objects to
: <A HREF="../ch11_05.htm">11.5. Binding Objects to a Dynamic Cursor</A>
  <DT>FOR loop
  <DD><DL>
    <DT><A HREF="../ch11_07.htm">11.7. A Programmatic Cursor FOR Loop</A>
    <DT><A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.8. Generating a Cursor FOR Loop</A>
  </DL>
  <DT>generating declaration
: <A HREF="../ch16_02.htm#ch16-SECT-2.3.2">16.2.6. Generating a Cursor Declaration</A>
  <DT>PLVobj
: <A HREF="../ch05_20.htm#ch05-SECT-20.0.8">5.20.5. Interfacing with the PLVobj cursor</A>
  <DT>PLVobj package (obj_cur)
  <DD><DL>
    <DT><A HREF="../ch11_02.htm">11.2.1. Cursor Into ALL_OBJECTS</A>
    <DT><A HREF="../ch11_04.htm">11.4.1. Opening and Closing the PLVobj Cursor</A>
  </DL>
</DL>
<DT><A NAME="cursucc-procedure">cursucc procedure</A>
: <A HREF="../ch05_27.htm#ch05-SECT-27.0.6">5.27.6. Calibration and timing scripts</A>
<DT><A NAME="customizing">customizing</A>

parsing delimiter
: <A HREF="../ch10_01.htm">10.1.2. Customizing the Delimiter Set</A>

<DT><A NAME="customizing-programs-for-users">customizing programs for users</A>
: <A HREF="../ch02_08.htm">2.8.1.2. Fitting the program to the user </A>
</DL>

<P>
<HR WIDTH="515" ALIGN="LEFT">

<FONT SIZE="-1">
<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| C
| <A HREF="idx_d.htm">D</A>
| <A HREF="idx_e.htm">E</A>
| <A HREF="idx_f.htm">F</A>
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| <A HREF="idx_i.htm">I</A>
| <A HREF="idx_k.htm">K</A>
| <A HREF="idx_l.htm">L</A>
| <A HREF="idx_m.htm">M</A>
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| <A HREF="idx_p.htm">P</A>
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_y.htm">Y</A>
| <A HREF="idx_z.htm">Z</A></FONT>

<hr><IMG SRC="../../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../../copyrght.htm#copy">Copyright (c) 2000</A> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY>

<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML>
