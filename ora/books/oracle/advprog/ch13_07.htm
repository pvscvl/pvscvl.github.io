<HTML
><HEAD
><TITLE
>[Chapter 13] 13.7 Copying File Contents</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:28:15Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-238-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-238-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL SQL Oracle Packages"><META
NAME="DC.Title"
CONTENT="Advanced Oracle PL/SQL Programming with Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch13_01.htm"
TITLE="13. PLVfile: Reading and Writing Operating System Files"><LINK
REL="prev"
HREF="ch13_06.htm#ch13-SECT-6.1"
TITLE="13.6 Writing to a File"><LINK
REL="next"
HREF="ch13_08.htm"
TITLE="13.8 Displaying File Contents"></HEAD>
<BODY><DIV CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Advanced Oracle PL/SQL Programming with Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_06.htm#ch13-SECT-6.1"
TITLE="13.6 Writing to a File"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 13.6 Writing to a File"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch13_01.htm"
TITLE="13. PLVfile: Reading and Writing Operating System Files"
>Chapter 13<BR>PLVfile: Reading and Writing Operating System Files</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_08.htm"
TITLE="13.8 Displaying File Contents"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13.8 Displaying File Contents"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch13-31415"
>13.7 Copying File Contents</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-998508-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-998508-1"
></A
>PLVfile offers several different programs to copy the contents of a file. You can copy from one file to another, from a file to a <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table, and from a <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table to a file. These programs are explained below.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-SECT-7.1"
>13.7.1 Copying File to File</A
></H3
><P
CLASS="para"
>You can copy the entire contents of one file to another file with a single program call via the <KBD
CLASS="command"
>fcopy</KBD
><A
CLASS="indexterm"
NAME="ch13-idx-998509-0"
></A
> procedure; its header is shown here:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE fcopy 
   (ofile_in IN VARCHAR2,
    nfile_in IN VARCHAR2,
    start_in IN INTEGER := 1,
    end_in IN INTEGER := NULL);</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The <KBD
CLASS="command"
>ofile_in</KBD
> string is the name of the "original" file. The <KBD
CLASS="command"
>nfile_in</KBD
> string is the name of the "new" file. You can also specify which lines from the original file you want to copy. The <KBD
CLASS="command"
>start_in</KBD
> value is the number of the first line to copy. The <KBD
CLASS="command"
>end_in</KBD
> argument is the last line of the file to copy. If the <KBD
CLASS="command"
>end_in</KBD
> argument is NULL, then all lines from the <KBD
CLASS="command"
>start_in</KBD
> line to the end of the file are copied.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-SECT-7.2"
>13.7.2 Copying File to PL/SQL Table</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-998510-0"
></A
>You can copy the contents of a file directly into a <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table with the <KBD
CLASS="command"
>file2pstab</KBD
><A
CLASS="indexterm"
NAME="ch13-idx-998511-0"
></A
> program. The header for the procedure is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE file2pstab 
   (file_in IN VARCHAR2,
    table_inout IN OUT PLVtab.vc2000_table,
    rows_out OUT INTEGER);</PRE
></BLOCKQUOTE
><P
CLASS="para"
>You specify the name of the file and provide the procedure with a <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table declared using the PLVtab package. Each line of the file is then copied into consecutive rows in the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table. The <KBD
CLASS="command"
>rows_out</KBD
> argument contains the total number of rows set in the table. If the file is empty, the <KBD
CLASS="command"
>rows_out</KBD
> argument will be set to 0.</P
><P
CLASS="para"
>Once you have moved the file contents to a <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table, you can access the information in any <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> program. </P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-SECT-7.3"
>13.7.3 Copying File to List</A
></H3
><P
CLASS="para"
>You can copy the contents of a file directly into a PL/Vision list, implemented using the PLVlst package. The header for the procedure is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE <A
CLASS="indexterm"
NAME="ch13-idx-998512-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-998512-1"
></A
>file2list (file_in IN VARCHAR2, list_in IN VARCHAR);</PRE
></BLOCKQUOTE
><P
CLASS="para"
>where <KBD
CLASS="command"
>file_in</KBD
> is the file name and <KBD
CLASS="command"
>list_in</KBD
> is the name of the PL/Vision list. This list is implemented in a <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table. </P
><P
CLASS="para"
>If the list does not exist, it is initialized by <KBD
CLASS="command"
>file2list</KBD
>. If the list already exists, the lines from the file are appended to the end of the list.</P
><P
CLASS="para"
>The combination of <KBD
CLASS="command"
>PLVfile.file2list</KBD
> and the full set of list management programs in PLVlst offers you a powerful means of storing lists of information in operating system files and then integrating that information into <SPAN
CLASS="acronym"
>PL/SQL</SPAN
>-based applications.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-SECT-7.4"
>13.7.4 Copying PL/SQL Table to File</A
></H3
><P
CLASS="para"
>You can perform a "bulk" write to a file with the <KBD
CLASS="command"
>pstab2file</KBD
> procedure. This program transfers the contents of a VARCHAR2 <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table into the specified file. The header for this procedure is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE <A
CLASS="indexterm"
NAME="ch13-idx-998513-0"
></A
>pstab2file 
   (table_in IN PLVtab.vc2000_table,
    rows_in IN INTEGER,
    file_in IN VARCHAR2,
    mode_in IN VARCHAR2 := c_write);</PRE
></BLOCKQUOTE
><P
CLASS="para"
>where the first argument is <KBD
CLASS="command"
>table_in</KBD
>, the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table (defined using the PLVtab package). The <KBD
CLASS="command"
>rows_in</KBD
> parameter provides the number of rows in the table (<KBD
CLASS="command"
>pstab2file</KBD
> assumes that the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table is populated sequentially from row 1). The string <KBD
CLASS="command"
>file_in</KBD
> provides the file name. Finally, you can also provide the file operation mode in the <KBD
CLASS="command"
>mode_in</KBD
> argument. The default value for <KBD
CLASS="command"
>mode_in</KBD
> is <KBD
CLASS="command"
>PLVfile.c_write</KBD
>, which means that any existing roles in the specified file will be replaced by the contents of the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table. </P
><P
CLASS="para"
>You can also request that the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table be transferred in "append mode." In this case, all <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table data will be appended to the end of the file. This approach is shown below:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PLVfile.pstab2file
   (my_table, rows_in_tab, 'temp.sql', PLVfile.c_append);</PRE
></BLOCKQUOTE
><P
CLASS="para"
>If you try to execute <KBD
CLASS="command"
>pstab2file</KBD
> with the read-only mode, <KBD
CLASS="command"
>PLVfile.c_read</KBD
>, you will receive an error.</P
><P
CLASS="para"
>If <KBD
CLASS="command"
>pstab2file</KBD
> encounters any undefined rows between 1 and <KBD
CLASS="command"
>rows_in</KBD
> - 1, it will trap the NO_DATA_FOUND exception and continue past that error. It will, as a result, transfer as many rows as possible from the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table.</P
><P
CLASS="para"
>The following script (stored in the file <KBD
CLASS="command"
>dumpprog.sql</KBD
>) shows how to use the <KBD
CLASS="command"
>pstab2file</KBD
> to generate a source code file for the specified program.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>BEGIN
   /* Set the current object from user. */
   PLVobj.setcurr ('&amp;1');

   /* Read from ALL_SOURCE, write to PL/SQL table. */
   PLVio.asrc;
   PLVio.settrg (PLV.pstab);

   /* Copy the program source to the PL/SQL table. */
   PLVio.src2trg;

   /* Write the contents of the PL/SQL table to a file. */
   PLVfile.pstab2file 
      (PLVio.target_table, PLVio.target_row, '&amp;2');   
END;
/</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Here is the command you would execute in SQL*Plus to copy the stored source code of the body of the PLVvu package to a file named <KBD
CLASS="command"
>PLVvu.spp</KBD
>:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; @dumpprog b:PLVvu PLVvu.spp<A
CLASS="indexterm"
NAME="ch13-idx-998515-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-998515-1"
></A
></PRE
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_06.htm#ch13-SECT-6.1"
TITLE="13.6 Writing to a File"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 13.6 Writing to a File"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Oracle PL/SQL Programming with Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_08.htm"
TITLE="13.8 Displaying File Contents"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13.8 Displaying File Contents"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>13.6 Writing to a File</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>13.8 Displaying File Contents</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly & Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
