<HTML
><HEAD
><TITLE
>[Chapter 6] 6.4 PLV Utilities</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:26:35Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-238-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-238-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL SQL Oracle Packages"><META
NAME="DC.Title"
CONTENT="Advanced Oracle PL/SQL Programming with Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch06_01.htm"
TITLE="6. PLV: Top-Level Constants and Functions "><LINK
REL="prev"
HREF="ch06_03.htm#ch06-SECT-3.1"
TITLE="6.3 Assertion Routines"><LINK
REL="next"
HREF="ch06_05.htm"
TITLE="6.5 The Predefined Datatypes"></HEAD>
<BODY><DIV CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Advanced Oracle PL/SQL Programming with Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_03.htm#ch06-SECT-3.1"
TITLE="6.3 Assertion Routines"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.3 Assertion Routines"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch06_01.htm"
TITLE="6. PLV: Top-Level Constants and Functions "
>Chapter 6<BR>PLV: Top-Level Constants and Functions </A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_05.htm"
TITLE="6.5 The Predefined Datatypes"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.5 The Predefined Datatypes"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch06-26752"
>6.4 PLV Utilities</A
></H2
><P
CLASS="para"
>PL/Vision comes with a set of utility procedures and functions. These programs offer shortcuts to executing commonly needed operations or information in <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> programs. In some cases, the utility exists simply to make it possible to access the information from within a <SPAN
CLASS="acronym"
>SQL</SPAN
> statement. These programs are described below.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-SECT-4.1"
>6.4.1 Converting Boolean to String</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch06-idx-997916-0"
></A
>The <KBD
CLASS="command"
>boolstg</KBD
> function<A
CLASS="indexterm"
NAME="ch06-idx-997915-0"
></A
> translates a Boolean expression into a strin<A
CLASS="indexterm"
NAME="ch06-idx-997917-0"
></A
>g describing that Boolean's value. The header for <KBD
CLASS="command"
>boolstg</KBD
> is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>   FUNCTION boolstg 
      (bool_in IN BOOLEAN, stg_in IN VARCHAR2 := NULL)
   RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The second argument allows you to pass a string that is prefixed to the string describing the Boolean (TRUE, FALSE, or NULL). The various ways to call <KBD
CLASS="command"
>PLV.boolstg</KBD
> are illustrated below:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; exec p.l(PLV.boolstg (TRUE));
TRUE
SQL&gt; exec p.l(PLV.boolstg (TRUE, 'This is'));
This is TRUE</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-SECT-4.2"
>6.4.2 Obtaining the Error <A
CLASS="indexterm"
NAME="ch06-idx-997919-0"
></A
>Message</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch06-idx-997920-0"
></A
>The <KBD
CLASS="command"
>errm</KBD
> function <A
CLASS="indexterm"
NAME="ch06-idx-997918-0"
></A
>provides a <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> function interface to the SQLER<A
CLASS="indexterm"
NAME="ch06-idx-997921-0"
></A
>RM builtin function. You cannot call SQLERRM in a <SPAN
CLASS="acronym"
>SQL</SPAN
> statement, which is annoying when you have error information in a <SPAN
CLASS="acronym"
>SQL</SPAN
> database table and you want to display the corresponding error message text. You want to do something like this:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SELECT errcode, SQLERRM (errcode)
  FROM error_log
 WHERE create_ts &lt; SYSDATE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>but the <SPAN
CLASS="acronym"
>SQL</SPAN
> layer returns this error message:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>ORA-00904: invalid column name</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The <KBD
CLASS="command"
>errm</KBD
> function allows you to use SQLERRM inside <SPAN
CLASS="acronym"
>SQL</SPAN
> by hiding that builtin behind the function interface and by using the RESTRICT_REFERENCES pragma in the specification. With PLV, you change that <SPAN
CLASS="acronym"
>SQL</SPAN
> statement to:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SELECT errcode, PLV.errm (errcode)
  FROM error_log
 WHERE create_ts &lt; SYSDATE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>and get the information you need to analyze and fix your problems.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-SECT-4.3"
>6.4.3 Retrieving Date and Time<A
CLASS="indexterm"
NAME="ch06-idx-997922-0"
></A
></A
></H3
><P
CLASS="para"
>The <KBD
CLASS="command"
>now</KBD
> function<A
CLASS="indexterm"
NAME="ch06-idx-997923-0"
></A
> is simply a quick way to display the current date and time. Its header is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION now RETURN VARCHAR2;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>I built <KBD
CLASS="command"
>PLV.now</KBD
> because I got tired of typing:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SELECT TO_CHAR (SYSDATE, 'HH:MI:SS') FROM dual;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>just to see the current time. With <KBD
CLASS="command"
>PLV.now</KBD
>, you can at any point see both the date and time from within SQL*Plus with either of these commands:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>------------------------------------------
SQL&gt; SELECT PLV.now from DUAL;
------------------------------------------

August 3, 1996 20:19:35 

SQL&gt; exec p.l(PLV.now);
August 3, 1996 20:20:48</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-SECT-4.4"
>6.4.4 Pausing Your Program<A
CLASS="indexterm"
NAME="ch06-idx-997925-0"
></A
></A
></H3
><P
CLASS="para"
>The <KBD
CLASS="command"
>pause</KBD
> procedur<A
CLASS="indexterm"
NAME="ch06-idx-997924-0"
></A
>e of the PLV package provides a cover for the DBMS_LOCK.SLEEP procedure; its header is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE pause (seconds_in IN INTEGER);</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Why bother providing this <KBD
CLASS="command"
>pause</KBD
> program, when it is nothing more than a call to the builtin SLEEP procedure? Most <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> developers will never use the DBMS_LOCK package; few of us need to create and manipulate locks with the Oracle Lock Management services. Yet this package contains SLEEP because it is the context in which Oracle developers realized they needed this capability.</P
><P
CLASS="para"
>The <KBD
CLASS="command"
>PLV.pause</KBD
> procedure offers, at least within PL/Vision, a more rational location for this technology.</P
><P
CLASS="para"
>The following "infinite" loop uses <KBD
CLASS="command"
>PLV.pause</KBD
> to make sure that there is an hour's delay between each retrieval of data from a DBMS_PIPE named <KBD
CLASS="command"
>hourly_production</KBD
>. </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>LOOP
   process_line_data ('hourly_production');
   PLV.pause (60 * 60);
END LOOP;</PRE
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_03.htm#ch06-SECT-3.1"
TITLE="6.3 Assertion Routines"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.3 Assertion Routines"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Oracle PL/SQL Programming with Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_05.htm"
TITLE="6.5 The Predefined Datatypes"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.5 The Predefined Datatypes"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>6.3 Assertion Routines</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>6.5 The Predefined Datatypes</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly & Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
