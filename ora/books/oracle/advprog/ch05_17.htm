<HTML
><HEAD
><TITLE
>[Chapter 5] 5.17 PLVlog: Logging Facility</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:25:15Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-238-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-238-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL SQL Oracle Packages"><META
NAME="DC.Title"
CONTENT="Advanced Oracle PL/SQL Programming with Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch05_01.htm"
TITLE="5. PL/Vision Package Specifications"><LINK
REL="prev"
HREF="ch05_16.htm#ch05-SECT-16.0.1"
TITLE="5.16 PLVlex: Lexical Analysis"><LINK
REL="next"
HREF="ch05_18.htm#ch05-SECT-18.0.2"
TITLE="5.18 PLVlst: List Manager"></HEAD>
<BODY><DIV CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Advanced Oracle PL/SQL Programming with Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_16.htm#ch05-SECT-16.0.1"
TITLE="5.16 PLVlex: Lexical Analysis"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.16 PLVlex: Lexical Analysis"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch05_01.htm"
TITLE="5. PL/Vision Package Specifications"
>Chapter 5<BR>PL/Vision Package Specifications</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_18.htm#ch05-SECT-18.0.2"
TITLE="5.18 PLVlst: List Manager"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.18 PLVlst: List Manager"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch05-SECT-17"
>5.17 PLVlog: Logging Facility</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch05-idx-1001359-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001359-1"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001359-2"
></A
>The PLVlog (PL/Vision LOGging) package provides a powerful, generic logging facility for <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> packages. See <A
CLASS="xref"
HREF="ch21_01.htm"
>Chapter 21, <CITE
CLASS="chapter"
>PLVlog and PLVtrc: Logging and Tracing</CITE
></A
> for details.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-17.0.1"
>5.17.1 Package constants</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> c_file CONSTANT VARCHAR2(100) := 'PLV.log';</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The default name of the file contains the PL/Vision log when writing to an operating system file. This can be&nbsp;-- and usually would be&nbsp;-- overridden with your own file name. It is only applicable if you are using <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> Release 2.3 or above.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> c_noaction CONSTANT PLV.plsql_identifier%TYPE := '*NO ROLLBACK*';</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Name for rollback activity to not perform any rollback.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> c_none CONSTANT PLV.plsql_identifier%TYPE := '*FULL*';</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Name to indicate that a full rollback should occur.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> c_default CONSTANT PLV.plsql_identifier%TYPE := '*DEFAULT*';</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Name to indicate that a rollback should occur to the default savepoint.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> c_last CONSTANT PLV.plsql_identifier%TYPE := '*PLVRB-LAST*';</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Name to indicate that a rollback should occur to the last savepoint recorded by PLVrb.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> c_PLVlogsp CONSTANT PLV.plsql_identifier%TYPE :=</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   'PLVlog_savepoint';</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The default savepoint issued after a write to the log. </P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-17.0.2"
>5.17.2 Controlling logging activity</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE turn_on;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns on the logging activity; calls to <KBD
CLASS="command"
>put_line</KBD
> write information to the log (default).</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE turn_off;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns off the log mechanism.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION tracing RETURN BOOLEAN;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns TRUE if the log is active.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-17.0.3"
>5.17.3 Selecting the log type</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE sendto</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001360-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (type_in IN VARCHAR2, file_in IN VARCHAR2 := NULL);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Generic program to indicate the type of log (the repository to which information will be sent). The valid types are stored in the PLV package. If you choose <KBD
CLASS="command"
>PLV.file</KBD
>, you need to also provide a file name. You can also set the log type by calling one of the following procedures.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE to_pstab;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001361-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that the information be sent to a <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE to_dbtab;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001362-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that the information be sent to a database table.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE to_file (file_in IN VARCHAR2);</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001363-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that the information be sent to an operating system file.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE to_stdout;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001364-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that the information be sent to standard output.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION logtype RETURN VARCHAR2;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001365-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the current log target type. This type will be one of the repository constants defined in the PLV package.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-17.0.4"
>5.17.4 Writing to the log </A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE put_line</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001366-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001366-1"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (context_in IN VARCHAR2,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    code_in IN INTEGER,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    string_in IN VARCHAR2 := NULL,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    create_by_in IN VARCHAR2 := USER,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    rb_to_in IN VARCHAR2 := c_default,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    override_in IN BOOLEAN := FALSE);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Writes a line to the PLVlog repository. This version of <KBD
CLASS="command"
>put_line</KBD
> allows you to specify a full set of values for the log record.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE put_line</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001367-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (string_in IN VARCHAR2,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    rb_to_in IN VARCHAR2 := c_default,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    override_in IN BOOLEAN := FALSE);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>This version of <KBD
CLASS="command"
>put_line</KBD
> keeps to an absolute minimum what you have to/want to provide to write a line to the log.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-17.0.5"
>5.17.5 Reading the log </A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE get_line </CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001368-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001368-1"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (row_in IN INTEGER,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    context_out OUT VARCHAR2,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    code_out OUT INTEGER,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    string_out OUT VARCHAR2,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    create_by_out OUT VARCHAR2,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    create_ts_out OUT DATE);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reads a row from the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table log, parses the contents, and returns the individual values in the separate OUT arguments of the parameter list.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE display (header_in IN VARCHAR2 := 'PL/Vision Log');</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001369-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Displays the contents of the current PLVlog log (either in the database table or in the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table).</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-17.0.6"
>5.17.6 Managing the log </A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE clear_pstab;    </CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001370-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Empties the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table associated with the PLVlog mechanism.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION pstab_count RETURN INTEGER;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001371-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the number of rows filled in the PLVlog <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE set_dbtab</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001372-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (table_in IN VARCHAR2 := 'PLV_log', </CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    context_col_in IN VARCHAR2 := 'context', </CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    code_col_in IN VARCHAR2 := 'code',  </CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    text_col_in IN VARCHAR2 := 'text',  </CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    create_ts_col_in IN VARCHAR2 :=  'create_ts',</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    create_by_col_in IN VARCHAR2 := 'create_by');</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Determines which database table is to be used by PLVlog for logging. PLVlog relies on dynamic <SPAN
CLASS="acronym"
>SQL</SPAN
>, so you can at runtime specify the table and column names for this table.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE fclose;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001373-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Closes the operating system file if you have chosen a file for the log repository.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE ps2db;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001374-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Transfers contents of <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> log to the PLVlog database table.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-17.0.7"
>5.17.7 Rolling back in PLVlog</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE do_rollback;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001375-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001375-1"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns on the issuing of a ROLLBACK before an INSERT into the log.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE nodo_rollback;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001376-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns off the issuing of a ROLLBACK before an INSERT into the log.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION rolling_back RETURN BOOLEAN;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001377-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns TRUE if PLVlog is issuing a ROLLBACK before an INSERT.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE rb_to (savepoint_in IN VARCHAR2 := c_none);</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001378-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Sets the default savepoint used both for the ROLLBACK command before a log insert and the SAVEPOINT command after the log insert.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE rb_to_last;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001379-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Sets the savepoint used both for the ROLLBACK command before a log insert to the last savepoint known to PLVrb.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE rb_to_default;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001380-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Sets the default savepoint used both for the ROLLBACK command before a log insert to the PLVlog default savepoint.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE set_sp (savepoint_in IN VARCHAR2);</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001381-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Sets the name of the savepoint to be set after the call to <KBD
CLASS="command"
>put_line</KBD
> to write a line to the log.<A
CLASS="indexterm"
NAME="ch05-idx-1001382-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001382-1"
></A
></P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_16.htm#ch05-SECT-16.0.1"
TITLE="5.16 PLVlex: Lexical Analysis"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.16 PLVlex: Lexical Analysis"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Oracle PL/SQL Programming with Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_18.htm#ch05-SECT-18.0.2"
TITLE="5.18 PLVlst: List Manager"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.18 PLVlst: List Manager"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>5.16 PLVlex: Lexical Analysis</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>5.18 PLVlst: List Manager</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly & Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
