<HTML
><HEAD
><TITLE
>[Chapter 4] Getting Started with PL/Vision</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:23:30Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-238-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-238-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL SQL Oracle Packages"><META
NAME="DC.Title"
CONTENT="Advanced Oracle PL/SQL Programming with Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="part02.htm"
TITLE="II. PL/Vision Overview"><LINK
REL="prev"
HREF="part02.htm"
TITLE="II. PL/Vision Overview"><LINK
REL="next"
HREF="ch04_02.htm#ch04-SECT-2.1"
TITLE="4.2 PL/Vision Package Bundles"></HEAD>
<BODY><DIV CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Advanced Oracle PL/SQL Programming with Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="part"
HREF="part02.htm"
TITLE="II. PL/Vision Overview"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: II. PL/Vision Overview"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
>Chapter 4</SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch04_02.htm#ch04-SECT-2.1"
TITLE="4.2 PL/Vision Package Bundles"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 4.2 PL/Vision Package Bundles"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="chapter"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="plsql-adv-ch-4"
>4. Getting Started with PL/Vision</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="sect1"
HREF="#ch04-12403"
TITLE="4.1 What Is PL/Vision?"
>What Is PL/Vision?</A
><BR><A
CLASS="sect1"
HREF="ch04_02.htm#ch04-SECT-2.1"
TITLE="4.2 PL/Vision Package Bundles"
>PL/Vision Package Bundles</A
><BR><A
CLASS="sect1"
HREF="ch04_03.htm#ch04-SECT-3.2"
TITLE="4.3 Installation Instructions"
>Installation Instructions</A
><BR><A
CLASS="sect1"
HREF="ch04_04.htm#ch04-SECT-4.4"
TITLE="4.4 Installing Online Help for PL/Vision"
>Installing Online Help for PL/Vision</A
><BR><A
CLASS="sect1"
HREF="ch04_05.htm"
TITLE="4.5 Using Online Help"
>Using Online Help</A
><BR><A
CLASS="sect1"
HREF="ch04_06.htm#ch04-SECT-6.2"
TITLE="4.6 Summary of Files on Disk"
>Summary of Files on Disk</A
></P
><P
></P
></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch04-12403"
>4.1 What Is PL/Vision?</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch04-idx-998839-0"
></A
>As I've mentioned in earlier chapters, PL/Vision is a collection of <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> packages and supporting SQL*Plus scripts that can change radically the way you develop applications with the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> language. This chapter describes the product in greater detail, lists the packages included in it, and provides instructions for installing the PL/Vision Lite Online Reference provided on the companion disk.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch04-SECT-1.1"
>4.1.1 The Benefits of PL/Vision</A
></H3
><P
CLASS="para"
>What can PL/Vision do for you? The possibilities are almost endless:</P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><EM
CLASS="emphasis"
>Improve your productivity.</EM
><A
CLASS="indexterm"
NAME="ch04-idx-998840-0"
></A
> PL/Vision goes a long way towards helping you avoid reinventing the wheel. Need to change a long string into a word-wrapped paragraph? Use the <I
CLASS="function"
>PLVprs.wra</I
> procedure. Want to display the contents of a <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table? Call the <I
CLASS="function"
>PLVtab.display</I
> procedure. Need to log activity to the database or maybe even write your information to a <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table? Call the <KBD
CLASS="command"
>PLVlog.put_line</KBD
> program. By using PL/Vision, you write much less code yourself, and instead spend your time deciding which prebuilt components of PL/Vision to plug into your own applications. You are able to focus much more of your effort on implementing the business rules for your systems.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><EM
CLASS="emphasis"
>Decrease the number of bugs in your code and fix the bugs you do find more rapidly.</EM
><A
CLASS="indexterm"
NAME="ch04-idx-998841-0"
></A
> Since<A
CLASS="indexterm"
NAME="ch04-idx-998842-0"
></A
> you will be writing less code, you will minimize the opportunities for bugs to creep into your own programs. When you do have compile errors, you can call the <I
CLASS="function"
>PLVvu.err</I
> program to show you precisely where the error occurred in your program. Furthermore, PL/Vision packages offer many ways to trace the actions taken within those packages. When you need more information, you simply call the appropriate package toggle to turn on a trace and then run your test. When you are done testing and debugging, you turn off the trace mechanisms and put your application into production.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><EM
CLASS="emphasis"
>Help you develop and enforce coding standards and best practices.</EM
><A
CLASS="indexterm"
NAME="ch04-idx-998843-0"
></A
> You will do this in two ways: first, by using packages that explicitly support coding standards<A
CLASS="indexterm"
NAME="ch04-idx-998844-0"
></A
>, such as PLVgen; second, by examining the code behind PL/Vision. This <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> library has provided numerous opportunities for me to put my own best practices for packages into action. You will, no doubt, find occasional violations of my best practices, but by and large the code in PL/Vision should provide a wealth of ideas and examples for your own development.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><EM
CLASS="emphasis"
>Increase the percentage of reusable code in your applications.</EM
><A
CLASS="indexterm"
NAME="ch04-idx-998845-0"
></A
> The more<A
CLASS="indexterm"
NAME="ch04-idx-998846-0"
></A
> you leverage PL/Vision, the fewer new programs you have to write yourself. And this advantage doesn't just accrue to individual developers. You can use PL/Vision across multiple applications&nbsp;-- it can be part of a truly enterprise-wide object and module library. </P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><EM
CLASS="emphasis"
>Demonstrate how to modularize and build layers.</EM
><A
CLASS="indexterm"
NAME="ch04-idx-998847-0"
></A
> I don't want you to simply use PL/Vision. I want you to learn how and why I built PL/Vision so that you can accomplish the same kind of development yourself. We all need to be fanatically devoted to modularizing code for maximum reusability. We all need to become sensitive to identifying program functionality that should be broken out into different layers. To some extent, you can develop such sensitivity only by practicing the craft of software construction. But you can also examine closely the work of others and learn from their example (both the good and the bad).</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><EM
CLASS="emphasis"
>Inspire you to be creative, to take risks in your coding.</EM
><A
CLASS="indexterm"
NAME="ch04-idx-998848-0"
></A
> I have found that the real joy of programming is to be found in trying out new ways of doing things. When you stretch boundaries&nbsp;-- whether they are the boundaries of your own experience or those of the documented features of a language&nbsp;-- you make discoveries. And when those discoveries turn out to be productive, you create new things. </P
></LI
></UL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch04-SECT-1.2"
>4.1.2 The Origins<A
CLASS="indexterm"
NAME="ch04-idx-998849-0"
></A
> of PL/Vision</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch04-idx-998850-0"
></A
>PL/Vision has both top-down and bottom-up origins. Many of the pieces of PL/Vision were pulled together after the fact; I would come up with an interesting package, then draw it into the embrace of PL/Vision. After incorporating it I would reexamine other packages in PL/Vision to see how I could leverage this latest addition. I consider that the bottom-up approach. </P
><P
CLASS="para"
>PL/Vision as a coherent library of interlocking packages first sprang out of a recognition of the need to break up a single large program into multiple layers of code. In the fall of 1995 I became obsessed with the idea of writing a program that would "pretty-print" or reformat <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> source code to follow my suggested coding style. It would read the code from the ALL_SOURCE data dictionary view and perform such tasks as upper-case all keywords and apply consistent indentation and line breaks to the code. I worked feverishly after hours on this project for a week and found myself with a working prototype: the <A
CLASS="indexterm"
NAME="ch04-idx-998851-0"
></A
><I
CLASS="function"
>psformat</I
> procedure. It was an exciting week for me. I could feed <I
CLASS="function"
>psformat</I
> (which ran to almost 1000 lines of text) the code for a procedure stuffed into one long, unformatted string and retrieve from it a nicely formatted <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> program unit. </P
><P
CLASS="para"
>I was careful not to write a parser for the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> language. I didn't think such a step was necessary to handle my limited scope and I sure didn't want to spend the time required for such a task. Yet I found (as many of you would probably anticipate) that <I
CLASS="function"
>psformat</I
> didn't handle all the nuances of <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> code correctly. So I would dive back in and tinker with it just a <EM
CLASS="emphasis"
>little</EM
> bit more so that it would understand this or that element of the language.</P
><P
CLASS="para"
>Two weeks later, I had completely reimplemented <I
CLASS="function"
>psformat</I
> three times. With each implementation I came closer to handling the conversion and formatting of a wide range of <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> program syntax. At the same time, my one big program grew that much bigger and more convoluted. I was just so taken up in implementing my obsession that I did not feel that I had the time to modularize my code. And each time I came that much closer to cobbling together a parser for <SPAN
CLASS="acronym"
>PL/SQL</SPAN
>. </P
><P
CLASS="para"
>After round three and too little sleep, I began to realize that I would probably <EM
CLASS="emphasis"
>never</EM
> meet my objectives taking this piecemeal approach. Painfully and reluctantly, I gave up on this program (as you will see, PL/Vision does not provide a program to automatically indent and line-break your code). I did not, however, abandon all the code I had developed. Instead, I set my sights on a more limited and achievable goal: a program that would convert the case of source code to follow the UPPER-lower method. I would leave the format of the code as is, but change all keywords to upper-case and all application-specific identifiers to lower-case.</P
><P
CLASS="para"
>In the process of enhancing <I
CLASS="function"
>psformat</I
>, I had constructed a table that contained the keywords for the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> language and information about how those keywords affected the format of the source code (this is now the <I
CLASS="function"
>PLV_token</I
> table). I also recognized that I wanted to be able to read the original code from any number of different sources and write the converted code to any number of different targets. </P
><P
CLASS="para"
>At the same time that I shifted my expectations and goal, I forced myself to take the time to break up my monster procedure and employ top-down design to straighten out my logic. Thus was PL/Vision born. Directly out of this process, I created a single PLVtext package to manipulate <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> source text. This single package eventually transformed itself into PLVio, PLVobj, and PLVfile to handle very generically a variety of source and target repositories for <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> source code. I separated out many string-parsing tasks from <I
CLASS="function"
>psformat</I
> into PLVprs, which over time broadened into PLVprs, PLVlex, PLVtkn, and, finally, PLVprsps. When all of my layering and partitioning was done, I got back to building the PLVcase package to perform the actual case conversion. My monstrous single procedure became a very small, relatively simple package. </P
><P
CLASS="para"
>As I broke out these different aspects of <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> functionality, I began to see the outlines of a whole substantially larger than the sum of its parts: a very generic and highly reusable toolbox that could be used in any <SPAN
CLASS="acronym"
>PL/SQL</SPAN
>-based development environment. From that point on, I was on the lookout for any utility or package I had built or would build that could add to the scope and functionality of PL/Vision.</P
><P
CLASS="para"
>Throughout this development process, I found myself learning more and more about what was really involved in building packages and leveraging reusable code. My conception of a set of best practices for packages also crystallized. </P
><P
CLASS="para"
>My desire to share what I had learned and built grew with the number of packages in PL/Vision. Finally, I realized that the best way to make the most of my knowledge was to write a book centered around the code and lessons of PL/Vision. I hope that you will find the software and the accompanying <A
CLASS="indexterm"
NAME="ch04-idx-998853-0"
></A
>text useful.<A
CLASS="indexterm"
NAME="ch04-idx-998852-0"
></A
></P
></DIV
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="part"
HREF="part02.htm"
TITLE="II. PL/Vision Overview"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: II. PL/Vision Overview"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Oracle PL/SQL Programming with Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch04_02.htm#ch04-SECT-2.1"
TITLE="4.2 PL/Vision Package Bundles"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 4.2 PL/Vision Package Bundles"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>II. PL/Vision Overview</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>4.2 PL/Vision Package Bundles</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly & Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
