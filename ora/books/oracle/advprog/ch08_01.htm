<HTML
><HEAD
><TITLE
>[Chapter 8] PLVtab: Easy Access to PL/SQL Tables</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:26:47Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-238-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-238-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL SQL Oracle Packages"><META
NAME="DC.Title"
CONTENT="Advanced Oracle PL/SQL Programming with Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="part03.htm"
TITLE="III. Building Block Packages"><LINK
REL="prev"
HREF="ch07_04.htm"
TITLE="7.4 Controlling Output from p"><LINK
REL="next"
HREF="ch08_02.htm#ch08-SECT-2.1"
TITLE="8.2 Displaying PLVtab Tables"></HEAD>
<BODY><DIV CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Advanced Oracle PL/SQL Programming with Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch07_04.htm"
TITLE="7.4 Controlling Output from p"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.4 Controlling Output from p"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
>Chapter 8</SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_02.htm#ch08-SECT-2.1"
TITLE="8.2 Displaying PLVtab Tables"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.2 Displaying PLVtab Tables"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="chapter"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="plsql-adv-ch-8"
>8. PLVtab: Easy Access to PL/SQL Tables</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="sect1"
HREF="#ch08-35846"
TITLE="8.1 Using PLVtab-Based PL/SQL Table Types"
>Using PLVtab-Based PL/SQL Table Types</A
><BR><A
CLASS="sect1"
HREF="ch08_02.htm#ch08-SECT-2.1"
TITLE="8.2 Displaying PLVtab Tables"
>Displaying PLVtab Tables</A
><BR><A
CLASS="sect1"
HREF="ch08_03.htm"
TITLE="8.3 Showing Header Toggle"
>Showing Header Toggle</A
><BR><A
CLASS="sect1"
HREF="ch08_04.htm"
TITLE="8.4 Showing Row Number Toggle"
>Showing Row Number Toggle</A
><BR><A
CLASS="sect1"
HREF="ch08_05.htm"
TITLE="8.5 Setting the Display Prefix"
>Setting the Display Prefix</A
><BR><A
CLASS="sect1"
HREF="ch08_06.htm#ch08-SECT-6.1"
TITLE="8.6 Emptying Tables with PLVtab"
>Emptying Tables with PLVtab</A
><BR><A
CLASS="sect1"
HREF="ch08_07.htm"
TITLE="8.7 Implementing PLVtab.display"
>Implementing PLVtab.display</A
></P
><P
></P
></DIV
><P
CLASS="para"
>The <A
CLASS="indexterm"
NAME="ch08-idx-997775-0"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-997775-1"
></A
>PLVtab (PL/Vision TABle) packag<A
CLASS="indexterm"
NAME="ch08-idx-997776-0"
></A
>e offers predefined <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table types and programs to make it easier to declare, use, and display the contents of <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> tables. <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> tables are the closest things to arrays in <SPAN
CLASS="acronym"
>PL/SQL</SPAN
>, but there are a number of complications. First, to use a <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table, you first have to declare a table type. Then you can declare and use the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table itself. Beyond the definition of the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table, the fact that it is a sparse, unbounded, homogeneous data structure can lead to complications, particularly when it comes to scanning and displaying those structures (see <CITE
CLASS="citetitle"
>Chapter 10</CITE
> of <CITE
CLASS="citetitle"
>Oracle PL/SQL Programming</CITE
>). </P
><P
CLASS="para"
>By using PLVtab, you can avoid (in most cases) having to define your own <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table types. You can also take advantage of flexible, powerful display procedures to view table contents.</P
><P
CLASS="para"
>When you display the contents of <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> tables, PLVtab allows you to:</P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Show or suppress a header for the table</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Show or suppress the row numbers for the table values</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Display a prefix before each row of the table</P
></LI
></UL
><P
CLASS="para"
>This chapter shows how to use the different aspects of PLVtab.</P
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch08-35846"
>8.1 Using PLVtab-Based PL/SQL Table Types<A
CLASS="indexterm"
NAME="ch08-idx-997777-0"
></A
></A
></H2
><P
CLASS="para"
>When you use <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> tables, you normally perform a number of common actions, including defining the table type, declaring the table, filling up the rows, referencing the rows, and emptying the table when done. When using a PLVtab-based table, you do not have to declare the table type. Instead you simply reference the package-based type in your declaration. PLVtab predefines the following <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table TYPEs, shown in <A
CLASS="xref"
HREF="ch08_01.htm"
>Table 8.1</A
>: </P
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="ch08-34949"
>Table 8.1: Table Types Predefined in PLVtab </A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Type</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>boolean_table</PRE
></BLOCKQUOTE
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table of Booleans</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>date_table</PRE
></BLOCKQUOTE
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table of dates</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>integer_table</PRE
></BLOCKQUOTE
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table of integers</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>number_table</PRE
></BLOCKQUOTE
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table of numbers</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>vc30_table</PRE
></BLOCKQUOTE
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table of VARCHAR2(30) strings</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>vc60_table</PRE
></BLOCKQUOTE
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table of VARCHAR2(60) strings</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>vc80_table</PRE
></BLOCKQUOTE
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table of VARCHAR2(80) strings</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>vc2000_table</PRE
></BLOCKQUOTE
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table of VARCHAR2(2000) strings</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>ident_table</PRE
></BLOCKQUOTE
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table of VARCHAR2(100) strings; matches <KBD
CLASS="command"
>PLV.plsql_identifier</KBD
> declaration.</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>vcmax_table</PRE
></BLOCKQUOTE
> </TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table of VARCHAR2(32767) strings</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>Let's compare the "native" and PL/Vision approaches to defining <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> tables. In the following anonymous block, I define a <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> table of Booleans without the assistance of <KBD
CLASS="command"
>PLVtab</KBD
>.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>DECLARE
   TYPE bool_tabtype IS TABLE OF BOOLEAN
      INDEX BY BINARY_INTEGER;
   yesno_tab bool_tabtype;
BEGIN</PRE
></BLOCKQUOTE
><P
CLASS="para"
>With the <KBD
CLASS="command"
>PLVtab</KBD
> package in place, all I have to is the following:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>DECLARE
   yesno_tab PLVtab.boolean_table;
BEGIN</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Once you have declared a table using PLVtab, you manipulate that table as you would a table based on your own table TYPE statement. </P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch07_04.htm"
TITLE="7.4 Controlling Output from p"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 7.4 Controlling Output from p"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Oracle PL/SQL Programming with Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_02.htm#ch08-SECT-2.1"
TITLE="8.2 Displaying PLVtab Tables"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.2 Displaying PLVtab Tables"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>7.4 Controlling Output from p</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>8.2 Displaying PLVtab Tables</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly & Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
