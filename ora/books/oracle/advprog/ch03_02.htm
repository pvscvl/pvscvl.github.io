<HTML
><HEAD
><TITLE
>[Chapter 3] 3.2 Adding Value</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:22:57Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-238-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-238-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL SQL Oracle Packages"><META
NAME="DC.Title"
CONTENT="Advanced Oracle PL/SQL Programming with Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_01.htm"
TITLE="3. The PL/SQL Development Spiral"><LINK
REL="prev"
HREF="ch03_01.htm"
TITLE="3.1 The Basic Problem"><LINK
REL="next"
HREF="ch03_03.htm"
TITLE="3.3 Supplying Backward Compatibility"></HEAD>
<BODY><DIV CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Advanced Oracle PL/SQL Programming with Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_01.htm"
TITLE="3.1 The Basic Problem"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.1 The Basic Problem"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. The PL/SQL Development Spiral"
>Chapter 3<BR>The PL/SQL Development Spiral</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_03.htm"
TITLE="3.3 Supplying Backward Compatibility"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.3 Supplying Backward Compatibility"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch03-35389"
>3.2 Adding Value</A
></H2
><P
CLASS="para"
>Sometimes it is worth stepping back and searching for the bigger picture before embarking on one's enhancements. In this case, I find myself wondering what other twists and turns I might encounter in my application development. Since I need UPPER-lower string duplication, I might also run into a requirement to perform lower-UPPER string duplication. As long as I am changing the <I
CLASS="function"
>twice</I
> function for one of these variations, I should try to stay ahead of the game and handle both variations.</P
><P
CLASS="para"
>So I will restate the new requirements of <KBD
CLASS="command"
>twice</KBD
>: double the specified string. Return the new string with the same case as the original, and return it in UPPER-lower or return it in lower-UPPER, depending on the user request.</P
><P
CLASS="para"
>When stated in this way, an obvious question pops up: how is the user going to specify the case handling in the call to <KBD
CLASS="command"
>twice</KBD
>? For a standalone function, this means adding a parameter. Instead of just accepting the string value for doubling, <I
CLASS="function"
>twice</I
> must also receive the type of action to perform. The new header for <I
CLASS="function"
>twice</I
>, therefore, must be:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION twice (string_in IN VARCHAR2, action_in IN VARCHAR2)</PRE
></BLOCKQUOTE
><P
CLASS="para"
>where the action can be one of these values:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><KBD
CLASS="command"
>N</KBD
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
> No change to case </P
></DD
><DT
CLASS="term"
><KBD
CLASS="command"
>UL</KBD
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
> UPPER-lower case conversion </P
></DD
><DT
CLASS="term"
><KBD
CLASS="command"
>LU</KBD
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
> lower-UPPER case conversion </P
></DD
></DL
><P
CLASS="para"
>Once the parameter and valid options are in place, the implementation is straightforward (and is shown in <A
CLASS="xref"
HREF="ch03_02.htm"
>Example 3.2</A
>). I simply use an IF statement to direct the runtime engine to the right RETURN statement. </P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch03-11295"
>Example 3.2: The twice Function with Alternative Actions </A
></H4
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>CREATE OR REPLACE FUNCTION twice 
   (string_in IN VARCHAR2, action_in IN VARCHAR2)
RETURN VARCHAR2
IS
BEGIN
   IF action_in = 'UL'
   THEN
      RETURN (UPPER (string_in) || LOWER (string_in));      
      
   ELSIF action_in = 'LU'
   THEN
      RETURN (LOWER (string_in) || UPPER (string_in));      
      
   ELSIF action_in = 'N' 
   THEN
      RETURN string_in || string_in;
   END IF; 
END twice;</PRE
></BLOCKQUOTE
></DIV
><P
CLASS="para"
>With this new version of <I
CLASS="function"
>twice</I
>, I can display the following string doublings:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; exec DBMS_OUTPUT.PUT_LINE (twice ('abc', 'UL'));
ABCabc
SQL&gt; exec DBMS_OUTPUT.PUT_LINE (twice ('abc', 'LU'));
abcABC
SQL&gt; exec DBMS_OUTPUT.PUT_LINE (twice ('abc', 'N'));
abcabc</PRE
></BLOCKQUOTE
><P
CLASS="para"
>My <I
CLASS="function"
>twice</I
> function is starting to look interesting. It handles a number of different flavors of conversion and seems easy to use. I'm glad I decided to enhance <I
CLASS="function"
>twice</I
>.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_01.htm"
TITLE="3.1 The Basic Problem"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.1 The Basic Problem"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Oracle PL/SQL Programming with Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_03.htm"
TITLE="3.3 Supplying Backward Compatibility"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.3 Supplying Backward Compatibility"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.1 The Basic Problem</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.3 Supplying Backward Compatibility</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly & Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
