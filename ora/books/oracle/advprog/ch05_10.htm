<HTML
><HEAD
><TITLE
>[Chapter 5] 5.10 PLVexc: Exception Handling</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:24:36Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-238-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-238-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL SQL Oracle Packages"><META
NAME="DC.Title"
CONTENT="Advanced Oracle PL/SQL Programming with Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch05_01.htm"
TITLE="5. PL/Vision Package Specifications"><LINK
REL="prev"
HREF="ch05_09.htm#ch05-SECT-9.0.3"
TITLE="5.9 PLVdyn: Dynamic SQL Operations"><LINK
REL="next"
HREF="ch05_11.htm"
TITLE="5.11 PLVfile: Operating System I/O Manager"></HEAD>
<BODY><DIV CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Advanced Oracle PL/SQL Programming with Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_09.htm#ch05-SECT-9.0.3"
TITLE="5.9 PLVdyn: Dynamic SQL Operations"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.9 PLVdyn: Dynamic SQL Operations"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch05_01.htm"
TITLE="5. PL/Vision Package Specifications"
>Chapter 5<BR>PL/Vision Package Specifications</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_11.htm"
TITLE="5.11 PLVfile: Operating System I/O Manager"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.11 PLVfile: Operating System I/O Manager"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch05-SECT-10"
>5.10 PLVexc: Exception Handling</A
></H2
><P
CLASS="para"
>The PLVexc (PL/Vision EXCeption handling) package<A
CLASS="indexterm"
NAME="ch05-idx-1000530-0"
></A
> provides generic and powerful exception-handling capabilities<A
CLASS="indexterm"
NAME="ch05-idx-1000529-0"
></A
>. See <A
CLASS="xref"
HREF="ch22_01.htm"
>Chapter 22, <CITE
CLASS="chapter"
>Exception Handling</CITE
></A
> for details.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-10.0.1"
>5.10.1 Package constants</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> c_go CONSTANT CHAR(1) := 'C';</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000531-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that your program continue (ignore the error). Explained in more detail below.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> c_recNgo CONSTANT CHAR(2) := 'RC';</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000532-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that your program record the error and then continue. Explained in more detail below.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> c_stop CONSTANT CHAR(1) := 'H';</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000649-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that your program be halted if this exception occurs. Explained in more detail below.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> c_recNstop CONSTANT CHAR(2) := 'RH';</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000650-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that your program record the error and then halt. Explained in more detail below.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-10.0.2"
>5.10.2 Package-based exceptions</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> process_halted EXCEPTION;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000651-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Package-specific exception raised when you request a "halt" action in the handler programs.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> no_such_table EXCEPTION;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000652-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PRAGMA EXCEPTION_INIT (no_such_table, -942);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Predefined system exception for error ORA-942. Saves other developers from dealing with the EXCEPTION_INIT pragma.<A
CLASS="indexterm"
NAME="ch05-idx-1000654-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000654-1"
></A
></P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> snapshot_too_old EXCEPTION;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000653-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PRAGMA EXCEPTION_INIT (snapshot_too_old, -1555);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Predefined system exception for error ORA-1555. Saves other developers from dealing with the EXCEPTION_INIT pragma.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-10.0.3"
>5.10.3 Logging exception-handling activity<A
CLASS="indexterm"
NAME="ch05-idx-1000655-0"
></A
></A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE log;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that whenever a PLVexc handler is called, a message is sent to the PL/Vision log.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE nolog;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Do not log the handling action when the exception is recorded and handled. with the COMMIT.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION logging RETURN BOOLEAN;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns TRUE if currently logging PLVexc-based exception handling.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-10.0.4"
>5.10.4 Displaying exceptions</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE show;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that error information be displayed to your screen using the <KBD
CLASS="command"
>p.l </KBD
>procedure.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE noshow;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns off display of the error information.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION showing RETURN BOOLEAN;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>  Returns TRUE if PLVexc is currently showing errors.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-10.0.5"
>5.10.5 Rolling back on exception</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE rblast;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001216-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that a rollback be issued to the most recent savepoint before writing error information to the log (the default).</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE rbdef;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001217-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Requests that a rollback be issued to the default PLVlog savepoint before writing error information to the log (the default).</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE norb;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001224-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns off issuing of rollback before logging of the error information.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION rb RETURN VARCHAR2;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001225-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns TRUE if PLVexc is currently issuing a rollback.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-10.0.6"
>5.10.6 Exception handlers</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE handle</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001226-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (context_in IN VARCHAR2,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    err_code_in IN INTEGER,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    handle_action_in IN VARCHAR2,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    msg_in IN VARCHAR2 := SQLERRM);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Low-level, generic exception-handling program. This program is called by all  other PLVexc handlers, which are overloaded for error number and message.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE recNgo (msg_in IN VARCHAR2 := NULL);</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001227-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE recNgo (err_code_in IN INTEGER);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>High-level exception handler that records and then ignores the error.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE go (msg_in IN VARCHAR2 := NULL);</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001232-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001232-1"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE go (err_code_in IN INTEGER);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>High-level exception handler that ignores the error, but gives you the opportunity to log or display the exception.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE recNstop (msg_in IN VARCHAR2 := NULL);</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001229-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE recNstop (err_code_in IN INTEGER);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>High-level exception handler that records the error and then causes the current program to halt.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE stop (msg_in IN VARCHAR2 := NULL);</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001230-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE stop (err_code_in IN INTEGER);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>High-level exception handler that causes the current program to halt.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-10.0.7"
>5.10.7 Bailing out program execution</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE bailout;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001231-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Starts the bailout process; the current exception will be propagated out of all exception sections that use PLVexc, regardless of the action handled.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE nobailout;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001233-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns off the bailout process. PLVexc will not propagate the exception past all PLVexc exception handlers.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION bailing_out RETURN BOOLEAN;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001234-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns <SPAN
CLASS="acronym"
>TRUE</SPAN
> if PLVexc is currently set to bail out when it encounters a bailout error.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE clear_bailouts;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001235-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Registers a specific error number as a bailout error.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-10.0.8"
>5.10.8 Managing the list of bailout errors</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE clear_bailouts;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Clears the PLVexc list of bailout errors.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE bailout_on (err_code_in IN INTEGER);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Adds an error code to the list that PLVexc treats as bailout errors.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE nobailout_on (err_code_in IN INTEGER);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Removes an error code from the list that PLVexc treats as bailout errors.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION bailout_error (err_code_in IN INTEGER) RETURN BOOLEAN;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns <SPAN
CLASS="acronym"
>TRUE</SPAN
> if the specified error is a bailout error.<A
CLASS="indexterm"
NAME="ch05-idx-1001236-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001236-1"
></A
></P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_09.htm#ch05-SECT-9.0.3"
TITLE="5.9 PLVdyn: Dynamic SQL Operations"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.9 PLVdyn: Dynamic SQL Operations"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Oracle PL/SQL Programming with Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_11.htm"
TITLE="5.11 PLVfile: Operating System I/O Manager"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.11 PLVfile: Operating System I/O Manager"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>5.9 PLVdyn: Dynamic SQL Operations</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>5.11 PLVfile: Operating System I/O Manager</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly & Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
