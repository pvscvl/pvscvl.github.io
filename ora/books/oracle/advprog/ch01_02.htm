<HTML
><HEAD
><TITLE
>[Chapter 1] 1.2 What Are the Types and Layers of Packages?</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:21:05Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-238-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-238-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL SQL Oracle Packages"><META
NAME="DC.Title"
CONTENT="Advanced Oracle PL/SQL Programming with Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch01_01.htm"
TITLE="1. PL/SQL Packages"><LINK
REL="prev"
HREF="ch01_01.htm"
TITLE="1.1 What Is a PL/SQL Package?"><LINK
REL="next"
HREF="ch01_03.htm#ch01-SECT-3.1"
TITLE="1.3 What Are the Benefits of Packages?"></HEAD>
<BODY><DIV CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Advanced Oracle PL/SQL Programming with Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_01.htm"
TITLE="1.1 What Is a PL/SQL Package?"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.1 What Is a PL/SQL Package?"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch01_01.htm"
TITLE="1. PL/SQL Packages"
>Chapter 1<BR>PL/SQL Packages</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_03.htm#ch01-SECT-3.1"
TITLE="1.3 What Are the Benefits of Packages?"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.3 What Are the Benefits of Packages?"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch01-19032"
>1.2 What Are the Types and Layers of Packages?</A
></H2
><P
CLASS="para"
>Although any <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> package must have the same structure and follow the same rules, there are different types of packages that will play different roles in your application.</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Types of Package</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Builtin</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>A builtin package is provided to you by Oracle Corporation, built right into the PL/SQL language as installed. (A builtin package could reside in the database as stored code or could instead be imbedded in a client tool, such as Oracle Developer/2000.)</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Prebuilt</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Prebuilt packages are libraries of packages that are built by third parties or other developers that are installed in and used by your PL/SQL environment.</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Build-Your-Own (BYO)</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>The very best kind of package: the one you build yourself, or is built by your application development team.</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch01_02.htm#ch01-SECT-2.2"
>Figure 1.1</A
> shows how these different types of <A
CLASS="indexterm"
NAME="ch01-idx-999314-0"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-999314-1"
></A
>packages interact as layers of <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> code and packages that are available to you. We describe the types further in "Types of Packages" later in this chapter.</P
><H4
CLASS="figure"
><A
CLASS="title"
NAME="ch01-16864"
>Figure 1.1: The layers of PL/SQL code and packages</A
></H4
><IMG
CLASS="graphic"
SRC="figs/pladv_0101.gif"
ALT="Figure 1.1"><P
CLASS="para"
>The lowest layer of code upon which you build your <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> applications is the <SPAN
CLASS="acronym"
>SQL</SPAN
><A
CLASS="indexterm"
NAME="ch01-idx-999315-0"
></A
> language. <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> was designed explicitly as a procedural language extension to <SPAN
CLASS="acronym"
>SQL</SPAN
>; most of your <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> programs will function as an interface between a user of some kind and the database.</P
><P
CLASS="para"
>The next layer of code is the core <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> language. At the center of the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> universe, we have the STANDARD and <A
CLASS="indexterm"
NAME="ch01-idx-999316-0"
></A
>DBMS_STANDARD packages, which define the basic elements of the language. When you execute the TO_CHAR function or even use the LIKE operator, you are actually calling elements of the STANDARD package. Since these two packages are the default in <SPAN
CLASS="acronym"
>PL/SQL</SPAN
>, however, you do not have to explicitly reference the package name.</P
><P
CLASS="para"
>Many <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> developers make use of only these two layers of code, but as you can tell from <A
CLASS="xref"
HREF="ch01_02.htm#ch01-SECT-2.2"
>Figure 1.1</A
>, there is much more for you to take advantage of in <SPAN
CLASS="acronym"
>PL/SQL</SPAN
>, in terms of both builtin functionality and code reusability. Oracle Corporation provides a vast suite of builtin packages which extend the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> language itself and which, from a layering standpoint, sit directly above the core language elements. These packages have either the DBMS_ or UTIL_ prefix on their names. At the same level&nbsp;-- because they are used in precisely the same manner&nbsp;-- are prebuilt packages (and other kinds of prebuilt stored code, such as procedures and functions). PL/Vision is an example of prebuilt code: a library of packages. Once they have been installed and access has been granted to them, all of these packages are available for your use. </P
><P
CLASS="para"
>The next three layers of code represent the different kinds of reusable code you can and should build into your own environment. The enterprise-wide stored code is very similar to prebuilts: packages and other program units that are shared throughout an entire enterprise (i.e., the corporation). The application-wide stored code is the body of <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> programs that are reused throughout a particular application. The developer's toolbox is the individual developer's set of code that he uses to enhance his own development efforts.</P
><P
CLASS="para"
>The enterprise-wide, application-wide, and developer toolbox packages are all examples of "build-your-own" packages. </P
><P
CLASS="para"
>All of those different, reusable layers of code (colored in white) exist to help developers build their custom applications as rapidly as possible. In <A
CLASS="xref"
HREF="ch01_02.htm#ch01-SECT-2.2"
>Figure 1.1</A
>, the custom code is represented by the gray areas. Notice that the gray areas are in contact with all layers of the reusable code. This makes sense because your own code will undoubtedly include <SPAN
CLASS="acronym"
>SQL</SPAN
> statements, calls to the builtin functions and <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> operators, and so on, right up through the layers. While it is important to be able to access those lower levels of code, however, you should always leverage programs from the <EM
CLASS="emphasis"
>highest level</EM
> possible. This principle is illustrated by the dashed-line triangle in the figure; I call it the "iceberg" approach to writing <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> code.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-SECT-2.1"
>1.2.1 The Iceberg Approach to Coding</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch01-idx-999317-0"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-999317-1"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-999317-2"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-999317-3"
></A
>The tip of the iceberg appears in the custom code section. This portion of the triangle represents our own program, for example, procedure <KBD
CLASS="command"
>calc</KBD
>, which performs calculations for an order entry system. Only a small portion of the triangle resides in the custom code area. That is because it makes use of all of the other layers of reusable <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> code, keeping the custom code to an absolute minimum. The triangle broadens as it descends through the layers because each higher-level program typically utilizes many elements in the layers below it.</P
><P
CLASS="para"
>If you take fullest possible advantage of the many layers of reusable code in <SPAN
CLASS="acronym"
>PL/SQL</SPAN
>, your own custom programs will resemble an iceberg floating heavily in the sea. A person looking at your code will wonder at its brevity and clarity. He or she will wonder: how does this little program get the job done? The answer is that the custom program is just the tip of the iceberg. The visible portion is just a hint at the bulk of code below the surface, powerful and solid.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-SECT-2.2"
>1.2.2 The Client-Side Layers</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch01-idx-999319-0"
></A
>There are also a few layers on the client side of the equation. If you also use Oracle Developer/2000, you can also take advantage of the fact that <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> is available as a client-side language inside that tool suite. (The <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> of Oracle Developer/2000 Release 1 is, however, only <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> Release 1.1 and this can cause many complications.  See <CITE
CLASS="citetitle"
>Oracle PL/SQL Programming, Appendix B</CITE
>, for more information.   Release 2 of Oracle Developer/2000 will support <SPAN
CLASS="acronym"
>PL/SQL</SPAN
>, simplifying all of our lives greatly.) In this case, you can make use of call programs from the builtin packages of Oracle Developer/2000. These packages offer access to functionality specific to the client-side environment, such as OLE and DDE. </P
><P
CLASS="para"
>With Oracle Developer/2000 you can also construct <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> <A
CLASS="indexterm"
NAME="ch01-idx-999318-0"
></A
><EM
CLASS="emphasis"
>libraries</EM
>, which can be shared across different Oracle Developer/2000 modules. Finally, you can also build your own client-side packages. These BYO client-side packages can execute code from an Oracle Developer/2000 builtin package, a BYO server-side package, prebuilt packages like PL/Vision, and server-side builtin packages. </P
><P
CLASS="para"
>Now, that is a lot of code to choose from. Of course, you have to be able to figure out what is available and how to use it&nbsp;-- and that is just the kind of challenge PL/Vision tries to address for you.</P
><P
CLASS="para"
>Before diving into PL/Vision, though, Part I will bring you up to speed on the structure, features, and best practices of <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> packages.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_01.htm"
TITLE="1.1 What Is a PL/SQL Package?"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.1 What Is a PL/SQL Package?"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Oracle PL/SQL Programming with Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_03.htm#ch01-SECT-3.1"
TITLE="1.3 What Are the Benefits of Packages?"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.3 What Are the Benefits of Packages?"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>1.1 What Is a PL/SQL Package?</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>1.3 What Are the Benefits of Packages?</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly & Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
