<HTML
><HEAD
><TITLE
>[Chapter 5] 5.28 PLVtrc: Trace Facility</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:26:11Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-238-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-238-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL SQL Oracle Packages"><META
NAME="DC.Title"
CONTENT="Advanced Oracle PL/SQL Programming with Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch05_01.htm"
TITLE="5. PL/Vision Package Specifications"><LINK
REL="prev"
HREF="ch05_27.htm#ch05-SECT-27.0.6"
TITLE="5.27 PLVtmr: Program Performance Analyzer"><LINK
REL="next"
HREF="ch05_29.htm#ch05-SECT-29.0.4"
TITLE="5.29 PLVvu: Code and Error Viewing "></HEAD>
<BODY><DIV CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Advanced Oracle PL/SQL Programming with Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_27.htm#ch05-SECT-27.0.6"
TITLE="5.27 PLVtmr: Program Performance Analyzer"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.27 PLVtmr: Program Performance Analyzer"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch05_01.htm"
TITLE="5. PL/Vision Package Specifications"
>Chapter 5<BR>PL/Vision Package Specifications</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_29.htm#ch05-SECT-29.0.4"
TITLE="5.29 PLVvu: Code and Error Viewing "
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.29 PLVvu: Code and Error Viewing "
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch05-SECT-28"
>5.28 PLVtrc: Trace Facility</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch05-idx-1001530-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001530-1"
></A
>The PLVtrc (PL/Vision TRaCe) package provides a generic trace facility for <SPAN
CLASS="acronym"
>PL/SQL </SPAN
>applications for use in debugging. See <A
CLASS="xref"
HREF="ch21_01.htm"
>Chapter 21</A
> for details.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-28.0.1"
>5.28.1 Package constants</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> c_top_pos CONSTANT INTEGER := 0;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001531-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001531-1"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Name of position of top module in the call stack. The argument you would pass to the <KBD
CLASS="command"
>PLVtrc.module</KBD
> function to retrieve the topmost program in the execution call stack.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> c_last_pos CONSTANT INTEGER := 2;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001532-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Name of position of most recent module in call stack. The argument you would pass to the <KBD
CLASS="command"
>PLVtrc.module</KBD
> function to retrieve the last program executed before the call to <KBD
CLASS="command"
>PLVtrc.module</KBD
>.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-28.0.2"
>5.28.2 Controlling trace activity</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE turn_on;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns on the trace, enabling output from calls to the programs described below.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE turn_off;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns off the trace.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION tracing RETURN BOOLEAN;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns TRUE if the trace is active.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-28.0.3"
>5.28.3 <A
CLASS="indexterm"
NAME="ch05-idx-1001533-0"
></A
>Writing to the PL/Vision log</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE log;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns on logging of trace message to the PL/Vision log (see the PLVlog package), in addition to displaying the trace.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE nolog;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns off logging (the default).</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION logging RETURN BOOLEAN;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns TRUE if logging of trace messages is currently turned on.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-28.0.4"
>5.28.4 Displaying current module</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE dispmod;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001534-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns on display of current module when showing the trace message.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE nodispmod;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001535-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Turns off display of current module (the default).</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION displaying_module RETURN BOOLEAN;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001536-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns TRUE if PLVtrc is displaying the current module.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-28.0.5"
>5.28.5 Accessing the PL/SQL call stack</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION ps_callstack RETURN VARCHAR2;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001537-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001537-1"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001537-2"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the string generated by a call to DBMS_UTILITY.FORMAT_CALL_STACK. </P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION ps_module (pos_in IN INTEGER := c_last_pos)</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001538-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>RETURN VARCHAR2;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the <EM
CLASS="emphasis"
>n</EM
>th module (specified by the user) in the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> execution call stack.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-28.0.6"
>5.28.6 Tracing PL/SQL code execution</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE startup</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001539-0"
></A
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (module_in IN VARCHAR2, string_in IN VARCHAR2 := NULL);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Executes the first line of your programs. Maintains a PLVtrc execution stack, which is then available to other PL/Vision packages.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE terminate (string_in IN VARCHAR2 := NULL);</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001540-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Executes as the last line of your programs. Removes the current program from the PLVtrc execution stack.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION currmod RETURN VARCHAR2;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001541-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the name of the current module as set by calls to the procedure<KBD
CLASS="command"
> PLVtrc.startup</KBD
>.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION prevmod RETURN VARCHAR2;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001542-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the name of the previous module as set by calls to the procedure<KBD
CLASS="command"
> PLVtrc.terminate</KBD
>.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-28.0.7"
>5.28.7 Displaying an activity trace</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch05-idx-1001543-0"
></A
>The <KBD
CLASS="command"
>show</KBD
> procedure is heavily overloaded for different datatypes and combinations of datatypes, along the lines of the <KBD
CLASS="command"
>p.l</KBD
> procedure. In all cases, the information you pass to <KBD
CLASS="command"
>show</KBD
> is, well, shown if you have turned on the PLVtrc facility.</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE show (stg1 IN VARCHAR2);</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE show (bool1 IN BOOLEAN);</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE show (num1 IN NUMBER);</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE show</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (date1 IN DATE, mask_in IN VARCHAR2 := PLV.datemask);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Single value shows.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE show (stg1 IN VARCHAR2, num1 IN NUMBER);</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE show (stg1 IN VARCHAR2, bool1 IN BOOLEAN);</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE show</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (stg1 IN VARCHAR2, date1 IN DATE,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    mask_in IN VARCHAR2 := PLV.datemask);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Two-value combination shows.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE show (stg1 IN VARCHAR2, num1 IN NUMBER, num2 IN NUMBER);</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE show</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (stg1 IN VARCHAR2, num1 IN NUMBER, bool1 IN BOOLEAN);</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>PROCEDURE show </CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (stg1 IN VARCHAR2, num1 IN NUMBER, date1 IN DATE, </CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    mask_in IN VARCHAR2 := PLV.datemask);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Three-value combination shows.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE action</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>   (string_in IN VARCHAR2 := NULL, </CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    counter_in IN INTEGER := NULL,</CODE
></DT
><DT
CLASS="term"
><CODE
CLASS="literal"
>    prefix_in IN VARCHAR2 := NULL);</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Displays a trace of a particular action; you provide a context, numeric code, and string for the action.</P
></DD
></DL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-SECT-28.0.8"
>5.28.8 Accessing the PLVtrc execution call stack (ECS)</A
></H3
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE showecs;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001544-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001544-1"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001544-2"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Displays the PLVtrc-maintained execution call stack.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> PROCEDURE clearecs;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001545-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Clears the PLVtrc execution call stack.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION ecs_string RETURN VARCHAR2;</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1001546-0"
></A
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns a string which contains the current PLVtrc execution call stack (<KBD
CLASS="command"
>ecs</KBD
>), with each module separated by a newline character. </P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
> FUNCTION module (pos_in IN INTEGER := c_top_pos) RETURN VARCHAR2;</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Returns the <EM
CLASS="emphasis"
>n</EM
>th module in the PLVtrc execution call stack.<A
CLASS="indexterm"
NAME="ch05-idx-1001547-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1001547-1"
></A
></P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_27.htm#ch05-SECT-27.0.6"
TITLE="5.27 PLVtmr: Program Performance Analyzer"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.27 PLVtmr: Program Performance Analyzer"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Oracle PL/SQL Programming with Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_29.htm#ch05-SECT-29.0.4"
TITLE="5.29 PLVvu: Code and Error Viewing "
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.29 PLVvu: Code and Error Viewing "
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>5.27 PLVtmr: Program Performance Analyzer</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>5.29 PLVvu: Code and Error Viewing </TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly & Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
