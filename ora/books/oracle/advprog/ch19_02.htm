<HTML
><HEAD
><TITLE
>[Chapter 19] 19.2 Declarative Programming in PL/SQL</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:30:35Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-238-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-238-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="PL/SQL SQL Oracle Packages"><META
NAME="DC.Title"
CONTENT="Advanced Oracle PL/SQL Programming with Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch19_01.htm"
TITLE="19. PLVdyn and PLVfk: Dynamic SQL and PL/SQL"><LINK
REL="prev"
HREF="ch19_01.htm"
TITLE="19.1 About Plug-and-Play"><LINK
REL="next"
HREF="ch19_03.htm"
TITLE="19.3 The Dynamic Packages of PL/Vision"></HEAD>
<BODY><DIV CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Advanced Oracle PL/SQL Programming with Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_01.htm"
TITLE="19.1 About Plug-and-Play"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.1 About Plug-and-Play"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch19_01.htm"
TITLE="19. PLVdyn and PLVfk: Dynamic SQL and PL/SQL"
>Chapter 19<BR>PLVdyn and PLVfk: Dynamic SQL and PL/SQL</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_03.htm"
TITLE="19.3 The Dynamic Packages of PL/Vision"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 19.3 The Dynamic Packages of PL/Vision"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch19-22632"
>19.2 Declarative Programming in PL/SQL</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch19-idx-999289-0"
></A
><A
CLASS="indexterm"
NAME="ch19-idx-999289-1"
></A
><A
CLASS="indexterm"
NAME="ch19-idx-999289-2"
></A
>When you call a PLVexc exception handler, you shift from a procedural to a declarative style of programming in <SPAN
CLASS="acronym"
>PL/SQL</SPAN
>. To understand what I mean, think about the <SPAN
CLASS="acronym"
>SQL</SPAN
> language. You do not write programs in <SPAN
CLASS="acronym"
>SQL</SPAN
>. Instead, you use a declarative syntax to describe the set of data you want to see or modify. The underlying <SPAN
CLASS="acronym"
>SQL</SPAN
> engine then figures out the best way to accomplish the task. This declarative or "set at a time" mode of processing is a critical element of the power of the <SPAN
CLASS="acronym"
>SQL</SPAN
> language. </P
><P
CLASS="para"
><SPAN
CLASS="acronym"
>PL/SQL</SPAN
> is very different from <SPAN
CLASS="acronym"
>SQL</SPAN
>. It is a procedural programming language. When you want to get something done in <SPAN
CLASS="acronym"
>PL/SQL</SPAN
>, you write a program. This gives you a tremendous amount of control, but it definitely cuts into your productivity&nbsp;-- and offers many over-ripe opportunities for introducing bugs into your code. Wouldn't it be wonderful to combine the control of the procedural language with the high-level abstraction and productivity of a declarative syntax? Well, we are not talking idle chatter here. We are talking packages.<A
CLASS="indexterm"
NAME="ch19-idx-999290-0"
></A
></P
><P
CLASS="para"
>Constructed properly, the <SPAN
CLASS="acronym"
>PL/SQL</SPAN
> package offers the opportunity for developers to write code in a declarative style. Take a look again at the exception section that utilizes PLVexc. To write this code, a user of PLVexc only had to know what kind of action she wanted to perform. Ignore the error? Record and continue? Record and halt? Just describe the action desired, pass the necessary data, and then let the underlying engine (the PLVexc package) figure out how to implement your request. Declarative coding in <SPAN
CLASS="acronym"
>PL/SQL</SPAN
>! Keep these concepts in mind as you read the chapters in Part V.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_01.htm"
TITLE="19.1 About Plug-and-Play"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.1 About Plug-and-Play"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Oracle PL/SQL Programming with Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Oracle PL/SQL Programming with Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_03.htm"
TITLE="19.3 The Dynamic Packages of PL/Vision"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 19.3 The Dynamic Packages of PL/Vision"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>19.1 About Plug-and-Play</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>19.3 The Dynamic Packages of PL/Vision</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG
SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly & Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>
</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
