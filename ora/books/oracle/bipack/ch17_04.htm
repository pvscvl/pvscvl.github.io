<HTML
><HEAD
><TITLE
>[Chapter 17] 17.4 DBMS_DEFER_QUERY: Performing Diagnostics and Maintenance</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein, Charles Dye &amp; John Beresniewicz"><META
NAME="DC.Date"
CONTENT="2000-04-29T18:04:59Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-375-8E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-375-8E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle Packages"><META
NAME="DC.Title"
CONTENT="Oracle Built-in Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch17_01.htm"
TITLE="17. Deferred  Transactions and Remote Procedure Calls"><LINK
REL="prev"
HREF="ch17_03.htm#ch17-SECT-3.1.1"
TITLE="17.3 DBMS_DEFER: Building Deferred Calls"><LINK
REL="next"
HREF="appa_01.htm"
TITLE="A. What's on the Companion Disk?"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle Built-in Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle Built-in Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_03.htm#ch17-SECT-3.1.1"
TITLE="17.3 DBMS_DEFER: Building Deferred Calls"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 17.3 DBMS_DEFER: Building Deferred Calls"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch17_01.htm"
TITLE="17. Deferred  Transactions and Remote Procedure Calls"
>Chapter 17<BR>Deferred  Transactions and Remote Procedure Calls</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="appendix"
HREF="appa_01.htm"
TITLE="A. What's on the Companion Disk?"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A. What's on the Companion Disk?"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch17-21862"
>17.4 DBMS_DEFER_QUERY: Performing Diagnostics and Maintenance</A
></H2
><P
CLASS="para"
>Occasionally, you may want to see details about deferred RPCs in the queue, such as what procedure and parameters are used. The <A
CLASS="indexterm"
NAME="ch17-idx-951787-0"
></A
>DBMS_DEFER_QUERY package contains procedures to display this data.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch17-SECT-4.1"
>17.4.1 Getting Started with DBMS_DEFER_QUERY</A
></H3
><P
CLASS="para"
>The DBMS_REPCAT_QUERY package is <A
CLASS="indexterm"
NAME="ch17-idx-951806-0"
></A
>created when the Oracle database is installed. The <I
CLASS="filename"
>dbmsdefr.sql</I
><A
CLASS="indexterm"
NAME="ch17-idx-951807-0"
></A
> script (found in the built-in packages source directory, as described in Chapter 1) contains the source code for this package's specification. This script is called by <I
CLASS="filename"
>catrep.sql</I
><A
CLASS="indexterm"
NAME="ch17-idx-952639-0"
></A
>, which must be run to install the advanced replication packages. The wrapped sql script <I
CLASS="filename"
>prvtrctf.sql</I
><A
CLASS="indexterm"
NAME="ch17-idx-951808-0"
></A
> creates the public synonym DBMS_REPCAT_QUERY.  No EXECUTE <A
CLASS="indexterm"
NAME="ch17-idx-952602-0"
></A
>privileges are granted on DBMS_REPCAT_QUERY; only the owner (SYS) and those with the EXECUTE ANY PROCEDURE system privilege may execute the package.</P
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="ch17-SECT-4.1.1"
>17.4.1.1 DBMS_DEFER_QUERY programs</A
></H4
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch17_04.htm#ch17-SECT-4.1.1"
>Table 17.14</A
> <A
CLASS="indexterm"
NAME="ch17-idx-951809-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-951809-1"
></A
>lists the programs available in the DBMS_DEFER_QUERY package.</P
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="ch17-13057"
>Table 17.14: DBMS_DEFER_QUERY Programs </A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Name</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Use in SQL?</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch17-idx-953002-0"
></A
>GET_ARG_TYPE</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Returns the type of a parameter in a deferred call</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch17-idx-953009-0"
></A
>GET_CALL_ARGS</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Returns information about parameters in text form</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch17-idx-953016-0"
></A
>GET_&lt;datatype&gt;_ARG</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Returns the value of a parameter whose type is &lt;datatype&gt;; values can be CHAR, DATE, NUMBER, RAW, ROWID, or VARCHAR2</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>There are no <A
CLASS="indexterm"
NAME="ch17-idx-951813-0"
></A
>exceptions defined for this package.</P
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="ch17-SECT-4.1.3"
>17.4.1.2 DBMS_DEFER_QUERY nonprogram elements</A
></H4
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch17_04.htm#ch17-SECT-4.1.1"
>Table 17.15</A
> lists the nonprogram elements defined for the DBMS_DEFER_QUERY package.</P
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="ch17-23286"
>Table 17.15: DBMS_DEFER_QUERY Other Elements</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Name/Type</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>TYPE type_ary</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Table of NUMBER</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>TYPE val_ary</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Table of VARCHAR2(2000)</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>The PL/SQL tables type_ary and val_ary are both used in parameters to the procedure GET_CALL_ARGS; type_ary is an output array for RPC parameter datatypes and val_ary is an output array of the parameter values. <A
CLASS="xref"
HREF="ch17_04.htm#ch17-SECT-4.1.1"
>Table 17.16</A
> <A
CLASS="indexterm"
NAME="ch17-idx-951814-0"
></A
>shows the mapping of numbers to datatypes in type_ary.   </P
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="ch17-22086"
>Table 17.16: Mapping Numbers to Datatypes </A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Datatype</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Numeric Value </P
><P
CLASS="para"
>in type_ary</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>BFILE (Oracle8 only)</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>114</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>BLOB (Oracle8 only)</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>113</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>CFIL (Oracle8 only)</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>115</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>CHAR</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>96</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>CFIL (Oracle8 only)</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>112</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>DATE</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>12</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>NUMBER</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>2</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>RAW</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>23</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>ROWID</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>11</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>VARCHAR2</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>1</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>Before examining the details of the individual procedures, let's look at a basic example of how they are used. Suppose that we have queued a call to the ProductMaint.AddProduct procedure, as described in an earlier example.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
> SQL&gt; EXECUTE qAddProduct
PL/SQL procedure successfully completed.</PRE
></BLOCKQUOTE
><P
CLASS="para"
>We now have an entry in the DEFCALL data dictionary view:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>&#13;  1  SELECT	callno,
  2  		deferred_tran_db,
  3  		deferred_tran_id,
  4  		schemaname,
  5  		packagename,
  6  		procname,
  7  		argcount
  8* FROM	defcall
SYSTEM@D7CA SQL&gt; /

	     Deferred          Deferred
	     Tran              Tran         Schema    Package	  Procedure Arg
Call No      DB                ID           Name      Name	  Name	    Count
------------ ----------------- ------------ --------- ----------- ---------------
9929966326029D7CA.BIGWHEEL.COM 3.58.14      SPROCKET  PRODUCTMAINTAddProduct6

1 row selected.</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Here we see that the procedure ProductMaint.AddProduct is queued, and that it has six parameters. To determine what these parameters are, first determine their data types with the GET_ARG_TYPE procedure, and then determine their values with GET_&lt;datatype&gt;_ARG. Alternatively, you can use GET_CALL_ARGS, which returns all the information in a single call. The examples in the following sections illustrate the use of each technique.</P
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="ch17-SECT-4.1.4"
>17.4.1.3 The DBMS_DEFER_QUERY.<A
CLASS="indexterm"
NAME="ch17-idx-951832-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-951832-1"
></A
>GET_ARG_TYPE function</A
></H4
><P
CLASS="para"
>You can use this function in conjunction with the GET_&lt;datatype&gt;_ARG or GET_CALL_ARGS functions to determine information about the deferred RPCs in the queue. GET_ARG_TYPE returns a number corresponding to the argument's datatype. Here is the specification for GET_ARG_TYPE:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION DBMS_DEFER_QUEUE.GET_ARG_TYPE
   (callno IN NUMBER,
    deferred_tran_db IN VARCHAR2,
    arg_no IN  NUMBER,
    deferred_tran_id IN VARCHAR2)
RETURN NUMBER;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The following table shows the mapping of <A
CLASS="indexterm"
NAME="ch17-idx-951836-0"
></A
>datatypes to return values.</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Argument </P
><P
CLASS="para"
>Datatype</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>GET_ARG_TYPE </P
><P
CLASS="para"
>Return Code</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>BFIL (Oracle8 only)</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>114</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>BLOB (Oracle8 only)</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>113</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>CFIL (Oracle8 only)</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>115</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>CHAR</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>96</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>CFIL (Oracle8 only)</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>112</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>DATE</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>12</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>NUMBER</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>2</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>RAW</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>23</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>ROWID</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>11</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>VARCHAR2</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>1</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>Notice that the datatypes here are limited to the Oracle-supplied datatypes; you cannot, for example, defer a call to a procedure that accepts a PL/SQL table as a parameter.</P
><P
CLASS="para"
>Parameters are summarized in the following table.</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Name</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>callno</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>The CALLNO of the RPC, as stored in the DEFCALL data dictionary view</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>deferred_tran_db</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Global name of the database deferring the call (also stored in DEFCALL)</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>arg_no</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>The position of the argument in the RPC</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>deferred_tran_id</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>The deferred_tran_id for the call (also stored in DEFCALL)</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>There are no restrictions on calling GET_ARG_TYPE.</P
><DIV
CLASS="sect4"
><H4
CLASS="sect4"
><A
CLASS="title"
NAME="AUTOID-41604"
>17.4.1.3.1 Exceptions</A
></H4
><P
CLASS="para"
>The GET_ARG_TYPE function may raise the following exception:</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Name</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Number</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>NO_DATA_FOUND</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>-100</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Specified argument does not exist for specified RPC call</P
></TD
></TR
></TBODY
></TABLE
></DIV
><DIV
CLASS="sect4"
><H4
CLASS="sect4"
><A
CLASS="title"
NAME="AUTOID-41628"
>17.4.1.3.2 Example</A
></H4
><P
CLASS="para"
>This example shows how you use the GET_ARG_TYPE function to determine the datatypes of a queued call:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>  1  DECLARE
  2	     vDataType NUMBER;
  3  BEGIN
  4	     vDataType := DBMS_DEFER_QUERY.GET_ARG_TYPE(
  5			 callno =&gt; 9929966326029,
  6			 deferred_tran_db =&gt; 'D7CA.BIGWHEEL.COM',
  7			 arg_no =&gt; 3,
  8			 deferred_tran_id =&gt; '3.58.14');
  9	     dbms_output.put_line('Datatype for arg 1 is '|| vDataType);
 10* END;
SYSTEM@D7CA SQL&gt; /
Datatype for arg 3 is 1

PL/SQL procedure successfully completed.</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Here we see that the third argument passed to ProductMaint.AddProduct is of type VARCHAR2. Now you can use the GET_VARCHAR2_ARG function (described in the next section) to determine the value passed.</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>  1  DECLARE
  2	     vArgValue VARCHAR2(80);
  3  BEGIN
  4	     vArgValue := DBMS_DEFER_QUERY.GET_VARCHAR2_ARG(
  5			 callno =&gt; 9929966326029,
  6			 deferred_tran_db =&gt; 'D7CA.BIGWHEEL.COM',
  7			 arg_no =&gt; 3,
  8			 deferred_tran_id =&gt; '3.58.14');
  9	     dbms_output.put_line('Argument 3 is '|| vArgValue);
 10* END;
SYSTEM@D7CA SQL&gt; /
Argument 3 is Mens 18 Speed Racer

PL/SQL procedure successfully completed.</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Here we see that the actual value passed was "Mens 18 Speed <A
CLASS="indexterm"
NAME="ch17-idx-952674-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-952674-1"
></A
>Racer."</P
></DIV
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="ch17-SECT-4.1.5"
>17.4.1.4 The DBMS_DEFER_QUERY.GET_CALL_ARGS procedure</A
></H4
><P
CLASS="para"
>The <A
CLASS="indexterm"
NAME="ch17-idx-952677-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-952677-1"
></A
>GET_CALL_ARGS procedure allows you to obtain the datatypes and values for all arguments passed to a procedure in a single call. This is the easiest way to obtain information about the datatypes and values of all passed parameters. Here is the specification:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE DBMS_DEFER_QUERY.GET_CALL_ARGS
   (callno IN NUMBER,              
    startarg IN NUMBER := 1,        
    argcnt IN NUMBER,              
    argsize IN NUMBER,           
    tran_db IN VARCHAR2,          
    tran_id IN VARCHAR2,    
    date_fmt IN VARCHAR2,      
    types OUT TYPE_ARY,          
    vals OUT VAL_ARY);        </PRE
></BLOCKQUOTE
><P
CLASS="para"
>Parameters are summarized in the following table.</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Name</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>callno</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>The CALLNO of the RPC as stored in the DEFCALL data dictionary view</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>start_arg</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>First argument to fetch</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>argcnt</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Number of arguments to fetch</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>argsize</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Largest size of a returned argument</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>tran_db</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Global name of database deferring the call (also stored in DEFCALL)</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>tran_id</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>The deferred_tran_id parameter for the call (also stored in DEFCALL) </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>date_fmt</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Date format mask</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>types</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Output array for argument types</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>vals</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Output array for argument values</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>There are no restrictions on calling the GET_CALL_ARGS procedure.</P
><DIV
CLASS="sect4"
><H4
CLASS="sect4"
><A
CLASS="title"
NAME="AUTOID-41705"
>17.4.1.4.1 Exceptions</A
></H4
><P
CLASS="para"
>GET_CALL_ARGS may raise the following exception:</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Name</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Number</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>NO_DATA_FOUND</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>-100</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Specified argument does not exist for specified RPC call</P
></TD
></TR
></TBODY
></TABLE
></DIV
><DIV
CLASS="sect4"
><H4
CLASS="sect4"
><A
CLASS="title"
NAME="AUTOID-41729"
>17.4.1.4.2 Example</A
></H4
><P
CLASS="para"
>The following example illustrates the use of the GET_CALL_ARGS procedure:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>  1  DECLARE
  2	     vTypes DBMS_DEFER_QUERY.TYPE_ARY;
  3	     vVals  DBMS_DEFER_QUERY.VAL_ARY;
  4	     indx NUMBER;
  5  BEGIN
  6	     DBMS_DEFER_QUERY.GET_CALL_ARGS(
  7			 callno =&gt; 9929966326029,
  8			 startarg =&gt; 1,
  9			 argcnt =&gt; 6,
 10			 argsize =&gt; 128,
 11			 tran_db =&gt; 'D7CA.BIGWHEEL.COM',
 12			 tran_id =&gt; '3.58.14',
 13			 date_fmt =&gt; 'DD-Mon-YYYY hh24:MI:SS',
 14			 types =&gt; vTypes,
 15			 vals =&gt; vVals );
 16	     FOR indx IN 1..6 LOOP
 17		     dbms_output.put_line('Arg '|| indx || ': Datatype '||
 18			     vTypes(indx) || ' Value: '|| vVals(indx) );
 19	     END LOOP;
 20* END;
SYSTEM@D7CA SQL&gt; /
Arg 1: Datatype 2 Value: 10
Arg 2: Datatype 1 Value: BIKE-0018
Arg 3: Datatype 1 Value: Mens 18 Speed Racer
Arg 4: Datatype 1 Value: 19971031-01
Arg 5: Datatype 12 Value: 31-Oct-1997 00:00:00
Arg 6: Datatype 1 Value: PLANNED

PL/SQL procedure successfully <A
CLASS="indexterm"
NAME="ch17-idx-951839-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-951839-1"
></A
>completed.</PRE
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="ch17-SECT-4.1.6"
>17.4.1.5 The DBMS_DEFER_QUERY.GET_&lt;datatype&gt;_ARG function</A
></H4
><P
CLASS="para"
>The <A
CLASS="indexterm"
NAME="ch17-idx-951841-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-951841-1"
></A
>GET_&lt;datatype&gt;_ARG function returns a value of a certain type (specified by &lt;datatype&gt;). The type of the returned value corresponds to the value of the argument specified by arg_no in the deferred RPC corresponding to callno.</P
><P
CLASS="para"
>There is one variant of the GET_&lt;datatype&gt;_ARG function for each of the Oracle-supplied datatypes. Here is the specification:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION DBMS_DEFER_QUERY.GET_&lt;datatype&gt;_ARG
<I
CLASS="lineannotation"
>   </I
>(callno IN NUMBER,                   
   deferred_tran_db IN VARCHAR2
   arg_no IN NUMBER,
   deferred_tran_id IN VARCHAR2 DEFAULT NULL)
RETURN arg;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>&lt;datatype&gt; can be one of the following:</P
><TABLE
CLASS="simplelist"
BORDER="0"
><TR
><TD
CLASS="member"
>CHAR</TD
></TR
><TR
><TD
CLASS="member"
>DATE</TD
></TR
><TR
><TD
CLASS="member"
>NUMBER</TD
></TR
><TR
><TD
CLASS="member"
>RAW</TD
></TR
><TR
><TD
CLASS="member"
>ROWID</TD
></TR
><TR
><TD
CLASS="member"
>VARCHAR2</TD
></TR
><TR
><TD
CLASS="member"
>NCHAR (Oracle8 only)</TD
></TR
><TR
><TD
CLASS="member"
>NVARCHAR2 (Oracle8 only)</TD
></TR
><TR
><TD
CLASS="member"
>BLOB (Oracle8 only)</TD
></TR
><TR
><TD
CLASS="member"
>CLOB (Oracle8 only)</TD
></TR
><TR
><TD
CLASS="member"
>NCLOB (Oracle8 only)</TD
></TR
></TABLE
><P
CLASS="para"
>Therefore, any of the following are valid:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FUNCTION DBMS_DEFER_QUERY.<A
CLASS="indexterm"
NAME="ch17-idx-951845-0"
></A
>GET_CHAR_ARG...
FUNCTION DBMS_DEFER_QUERY.<A
CLASS="indexterm"
NAME="ch17-idx-951846-0"
></A
>GET_DATE_ARG...
FUNCTION DBMS_DEFER_QUERY.<A
CLASS="indexterm"
NAME="ch17-idx-951847-0"
></A
>GET_NUMBER_ARG...
FUNCTION DBMS_DEFER_QUERY.<A
CLASS="indexterm"
NAME="ch17-idx-951848-0"
></A
>GET_RAW_ARG...
FUNCTION DBMS_DEFER_QUERY.<A
CLASS="indexterm"
NAME="ch17-idx-951849-0"
></A
>GET_ROWID_ARG...
FUNCTION DBMS_DEFER_QUERY.<A
CLASS="indexterm"
NAME="ch17-idx-951850-0"
></A
>GET_VARCHAR2_ARG...
FUNCTION DBMS_DEFER_QUERY.<A
CLASS="indexterm"
NAME="ch17-idx-951851-0"
></A
>GET_NCHAR_ARG...
FUNCTION DBMS_DEFER_QUERY.<A
CLASS="indexterm"
NAME="ch17-idx-951852-0"
></A
>GET_NVARCHAR2_ARG...
FUNCTION DBMS_DEFER_QUERY.<A
CLASS="indexterm"
NAME="ch17-idx-951853-0"
></A
>GET_BLOB_ARG...
FUNCTION DBMS_DEFER_QUERY.<A
CLASS="indexterm"
NAME="ch17-idx-951854-0"
></A
>GET_CLOB_ARG...
FUNCTION DBMS_DEFER_QUERY.<A
CLASS="indexterm"
NAME="ch17-idx-951855-0"
></A
>GET_NCLOB_ARG...</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Parameters have the same meanings described for the GET_ARG_TYPE procedure.</P
><DIV
CLASS="sect4"
><H4
CLASS="sect4"
><A
CLASS="title"
NAME="AUTOID-41785"
>17.4.1.5.1 Exceptions</A
></H4
><P
CLASS="para"
>The GET_&lt;datatype&gt;_ARG function may raise the following exceptions:</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Name</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Number</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>NO_DATA_FOUND</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>-100</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Specified argument does not exist for specified RPC call</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>WRONG_TYPE</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>-26564</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Specified argument is not of type &lt;datatype&gt; </P
></TD
></TR
></TBODY
></TABLE
></DIV
><DIV
CLASS="sect4"
><H4
CLASS="sect4"
><A
CLASS="title"
NAME="AUTOID-41816"
>17.4.1.5.2 Example</A
></H4
><P
CLASS="para"
>Assuming that argument number 3 in the deferred call has CALLNO = 8 and DEFERRED_TRAN_ID = 45.12.3 in the DEFCALL data dictionary view is of type CHAR, follow these steps to determine the argument's value:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>VARIABLE vChar	 CHAR;

BEGIN
	vChar := DBMS_QUERY.GET_CHAR_ARG(callno =&gt; 8,
					<A
CLASS="indexterm"
NAME="ch17-idx-951843-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-951843-1"
></A
>deferred_tran_db	=&gt; 'D8CA.BIGWHEEL.COM',
					arg_no =&gt; 3,
					<A
CLASS="indexterm"
NAME="ch17-idx-951805-0"
></A
>deferred_tran_id =&gt; 45.12.3);
<A
CLASS="indexterm"
NAME="ch17-idx-951801-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-951801-1"
></A
>END;
/</PRE
></BLOCKQUOTE
></DIV
></DIV
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_03.htm#ch17-SECT-3.1.1"
TITLE="17.3 DBMS_DEFER: Building Deferred Calls"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 17.3 DBMS_DEFER: Building Deferred Calls"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle Built-in Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle Built-in Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="appendix"
HREF="appa_01.htm"
TITLE="A. What's on the Companion Disk?"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: A. What's on the Companion Disk?"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>17.3 DBMS_DEFER: Building Deferred Calls</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>A. What's on the Companion Disk?</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
