<HTML
><HEAD
><TITLE
>[Chapter 1] 1.4 Examining Built-in Package Source Code</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein, Charles Dye &amp; John Beresniewicz"><META
NAME="DC.Date"
CONTENT="2000-04-29T17:38:29Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-375-8E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-375-8E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle Packages"><META
NAME="DC.Title"
CONTENT="Oracle Built-in Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch01_01.htm"
TITLE="1. Introduction"><LINK
REL="prev"
HREF="ch01_03.htm#ch01-SECT-3.5"
TITLE="1.3 Using Built-in Packages"><LINK
REL="next"
HREF="part02.htm"
TITLE="II. Application Development Packages"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle Built-in Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle Built-in Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_03.htm#ch01-SECT-3.5"
TITLE="1.3 Using Built-in Packages"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.3 Using Built-in Packages"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch01_01.htm"
TITLE="1. Introduction"
>Chapter 1<BR>Introduction</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="part"
HREF="part02.htm"
TITLE="II. Application Development Packages"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: II. Application Development Packages"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch01-33744"
>1.4 Examining Built-in Package Source Code</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch01-idx-10454-0"
></A
>When you install the Oracle database, the source code files for all of the built-in packages are placed on your hard disk (either on your own personal computer or on some "remote" server). I recommend strongly that you take some time to examine these files for several reasons:</P
><OL
CLASS="orderedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>The files contain documentation that may complement the contents of this book and improve your understanding of how to use the packages.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>The files are the source code. They contain the definitive listing of what is available in the package. This book makes a valiant effort to offer up-to-date information on almost every one of the most commonly used packages, but it never hurts to check the original. For example, I suggest that every time you install a new version of the database, you should check (at a minimum) the <I
CLASS="filename"
>dbmsutil.sql</I
><A
CLASS="indexterm"
NAME="ch01-idx-10492-0"
></A
> file, to see if Oracle Corporation has added anything to its miscellaneous package, DBMS_UTILITY.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>It can be an awful lot of fun to see how Oracle's own developers construct and document their own PL /SQL packages. This is particularly true of the file containing the STANDARD package, <I
CLASS="filename"
>standard.sql</I
>.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Dependencies. The built-in package file can provide you with other valuable information, including which built-in packages and/or other objects must already be in the database before you can proceed with the installation.</P
></LI
></OL
><P
CLASS="para"
>Where do you find all of this interesting code? If you are working in a UNIX environment, the files that define the built-in packages may be found in,</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>$ORACLE_HOME/rdbmsNN/admin</PRE
></BLOCKQUOTE
><P
CLASS="para"
>where NN is the version number. So if you are running Oracle 7.3, you will find the source code files in /this directory/:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>$ORACLE_HOME/rdbms73/admin</PRE
></BLOCKQUOTE
><P
CLASS="para"
>If you are working in Windows NT, these files are located in,</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>C:\OraNT\RdbmsNN\admin</PRE
></BLOCKQUOTE
><P
CLASS="para"
>where C is the drive on which Oracle was installed. You can probably deduce the pattern at this point for other operating systems.</P
><P
CLASS="para"
>If you are working in a UNIX environment that conforms to the OFA (Optimal Flexible Architecture) configuration standards, the catalog scripts will be found under, </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>$ORACLE_HOME/rdbms/admin</PRE
></BLOCKQUOTE
><P
CLASS="para"
>with the $ORACLE_HOME environment variable containing the Oracle version information. </P
><P
CLASS="para"
>If you are working with VAX/VMS, the software directory tree structure often looks like this:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>[ORACLE733.RDBMS.ADMIN]
[ORACLE803.RDBMS.ADMIN]</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Note that you do not necessarily have read access on these directories, so I cannot guarantee that you will be able to view the contents of these files. If you can, however, I suggest that you first stop at <I
CLASS="filename"
>standard.sql </I
> (present up through Oracle 7.3, but seems to disappear with some installations of Oracle 8.0). This file contains the definition of the STANDARD package, which is explained in the next <A
CLASS="indexterm"
NAME="ch01-idx-10456-0"
></A
>section.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-SECT-4.1"
>1.4.1 The STANDARD Package</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch01-idx-10458-0"
></A
>One of the most surprising things I ever learned about the PL /SQL language is that the most basic elements of that language are defined in a PL /SQL package called STANDARD. According to the modification history in the <I
CLASS="filename"
>standard.sql</I
><A
CLASS="indexterm"
NAME="ch01-idx-10498-0"
></A
> file, this package was created on November 21, 1992. Contained inside it are many lessons about the very nature of the PL /SQL language. </P
><P
CLASS="para"
>Consider the TO_DATE and SUBSTR functions. Although they seem like basic, low-level language elements, both of these are functions defined (and overloaded) in the STANDARD package. Even more astonishing, the most basic operators in the PL /SQL language, such as +, IN, and LIKE, are actually defined as functions in that same package. </P
><P
CLASS="para"
>Here, for example, are the definitions of the LIKE and = operators,</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>function 'LIKE' (str VARCHAR2, pat VARCHAR2) return BOOLEAN;
function '='  (LEFT NUMBER, RIGHT NUMBER) return BOOLEAN;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>and here is the implementation of LIKE:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>function 'LIKE' (str varchar2, pat varchar2) return boolean is
begin
  return peslik(str, pat);
end;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>What is this peslik function? Ah, that is where, when, and how Oracle "cheats" (or, at least, makes the rest of us PL /SQL developers jealous):</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>function peslik(str varchar2, pat varchar2) return boolean;
    pragma interface (c,peslik);</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The peslik function is a stub program for a callout to C. </P
><P
CLASS="para"
>You will also discover that all PL /SQL datatypes are defined in the STANDARD package specification as types and subtypes:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>subtype INTEGER is NUMBER(38,0);
subtype BINARY_INTEGER is INTEGER range '-2147483647'..2147483647;
subtype NATURAL is BINARY_INTEGER range 0..2147483647;
subtype NATURALN is NATURAL not null;
subtype SIGNTYPE is BINARY_INTEGER range '-1'..1;  -- for SIGN functions</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Interestingly, the subtype SIGNTYPE is not listed in PL /SQL manual. Once discovered here, though, you can put it to use in your code.[<A
CLASS="footnote"
HREF="#ch01-pgfId-13364"
>4</A
>] If, for example, you need a variable that can only have values -1, 0, 1, and NULL, you can write something like this:</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch01-pgfId-13364"
>[4]</A
> This insight was provided by Solomon Yakobson. </P
></DIV
></BLOCKQUOTE
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>/* Filename on companion disk: creind.sp */
DECLARE my_variable SIGNTYPE;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Trying to assign my_variable outside of SIGNTYPE range results in an error:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; DECLARE my_variable SIGNTYPE;
  2  BEGIN
  3    my_variable := 2;
  4  END;
  5  /
DECLARE my_variable SIGNTYPE;

*

ERROR at line 1:
ORA-06502: PL /SQL: numeric or value error
ORA-06512: at line 3</PRE
></BLOCKQUOTE
><P
CLASS="para"
>All predefined exceptions are also defined in the STANDARD package specification:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>LOGIN_DENIED exception;
  pragma EXCEPTION_INIT(LOGIN_DENIED, '-1017');</PRE
></BLOCKQUOTE
><P
CLASS="para"
>If you are still running Oracle7, take a look at <I
CLASS="filename"
>standard.sql</I
>. You might even want to copy it to some other location, so that when you upgrade to Oracle8, you won't lose access to this file and all of its fascinating <A
CLASS="indexterm"
NAME="ch01-idx-10459-0"
></A
>contents.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-SECT-4.2"
>1.4.2 The DBMS_STANDARD Package</A
></H3
><P
CLASS="para"
>The other default package, <A
CLASS="indexterm"
NAME="ch01-idx-10460-0"
></A
>DBMS_STANDARD, deserves some mention. It can be found in the <I
CLASS="filename"
>dbmsstdx.sql</I
><A
CLASS="indexterm"
NAME="ch01-idx-10502-0"
></A
> file, and it contains, according to the file's own documentation, "kernel extensions to package STANDARD... mostly utility routines for triggers." You will find in DBMS_STANDARD the following programs:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE raise_application_error
   (num BINARY_INTEGER, 
    msg VARCHAR2,
    keeperrorstack BOOLEAN DEFAULT FALSE);

FUNCTION inserting RETURN BOOLEAN;
FUNCTION deleting  RETURN BOOLEAN;
FUNCTION updating  RETURN BOOLEAN;
FUNCTION updating (colnam varchar2) RETURN BOOLEAN;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>So whenever you write code like this,</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>IF hiredate &lt; ADD_MONTHS (SYSDATE, -216)
THEN
   RAISE_APPLICATION_ERROR 
     (-20000, ' Employee must be at least 18 years old.');
END IF;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>you are actually calling a program in the DBMS_STANDARD package. Again, this package is defaulted, so you do not need to qualify references to these procedures and <A
CLASS="indexterm"
NAME="ch01-idx-10462-0"
></A
>functions.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_03.htm#ch01-SECT-3.5"
TITLE="1.3 Using Built-in Packages"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.3 Using Built-in Packages"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle Built-in Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle Built-in Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="part"
HREF="part02.htm"
TITLE="II. Application Development Packages"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: II. Application Development Packages"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>1.3 Using Built-in Packages</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>II. Application Development Packages</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
