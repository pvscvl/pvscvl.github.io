<HTML
><HEAD
><TITLE
>[Chapter 13] Job Scheduling in the Database</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein, Charles Dye &amp; John Beresniewicz"><META
NAME="DC.Date"
CONTENT="2000-04-29T17:59:04Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates-1-56592-375-8E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-375-8E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle Packages"><META
NAME="DC.Title"
CONTENT="Oracle Built-in Packages"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="part03.htm"
TITLE="III. Server Management Packages"><LINK
REL="prev"
HREF="ch12_02.htm#ch12-SECT-2.1"
TITLE="12.2 DBMS_SHARED_POOL: Pinning Objects"><LINK
REL="next"
HREF="ch13_02.htm#ch13-SECT-2.6.1"
TITLE="13.2 Job Queue Architecture"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle Built-in Packages"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle Built-in Packages"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch12_02.htm#ch12-SECT-2.1"
TITLE="12.2 DBMS_SHARED_POOL: Pinning Objects"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 12.2 DBMS_SHARED_POOL: Pinning Objects"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
>Chapter 13</SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_02.htm#ch13-SECT-2.6.1"
TITLE="13.2 Job Queue Architecture"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13.2 Job Queue Architecture"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="chapter"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="ch13-26507"
>13. Job Scheduling in the Database</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="sect1"
HREF="#ch13-13007"
TITLE="13.1 Getting Started with DBMS_ JOB"
>Getting Started with DBMS_ JOB</A
><BR><A
CLASS="sect1"
HREF="ch13_02.htm#ch13-SECT-2.6.1"
TITLE="13.2 Job Queue Architecture"
>Job Queue Architecture</A
><BR><A
CLASS="sect1"
HREF="ch13_03.htm#ch13-SECT-3.2"
TITLE="13.3 Tips on Using DBMS_JOB"
>Tips on Using DBMS_JOB</A
><BR><A
CLASS="sect1"
HREF="ch13_04.htm#ch13-SECT-4.2"
TITLE="13.4 DBMS_JOB Examples"
>DBMS_JOB Examples</A
></P
><P
></P
></DIV
><P
CLASS="para"
>The <A
CLASS="indexterm"
NAME="ch13-idx-8392-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8392-1"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8392-2"
></A
>DBMS_JOB package is actually an API into an Oracle subsystem known as the <EM
CLASS="emphasis"
>job queue</EM
><A
CLASS="indexterm"
NAME="ch13-idx-8391-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8391-1"
></A
>. The Oracle job queue allows for the scheduling and execution of PL/SQL routines (jobs) at predefined times and/or repeated job execution at regular intervals. The DBMS_JOB package provides programs for submitting and executing jobs, changing job execution parameters, and removing or temporarily suspending job execution. This package is the only interface with the Oracle job queue.</P
><P
CLASS="para"
>DBMS_JOB is used to schedule many different types of tasks that can be performed in PL/SQL and that require regular execution. The job queue is used extensively by Oracle <A
CLASS="indexterm"
NAME="ch13-idx-8400-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8400-1"
></A
>replication facilities, and was originally developed for the purpose of refreshing Oracle snapshots. DBMS_JOB is often used by DBAs to schedule regular maintenance activities on databases, typically during periods of low usage by end users. It can similarly be used by applications to schedule large batch operations during off hours. The job queue can also be used to start up service programs that listen on database <A
CLASS="indexterm"
NAME="ch13-idx-8401-0"
></A
>pipes and respond to service requests by user sessions.</P
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch13-13007"
>13.1 Getting Started with DBMS_ JOB</A
></H2
><P
CLASS="para"
>The DBMS_JOB package is <A
CLASS="indexterm"
NAME="ch13-idx-8402-0"
></A
>created when the Oracle database is installed. The <I
CLASS="filename"
>dbmsjob.sql</I
><A
CLASS="indexterm"
NAME="ch13-idx-8403-0"
></A
> script (found in the built-in packages source code directory, as described in <A
CLASS="xref"
HREF="ch01_01.htm"
>Chapter 1, <CITE
CLASS="chapter"
>Introduction</CITE
></A
>) contains the source code for this package's specification. This script is called by <I
CLASS="filename"
>catproc.sql</I
>, which is normally run immediately after database creation. The script creates the public synonym <A
CLASS="indexterm"
NAME="ch13-idx-9849-0"
></A
>DBMS_JOB for the package and grants EXECUTE privilege on the package to public. All Oracle users can reference and make use of this package. </P
><P
CLASS="para"
>There are several data dictionary views that display information about the Oracle job queue. These are called DBA_JOBS, USER_JOBS, and DBA_JOBS_RUNNING, and are created by the script <I
CLASS="filename"
>catjobq.sql</I
><A
CLASS="indexterm"
NAME="ch13-idx-8405-0"
></A
>. This script is also located in the built-in packages source code directory and is automatically run by <I
CLASS="filename"
>catproc.sql</I
>.</P
><P
CLASS="para"
>Finally, the job queue must have its dedicated background processes started in order to operate properly. This is accomplished by setting an initialization parameter in the INIT.ORA file for the database. The parameter is,</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>JOB_QUEUE_PROCESSES = n </PRE
></BLOCKQUOTE
><P
CLASS="para"
>where n is a number between 1 and 36. Other INIT.ORA parameters that affect job queue behavior are discussed in the <A
CLASS="xref"
HREF="ch13_02.htm#ch13-SECT-2.6.1"
>Section 13.2, "Job Queue Architecture"</A
>" section.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-SECT-1.1"
>13.1.1 DBMS_JOB Programs</A
></H3
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch13_01.htm"
>Table 13.1</A
> <A
CLASS="indexterm"
NAME="ch13-idx-8406-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8406-1"
></A
>lists the programs defined for the DBMS_JOB packages.</P
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="ch13-17451"
>Table 13.1: DBMS_JOB Programs</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Name</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Use in</P
><P
CLASS="para"
> SQL?</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-8413-0"
></A
>BROKEN</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Marks the job as broken; do not re-execute</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-8408-0"
></A
>CHANGE</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Changes job parameters that can be set by user</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-8422-0"
></A
>CHECK_PRIVS</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Unknown</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-8409-0"
></A
>INTERVAL</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Changes execution interval for job</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-8416-0"
></A
>ISUBMIT</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Submits a new job specifying job number</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-8410-0"
></A
>NEXT_DATE</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Changes next execution date for job</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-8412-0"
></A
>REMOVE</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Removes existing job from the queue</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-8414-0"
></A
>RUN</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Runs the job immediately in current session</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-8407-0"
></A
>SUBMIT</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Submits a new job obtaining new job number</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-8415-0"
></A
>USER_EXPORT</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Creates text of call to recreate a job </P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-8411-0"
></A
>WHAT</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Changes PL/SQL executed for job</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>No</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>The <A
CLASS="indexterm"
NAME="ch13-idx-9850-0"
></A
>DBMS_JOB package does not declare any package exceptions or nonprogram elements. In addition, none of the programs in this package asserts a purity level with the RESTRICT_REFERENCES pragma.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch13-SECT-1.2"
>13.1.2 Job Definition Parameters</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch13-idx-8423-0"
></A
>The programs in DBMS_JOB share a set of parameters that define jobs, their execution times, and frequency of execution. All of the DBMS_JOB procedures manipulate one or more of these parameters:</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Parameter</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>job</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Unique identifier of the job</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>what</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>PL/SQL code to execute as a job </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>next_date</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Next execution date of the job</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>interval</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Date function to compute next execution date of job</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>broken</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Flags job as broken and not to be executed</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>The following sections describe the characteristics of these parameters that apply to all of the procedures that contain them as formal parameters.</P
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="ch13-SECT-1.2.1"
>13.1.2.1 The job parameter</A
></H4
><P
CLASS="para"
>The <A
CLASS="indexterm"
NAME="ch13-idx-8427-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8427-1"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8427-2"
></A
>job parameter is an integer that uniquely identifies the job. It can be either selected by the user or automatically assigned by the system, depending on which of the two job submission procedures is used to enter the job into the job queue. The DBMS_JOB.SUBMIT procedure automatically assigns the job number by obtaining the next value from the sequence SYS.JOBSEQ. It is returned as an OUT parameter so the caller can subsequently identify the job submitted. DBMS_JOB.ISUBMIT allows the user to assign a specific integer identifier to the job, and it is up to the caller to ensure that this number is unique. </P
><P
CLASS="para"
>Job numbers cannot be changed other than by removing and resubmitting the job. The job number is retained even when the database is exported and imported. Be aware of the potential for job number conflicts when performing export/import between databases that contain jobs.</P
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="ch13-SECT-1.2.2"
>13.1.2.2 The what parameter</A
></H4
><P
CLASS="para"
>The <A
CLASS="indexterm"
NAME="ch13-idx-8429-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8429-1"
></A
>what parameter is a character string that evaluates to a valid PL/SQL call to be executed automatically by the job queue. You must enclose the what parameter in single quotes if you are using a string literal. Alternatively, you can use a VARCHAR2 variable containing the desired string value. The actual PL/SQL call must be terminated with a semicolon. To embed literal strings in the PL/SQL call, include two single quotes around the literal.</P
><P
CLASS="para"
>The length of the what parameter is limited to 2000 bytes under Oracle 7.3 and 4000 bytes under Oracle 8.0. These limits should be more than sufficient for all practical purposes. The value of the parameter is normally a call to a stored PL/SQL program. It is best to avoid using large anonymous PL/SQL blocks, although these are legal values. Another good tip is to always wrap <A
CLASS="indexterm"
NAME="ch13-idx-8431-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8431-1"
></A
>stored procedure invocations in an anonymous block, as some subtle difficulties are possible otherwise. Thus, instead of:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>what =&gt; 'my_proc(parm1);'</PRE
></BLOCKQUOTE
><P
CLASS="para"
>it is safer to use:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>what =&gt; 'begin my_proc(parm1); end;'</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Whenever the what parameter is modified to change the job to execute, the user's current <A
CLASS="indexterm"
NAME="ch13-idx-8432-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8432-1"
></A
>session settings are recorded and become part of the job's execution environment. This could alter the expected execution behavior of the job if the session settings were different from those in place when the job was originally submitted. It is important to be aware of this potential side effect and be sure that session settings are correct whenever the what parameter is used in a DBMS_JOB procedure call. See the <A
CLASS="xref"
HREF="ch13_02.htm#ch13-SECT-2.6.1"
>Section 13.2</A
>" section for more discussion of the job execution environment.</P
><P
CLASS="para"
>Jobs that reference <A
CLASS="indexterm"
NAME="ch13-idx-8433-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8433-1"
></A
>database links will fail if the database link is not fully qualified with the username and password. This is another subtle consequence of the execution environment of jobs.</P
><P
CLASS="para"
>The job definition specified by the what parameter can also reference the following "special" job parameter values:</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Parameter</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Mode</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>job </P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>IN</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>next_date</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>IN/OUT</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>broken</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>IN/OUT</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>When the job definition references these job parameters in its own parameter list, their values are assigned to the parameters in the job definition when the job executes. For example, suppose that a procedure called proc1 has the following specification:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>PROCEDURE proc1 (my_job_number IN INTEGER);</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Suppose also that we submit proc1 to be executed by the job queue as follows:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>DECLARE
   jobno   INTEGER;
BEGIN
   DBMS_JOB.SUBMIT(jobno,`proc1(my_job_number=&gt;job);');
END;
/</PRE
></BLOCKQUOTE
><P
CLASS="para"
>When proc1 is executed by the queue, the my_job_number parameter is assigned the job's job number, and thus proc1 will "know" what job number it is.</P
><P
CLASS="para"
>The ability to reference and modify job parameters from within the job itself enables the creation of self-modifying and self-aware jobs. See the <A
CLASS="xref"
HREF="ch13_04.htm#ch13-SECT-4.2"
>Section 13.4, "DBMS_JOB Examples"</A
>" section for an example of a job that demonstrates these <A
CLASS="indexterm"
NAME="ch13-idx-8490-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8490-1"
></A
>powerful characteristics.</P
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="ch13-SECT-1.2.3"
>13.1.2.3 The next_date parameter</A
></H4
><P
CLASS="para"
>The <A
CLASS="indexterm"
NAME="ch13-idx-8434-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8434-1"
></A
>next_date parameter tells the job queue when a job should be executed next. This parameter defaults to SYSDATE in both the DBMS_JOB.SUBMIT and BROKEN procedures, indicating that the job should be run immediately. </P
><P
CLASS="para"
>Whenever a NULL value is passed for the next_date parameter, the next execution date for the job is set to January 1, 4000. This effectively keeps the job from being executed without removing it from the job queue.</P
><P
CLASS="para"
>The next_date parameter can be set to a time in the past. Jobs are chosen for execution in order of their next execution dates, so setting a job's next_date back can effectively move the job ahead in the queue. This can be useful in systems where the job queue processes are not keeping up with jobs to be executed, and a specific job needs to be executed as soon as possible.</P
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="ch13-SECT-1.2.4"
>13.1.2.4 The interval parameter</A
></H4
><P
CLASS="para"
>The <A
CLASS="indexterm"
NAME="ch13-idx-8436-0"
></A
><A
CLASS="indexterm"
NAME="ch13-idx-8436-1"
></A
>interval parameter is a character string representing a valid Oracle date expression. This date expression is evaluated each time the job begins execution. When a job completes successfully, this date becomes the next execution date for the job. It is important to remember that interval evaluation and updating the job's next execution date happen at different times. For instance, a job that takes one hour to complete and has interval set to SYSDATE+1/48 (every 30 minutes) will constantly execute, because each time it completes, it will already be 30 minutes late to execute again.</P
><P
CLASS="para"
>The interval expression must evaluate to either a NULL value or a time in the future. When interval evaluates to a NULL value, the job will not be re-executed after the next execution and will be automatically removed from the job queue. Thus, to execute a job one time only, pass a NULL value for the interval parameter.</P
><P
CLASS="para"
>Jobs may have complex execution schedules, requiring complex date arithmetic expressions for the interval parameter. The interval parameter can contain a call to a PL/SQL function with a return datatype of DATE, suggesting a nice way to encapsulate complex execution schedules within simple interval parameter values. However, experimentation with using function calls for interval resulted in erratic job execution behavior. Thus, unfortunately, a useful alternative to embedding complex date arithmetic into the interval parameter does not appear to be currently available.</P
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="ch13-SECT-1.2.5"
>13.1.2.5 The broken parameter </A
></H4
><P
CLASS="para"
>The <A
CLASS="indexterm"
NAME="ch13-idx-8437-0"
></A
>broken parameter is a BOOLEAN flag used to indicate that the job is to be marked as broken (TRUE) or unbroken (FALSE). The job queue processes will not attempt to execute jobs marked as <A
CLASS="indexterm"
NAME="ch13-idx-8425-0"
></A
>broken.</P
></DIV
></DIV
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch12_02.htm#ch12-SECT-2.1"
TITLE="12.2 DBMS_SHARED_POOL: Pinning Objects"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 12.2 DBMS_SHARED_POOL: Pinning Objects"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle Built-in Packages"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle Built-in Packages"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch13_02.htm#ch13-SECT-2.6.1"
TITLE="13.2 Job Queue Architecture"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13.2 Job Queue Architecture"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>12.2 DBMS_SHARED_POOL: Pinning Objects</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>13.2 Job Queue Architecture</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
