<HTML
><HEAD
><TITLE
>[Chapter 1] 1.7 Loops </TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein, Bill Pribyl &amp; Chip Dawes"><META
NAME="DC.Date"
CONTENT="2000-04-29T17:31:56Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-457-6E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-457-6E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle PL/SQL Reference"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Language Pocket Reference"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch01_01.htm"
TITLE="1. Oracle PL/SQL Language Pocket Reference"><LINK
REL="prev"
HREF="ch01_06.htm"
TITLE="1.6 Conditional and Sequential Control "><LINK
REL="next"
HREF="ch01_08.htm"
TITLE="1.8 Database Interaction and Cursors "></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Language Pocket Reference"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Language Pocket Reference"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_06.htm"
TITLE="1.6 Conditional and Sequential Control "
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.6 Conditional and Sequential Control "
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch01_01.htm"
TITLE="1. Oracle PL/SQL Language Pocket Reference"
>Chapter 1<BR>Oracle PL/SQL Language Pocket Reference</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_08.htm"
TITLE="1.8 Database Interaction and Cursors "
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.8 Database Interaction and Cursors "
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="plsql-toc443895336"
>1.7 Loops </A
></H2
><P
CLASS="para"
>The LOOP construct allows you to repeatedly execute a sequence of statements. There are three kind of loops: simple, WHILE, and FOR.</P
><P
CLASS="para"
>Use the EXIT statement to break out of LOOP and pass control to the statement following the END LOOP.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsql-toc443895337"
>1.7.1 The Simple Loop</A
></H3
><P
CLASS="para"
>The syntax for a simple loop is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>LOOP
   executable_statement(s)
END LOOP;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The simple loop should contain an EXIT or EXIT WHEN statement so as not to execute infinitely. Use the simple loop when you want the body of the loop to execute at least once. </P
><P
CLASS="para"
>For example:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>LOOP
   FETCH company_cur INTO company_rec;
   EXIT WHEN company_cur%ROWCOUNT &gt; 5 OR
      company_cur%NOTFOUND;
   process_company(company_cur);
END LOOP;</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsql-toc443895338"
>1.7.2 The Numeric FOR Loop </A
></H3
><P
CLASS="para"
>The syntax for a numeric FOR loop is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FOR loop_index IN [REVERSE] lowest_number..
   highest_number
LOOP
   executable_statement(s)
END LOOP;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The PL/SQL runtime engine automatically declares the loop index a PLS_INTEGER variable; never declare a variable with that name yourself. The <EM
CLASS="emphasis"
>lowest_number</EM
> and <EM
CLASS="emphasis"
>highest_number</EM
> ranges can be variables, but are evaluated only once&nbsp;-- on initial entry into the loop. The REVERSE keyword causes PL/SQL to start with the <EM
CLASS="emphasis"
>highest_number</EM
> and decrement down to the <EM
CLASS="emphasis"
>lowest_number</EM
>. For example:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>BEGIN
   DBMS_OUTPUT.PUT_LINE('Beginning Forward');
   FOR counter IN 1 .. 4
   LOOP
      DBMS_OUTPUT.PUT_LINE('counter='||counter);
   END LOOP;

   DBMS_OUTPUT.PUT_LINE('Beginning REVERSE');
   FOR counter IN REVERSE 1 .. 4
   LOOP
      DBMS_OUTPUT.PUT_LINE('counter='||counter);
   END LOOP;
END;</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsql-toc443895339"
>1.7.3 The Cursor FOR Loop </A
></H3
><P
CLASS="para"
>The syntax for a cursor FOR loop is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FOR record_index IN [cursor_name | (SELECT statement)]
LOOP
   executable_statement(s)
END LOOP;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The PL/SQL runtime engine automatically declares the loop index a record of <EM
CLASS="emphasis"
>cursor_name</EM
>%ROWTYPE; never declare a variable with that name yourself. </P
><P
CLASS="para"
>The cursor FOR loop automatically opens the cursor, fetches all rows identified by the cursor, and then closes the cursor. You can embed the SELECT statement directly in the cursor FOR loop. For example:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>FOR emp_rec IN emp_cur
LOOP
   IF emp_rec.title = 'Oracle Programmer'
   THEN
      give_raise(emp_rec.emp_id,30)
   END IF;
END LOOP;</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsql-toc443895340"
>1.7.4 The WHILE Loop </A
></H3
><P
CLASS="para"
>The syntax for a WHILE loop is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>WHILE condition
LOOP
   executable_statement(s)
END LOOP;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Use the WHILE loop when, depending on the entry condition, you don't want the loop body to execute even once:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>WHILE NOT end_of_analysis
LOOP
   perform_analysis;
   get_next_record;
   IF analysis_cursor%NOTFOUND AND next_step IS NULL
   THEN
      end_of_analysis := TRUE;
   END IF;
END LOOP;</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsql-toc443895341"
>1.7.5 The REPEAT UNTIL Loop Emulation</A
></H3
><P
CLASS="para"
>PL/SQL does not directly support a REPEAT UNTIL construct, but a modified simple loop can emulate one. The syntax for this emulated REPEAT UNTIL loop is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>LOOP
   executable_statement(s)
   EXIT WHEN Boolean_condition;
END LOOP;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Use the emulated REPEAT UNTIL loop when executing iterations indefinitely before conditionally terminating the loop. </P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsql-toc443895342"
>1.7.6 The EXIT Statement</A
></H3
><P
CLASS="para"
>The syntax for the EXIT statement is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>EXIT [WHEN Boolean_condition];</PRE
></BLOCKQUOTE
><P
CLASS="para"
>If you do not include a WHEN clause in the EXIT statement, it will terminate the loop unconditionally. Otherwise, the loop terminates only if <EM
CLASS="emphasis"
>Boolean_condition</EM
> evaluates to TRUE. The EXIT statement is optional and can appear anywhere in the loop.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsql-toc443895343"
>1.7.7 Loop Labels</A
></H3
><P
CLASS="para"
>Loops can be optionally labeled to improve readability and execution control. The label must appear immediately in front of the statement that initiates the loop.</P
><P
CLASS="para"
>The following example demonstrates the use of loop labels to qualify variables within a loop and also to terminate nested and outer loops:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>&lt;&lt;year_loop&gt;&gt;
FOR yearind IN 1 .. 20
LOOP
   &lt;&lt;month_loop&gt;&gt;
   LOOP
      ...
      IF year_loop.yearind &gt; 10
      THEN
         EXIT year_loop;
      END IF;
   END LOOP month_loop;
END LOOP year_loop;</PRE
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_06.htm"
TITLE="1.6 Conditional and Sequential Control "
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.6 Conditional and Sequential Control "
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Language Pocket Reference"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Language Pocket Reference"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_08.htm"
TITLE="1.8 Database Interaction and Cursors "
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.8 Database Interaction and Cursors "
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>1.6 Conditional and Sequential Control </TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
>&nbsp;</TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>1.8 Database Interaction and Cursors </TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
