<HTML
><HEAD
><TITLE
>[Chapter 1] 1.13 Triggers</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein, Bill Pribyl &amp; Chip Dawes"><META
NAME="DC.Date"
CONTENT="2000-04-29T17:32:30Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CD-ROM-1-56592-457-6E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-457-6E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle PL/SQL Reference"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Language Pocket Reference"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch01_01.htm"
TITLE="1. Oracle PL/SQL Language Pocket Reference"><LINK
REL="prev"
HREF="ch01_12.htm"
TITLE="1.12 Named Program Units"><LINK
REL="next"
HREF="ch01_14.htm"
TITLE="1.14 Packages"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Language Pocket Reference"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Language Pocket Reference"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_12.htm"
TITLE="1.12 Named Program Units"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.12 Named Program Units"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch01_01.htm"
TITLE="1. Oracle PL/SQL Language Pocket Reference"
>Chapter 1<BR>Oracle PL/SQL Language Pocket Reference</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_14.htm"
TITLE="1.14 Packages"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.14 Packages"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="plsql-toc443895391"
>1.13 Triggers</A
></H2
><P
CLASS="para"
><EM
CLASS="emphasis"
>Triggers</EM
> are programs that execute in response to changes in table data or certain database events. There is a predefined set of events that can be "hooked" with a trigger, enabling you to integrate your own processing with that of the database. A triggering event <EM
CLASS="emphasis"
>fires</EM
> or executes the trigger. </P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsql-toc443895392"
>1.13.1 Creating Triggers</A
></H3
><P
CLASS="para"
>The syntax for creating a trigger is:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>BEFORE | AFTER | INSTEAD OF trigger_event 
   ON 
   [ NESTED TABLE nested_table_column OF view ]    
      | table_or_view_reference | DATABASE 
trigger_body;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>INSTEAD OF triggers are valid on only Oracle8 views. Oracle8<EM
CLASS="emphasis"
>i</EM
>  must create a trigger on a nested table column. </P
><P
CLASS="para"
>Trigger events are defined in the following table. </P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Trigger Event</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>INSERT</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Fires whenever a row is added to the <EM
CLASS="emphasis"
>table_reference</EM
>.</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>UPDATE</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Fires whenever an UPDATE changes the <EM
CLASS="emphasis"
>table_reference</EM
>. UPDATE triggers can additionally specify an OF clause to restrict firing to updates OF certain columns. See the following examples.</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>DELETE</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Fires whenever a row is deleted from the <EM
CLASS="emphasis"
>table_reference</EM
>. Does not fire on TRUNCATE of the table.</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>CREATE (Oracle8<EM
CLASS="emphasis"
>i)</EM
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Fires whenever a CREATE statement adds a new object to the database. In this context, objects are things like tables or packages (found in ALL_OBJECTS). Can apply to a single schema or the entire database.</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>ALTER (Oracle8<EM
CLASS="emphasis"
>i)</EM
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Fires whenever an ALTER statement changes a database object. In this context, objects are things like tables or packages (found in ALL_OBJECTS). Can apply to single schema or the entire database.</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>DROP (Oracle8<EM
CLASS="emphasis"
>i)</EM
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Fires whenever a DROP statement removes an object from the database. In this context, objects are things like tables or packages (found in ALL_OBJECTS). Can apply to a single schema or the entire database.</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>SERVERERROR (Oracle8<EM
CLASS="emphasis"
>i)</EM
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Fires whenever a server error message is logged. Only AFTER triggers are allowed in this context.</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>LOGON (Oracle8<EM
CLASS="emphasis"
>i)</EM
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Fires whenever a session is created (a user connects to the database). Only AFTER triggers are allowed in this context.</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>LOGOFF (Oracle8<EM
CLASS="emphasis"
>i)</EM
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Fires whenever a session is terminated (a user disconnects from the database). Only BEFORE triggers are allowed in this context.</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>STARTUP (Oracle8<EM
CLASS="emphasis"
>i)</EM
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Fires when the database is opened. Only AFTER triggers are allowed in this context.</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>SHUTDOWN (Oracle8<EM
CLASS="emphasis"
>i)</EM
></P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Fires when the database is closed. Only BEFORE triggers are allowed in this context.</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>Triggers can fire BEFORE or AFTER the triggering event. AFTER data triggers are slightly more efficient than BEFORE triggers.</P
><P
CLASS="para"
>The <EM
CLASS="emphasis"
>referencing_clause</EM
> is only allowed for the data events INSERT, UPDATE, and DELETE. It lets you give a non-default name to the old and new pseudo-records. These pseudo-records give the program visibility to the pre- and post-change values in row-level triggers. These records are defined like %ROWTYPE records, except that columns of type LONG or LONG RAW cannot be referenced. They are prefixed with a colon in the trigger body, and referenced with dot notation. Unlike other records, these fields can only be assigned individually&nbsp;-- aggregate assignment is not allowed. All old fields are NULL within INSERT triggers, and all new fields are NULL within DELETE triggers.</P
><P
CLASS="para"
>FOR EACH ROW defines the trigger to be a row-level trigger. Row-level triggers fire once for each row affected. The default is a statement-level trigger, which fires only once for each triggering statement. </P
><P
CLASS="para"
>The WHEN <EM
CLASS="emphasis"
>trigger_condition</EM
> specifies the conditions that must be met for the trigger to fire. Stored functions and object methods are not allowed in the trigger condition. </P
><P
CLASS="para"
>The trigger body is a standard PL/SQL block. For example: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>CREATE OR REPLACE TRIGGER add_uid
   BEFORE INSERT ON emp 
   REFERENCING NEW as new_row 
   FOR EACH ROW
   BEGIN
      -- Automatically timestamp the entry.
      SELECT SYSDATE INTO :new_row.entry_date
         FROM dual;
END add_uid;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Triggers are enabled on creation, and can be disabled (so they do not fire) with an ALTER statement:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>ALTER TRIGGER trigger_name ENABLE | DISABLE;

ALTER TABLE table_name ENABLE | DISABLE ALL 
   TRIGGERS;</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsql-toc443895393"
>1.13.2 Trigger Predicates</A
></H3
><P
CLASS="para"
>When using a single trigger for multiple events, use the trigger predicates INSERTING, UPDATING, and DELETING in the trigger condition to identify the triggering event:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>CREATE OR REPLACE TRIGGER emp_log_t
   AFTER INSERT OR UPDATE OR DELETE ON emp
   FOR EACH ROW
DECLARE
   dmltype  CHAR(1);
BEGIN
   IF INSERTING THEN
      dmltype := 'I';
      INSERT INTO emp_log (emp_no, who, operation)
         VALUES (:new.empno, USER, dmltype);
   ELSIF UPDATING  THEN
      dmltype := 'U';
      INSERT INTO emp_log (emp_no, who, operation)
         VALUES (:new.empno, USER, dmltype);
   END IF;
END;</PRE
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsql-toc443895394"
>1.13.3 DML Events</A
></H3
><P
CLASS="para"
>The DML events include INSERT, UPDATE, or DELETE statements on a table or view. Triggers on these events can be statement- (table only) or row-level triggers and can fire BEFORE or AFTER the triggering event. BEFORE triggers can modify the data in affected rows, but perform an additional logical read. AFTER triggers do not perform this additional logical read, and therefore perform slightly better, but are not able to change the :<EM
CLASS="emphasis"
>new</EM
> values. Triggers cannot be created on SYS-owned objects. The order in which these triggers fire, if present, is as follows:</P
><OL
CLASS="orderedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>BEFORE statement-level trigger</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>For each row affected by the statement:</P
><OL
CLASS="orderedlist"
TYPE="a"
><LI
CLASS="listitem"
><P
CLASS="para"
>BEFORE row-level trigger</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>The triggering statement</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>AFTER row-level trigger</P
></LI
></OL
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>AFTER statement-level trigger</P
></LI
></OL
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsql-toc443895396"
>1.13.4 DDL Events (Oracle8i)</A
></H3
><P
CLASS="para"
>The DDL events are CREATE, ALTER, and DROP. These triggers fire whenever the respective DDL statement is executed. DDL triggers can apply to either a single schema or the entire database. </P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="plsql-toc443895397"
>1.13.5 Database Events (Oracle8i)</A
></H3
><P
CLASS="para"
>The database events are SERVERERROR, LOGON, LOGOFF, STARTUP, and SHUTDOWN. Only BEFORE triggers are allowed for LOGOFF and SHUTDOWN events. Only AFTER triggers are allowed for LOGON, STARTUP, and SERVERERROR events. A SHUTDOWN trigger will fire on a SHUTDOWN NORMAL and a SHUTDOWN IMMEDIATE, but not on a SHUTDOWN ABORT.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_12.htm"
TITLE="1.12 Named Program Units"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.12 Named Program Units"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Language Pocket Reference"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Language Pocket Reference"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_14.htm"
TITLE="1.14 Packages"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.14 Packages"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>1.12 Named Program Units</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
>&nbsp;</TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>1.14 Packages</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="../guide8i/index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
