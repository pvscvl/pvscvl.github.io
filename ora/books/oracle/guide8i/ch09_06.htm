<HTML
><HEAD
><TITLE
>[Chapter 9] 9.6 Managing Java in the Database</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T19:27:21Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CDROM-1-56592-675-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-675-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle 8i Features"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming Guide to Oracle 8i Features"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch09_01.htm"
TITLE="9. Calling Java from PL/SQL"><LINK
REL="prev"
HREF="ch09_05.htm"
TITLE="9.5 Using dropjava"><LINK
REL="next"
HREF="ch09_07.htm#ch09-SECT-7.2"
TITLE="9.7 Using DBMS_JAVA and DBMS_JAVA_TEST"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming Guide to Oracle 8i Features"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming Guide to Oracle 8i Features"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_05.htm"
TITLE="9.5 Using dropjava"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.5 Using dropjava"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch09_01.htm"
TITLE="9. Calling Java from PL/SQL"
>Chapter 9<BR>Calling Java from PL/SQL</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_07.htm#ch09-SECT-7.2"
TITLE="9.7 Using DBMS_JAVA and DBMS_JAVA_TEST"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.7 Using DBMS_JAVA and DBMS_JAVA_TEST"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch09-12211"
>9.6 Managing Java in the Database</A
></H2
><P
CLASS="para"
>This section explores in more detail issues related to the way Java elements are stored in the database, and how you can manage those elements.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch09-SECT-6.1"
>9.6.1 The Java Namespace in Oracle</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch-09-namemag"
></A
><A
CLASS="indexterm"
NAME="ch-09-javnamemag"
></A
>Oracle stores each Java class in the database as a schema object. The name of that object is <EM
CLASS="emphasis"
>derived from</EM
> (but is not the same as) the fully qualified name of the class; this name includes the names of any containing packages. The full name of the class OracleSimpleChecker, for example, is as follows: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>oracle.sqlj.checker.OracleSimpleChecker</PRE
></BLOCKQUOTE
><P
CLASS="para"
>In the database, however, the full name of the Java schema object would be:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>oracle/sqlj/checker/OracleSimpleChecker</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Once stored in the Oracle RDBMS, in other words, slashes replace dots.</P
><P
CLASS="para"
>An object name in Oracle, whether it is the name of a database table or a Java class, cannot be longer than 30 characters. Java does not have the same restriction; you can have much longer names. Oracle will allow you to load a Java class into Oracle with a name of up to 4000 characters. If the Java element name has more than 30 characters, Oracle will automatically generate a valid (less than 31 characters) alias for that element. </P
><P
CLASS="para"
>But don't worry! You never have to reference that alias. You can, instead, continue to use the real name for your Java element in your code. Oracle will map that long name automatically to its alias (the schema name) when necessary.<A
CLASS="indexterm"
NAME="AUTOID-6300"
></A
><A
CLASS="indexterm"
NAME="AUTOID-6301"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch09-SECT-6.2"
>9.6.2 Examining Loaded Java Elements</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch-09-ljee"
></A
><A
CLASS="indexterm"
NAME="ch-09-loadjavael"
></A
>Once you have loaded Java source, class, and resource elements into the database, information about those elements is available in several different data dictionary views, as shown in <A
CLASS="xref"
HREF="ch09_06.htm#ch09-SECT-6.2"
>Table 9.4</A
>.</P
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="ch09-87038"
>Table 9.4: Class Information in Data Dictionary Views </A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>View</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-6324"
></A
> USER_OBJECTS</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6327"
></A
>ALL_OBJECTS</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6330"
></A
>DBA_OBJECTS</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Contains header information about your objects of JAVA SOURCE, JAVA CLASS, and JAVA RESOURCE types</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-6337"
></A
> USER_ERRORS</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6340"
></A
>ALL_ERRORS </P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6343"
></A
>DBA_ERRORS</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Contains any compilation errors encountered for your objects</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-6350"
></A
> USER_SOURCE</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Contains the source code for your Java source if and only if you used the CREATE JAVA SOURCE command to create the Java schema object</P
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>You can write queries against these views or you can build programs to access the information in a variety of useful ways. For example, here is a query that shows me all of the Java-related objects in my schema:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>/ *Filename on companion disk: myjava.pkg */
COLUMN object_name FORMAT A30
SELECT object_name, object_type, status, timestamp
  FROM user_objects
 WHERE (object_name NOT LIKE 'SYS_%'
         AND object_name NOT LIKE 'CREATE$%'
         AND object_name NOT LIKE 'JAVA$%'
         AND object_name NOT LIKE 'LOADLOB%')
   AND object_type LIKE 'JAVA %'
 ORDER BY object_type, object_name;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The WHERE clause filters out those objects created by Oracle for managing Java objects. Here is some sample output:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; @showjava
OBJECT_NAME             OBJECT_TYPE  STATUS  TIMESTAMP
---------------------   ------------ ------- -------------------
Hello                   JAVA CLASS   VALID   1999-05-19:16:42:27
JFile2                  JAVA CLASS   VALID   1999-05-26:17:07:11
JFile3                  JAVA CLASS   VALID   1999-05-27:12:53:46
plsolutions/java/putLn  JAVA SOURCE  VALID   1999-05-19:16:30:29
</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The <I
CLASS="filename"
>myjava.pkg</I
> file on the companion disk contains a packaged version of this query, allowing you to view your Java objects with this procedure call:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; exec myjava.showobjects</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The following lets you see a list of all the Java elements whose names start with OE:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; exec myjava.showobjects ('OE%')</PRE
></BLOCKQUOTE
><P
CLASS="para"
>The USER_OBJECTS view's object_name column contains the full names of Java schema objects, unless the name is longer than 30 characters or contains an untranslatable character from the Unicode character set. In this case, the short name is displayed in the object_name column. To convert short names to full names, you can use the LONGNAME function in the utility package DBMS_JAVA, which is explored in the next section. </P
><P
CLASS="para"
>Here are some things to keep in mind about Java schema elements stored in the database:</P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>When you use the loadjava command to load your Java element into the database, the source of your Java element is not transferred to Oracle. Only the <I
CLASS="filename"
>    .class</I
>, <I
CLASS="filename"
>.jar</I
>, <I
CLASS="filename"
>.zip</I
>, .<I
CLASS="filename"
>java</I
>, etc., files are moved into the database.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>If you use the CREATE JAVA DDL command, then the source for your Java element is stored in the database. You will then find an entry in your USER_OBJECTS (as well as DBA_OBJECTS and ALL_OBJECTS) view for that element with type "JAVA SOURCE". You can then use the DBMS_JAVA.EXPORT_SOURCE procedure to extract that source into PL/SQL data structures and display or manipulate the text. See the <I
CLASS="filename"
>showjava.sp</I
> file, discussed later in this chapter, for an example of such a procedure.<A
CLASS="indexterm"
NAME="AUTOID-6375"
></A
><A
CLASS="indexterm"
NAME="AUTOID-6376"
></A
></P
></LI
></UL
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_05.htm"
TITLE="9.5 Using dropjava"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.5 Using dropjava"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming Guide to Oracle 8i Features"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming Guide to Oracle 8i Features"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_07.htm#ch09-SECT-7.2"
TITLE="9.7 Using DBMS_JAVA and DBMS_JAVA_TEST"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.7 Using DBMS_JAVA and DBMS_JAVA_TEST"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>9.5 Using dropjava</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>9.7 Using DBMS_JAVA and DBMS_JAVA_TEST</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
