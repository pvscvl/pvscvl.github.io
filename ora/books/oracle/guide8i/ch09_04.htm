<HTML
><HEAD
><TITLE
>[Chapter 9] 9.4 Using loadjava</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T19:27:17Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CDROM-1-56592-675-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-675-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle 8i Features"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming Guide to Oracle 8i Features"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch09_01.htm"
TITLE="9. Calling Java from PL/SQL"><LINK
REL="prev"
HREF="ch09_03.htm#ch09-SECT-3.2"
TITLE="9.3 A Simple Demonstration"><LINK
REL="next"
HREF="ch09_05.htm"
TITLE="9.5 Using dropjava"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming Guide to Oracle 8i Features"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming Guide to Oracle 8i Features"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_03.htm#ch09-SECT-3.2"
TITLE="9.3 A Simple Demonstration"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.3 A Simple Demonstration"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch09_01.htm"
TITLE="9. Calling Java from PL/SQL"
>Chapter 9<BR>Calling Java from PL/SQL</A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_05.htm"
TITLE="9.5 Using dropjava"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.5 Using dropjava"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch09-90250"
>9.4 Using loadjava</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch-09-ljutil"
></A
><A
CLASS="indexterm"
NAME="ch-09-loadjuty"
></A
>The loadjava utility is an operating system command-line utility that uploads Java files into the database. The first time you run loadjava in a schema, it creates a number of elements for its own use:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>CREATE$JAVA$LOB$TABLE</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>A table created in each schema, containing Java code elements</P
></DD
><DT
CLASS="term"
>JAVA$CLASS$MD5$TABLE</DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6032"
></A
>A <I
CLASS="filename"
>hash table</I
>, also referred to as the <I
CLASS="firstterm"
>digest table</I
>, used to track the loading of Java elements into a given schema</P
></DD
><DT
CLASS="term"
>LOADLOBS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6040"
></A
>A package that is installed in each schema, used to load Java code elements as large objects (LOBs) into the database</P
></DD
></DL
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6043"
></A
>Using LOADLOBS, loadjava moves Java files into a BLOB column in the database table CREATE$JAVA$LOB$TABLE. It also checks the JAVA$CLASS$MD5$TABLE.MD5 hash value to see if the loaded classes have been loaded previously and whether they have been changed (thereby minimizing the need to reload).[<A
CLASS="footnote"
HREF="#ch09-pgfId-668561"
>1</A
>] This is done to avoid unnecessary invalidation of dependent classes. It then calls the new DDL command CREATE JAVA to load the Java classes from the BLOB column of CREATE$JAVA$LOB$TABLE into the RDBMS as schema objects. This loading occurs only if:</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch09-pgfId-668561"
>[1]</A
> MD5 is RSA Data Security's MD5 Message-Digest Algorithm; more information can be found on <A
CLASS="systemitem.url"
HREF="../../../../../../../www.columbia.edu/~ariel/ssleay/rfc1321.html."
>http://www.columbia.edu/~ariel/ssleay/rfc1321.html.</A
></P
></DIV
></BLOCKQUOTE
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>The class is being loaded for the first time</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>The class has been changed</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>The -force option is supplied</P
></LI
></UL
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch09_04.htm"
>Figure 9.3</A
> illustrates the loading of Java objects into the Oracle database.</P
><H4
CLASS="figure"
><A
CLASS="title"
NAME="ch09-10184"
>Figure 9.3: Loading Java elements into Oracle</A
></H4
><IMG
CLASS="graphic"
SRC="figs/o8if.0903.gif"
ALT="Figure 9.3"><P
CLASS="para"
>Here is the syntax: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>loadjava {-user | -u} <I
CLASS="replaceable"
>username/password</I
>[<I
CLASS="replaceable"
>@database]</I
>
  [<I
CLASS="replaceable"
>-option_name</I
> [<I
CLASS="replaceable"
>-option_name</I
>] ...] <I
CLASS="replaceable"
>filename </I
>[<I
CLASS="replaceable"
>filename</I
> ]...</PRE
></BLOCKQUOTE
><P
CLASS="para"
>where <I
CLASS="filename"
>option_name</I
> stands for the following syntax: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>{  {andresolve | a}
 | debug
 | {definer | d}
 | {encoding | e} encoding_scheme_name
 | {force | f}
 | {grant | g} {username | role_name}[,{username | role_name}]...
 | {oci8 | o}
 | oracleresolver
 | {resolve | r}
 | {resolver | R} &quot;resolver_spec&quot;
 | {schema | S} schema_name
 | {synonym | s}
 | {thin | t}
 | {verbose | v} }</PRE
></BLOCKQUOTE
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-6072"
></A
> On the command line, you can enter the names of Java source, class, and resource files, SQLJ input files (<I
CLASS="filename"
>.sqlj</I
> files), and uncompressed <I
CLASS="filename"
>.jar</I
> files and <I
CLASS="filename"
>.zip</I
> archives, in any order. </P
><P
CLASS="para"
>The following command, for example, loads the JFile class into the SCOTT schema:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>loadjava -user scott/tiger -oci8 -resolve JFile.class</PRE
></BLOCKQUOTE
><P
CLASS="para"
>You can run this command from within a DOS window on Windows NT or from the command line in a Unix session. You can also execute it from within SQL*Plus as shown:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>host loadjava -user scott/tiger -oci8 -resolve JFile.class</PRE
></BLOCKQUOTE
><P
CLASS="para"
>To make it easier for me to load classes into Oracle, I created a file named <I
CLASS="filename"
>lj.bat</I
> for Windows NT as follows:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>javac %1.java
loadjava -user %1 -oci8 -resolve %2.class</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Now I can compile and load a Java class in one step:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>D:\Java&gt; lj scott/tiger JFile</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Here are some things to keep in mind about loadjava. To display a help screen, use this syntax: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>loadjava {-help | -h}</PRE
></BLOCKQUOTE
><P
CLASS="para"
>In a list of options or files, names must be separated only by spaces: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>-force, -resolve, -thin  // No
-force -resolve -thin    // Yes</PRE
></BLOCKQUOTE
><P
CLASS="para"
>In a list of users or roles, however, names must be separated only by commas: </P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SCOTT, PAYROLL, BLAKE  // No
SCOTT,PAYROLL,BLAKE    // Yes</PRE
></BLOCKQUOTE
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch09_04.htm"
>Table 9.2</A
> describes the loadjava command-line options. </P
><P
CLASS="para"
>As you can probably imagine, there are a number of nuances to using loadjava, such as whether to load individual classes or compressed groups of elements in a <I
CLASS="filename"
>.zip</I
> or <I
CLASS="filename"
>.jar</I
> file. See the Oracle documentation for more information about the loadjava command.</P
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="ch09-67179"
>Table 9.2: loadjava Options </A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Option </P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Description </P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6110"
></A
>-andresolve</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Compiles source files and resolves each class file as it is loaded. This option and -resolve are mutually exclusive. If neither is specified, files are loaded but not compiled or resolved. In general, this mode is not recommended because it can leave classes that have unresolved references marked valid, causing an error at runtime. </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6117"
></A
>-debug</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Generates debug information. This option is equivalent to <CODE
CLASS="literal"
>javac -g</CODE
>. </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6125"
></A
>-definer</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Specifies that the methods of uploaded classes will execute with the privileges of their definer, not their invoker. (By default, methods execute with the privileges of their invoker.) Different definers can have different privileges, and an application can have many classes, so make sure the methods of a given class execute only with the privileges they need. </P
><P
CLASS="para"
>Note that Oracle8<EM
CLASS="emphasis"
>i</EM
> Release 8.1.5 does not seem to conform to the Oracle documentation; the default seems to be to run with definer rights.</P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6134"
></A
>-encoding</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Sets (or resets) the -encoding option in the database table JAVA$OPTIONS to the specified value, which must be the name of a standard JDK encoding scheme (the default is "latin1"). The compiler uses this value, so the encoding of uploaded source files must match the specified encoding. </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6141"
></A
>-force</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Forces the loading of Java class files, whether or not they have been loaded before. By default, previously loaded class files are rejected. You cannot force the loading of a class file if you previously loaded the source file. You must drop the source schema object first. </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6148"
></A
>-grant</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Grants the EXECUTE privilege on uploaded classes to the listed users or roles. (To call the methods of a class directly, users must have the EXECUTE privilege.) </P
><P
CLASS="para"
>This option is cumulative. Users and roles are added to the list of those having the EXECUTE privilege. </P
><P
CLASS="para"
>To revoke the privilege, either drop and reload the schema object without specifying -grant, or use the SQL REVOKE statement. To grant the privilege on an object in another user's schema, you must have the CREATE PROCEDURE WITH GRANT privilege. </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6157"
></A
>-oci8</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Directs loadjava to communicate with the database using the OCI JDBC driver. This option (the default) and -thin are mutually exclusive. </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6164"
></A
>-oracleresolver</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Binds newly created class schema objects to the following predefined resolver spec: </P
> <BLOCKQUOTE
><PRE
CLASS="programlisting"
>&quot;((* definer's_schema) (* public))&quot;</PRE
></BLOCKQUOTE
> <P
CLASS="para"
>-resolver are mutually exclusive. </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6173"
></A
>-resolve</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>After all class files on the command line are loaded and compiled (if necessary), resolves all external references in those classes. If this option is not specified, files are loaded but not compiled or resolved until runtime. </P
><P
CLASS="para"
>Specify this option to compile (if necessary) and resolve a class that was loaded previously. You need not specify the -force option because resolution is done independently, after loading. </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-6181"
></A
>-resolver</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Binds newly created class schema objects to a user-defined resolver spec. Because it contains spaces, the resolver spec must be enclosed by double quotes. This option and -oracleresolver (the default) are mutually exclusive. </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-6188"
></A
> -schema</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Assigns newly created Java schema objects to the specified schema. If this option is not specified, then the logon schema is used. You must have the CREATE ANY PROCEDURE privilege to load into another user's schema. </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-6195"
></A
> -synonym</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Creates a public synonym for uploaded classes, making them accessible outside the schema into which they are loaded. To specify this option, you must have the CREATE PUBLIC SYNONYM privilege. </P
><P
CLASS="para"
>If you specify this option for source files, it also applies to classes compiled from those source files. </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-6203"
></A
> -thin</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Directs loadjava to communicate with the database using the thin JDBC driver. This option and -oci8 (the default) are mutually exclusive. </P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
> <A
CLASS="indexterm"
NAME="AUTOID-6210"
></A
> -verbose</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Enables the verbose mode, in which progress messages are displayed.<A
CLASS="indexterm"
NAME="AUTOID-6214"
></A
><A
CLASS="indexterm"
NAME="AUTOID-6215"
></A
></P
></TD
></TR
></TBODY
></TABLE
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_03.htm#ch09-SECT-3.2"
TITLE="9.3 A Simple Demonstration"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.3 A Simple Demonstration"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming Guide to Oracle 8i Features"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming Guide to Oracle 8i Features"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_05.htm"
TITLE="9.5 Using dropjava"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.5 Using dropjava"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>9.3 A Simple Demonstration</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>9.5 Using dropjava</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
