<HTML
><HEAD
><TITLE
>[Chapter 3] 3.3 One Program, Multiple Schemas</TITLE
><META
NAME="DC.Creator"
CONTENT="Steven Feuerstein"><META
NAME="DC.Date"
CONTENT="2000-04-29T19:25:09Z"><META
NAME="DC.Format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.Identifier"
CONTENT="O'Reilly and Associates CDROM-1-56592-675-7E"><META
NAME="DC.Language"
CONTENT="en-US"><META
NAME="DC.Publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.Source"
CONTENT="1-56592-675-7E"
SCHEME="ISBN"><META
NAME="DC.Subject.Keyword"
CONTENT="Oracle 8i Features"><META
NAME="DC.Title"
CONTENT="Oracle PL/SQL Programming Guide to Oracle 8i Features"><META
NAME="DC.Type"
CONTENT="Text.Monograph"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REL="stylesheet"
TYPE="text/css"
HREF="../style/style1.css"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_01.htm"
TITLE="3. Invoker Rights: Your Schema or Mine? "><LINK
REL="prev"
HREF="ch03_02.htm#ch03-SECT-2.2"
TITLE="3.2 The Invoker Rights Model"><LINK
REL="next"
HREF="ch03_04.htm"
TITLE="3.4 Combining the Definer and Invoker Rights Models"></HEAD
><BODY
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Oracle PL/SQL Programming Guide to Oracle 8i Features"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Oracle PL/SQL Programming Guide to Oracle 8i Features"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_02.htm#ch03-SECT-2.2"
TITLE="3.2 The Invoker Rights Model"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2 The Invoker Rights Model"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><SPAN
CLASS="NAVTITLE"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Invoker Rights: Your Schema or Mine? "
>Chapter 3<BR>Invoker Rights: Your Schema or Mine? </A
></SPAN
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_04.htm"
TITLE="3.4 Combining the Definer and Invoker Rights Models"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.4 Combining the Definer and Invoker Rights Models"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch03-88709"
>3.3 One Program, Multiple Schemas</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch-03-sch"
></A
>You have the syntax down and we've covered some rules. Let's try out the new AUTHID clause in a more elaborate example.</P
><P
CLASS="para"
>A couple of years ago, a group of people started the Stolen Lives Project. The objective of this project is to document the lives "stolen" from families and communities when people are killed by law enforcement officers. I will use this project as the basis for my example in this section.</P
><BLOCKQUOTE
CLASS="tip"
><P
CLASS="para"
><STRONG
>TIP:</STRONG
> Neither the Stolen Lives Project nor I believe that all law enforcement officers commit acts of brutality. I also recognize that some killings by officers are justifiable, and that many, if not the vast majority of, officers are committed to improving the lives and guaranteeing the safety of <EM
CLASS="emphasis"
>all</EM
> the citizens in their jurisdiction.</P
><P
CLASS="para"
>You can get lots more information about the Stolen Lives Project (hereafter referred to as SLP) at the following URL:</P
><P
CLASS="para"
><A
CLASS="systemitem.url"
HREF="../../../../../../../www.unstoppable.com/22/english/stolenlivesPROJECT"
>http://www.unstoppable.com/22/english/stolenlivesPROJECT</A
></P
></BLOCKQUOTE
><P
CLASS="para"
>Suppose then that there is a national headquarters for the SLP, and that Headquarters maintains an Oracle database with a separate schema for each city and town in which information is being collected by local law enforcement brutality activists. Each schema has its own stolen_life table, but all schemas perform the same analyses on this information. </P
><P
CLASS="para"
>The DBA/developer for SLP, Salinda, has upgraded recently to 8.1 and sees an immediate opportunity for the AUTHID feature. She would like to maintain all the code in one place, but when activists in a given city run that code for their locale, they see their data and analyses. <A
CLASS="xref"
HREF="ch03_03.htm"
>Figure 3.4</A
> shows the architecture Salinda wants to implement.</P
><H4
CLASS="figure"
><A
CLASS="title"
NAME="ch03-95466"
>Figure 3.4: One program analyzes data in different tables</A
></H4
><IMG
CLASS="graphic"
SRC="figs/o8if.0304.gif"
ALT="Figure 3.4"><BLOCKQUOTE
CLASS="tip"
><P
CLASS="para"
><STRONG
>TIP:</STRONG
> I do not show all the statements needed to set up the various schemas in Oracle; you will find them, however, in the <I
CLASS="filename"
>authid.ins</I
> file on the companion disk.</P
></BLOCKQUOTE
><P
CLASS="para"
>Salinda connects to the HQ schema and creates the following objects. First, a stolen_life table that contains just one row, indicating that you shouldn't look here for data:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>/* Filename on companion disk: authid.hql */
CREATE TABLE stolen_life (
   dod DATE,
   ethnicity VARCHAR2(100),
   victim VARCHAR2(100),
   age NUMBER,
   description VARCHAR2(2000)
   );

INSERT INTO stolen_life (dod, ethnicity, victim, age, description) VALUES (
   SYSDATE, 'N/A', 'HQ Table', 0,
   'All information is stored in city tables.');</PRE
></BLOCKQUOTE
><P
CLASS="para"
>As you will see, Salinda needs to have this table in the schema so that she can compile the stored program units that will be shared throughout all the local schemas. </P
><P
CLASS="para"
>Next, she creates two programs, only the second of which specifies invoker rights. First, a program to display information about a life stolen:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>/* Create a display program, run as DEFINER. */
CREATE OR REPLACE PROCEDURE show_victim (
   stolen_life IN stolen_life%ROWTYPE
   )
AS
BEGIN
   DBMS_OUTPUT.PUT_LINE (stolen_life.victim);
   DBMS_OUTPUT.PUT_LINE ('');
   DBMS_OUTPUT.PUT_LINE (stolen_life.description);
   DBMS_OUTPUT.PUT_LINE ('');
END;
/</PRE
></BLOCKQUOTE
><P
CLASS="para"
>And then the analysis program (which, in this case, simply displays the victims for a location):</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>CREATE OR REPLACE PROCEDURE show_descriptions
  AUTHID CURRENT_USER
AS
BEGIN
  FOR lifestolen IN (SELECT * FROM stolen_life)
  LOOP
     show_victim (lifestolen);
  END LOOP;
END;
/</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Both of these programs compile by resolving the reference to stolen_life against the all-but-empty HQ table. Since these programs are to be used by all, Salinda then performs the necessary grants:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>GRANT EXECUTE ON show_descriptions TO PUBLIC;
DROP PUBLIC SYNONYM show_descriptions;
CREATE PUBLIC SYNONYM show_descriptions FOR show_descriptions;</PRE
></BLOCKQUOTE
><P
CLASS="para"
>All of the above statements can be found, by the way, in the <EM
CLASS="emphasis"
>authid.hq1</EM
> file.</P
><P
CLASS="para"
>Once the centralized objects are in place, Salinda can now get everything defined in the local (city/town) schemas. Remember that the objective in this architecture is to store all of the code in one schema; the only step Salinda should have to take in her local schemas, therefore, is to create the stolen_life table specific to that locale. Here are the steps for Chicago. For these steps see <I
CLASS="filename"
>authid.chi&nbsp;-- </I
>and note that all data shown is taken from the web site and reflects real-world tragedy:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>/* Filename on companion disk: authid.chi */</PRE
></BLOCKQUOTE
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>DROP TABLE stolen_life;

CREATE TABLE stolen_life (
   dod DATE,
   ethnicity VARCHAR2(100),
   victim VARCHAR2(100),
   age NUMBER,
   description VARCHAR2(2000),
   moreinfoat VARCHAR(200) DEFAULT
      'http://www.unstoppable.com/22/english/stolenlivesPROJECT'
   );</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Now that the table is created, Salinda populates it with just a tiny fragment of all the broken lives you will find on the web site. I will show just a single entry in the text:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>INSERT INTO stolen_life (dod, ethnicity, victim, age, description) VALUES (
   '23-OCT-96', 'Puerto Rican', 'Angel Castro, Jr.', 15,
   'After being beaten, abused with racial epithets and told by police 
that he would be killed if he did not move, Angel Castro's family moved. 
Angel returned to the neighborhood for a friend's birthday party. After 
leaving the party, a police car rammed him as he rode his bike. As Angel 
tried to get on his knees, the police shot and killed him');</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Salinda also performs the same steps for New York City; see the <I
CLASS="filename"
>authid.ny</I
> file for all the details. Now let's see how well it all works.</P
><P
CLASS="para"
>I connect to the NY schema and show the stolen lives:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; CONNECT newyork/newyork
SQL&gt; set serveroutput on size 1000000 format wrapped
SQL&gt; exec show_descriptions
Amadou Diallo

Shot 19 times by four police officers outside his Bronx apartment. Diallo 
was a devout Muslim working 12 hour days selling CDs and tapes to earn 
money to finish his bachelor's degree. He was unarmed.
...</PRE
></BLOCKQUOTE
><P
CLASS="para"
>And when I connect to CHICAGO, I see different information:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; CONNECT chicago/chicago
SQL&gt; set serveroutput on size 1000000 format wrapped
SQL&gt; exec show_descriptions
Angel Castro, Jr.

After being beaten, abused with racial epithets and told by police that he
would be killed if he did not move, Angel Castro's family moved. Angel
returned to the neighborhood for a friend's birthday party. After leaving the
party, a police car rammed him as he rode his bike. As Angel tried to get on
his knees, the police shot and killed him.
...</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Perfectly abominable behavior, but perfect implementation of shared code and nonshared data!</P
><P
CLASS="para"
>Let's just verify that Salinda did need the AUTHID clause to get things to work right. Suppose she goes back to the HQ account and recompiles the show_descriptions procedure, this time with the default rights model:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>CREATE OR REPLACE PROCEDURE show_descriptions
  AUTHID DEFINER -- The default
AS
BEGIN
  FOR lifestolen IN (SELECT * FROM stolen_life)
  LOOP
     show_victim (lifestolen);
  END LOOP;
END;
/</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Then when activists connect to the CHICAGO and NY schemas to see their data, this is all they see:</P
><BLOCKQUOTE
><PRE
CLASS="programlisting"
>SQL&gt; exec show_descriptions
HQ Table

All information is stored in city tables.</PRE
></BLOCKQUOTE
><P
CLASS="para"
>Clearly, without the help of the invoker rights model, Salinda could not achieve her design objectives. With AUTHID CURRENT_USER, though, it will be easier for the Stolen Lives Project to inform the American public about this issue.</P
><DIV
CLASS="sidebar"
><H4
CLASS="sidebar"
><A
CLASS="title"
NAME="ch03-71568"
>Invoker Rights for Dynamic SQL</A
></H4
><P
CLASS="para"
>I have written hundreds of programs using dynamic SQL, and prior to Oracle 8.1, I always had to worry about schema issues: where is the program running? Who is running the program? What will happen when someone runs the program? These are scary questions to ask about your own code!</P
><P
CLASS="para"
>Now with the invoker rights model, those issues fall away. You should as a rule always include the AUTHID CURRENT_USER clause for any stored program unit that uses either the built-in package DBMS_SQL for dynamic SQL or the new 8.1 native dynamic SQL implementation (described in <A
CLASS="xref"
HREF="ch04_01.htm"
>Chapter 4</A
>).</P
><P
CLASS="para"
>Once you take this step, you can rest assured that no matter where the program is compiled and no matter which schema runs the program, it will always act on the currently connected schema.<A
CLASS="indexterm"
NAME="AUTOID-1397"
></A
><A
CLASS="indexterm"
NAME="AUTOID-1398"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_02.htm#ch03-SECT-2.2"
TITLE="3.2 The Invoker Rights Model"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2 The Invoker Rights Model"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Oracle PL/SQL Programming Guide to Oracle 8i Features"
><IMG
SRC="../gifs/txthome.gif"
ALT="Oracle PL/SQL Programming Guide to Oracle 8i Features"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_04.htm"
TITLE="3.4 Combining the Definer and Invoker Rights Models"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.4 Combining the Definer and Invoker Rights Models"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2 The Invoker Rights Model</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.4 Combining the Definer and Invoker Rights Models</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><IMG SRC="../gifs/smnavbar.gif"
USEMAP="#map"
BORDER="0"
ALT="The Oracle Library Navigation">

<P><font size="-1">
<a href="../copyrght.htm#copy">Copyright (c) 2000</a> O'Reilly &amp; Associates. All rights reserved.
</font></P>

<MAP NAME="map">

<AREA SHAPE="RECT"
COORDS="0,0,35,30"
HREF="../index.htm"
ALT="Library Home">

<AREA SHAPE="RECT"
COORDS="40,0,95,30"
HREF="../prog2/index.htm"
ALT="Oracle PL/SQL Programming, 2nd. Ed.">

<AREA SHAPE="RECT"
COORDS="100,0,200,30"
HREF="index.htm"
ALT="Guide to Oracle 8i Features">

<AREA SHAPE="RECT"
COORDS="205,0,245,30"
HREF="../bipack/index.htm"
ALT="Oracle Built-in Packages">

<AREA SHAPE="RECT"
COORDS="250,0,320,30"
HREF="../advprog/index.htm"
ALT="Advanced PL/SQL Programming with Packages">

<AREA SHAPE="RECT"
COORDS="325,0,420,30"
HREF="../webapp/index.htm"
ALT="Oracle Web Applications">

<AREA SHAPE="RECT"
COORDS="425,0,490,30"
HREF="../langpkt/index.htm"
ALT="Oracle PL/SQL Language Pocket Reference">

<AREA SHAPE="RECT"
COORDS="495,0,570,30"
HREF="../bipkt/index.htm"
ALT="Oracle PL/SQL Built-ins Pocket Reference">
</MAP>

</BODY
>
<!-- Mirrored from liso.cs.pusan.ac.kr by HTTrack Website Copier/3.x [XR&CO'2001] -->
</HTML
>
