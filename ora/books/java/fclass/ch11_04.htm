<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 11] BufferedWriter</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 16:33:44 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 11<br>The java.io Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch11_05.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=refnamediv>
<h1>BufferedWriter</H1>

<h2>Name</H2>

BufferedWriter

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.24">Synopsis</A></h2>

<dl class=variablelist>
<dt class=varlistentry>Class Name:<br>
<dd>

<p class=para>
<tt class=literal>java.io.BufferedWriter</tt>

<p>
<dt class=varlistentry>Superclass:<br>
<dd>

<p class=para>
<tt class=literal>java.io.Writer</tt>

<p>
<dt class=varlistentry>Immediate Subclasses:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Interfaces Implemented:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Availability:<br>
<dd>

<p class=para>
New as of JDK 1.1</DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.25">Description</A></h2>

<p class=para>
A <tt class=literal>BufferedWriter</tt> object provides a more
efficient way to write just a few characters at a time to a
<tt class=literal>Writer</tt>.
<tt class=literal>BufferedWriter</tt> objects
use a buffer to store output for an associated <tt class=literal>Writer</tt>. 
In other words, a large number of characters are stored in an internal 
buffer and only written when the buffer fills up or is explicitly flushed. 
A <tt class=literal>BufferedWriter</tt> is more efficient 
than a regular <tt class=literal>Writer</tt> because 
the data is written to memory, rather than a disk or a network. 
Minimizing the number of write operations to a disk or the network 
minimizes the cumulative overhead for these operations.

<p class=para>
You should wrap a <tt class=literal>BufferedWriter</tt> 
around any <tt class=literal>Writer</tt> whose <tt class=literal>write()</tt> 
operations may be time consuming or costly, such as a <tt class=literal>FileWriter</tt> 
or a <tt class=literal>OutputStreamWriter</tt>. 

<p class=para>
This class is very similar to <tt class=literal>BufferedOutputStream</tt>, 
but it operates on a stream of Java characters instead of a byte stream; 
this makes it easier to support internationalization. 

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.26">Class Summary</A></h2>

<div class=screen>
<p>
<pre>
public class java.io.BufferedWriter extends java.io.Writer {
  // Constructors
  public BufferedWriter(Writer out);
  public BufferedWriter(Writer out, int size);
  // Instance Methods
  public void close();
  public void flush();
  public void newLine();
  public void write(int c);
  public void write(char[] cbuf, int off, int len);
  public void write(String s, int off, int len);
}
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.27">Constructors</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.27">BufferedWriter</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.33">public BufferedWriter (Writer out)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>out</tt><br>
<dd>

<p class=para>
The output stream to 
buffer. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>BufferedWriter</tt> 
that acts on the specified <tt class=literal>Writer</tt>, 
using a buffer with the default size of 8192 characters. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.34">public BufferedWriter (Writer out, int size)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>out</tt><br>
<dd>

<p class=para>
The output stream to buffer.

<p>
<dt class=varlistentry><tt class=literal>size</tt><br>
<dd>

<p class=para>
The size of buffer 
to use. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IllegalArgumentException</tt><br>
<dd>

<p class=para>
If the specified size is less than 0. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>BufferedWriter</tt> 
that acts on the specified <tt class=literal>Writer</tt>, 
using a buffer that is <tt class=literal>size</tt> 
bytes long. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.28">Instance Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.28">close</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.35">public void close() throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt> <br>
<dd>

<p class=para>
If any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>Writer.close()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method closes this <tt class=literal>BufferedWriter</tt> and its
underlying <tt class=literal>Writer</tt>.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.29">flush</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.36">public void flush() throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>Writer.flush()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes the contents of the buffer to the underlying <tt class=literal>Writer</tt> 
and calls <tt class=literal>flush()</tt> on the underlying <tt class=literal>Writer</tt>. 
It is called automatically when the buffer fills up. You can also call 
it before the buffer is full. This is known as "flushing" the 
buffer. This method blocks until the underlying <tt class=literal>write()</tt> 
is complete. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.30">newLine</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.37">public void newLine() throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes the newline character or characters to the stream. It 
uses <tt class=literal>System.getProperty('line.separator')</tt> 
to choose the newline appropriate for the run-time system. Calling this
method is preferable to explicitly writing a newline character.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.31">write</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.38">public void write(int c) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>c</tt><br>
<dd>

<p class=para>
The value to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>Writer.write(int)</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method places the low-order 16 bits of the 
specified value into the buffer. If the buffer is 
full, it is flushed, and the value <tt class=literal>c</tt> 
is placed in the newly empty buffer. If the buffer is flushed, this method 
blocks while the data is written; otherwise this method returns immediately. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.39"><div class=screen> <p> <pre> public void write(char[] cbuf, int off, int len) throws IOException </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>cbuf</tt><br>
<dd>

<p class=para>
An array of characters to write.

<p>
<dt class=varlistentry><tt class=literal>off</tt><br>
<dd>

<p class=para>
An offset into the character array.

<p>
<dt class=varlistentry><tt class=literal>len</tt><br>
<dd>

<p class=para>
The number of characters to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>Writer.write(char[], int, int)</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method copies <tt class=literal>len</tt> characters
from <tt class=literal>cbuf</tt>, starting at <tt class=literal>off</tt>, 
into the buffer. If there is enough space left in the buffer for the new 
data, it is copied into the buffer, and the method returns immediately. 
Otherwise, the buffer is filled and flushed repeatedly until all the new 
data has been copied into the buffer. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.40">public void write(String s, int off, int len) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>s</tt><br>
<dd>

<p class=para>
The string to be written.

<p>
<dt class=varlistentry><tt class=literal>off</tt><br>
<dd>

<p class=para>
An offset into the 
string.

<p>
<dt class=varlistentry><tt class=literal>len</tt><br>
<dd>

<p class=para>
The number of characters 
to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
an I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>Writer.write(String, int, int)</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method copies <tt class=literal>len</tt> characters
from <tt class=literal>s</tt>, starting at <tt class=literal>off</tt>, 
into the buffer. If there is enough space left in the buffer for the new 
data, it is copied into the buffer and the method returns immediately. 
Otherwise, the buffer is filled and flushed repeatedly until all the new 
data has been copied into the buffer. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.29">Inherited Methods</A></h2>

<div class=informaltable>
<p>
<table class=INFORMALTABLE>
<tr class=row>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>clone()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>equals(Object)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>finalize()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>getClass()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>hashCode()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>notify()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>notifyAll()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>toString()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>wait()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long, int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>write(char[])</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Writer</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>write(String)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Writer</tt></TD>
<td align="LEFT">&nbsp;</TD>
<td align="LEFT">&nbsp;</TD>
</TR>
</TABLE>
<p>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.30">See Also</A></h2>

<p class=para>
<tt class=literal>IllegalArgumentException</tt>, 
<tt class=literal>IOException</tt>, 
<tt class=literal>String</tt>, 
<tt class=literal>Writer</tt> 
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch11_05.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>BufferedReader</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>ByteArrayInputStream</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
