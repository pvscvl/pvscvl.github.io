<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 10] 10.2 System Properties</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 16:19:24 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch10_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 10<br>Accessing the Environment</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch10_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JFC-CH-10-SECT-2">10.2 System Properties</A></h2>

<p class=para>
<a name="CH10.SYS"></A><a name="CH10.SYS2"></A>
System properties provide a mechanism for getting information
about the environment. You can get the value of a system property by
passing its name to the <tt class=literal>System.getProperty(String)</tt>
method. This method returns the value of the named property as a
<tt class=literal>String</tt>, or it returns <tt class=literal>null</tt> if
the property is not defined. Since it is common to assume a default
value if a property is not specified, there is also a
<tt class=literal>System.getProperty(String,</tt>
<tt class=literal>String)</tt> method that takes the name of a property
and a default <tt class=literal>String</tt> value to return if the
property is not defined.

<p class=para>
<a href="#JFC-CH-10-TAB-1">Table 10.1</A> lists the standard system properties for 
a Java environment. Many of these properties are guaranteed to be defined 
in any Java environment. Note, however, that untrusted applets aren't 
allowed to access many of these properties. 

<p>
<div class=table>
<table border>
<caption><a class="TITLE" name="JFC-CH-10-TAB-1">Table 10.1: Standard System Properties</A></CAPTION>
<tr class=row>
<th align="LEFT">

<p class=para>
Property Name</TH>
<th align="LEFT">

<p class=para>
Description</TH>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>file.encoding</tt></TD>
<td align="LEFT">

<p class=para>
The character encoding for the default locale ( Java 1.1 only)</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>file.encoding.pkg</tt></TD>
<td align="LEFT">

<p class=para>
The package that contains the converters that handle converting between 
local encodings and Unicode ( Java 1.1 only)</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>file.separator</tt></TD>
<td align="LEFT">

<p class=para>
The platform-dependent file separator 
(e.g., "<tt class=literal>/</tt>" on UNIX, "<tt class=literal>\</tt>" 
for Windows)</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>java.class.path</tt></TD>
<td align="LEFT">

<p class=para>
The value of the <tt class=literal>CLASSPATH</tt> 
environment variable</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>java.class.version</tt></TD>
<td align="LEFT">

<p class=para>
The version of the Java API</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>java.compiler</tt></TD>
<td align="LEFT">

<p class=para>
The just-in-time compiler to use, if any. The <i class=emphasis>java</I> 
interpreter provided with the JDK initializes this property from the environment 
variable <tt class=literal>JAVA_COMPILER</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>java.home</tt></TD>
<td align="LEFT">

<p class=para>
The directory in which Java is installed</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>java.version</tt></TD>
<td align="LEFT">

<p class=para>
The version of the Java interpreter</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>java.vendor</tt></TD>
<td align="LEFT">

<p class=para>
A vendor-specific string</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>java.vendor.url</tt></TD>
<td align="LEFT">

<p class=para>
A vendor URL</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>line.separator</tt></TD>
<td align="LEFT">

<p class=para>
The platform-dependent line separator (e.g.,
"<tt class=literal>\n</tt>" on UNIX,
"<tt class=literal>\r\n</tt>" for Windows)</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>os.name</tt></TD>
<td align="LEFT">

<p class=para>
The name of the operating system</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>os.arch</tt></TD>
<td align="LEFT">

<p class=para>
The system architecture</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>os.version</tt></TD>
<td align="LEFT">

<p class=para>
The operating system version</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>path.separator</tt></TD>
<td align="LEFT">

<p class=para>
The platform-dependent path separator 
(e.g., "<tt class=literal>:</tt>" on UNIX, "<tt class=literal>,</tt>" 
for Windows)</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>user.dir</tt></TD>
<td align="LEFT">

<p class=para>
The current working directory 
when the properties were initialized</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>user.home</tt></TD>
<td align="LEFT">

<p class=para>
The home directory of the current user</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>user.language</tt></TD>
<td align="LEFT">

<p class=para>
The two-letter language code of the default locale ( Java 1.1 only)</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>user.name</tt></TD>
<td align="LEFT">

<p class=para>
The username of the current user</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>user.region</tt></TD>
<td align="LEFT">

<p class=para>
The two-letter country code of the default locale ( Java 1.1 only)</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>user.timezone</tt></TD>
<td align="LEFT">

<p class=para>
The default time zone ( Java 1.1 only)</TD>
</TR>
</TABLE>
<p>
</DIV>
<p class=para>
The Java API also provides some convenience methods for getting the value 
of a system property that should be interpreted as a data type other than 
<tt class=literal>String</tt>: 

<p>
<ul class=itemizedlist>
<li class=listitem><tt class=literal></tt><tt class=literal>Boolean.getBoolean()</tt> 
returns the value of a named system property as a <tt class=literal>boolean</tt>. 

<p>
<li class=listitem><tt class=literal>Color.getColor()</tt> returns 
a <tt class=literal>Color</tt> object that represents 
the color specified by the value of a named system property interpreted 
as an RGB value. For example, the value <tt class=literal>0xFFFFFF</tt> 
is white, <tt class=literal>0xFF000</tt> is red, <tt class=literal>0x00FF00</tt> 
is green, and <tt class=literal>0x0000FF</tt> is blue. 

<p>
<li class=listitem>
<tt class=literal>Font.getFont()</tt> returns a <tt class=literal>Font</tt>
object that is mapped to a font in the native windowing system. If the
string passed to <tt class=literal>getFont()</tt> is
<tt class=literal>"poster"</tt>, the method uses the value of the system
property <tt class=literal>awt.font.poster</tt> as the name of the native
font.

<p class=para>
By default, the font style is plain and the font size is 12 points. If
the font name is prefixed with <tt class=literal>bold-</tt>,
<tt class=literal>italic-</tt> or <tt class=literal>bolditalic-</tt>, that
style is used instead. If the font name is prefixed with a size and a
<tt class=literal>-</tt>, that size is used instead. If both style and
size are specified, style must come first. For example, passing
<tt class=literal>"italic-14-timesRoman"</tt> to
<tt class=literal>getFont()</tt> causes it to return a
<tt class=literal>Font</tt> object that uses the native font identified by
the system property <tt class=literal>awt.font.timesRoman</tt>. That font
should be an italic, 14-point, TimesRoman font.
<p>
<li class=listitem><tt class=literal>Integer.getInteger()</tt> returns 
the value of a named system property as an <tt class=literal>int</tt>. 

<p>
<li class=listitem><tt class=literal>Long.getLong()</tt> returns 
the value of a named system property as a <tt class=literal>long</tt>. 

<p class=para>
There are two built-in mechanisms for setting system properties. Note that 
you can use these mechanisms to set the standard system properties or to 
define specific system properties for your own application. 

<p>
<li class=listitem>You can define properties from the command line of the Java virtual 
machine using the <tt class=literal>-D</tt> command 
line option. For example, to define a property named <tt class=literal>time.server</tt> 
with the value <tt class=literal>tm02</tt>, you can 
invoke the interpreter like this: 

<div class=screen>
<p>
<pre>
C:\&gt; java -Dtime.server=tm02
</PRE>
</DIV>

<p>
<li class=listitem>You can define any number of system properties using <tt class=literal>-D</tt>, 
as long as each property is specified with its own <tt class=literal>-D</tt> 
option. 

<p>
</UL>
<p class=para>
You can programmatically define properties by calling the
<tt class=literal>System.setProperties()</tt> method. The
<tt class=literal>Properties</tt> object that you pass to
<tt class=literal>System.setProperties()</tt> becomes the new source for
all system property values.

<p class=para>
If a program is running in a browser or other environment that has a
<tt class=literal>SecurityManager</tt> installed, it may be denied any
access to system properties.

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch10_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch10_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>I/O</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Environment Variables</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
