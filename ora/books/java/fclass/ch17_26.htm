<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 17] Vector</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 17:44:42 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch17_25.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 17<br>The java.util Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch18_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=refnamediv>
<h1>Vector</H1>

<h2>Name</H2>

Vector

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch17-REFSECT1-AUTOID.182">Synopsis</A></h2>

<dl class=variablelist>
<dt class=varlistentry>Class Name:<br>
<dd>

<p class=para>
<tt class=literal>java.util.Vector</tt>

<p>
<dt class=varlistentry>Superclass:<br>
<dd>

<p class=para>
<tt class=literal>java.lang.Object</tt>

<p>
<dt class=varlistentry>Immediate Subclasses:<br>
<dd>

<p class=para>
<tt class=literal>java.util.Stack</tt>

<p>
<dt class=varlistentry>Interfaces Implemented:<br>
<dd>

<p class=para>
<tt class=literal>java.io.Serializable</tt>, 
<tt class=literal>java.lang.Cloneable</tt>

<p>
<dt class=varlistentry>Availability:<br>
<dd>

<p class=para>
JDK 1.0 or later </DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch17-REFSECT1-AUTOID.183">Description</A></h2>

<p class=para>
The <tt class=literal>Vector</tt> class implements 
a variable-length array that can hold any kind of object. Like an array, 
the elements in a <tt class=literal>Vector</tt> are accessed with an integer index. However, unlike 
an array, the size of a <tt class=literal>Vector</tt> 
can grow and shrink as needed to accommodate a changing number of objects. 
<tt class=literal>Vector</tt> provides methods to 
add and remove elements, as well as ways to search for objects in a <tt class=literal>Vector</tt> 
and iterate through all of the objects. 

<p class=para>
The initial capacity of a <tt class=literal>Vector</tt> 
specifies how many objects it can contain before more space must be allocated. 
The capacity increment specifies how much more space is allocated each 
time the <tt class=literal>Vector</tt> needs to increase 
its capacity. You can fine-tune the performance of a <tt class=literal>Vector</tt> 
by adjusting the initial capacity and capacity increment. 

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch17-REFSECT1-AUTOID.184">Class Summary</A></h2>

<div class=screen>
<p>
<pre>
public class java.util.Vector extends java.lang.Object
             implements java.io.Serializable, java.lang.Cloneable {
  // Variables
  protected int capacityIncrement;
  protected int elementCount;
  protected Object[] elementData;
  // Constructors
  public Vector();
  public Vector(int initialCapacity);
  public Vector(int initialCapacity, int capacityIncrement);
  // Instance Methods
  public final synchronized void addElement(Object obj);
  public final int capacity();
  public synchronized Object clone();
  public final boolean contains(Object elem);
  public final synchronized void copyInto(Object[] anArray);
  public final synchronized Object elementAt(int index);
  public final synchronized Enumeration elements();
  public final synchronized void ensureCapacity(int minCapacity);
  public final synchronized Object firstElement();
  public final int indexOf(Object elem);
  public final synchronized int indexOf(Object elem, int index);
  public final synchronized void insertElementAt(Object obj, int index);
  public final boolean isEmpty();
  public final synchronized Object lastElement();
  public final int lastIndexOf(Object elem);
  public final synchronized int lastIndexOf(Object elem, int index);
  public final synchronized void removeAllElements();
  public final synchronized boolean removeElement(Object obj);
  public final synchronized void removeElementAt(int index);
  public final synchronized void setElementAt(Object obj, int index);
  public final synchronized void setSize(int newSize);
  public final int size();
  public final synchronized String toString();
  public final synchronized void trimToSize();
}
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch17-REFSECT1-AUTOID.185">Variables</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.282">capacityIncrement</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.322">protected int capacityIncrement</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
The amount by which the internal array grows when more space is 
needed. If the value is 0, the internal array doubles 
in size when more space is needed. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.283">elementCount</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.323">protected int elementCount</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
The count of how many objects are contained in 
this <tt class=literal>Vector</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.284">elementData</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.324">protected Object[] elementData</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
The array that holds the contents of this <tt class=literal>Vector</tt>. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch17-REFSECT1-AUTOID.186">Constructors</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.285">Vector</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.325">public Vector()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates an empty <tt class=literal>Vector</tt> 
with the default capacity of 10 and the default capacity increment of 0. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.326">public Vector(int initialCapacity)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>initialCapacity</tt><br>
<dd>

<p class=para>
The initial capacity of the <tt class=literal>Vector</tt>. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates an empty <tt class=literal>Vector</tt> 
with the given capacity and the default capacity increment of 0. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.327">public Vector(int initialCapacity, int capacityIncrement)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>initialCapacity</tt><br>
<dd>

<p class=para>
The initial capacity of the <tt class=literal>Vector</tt>.

<p>
<dt class=varlistentry><tt class=literal>CapacityIncrement</tt><br>
<dd>

<p class=para>
The amount to increase the capacity when more space is needed. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates an empty <tt class=literal>Vector</tt> 
with the given capacity and capacity increment. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch17-REFSECT1-AUTOID.187">Instance Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.286">addElement</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.328">public final synchronized void addElement(Object obj)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>obj</tt><br>
<dd>

<p class=para>
The object to be added. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method adds the given object to this <tt class=literal>Vector</tt> 
as its last element
and increases its size by 1. The capacity of the <tt class=literal>Vector</tt> 
is increased if its size becomes greater than its capacity. Any kind of 
object can be added to a <tt class=literal>Vector</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.287">capacity</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.329">public final int capacity()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>The capacity of this Vector</tt>. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the size of the internal array of this <tt class=literal>Vector</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.288">clone</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.330">public synchronized Object clone()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
A copy of this <tt class=literal>Vector</tt>. 

<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>Object.clone()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method creates a copy of this <tt class=literal>Vector</tt> 
and returns it. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.289">contains</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.331">public final boolean contains(Object elem)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>elem</tt><br>
<dd>

<p class=para>
The object to be found. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if the given object is 
contained in this <tt class=literal>Vector</tt>; <tt class=literal>false</tt> 
otherwise. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method determines whether or not the given object is contained in 
this <tt class=literal>Vector</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.290">copyInto</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.332">public final synchronized void copyInto(Object[] anArray)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>anArray</tt><br>
<dd>

<p class=para>
The array to be 
filled. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>ArrayIndexOutOfBoundsException</tt><br>
<dd>

<p class=para>
If the given array is too small to hold all of the objects in this <tt class=literal>Vector</tt>. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method copies the object references in this <tt class=literal>Vector</tt> 
to the given array. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.291">elementAt</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.333">public final synchronized Object elementAt(int index)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>index</tt><br>
<dd>

<p class=para>
The index of the 
object to be returned. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The object at the position given by <tt class=literal>index</tt>. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>ArrayIndexOutOfBoundsException</tt><br>
<dd>

<p class=para>
If <tt class=literal>index</tt> is less than zero 
or greater than the size of this <tt class=literal>Vector</tt>. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the object at the given index in this <tt class=literal>Vector</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.292">elements</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.334">public final synchronized Enumeration elements()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The objects in this <tt class=literal>Vector</tt> 
as an <tt class=literal>Enumeration</tt>. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns an <tt class=literal>Enumeration</tt> 
that iterates through the objects in this <tt class=literal>Vector</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.293">ensureCapacity</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.335">public final synchronized void ensureCapacity(int minCapacity)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>minCapacity</tt><br>
<dd>

<p class=para>
The minimum 
new capacity. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method expands the internal array, if necessary, to make the capacity 
of the <tt class=literal>Vector</tt> at least <tt class=literal>minCapacity</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.294">firstElement</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.336">public final synchronized Object firstElement()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The first object in this Vector. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>NoSuchElementException</tt><br>
<dd>

<p class=para>
If the <tt class=literal>Vector</tt> is empty. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the object at index 0 in this <tt class=literal>Vector</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.295">indexOf</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.337">public final int indexOf(Object elem)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>elem</tt><br>
<dd>

<p class=para>
The object to be found. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The index of the given object or <tt class=literal>-1</tt> if it cannot be found. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the index of the first occurrence of the given object 
in this <tt class=literal>Vector</tt>. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.338">public final int indexOf(Object elem, int index)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>elem</tt><br>
<dd>

<p class=para>
The object to be found.

<p>
<dt class=varlistentry><tt class=literal>index</tt><br>
<dd>

<p class=para>
The starting index. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The index of the next occurrence of the given object after the specified 
index or <tt class=literal>-1</tt> if it cannot be found. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the index of the next occurrence of the given object 
in this <tt class=literal>Vector</tt> after the given 
index. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.296">insertElementAt</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.339">public final synchronized void insertElementAt(Object obj, int index)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>obj</tt><br>
<dd>

<p class=para>
The object to be inserted.

<p>
<dt class=varlistentry><tt class=literal>index</tt><br>
<dd>

<p class=para>
The index at which 
to insert the object. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>ArrayIndexOutOfBoundsException</tt><br>
<dd>

<p class=para>
If <tt class=literal>index</tt> is less than zero 
or greater than the size of this <tt class=literal>Vector</tt>. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method inserts the given object at the given index in this <tt class=literal>Vector</tt>. 
Each object in the <tt class=literal>Vector</tt> with 
an index greater than or equal to <tt class=literal>index</tt> 
is shifted upward in the <tt class=literal>Vector</tt>, 
so that it has an index of one greater than it did previously. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.297">isEmpty</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.340">public final boolean isEmpty()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if there are no objects 
in the <tt class=literal>Vector</tt>; <tt class=literal>false</tt> 
otherwise. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns a <tt class=literal>boolean</tt> 
value that indicates whether or not the <tt class=literal>Vector</tt> 
is empty. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.298">lastElement</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.341">public final synchronized Object lastElement()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The last object in this <tt class=literal>Vector</tt>. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>NoSuchElementException</tt><br>
<dd>

<p class=para>
If the <tt class=literal>Vector</tt> is empty. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the last object in this <tt class=literal>Vector</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.299">lastIndexOf</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.342">public final int lastIndexOf(Object elem)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>elem</tt><br>
<dd>

<p class=para>
The object to be found. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The index of the given object or <tt class=literal>-1</tt> if it cannot be found. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the index of the last occurrence of the given object 
in this <tt class=literal>Vector</tt>. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.343">public final synchronized int lastIndexOf(Object elem, int index)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>elem</tt><br>
<dd>

<p class=para>
The object to be found.

<p>
<dt class=varlistentry><tt class=literal>index</tt><br>
<dd>

<p class=para>
The starting index. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The index of the last occurrence of the given object before the specified 
index or <tt class=literal>-1</tt> if it cannot be found. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the index of the last occurrence of the given object 
in this <tt class=literal>Vector</tt> before the given 
index. In other words, the method searches backwards from <tt class=literal>index</tt> 
for the next occurrence. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.300">removeAllElements</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.344">public final synchronized void removeAllElements()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method removes all of the objects from this <tt class=literal>Vector</tt>, 
but does not change its capacity or capacity increment. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.301">removeElement</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.345">public final synchronized boolean removeElement(Object obj)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>obj</tt><br>
<dd>

<p class=para>
The object to be removed. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if the given object is 
found and removed; <tt class=literal>false</tt> otherwise. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method searches for the first occurrence of the given object in this 
<tt class=literal>Vector</tt> and removes it. If the 
object is found, each object in the <tt class=literal>Vector</tt> 
with an index greater than or equal to the index of the removed object 
is shifted downward in the <tt class=literal>Vector</tt>, 
so that it has an index of one less than it did previously. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.302">removeElementAt</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.346">public final synchronized void removeElementAt(int index)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>index</tt><br>
<dd>

<p class=para>
The index of the 
object to be removed. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>ArrayIndexOutOfBoundsException</tt><br>
<dd>

<p class=para>
If <tt class=literal>index</tt> is less than zero 
or greater than the size of this <tt class=literal>Vector</tt>. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method removes the object at the given index from this <tt class=literal>Vector</tt>. 
Each object in the <tt class=literal>Vector</tt> with 
an index greater than or equal to <tt class=literal>index</tt> 
is shifted downward in the <tt class=literal>Vector</tt>, 
so that it has an index of one less than it did previously. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.303">setElementAt</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.347">public final synchronized void setElementAt(Object obj, int index)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>obj</tt><br>
<dd>

<p class=para>
The object to be put 
in the <tt class=literal>Vector</tt>.

<p>
<dt class=varlistentry><tt class=literal>index</tt><br>
<dd>

<p class=para>
The index at which 
to put the object. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>ArrayIndexOutOfBoundsException</tt><br>
<dd>

<p class=para>
If <tt class=literal>index</tt> is less than zero 
or greater than the size of this <tt class=literal>Vector</tt>. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method puts the given object at the given index in this <tt class=literal>Vector</tt>, 
replacing the object that was previously there. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.304">setSize</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.348">public final synchronized void setSize(int newSize)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>newSize</tt><br>
<dd>

<p class=para>
The new size. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method sets the size (not the capacity) of this <tt class=literal>Vector</tt>. 
If the new size is bigger than the current size, <tt class=literal>null</tt> 
elements are added to the end of the <tt class=literal>Vector</tt>. 
If the new size is smaller than the current size, elements are discarded 
from index <tt class=literal>newSize</tt> to the end 
of the <tt class=literal>Vector</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.305">size</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.349">public final int size()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The size of this <tt class=literal>Vector</tt>. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the number of objects contained in this <tt class=literal>Vector</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.306">toString</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.350">public final synchronized String toString()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
A string that represents this <tt class=literal>Vector</tt>. 

<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>Object.toString()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns a string representation of this <tt class=literal>Vector</tt>. 
The string includes every object that is contained in the <tt class=literal>Vector</tt>, 
so the string returned by <tt class=literal>toString()</tt> 
can be quite long. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch17-REFSECT2-AUTOID.307">trimToSize</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch17-REFSECT3-AUTOID.351">public final synchronized void trimToSize()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method sets the capacity of this <tt class=literal>Vector</tt> 
equal to its size. You can use this method to minimize the storage space 
used by the <tt class=literal>Vector</tt>, but any 
subsequent calls to <tt class=literal>addElement()</tt> 
or <tt class=literal>insertElement()</tt> forces 
the <tt class=literal>Vector</tt> to allocate more space. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch17-REFSECT1-AUTOID.188">Inherited Methods</A></h2>

<div class=informaltable>
<p>
<table class=INFORMALTABLE>
<tr class=row>
<th align="left">Method</TH>
<th align="left">Inherited From</TH>
<th align="left">Method</TH>
<th align="left">Inherited From</TH>
</TR>
<tr class=row>
<td align="left">

<p class=para>
<tt class=literal>equals(Object)</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>finalize()</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="left">

<p class=para>
<tt class=literal>getClass()</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>hashCode()</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="left">

<p class=para>
<tt class=literal>notify()</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>notifyAll()</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="left">

<p class=para>
<tt class=literal>wait()</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>wait(long)</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="left">

<p class=para>
<tt class=literal>wait(long, int)</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="left">&nbsp;</TD>
<td align="left">&nbsp;</TD>
</TR>
</TABLE>
<p>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch17-REFSECT1-AUTOID.189">See Also</A></h2>

<p class=para>
<tt class=literal>ArrayIndexOutOfBoundsException</tt>, 
<tt class=literal>Cloneable</tt>, 
<tt class=literal>Enumeration</tt>, 
<tt class=literal>NoSuchElementException</tt>, 
<tt class=literal>Serializable</tt>, 
<tt class=literal>Stack</tt> 
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch17_25.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch18_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>TooManyListenersException</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Adler32</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
