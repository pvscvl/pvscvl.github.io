<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 11] DataOutputStream</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 16:35:26 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_12.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 11<br>The java.io Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch11_14.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=refnamediv>
<h1>DataOutputStream</H1>

<h2>Name</H2>

DataOutputStream

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.87">Synopsis</A></h2>

<dl class=variablelist>
<dt class=varlistentry>Class Name:<br>
<dd>

<p class=para>
<tt class=literal>java.io.DataOutputStream</tt>

<p>
<dt class=varlistentry>Superclass:<br>
<dd>

<p class=para>
<tt class=literal>java.io.FilterOutputStream</tt>
 

<p>
<dt class=varlistentry>Immediate Subclasses:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Interfaces Implemented:<br>
<dd>

<p class=para>
<tt class=literal>java.io.DataOutput</tt>

<p>
<dt class=varlistentry>Availability:<br>
<dd>

<p class=para>
JDK 1.0 or later</DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.88">Description</A></h2>

<p class=para>
The <tt class=literal>DataOutputStream</tt> class 
defines methods for writing primitive data types to an output stream in 
a machine-independent manner. Many of the methods of <tt class=literal>DataOutputStream</tt> 
write a single primitive data type, in binary format, to an underlying 
output stream. All multibyte quantities are written in a format that stores 
the most significant byte as the first byte and the least significant byte 
as the last byte. 

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.89">Class Summary</A></h2>

<div class=screen>
<p>
<pre>
public class java.io.DataOutputStream extends java.io.FilterOutputStream
                                      implements java.io.DataOutput {
  // Variables
  protected int written;
  // Constructors
  public DataOutputStream(OutputStream out);
  // Instance Methods
  public void flush();
  public final int size();
  public synchronized void write(int b);
  public synchronized void write(byte[] b, int off, int len);
  public final void writeBoolean(boolean v);
  public final void writeByte(int v);
  public final void writeBytes(String s);
  public final void writeChar(int v);
  public final void writeChars(String s);
  public final void writeDouble(double v);
  public final void writeFloat(float v);
  public final void writeInt(int v);
  public final void writeLong(long v);
  public final void writeShort(int v);
  public final void writeUTF(String str);
}
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.90">Variables</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.116">written</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.142">protected int written</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
The number of bytes that have been written to this output stream. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.91">Constructors</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.117">DataOutputStream</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.143">public DataOutputStream(OutputStream out)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>out</tt><br>
<dd>

<p class=para>
The output stream to 
use. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>DataOutputStream</tt> 
that uses <tt class=literal>out</tt> as its underlying 
stream. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.92">Instance Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.118">flush</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.144">public void flush() throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>FilterOutputStream.flush()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method flushes the stream, forcing any buffered output to be written. 
The method calls the <tt class=literal>flush()</tt> 
method of the underlying output stream. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.119">size</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.145">public final int size()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The number of bytes written. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the number of bytes that have been written to the stream 
(i.e., it returns the value of the variable <tt class=literal>written</tt>). </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.120">write</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.146">public synchronized void write(int b) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>b</tt><br>
<dd>

<p class=para>
The value to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>FilterOutputStream.write(int)</tt> 

<p>
<dt class=varlistentry>Implements<br>
<dd>

<p class=para>
<tt class=literal>DataOutput.write(int)</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes the low-order eight bits of <tt class=literal>b</tt> 
to the underlying stream as a <tt class=literal>byte</tt>. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.147"><div class=screen> <p> <pre> public synchronized void write(byte b[], int off, int len) throws IOException </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>b</tt><br>
<dd>

<p class=para>
An array of bytes to write.

<p>
<dt class=varlistentry><tt class=literal>off</tt><br>
<dd>

<p class=para>
An offset into the byte array.

<p>
<dt class=varlistentry><tt class=literal>len</tt><br>
<dd>

<p class=para>
The number of bytes to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>FilterOutputStream.write(byte[], int, int)</tt> 

<p>
<dt class=varlistentry>Implements<br>
<dd>

<p class=para>
<tt class=literal>DataOutput.write(byte[], int, int)</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes <tt class=literal>len</tt> bytes from the given array, starting <tt class=literal>off</tt> elements from the beginning of the array, to the 
underlying stream. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.121">writeBoolean</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.148">public final void writeBoolean(boolean v) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>v</tt><br>
<dd>

<p class=para>
The <tt class=literal>boolean</tt> 
value to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Implements<br>
<dd>

<p class=para>
<tt class=literal>DataOutput.writeBoolean()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
If <tt class=literal>v</tt> is <tt class=literal>true</tt>, 
this method writes a byte that contains the value <tt class=literal>1</tt> 
to the underlying stream. If <tt class=literal>v</tt> 
is <tt class=literal>false</tt>, the method writes 
a byte that contains the value 0. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.122">writeByte</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.149">public final void writeByte(int v) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>v</tt><br>
<dd>

<p class=para>
The value to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Implements<br>
<dd>

<p class=para>
<tt class=literal>DataOutput.writeByte()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes an 8-bit <tt class=literal>byte</tt> 
to the underlying stream, using the low-order eight bits of the given integer 
<tt class=literal>v</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.123">writeBytes</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.150">public final void writeBytes(String s) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>s</tt><br>
<dd>

<p class=para>
The <tt class=literal>String </tt>to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Implements<br>
<dd>

<p class=para>
<tt class=literal>DataOutput.writeBytes()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes the characters in the given <tt class=literal>String</tt> 
to the underlying stream as a sequence of 8-bit bytes. The high-order 
bytes of the characters in the string are ignored. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.124">writeChar</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.151">public final void writeChar(int v) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>v</tt><br>
<dd>

<p class=para>
The value to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Implements<br>
<dd>

<p class=para>
<tt class=literal>DataOutput.writeChar()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes a 16-bit <tt class=literal>char</tt> 
to the underlying stream, using the low-order 16 bits of the given integer 
<tt class=literal>v</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.125">writeChars</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.152">public final void writeChars(String s) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>s</tt><br>
<dd>

<p class=para>
The <tt class=literal>String </tt>to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Implements<br>
<dd>

<p class=para>
<tt class=literal>DataOutput.writeChars()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes the characters in the given <tt class=literal>String</tt> 
object to the underlying stream as a sequence of 16-bit characters. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.126">writeDouble</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.153">public final void writeDouble(double v) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>v</tt><br>
<dd>

<p class=para>
The <tt class=literal>double</tt> 
value to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Implements<br>
<dd>

<p class=para>
<tt class=literal>DataOutput.writeDouble()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes a 64-bit <tt class=literal>double</tt> 
to the underlying stream. The <tt class=literal>double</tt> 
value is converted to a <tt class=literal>long</tt> 
using <tt class=literal>doubleToLongBits()</tt> of 
<tt class=literal>Double</tt>; the <tt class=literal>long</tt> 
value is then written to the underlying stream as eight bytes with the 
high-order byte first. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.127">writeFloat</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.154">public final void writeFloat(float v) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>v</tt><br>
<dd>

<p class=para>
The <tt class=literal>float</tt> 
value to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Implements<br>
<dd>

<p class=para>
<tt class=literal>DataOutput.writeFloat()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes a 32-bit <tt class=literal>float</tt> 
to the underlying stream. The <tt class=literal>float</tt> 
value is converted to a <tt class=literal>int</tt> 
using <tt class=literal>floatToIntBits()</tt> of <tt class=literal>Float</tt>; 
the <tt class=literal>int</tt> value is then written 
to the underlying stream as four bytes with the high-order byte first. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.128">writeInt</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.155">public final void writeInt(int v) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>v</tt><br>
<dd>

<p class=para>
The <tt class=literal>int</tt> 
value to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Implements<br>
<dd>

<p class=para>
<tt class=literal>DataOutput.writeInt()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes a 32-bit <tt class=literal>int</tt> 
to the underlying stream. The value is written as four bytes with the 
high-order byte first. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.129">writeLong</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.156">public final void writeLong(long v) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>v</tt><br>
<dd>

<p class=para>
The <tt class=literal>long</tt> 
value to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Implements<br>
<dd>

<p class=para>
<tt class=literal>DataOutput.writeLong()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes a 64-bit <tt class=literal>long</tt> 
to the underlying stream. The value is written as eight bytes with the 
high-order byte first. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.130">writeShort</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.157">public final void writeShort(int v) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>v</tt><br>
<dd>

<p class=para>
The value to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Implements<br>
<dd>

<p class=para>
<tt class=literal>DataOutput.writeShort()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes a 16-bit <tt class=literal>short</tt> 
to the underlying stream, using the low-order two bytes of the given integer 
<tt class=literal>v</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.131">writeUTF</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.158">public final void writeUTF(String str) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>str</tt><br>
<dd>

<p class=para>
The <tt class=literal>String</tt> 
to write. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If 
any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Implements<br>
<dd>

<p class=para>
<tt class=literal>DataOutput.writeUTF()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method writes the given <tt class=literal>String</tt> 
to the underlying stream using the UTF-8 encoding. First, two bytes are 
written as an unsigned <tt class=literal>short</tt> 
value; this value specifies the number of bytes to follow. The value is 
the actual number of bytes in the UTF-8 encoding, not the length of the 
string. Then each character of the string is written as UTF-8 encoded bytes.

<p class=para>
See <a href="appb_01.htm">Appendix B, <i>The UTF-8 Encoding</i></A> for more information on the
UTF-8 encoding.</DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.93">Inherited Methods</A></h2>

<div class=informaltable>
<p>
<table class=INFORMALTABLE>
<tr class=row>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>clone()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>close()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>FilterOutputStream</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>equals(Object)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>finalize()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>getClass()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>hashCode()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>notify()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>notifyAll()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>toString()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>wait()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long, int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>write(byte[])</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>FilterOutputStream</tt></TD>
<td align="LEFT">&nbsp;</TD>
<td align="LEFT">&nbsp;</TD>
</TR>
</TABLE>
<p>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.94">See Also</A></h2>

<p class=para>
<tt class=literal>DataInputStream</tt>, 
<tt class=literal>DataOutput</tt>, 
<tt class=literal>Double</tt>, 
<tt class=literal>FilterOutputStream</tt>, 
<tt class=literal>Float</tt>, 
<tt class=literal>IOException</tt>, 
<tt class=literal>OutputStream</tt> 
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_12.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch11_14.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>DataOutput</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>EOFException</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
