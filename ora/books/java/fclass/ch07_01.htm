<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 7] Object Serialization</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 16:15:17 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="Content-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch06_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 7</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch07_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<h1 class=chapter><a class="TITLE" name="JFC-CH-7">7. Object Serialization</A></H1>

<div class=htmltoc>

<p>
<b>Contents:</b><br>
Object Serialization Basics<br>
<a href="ch07_02.htm">Writing Classes to Work with Serialization</A><br>
<a href="ch07_03.htm">Versioning of Classes</A><br>

<p>
</DIV>

<p class=para>
The object serialization mechanism in Java 1.1 provides a way for objects 
to be written as a stream of bytes and then later recreated from that stream 
of bytes. This facility supports a variety of interesting applications. 
For example, object serialization provides persistent storage 
for objects, whereby objects are stored in a file for later use. Also, 
a copy of an object can be sent through a socket to another Java program. 
Object serialization forms the basis for the remote method invocation mechanism 
in Java that facilitates distributed programs. Object serialization is 
supported by a number of new classes in the <tt class=literal>java.io</tt> 
package in Java 1.1. 

<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JFC-CH-7-SECT-1">7.1 Object Serialization Basics</A></h2>

<p class=para>
<a name="CH07.SER1"></A><a name="CH07.SER2"></A>If a class is designed to work with object serialization, reading and writing 
instances of that class is quite simple. The process of writing an object 
to a byte stream is called <i class=emphasis>serialization</I>. 
For example, here is how you can write a <tt class=literal>Color</tt> 
object to a file: 

<div class=screen>
<p>
<pre>
FileOutputStream out = new FileOutputStream("tmp");
ObjectOutput objOut = new ObjectOutputStream(out);
objOut.writeObject(Color.red);
</PRE>
</DIV>

<p class=para>
All you need to do is create an <tt class=literal>ObjectOutputStream</tt>
around another output stream and then pass the object to be written to
the <tt class=literal>writeObject()</tt> method. If you are writing
objects to a socket or any other destination that is time-sensitive,
you should call the <tt class=literal>flush()</tt> method after you are
finished passing objects to the <tt class=literal>ObjectOutputStream</tt>.

<p class=para>
The process of reading an object from byte stream is called
<i class=emphasis>deserialization</I>.  Here is how you can read that
<tt class=literal>Color</tt> object from its file:

<div class=screen>
<p>
<pre>
FileInputStream in = new FileInputStream("tmp");
ObjectInputStream objIn = new ObjectInputStream(in);
Color c = (Color)objIn.readObject();
</PRE>
</DIV>

<p class=para>
Here all you need to do is create an
<tt class=literal>ObjectInputStream</tt> object around another input
stream and call its <tt class=literal>readObject()</tt> method.

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch06_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch07_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>File Manipulation</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Writing Classes to Work with Serialization</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
