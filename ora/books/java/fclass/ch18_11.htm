<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 18] Inflater</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 17:49:29 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch18_10.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 18<br>The java.util.zip Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch18_12.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=refnamediv>
<h1>Inflater</H1>

<h2>Name</H2>

Inflater

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch18-REFSECT1-AUTOID.75">Synopsis</A></h2>

<dl class=variablelist>
<dt class=varlistentry>Class Name:<br>
<dd>

<p class=para>
<tt class=literal>java.util.zip.Inflater</tt>

<p>
<dt class=varlistentry>Superclass:<br>
<dd>

<p class=para>
<tt class=literal>java.lang.Object</tt>

<p>
<dt class=varlistentry>Immediate Subclasses:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Interfaces Implemented:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Availability:<br>
<dd>

<p class=para>
New as of JDK 1.1 </DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch18-REFSECT1-AUTOID.76">Description</A></h2>

<p class=para>
The <tt class=literal>Inflater</tt> class provides 
support for general-purpose data decompression. The class uses the ZLIB 
compression algorithms described in RFC 1950, RFC 1951, and RFC 1952. These 
documents can be found at: 
<p>
<ul class=itemizedlist>
<li class=listitem><i class=emphasis>ftp://ds.internic.net/rfc/rfc1950.txt</I>

<p>
<li class=listitem><i class=emphasis>ftp://ds.internic.net/rfc/rfc1951.txt</I>

<p>
<li class=listitem><i class=emphasis>ftp://ds.internic.net/rfc/rfc1952.txt</I>

<p>
</UL>

<p class=para>
The <tt class=literal>Deflater</tt> class compresses 
data that can be uncompressed using <tt class=literal>Inflater</tt>. 

<p class=para>
The <tt class=literal>InflaterInputStream</tt> uses 
an internal <tt class=literal>Inflater</tt> to decompress 
data. Typically, you do not need to create a <tt class=literal>Inflater</tt>; 
instead, you can just use an instance of one of the subclasses of <tt class=literal>InflaterInputStream</tt>: 
<tt class=literal>GZIPInputStream</tt> or <tt class=literal>ZipInputStream</tt>. 

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch18-REFSECT1-AUTOID.77">Class Summary</A></h2>

<div class=screen>
<p>
<pre>
public class java.util.zip.Inflater extends java.lang.Object {
  // Constructors
  public Inflater();
  public Inflater(boolean nowrap);
  // Public Instance Methods
  public synchronized native void end();
  public synchronized boolean finished();
  public synchronized native int getAdler();
  public synchronized int getRemaining();
  public synchronized native int getTotalIn();
  public synchronized native int getTotalOut();
  public int inflate(byte[] b);
  public synchronized native int inflate(byte[] b, int off, int len);
  public synchronized boolean needsDictionary();
  public synchronized boolean needsInput();
  public synchronized native void reset();
  public void setDictionary(byte[] b);
  public synchronized native void setDictionary(byte[] b, int off, int len);
  public void setInput(byte[] b);
  public synchronized void setInput(byte[] b, int off, int len);
  // Protected Instance Methods
  protected void finalize();
}
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch18-REFSECT1-AUTOID.78">Constructors</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.61">Inflater</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.79">public Inflater()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates an <tt class=literal>Inflater</tt> 
that decompresses data in the ZLIB format. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.80">public Inflater(boolean nowrap)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>nowrap</tt><br>
<dd>

<p class=para>
A <tt class=literal>boolean</tt> 
value that specifies whether or not the ZLIB header and checksum data are 
expected in the compressed data. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates an <tt class=literal>Inflater</tt> 
that decompresses data. If <tt class=literal>nowrap</tt> 
is <tt class=literal>true</tt>, the ZLIB header and 
checksum fields are not expected, which means that the compressed data 
is in the format used by GZIP and PKZIP. If the parameter is <tt class=literal>false</tt>, 
the data is decompressed in the ZLIB format. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch18-REFSECT1-AUTOID.79">Public Instance Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.62">end</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.81">public synchronized native void end()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method discards any unprocessed input data and frees up internal buffers. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.63">finished</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.82">public synchronized boolean finished()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
A <tt class=literal>boolean</tt> value that indicates 
whether or not the end of the compressed data has been reached. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns <tt class=literal>true</tt> if 
the last of the compressed data has been read using <tt class=literal>inflate()</tt>. 
Otherwise it returns <tt class=literal>false</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.64">getAdler</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.83">public synchronized native int getAdler()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The Adler32 checksum value of the uncompressed data. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns an Adler32 checksum value that is calculated from the 
uncompressed data returned by <tt class=literal>inflate()</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.65">getRemaining</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.84">public synchronized int getRemaining()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The number of bytes remaining in the input buffer. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the number of bytes that are in the input buffer. It 
can be called to find out how much data remains after a call to <tt class=literal>inflate()</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.66">getTotalIn</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.85">public synchronized native int getTotalIn()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The total number of bytes that have been input so far. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the number of bytes that have been passed to <tt class=literal>setInput()</tt> 
since this <tt class=literal>Inflater</tt> was created 
or since <tt class=literal>reset()</tt> was last called. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.67">getTotalOut</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.86">public synchronized native int getTotalOut()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The total number of bytes that have been output so far. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the number of bytes that have been read from <tt class=literal>inflate()</tt> 
since this <tt class=literal>Inflater</tt> was created 
or since <tt class=literal>reset()</tt> was last called. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.68">inflate</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.87">public int inflate(byte[] b) throws DataFormatException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>b</tt><br>
<dd>

<p class=para>
A byte array to be filled. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The number of decompressed bytes actually written to the array or 0 if 
more data may be required. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>DataFormatException</tt><br>
<dd>

<p class=para>
If the data in the input buffer is not in the correct format. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>

This method decompresses the data passed to
<tt class=literal>setInput()</tt> and fills the given array with
decompressed data. If this method returns 0,
<tt class=literal>needsInput()</tt> and
<tt class=literal>needsDictionary()</tt> should be called in order to
determine whether the <tt class=literal>Inflater</tt> needs more data in
its input buffer or whether it needs a preset dictionary.
</DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.88"><div class=screen> <p> <pre> public synchronized native int inflate(byte[] b, int off, int len) throws DataFormatException </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>b</tt><br>
<dd>

<p class=para>
A byte array to be filled.

<p>
<dt class=varlistentry><tt class=literal>off</tt><br>
<dd>

<p class=para>
An offset into the byte array.

<p>
<dt class=varlistentry><tt class=literal>len</tt><br>
<dd>

<p class=para>
The number of bytes to fill. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The number of decompressed bytes written to the array or 0 if more data 
may be required. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>DataFormatException</tt><br>
<dd>

<p class=para>
If the data in the input buffer is not in the correct format. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method decompresses the data passed to <tt class=literal>setInput()</tt> 
and writes <tt class=literal>len</tt> bytes of the 
decompressed data into the given array, starting at <tt class=literal>off</tt>. 
If this method returns 0, <tt class=literal>needsInput()</tt> 
and <tt class=literal>needsDictionary()</tt> should 
be called in order to determine whether the <tt class=literal>Inflater</tt> 
needs more data in its input buffer or whether it needs a preset dictionary. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.69">needsDictionary</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.89">public synchronized boolean needsDictionary()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
A <tt class=literal>boolean</tt> value that indicates 
whether or not a preset dictionary is needed. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns <tt class=literal>true</tt> if 
a preset dictionary is needed for decompression. Otherwise it returns <tt class=literal>false</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.70">needsInput</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.90">public synchronized boolean needsInput()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
A <tt class=literal>boolean</tt> value that indicates 
whether or not the input buffer is empty. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns <tt class=literal>true</tt> if 
the input buffer is empty. Otherwise it returns <tt class=literal>false</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.71">reset</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.91">public synchronized native void reset()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method resets the <tt class=literal>Inflater</tt> 
to the state it was in when it was created, which means that a new set 
of data can be decompressed. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.72">setDictionary</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.92">public void setDictionary(byte[] b)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>b</tt><br>
<dd>

<p class=para>
An array of byte values. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method sets the preset dictionary for decompression using the data 
in the given array. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.93"><div class=screen> <p> <pre> public synchronized native void setDictionary(byte[] b, int off, int len) </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>b</tt><br>
<dd>

<p class=para>
An array of byte values.

<p>
<dt class=varlistentry><tt class=literal>off</tt><br>
<dd>

<p class=para>
An offset into the byte array.

<p>
<dt class=varlistentry><tt class=literal>len</tt><br>
<dd>

<p class=para>
The number of bytes to use. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method sets the preset dictionary for decompression using <tt class=literal>len</tt> 
bytes from the given array, starting from <tt class=literal>off</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.73">setInput</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.94">public void setInput(byte[] b)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>b</tt><br>
<dd>

<p class=para>
An array of byte values. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method places the contents of the given array into the input buffer 
of this <tt class=literal>Inflater</tt>. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.95">public synchronized void setInput(byte[] b, int off, int len)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>b</tt><br>
<dd>

<p class=para>
An array of byte values.

<p>
<dt class=varlistentry><tt class=literal>off</tt><br>
<dd>

<p class=para>
An offset into the byte array.

<p>
<dt class=varlistentry><tt class=literal>len</tt><br>
<dd>

<p class=para>
The number of bytes to use. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method places <tt class=literal>len</tt> bytes 
from the given array, starting at <tt class=literal>off</tt>, 
into the input buffer of this <tt class=literal>Inflater</tt>. 
Use the <tt class=literal>inflate()</tt> method to 
decompress the data and retrieve it in decompressed form. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch18-REFSECT1-AUTOID.80">Protected Instance Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch18-REFSECT2-AUTOID.74">finalize</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch18-REFSECT3-AUTOID.96">protected void finalize()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>Object.finalize()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method calls <tt class=literal>end()</tt> when 
this <tt class=literal>Inflater</tt> is garbage collected. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch18-REFSECT1-AUTOID.81">Inherited Methods</A></h2>

<div class=informaltable>
<p>
<table class=INFORMALTABLE>
<tr class=row>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>clone()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>equals(Object)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>getClass()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>hashCode()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>notify()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>notifyAll()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>toString()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>wait()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long, 
int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
</TABLE>
<p>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch18-REFSECT1-AUTOID.82">See Also</A></h2>

<p class=para>
<tt class=literal>Deflater</tt>, 
<tt class=literal>GZIPInputStream</tt>, 
<tt class=literal>InflaterInputStream</tt>, 
<tt class=literal>ZipInputStream</tt> 
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch18_10.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch18_12.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>GZIPOutputStream</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>InflaterInputStream</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
