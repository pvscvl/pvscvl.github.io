<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 15] DatagramSocket</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 17:21:44 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch15_05.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 15<br>The java.net Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch15_07.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=refnamediv>
<h1>DatagramSocket</H1>

<h2>Name</H2>

DatagramSocket

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.31">Synopsis</A></h2>

<dl class=variablelist>
<dt class=varlistentry>Class Name:<br>
<dd>

<p class=para>
<tt class=literal>java.net.DatagramSocket</tt>

<p>
<dt class=varlistentry>Superclass:<br>
<dd>

<p class=para>
<tt class=literal>java.lang.Object</tt>

<p>
<dt class=varlistentry>Immediate Subclasses:<br>
<dd>

<p class=para>
<tt class=literal>java.net.MulticastSocket</tt>

<p>
<dt class=varlistentry>Interfaces Implemented:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Availability:<br>
<dd>

<p class=para>
JDK 1.0 or later </DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.32">Description</A></h2>

<p class=para>
The <tt class=literal>DatagramSocket</tt> class implements 
packet-oriented, connectionless data communication. In Internet parlance, 
this is the User Datagram Protocol, commonly known as UDP (see RFC 768). 
Each packet wanders through the network, routed by its destination address. 
Different packets can take different paths through the network and may 
arrive in a different order than they were sent. Furthermore, packets are 
not even guaranteed to reach their destination. It is up to an application 
that uses <tt class=literal>DatagramSocket</tt> to 
determine if data is out of order or missing. While these features may 
seem like disadvantages of <tt class=literal>DatagramSocket</tt>, 
there is also some advantage to using this class. 
Primarily, communication using <tt class=literal>DatagramSocket</tt> 
is faster than <tt class=literal>Socket</tt> stream 
communication because of the lack of overhead involved. 

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.33">Class Summary</A></h2>

<div class=screen>
<p>
<pre>
public class java.net.DatagramSocket extends java.lang.Object {
  // Constructors
  public DatagramSocket();
  public DatagramSocket(int port);
  public DatagramSocket(int port, InetAddress laddr);     // New in 1.1
  // Instance Methods
  public void close();
  public InetAddress getLocalAddress();                   // New in 1.1
  public int getLocalPort();
  public synchronized int getSoTimeout();                 // New in 1.1
  public synchronized void receive(DatagramPacket p);
  public void send(DatagramPacket p);
  public synchronized void setSoTimeout(int timeout);     // New in 1.1
}
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.34">Constructors</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.14">DatagramSocket</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.17">public DatagramSocket() throws SocketException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SocketException</tt><br>
<dd>

<p class=para>
If any kind of socket error occurs.

<p>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the application is not allowed to listen on the port. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>DatagramSocket</tt> 
that is bound to any available port on the local host machine. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.18">public DatagramSocket(int port) throws SocketException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>port</tt><br>
<dd>

<p class=para>
A port number. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SocketException</tt><br>
<dd>

<p class=para>
If any kind of socket error occurs.

<p>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the application is not allowed to listen on the given port. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>DatagramSocket</tt> 
that is bound to the given port on the local host machine. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.19"><div class=screen> <p> <pre> public DatagramSocket(int port, InetAddress laddr) throws SocketException </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Availability<br>
<dd>

<p class=para>
New as of JDK 1.1 

<p>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>port</tt><br>
<dd>

<p class=para>
A port number.

<p>
<dt class=varlistentry><tt class=literal>laddr</tt><br>
<dd>

<p class=para>
A local address. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SocketException</tt><br>
<dd>

<p class=para>
If any kind of socket error occurs.

<p>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the application is not allowed to listen on the given port on the specified 
host. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>DatagramSocket</tt> 
that is bound to the given port on the specified local host machine. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.35">Instance Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.15">close</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.20">public void close()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method closes the socket, releasing any 
system resources it holds. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.16">getLocalAddress</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.21">public InetAddress getLocalAddress()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Availability<br>
<dd>

<p class=para>
New as of JDK 1.1 

<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The local address of the socket. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the application is not allowed to retrieve the address. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the local address to which this <tt class=literal>DatagramSocket</tt> 
is bound. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.17">getLocalPort</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.22">public int getLocalPort()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>The port</tt> number of the socket. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the local port to which this <tt class=literal>DatagramSocket</tt> 
is bound. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.18">getSoTimeout</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.23">public synchronized int getSoTimeout() throws SocketException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Availability<br>
<dd>

<p class=para>
New as of JDK 1.1 

<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The receive time-out value for the socket. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SocketException</tt><br>
<dd>

<p class=para>
If any kind of socket error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the receive time-out value for this socket. A value 
of zero indicates that the socket waits indefinitely for an incoming packet, 
while a non-zero value indicates the number of milliseconds it waits. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.19">receive</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.24"><div class=screen> <p> <pre> public synchronized void receive(DatagramPacket p) throws IOException </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>p</tt><br>
<dd>

<p class=para>
The <tt class=literal>DatagramPacket</tt> that receives incoming data. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind of I/O error occurs.

<p>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the application is not allowed to receive data from the packet's 
source.

<p>
<dt class=varlistentry><tt class=literal>InterruptedIOException</tt><br>
<dd>

<p class=para>
If a packet does not arrive before the time-out period expires. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method receives a datagram packet on this socket. After this method 
returns, the given <tt class=literal>DatagramPacket</tt> 
contains the packet's data and length, and the sender's address 
and port number. If the data that was sent is longer that the given packet's 
data buffer, the data is truncated.

<p class=para>
If a time-out value is specified using the <tt class=literal>setSoTimeout()</tt> 
method, the method either returns with the received packet or times out, 
throwing an <tt class=literal>InterruptedIOException</tt>. 
If no time-out value is specified, the method blocks until it receives a 
packet. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.20">send</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.25">public void send(DatagramPacket p) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>p</tt><br>
<dd>

<p class=para>
The <tt class=literal>DatagramPacket</tt> to be sent. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind of I/O error occurs.

<p>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the application is not allowed to send data to the packet's destination. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method sends a packet from this socket. The packet data, packet length, 
destination address, and destination port number are specified by the given 
<tt class=literal>DatagramPacket</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.21">setSoTimeout</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.26"><div class=screen> <p> <pre> public synchronized void setSoTimeout(int timeout) throws SocketException </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Availability<br>
<dd>

<p class=para>
New as of JDK 1.1 

<p>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>timeout</tt><br>
<dd>

<p class=para>
The new time-out value, in milliseconds, for this socket. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SocketException</tt><br>
<dd>

<p class=para>
If any kind of socket error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method is used to set the time-out value that is used for <tt class=literal>receive()</tt>. 
A non-zero value specifies the length of time, in milliseconds, that the 
<tt class=literal>DatagramSocket</tt> should wait 
for an incoming packet. A value of zero indicates that the <tt class=literal>DatagramSocket</tt> 
should wait indefinitely for an incoming packet. If a time-out value is 
needed, this method must be called before <tt class=literal>receive()</tt>. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.36">Inherited Methods</A></h2>

<div class=informaltable>
<p>
<table class=INFORMALTABLE>
<tr class=row>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>clone()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>equals(Object)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>finalize()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>getClass()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>hashCode()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>notify()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>notifyAll()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>toString()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>wait()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long, int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">&nbsp;</TD>
<td align="LEFT">&nbsp;</TD>
</TR>
</TABLE>
<p>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.37">See Also</A></h2>

<p class=para>
<tt class=literal>DatagramPacket</tt>, 
<tt class=literal>DatagramSocketImpl</tt>, 
<tt class=literal>InetAddress</tt>, 
<tt class=literal>InterruptedIOException</tt>, 
<tt class=literal>IOException</tt>, 
<tt class=literal>MulticastSocket</tt>, 
<tt class=literal>SecurityException</tt>, 
<tt class=literal>Socket</tt>, 
<tt class=literal>SocketException</tt> 
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch15_05.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch15_07.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>DatagramPacket</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>DatagramSocketImpl</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
