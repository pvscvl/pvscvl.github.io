<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 15] DatagramSocketImpl</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 17:21:50 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch15_06.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 15<br>The java.net Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch15_08.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=refnamediv>
<h1>DatagramSocketImpl</H1>

<h2>Name</H2>

DatagramSocketImpl

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.38">Synopsis</A></h2>

<dl class=variablelist>
<dt class=varlistentry>Class Name:<br>
<dd>

<p class=para>
<tt class=literal>java.net.DatagramSocketImpl</tt>

<p>
<dt class=varlistentry>Superclass:<br>
<dd>

<p class=para>
<tt class=literal>java.lang.Object</tt>

<p>
<dt class=varlistentry>Immediate Subclasses:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Interfaces Implemented:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Availability:<br>
<dd>

<p class=para>
New as of JDK 1.1 </DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.39">Description</A></h2>

<p class=para>
The <tt class=literal>DatagramSocketImpl</tt> class 
is an <tt class=literal>abstract</tt> class that defines 
the bulk of the methods that make the <tt class=literal>DatagramSocket</tt> 
and <tt class=literal>MulticastSocket</tt> classes 
work. Non-<tt class=literal>public</tt> subclasses 
of <tt class=literal>DatagramSocketImpl</tt> provide 
platform-specific implementations of datagram socket communication. 

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.40">Class Summary</A></h2>

<div class=screen>
<p>
<pre>
public abstract class java.net.DatagramSocketImpl
                      extends java.lang.Object {
  // Variables
  protected FileDescriptor fd;
  protected int localPort;
  // Protected Instance Methods
  protected abstract void bind(int lport, InetAddress laddr);
  protected abstract void close();
  protected abstract void create();
  protected FileDescriptor getFileDescriptor();
  protected int getLocalPort();
  protected abstract byte getTTL();
  protected abstract void join(InetAddress inetaddr);
  protected abstract void leave(InetAddress inetaddr);
  protected abstract int peek(InetAddress i);
  protected abstract void receive(DatagramPacket p);
  protected abstract void send(DatagramPacket p);
  protected abstract void setTTL(byte ttl);
}
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.41">Variables</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.22">fd</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.27">protected FileDescriptor fd</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
The file descriptor that represents this socket. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.23">localPort</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.28">protected int localPort</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
The local port number of this socket. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.42">Protected Instance Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.24">bind</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.29"><div class=screen> <p> <pre> protected abstract void bind(int lport, InetAddress laddr) throws SocketException </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>lport</tt><br>
<dd>

<p class=para>
A port number.

<p>
<dt class=varlistentry><tt class=literal>laddr</tt><br>
<dd>

<p class=para>
A local address. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SocketException</tt><br>
<dd>

<p class=para>
If any kind of socket error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method binds the socket to the given address and port. If the address 
or the port is unavailable, an exception is thrown. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.25">close</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.30">protected void close()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method closes the socket, releasing any 
system resources it holds. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.26">create</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.31">protected abstract void create() throws SocketException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SocketException</tt><br>
<dd>

<p class=para>
If a socket error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method creates a socket that is not bound to an address and port. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.27">getFileDescriptor</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.32">protected FileDescriptor getFileDescriptor()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The file descriptor for this socket. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the file descriptor associated with this <tt class=literal>DatagramSocketImpl</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.28">getLocalPort</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.33">protected int getLocalPort()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The port number for this socket. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the local port to which this <tt class=literal>DatagramSocketImpl</tt> 
is bound. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.29">getTTL</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.34">protected abstract byte getTTL() throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The time-to-live (TTL) value for this socket. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the TTL value for this socket. This value is the number 
of hops that an outgoing packet can traverse before it is discarded. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.30">join</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.35"><div class=screen> <p> <pre> protected abstract void join(InetAddress inetaddr) throws IOException </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>inetaddr</tt><br>
<dd>

<p class=para>
The IP address of the group to join. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method is used by <tt class=literal>MulticastSocket</tt> 
to join a multicast group. An exception is thrown if the given address 
is not a multicast address. While the socket is part of a group, it receives 
all packets that are sent to the group. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.31">leave</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.36"><div class=screen> <p> <pre> protected abstract void leave(InetAddress inetaddr) throws IOException </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>inetaddr</tt><br>
<dd>

<p class=para>
The IP address of the group to leave. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method is used by <tt class=literal>MulticastSocket</tt> 
to leave a multicast group. An exception is thrown if the given address 
is not a multicast address. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.32">peek</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.37">protected abstract int peek(InetAddress i) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>i</tt><br>
<dd>

<p class=para>
A reference to an <tt class=literal>InetAddress</tt> object. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The port number of the next incoming packet. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method places the address of the next incoming packet in the given 
<tt class=literal>InetAddress</tt> 
object. The method also returns the port number of the next incoming packet. 
The method looks at the address of an incoming packet to 
determine if it should be accepted. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.33">receive</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.38"><div class=screen> <p> <pre> protected abstract void receive(DatagramPacket p) throws IOException </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>p</tt><br>
<dd>

<p class=para>
The <tt class=literal>DatagramPacket</tt> that receives incoming data. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method receives a datagram packet on this socket. After this method 
returns, the given <tt class=literal>DatagramPacket</tt> 
contains the packet's data and length, and the sender's address 
and port number. If the data that was sent is longer that the given packet's 
data buffer, the data is truncated. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.34">send</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.39">protected abstract void send(DatagramPacket p) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>p</tt><br>
<dd>

<p class=para>
The <tt class=literal>DatagramPacket</tt> to be sent. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method sends a packet from this socket. The packet data, packet length, 
destination address, and destination port number are specified by the given 
<tt class=literal>DatagramPacket</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch15-REFSECT2-AUTOID.35">setTTL</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch15-REFSECT3-AUTOID.40">protected abstract void setTTL(byte ttl) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>ttl</tt><br>
<dd>

<p class=para>
The new TTL value for this socket. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method is used to set the TTL value of the socket. The TTL value is 
the number of hops that an outgoing packet can traverse before it is discarded. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.43">Inherited Methods</A></h2>

<div class=informaltable>
<p>
<table class=INFORMALTABLE>
<tr class=row>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>clone()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>equals(Object)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>finalize()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>getClass()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>hashCode()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>notify()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>notifyAll()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>toString()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>wait()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long, int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">&nbsp;</TD>
<td align="LEFT">&nbsp;</TD>
</TR>
</TABLE>
<p>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch15-REFSECT1-AUTOID.44">See Also</A></h2>

<p class=para>
<tt class=literal>DatagramPacket</tt>, 
<tt class=literal>DatagramSocket</tt>, 
<tt class=literal>FileDescriptor</tt>, 
<tt class=literal>InetAddress</tt>, 
<tt class=literal>IOException</tt>, 
<tt class=literal>MulticastSocket</tt> 
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch15_06.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch15_08.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>DatagramSocket</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>FileNameMap</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
