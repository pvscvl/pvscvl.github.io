<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 5] Collections</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 16:11:51 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="Content-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch04_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 5</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch05_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<h1 class=chapter><a class="TITLE" name="JFC-CH-5">5. Collections</A></H1>

<div class=htmltoc>

<p>
<b>Contents:</b><br>
Enumerations<br>
<a href="ch05_02.htm">Vectors</A><br>
<a href="ch05_03.htm">Stacks</A><br>
<a href="ch05_04.htm">Hashtables</A><br>

<p>
</DIV>

<p class=para>
Java provides a number of utility classes that help you to manage a
collection of objects. These collection classes allow you to work with
objects without regard to their types, so they can be extremely useful
for managing objects at a high level of abstraction. This chapter
describes the following collection classes:

<p>
<ul class=itemizedlist>
<li class=listitem>The <tt class=literal>java.util.Vector</tt> 
class, which represents a dynamic array of objects. 

<p>
<li class=listitem>The <tt class=literal>java.util.Stack</tt> class, 
which represents a dynamic stack of objects. 

<p>
<li class=listitem>The <tt class=literal>java.util.Dictionary</tt> 
class, which is an <tt class=literal>abstract</tt> 
class that manages a collection of objects by associating a key with each 
object. 

<p>
<li class=listitem>The <tt class=literal>java.util.Hashtable</tt> 
class, which is a subclass of <tt class=literal>java.util.Dictionary</tt> 
that implements a specific algorithm to associate keys with objects. Given 
a key, a <tt class=literal>Hashtable</tt> can retrieve 
the associated object with little or no searching. 

<p>
<li class=listitem>The <tt class=literal>java.util.Enumeration</tt> 
interface, which supports sequential access to a set of elements. 

<p>
</UL>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JFC-CH-5-SECT-1">5.1 Enumerations</A></h2>

<p class=para>
<a name="CH05.ENUM"></A>The <tt class=literal>Enumeration</tt> interface is 
implemented by classes that provide serial access to a set of elements, 
or objects, in a collection. An object that implements the <tt class=literal>Enumeration</tt> 
interface provides two methods for dealing with the set: <tt class=literal>nextElement()</tt> 
and <tt class=literal>hasMoreElements()</tt>. The 
<tt class=literal>nextElement()</tt> method returns 
a value of type <tt class=literal>Object</tt>, so 
it can be used with any kind of collection. When you remove an object from 
an <tt class=literal>Enumeration</tt>, you may need 
to cast the object to the appropriate type before using it. You can iterate 
through the elements in an <tt class=literal>Enumeration</tt> 
only once; there is no way to reset it to the beginning or move backwards 
through the elements. 

<p class=para>
Here is an example that prints the contents of an object the implements 
the <tt class=literal>Enumeration</tt> interface: 

<div class=screen>
<p>
<pre>
static void printEnumeration(Enumeration e) {
    while (e.hasMoreElements()) {
        System.out.println(e.nextElement());
    }
</PRE>
</DIV>

<p class=para>
Note that the above method is able to print all of the objects in the <tt class=literal>Enumeration</tt> 
without knowing their class types because the <tt class=literal>println()</tt> 
method handles objects of any type. 

<p class=para>
A number of classes in the Java API provide a method that returns a reference 
to an <tt class=literal>Enumeration</tt> object, rather 
than implementing the <tt class=literal>Enumeration</tt> 
interface directly. For example, as you'll see shortly, the <tt class=literal>Vector</tt> 
class provides an <tt class=literal>elements()</tt> 
method that returns an <tt class=literal>Enumeration</tt> 
of the objects in a <tt class=literal>Vector</tt> 
object. 

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch04_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch05_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Generating Exceptions</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Vectors</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
