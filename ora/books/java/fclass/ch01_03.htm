<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 1] 1.3 The java.io Package</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 16:06:36 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch01_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 1<br>Introduction</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch01_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JFC-CH-1-SECT-3">1.3 The java.io Package</A></h2>

<p class=para>
The <tt class=literal>java.io</tt> package contains the 
classes that handle fundamental input and output operations
in Java. Almost all fundamental I/O in Java is based on streams. 
A stream represents
a flow of data, or a channel of communication, with a reading
process at one end of the stream and a writing process at the other end,
at least conceptually. 
As of Java 1.1, the <tt class=literal>java.io</tt>
package is the largest of the fundamental packages.
See <a href="ch06_01.htm">Chapter 6, <i>I/O</i></A>, for a more in-depth description
of the basic I/O capabilities provided by this package.

<p class=para>
Java 1.0 supports only
byte streams. The <tt class=literal>InputStream</tt> class is
the superclass of all of the Java 1.0 byte input streams, while 
<tt class=literal>OutputStream</tt> is the superclass of all 
the byte output streams. A number of other byte stream classes
extend the functionality of these basic streams. For example, the
<tt class=literal>FileInputStream</tt> and <tt class=literal>FileOutputStream</tt>
classes read from and write to files, respectively, while
<tt class=literal>DataInputStream</tt> and <tt class=literal>DataOutputStream</tt>
read and write binary representations of the primitive Java data
types. The main problem with these byte streams is
that they do not handle the conversion between the Unicode character
set used internally by Java and other character sets used when reading
or writing data. 

<p class=para>
As of Java 1.1, <tt class=literal>java.io</tt> contains classes 
that represent character streams. These character stream classes
convert other character encodings that appear in I/O streams to and
from Unicode characters. The 
<tt class=literal>Reader</tt> class is the superclass of all the Java
1.1 character input streams, while <tt class=literal>Writer</tt>
is the superclass of all character output streams.
Many of the reader and writer classes have analogous behavior to
corresponding byte stream classes. For instance, 
<tt class=literal>FileReader</tt> and <tt class=literal>FileWriter</tt>
are character streams that read from and write to files, respectively.

<p class=para>
The <tt class=literal>InputStreamReader</tt> and 
<tt class=literal>OutputStreamWriter</tt> classes provide a bridge
between byte streams and character streams. If you wrap an
<tt class=literal>InputStreamReader</tt> around an
<tt class=literal>InputStream</tt> object, the bytes in the byte
stream are read and converted to characters using the character
encoding scheme specified by the <tt class=literal>InputStreamReader</tt>.
Likewise, you can wrap an <tt class=literal>OutputStreamWriter</tt>
around any <tt class=literal>OutputStream</tt> object, which allows you to
write characters and have them converted to bytes.

<p class=para>
As of Java 1.1, <tt class=literal>java.io</tt> also contains
classes to support <i class=emphasis>object serialization</I>. Object
serialization is the ability to write the complete state of
an object to an output stream, and then later recreate that
object by reading in the serialized state from an input stream.
The <tt class=literal>ObjectOutputStream</tt> and
<tt class=literal>ObjectInputStream</tt> classes handle serializing
and deserializing objects, respectively. These classes
provide basic serialization capabilities for all objects
that implement the <tt class=literal>Serializable</tt> interface.
<a href="ch07_01.htm">Chapter 7, <i>Object Serialization</i></A>, provides a more detailed explanation of the new
object serialization functionality in Java 1.1.

<p class=para>
The <tt class=literal>RandomAccessFile</tt> class is the only
class in <tt class=literal>java.io</tt> 
that does not use a stream for reading or writing data.
As its name implies, <tt class=literal>RandomAccessFile</tt>
provides nonsequential access to a file, so you can use
it to read from or write to specific locations in a file.

<p class=para>
The <tt class=literal>File</tt> class represents a file on the
local filesystem. The class provides methods to identify
a file, both in terms of its path and its filename.
There are also methods that retrieve information about a file,
such as its status as a directory or a file, its length, and
its last modification time.

<p class=para>
See <a href="ch11_01.htm">Chapter 11, <i>The java.io Package</i></A>, for complete reference material on all of the
classes in the <tt class=literal>java.io</tt> package.

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch01_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch01_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>The java.lang.reflect Package</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>The java.net Package</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
