<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 11] PipedReader</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 16:40:12 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_49.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 11<br>The java.io Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch11_51.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=refnamediv>
<h1>PipedReader</H1>

<h2>Name</H2>

PipedReader

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.339">Synopsis</A></h2>

<dl class=variablelist>
<dt class=varlistentry>Class Name:<br>
<dd>

<p class=para>
<tt class=literal>java.io.PipedReader</tt>

<p>
<dt class=varlistentry>Superclass:<br>
<dd>

<p class=para>
<tt class=literal>java.io.Reader</tt>

<p>
<dt class=varlistentry>Immediate Subclasses:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Interfaces Implemented:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Availability:<br>
<dd>

<p class=para>
New as of JDK 1.1</DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.340">Description</A></h2>

<p class=para>
The <tt class=literal>PipedReader</tt> 
class represents half of a communication pipe; a <tt class=literal>PipedReader</tt> 
must be connected to a <tt class=literal>PipedWriter</tt>. 
When the two halves of a communication pipe are connected, data written 
to the <tt class=literal>PipedWriter</tt> can be read 
from the <tt class=literal>PipedReader</tt>. 
The communication pipe formed by a <tt class=literal>PipedReader</tt>
and a <tt class=literal>PipedWriter</tt> should be used to 
communicate between threads. If both ends of a pipe are used by
the same thread, the thread can hang.

<p class=para>
The <tt class=literal>PipedReader</tt> class is the 
character-based equivalent of the byte-based <tt class=literal>PipedInputStream</tt>. 

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.341">Class Summary</A></h2>

<div class=screen>
<p>
<pre>
public class java.io.PipedReader extends java.io.Reader {
  // Constructors
  public PipedReader();
  public PipedReader(PipedWriter src);
  // Instance Methods
  public void close();
  public void connect(PipedWriter src);
  public int read(char[] cbuf, int off, int len);
}
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.342">Constructors</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.336">PipedReader</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.419">public PipedReader ()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>PipedReader</tt> 
that is not connected to a <tt class=literal>PipedWriter</tt>. 
The created object must be connected to a <tt class=literal>PipedWriter</tt> 
before it can be used. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.420">public PipedReader(PipedWriter src) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>src</tt><br>
<dd>

<p class=para>
The <tt class=literal>PipedWriter</tt> 
to connect. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt> <br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>PipedReader</tt> 
that receives data from the given <tt class=literal>PipedWriter</tt>. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.343">Instance Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.337">close</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.421">public void close() throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt> <br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>Reader.close()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method closes the reader and releases the system resources that are 
associated with it. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.338">connect</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.422">public void connect(PipedWriter src) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>src</tt><br>
<dd>

<p class=para>
The <tt class=literal>PipedWriter</tt> 
to connect. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt> <br>
<dd>

<p class=para>
If another 
<tt class=literal>PipedWriter</tt> is already connected 
to this <tt class=literal>PipedReader</tt>. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method connects the given <tt class=literal>PipedWriter</tt> 
to this <tt class=literal>PipedReader</tt> 
object. If there is already a connected <tt class=literal>PipedWriter</tt>, 
an exception is thrown. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.339">read</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.423">public int read(char[] cbuf, int off, int len) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>cbuf</tt><br>
<dd>

<p class=para>
An array of characters to be filled.

<p>
<dt class=varlistentry><tt class=literal>off</tt><br>
<dd>

<p class=para>
An offset into the array.

<p>
<dt class=varlistentry><tt class=literal>len</tt><br>
<dd>

<p class=para>
The number of characters to read. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The actual number of characters read or <tt class=literal>-1</tt> if the end of the stream is 
encountered immediately. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If the pipe is broken. In other words, if this
<tt class=literal>PipedReader</tt> is closed or if the connected
<tt class=literal>PipedWriter</tt> is dead.

<p>
<dt class=varlistentry><tt class=literal>InterruptedIOException</tt><br>
<dd>

<p class=para>
While this method is waiting for input, if the
<tt class=literal>interrupted()</tt> method of the thread that invoked
this method is called.</DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>Reader.read(char[], int, int)</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method copies characters from the pipe buffer into the given array 
<tt class=literal>cbuf</tt>, starting at index <tt class=literal>off</tt> 
and continuing for <tt class=literal>len</tt> characters. 
If there is at least one character in the buffer, the method returns as 
many characters as are in the buffer (up to <tt class=literal>len</tt>). 
If the buffer is empty, the method blocks until data is written to the 
connected <tt class=literal>PipedWriter</tt>. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.344">Inherited Methods</A></h2>

<div class=informaltable>
<p>
<table class=INFORMALTABLE>
<tr class=row>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>clone()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>equals(Object)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>finalize()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>getClass()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>hashCode()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>mark(int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Reader</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>markSupported()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Reader</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>notify()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>notifyAll()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>read()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Reader</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>read(char[])</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Reader</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>reset()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Reader</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>skip(long)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Reader</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>toString()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>wait()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long, int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">&nbsp;</TD>
<td align="LEFT">&nbsp;</TD>
</TR>
</TABLE>
<p>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.345">See Also</A></h2>

<p class=para>
<tt class=literal>IOException</tt>, 
<tt class=literal>PipedInputStream</tt>, 
<tt class=literal>PipedWriter</tt>, 
<tt class=literal>Reader</tt> 
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_49.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch11_51.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>PipedOutputStream</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>PipedWriter</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
