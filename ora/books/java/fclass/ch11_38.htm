<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 11] ObjectInput</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 16:38:34 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_37.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 11<br>The java.io Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch11_39.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=refnamediv>
<h1>ObjectInput</H1>

<h2>Name</H2>

ObjectInput

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.258">Synopsis</A></h2>

<dl class=variablelist>
<dt class=varlistentry>Interface Name:<br>
<dd>

<p class=para>
<tt class=literal>java.io.ObjectInput</tt>

<p>
<dt class=varlistentry>Super-interface:<br>
<dd>

<p class=para>
<tt class=literal>java.io.DataInput</tt>

<p>
<dt class=varlistentry>Immediate Sub-interfaces:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Implemented By:<br>
<dd>

<p class=para>
<tt class=literal>java.io.ObjectInputStream</tt>

<p>
<dt class=varlistentry>Availability:<br>
<dd>

<p class=para>
New as of JDK 1.1 </DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.259">Description</A></h2>

<p class=para>
The <tt class=literal>ObjectInput</tt> interface extends 
the <tt class=literal>DataInput</tt> interface for 
object serialization. While <tt class=literal>DataInput</tt> 
defines methods for reading primitive types from a stream, <tt class=literal>ObjectInput</tt> 
defines methods for reading objects and arrays of bytes. 

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.260">Interface Declaration</A></h2>

<div class=screen>
<p>
<pre>
public abstract interface java.io.ObjectInput extends java.io.DataInput {
  // Methods
  public abstract int available();
  public abstract void close();
  public abstract int read();
  public abstract int read(byte[] b);
  public abstract int read(byte[] b, int off, int len);
  public abstract Object readObject();
  public abstract long skip(long n);
}
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.261">Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.247">available</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.312">public abstract int available() throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The number of bytes that can be read without blocking. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the number of bytes that can be read from the stream 
without accessing a physical device, like a disk or a network. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.248">close</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.313">public abstract void close() throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method closes the stream and releases any system resources associated 
with it. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.249">read</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.314">public abstract int read() throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The <tt class=literal>next byte</tt> of data or <tt class=literal>-1</tt> if the end of the 
stream is encountered. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the next byte of data from the stream. The method blocks 
until the byte is read, the end of stream is detected, or an exception 
is thrown. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.315">public abstract int read(byte[] b) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>b</tt><br>
<dd>

<p class=para>
An array of bytes to 
be filled from the stream. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The actual number of bytes read or <tt class=literal>-1</tt> if the end of the stream is encountered 
immediately. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method reads bytes from the stream to fill the given array. The method 
blocks until some data is available. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.316"><div class=screen> <p> <pre> public abstract int read(byte[] b, int off, int len) throws IOException </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>b</tt><br>
<dd>

<p class=para>
An array of bytes to 
be filled from the stream.

<p>
<dt class=varlistentry><tt class=literal>off</tt><br>
<dd>

<p class=para>
An offset into the 
array.

<p>
<dt class=varlistentry><tt class=literal>len</tt><br>
<dd>

<p class=para>
The number of bytes to read. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The actual number of bytes read or <tt class=literal>-1</tt> if the end of the stream is encountered 
immediately. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method reads up to <tt class=literal>len</tt> 
bytes of input into the given array starting at index <tt class=literal>off</tt>. 
The method blocks until some data is available. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.250">readObject</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.317"><div class=screen> <p> <pre> public abstract Object readObject() throws ClassNotFoundException, IOException </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
An <tt class=literal>Object</tt> that has been deserialized from the stream. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>ClassNotFoundException</tt><br>
<dd>

<p class=para>
If the class of the serialized object cannot be found in the run-time environment.

<p>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method reads and returns an object instance from the stream; in 
other words, it deserializes an object from the stream. The class that 
implements this interface determines exactly how the object is to be read. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.251">skip</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.318">public abstract long skip(long n) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>n</tt><br>
<dd>

<p class=para>
The number of bytes to skip. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The actual number of bytes skipped. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method skips <tt class=literal>n</tt> bytes of input. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.262">Inherited Methods</A></h2>

<div class=informaltable>
<p>
<table class=INFORMALTABLE>
<tr class=row>
<th align="LEFT">Method</TH>
<th align="LEFT">Inherited From</TH>
<th align="LEFT">Method</TH>
<th align="LEFT">Inherited From</TH>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>readBoolean() </tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>readByte()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>readChar()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>readDouble()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>readFloat(byte[])</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>readFully(byte[])</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>readFully(byte[], 
int, int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>readInt()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>readLine()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>readLong()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>readShort()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>readUnsignedByte()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>readUnsignedChar()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>readUTF()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>skipBytes(int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>DataInput</tt></TD>
<td align="LEFT">&nbsp;</TD>
<td align="LEFT">&nbsp;</TD>
</TR>
</TABLE>
<p>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.263">See Also</A></h2>

<p class=para>
<tt class=literal>DataInput</tt>,
<tt class=literal>ObjectInputStream</tt>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_37.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch11_39.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>NotSerializableException</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>ObjectInputStream</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
