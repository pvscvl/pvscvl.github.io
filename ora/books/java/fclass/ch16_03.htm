<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 16] ChoiceFormat</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 17:29:49 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch16_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 16<br>The java.text Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch16_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=refnamediv>
<h1>ChoiceFormat</H1>

<h2>Name</H2>

ChoiceFormat

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch16-REFSECT1-AUTOID.16">Synopsis</A></h2>

<dl class=variablelist>
<dt class=varlistentry>Class Name:<br>
<dd>

<p class=para>
<tt class=literal>java.text.ChoiceFormat</tt>

<p>
<dt class=varlistentry>Superclass:<br>
<dd>

<p class=para>
<tt class=literal>java.text.NumberFormat</tt>

<p>
<dt class=varlistentry>Immediate Subclasses:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Interfaces Implemented:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Availability:<br>
<dd>

<p class=para>
New as of JDK 1.1 </DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch16-REFSECT1-AUTOID.17">Description</A></h2>

<p class=para>
The <tt class=literal>ChoiceFormat</tt> class is a 
concrete subclass of <tt class=literal>NumberFormat</tt> 
that maps numerical ranges to strings, or formats. <tt class=literal>ChoiceFormat</tt> 
objects are used most often by <tt class=literal>MessageFormat</tt> 
objects to handle plurals, verb agreement, and other such issues. 

<p class=para>
The ranges in a <tt class=literal>ChoiceFormat</tt> 
are specified as an ascending array of <tt class=literal>double</tt> 
values, where each number is the bottom end of a range. A value is mapped 
to a format when it falls within the range for that format. If the value 
does not fall in any of the ranges, it is mapped to the first or the last 
format, depending on whether the value is too low or too high. For example, 
consider the following code: 

<div class=screen>
<p>
<pre>
double[] limits = {1, 10, 100};
String[] labels = {"small", "medium", "large"}
ChoiceFormat cf = new ChoiceFormat(limits, labels);
</PRE>
</DIV>

<p class=para>
Any number greater than or equal to one and less than 10 is mapped to the 
format <tt class=literal>"small"</tt>. Any number greater than or equal to 10 and 
less than 100 is mapped to <tt class=literal>"medium"</tt>. Numbers greater than or 
equal to 100 are mapped to <tt class=literal>"large"</tt>.
Furthermore, numbers less 
than one are also mapped to <tt class=literal>"small"</tt>. 

<p class=para>
The <tt class=literal>nextDouble()</tt> and <tt class=literal>previousDouble()</tt> 
methods can generate <tt class=literal>double</tt> 
values that are higher or lower than other <tt class=literal>double</tt> 
values. These methods provide another way to specify the limits used by 
a <tt class=literal>ChoiceFormat</tt> object. 

<p class=para>
As shown above, you can create a <tt class=literal>ChoiceFormat</tt> 
object by specifying the limits and formats in two separate arrays. You 
can also create a <tt class=literal>ChoiceFormat</tt> 
object using a pattern string that specifies the limits and formats. The 
string is of the form: 

<div class=screen>
<p>
<pre>
[limit1]#[format1]|[limit2]#[format2]|...
</PRE>
</DIV>

<p class=para>
A <tt class=literal>&lt;</tt> character 
can be used in place of the <tt class=literal>#</tt> 
to indicate that the next higher number, as determined by <tt class=literal>nextDouble()</tt>, 
should be used as the limit. The <tt class=literal>toPattern()</tt> 
method can be used to generate the pattern string for an existing <tt class=literal>ChoiceFormat</tt> 
object. 

<p class=para>
Note that you create <tt class=literal>ChoiceFormat</tt> 
objects directly, rather than through factory methods. This is because 
<tt class=literal>ChoiceFormat</tt> does not implement 
any locale-specific behavior. To produce properly internationalized output, 
the formats for a <tt class=literal>ChoiceFormat</tt> 
should come from a <tt class=literal>ResourceBundle</tt> 
instead of being embedded in the code. 

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch16-REFSECT1-AUTOID.18">Class Summary</A></h2>

<div class=screen>
<p>
<pre>
public class java.text.ChoiceFormat extends java.text.NumberFormat {
  // Constructors
  public ChoiceFormat(String newPattern);
  public ChoiceFormat(double[] limits, String[] formats);
  // Class Methods
  public static final double nextDouble(double d);
  public static double nextDouble(double d, boolean positive);
  public static final double previousDouble(double d);
  // Instance Methods
  public void applyPattern(String newPattern);
  public Object clone();
  public boolean equals(Object obj);
  public StringBuffer format(double number, 
                      StringBuffer toAppendTo, FieldPosition status);
  public StringBuffer format(long number, 
                      StringBuffer toAppendTo, FieldPosition status);
  public Object[] getFormats();
  public double[] getLimits();
  public int hashCode();
  public Number parse(String text, ParsePosition status);
  public void setChoices(double[] limits, String[] formats);
  public String toPattern();
}
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch16-REFSECT1-AUTOID.19">Constructors</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch16-REFSECT2-AUTOID.28">ChoiceFormat</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.34">public ChoiceFormat(String newPattern)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>newPattern</tt><br>
<dd>

<p class=para>
The pattern string. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>ChoiceFormat</tt> 
that uses the limits and formats represented by the given pattern string. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.35">public ChoiceFormat(double[] limits, String[] formats)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>limits</tt><br>
<dd>

<p class=para>
An array of limits. 
Each element is the lower end of a range that runs up through, but not 
including, the next element.

<p>
<dt class=varlistentry><tt class=literal>formats</tt><br>
<dd>

<p class=para>
An array of format strings that correspond to the limit ranges. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>ChoiceFormat</tt> 
that uses the given limits and format strings </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch16-REFSECT1-AUTOID.20">Class Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch16-REFSECT2-AUTOID.29">nextDouble</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.36">public static final double nextDouble(double d)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>d</tt><br>
<dd>

<p class=para>
A <tt class=literal>double</tt> value. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The least <tt class=literal>double</tt> that 
is greater than <tt class=literal>d</tt>. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the least <tt class=literal>double</tt> 
greater than <tt class=literal>d</tt>. Calling this method is 
equivalent to <tt class=literal>nextDouble(d,</tt> 
<tt class=literal>true)</tt>. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.37">public static double nextDouble(double d, boolean positive)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>d</tt><br>
<dd>

<p class=para>
A <tt class=literal>double</tt> value.

<p>
<dt class=varlistentry><tt class=literal>positive</tt><br>
<dd>

<p class=para>
A <tt class=literal>boolean</tt> 
value that specifies whether to return the next higher or next lower value. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
If <tt class=literal>positive</tt> is <tt class=literal>true</tt>,
the least <tt class=literal>double</tt> that is greater than <tt class=literal>d</tt>.
If <tt class=literal>positive</tt> is <tt class=literal>false</tt>,
the greatest <tt class=literal>double</tt> that is less than <tt class=literal>d</tt>.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method finds the next higher or next lower <tt class=literal>double</tt> 
value from <tt class=literal>d</tt>, depending on 
the value of <tt class=literal>positive</tt>. 
If <tt class=literal>positive</tt> is <tt class=literal>true</tt>,
the method returns the least <tt class=literal>double</tt> 
greater than <tt class=literal>d</tt>. Otherwise, the method returns
the greatest <tt class=literal>double</tt> less than <tt class=literal>d</tt>.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch16-REFSECT2-AUTOID.30">previousDouble</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.38">public static final double previousDouble(double d)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>d</tt><br>
<dd>

<p class=para>
A <tt class=literal>double</tt> value. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The greatest <tt class=literal>double</tt> 
that is less than <tt class=literal>d</tt>. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the greatest <tt class=literal>double</tt> 
less than <tt class=literal>d</tt>.
Calling this method is 
equivalent to <tt class=literal>nextDouble(d,</tt> 
<tt class=literal>false)</tt>. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch16-REFSECT1-AUTOID.21">Instance Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch16-REFSECT2-AUTOID.31">applyPattern</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.39">public void applyPattern(String newPattern)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>newPattern</tt><br>
<dd>

<p class=para>
The pattern string. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method tells this <tt class=literal>ChoiceFormat</tt> 
to use the limits and formats represented by the given formatting pattern 
string. Pattern strings for <tt class=literal>ChoiceFormat</tt> objects
are described above in the class description.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch16-REFSECT2-AUTOID.32">clone</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.40">public Object clone()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
A copy of this <tt class=literal>ChoiceFormat</tt>. 

<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>NumberFormat.clone()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method creates a copy of this <tt class=literal>ChoiceFormat</tt> 
and returns it. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch16-REFSECT2-AUTOID.33">equals</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.41">public boolean equals(Object obj)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>obj</tt><br>
<dd>

<p class=para>
The object to be compared with this object. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if the objects are equal; 
<tt class=literal>false</tt> if they are not. 

<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>Format.equals()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns <tt class=literal>true</tt> if 
<tt class=literal>obj</tt> is an instance of <tt class=literal>ChoiceFormat</tt> 
and is equivalent to this <tt class=literal>ChoiceFormat</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch16-REFSECT2-AUTOID.34">format</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.42"><div class=screen> <p> <pre> public StringBuffer format(double number, StringBuffer toAppendTo, FieldPosition status) </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>number</tt><br>
<dd>

<p class=para>
The <tt class=literal>double</tt> value to be formatted.

<p>
<dt class=varlistentry><tt class=literal>toAppendTo</tt><br>
<dd>

<p class=para>
A <tt class=literal>StringBuffer</tt> 
on which to append the formatted information.

<p>
<dt class=varlistentry><tt class=literal>status</tt><br>
<dd>

<p class=para>
Ignored. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The given <tt class=literal>StringBuffer</tt> 
with the <tt class=literal>String</tt> corresponding to
the given number appended to it.

<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>NumberFormat.format(double,</tt> <tt class=literal>StringBuffer,</tt> <tt class=literal>FieldPosition)</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method formats the given number and appends the result to the given 
<tt class=literal>StringBuffer</tt>. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.43"><div class=screen> <p> <pre> public StringBuffer format(long number, StringBuffer toAppendTo, FieldPosition status) </PRE> </DIV></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>number</tt><br>
<dd>

<p class=para>
The <tt class=literal>long</tt> 
value to be formatted.

<p>
<dt class=varlistentry><tt class=literal>toAppendTo</tt><br>
<dd>

<p class=para>
A <tt class=literal>StringBuffer</tt> 
on which to append the formatted information.

<p>
<dt class=varlistentry><tt class=literal>status</tt><br>
<dd>

<p class=para>
Ignored. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The given <tt class=literal>StringBuffer</tt> 
with the <tt class=literal>String</tt> corresponding to
the given number appended to it.

<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>NumberFormat.format(long, 
StringBuffer, FieldPosition)</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method formats the given number and appends the result to the given 
<tt class=literal>StringBuffer</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch16-REFSECT2-AUTOID.35">getFormats</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.44">public Object[] getFormats()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
An array that contains the format strings. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns an array containing the current set of format strings. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch16-REFSECT2-AUTOID.36">getLimits</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.45">public double[] getLimits()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
An array that contains the limit values. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns an array that contains the current set of limits. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch16-REFSECT2-AUTOID.37">hashCode</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.46">public int hashCode()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
A hashcode for this object. 

<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>NumberFormat.hashCode()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns a hashcode for this <tt class=literal>ChoiceFormat</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch16-REFSECT2-AUTOID.38">parse</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.47">public Number parse(String text, ParsePosition status)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>text</tt><br>
<dd>

<p class=para>
The string to be parsed.

<p>
<dt class=varlistentry><tt class=literal>status</tt><br>
<dd>

<p class=para>
A <tt class=literal>ParsePosition</tt> 
object that can specify a position in the string. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
A <tt class=literal>Number</tt> object that encapsulates the value
that corresponds to the longest format string that matches the 
text that starts at the given position. If there is no
matching format string, the value <tt class=literal>Double.NaN</tt>
is returned.

<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>NumberFormat.parse(String, 
ParsePosition)</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method parses a number from the given string, starting from the given 
position. The method returns a <tt class=literal>Number</tt> object that encapsulates the value
that corresponds to the longest format string that matches the 
text starting at the given position. If there is no
matching format string, the method returns the 
value <tt class=literal>Double.NaN</tt>.

<p class=para>
If there is a matching format string, the index value of
the given <tt class=literal>ParsePosition</tt> 
object is incremented by the length of that format string.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch16-REFSECT2-AUTOID.39">setChoices</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.48">public void setChoices(double[] limits, String[] formats)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>limits</tt><br>
<dd>

<p class=para>
An array of limits. 
Each element is the lower end of a range that runs up through, but not 
including, the next element.

<p>
<dt class=varlistentry><tt class=literal>formats</tt><br>
<dd>

<p class=para>
An array of format strings that correspond to the limit ranges. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method sets the limits and format strings that this <tt class=literal>ChoiceFormat</tt> 
uses. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch16-REFSECT2-AUTOID.40">toPattern</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch16-REFSECT3-AUTOID.49">public String toPattern()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The pattern string of this <tt class=literal>ChoiceFormat</tt>. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns a string that represents the limits and format strings 
of this <tt class=literal>ChoiceFormat</tt>. Pattern strings for <tt class=literal>ChoiceFormat</tt> objects
are described above in the class description.</DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch16-REFSECT1-AUTOID.22">Inherited Methods</A></h2>

<div class=informaltable>
<p>
<table class=INFORMALTABLE>
<tr class=row>
<th align="LEFT">Method</TH>
<th align="LEFT">Inherited From</TH>
<th align="LEFT">Method</TH>
<th align="LEFT">Inherited From</TH>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>finalize()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>format(double)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>format(long number)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>format(Object, StringBuffer, FieldPosition)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>getClass()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>getMaximumFractionDigits()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>getMaximumIntegerDigits()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>getMinimumFractionDigits()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>getMinimumIntegerDigits()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>isGroupingUsed()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>isParseIntegerOnly()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>notify()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>notifyAll()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>parse(String)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>parseObject(String)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Format</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>parseObject(String, ParsePosition)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>setGroupingUsed(boolean)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>setMaximumFractionDigits(int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>setMaximumIntegerDigits(int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>setMinimumFractionDigits(int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>setMinimumIntegerDigits(int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>setParseIntegerOnly(boolean)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>NumberFormat</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>toString()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>wait()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long, int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
</TABLE>
<p>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch16-REFSECT1-AUTOID.23">See Also</A></h2>

<p class=para>
<tt class=literal>FieldPosition</tt>, 
<tt class=literal>MessageFormat</tt>, 
<tt class=literal>Number</tt>, 
<tt class=literal>NumberFormat</tt>, 
<tt class=literal>ParsePosition</tt>, 
<tt class=literal>ResourceBundle</tt>, 
<tt class=literal>String</tt>, 
<tt class=literal>StringBuffer</tt> 
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch16_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch16_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>CharacterIterator</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>CollationElementIterator</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
