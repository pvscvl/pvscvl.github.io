<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 11] FilterInputStream</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 16:37:05 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_23.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 11<br>The java.io Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch11_25.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=refnamediv>
<h1>FilterInputStream</H1>

<h2>Name</H2>

FilterInputStream

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.160">Synopsis</A></h2>

<dl class=variablelist>
<dt class=varlistentry>Class Name:<br>
<dd>

<p class=para>
<tt class=literal>java.io.FilterInputStream</tt>

<p>
<dt class=varlistentry>Superclass:<br>
<dd>

<p class=para>
<tt class=literal>java.io.InputStream</tt>

<p>
<dt class=varlistentry>Immediate Subclasses:<br>
<dd>

<p class=para>
<tt class=literal>java.io.BufferedInputStream</tt>,

<p class=para>
<tt class=literal>java.io.DataInputStream</tt>,

<p class=para>
<tt class=literal>java.io.LineNumberInputStream</tt>,

<p class=para>
<tt class=literal>java.io.PushbackInputStream</tt>,

<p class=para>
<tt class=literal>java.util.zip.CheckedInputStream</tt>,

<p class=para>
<tt class=literal>java.util.zip.InflaterInputStream</tt>

<p>
<dt class=varlistentry>Interfaces Implemented:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Availability:<br>
<dd>

<p class=para>
JDK 1.0 or later</DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.161">Description</A></h2>

<p class=para>
The <tt class=literal>FilterInputStream</tt> class 
is the superclass of all of the input stream classes that filter input. 
Each of the subclasses of <tt class=literal>FilterInputStream</tt> 
works by wrapping an existing input stream, called the <i class=emphasis>underlying input 
stream</I>, and providing additional functionality. The methods of <tt class=literal>FilterInputStream</tt> 
simply override the methods of <tt class=literal>InputStream</tt> 
with versions that call the corresponding methods of the underlying stream. 

<p class=para>
<tt class=literal>FilterInputStream</tt> cannot be 
instantiated directly; it must be subclassed. An instance of one of the 
subclasses of <tt class=literal>FilterInputStream</tt> 
is constructed with another <tt class=literal>InputStream</tt> 
object. The methods of a subclass of <tt class=literal>FilterInputStream</tt> 
should override some methods in order to extend their behavior or 
provide some sort of filtering. 

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.162">Class Summary</A></h2>

<div class=screen>
<p>
<pre>
public class java.io.FilterInputStream extends java.io.InputStream {
  // Variables
  protected InputStream in;
  // Constructors
  protected FilterInputStream(InputStream in);
  // Instance Methods
  public int available();
  public void close();
  public synchronized void mark(int readlimit);
  public boolean markSupported();
  public int read();
  public int read(byte[] b);
  public int read(byte[] b, int off, int len);
  public synchronized void reset();
  public long skip(long n);
}
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.163">Variables</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.182">in</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.228">protected InputStream in</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
The underlying stream that this <tt class=literal>FilterInputStream</tt> 
wraps or filters. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.164">Constructors</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.183">FilterInputStream</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.229">protected FilterInputStream(InputStream in)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>in</tt><br>
<dd>

<p class=para>
The input stream to 
filter. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>FilterInputStream</tt> 
that gets its data from <tt class=literal>in</tt>. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.165">Instance Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.184">available</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.230">public int available() throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The number of bytes that can be read without blocking. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt> <br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>InputStream.available()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method calls the <tt class=literal>available()</tt> 
method of the underlying stream and returns the result. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.185">close</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.231">public void close() throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt> <br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>InputStream.close()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method calls the <tt class=literal>close()</tt> 
method of the underlying stream, which releases any system resources associated 
with this object. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.186">mark</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.232">public synchronized void mark(int readlimit)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>readlimit</tt><br>
<dd>

<p class=para>
The maximum number 
of bytes that can be read before the saved position becomes invalid. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>InputStream.mark()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method calls the <tt class=literal>mark()</tt> 
method of the underlying stream. If the underlying stream supports <tt class=literal>mark()</tt> 
and <tt class=literal>reset()</tt>, this method causes 
the <tt class=literal>FilterInputStream</tt> 
to remember its current position. A subsequent call to <tt class=literal>reset()</tt> 
causes the object to return to that saved position, and thus re-read a 
portion of the input. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.187">markSupported</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.233">public boolean markSupported()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if this stream supports 
<tt class=literal>mark()</tt> and <tt class=literal>reset()</tt>; 
<tt class=literal>false</tt> otherwise. 

<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>InputStream.markSupported()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method calls the <tt class=literal>markSupported()</tt> 
method of the underlying stream and returns the result. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.188">read</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.234">public int read() throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The next byte of data or <tt class=literal>-1</tt> if the end of the stream is encountered. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>InputStream.read()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method calls the <tt class=literal>read()</tt> 
method of the underlying stream and returns the result. This method blocks 
until some data is available, the end of the stream is detected, or an 
exception is thrown. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.235">public int read(byte[] b) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>b</tt><br>
<dd>

<p class=para>
An array of bytes to 
be filled from the stream. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The actual number of bytes read or <tt class=literal>-1</tt> if the end of the stream is encountered 
immediately. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>InputStream.read(byte[])</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method reads bytes of input to fill the given array. It does this 
by calling <tt class=literal>read(b,</tt> <tt class=literal>0,</tt> 
<tt class=literal>b.length)</tt>, 
which allows subclasses to only override <tt class=literal>read(byte[],</tt> 
<tt class=literal>int,</tt> <tt class=literal>int)</tt> 
and have <tt class=literal>read(byte[])</tt> work 
automatically. The method blocks until some data is available. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.236">public int read(byte[] b, int off, int len) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>b</tt><br>
<dd>

<p class=para>
An array of bytes to be filled from the stream.

<p>
<dt class=varlistentry><tt class=literal>off</tt><br>
<dd>

<p class=para>
An offset into the byte array.

<p>
<dt class=varlistentry><tt class=literal>len</tt><br>
<dd>

<p class=para>
The number of bytes to read. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The actual number of bytes read or <tt class=literal>-1</tt> if the end of the stream is encountered 
immediately. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>InputStream.read(byte[], int, int)</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method reads up to <tt class=literal>len</tt> 
bytes of input into the given array starting at index <tt class=literal>off</tt>. 
It does this by calling the <tt class=literal>read(byte[],</tt> 
<tt class=literal>int,</tt> <tt class=literal>int)</tt> 
method of the underlying stream and returning the result. The method blocks 
until some data is available. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.189">reset</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.237">public synchronized void reset() throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If there was 
no previous call to the <tt class=literal>mark()</tt> 
method or the saved position has been invalidated. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>InputStream.reset()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method calls the <tt class=literal>reset()</tt> 
method of the underlying stream. If the underlying stream supports <tt class=literal>mark()</tt> 
and <tt class=literal>reset()</tt>, this method sets 
the position of the <tt class=literal>FilterInputStream</tt> 
to a position that was saved by a previous call to <tt class=literal>mark()</tt>. 
Subsequent bytes read from this <tt class=literal>FilterInputStream</tt> 
will begin from the saved position and continue normally. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch11-REFSECT2-AUTOID.190">skip</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch11-REFSECT3-AUTOID.238">public long skip(long n) throws IOException</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>n</tt><br>
<dd>

<p class=para>
The number of bytes to 
skip. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The actual number of bytes skipped. 

<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IOException</tt><br>
<dd>

<p class=para>
If any kind 
of I/O error occurs. </DL>
<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>InputStream.skip()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method skips <tt class=literal>n</tt> bytes of 
input. It calls the <tt class=literal>skip()</tt> 
method of the underlying stream. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.166">Inherited Methods</A></h2>

<div class=informaltable>
<p>
<table class=INFORMALTABLE>
<tr class=row>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
<th align="LEFT">

<p class=para>
Method</TH>
<th align="LEFT">

<p class=para>
Inherited From</TH>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>clone()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>equals(Object)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>finalize()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>getClass()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>hashCode()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>notify()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>notifyAll()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>toString()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>wait()</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>wait(long, int)</tt></TD>
<td align="LEFT">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="LEFT">&nbsp;</TD>
<td align="LEFT">&nbsp;</TD>
</TR>
</TABLE>
<p>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch11-REFSECT1-AUTOID.167">See Also</A></h2>

<p class=para>
<tt class=literal>BufferedInputStream</tt>, 
<tt class=literal>CheckedInputStream</tt>, 
<tt class=literal>DataInputStream</tt>, 
<tt class=literal>FilterInputStream</tt>, 
<tt class=literal>InflaterInputStream</tt>, 
<tt class=literal>InputStream</tt>, 
<tt class=literal>IOException</tt>, 
<tt class=literal>LineNumberInputStream</tt>, 
<tt class=literal>PushbackInputStream</tt> 
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_23.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch11_25.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>FileWriter</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>FilterOutputStream</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
