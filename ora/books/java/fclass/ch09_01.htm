<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 9] Security</TITLE>
<meta name="author" content="Mark Grand and Jonathan Knudsen">
<meta name="date" content="Fri Aug  8 16:18:08 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java Fundamental Classes Reference">
<meta http-equiv="Content-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Fundamental Classes Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch08_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 9</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch09_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<h1 class=chapter><a class="TITLE" name="JFC-CH-9">9. Security</A></H1>

<div class=htmltoc>

<p>
<b>Contents:</b><br>
SecurityManager<br>
<a href="ch09_02.htm">ClassLoader</A><br>

<p>
</DIV>

<p class=para>
Java uses a "sandbox" security model to ensure that applets 
cannot cause security problems. The idea is that an applet can do whatever 
it wants within the constraints of its sandbox, but that nothing done 
inside the sandbox has any consequences outside of the sandbox. <a name="CH09.SEC"></A>

<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JFC-CH-9-SECT-1">9.1 SecurityManager</A></h2>

<p class=para>
<a name="CH09.SEC2"></A>Java implements the sandbox model using the
<tt class=literal>java.lang.SecurityManager</tt> class. An instance of
<tt class=literal>SecurityManager</tt> is passed to the method
<tt class=literal>System.setSecurityManager()</tt> to establish the
security policy for an application. Before
<tt class=literal>setSecurityManager()</tt> is called, a Java program can
access any resources available on the system.  After
<tt class=literal>setSecurityManager()</tt> is called, however, the
<tt class=literal>SecurityManager</tt> object is responsible for providing
a security policy. Once a security policy has been set by calling
<tt class=literal>setSecurityManager</tt>, the method cannot be called
again. Subsequent calls simply throw a
<tt class=literal>SecurityException</tt>.

<p class=para>
All methods in the Java API that can access resources outside of the
Java environment call a <tt class=literal>SecurityManager</tt> method to
ask permission before doing anything. If the
<tt class=literal>SecurityManager</tt> method throws a
<tt class=literal>SecurityException</tt>, the exception is thrown out of
the calling method, and access to the resource is denied. The
<tt class=literal>SecurityManager</tt> class defines a number of methods
for asking for permission to access specific resources. Each of these
methods has a name that begins with the word "check."
<a href="#JFC-CH-9-TAB-1">Table 9.1</A> shows the names of the
<tt class=literal>check</tt> methods provided by the
<tt class=literal>SecurityManager</tt> class.

<p>
<div class=table>
<table border>
<caption><a class="TITLE" name="JFC-CH-9-TAB-1">Table 9.1: The Check Methods of SecurityManager</A></CAPTION>
<tr class=row>
<th align="LEFT">

<p class=para>
Method Name</TH>
<th align="LEFT">

<p class=para>
Permission</TH>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkAccept()</tt></TD>
<td align="LEFT">

<p class=para>
To accept a network connection</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkAccess()</tt></TD>
<td align="LEFT">

<p class=para>
To modify a <tt class=literal>Thread</tt> or <tt class=literal>ThreadGroup</tt></TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkAwtEventQueueAccess()</tt></TD>
<td align="LEFT">

<p class=para>
To access the AWT event queue</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkConnect()</tt></TD>
<td align="LEFT">

<p class=para>
To establish a network connection or send a datagram</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkCreateClassLoader()</tt></TD>
<td align="LEFT">

<p class=para>
To create a <tt class=literal>ClassLoader</tt> object</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkDelete()</tt></TD>
<td align="LEFT">

<p class=para>
To delete a file</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkExec()</tt></TD>
<td align="LEFT">

<p class=para>
To call an external program</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkExit()</tt></TD>
<td align="LEFT">

<p class=para>
To stop the Java virtual machine and exit the Java environment</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkLink()</tt></TD>
<td align="LEFT">

<p class=para>
To dynamically link an external library into the Java environment</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkListen()</tt></TD>
<td align="LEFT">

<p class=para>
To listen for a network connection</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkMemberAccess()</tt></TD>
<td align="LEFT">

<p class=para>
To access the members of a class</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkMulticast()</tt></TD>
<td align="LEFT">

<p class=para>
To use a multicast connection</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkPackageAccess()</tt></TD>
<td align="LEFT">

<p class=para>
To access the classes in a package</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkPackageDefinition()</tt></TD>
<td align="LEFT">

<p class=para>
To define classes in a package</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkPrintJobAccess()</tt></TD>
<td align="LEFT">

<p class=para>
To initiate a print job request</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkPropertiesAccess()</tt></TD>
<td align="LEFT">

<p class=para>
To get or set the <tt class=literal>Properties</tt> 
object that defines all of the system properties</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkPropertyAccess()</tt></TD>
<td align="LEFT">

<p class=para>
To get or set a system property</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkRead()</tt></TD>
<td align="LEFT">

<p class=para>
To read from a file or input stream</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkSecurityAccess()</tt></TD>
<td align="LEFT">

<p class=para>
To perform a security action</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkSetFactory()</tt></TD>
<td align="LEFT">

<p class=para>
To set a factory class that determines classes to be used for managing 
network connections and their content</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkSystemClipboardAccess()</tt></TD>
<td align="LEFT">

<p class=para>
To access the system clipboard</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkTopLevelWindow()</tt></TD>
<td align="LEFT">

<p class=para>
To create a top-level window on the screen</TD>
</TR>
<tr class=row>
<td align="LEFT">

<p class=para>
<tt class=literal>checkWrite()</tt></TD>
<td align="LEFT">

<p class=para>
To write to a file or output stream</TD>
</TR>
</TABLE>
<p>
</DIV>
<p class=para>
The <tt class=literal>SecurityManager</tt> class provides 
implementations of these methods that always refuse the requested permission. 
To implement a more permissive security policy, you need to create a subclass 
of <tt class=literal>SecurityManager</tt> that implements 
that policy. 

<p class=para>
In Java 1.0, most browsers consider an applet to be trusted or untrusted. 
An untrusted applet is one that does not come from the local filesystem. 
An untrusted applet is treated as follows by most popular browsers: 

<p>
<ul class=itemizedlist>
<li class=listitem>It can establish network connections to the network address from which 
it came. 

<p>
<li class=listitem>It can create new windows on the screen. However, a notice is displayed 
on the bottom of the window that the window was created by an untrusted 
applet. 

<p>
<li class=listitem>It cannot access any other external resources. In particular, untrusted 
applets cannot access local files. 

<p>
</UL>
<p class=para>
As of Java 1.1, an applet can have a digital signature attached to it. 
When an applet has been signed by a trusted entity, a browser may consider 
the applet to be trusted and relax its security policy. 

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch08_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch09_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>URL Objects</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>ClassLoader</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
