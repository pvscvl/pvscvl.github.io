<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 25] 25.17 java.lang.Double (JDK 1.0)</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:26:44 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch25_16.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 25<br>The java.lang Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch25_18.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-25-SECT-17">25.17 java.lang.Double (JDK 1.0)</A></h2>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-25-SECT-17.1"></A></h3>
</DIV>

<p class=para>
This class provides an immutable object wrapper around the
<tt class=literal>double</tt> primitive data type.  <tt class=literal>valueOf()</tt> converts a
string to a <tt class=literal>Double</tt>, <tt class=literal>doubleValue()</tt> returns
the primitive <tt class=literal>double</tt> value of a <tt class=literal>Double</tt>
object, and there are other methods for returning a
<tt class=literal>Double</tt> value as a variety of other primitive types.

<p class=para>
This class also provides some useful constants and static
methods for testing <tt class=literal>double</tt> values.
<tt class=literal>MIN_VALUE</tt> and <tt class=literal>MAX_VALUE</tt> are the smallest
(closest to zero) and largest representable <tt class=literal>double</tt>
values. <tt class=literal>isInfinite()</tt> in class method and instance
method forms tests whether a <tt class=literal>double</tt> or a
<tt class=literal>Double</tt> has an infinite value. Similarly,
<tt class=literal>isNaN()</tt> tests whether a <tt class=literal>double</tt> or
<tt class=literal>Double</tt> is not-a-number--this is a comparison that
cannot be done directly because the <tt class=literal>NaN</tt> constant
never tests equal to any other value, including itself.
<tt class=literal>doubleToLongBits()</tt> and <tt class=literal>longBitsToDouble()</tt>
allow you to manipulate the bit representation of a
<tt class=literal>double</tt> directly.

<div class=screen>
<p>
<pre>
public final class <tt class=literal>Double</tt> extends Number {
    // <tt class=literal>Public Constructors</tt>
            public <tt class=literal>Double</tt>(double <tt class=literal>value</tt>);
            public <tt class=literal>Double</tt>(String <tt class=literal>s</tt>) throws NumberFormatException;
    // <tt class=literal>Constants</tt>
            public static final double <tt class=literal>MAX_VALUE</tt>;
            public static final double <tt class=literal>MIN_VALUE</tt>;
            public static final double <tt class=literal>NEGATIVE_INFINITY</tt>;
            public static final double <tt class=literal>NaN</tt>;
            public static final double <tt class=literal>POSITIVE_INFINITY</tt>;
        <b>1.1</b>public static final Class <tt class=literal>TYPE</tt>;
    // <tt class=literal>Class Methods</tt>
            public static native long <tt class=literal>doubleToLongBits</tt>(double <tt class=literal>value</tt>);
            public static boolean <tt class=literal>isInfinite</tt>(double <tt class=literal>v</tt>);
            public static boolean <tt class=literal>isNaN</tt>(double <tt class=literal>v</tt>);
            public static native double <tt class=literal>longBitsToDouble</tt>(long <tt class=literal>bits</tt>);
            public static String <tt class=literal>toString</tt>(double <tt class=literal>d</tt>);
            public static Double <tt class=literal>valueOf</tt>(String <tt class=literal>s</tt>) throws NumberFormatException;
    // <tt class=literal>Public Instance Methods</tt>
        <b>1.1</b>public byte <tt class=literal>byteValue</tt>();  //<tt class=literal> Overrides Number</tt>
            public double <tt class=literal>doubleValue</tt>();  //<tt class=literal> Defines Number</tt>
            public boolean <tt class=literal>equals</tt>(Object <tt class=literal>obj</tt>);  //<tt class=literal> Overrides Object</tt>
            public float <tt class=literal>floatValue</tt>();  //<tt class=literal> Defines Number</tt>
            public int <tt class=literal>hashCode</tt>();  //<tt class=literal> Overrides Object</tt>
            public int <tt class=literal>intValue</tt>();  //<tt class=literal> Defines Number</tt>
            public boolean <tt class=literal>isInfinite</tt>();
            public boolean <tt class=literal>isNaN</tt>();
            public long <tt class=literal>longValue</tt>();  //<tt class=literal> Defines Number</tt>
        <b>1.1</b>public short <tt class=literal>shortValue</tt>();  //<tt class=literal> Overrides Number</tt>
            public String <tt class=literal>toString</tt>();  //<tt class=literal> Overrides Object</tt>
}
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-25-SECT-17.2">Hierarchy:</A></h3>

<p class=para>
Object->Number(Serializable)->Double

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-25-SECT-17.3">Returned By:</A></h3>

<p class=para>
Double.valueOf()

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch25_16.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch25_18.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.lang.Compiler (JDK 1.0)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.lang.Error (JDK 1.0)</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
