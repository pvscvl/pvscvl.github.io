<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 24] 24.57 java.io.Reader (JDK 1.1)</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:22:57 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch24_56.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 24<br>The java.io Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch24_58.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-24-SECT-57">24.57 java.io.Reader (JDK 1.1)</A></h2>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-24-SECT-57.1"></A></h3>
</DIV>

<p class=para>
This abstract class is the superclass of all character input
streams.  It is an analog to <tt class=literal>InputStream</tt>, which is
the superclass of all byte input streams.  <tt class=literal>Reader</tt>
defines the basic methods that all character output streams
provide.

<p class=para>
<tt class=literal>read()</tt> returns a single character or an array (or
subarray) of characters, blocking if necessary.  It returns
<tt class=literal>-1</tt> if the end of the stream has been reached.
<tt class=literal>ready()</tt> returns <tt class=literal>true</tt> if there are characters
available for reading.  If <tt class=literal>ready()</tt> returns
<tt class=literal>true</tt>, the next call to <tt class=literal>read()</tt> is
guaranteed not to block.  <tt class=literal>close()</tt> closes the
character input stream.  <tt class=literal>skip()</tt> skips a specified
number of characters in the input stream.  If
<tt class=literal>markSupported()</tt> returns <tt class=literal>true</tt>, then
<tt class=literal>mark()</tt> "marks" a position in the stream and, if
necessary, creates a look-ahead buffer of the specified size.
Future calls to <tt class=literal>reset()</tt> restore the stream to
the marked position, if they occur within the specified
look-ahead limit.  Note that not all stream  types support
this mark-and-reset functionality.

<p class=para>
To create a subclass of <tt class=literal>Reader</tt>, you need only
implement the three-argument version of <tt class=literal>read()</tt> and
<tt class=literal>close()</tt>.  Most subclasses implement additional
methods as well, however.

<div class=screen>
<p>
<pre>
public abstract class <tt class=literal>Reader</tt> extends Object {
    // <tt class=literal>Protected Constructors</tt>
            protected <tt class=literal>Reader</tt>();
            protected <tt class=literal>Reader</tt>(Object <tt class=literal>lock</tt>);
    // <tt class=literal>Protected Instance Variables</tt>
            protected Object <tt class=literal>lock</tt>;
    // <tt class=literal>Public Instance Methods</tt>
            public abstract void <tt class=literal>close</tt>() throws IOException;
            public void <tt class=literal>mark</tt>(int <tt class=literal>readAheadLimit</tt>) throws IOException;
            public boolean <tt class=literal>markSupported</tt>();
            public int <tt class=literal>read</tt>() throws IOException;
            public int <tt class=literal>read</tt>(char[] <tt class=literal>cbuf</tt>) throws IOException;
            public abstract int <tt class=literal>read</tt>(char[] <tt class=literal>cbuf</tt>, int <tt class=literal>off</tt>, int <tt class=literal>len</tt>) throws IOException;
            public boolean <tt class=literal>ready</tt>() throws IOException;
            public void <tt class=literal>reset</tt>() throws IOException;
            public long <tt class=literal>skip</tt>(long <tt class=literal>n</tt>) throws IOException;
}
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-24-SECT-57.2">Extended By:</A></h3>

<p class=para>
BufferedReader, 
CharArrayReader, 
FilterReader, 
InputStreamReader, 
PipedReader, 
StringReader

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-24-SECT-57.3">Passed To:</A></h3>

<p class=para>
BufferedReader(), 
FilterReader(), 
LineNumberReader(), 
PushbackReader(), 
StreamTokenizer()

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-24-SECT-57.4">Type Of:</A></h3>

<p class=para>
FilterReader.in

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch24_56.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch24_58.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.io.RandomAccessFile (JDK 1.0)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.io.SequenceInputStream (JDK 1.0)</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
