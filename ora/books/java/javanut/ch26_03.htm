<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 26] 26.3 java.lang.reflect.Field (JDK 1.1)</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:28:54 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch26_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 26<br>The java.lang.reflect Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch26_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-26-SECT-3">26.3 java.lang.reflect.Field (JDK 1.1)</A></h2>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-26-SECT-3.1"></A></h3>
</DIV>

<p class=para>
This class represents a field of a class.  Instances of
<tt class=literal>Field</tt> are obtained by calling the <tt class=literal>getField()</tt>
and related methods of <tt class=literal>java.lang.Class</tt>.
<tt class=literal>Field</tt> implements the <tt class=literal>Member</tt> interface, so
once you have obtained a <tt class=literal>Field</tt> object, you can use
<tt class=literal>getName()</tt>, <tt class=literal>getModifiers()</tt>, and
<tt class=literal>getDeclaringClass()</tt> to determine the name,
modifiers, and class of the field.  Additionally,
<tt class=literal>getType()</tt> returns the type of the field.

<p class=para>
The <tt class=literal>set()</tt> method sets the value of the represented
field for a specified object to a given value.
(If the represented field is <tt class=literal>static</tt>, then no object
need be specified for it to be set upon, of course.)  If the
field is of a primitive type, its value can be specified
using a wrapper object of type <tt class=literal>Boolean</tt>,
<tt class=literal>Integer</tt>, and so on, or it can be set using the
<tt class=literal>setBoolean()</tt>, <tt class=literal>setInt()</tt>, and related
methods.

<p class=para>
Similarly, the <tt class=literal>get()</tt> method queries the value of the
represented field for a specified object and returns the
field value as an <tt class=literal>Object</tt>.  Various other methods
query the field value and return it as various primitive types.

<div class=screen>
<p>
<pre>
public final class <tt class=literal>Field</tt> extends Object implements Member {
    // <tt class=literal>No Constructor</tt>
    // <tt class=literal>Public Instance Methods</tt>
            public boolean <tt class=literal>equals</tt>(Object <tt class=literal>obj</tt>);  //<tt class=literal> Overrides Object</tt>
            public native Object <tt class=literal>get</tt>(Object <tt class=literal>obj</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native boolean <tt class=literal>getBoolean</tt>(Object <tt class=literal>obj</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native byte <tt class=literal>getByte</tt>(Object <tt class=literal>obj</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native char <tt class=literal>getChar</tt>(Object <tt class=literal>obj</tt>) throws IllegalArgumentException, IllegalAccessException;
            public Class <tt class=literal>getDeclaringClass</tt>();  //<tt class=literal> From Member</tt>
            public native double <tt class=literal>getDouble</tt>(Object <tt class=literal>obj</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native float <tt class=literal>getFloat</tt>(Object <tt class=literal>obj</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native int <tt class=literal>getInt</tt>(Object <tt class=literal>obj</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native long <tt class=literal>getLong</tt>(Object <tt class=literal>obj</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native int <tt class=literal>getModifiers</tt>();  //<tt class=literal> From Member</tt>
            public String <tt class=literal>getName</tt>();  //<tt class=literal> From Member</tt>
            public native short <tt class=literal>getShort</tt>(Object <tt class=literal>obj</tt>) throws IllegalArgumentException, IllegalAccessException;
            public Class <tt class=literal>getType</tt>();
            public int <tt class=literal>hashCode</tt>();  //<tt class=literal> Overrides Object</tt>
            public native void <tt class=literal>set</tt>(Object <tt class=literal>obj</tt>, Object <tt class=literal>value</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native void <tt class=literal>setBoolean</tt>(Object <tt class=literal>obj</tt>, boolean <tt class=literal>z</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native void <tt class=literal>setByte</tt>(Object <tt class=literal>obj</tt>, byte <tt class=literal>b</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native void <tt class=literal>setChar</tt>(Object <tt class=literal>obj</tt>, char <tt class=literal>c</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native void <tt class=literal>setDouble</tt>(Object <tt class=literal>obj</tt>, double <tt class=literal>d</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native void <tt class=literal>setFloat</tt>(Object <tt class=literal>obj</tt>, float <tt class=literal>f</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native void <tt class=literal>setInt</tt>(Object <tt class=literal>obj</tt>, int <tt class=literal>i</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native void <tt class=literal>setLong</tt>(Object <tt class=literal>obj</tt>, long <tt class=literal>l</tt>) throws IllegalArgumentException, IllegalAccessException;
            public native void <tt class=literal>setShort</tt>(Object <tt class=literal>obj</tt>, short <tt class=literal>s</tt>) throws IllegalArgumentException, IllegalAccessException;
            public String <tt class=literal>toString</tt>();  //<tt class=literal> Overrides Object</tt>
}
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-26-SECT-3.2">Returned By:</A></h3>

<p class=para>
Class.getDeclaredField(), 
Class.getDeclaredFields(), 
Class.getField(), 
Class.getFields()

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch26_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch26_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.lang.reflect.Constructor (JDK 1.1)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.lang.reflect.InvocationTargetException (JDK 1.1)</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
