<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 6] 6.4 Handling Events</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 15:53:25 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch06_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 6<br>Applets</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch06_05.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-6-SECT-4">6.4 Handling Events</A></h2>

<p class=para>
<a name="CH6.EVENTS-1"></A>The previous two applets have only displayed output. If an
applet is to be interactive in any way, it has to receive
and respond to user input.
<a href="#JNUT2-CH-6-EX-3">Example 6.3</A>
shows a simple applet that lets the user do a freehand
sketch (or scribble) with the mouse.<a name="CH6.SCRIBBLING.A1"></A>
<a href="#JNUT2-CH-6-FIG-3">Figure 6.3</A>
shows such a scribble.

<div class=figure>
<h4 class=figure><a class="TITLE" name="JNUT2-CH-6-FIG-3">Figure 6.3: Scribbling with the scribble applet</A></h4>


<p>
<img align=middle src="figs/jn2_0603.gif" alt="[Graphic: Figure 6-3]" width=464 height=432 border=0>

</DIV>

<p class=para>
<a name="CH6.MOUSE.EVENTS1"></A><a name="CH6.MOUSEDOWN1"></A><a name="CH6.MOUSEDRAG1"></A>The <tt class=literal>mouseDown()</tt> and <tt class=literal>mouseDrag()</tt> methods are
called by the system when the user presses a mouse button
and moves the mouse with the button down, respectively. This
very simple applet draws lines directly in response to these
events. It does not have a <tt class=literal>paint()</tt> method, which
means that the user's scribble is lost any time that the
applet is redrawn (for example, when a Web browser scrolls
down a page and then scrolls back up again).

<p class=para>
Note that both <tt class=literal>mouseDown()</tt> and <tt class=literal>mouseDrag()</tt>
return <tt class=literal>true</tt>. This is to tell the system that
they've handled the <tt class=literal>Event</tt> object that was passed to
them, and that the event should not be processed any further.

<p class=para>
The <tt class=literal>mouseDown()</tt> and <tt class=literal>mouseDrag()</tt> methods
shown here work in both Java 1.0 and Java 1.1, but they (and
related methods) have been deprecated in Java 1.1 and
replaced with a new, more flexible, event handling model.
Event processing is often the central task of applets and of
GUI-based applications, and is a big topic in its own right.
<a href="ch07_01.htm">Chapter 7, <i>Events</i></A> explains and demonstrates the Java 1.1 and 1.0
event processing models in more detail.

<div class=example>
<h4 class=example><a class="TITLE" name="JNUT2-CH-6-EX-3">Example 6.3: The Scribble Applet</A></h4>

<div class=screen>
<p>
<pre>
import java.applet.*;
import java.awt.*;
public class Scribble extends Applet {
  private int last_x = 0, last_y = 0;  // Fields to store a point in.
  // Called when the user clicks.
  public boolean mouseDown(Event e, int x, int y) {
    last_x = x; last_y = y;            // Remember the location of the click.
    return true;
  }
  // Called when the mouse moves with the button down.
  public boolean mouseDrag(Event e, int x, int y)  {
    Graphics g = getGraphics();        // Get a Graphics to draw with.
    g.drawLine(last_x, last_y, x, y);  // Draw a line from last point to this.
    last_x = x; last_y = y;            // And update the saved location.
    return true;
  }
}
</PRE>
</DIV>

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch06_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch06_05.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Drawing Graphics</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Reading Applet Parameters</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
