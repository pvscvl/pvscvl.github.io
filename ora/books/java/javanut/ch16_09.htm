<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 16] jdb</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:04:28 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch16_08.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 16<br>JDK Tools</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch16_10.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<a name="CH16.JDB.JAVA.DE1"></A>

<div class=refnamediv>
<h1>jdb</H1>

<h2>Name</H2>

jdb---The Java Debugger

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JNUT2-CH-16-SECT-9.1">Availability</A></h2>

<p class=para>
JDK 1.0 and later.

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JNUT2-CH-16-SECT-9.2">Synopsis</A></h2>

<div class=screen>
<p>
<pre>
jdb [ <i class=emphasis>java options</I> ] <i class=emphasis>class</I>
jdb [ -host <i class=emphasis>hostname</I> ] -password <i class=emphasis>password</I>
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JNUT2-CH-16-SECT-9.3">Description</A></h2>

<p class=para>
<i class=emphasis>jdb</I> is a debugger for Java classes.  It is
text-based, command-line oriented, and has a command syntax
like that of the UNIX <i class=emphasis>dbx</I> or <i class=emphasis>gdb</I> debuggers.

<p class=para>
When <i class=emphasis>jdb</I> is invoked with the name of a Java class, it
starts another copy of the <i class=emphasis>java</I> interpreter, passing
any specified <i class=emphasis>java</I> options to the interpreter. <i class=emphasis>jdb</I>
is itself a Java program, running in its own
copy of the interpreter. This new interpreter loads the
specified class file and stops for debugging before
executing the first Java byte-code.

<p class=para>
<i class=emphasis>jdb</I> may also be started with the <tt class=literal>-password</tt> and
optional <tt class=literal>-host</tt> arguments.  Invoked in this way,
<i class=emphasis>jdb</I> "attaches itself" to an already running copy of
the interpreter.  In order for this to work, the Java
interpreter running the program to be debugged must have
been started with the <tt class=literal>-debug</tt> option.  When the
interpreter is started with this option, it prints a
password that must be used with the <i class=emphasis>jdb</I>
<tt class=literal>-password</tt> option.

<p class=para>
Once a debugging session is started, you may issue any of
the commands described below.

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JNUT2-CH-16-SECT-9.4">Options</A></h2>

<p class=para>
When invoking <i class=emphasis>jdb</I> with a specified class file, any of
the <i class=emphasis>java</I> interpreter options may be specified.  See
the <i class=emphasis>java</I> reference page for an explanation of these
options.

<p class=para>
When attaching <i class=emphasis>jdb</I> to an already running Java
interpreter, the following options are available:

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>-host</tt> <i class=emphasis>hostname</I><br>
<dd>

<p class=para>
Specifies the name of the host upon which the desired
interpreter session is running.

<p>
<dt class=varlistentry><tt class=literal>-password</tt> <i class=emphasis>password</I><br>
<dd>

<p class=para>
This option is required to attach to a running interpreter.
The interpreter must have been started with the
<tt class=literal>-debug</tt> option, and this <tt class=literal>-password</tt> option
specifies the password that the interpreter generated.  Only
a debugger that knows this password is allowed to
attach to the interpreter.  Note that the passwords
generated by <i class=emphasis>java</I> should not be considered
cryptologically secure.</DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JNUT2-CH-16-SECT-9.5">Commands</A></h2>

<p class=para>
<i class=emphasis>jdb</I> understands the following debugging commands:

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>!!</tt><br>
<dd>

<p class=para>
This is a shorthand command that is replaced with the text
of the last command entered.  It may be followed with
additional text that is appended to that previous command.

<p>
<dt class=varlistentry><tt class=literal>catch</tt> [ <i class=emphasis>exception class</I> ]<br>
<dd>

<p class=para>
Cause a breakpoint whenever the specified exception is
thrown.  If no exception is specified, the command lists the exceptions
currently being caught.  Use <tt class=literal>ignore</tt> to stop these
breakpoints from occurring.

<p>
<dt class=varlistentry><tt class=literal>classes</tt><br>
<dd>

<p class=para>
List all classes that have been loaded.

<p>
<dt class=varlistentry><tt class=literal>clear</tt> [ <i class=emphasis>class</I>:<i class=emphasis>line</I> ]<br>
<dd>

<p class=para>
Remove the breakpoint set at the specified line of the
specified class.  Typing <tt class=literal>clear</tt> or <tt class=literal>stop</tt> with
no arguments displays a list of current breakpoints and the
line numbers that they are set at.

<p>
<dt class=varlistentry><tt class=literal>cont</tt><br>
<dd>

<p class=para>
Resume execution.  This command should be used when the current
thread is stopped at a breakpoint.

<p>
<dt class=varlistentry><tt class=literal>down</tt> [ <i class=emphasis>n</I> ]<br>
<dd>

<p class=para>
Move down <tt class=literal>n</tt> frames in the call stack of the current
thread.  If <tt class=literal>n</tt> is not specified, move down one frame.

<p>
<dt class=varlistentry><tt class=literal>dump </tt><i class=emphasis>id(s)</I><br>
<dd>

<p class=para>
Print the value of all fields of the specified object or
objects.  If you specify the name of a class, <tt class=literal>dump</tt>
displays all class (static) methods and variables of the
class, and also displays the superclass and list of
implemented interfaces.  Objects and classes may be
specified by name or by their eight-digit hexadecimal ID
number.  Threads may also be specified with the shorthand
<tt class=literal>t@</tt><i class=emphasis>thread-number</I>. 

<p>
<dt class=varlistentry><tt class=literal>exit (or quit)</tt><br>
<dd>

<p class=para>
Quit <i class=emphasis>jdb</I>.

<p>
<dt class=varlistentry><tt class=literal>gc</tt><br>
<dd>

<p class=para>
Run the garbage collector to force unused objects to be reclaimed.

<p>
<dt class=varlistentry><tt class=literal>help (or ?)</tt><br>
<dd>

<p class=para>
Display a list of all <i class=emphasis>jdb</I> commands.

<p>
<dt class=varlistentry><tt class=literal>ignore</tt> <i class=emphasis>exception class</I><br>
<dd>

<p class=para>
Do not treat the specified exception as a breakpoint.
This command turns off a <tt class=literal>catch</tt> command.

<p>
<dt class=varlistentry><tt class=literal>list</tt> [ <i class=emphasis>line number</I> ]<br>
<dd>

<p class=para>
List the specified line of source code as well as several
lines that appear before and after it.  If no line number is
specified, use the line number of the current stack frame of
the current thread.  The lines listed are from the source
file of the current stack frame of the current thread.  Use
the <tt class=literal>use</tt> command to tell <i class=emphasis>jdb</I> where to find
source files.

<p>
<dt class=varlistentry><tt class=literal>load</tt> <i class=emphasis>classname</I><br>
<dd>

<p class=para>
Load the specified class into <i class=emphasis>jdb</I>.

<p>
<dt class=varlistentry><tt class=literal>locals</tt><br>
<dd>

<p class=para>
Display a list of local variables for the current stack
frame.  Java code must be compiled with the <tt class=literal>-g</tt>
option in order to contain local variable information.

<p>
<dt class=varlistentry><tt class=literal>memory</tt><br>
<dd>

<p class=para>
Display a summary of memory usage for the Java program being
debugged.

<p>
<dt class=varlistentry><tt class=literal>methods</tt> <i class=emphasis>class</I><br>
<dd>

<p class=para>
List all methods of the specified class.  Use <tt class=literal>dump</tt>
to list the instance variables or an object or the class
(static) variables of a class.

<p>
<dt class=varlistentry><tt class=literal>print</tt> <i class=emphasis>id(s)</I><br>
<dd>

<p class=para>
Print the value of the specified item or items.  Each item
may be a class, object, field, or local variable, and may be
specified by name or by eight-digit hexadecimal ID number.
You may also refer to threads with the special syntax
<tt class=literal>t@</tt><i class=emphasis>thread-number</I>.  The <tt class=literal>print</tt> command displays an object's value by invoking its
<tt class=literal>toString()</tt> method.

<p>
<dt class=varlistentry><tt class=literal>resume</tt> [ <i class=emphasis>thread(s)</I> ]<br>
<dd>

<p class=para>
Resume execution of the specified thread or threads.  If no
threads are specified, all suspended threads are resumed.
See also <tt class=literal>suspend</tt>.

<p>
<dt class=varlistentry><tt class=literal>run</tt> [ <i class=emphasis>class</I> ] [ <i class=emphasis>args</I> ]<br>
<dd>

<p class=para>
Run the <tt class=literal>main()</tt> method of the specified class,
passing the specified arguments to it.  If no class or
arguments are specified, use the class and arguments
specified on the <i class=emphasis>jdb</I> command line.

<p>
<dt class=varlistentry><tt class=literal>step</tt><br>
<dd>

<p class=para>
Run the current line of the current thread and stop again.

<p>
<dt class=varlistentry><tt class=literal>stop [ at</tt> <i class=emphasis>class</I>:<i class=emphasis>line</I> ]<br><tt class=literal>stop [ in</tt> <i class=emphasis>class</I>.<i class=emphasis>method</I> ]<br>
<dd>

<p class=para>
Set a breakpoint at the specified line of the specified
class or at the beginning of the specified method of the
specified class.  Program execution stops when it
reaches this line or enters the method.  If <tt class=literal>stop</tt> is
executed with no arguments, then it lists the current
breakpoints.

<p>
<dt class=varlistentry><tt class=literal>suspend</tt> [ <i class=emphasis>thread(s)</I> ]<br>
<dd>

<p class=para>
Suspend the specified thread or threads.  If no threads are
specified, suspend all running threads.  Use <tt class=literal>resume</tt>
to restart them.

<p>
<dt class=varlistentry><tt class=literal>thread</tt> <i class=emphasis>thread</I><br>
<dd>

<p class=para>
Set the current thread to the specified thread.  This thread
is used implicitly by a number of other <i class=emphasis>jdb</I>
commands.  The thread may be specified by name or number.

<p>
<dt class=varlistentry><tt class=literal>threadgroup</tt> <i class=emphasis>name</I><br>
<dd>

<p class=para>
Set the current thread group to the named thread group.

<p>
<dt class=varlistentry><tt class=literal>threadgroups</tt><br>
<dd>

<p class=para>
List all thread groups running in the Java interpreter
session being debugged.

<p>
<dt class=varlistentry><tt class=literal>threads</tt> [ <i class=emphasis>threadgroups</I> ]<br>
<dd>

<p class=para>
List all threads in the named thread group.  If no
thread group is specified, list all threads in the current
thread group (specified by <tt class=literal>threadgroup</tt>).

<p>
<dt class=varlistentry><tt class=literal>up</tt> [ <i class=emphasis>n</I> ]<br>
<dd>

<p class=para>
Move up <tt class=literal>n</tt> frames in the call stack of the current
thread.  If <tt class=literal>n</tt> is not specified, move up one frame.

<p>
<dt class=varlistentry><tt class=literal>use</tt> [ <i class=emphasis>source-file-path</I> ]<br>
<dd>

<p class=para>
Set the path used by <i class=emphasis>jdb</I> to look up source files for
the classes being debugged.  If no path is specified,
display the current source path being used.

<p>
<dt class=varlistentry><tt class=literal>where [</tt> <i class=emphasis>thread</I> <tt class=literal>] [ all ]</tt><br>
<dd>

<p class=para>
Display a stack trace for the specified thread.  If no
thread is specified, display a stack trace for the current
thread.  If <tt class=literal>all</tt> is specified, display a stack trace
for all threads.</DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JNUT2-CH-16-SECT-9.6">Environment</A></h2>

<dl class=variablelist>
<dt class=varlistentry><tt class=literal>CLASSPATH</tt><br>
<dd>

<p class=para>
Specifies an ordered list (colon-separated on UNIX,
semicolon-separated on Windows systems) of directories and
ZIP files in which <i class=emphasis>jdb</I> should look for class
definitions.  When a path is specified with this environment
variable, <i class=emphasis>jdb</I> always implicitly appends the location of
the system classes to the end of the path.  If this
environment variable is not specified, the default path
is the current directory and the system classes.  This
variable is overridden by the <tt class=literal>-classpath</tt> option.</DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JNUT2-CH-16-SECT-9.7">See Also</A></h2>

<p class=para>
<i class=emphasis>java</I>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch16_08.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch16_10.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>javap</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>native2ascii</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
