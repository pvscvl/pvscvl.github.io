<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 18] 18.16 java.awt.Container (JDK 1.0)</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:09:46 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch18_15.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 18<br>The java.awt Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch18_17.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-18-SECT-16">18.16 java.awt.Container (JDK 1.0)</A></h2>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-18-SECT-16.1"></A></h3>
</DIV>

<p class=para>
This class implements a component that can contain other components.
You cannot instantiate <tt class=literal>Container</tt> directly, but must
use one of its subclasses,
such as <tt class=literal>Panel</tt>, <tt class=literal>Frame</tt>, or <tt class=literal>Dialog</tt>.
Once a <tt class=literal>Container</tt> is created, you may set its <tt class=literal>LayoutManager</tt>
with <tt class=literal>setLayout()</tt>, add components to it with
<tt class=literal>add()</tt>, and remove them with <tt class=literal>remove()</tt>.
<tt class=literal>getComponents()</tt> returns an array of the components
contained in a <tt class=literal>Container</tt>. <tt class=literal>locate()</tt>
determines within which contained component a specified
point falls.  <tt class=literal>list()</tt> produces helpful debugging
output.

<div class=screen>
<p>
<pre>
public abstract class <tt class=literal>Container</tt> extends Component {
    // <tt class=literal>Protected Constructor</tt>
        <b>1.1</b>  protected <tt class=literal>Container</tt>();
    // <tt class=literal>Public Instance Methods</tt>
            public Component <tt class=literal>add</tt>(Component <tt class=literal>comp</tt>);
            public Component <tt class=literal>add</tt>(String <tt class=literal>name</tt>, Component <tt class=literal>comp</tt>);
            public Component <tt class=literal>add</tt>(Component <tt class=literal>comp</tt>, int <tt class=literal>index</tt>);
        <b>1.1</b>  public void <tt class=literal>add</tt>(Component <tt class=literal>comp</tt>, Object <tt class=literal>constraints</tt>);
        <b>1.1</b>  public void <tt class=literal>add</tt>(Component <tt class=literal>comp</tt>, Object <tt class=literal>constraints</tt>, int <tt class=literal>index</tt>);
        <b>1.1</b>  public void <tt class=literal>addContainerListener</tt>(ContainerListener <tt class=literal>l</tt>);
            public void <tt class=literal>addNotify</tt>();  //<tt class=literal> Overrides Component</tt>
        #   public int <tt class=literal>countComponents</tt>();
        #   public void <tt class=literal>deliverEvent</tt>(Event <tt class=literal>e</tt>);  //<tt class=literal> Overrides Component</tt>
        <b>1.1</b>  public void <tt class=literal>doLayout</tt>();  //<tt class=literal> Overrides Component</tt>
        <b>1.1</b>  public float <tt class=literal>getAlignmentX</tt>();  //<tt class=literal> Overrides Component</tt>
        <b>1.1</b>  public float <tt class=literal>getAlignmentY</tt>();  //<tt class=literal> Overrides Component</tt>
            public Component <tt class=literal>getComponent</tt>(int <tt class=literal>n</tt>);
        <b>1.1</b>  public Component <tt class=literal>getComponentAt</tt>(int <tt class=literal>x</tt>, int <tt class=literal>y</tt>);  //<tt class=literal> Overrides Component</tt>
        <b>1.1</b>  public Component <tt class=literal>getComponentAt</tt>(Point <tt class=literal>p</tt>);  //<tt class=literal> Overrides Component</tt>
        <b>1.1</b>  public int <tt class=literal>getComponentCount</tt>();
            public Component[] <tt class=literal>getComponents</tt>();
        <b>1.1</b>  public Insets <tt class=literal>getInsets</tt>();
            public LayoutManager <tt class=literal>getLayout</tt>();
        <b>1.1</b>  public Dimension <tt class=literal>getMaximumSize</tt>();  //<tt class=literal> Overrides Component</tt>
        <b>1.1</b>  public Dimension <tt class=literal>getMinimumSize</tt>();  //<tt class=literal> Overrides Component</tt>
        <b>1.1</b>  public Dimension <tt class=literal>getPreferredSize</tt>();  //<tt class=literal> Overrides Component</tt>
        #   public Insets <tt class=literal>insets</tt>();
        <b>1.1</b>  public void <tt class=literal>invalidate</tt>();  //<tt class=literal> Overrides Component</tt>
        <b>1.1</b>  public boolean <tt class=literal>isAncestorOf</tt>(Component <tt class=literal>c</tt>);
        #   public void <tt class=literal>layout</tt>();  //<tt class=literal> Overrides Component</tt>
            public void <tt class=literal>list</tt>(PrintStream <tt class=literal>out</tt>, int <tt class=literal>indent</tt>);  //<tt class=literal> Overrides Component</tt>
        <b>1.1</b>  public void <tt class=literal>list</tt>(PrintWriter <tt class=literal>out</tt>, int <tt class=literal>indent</tt>);  //<tt class=literal> Overrides Component</tt>
        #   public Component <tt class=literal>locate</tt>(int <tt class=literal>x</tt>, int <tt class=literal>y</tt>);  //<tt class=literal> Overrides Component</tt>
        #   public Dimension <tt class=literal>minimumSize</tt>();  //<tt class=literal> Overrides Component</tt>
        <b>1.1</b>  public void <tt class=literal>paint</tt>(Graphics <tt class=literal>g</tt>);  //<tt class=literal> Overrides Component</tt>
            public void <tt class=literal>paintComponents</tt>(Graphics <tt class=literal>g</tt>);
        #   public Dimension <tt class=literal>preferredSize</tt>();  //<tt class=literal> Overrides Component</tt>
        <b>1.1</b>  public void <tt class=literal>print</tt>(Graphics <tt class=literal>g</tt>);  //<tt class=literal> Overrides Component</tt>
            public void <tt class=literal>printComponents</tt>(Graphics <tt class=literal>g</tt>);
        <b>1.1</b>  public void <tt class=literal>remove</tt>(int <tt class=literal>index</tt>);
            public void <tt class=literal>remove</tt>(Component <tt class=literal>comp</tt>);
            public void <tt class=literal>removeAll</tt>();
        <b>1.1</b>  public void <tt class=literal>removeContainerListener</tt>(ContainerListener <tt class=literal>l</tt>);
            public void <tt class=literal>removeNotify</tt>();  //<tt class=literal> Overrides Component</tt>
            public void <tt class=literal>setLayout</tt>(LayoutManager <tt class=literal>mgr</tt>);
            public void <tt class=literal>validate</tt>();  //<tt class=literal> Overrides Component</tt>
    // <tt class=literal>Protected Instance Methods</tt>
        <b>1.1</b>  protected void <tt class=literal>addImpl</tt>(Component <tt class=literal>comp</tt>, Object <tt class=literal>constraints</tt>, int <tt class=literal>index</tt>);
            protected String <tt class=literal>paramString</tt>();  //<tt class=literal> Overrides Component</tt>
        <b>1.1</b>  protected void <tt class=literal>processContainerEvent</tt>(ContainerEvent <tt class=literal>e</tt>);
        <b>1.1</b>  protected void <tt class=literal>processEvent</tt>(AWTEvent <tt class=literal>e</tt>);  //<tt class=literal> Overrides Component</tt>
        <b>1.1</b>  protected void <tt class=literal>validateTree</tt>();
}
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-18-SECT-16.2">Hierarchy:</A></h3>

<p class=para>
<tt class=literal>Object->Component(ImageObserver, MenuContainer, Serializable)->Container</tt>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-18-SECT-16.3">Extended By:</A></h3>

<p class=para>
<tt class=literal>Panel, 
ScrollPane, 
Window</tt>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-18-SECT-16.4">Passed To:</A></h3>

<p class=para>
<tt class=literal>BorderLayout.getLayoutAlignmentX(), 
BorderLayout.getLayoutAlignmentY(), 
BorderLayout.invalidateLayout(), 
BorderLayout.layoutContainer(), 
BorderLayout.maximumLayoutSize(), 
BorderLayout.minimumLayoutSize(), 
BorderLayout.preferredLayoutSize(), 
CardLayout.first(), 
CardLayout.getLayoutAlignmentX(), 
CardLayout.getLayoutAlignmentY(), 
CardLayout.invalidateLayout(), 
CardLayout.last(), 
CardLayout.layoutContainer(), 
CardLayout.maximumLayoutSize(), 
CardLayout.minimumLayoutSize(), 
CardLayout.next(), 
CardLayout.preferredLayoutSize(), 
CardLayout.previous(), 
CardLayout.show(), 
FlowLayout.layoutContainer(), 
FlowLayout.minimumLayoutSize(), 
FlowLayout.preferredLayoutSize(), 
GridBagLayout.ArrangeGrid(), 
GridBagLayout.getLayoutAlignmentX(), 
GridBagLayout.getLayoutAlignmentY(), 
GridBagLayout.GetLayoutInfo(), 
GridBagLayout.GetMinSize(), 
GridBagLayout.invalidateLayout(), 
GridBagLayout.layoutContainer(), 
GridBagLayout.maximumLayoutSize(), 
GridBagLayout.minimumLayoutSize(), 
GridBagLayout.preferredLayoutSize(), 
GridLayout.layoutContainer(), 
GridLayout.minimumLayoutSize(), 
GridLayout.preferredLayoutSize(), 
LayoutManager.layoutContainer(), 
LayoutManager.minimumLayoutSize(), 
LayoutManager.preferredLayoutSize(), 
LayoutManager2.getLayoutAlignmentX(), 
LayoutManager2.getLayoutAlignmentY(), 
LayoutManager2.invalidateLayout(), 
LayoutManager2.maximumLayoutSize()</tt>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-18-SECT-16.5">Returned By:</A></h3>

<p class=para>
<tt class=literal>Component.getParent(), 
ContainerEvent.getContainer(), 
Toolkit.getNativeContainer()</tt>

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch18_15.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch18_17.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.awt.Component (JDK 1.0)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.awt.Cursor (JDK 1.1)</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
