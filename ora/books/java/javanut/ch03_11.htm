<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 3] 3.11 Summary</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 15:50:05 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch03_10.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 3<br>Classes and Objects in Java</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch04_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-3-SECT-11">3.11 Summary</A></h2>

<p class=para>
This has been a long and detailed chapter. The following
list summarizes the most important points to remember.
This summary is not intended to simplify the complex
material we've covered, but it may allow you to test your
comprehension of the material now, and may help jog your
memory later:

<p>
<ul class=itemizedlist>
<li class=listitem>A class is a collection of data and methods
that operate on that data.

<p>
<li class=listitem>An object is a particular instance of a class.

<p>
<li class=listitem>Object members (fields and methods) are accessed with a
dot between the object name and the member name.

<p>
<li class=listitem>Instance (non-static) variables occur in each instance of a
class.

<p>
<li class=listitem>Class (static) variables are associated with the class.
There is one copy of a class variable regardless of the
number of instances of a class.

<p>
<li class=listitem>Instance (non-static) methods of a class are passed an
implicit <tt class=literal>this</tt> argument that identifies the object
being operated on.

<p>
<li class=listitem>Class (static) methods are not passed a <tt class=literal>this</tt>
argument and therefore do not have a current instance of the
class that can be used to implicitly refer to instance
variables or invoke instance methods.

<p>
<li class=listitem>Objects are created with the <tt class=literal>new</tt> keyword, which
invokes a class constructor method with a list of arguments.

<p>
<li class=listitem>Objects are not explicitly freed or destroyed in any way.
The Java garbage collector automatically reclaims objects
that are no longer being used.

<p>
<li class=listitem>If the first line of a constructor method does not invoke
another constructor with a <tt class=literal>this()</tt> call, or a
superclass constructor with a <tt class=literal>super()</tt> call,
Java automatically inserts a call to the superclass
constructor that takes no arguments.  This enforces
"constructor chaining."

<p>
<li class=listitem>If a class does not define a constructor, Java provides a
default constructor.  

<p>
<li class=listitem>A class may inherit the non-<tt class=literal>private</tt> methods and
variables of another class by "subclassing"--i.e., by
declaring that class in its <tt class=literal>extends</tt> clause.

<p>
<li class=listitem><tt class=literal>java.lang.Object</tt> is the default superclass for a
class.  It is the root of the Java class hierarchy and has no
superclass itself.  All Java classes inherit the methods
defined by <tt class=literal>Object</tt>.

<p>
<li class=listitem>Method overloading is the practice of defining multiple
methods which have the same name but have different argument lists.

<p>
<li class=listitem>Method overriding occurs when a class redefines a method
inherited from its superclass.  

<p>
<li class=listitem>Dynamic method lookup ensures that the correct method is
invoked for an object, even when the object is an instance
of a class that has overridden the method.

<p>
<li class=listitem><tt class=literal>static</tt>, <tt class=literal>private</tt>, and <tt class=literal>final</tt> methods
cannot be overridden and are not subject to dynamic method
lookup.  This allows compiler optimizations such as
inlining.

<p>
<li class=listitem>From a subclass, you can explicitly invoke an overridden
method of a superclass with the <tt class=literal>super</tt> keyword.

<p>
<li class=listitem>You can explicitly refer to a shadowed variable with the
<tt class=literal>super</tt> keyword.

<p>
<li class=listitem>Data and methods may be hidden or encapsulated within a
class by specifying the <tt class=literal>private</tt>
or <tt class=literal>protected</tt> visibility modifiers.
Members declared <tt class=literal>public</tt> are visible everywhere.
Members with no visibility modifiers are visible only within
the package.

<p>
<li class=listitem>An abstract method has no method body (i.e., no implementation).

<p>
<li class=listitem>An abstract class contains abstract methods.  The methods
must be implemented in a subclass before the subclass can be
instantiated.

<p>
<li class=listitem>An interface is a collection of abstract methods and
constants (<tt class=literal>static</tt> <tt class=literal>final</tt> variables).
Declaring an interface creates a new data type.

<p>
<li class=listitem>A class implements an interface by declaring the interface
in its <tt class=literal>implements</tt> clause and by providing a method
body for each of the abstract methods in the interface.

<p>
</UL>
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch03_10.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch04_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>C++ Features Not Found in Java</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>What's New in Java 1.1</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
