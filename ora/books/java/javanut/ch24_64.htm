<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 24] 24.64 java.io.StringWriter (JDK 1.1)</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:23:07 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch24_63.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 24<br>The java.io Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch24_65.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-24-SECT-64">24.64 java.io.StringWriter (JDK 1.1)</A></h2>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-24-SECT-64.1"></A></h3>
</DIV>

<p class=para>
This class is a character output stream that uses an
internal <tt class=literal>StringBuffer</tt> object as the destination of
the characters written to the stream.  When you create a
<tt class=literal>StringWriter</tt>, you may optionally specify an initial
size for the <tt class=literal>StringBuffer</tt>, but you do not specify
the <tt class=literal>StringBuffer</tt> itself--it is managed internally
by the <tt class=literal>StringWriter</tt>, and grows as necessary to
accommodate the characters written to it.

<p class=para>
<tt class=literal>StringWriter</tt> defines the standard <tt class=literal>write()</tt>,
<tt class=literal>flush()</tt>, and <tt class=literal>close()</tt> methods that all
<tt class=literal>Writer</tt> subclasses do, and also defines two methods
to obtain the characters that have been written into the
stream's internal buffer.  <tt class=literal>toString()</tt> returns the
contents of the internal buffer as a <tt class=literal>String</tt>, and
<tt class=literal>getBuffer()</tt> returns the buffer itself.  Note that
<tt class=literal>getBuffer()</tt> returns a reference to the actual
internal buffer, not a copy of it, so any changes you make
to the buffer are reflected in subsequent calls to
<tt class=literal>toString()</tt>. 

<p class=para>
<tt class=literal>StringWriter</tt> is quite similar to
<tt class=literal>CharArrayWriter</tt>, but does not have a byte stream
analog.

<div class=screen>
<p>
<pre>
public class <tt class=literal>StringWriter</tt> extends Writer {
    // <tt class=literal>Public Constructor</tt>
            public <tt class=literal>StringWriter</tt>();
    // <tt class=literal>Protected Constructor</tt>
            protected <tt class=literal>StringWriter</tt>(int <tt class=literal>initialSize</tt>);
    // <tt class=literal>Public Instance Methods</tt>
            public void <tt class=literal>close</tt>();  //<tt class=literal> Defines Writer</tt>
            public void <tt class=literal>flush</tt>();  //<tt class=literal> Defines Writer</tt>
            public StringBuffer <tt class=literal>getBuffer</tt>();
            public String <tt class=literal>toString</tt>();  //<tt class=literal> Overrides Object</tt>
            public void <tt class=literal>write</tt>(int <tt class=literal>c</tt>);  //<tt class=literal> Overrides Writer</tt>
            public void <tt class=literal>write</tt>(char[] <tt class=literal>cbuf</tt>, int <tt class=literal>off</tt>, int <tt class=literal>len</tt>);  //<tt class=literal> Defines Writer</tt>
            public void <tt class=literal>write</tt>(String <tt class=literal>str</tt>);  //<tt class=literal> Overrides Writer</tt>
            public void <tt class=literal>write</tt>(String <tt class=literal>str</tt>, int <tt class=literal>off</tt>, int <tt class=literal>len</tt>);  //<tt class=literal> Overrides Writer</tt>
}
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-24-SECT-64.2">Hierarchy:</A></h3>

<p class=para>
Object->Writer->StringWriter

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch24_63.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch24_65.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.io.StringReader (JDK 1.1)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.io.SyncFailedException (JDK 1.1)</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
