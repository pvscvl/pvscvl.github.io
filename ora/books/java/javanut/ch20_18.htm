<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 20] 20.18 java.awt.event.KeyEvent (JDK 1.1)</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:14:04 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch20_17.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 20<br>The java.awt.event Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch20_19.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-20-SECT-18">20.18 java.awt.event.KeyEvent (JDK 1.1)</A></h2>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-20-SECT-18.1"></A></h3>
</DIV>

<p class=para>
An event of this type indicates that the user has pressed or
released a key or typed a character.

<p class=para>
Call <tt class=literal>getID()</tt> to determine the particular type of
key event that has occurred.  The constant <tt class=literal>KEY_PRESSED</tt>
indicates that a key has been pressed, while the constant
<tt class=literal>KEY_RELEASED</tt> indicates that a key has been released.
Not all keystrokes actually correspond to or generate Unicode
characters.  Modifier keys and function keys, for example,
do not correspond to characters.  Furthermore, for
internationalized input, multiple keystrokes are sometimes
required to generate a single character of input.
Therefore, <tt class=literal>getID()</tt> returns a third constant,
<tt class=literal>KEY_TYPED</tt>, to indicate a <tt class=literal>KeyEvent</tt> that
actually contains a character value.

<p class=para>
For <tt class=literal>KEY_PRESSED</tt> and <tt class=literal>KEY_RELEASED</tt> key events,
use <tt class=literal>getKeyCode()</tt> to obtain the "virtual key code" of
the key that was pressed or released.  <tt class=literal>KeyEvent</tt>
defines a number of <tt class=literal>VK_</tt> constants that represent
these "virtual keys."  Note that not all keys on all
keyboards have corresponding constants in the
<tt class=literal>KeyEvent</tt> class, and not all keyboards can generate
all of the virtual key codes defined by the class.  In JDK
1.1, the <tt class=literal>VK_</tt> constants for letter keys, number keys, and some
other keys have the same values as the ASCII encodings of the
letters and numbers.  You should not rely on this to always be
the case, however.  If the key that was pressed or released
corresponds directly to a Unicode character, you can obtain
that character by calling <tt class=literal>getKeyChar()</tt>.  If there is
not a corresponding Unicode character, this method
returns the constant <tt class=literal>CHAR_UNDEFINED</tt>.  The
<tt class=literal>isActionKey()</tt> method returns <tt class=literal>true</tt> if the key
that was pressed or released does not have a corresponding
character.

<p class=para>
For <tt class=literal>KEY_TYPED</tt> key events, use <tt class=literal>getKeyChar()</tt>
to return the Unicode character that was typed.  If you call
<tt class=literal>getKeyCode()</tt> for this type of key event, it returns
<tt class=literal>VK_UNDEFINED</tt>.

<p class=para>
See <tt class=literal>InputEvent</tt> for information on inherited methods
you can use to obtain the keyboard modifiers that were down
during the event and other important methods.

<p class=para>
Use <tt class=literal>getComponent()</tt>, inherited from
<tt class=literal>ComponentEvent</tt>, to determine what component the event
occurred over.

<p class=para>
The static method <tt class=literal>getKeyText()</tt> returns a (possibly
localized) textual name for a given key code.  The static
method <tt class=literal>getKeyModifiersText()</tt> returns a (possibly
localized) textual description for a set of modifiers.

<p class=para>
The <tt class=literal>KeyEvent</tt> has methods that allow you to change the
key code, key character, or modifiers of an event.  These
methods, along with the <tt class=literal>consume()</tt> method, allow a
<tt class=literal>KeyListener</tt> to perform filtering of key
events before they are passed to the underlying AWT
component.

<div class=screen>
<p>
<pre>
public class <tt class=literal>KeyEvent</tt> extends InputEvent {
    // <tt class=literal>Public Constructors</tt>
            public <tt class=literal>KeyEvent</tt>(Component <tt class=literal>source</tt>, int <tt class=literal>id</tt>, long <tt class=literal>when</tt>, int <tt class=literal>modifiers</tt>, int <tt class=literal>keyCode</tt>, char <tt class=literal>keyChar</tt>);
            public <tt class=literal>KeyEvent</tt>(Component <tt class=literal>source</tt>, int <tt class=literal>id</tt>, long <tt class=literal>when</tt>, int <tt class=literal>modifiers</tt>, int <tt class=literal>keyCode</tt>);
    // <tt class=literal>Constants</tt>
    // <tt class=literal>Event Type Constants</tt>
            public static final int <tt class=literal>KEY_FIRST</tt>;
            public static final int <tt class=literal>KEY_LAST</tt>;
            public static final int <tt class=literal>KEY_PRESSED</tt>;
            public static final int <tt class=literal>KEY_RELEASED</tt>;
            public static final int <tt class=literal>KEY_TYPED</tt>;
    // <tt class=literal>Undefined Key and Character</tt>
            public static final int <tt class=literal>VK_UNDEFINED</tt>;
            public static final char <tt class=literal>CHAR_UNDEFINED</tt>;
    // <tt class=literal>Alphanumeric Keys</tt>
            public static final int <tt class=literal>VK_A</tt>, VK_B, <tt class=literal>VK_C</tt>, <tt class=literal>VK_D</tt>, <tt class=literal>VK_E</tt>, <tt class=literal>VK_F</tt>, <tt class=literal>VK_G</tt>, <tt class=literal>VK_H</tt>, <tt class=literal>VK_I</tt>;
            public static final int <tt class=literal>VK_J</tt>, <tt class=literal>VK_K</tt>, <tt class=literal>VK_L</tt>, <tt class=literal>VK_M</tt>, <tt class=literal>VK_N</tt>, <tt class=literal>VK_O</tt>, <tt class=literal>VK_P</tt>, <tt class=literal>VK_Q</tt>, <tt class=literal>VK_R</tt>;
            public static final int <tt class=literal>VK_S</tt>, <tt class=literal>VK_T</tt>, <tt class=literal>VK_U</tt>, <tt class=literal>VK_V</tt>, <tt class=literal>VK_W</tt>, <tt class=literal>VK_X</tt>, <tt class=literal>VK_Y</tt>, <tt class=literal>VK_Z</tt>;
            public static final int <tt class=literal>VK_SPACE</tt>;
            public static final int <tt class=literal>VK_0</tt>, <tt class=literal>VK_1</tt>, <tt class=literal>VK_2</tt>, <tt class=literal>VK_3</tt>, <tt class=literal>VK_4</tt>, <tt class=literal>VK_5</tt>, <tt class=literal>VK_6</tt>, <tt class=literal>VK_7</tt>, <tt class=literal>VK_8</tt>, <tt class=literal>VK_9</tt>;
            public static final int <tt class=literal>VK_NUMPAD0</tt>, <tt class=literal>VK_NUMPAD1</tt>, <tt class=literal>VK_NUMPAD2</tt>, <tt class=literal>VK_NUMPAD3</tt>, <tt class=literal>VK_NUMPAD4</tt>;
            public static final int <tt class=literal>VK_NUMPAD5</tt>, <tt class=literal>VK_NUMPAD6</tt>, <tt class=literal>VK_NUMPAD7</tt>, <tt class=literal>VK_NUMPAD8</tt>, <tt class=literal>VK_NUMPAD9</tt>;
    // <tt class=literal>Control Keys</tt>
            public static final int <tt class=literal>VK_BACK_SPACE</tt>, <tt class=literal>VK_ENTER</tt>, <tt class=literal>VK_ESCAPE</tt>, <tt class=literal>VK_TAB</tt>;
    // <tt class=literal>Modifier Keys</tt>
            public static final int <tt class=literal>VK_ALT</tt>, <tt class=literal>VK_CAPS_LOCK</tt>, <tt class=literal>VK_CONTROL</tt>, <tt class=literal>VK_META</tt>, <tt class=literal>VK_SHIFT</tt>;
    // <tt class=literal>Function Keys</tt>
            public static final int <tt class=literal>VK_F1</tt>, <tt class=literal>VK_F2</tt>, <tt class=literal>VK_F3</tt>, <tt class=literal>VK_F4</tt>, <tt class=literal>VK_F5</tt>, <tt class=literal>VK_F6</tt>;
            public static final int <tt class=literal>VK_F7</tt>, <tt class=literal>VK_F8</tt>, <tt class=literal>VK_F9</tt>, <tt class=literal>VK_F10</tt>, <tt class=literal>VK_F11</tt>, <tt class=literal>VK_F12</tt>;
            public static final int <tt class=literal>VK_PRINTSCREEN</tt>, <tt class=literal>VK_SCROLL_LOCK</tt>, <tt class=literal>VK_PAUSE</tt>;
            public static final int <tt class=literal>VK_DELETE</tt>, <tt class=literal>VK_INSERT</tt>;
            public static final int <tt class=literal>VK_PAGE_DOWN</tt>, <tt class=literal>VK_PAGE_UP</tt>;
            public static final int <tt class=literal>VK_DOWN</tt>, <tt class=literal>VK_LEFT</tt>, <tt class=literal>VK_RIGHT</tt>, <tt class=literal>VK_UP</tt>;
            public static final int <tt class=literal>VK_END</tt>, <tt class=literal>VK_HOME</tt>;
            public static final int <tt class=literal>VK_ACCEPT</tt>, <tt class=literal>VK_NUM_LOCK</tt>, <tt class=literal>VK_CANCEL</tt>;
            public static final int <tt class=literal>VK_CLEAR</tt>, <tt class=literal>VK_CONVERT</tt>, <tt class=literal>VK_FINAL</tt>;
            public static final int <tt class=literal>VK_HELP</tt>, <tt class=literal>VK_KANA</tt>, <tt class=literal>VK_KANJI</tt>;
            public static final int <tt class=literal>VK_MODECHANGE</tt>, <tt class=literal>VK_NONCONVERT</tt>;
    // <tt class=literal>Punctuation Keys</tt>
            public static final int <tt class=literal>VK_ADD</tt>, <tt class=literal>VK_BACK_QUOTE</tt>, <tt class=literal>VK_BACK_SLASH</tt>;
            public static final int <tt class=literal>VK_CLOSE_BRACKET</tt>, <tt class=literal>VK_COMMA</tt>, <tt class=literal>VK_DECIMAL</tt>;
            public static final int <tt class=literal>VK_DIVIDE</tt>, <tt class=literal>VK_EQUALS</tt>, <tt class=literal>VK_MULTIPLY</tt>;
            public static final int <tt class=literal>VK_OPEN_BRACKET</tt>, <tt class=literal>VK_PERIOD</tt>, <tt class=literal>VK_QUOTE</tt>;
            public static final int <tt class=literal>VK_SEMICOLON</tt>, <tt class=literal>VK_SEPARATER</tt>, <tt class=literal>VK_SLASH</tt>;
            public static final int <tt class=literal>VK_SUBTRACT</tt>;
    // <tt class=literal>Class Methods</tt>
            public static String <tt class=literal>getKeyModifiersText</tt>(int <tt class=literal>modifiers</tt>);
            public static String <tt class=literal>getKeyText</tt>(int <tt class=literal>keyCode</tt>);
    // <tt class=literal>Public Instance Methods</tt>
            public char <tt class=literal>getKeyChar</tt>();
            public int <tt class=literal>getKeyCode</tt>();
            public boolean <tt class=literal>isActionKey</tt>();
            public String <tt class=literal>paramString</tt>();  //<tt class=literal> Overrides ComponentEvent</tt>
            public void <tt class=literal>setKeyChar</tt>(char <tt class=literal>keyChar</tt>);
            public void <tt class=literal>setKeyCode</tt>(int <tt class=literal>keyCode</tt>);
            public void <tt class=literal>setModifiers</tt>(int <tt class=literal>modifiers</tt>);
}
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-20-SECT-18.2">Hierarchy:</A></h3>

<p class=para>
<tt class=literal>Object->EventObject(Serializable)->AWTEvent->ComponentEvent->InputEvent->KeyEvent</tt>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-20-SECT-18.3">Passed To:</A></h3>

<p class=para>
<tt class=literal>AWTEventMulticaster.keyPressed(), 
AWTEventMulticaster.keyReleased(), 
AWTEventMulticaster.keyTyped(), 
Component.processKeyEvent(), 
KeyAdapter.keyPressed(), 
KeyAdapter.keyReleased(), 
KeyAdapter.keyTyped(), 
KeyListener.keyPressed(), 
KeyListener.keyReleased(), 
KeyListener.keyTyped()</tt>

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch20_17.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch20_19.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.awt.event.KeyAdapter (JDK 1.1)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.awt.event.KeyListener (JDK 1.1)</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
