<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 14] 14.2 Working with System Properties</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:01:53 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch14_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 14<br>System Properties</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch15_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-14-SECT-2">14.2 Working with System Properties</A></h2>

<p class=para>
The system property list is not a static.  Other properties
can be added to it (and read from it) to allow easy
customization of application behavior.

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-14-SECT-2.1">Specifying Individual Properties</A></h3>

<p class=para>
You can specify individual properties to be inserted into the
system properties list with the <tt class=literal>-D</tt> option to the
Java interpreter.  For example, you might invoke a program
like this:

<p class=para>
<div class=screen>
<p>
<pre>
% java -Dgames.tetris.level=9 -Dgames.tetris.sound=off games.tetris
</PRE>
</DIV>

<p class=para>
Note the format of each property specification: the property
name, which is often a hierarchical one, followed by an
equals sign, followed by the property value.  A property
value may include spaces, but any <tt class=literal>-D</tt> option
specifying a property value containing spaces would have to
be quoted when passed to <i class=emphasis>java</I>, of course.

<p class=para>
If you write a platform-specific script file to invoke your
Java application, you can use this <tt class=literal>-D</tt> option to
translate native environment variable settings into Java
system properties.  On a Unix system, for example, such a
script might look like this:

<p class=para>
<div class=screen>
<p>
<pre>
#!/bin/sh
exec java -Dgames.tetris.level=$TETRIS_LEVEL \
          -Dgames.tetris.sound=$TETRIS_SOUND \
          games.tetris
</PRE>
</DIV>

<p class=para>
</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-14-SECT-2.2">Using Property Files</A></h3>

<p class=para>
Properties in Java are represented by the
<tt class=literal>java.util.Properties</tt> object, which is essentially a
hash table that can be read from and written to a file.
A program need not limit itself to the use of system
properties.  It can also read in its own files of
properties to support user preferences and user
customization.  For example, when the <i class=emphasis>appletviewer</I>
program starts up, it reads the properties from the
<i class=emphasis>lib/appletviewer.properties</I> file in the JDK
distribution.  This file contains the various messages that
<tt class=literal>appletviewer</tt> displays to the user and provides the
flexibility to translate those messages into other
languages.  The following lines are an excerpt from
<i class=emphasis>appletviewer.properties</I>:

<p class=para>
<div class=screen>
<p>
<pre>
#
# Applet status messages
#
appletloader.nocode=APPLET tag missing CODE parameter.
appletloader.notfound=load: class %0 not found.
appletloader.nocreate=load: %0 can't be instantiated.
</PRE>
</DIV>

<p class=para>
Note that comments in a properties file start with
<tt class=literal>#</tt>, and that the property specification format is the
same as with the <tt class=literal>-D</tt> option.  Also note that these
property values do contain spaces.  Some of them also
contain the <tt class=literal>%</tt> substitution character and are intended
for use with the <tt class=literal>java.text.MessageFormat</tt> class.

<p class=para>
When reading in a file of properties, it can be convenient
to merge those properties with the standard system
properties, so that the program need only look in one place
to find both loaded properties and standard properties (and
properties specifed wiht the <tt class=literal>-D</tt> option).  Every
<tt class=literal>Properties</tt> object can have a "parent" properties
object; if a property is not found in the <tt class=literal>Properties</tt>
object, it is searched for in the parent.  Thus, it is
possible to merge in properties with code like this:

<p class=para>
<div class=screen>
<p>
<pre>
// Create a new Properties object with system props as its parent.
Properties props = new Properties(System.getProperties());
// Load a file of properties into it.  We may get an exception here...
props.load(new BufferedInputStream(new FileInputStream(propsfilename)));
// Set these new combined properties as the system properties.
System.setProperties(props);
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-14-SECT-2.3">Specifying Font Properties</A></h3>

<p class=para>
As noted above, a program can read the string value of a
system property with the <tt class=literal>System.getProperty()</tt>
method.  There are also some convenience methods that read a
property value and convert that value into some other type
of object.  One of these convenience methods is
<tt class=literal>Font.getFont()</tt>.  This method reads the value of a
named property and attempts to parse it into a font
specification.
The font specification syntax it uses is:

<p class=para>
<div class=screen>
<p>
<pre>
<i class=emphasis>name</I>[-<i class=emphasis>style</I>][-<i class=emphasis>size</I>]
</PRE>
</DIV>

<p class=para>
The<i class=emphasis><tt class=literal>style</tt></I> should be <tt class=literal>italic</tt>, <tt class=literal>bold</tt> or
<tt class=literal>bolditalic</tt>.  If omitted, a plain font is used.
The <tt class=literal>size</tt> should be an integer that specifies the
font size in points.  If omitted, 12-point is used.  If the
<i class=emphasis><tt class=literal>style</tt></I> is specified, the <i class=emphasis><tt class=literal>size</tt></I> must also
be specified.  For example, you might specify font
properties like the following:

<p class=para>
<div class=screen>
<p>
<pre>
games.tetris.titlefont=sanserif-bolditalic-48
games.tetris.mainfont=serif-14
games.tetris.scorefont=monospaced
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-14-SECT-2.4">Specifying Color Properties</A></h3>

<p class=para>
<tt class=literal>Color.getColor()</tt> is another convenience routine that
reads a system property and converts it into a <tt class=literal>Color</tt>
object.  To specify a color property, you specify the color
as an integer value, typically as a hexadecimal value in the
format <tt class=literal>0x</tt><i class=emphasis>RRGGBB</I>.  For example:

<p class=para>
<div class=screen>
<p>
<pre>
# A green foreground
games.tetris.foreground=0x00FF00
# A light gray background
games.tetris.background=0xD0D0D0
</PRE>
</DIV>

<p class=para>
</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch14_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch15_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Standard System Properties</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Java-Related HTML Tags</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
