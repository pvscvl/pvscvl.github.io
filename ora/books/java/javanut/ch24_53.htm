<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 24] 24.53 java.io.PrintWriter (JDK 1.1)</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:22:48 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch24_52.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 24<br>The java.io Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch24_54.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-24-SECT-53">24.53 java.io.PrintWriter (JDK 1.1)</A></h2>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-24-SECT-53.1"></A></h3>
</DIV>

<p class=para>
This class is a character output stream that implements a
number of <tt class=literal>print()</tt> and <tt class=literal>println()</tt> methods that
output textual representations of primitive values and
objects.  When you create a <tt class=literal>PrintWriter</tt> object, you
specify a character or byte output stream that it should
write its characters to, and also optionally specify whether
the <tt class=literal>PrintWriter</tt> stream should be automatically
flushed whenever <tt class=literal>println()</tt> is called.  If you specify
a byte output stream as the destination, the
<tt class=literal>PrintWriter()</tt> constructor automatically creates
the necessary <tt class=literal>OutputStreamWriter</tt> object to convert
characters to bytes using the default encoding.

<p class=para>
<tt class=literal>PrintWriter</tt> implements the normal <tt class=literal>write()</tt>,
<tt class=literal>flush()</tt>, and <tt class=literal>close()</tt> methods that all
<tt class=literal>Writer</tt> subclasses do. It is more common to use
the higher-level <tt class=literal>print()</tt> and <tt class=literal>println()</tt>
methods, each of which converts its argument to a string
before outputting it.  <tt class=literal>println()</tt> has the additional
behavior of terminating the line (and optionally flushing
the buffer) after printing its argument.

<p class=para>
The methods of <tt class=literal>PrintWriter</tt> never throw exceptions.
Instead, when errors occur, they set an internal flag that
you can check by calling <tt class=literal>checkError()</tt>.
<tt class=literal>checkError()</tt> first flushes the internal stream, and
then returns <tt class=literal>true</tt> if any exception has occurred
while writing values to that stream. Once an error has
occurred on a <tt class=literal>PrintWriter</tt> object, all subsequent
calls to <tt class=literal>checkError()</tt> return <tt class=literal>true</tt>;
there is no way to reset the error flag.

<p class=para>
<tt class=literal>PrintWriter</tt> is the character stream analog to
<tt class=literal>PrintStream</tt>, which it supersedes.  You can usually
trivially replace any <tt class=literal>PrintStream</tt> objects in a
program with <tt class=literal>PrintWriter</tt> objects.  This is
particularly important for internationalized programs.  The
only valid remaining use for the <tt class=literal>PrintStream</tt> class
is for the <tt class=literal>System.out</tt> and <tt class=literal>System.err</tt>
standard output streams.  See <tt class=literal>PrintStream</tt> for
details.

<div class=screen>
<p>
<pre>
public class <tt class=literal>PrintWriter</tt> extends Writer {
    // <tt class=literal>Public Constructors</tt>
            public <tt class=literal>PrintWriter</tt>(Writer <tt class=literal>out</tt>);
            public <tt class=literal>PrintWriter</tt>(Writer <tt class=literal>out</tt>, boolean <tt class=literal>autoFlush</tt>);
            public <tt class=literal>PrintWriter</tt>(OutputStream <tt class=literal>out</tt>);
            public <tt class=literal>PrintWriter</tt>(OutputStream <tt class=literal>out</tt>, boolean <tt class=literal>autoFlush</tt>);
    // <tt class=literal>Public Instance Methods</tt>
            public boolean <tt class=literal>checkError</tt>();
            public void <tt class=literal>close</tt>();  //<tt class=literal> Defines Writer</tt>
            public void <tt class=literal>flush</tt>();  //<tt class=literal> Defines Writer</tt>
            public void <tt class=literal>print</tt>(boolean <tt class=literal>b</tt>);
            public void <tt class=literal>print</tt>(char <tt class=literal>c</tt>);
            public void <tt class=literal>print</tt>(int <tt class=literal>i</tt>);
            public void <tt class=literal>print</tt>(long <tt class=literal>l</tt>);
            public void <tt class=literal>print</tt>(float <tt class=literal>f</tt>);
            public void <tt class=literal>print</tt>(double <tt class=literal>d</tt>);
            public void <tt class=literal>print</tt>(char[] <tt class=literal>s</tt>);
            public void <tt class=literal>print</tt>(String <tt class=literal>s</tt>);
            public void <tt class=literal>print</tt>(Object <tt class=literal>obj</tt>);
            public void <tt class=literal>println</tt>();
            public void <tt class=literal>println</tt>(boolean <tt class=literal>x</tt>);
            public void <tt class=literal>println</tt>(char <tt class=literal>x</tt>);
            public void <tt class=literal>println</tt>(int <tt class=literal>x</tt>);
            public void <tt class=literal>println</tt>(long <tt class=literal>x</tt>);
            public void <tt class=literal>println</tt>(float <tt class=literal>x</tt>);
            public void <tt class=literal>println</tt>(double <tt class=literal>x</tt>);
            public void <tt class=literal>println</tt>(char[] <tt class=literal>x</tt>);
            public void <tt class=literal>println</tt>(String <tt class=literal>x</tt>);
            public void <tt class=literal>println</tt>(Object <tt class=literal>x</tt>);
            public void <tt class=literal>write</tt>(int <tt class=literal>c</tt>);  //<tt class=literal> Overrides Writer</tt>
            public void <tt class=literal>write</tt>(char[] <tt class=literal>buf</tt>, int <tt class=literal>off</tt>, int <tt class=literal>len</tt>);  //<tt class=literal> Defines Writer</tt>
            public void <tt class=literal>write</tt>(char[] <tt class=literal>buf</tt>);  //<tt class=literal> Overrides Writer</tt>
            public void <tt class=literal>write</tt>(String <tt class=literal>s</tt>, int <tt class=literal>off</tt>, int <tt class=literal>len</tt>);  //<tt class=literal> Overrides Writer</tt>
            public void <tt class=literal>write</tt>(String <tt class=literal>s</tt>);  //<tt class=literal> Overrides Writer</tt>
    // <tt class=literal>Protected Instance Methods</tt>
            protected void <tt class=literal>setError</tt>();
}
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-24-SECT-53.2">Hierarchy:</A></h3>

<p class=para>
Object->Writer->PrintWriter

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-24-SECT-53.3">Passed To:</A></h3>

<p class=para>
Component.list(), 
Container.list(), 
Properties.list(), 
Throwable.printStackTrace()

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch24_52.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch24_54.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.io.PrintStream (JDK 1.0)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.io.PushbackInputStream (JDK 1.0)</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
