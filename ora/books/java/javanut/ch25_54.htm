<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 25] 25.54 java.lang.SecurityManager (JDK 1.0)</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:27:35 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch25_53.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 25<br>The java.lang Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch25_55.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-25-SECT-54">25.54 java.lang.SecurityManager (JDK 1.0)</A></h2>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-25-SECT-54.1"></A></h3>
</DIV>

<p class=para>
This abstract class defines the methods necessary to
implement a security policy for the execution of
untrusted code. Before performing 
potentially sensitive operations, Java calls methods of the
<tt class=literal>SecurityManager</tt> object currently in effect to
determine whether the operations are permitted. These methods
throw a <tt class=literal>SecurityException</tt> if the operation is not
permitted.  

<p class=para>
Normal applications do not need to use or subclass the
<tt class=literal>SecurityManager</tt> class. It is typically only used
by Web browsers, applet viewers, and other programs that
need to run untrusted code in a controlled environment.

<div class=screen>
<p>
<pre>
public abstract class <tt class=literal>SecurityManager</tt> extends Object {
    // <tt class=literal>Protected Constructor</tt>
            protected <tt class=literal>SecurityManager</tt>();
    // <tt class=literal>Protected Instance Variables</tt>
            protected boolean <tt class=literal>inCheck</tt>;
    // <tt class=literal>Public Instance Methods</tt>
            public void <tt class=literal>checkAccept</tt>(String <tt class=literal>host</tt>, int <tt class=literal>port</tt>);
            public void <tt class=literal>checkAccess</tt>(Thread <tt class=literal>g</tt>);
            public void <tt class=literal>checkAccess</tt>(ThreadGroup <tt class=literal>g</tt>);
        <b>1.1</b>public void <tt class=literal>checkAwtEventQueueAccess</tt>();
            public void <tt class=literal>checkConnect</tt>(String <tt class=literal>host</tt>, int <tt class=literal>port</tt>);
            public void <tt class=literal>checkConnect</tt>(String <tt class=literal>host</tt>, int <tt class=literal>port</tt>, Object <tt class=literal>context</tt>);
            public void <tt class=literal>checkCreateClassLoader</tt>();
            public void <tt class=literal>checkDelete</tt>(String <tt class=literal>file</tt>);
            public void <tt class=literal>checkExec</tt>(String <tt class=literal>cmd</tt>);
            public void <tt class=literal>checkExit</tt>(int <tt class=literal>status</tt>);
            public void <tt class=literal>checkLink</tt>(String <tt class=literal>lib</tt>);
            public void <tt class=literal>checkListen</tt>(int <tt class=literal>port</tt>);
        <b>1.1</b>public void <tt class=literal>checkMemberAccess</tt>(Class <tt class=literal>clazz</tt>, int <tt class=literal>which</tt>);
        <b>1.1</b>public void <tt class=literal>checkMulticast</tt>(InetAddress <tt class=literal>maddr</tt>);
        <b>1.1</b>public void <tt class=literal>checkMulticast</tt>(InetAddress <tt class=literal>maddr</tt>, byte <tt class=literal>ttl</tt>);
            public void <tt class=literal>checkPackageAccess</tt>(String <tt class=literal>pkg</tt>);
            public void <tt class=literal>checkPackageDefinition</tt>(String <tt class=literal>pkg</tt>);
        <b>1.1</b>public void <tt class=literal>checkPrintJobAccess</tt>();
            public void <tt class=literal>checkPropertiesAccess</tt>();
            public void <tt class=literal>checkPropertyAccess</tt>(String <tt class=literal>key</tt>);
            public void <tt class=literal>checkRead</tt>(FileDescriptor <tt class=literal>fd</tt>);
            public void <tt class=literal>checkRead</tt>(String <tt class=literal>file</tt>);
            public void <tt class=literal>checkRead</tt>(String <tt class=literal>file</tt>, Object <tt class=literal>context</tt>);
        <b>1.1</b>public void <tt class=literal>checkSecurityAccess</tt>(String <tt class=literal>action</tt>);
            public void <tt class=literal>checkSetFactory</tt>();
        <b>1.1</b>public void <tt class=literal>checkSystemClipboardAccess</tt>();
            public boolean <tt class=literal>checkTopLevelWindow</tt>(Object <tt class=literal>window</tt>);
            public void <tt class=literal>checkWrite</tt>(FileDescriptor <tt class=literal>fd</tt>);
            public void <tt class=literal>checkWrite</tt>(String <tt class=literal>file</tt>);
            public boolean <tt class=literal>getInCheck</tt>();
            public Object <tt class=literal>getSecurityContext</tt>();
        <b>1.1</b>public ThreadGroup <tt class=literal>getThreadGroup</tt>();
    // <tt class=literal>Protected Instance Methods</tt>
            protected native int <tt class=literal>classDepth</tt>(String <tt class=literal>name</tt>);
            protected native int <tt class=literal>classLoaderDepth</tt>();
            protected native ClassLoader <tt class=literal>currentClassLoader</tt>();
        <b>1.1</b>protected Class <tt class=literal>currentLoadedClass</tt>();
            protected native Class[] <tt class=literal>getClassContext</tt>();
            protected boolean <tt class=literal>inClass</tt>(String <tt class=literal>name</tt>);
            protected boolean <tt class=literal>inClassLoader</tt>();
}
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-25-SECT-54.2">Passed To:</A></h3>

<p class=para>
System.setSecurityManager()

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-25-SECT-54.3">Returned By:</A></h3>

<p class=para>
System.getSecurityManager()

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch25_53.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch25_55.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.lang.SecurityException (JDK 1.0)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.lang.Short (JDK 1.1)</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
