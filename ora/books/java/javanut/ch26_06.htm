<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 26] 26.6 java.lang.reflect.Method (JDK 1.1)</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:28:58 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch26_05.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 26<br>The java.lang.reflect Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch26_07.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-26-SECT-6">26.6 java.lang.reflect.Method (JDK 1.1)</A></h2>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-26-SECT-6.1"></A></h3>
</DIV>

<p class=para>
This class represents a method.  Instances of <tt class=literal>Method</tt>
are obtained by calling the <tt class=literal>getMethod()</tt> and related
methods of <tt class=literal>java.lang.Class</tt>.  <tt class=literal>Method</tt>
implements the <tt class=literal>Member</tt> interface, so you can use the
methods of that interface to obtain the method name,
modifiers, and declaring class.  In addition,
<tt class=literal>getReturnType()</tt>, <tt class=literal>getParameterTypes()</tt>, and
<tt class=literal>getExceptionTypes()</tt> also return important
information about the represented method.

<p class=para>
Perhaps most important, the <tt class=literal>invoke()</tt> method allows
the method represented by the <tt class=literal>Method</tt> object to be
invoked with a specified array of argument values.  If any
of the arguments are of primitive types, they must be
converted to their corresponding wrapper object types in
order to be passed to <tt class=literal>invoke()</tt>.  If the represented
method is an instance method (i.e., if it is not
<tt class=literal>static</tt>), the instance on which it should be invoked
must also be passed to <tt class=literal>invoke()</tt>.  The return value
of the represented method is returned by <tt class=literal>invoke()</tt>.
If the return value is a primitive value, it is first
converted to the corresponding wrapper type.  If the invoked
method causes an exception, the <tt class=literal>Throwable</tt> object it
throws is wrapped within the
<tt class=literal>InvocationTargetException</tt> that is thrown by
<tt class=literal>invoke()</tt>.

<div class=screen>
<p>
<pre>
public final class <tt class=literal>Method</tt> extends Object implements Member {
    // <tt class=literal>No Constructor</tt>
    // <tt class=literal>Public Instance Methods</tt>
            public boolean <tt class=literal>equals</tt>(Object <tt class=literal>obj</tt>);  //<tt class=literal> Overrides Object</tt>
            public Class <tt class=literal>getDeclaringClass</tt>();  //<tt class=literal> From Member</tt>
            public Class[] <tt class=literal>getExceptionTypes</tt>();
            public native int <tt class=literal>getModifiers</tt>();  //<tt class=literal> From Member</tt>
            public String <tt class=literal>getName</tt>();  //<tt class=literal> From Member</tt>
            public Class[] <tt class=literal>getParameterTypes</tt>();
            public Class <tt class=literal>getReturnType</tt>();
            public int <tt class=literal>hashCode</tt>();  //<tt class=literal> Overrides Object</tt>
            public native Object <tt class=literal>invoke</tt>(Object <tt class=literal>obj</tt>, Object[] <tt class=literal>args</tt>) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException;
            public String <tt class=literal>toString</tt>();  //<tt class=literal> Overrides Object</tt>
}
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-26-SECT-6.2">Passed To:</A></h3>

<p class=para>
EventSetDescriptor(), 
IndexedPropertyDescriptor(), 
MethodDescriptor(), 
PropertyDescriptor()

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-26-SECT-6.3">Returned By:</A></h3>

<p class=para>
Class.getDeclaredMethod(), 
Class.getDeclaredMethods(), 
Class.getMethod(), 
Class.getMethods(), 
EventSetDescriptor.getAddListenerMethod(), 
EventSetDescriptor.getListenerMethods(), 
EventSetDescriptor.getRemoveListenerMethod(), 
IndexedPropertyDescriptor.getIndexedReadMethod(), 
IndexedPropertyDescriptor.getIndexedWriteMethod(), 
MethodDescriptor.getMethod(), 
PropertyDescriptor.getReadMethod(), 
PropertyDescriptor.getWriteMethod()

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch26_05.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch26_07.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.lang.reflect.Member (JDK 1.1)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.lang.reflect.Modifier (JDK 1.1)</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
