<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 4] 4.11 Applet Changes</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 15:51:17 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch04_10.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 4<br>What's New in Java 1.1</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch04_12.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-4-SECT-11">4.11 Applet Changes</A></h2>

<p class=para>
There are several new features in Java 1.1 that affect
applets.  The first is the introduction of JAR files.  "JAR"
stands for Java ARchive, and a JAR file is just that: an
archive of files used by a Java applet.  An applet often
requires multiple class files, as well as images, sounds,
and other resources, to be loaded over the network.
Prior to Java 1.1, each of these files was loaded through a
separate HTTP request, which is fairly inefficient.  With
Java 1.1, all (or many) of the files an applet needs can be
combined into a single JAR file, which an applet viewer or
Web browser can download with a single HTTP request.
<a href="ch06_01.htm">Chapter 6, <i>Applets</i></A>, demonstrates the use of JAR files.

<p class=para>
JAR files are stored in the ZIP file format.  A JAR archive
can be created with the <i class=emphasis>jar</I> tool shipped with the JDK.
Once you have created a JAR file, you refer to it in a
<tt class=literal>&lt;APPLET&gt;</tt> tag with the <tt class=literal>ARCHIVE</tt> attribute.
This <tt class=literal>ARCHIVE</tt> attribute may actually be set to a
comma-separated list of archive files to be downloaded.
Note that specifying an <tt class=literal>ARCHIVE</tt> attribute simply
tells the applet viewer or browser the name of a JAR file or
files to load; it does not tell the browser the name of the
applet that is to be run.  Thus, you still must specify the
<tt class=literal>CODE</tt> attribute (or the new <tt class=literal>OBJECT</tt> attribute,
as we'll see below).  For example, you might use an
<tt class=literal>&lt;APPLET&gt;</tt> tag like the following to tell the browser
to download the <i class=emphasis>animation.jar</I> file and start the
applet contained in the file <i class=emphasis>Animator.class</I>:

<p class=para>
<div class=screen>
<p>
<pre>
&lt;APPLET CODE="Animator.class" ARCHIVE="animation.jar" WIDTH=500 HEIGHT=200&gt;
&lt;/APPLET&gt;
</PRE>
</DIV>

<p class=para>
There is another advantage to the use of JAR files.  Every
JAR file contains a "manifest" file, which you either
specify explicitly when you create the archive, or which is
created for you by the <i class=emphasis>jar</I> tool.  The manifest is
stored in a file named <tt class=literal>META-INF/MANIFEST.MF</tt> and
contains meta-information about the files in the archive.
By default, the <i class=emphasis>jar</I> tool creates a manifest file that
contains MD5 and SHA message digests for
each file in the archive.  This information can be used by
the applet viewer or Web browser to verify that the files in
the archive have not been corrupted since the JAR file was
created.

<p class=para>
The main reason to include message digests in the manifest
file, however, is so that a JAR file can have digital
signatures added to it.  An archive can be
signed with the <i class=emphasis>javakey</I> tool.  What a digital
signature allows you to do is verify that the files in a JAR
file have not been modified since the digital signature was
added to the archive.  If you trust the person or entity who
signed the file, then you ought to trust the applet
contained in the JAR file.  (The <i class=emphasis>javakey</I> tool allows
you to specify whether or not you trust any given entity.)
<a href="ch06_01.htm">Chapter 6, <i>Applets</i></A> also describes how you might use digital signatures
and <i class=emphasis>javakey</I>.

<p class=para>
In JDK 1.1, the <i class=emphasis>appletviewer</I> tool understands
digitally signed JAR files. When it loads an applet
that has been signed by a trusted entity, it runs that
applet without subjecting it to the usual security
restrictions--the applet can read and write files, and do
anything that a standalone Java application can do.  Common
Web browsers are likely to follow suit and give special
privileges to trusted applets.  One refinement we may see in
the future is the ability to specify varying levels of
trust, and to assign different sets of privileges to applets
at those varying trust levels.

<p class=para>
Besides the introduction of JAR files and trusted applets,
Java 1.1 also supports "serialized applets." In an
<tt class=literal>&lt;APPLET&gt;</tt> tag, you can specify the <tt class=literal>OBJECT</tt>
attribute instead of the <tt class=literal>CODE</tt> attribute.  If you do
this, the value of the <tt class=literal>OBJECT</tt> attribute should be
the name of a file that contains a serialized representation
of the applet to be run.  Graphical application-builder
tools may prefer to output applets as pre-initialized object
trees, rather than generating custom Java code to perform
the initializations. See <a href="ch09_01.htm">Chapter 9, <i>Object Serialization</i></A> for more information on
serialized applets.

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch04_10.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch04_12.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Enterprise APIs: JDBC, RMI, and Security</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>New JDK Utilities</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
