<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 27] 27.2 java.math.BigInteger (JDK 1.1)</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:29:38 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch27_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 27<br>The java.math Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch28_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-27-SECT-2">27.2 java.math.BigInteger (JDK 1.1)</A></h2>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-27-SECT-2.1"></A></h3>
</DIV>

<p class=para>
This subclass of <tt class=literal>java.lang.Number</tt> represents
integers that can be arbitrarily large--i.e., integers that
are not limited to the 64 bits available with the
<tt class=literal>long</tt> data type.  <tt class=literal>BigInteger</tt> defines methods
that duplicate the functionality of the standard Java
arithmetic and bit-manipulation operators.  The
<tt class=literal>compareTo()</tt> method compares two <tt class=literal>BigInteger</tt>
objects, and returns -1, 0, or 1 to indicate the result of
the comparison.

<p class=para>
The <tt class=literal>gcd()</tt>, <tt class=literal>modPow()</tt>, <tt class=literal>modInverse()</tt>,
and <tt class=literal>isProbablePrime()</tt> methods perform advanced
operations and are used primarily in cryptography and
related algorithms.

<div class=screen>
<p>
<pre>
public class <tt class=literal>BigInteger</tt> extends Number {
    // <tt class=literal>Public Constructors</tt>
            public <tt class=literal>BigInteger</tt>(byte[] <tt class=literal>val</tt>) throws NumberFormatException;
            public <tt class=literal>BigInteger</tt>(int <tt class=literal>signum</tt>, byte[] <tt class=literal>magnitude</tt>) throws NumberFormatException;
            public <tt class=literal>BigInteger</tt>(String <tt class=literal>val</tt>, int <tt class=literal>radix</tt>) throws NumberFormatException;
            public <tt class=literal>BigInteger</tt>(String <tt class=literal>val</tt>) throws NumberFormatException;
            public <tt class=literal>BigInteger</tt>(int <tt class=literal>numBits</tt>, Random <tt class=literal>rndSrc</tt>) throws IllegalArgumentException;
            public <tt class=literal>BigInteger</tt>(int <tt class=literal>bitLength</tt>, int <tt class=literal>certainty</tt>, Random <tt class=literal>rnd</tt>);
    // <tt class=literal>Class Methods</tt>
            public static BigInteger <tt class=literal>valueOf</tt>(long <tt class=literal>val</tt>);
    // <tt class=literal>Public Instance Methods</tt>
            public BigInteger <tt class=literal>abs</tt>();
            public BigInteger <tt class=literal>add</tt>(BigInteger <tt class=literal>val</tt>) throws ArithmeticException;
            public BigInteger <tt class=literal>and</tt>(BigInteger <tt class=literal>val</tt>);
            public BigInteger <tt class=literal>andNot</tt>(BigInteger <tt class=literal>val</tt>);
            public int <tt class=literal>bitCount</tt>();
            public int <tt class=literal>bitLength</tt>();
            public BigInteger <tt class=literal>clearBit</tt>(int <tt class=literal>n</tt>) throws ArithmeticException;
            public int <tt class=literal>compareTo</tt>(BigInteger <tt class=literal>val</tt>);
            public BigInteger <tt class=literal>divide</tt>(BigInteger <tt class=literal>val</tt>) throws ArithmeticException;
            public BigInteger[] <tt class=literal>divideAndRemainder</tt>(BigInteger <tt class=literal>val</tt>) throws ArithmeticException;
            public double <tt class=literal>doubleValue</tt>();  //<tt class=literal> Defines Number</tt>
            public boolean <tt class=literal>equals</tt>(Object <tt class=literal>x</tt>);  //<tt class=literal> Overrides Object</tt>
            public BigInteger <tt class=literal>flipBit</tt>(int <tt class=literal>n</tt>) throws ArithmeticException;
            public float <tt class=literal>floatValue</tt>();  //<tt class=literal> Defines Number</tt>
            public BigInteger <tt class=literal>gcd</tt>(BigInteger <tt class=literal>val</tt>);
            public int <tt class=literal>getLowestSetBit</tt>();
            public int <tt class=literal>hashCode</tt>();  //<tt class=literal> Overrides Object</tt>
            public int <tt class=literal>intValue</tt>();  //<tt class=literal> Defines Number</tt>
            public boolean <tt class=literal>isProbablePrime</tt>(int <tt class=literal>certainty</tt>);
            public long <tt class=literal>longValue</tt>();  //<tt class=literal> Defines Number</tt>
            public BigInteger <tt class=literal>max</tt>(BigInteger <tt class=literal>val</tt>);
            public BigInteger <tt class=literal>min</tt>(BigInteger <tt class=literal>val</tt>);
            public BigInteger <tt class=literal>mod</tt>(BigInteger <tt class=literal>m</tt>);
            public BigInteger <tt class=literal>modInverse</tt>(BigInteger <tt class=literal>m</tt>) throws ArithmeticException;
            public BigInteger <tt class=literal>modPow</tt>(BigInteger <tt class=literal>exponent</tt>, BigInteger <tt class=literal>m</tt>);
            public BigInteger <tt class=literal>multiply</tt>(BigInteger <tt class=literal>val</tt>);
            public BigInteger <tt class=literal>negate</tt>();
            public BigInteger <tt class=literal>not</tt>();
            public BigInteger <tt class=literal>or</tt>(BigInteger <tt class=literal>val</tt>);
            public BigInteger <tt class=literal>pow</tt>(int <tt class=literal>exponent</tt>) throws ArithmeticException;
            public BigInteger <tt class=literal>remainder</tt>(BigInteger <tt class=literal>val</tt>) throws ArithmeticException;
            public BigInteger <tt class=literal>setBit</tt>(int <tt class=literal>n</tt>) throws ArithmeticException;
            public BigInteger <tt class=literal>shiftLeft</tt>(int <tt class=literal>n</tt>);
            public BigInteger <tt class=literal>shiftRight</tt>(int <tt class=literal>n</tt>);
            public int <tt class=literal>signum</tt>();
            public BigInteger <tt class=literal>subtract</tt>(BigInteger <tt class=literal>val</tt>);
            public boolean <tt class=literal>testBit</tt>(int <tt class=literal>n</tt>) throws ArithmeticException;
            public byte[] <tt class=literal>toByteArray</tt>();
            public String <tt class=literal>toString</tt>(int <tt class=literal>radix</tt>);
            public String <tt class=literal>toString</tt>();  //<tt class=literal> Overrides Object</tt>
            public BigInteger <tt class=literal>xor</tt>(BigInteger <tt class=literal>val</tt>);
}
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-27-SECT-2.2">Hierarchy:</A></h3>

<p class=para>
Object->Number(Serializable)->BigInteger

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-27-SECT-2.3">Passed To:</A></h3>

<p class=para>
BigDecimal()

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-27-SECT-2.4">Returned By:</A></h3>

<p class=para>
BigDecimal.toBigInteger()

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch27_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch28_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.math.BigDecimal (JDK 1.1)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>The java.net Package</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
