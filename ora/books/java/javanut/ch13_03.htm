<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 13] 13.3 Operators</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:00:51 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="Content-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch13_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 13<br>Java Syntax</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch13_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-13-SECT-3">13.3 Operators</A></h2>

<p class=para>
<a name="CH13.OPERATORS-LI1"></A><a name="CH13.PRECEDENCE.1"></A><a href="#JNUT2-CH-13-SECT-3">Operators</A>
lists the operators of the Java language, along with their precedence,
operand types, and associativity.

<p>
<div class=table>
<table border>
<caption><a class="TITLE" name="JNUT2-CH-13-TAB-3">Table 13.3: Java Operators</A></CAPTION>
<tr class=row>
<th align="left">Prec.</TH>
<th align="left">Operator</TH>
<th align="left">Operand Type(s)</TH>
<th align="left">Assoc.</TH>
<th align="left">Operation Performed</TH>
</TR>
<tr class=row>
<td align="left">1</TD>
<td align="left">++</TD>
<td align="left">arithmetic</TD>
<td align="left">R</TD>
<td align="left">pre-or-post increment (unary)</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">--</TD>
<td align="left">arithmetic</TD>
<td align="left">R</TD>
<td align="left">pre-or-post decrement (unary)</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">+, -</TD>
<td align="left">arithmetic</TD>
<td align="left">R</TD>
<td align="left">unary plus, unary minus</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">~</TD>
<td align="left">integral</TD>
<td align="left">R</TD>
<td align="left">bitwise complement (unary)</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">!</TD>
<td align="left">boolean</TD>
<td align="left">R</TD>
<td align="left">logical complement (unary)</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">(<i class=emphasis>type</I>)</TD>
<td align="left">any</TD>
<td align="left">R</TD>
<td align="left">cast</TD>
</TR>
<tr class=row>
<td align="left">2</TD>
<td align="left">*, /, %</TD>
<td align="left">arithmetic</TD>
<td align="left">L</TD>
<td align="left">multiplication, division, remainder</TD>
</TR>
<tr class=row>
<td align="left">3</TD>
<td align="left">+, -</TD>
<td align="left">arithmetic</TD>
<td align="left">L</TD>
<td align="left">addition, subtraction</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">+</TD>
<td align="left">string</TD>
<td align="left">L</TD>
<td align="left">string concatenation</TD>
</TR>
<tr class=row>
<td align="left">4</TD>
<td align="left">&lt;&lt;</TD>
<td align="left">integral</TD>
<td align="left">L</TD>
<td align="left">left shift</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">&gt;&gt;</TD>
<td align="left">integral</TD>
<td align="left">L</TD>
<td align="left">right shift with sign extension</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">&gt;&gt;&gt;</TD>
<td align="left">integral</TD>
<td align="left">L</TD>
<td align="left">right shift with zero extension</TD>
</TR>
<tr class=row>
<td align="left">5</TD>
<td align="left">&lt;, &lt;=</TD>
<td align="left">arithmetic</TD>
<td align="left">L</TD>
<td align="left">less than, less than or equal</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">&gt;, &gt;=</TD>
<td align="left">arithmetic</TD>
<td align="left">L</TD>
<td align="left">greater than, greater than or equal</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">instanceof</TD>
<td align="left">object, type</TD>
<td align="left">L</TD>
<td align="left">type comparison</TD>
</TR>
<tr class=row>
<td align="left">6</TD>
<td align="left">==</TD>
<td align="left">primitive</TD>
<td align="left">L</TD>
<td align="left">equal (have identical values)</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">!=</TD>
<td align="left">primitive</TD>
<td align="left">L</TD>
<td align="left">not equal (have different values)</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">==</TD>
<td align="left">object</TD>
<td align="left">L</TD>
<td align="left">equal (refer to same object)</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">!=</TD>
<td align="left">object</TD>
<td align="left">L</TD>
<td align="left">not equal (refer to different objects)</TD>
</TR>
<tr class=row>
<td align="left">7</TD>
<td align="left">&amp;</TD>
<td align="left">integral</TD>
<td align="left">L</TD>
<td align="left">bitwise AND</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">&amp;</TD>
<td align="left">boolean</TD>
<td align="left">L</TD>
<td align="left">boolean AND</TD>
</TR>
<tr class=row>
<td align="left">8</TD>
<td align="left">^</TD>
<td align="left">integral</TD>
<td align="left">L</TD>
<td align="left">bitwise XOR</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">^</TD>
<td align="left">boolean</TD>
<td align="left">L</TD>
<td align="left">boolean XOR</TD>
</TR>
<tr class=row>
<td align="left">9</TD>
<td align="left">|</TD>
<td align="left">integral</TD>
<td align="left">L</TD>
<td align="left">bitwise OR</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">|</TD>
<td align="left">boolean</TD>
<td align="left">L</TD>
<td align="left">boolean OR</TD>
</TR>
<tr class=row>
<td align="left">10</TD>
<td align="left">&amp;&amp;</TD>
<td align="left">boolean</TD>
<td align="left">L</TD>
<td align="left">conditional AND</TD>
</TR>
<tr class=row>
<td align="left">11</TD>
<td align="left">||</TD>
<td align="left">boolean</TD>
<td align="left">L</TD>
<td align="left">conditional OR</TD>
</TR>
<tr class=row>
<td align="left">12</TD>
<td align="left">?:</TD>
<td align="left">boolean, any, any</TD>
<td align="left">R</TD>
<td align="left">conditional (ternary) operator</TD>
</TR>
<tr class=row>
<td align="left">13</TD>
<td align="left">

<p class=para>
=</TD>
<td align="left">variable, any</TD>
<td align="left">R</TD>
<td align="left">assignment</TD>
</TR>
<tr class=row>
<td align="left">&nbsp;</TD>
<td align="left">

<p class=para>
*=, /=, %=, +=, -=, &lt;&lt;=, &gt;&gt;=, &gt;&gt;&gt;=, &amp;=, ^=, |=</TD>
<td align="left">variable, any</TD>
<td align="left">R</TD>
<td align="left">assignment with operation</TD>
</TR>
</TABLE>
<p>
</DIV>
<p class=para>
Operator precedence controls the order in which operations are
performed.  Consider the following example:

<p class=para>
<div class=screen>
<p>
<pre>
w = x + y * z;
</PRE>
</DIV>

<p class=para>
The multiplication operator <tt class=literal>*</tt> has a higher
precedence than the addition operator <tt class=literal>+</tt>, so the
multiplication is performed before the addition.
Furthermore, the assignment operator <tt class=literal>=</tt> has the
lowest precedence of any operator, so the assignment is
done after all the operations on the right-hand side are
performed.  Operators with the same precedence (like
addition and subtraction) are performed in order according
to their associativity
(usually left-to-right).  Operator precedence
can be overridden with the explicit use of parentheses. For example:

<p class=para>
<div class=screen>
<p>
<pre>
w = (x + y) * z;
</PRE>
</DIV>

<p class=para>
The associativity of an operator specifies the order that
operations of the same precedence are performed in.  In
<a href="#JNUT2-CH-13-TAB-3">Table 13.3</A>
a value of L specifies left-to-right associativity, and a
value of R specifies right-to-left associativity.
Left-to-right associativity means that operations are
performed left-to-right.  For example:

<p class=para>
<div class=screen>
<p>
<pre>
w = x + y + z;
</PRE>
</DIV>

<p class=para>
is the same as:

<p class=para>
<div class=screen>
<p>
<pre>
w = ((x + y) + z);
</PRE>
</DIV>

<p class=para>
because the addition operator has left-to-right
associativity. On the other hand, the following expressions:

<p class=para>
<div class=screen>
<p>
<pre>
x = ~-~y;
q = a?b:c?d:e?f:g;
</PRE>
</DIV>

<p class=para>
are equivalent to:

<p class=para>
<div class=screen>
<p>
<pre>
x = ~(-(~y));
q = a?b:(c?d:(e?f:g));
</PRE>
</DIV>

<p class=para>
because the unary operators and the ternary conditional
<tt class=literal>?:</tt> operator have right-to-left associativity.

<p class=para>
Java operators are basically identical to C operators,
except for these differences:

<p>
<ul class=itemizedlist>
<li class=listitem>The <tt class=literal>+</tt> operator applied to <tt class=literal>String</tt> values
concatenates them.  If only one operand of <tt class=literal>+</tt> is a
<tt class=literal>String</tt>, the other one is converted to a string.
The conversion is done automatically for primitive types
and by calling the <tt class=literal>toString</tt> method of non-primitive
types.

<p>
<li class=listitem>Java does not have the comma operator like C does.  It does,
however, simulate this operator in the limited context of the
<tt class=literal>for</tt> loop initialization and increment expressions.

<p>
<li class=listitem>Since all Java integral types are signed, the <tt class=literal>&gt;&gt;</tt>
operator always does a signed right shift, filling in high
bits with the sign bit of the operand.  The new <tt class=literal>&gt;&gt;&gt;</tt>
operator performs an unsigned right shift, filling in high
bits of the shifted value with zero bits.

<p>
<li class=listitem>The <tt class=literal>&amp;</tt> and <tt class=literal>|</tt> operators perform bitwise AND
and OR operations on integral operands, and perform logical
AND and OR operators on <tt class=literal>boolean</tt> operands.
<tt class=literal>&amp;&amp;</tt> and <tt class=literal>||</tt> also perform logical AND and OR on
<tt class=literal>boolean</tt> operands, but do not evaluate the right-hand
operand, if the result of the operation is fully determined
by the left-hand operand.

<p>
<li class=listitem>The <tt class=literal>instanceof</tt> operator returns <tt class=literal>true</tt> if the
object on the left-hand side is an instance of the class or
implements the interface on the right-hand side.  Otherwise
it returns <tt class=literal>false</tt>.  If the left-hand side is
<tt class=literal>null</tt>, it returns <tt class=literal>false</tt>.

<p>
</UL>
<p class=para>
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch13_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch13_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Character Escape Sequences</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Modifiers</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
