<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 6] Applets</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 15:53:19 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="Content-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch05_06.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 6</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch06_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<h1 class=chapter><a class="TITLE" name="JNUT2-CH-6">6. Applets</A></H1>

<div class=htmltoc>

<p>
<b>Contents:</b><br>
Introduction to Applets<br>
<a href="ch06_02.htm">A First Applet</A><br>
<a href="ch06_03.htm">Drawing Graphics</A><br>
<a href="ch06_04.htm">Handling Events</A><br>
<a href="ch06_05.htm">Reading Applet Parameters</A><br>
<a href="ch06_06.htm">Images and Sounds</A><br>
<a href="ch06_07.htm">JAR Files</A><br>
<a href="ch06_08.htm">Applet Security Restrictions</A><br>
<a href="ch06_09.htm">Signed Applets</A><br>

<p>
</DIV>

<p class=para>
This chapter demonstrates the techniques of applet writing.
It proceeds from a trivial "Hello World" applet to more
sophisticated applets. Along the way, it explains how to:

<p>
<ul class=itemizedlist>
<li class=listitem>Draw graphics in your applet.

<p>
<li class=listitem>Handle and respond to simple user input.

<p>
<li class=listitem>Read and use values of applet parameters, allowing
customization of an applet.

<p>
<li class=listitem>Load and display images and load and play sounds.

<p>
<li class=listitem>Package an applet and related files into a JAR file.

<p>
<li class=listitem>Attach a digital signature to an applet.

<p>
</UL>
<p class=para>
<a name="CH6.APPLETS-1"></A>Study the examples carefully. They are the important part of
this chapter! You may find it useful to refer to the quick
reference in <a href="ch17_01.htm">Chapter 17, <i>The java.applet Package</i></A>
while reading these examples.

<p class=para>
Note that this chapter merely introduces the framework for
writing applets.  Applets, like other Java programs, use
features from throughout the Java API. See <a href="ch07_01.htm">Chapter 7, <i>Events</i></A>,
in particular, for details on event processing in Java applets and
applications.

<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-6-SECT-1">6.1 Introduction to Applets</A></h2>

<p class=para>
An applet, as the name implies, is a kind of
mini-application, designed to be
run by a Web browser, or in the context of some other
"applet viewer."  Applets differ from regular applications
in a number of ways.  One of the most important is that
there are a number of security restrictions on what applets are
allowed to do.  An applet often consists of untrusted code,
so it cannot be allowed access to the local file system, for
example.  The details of applet security and the restrictions placed
on applets are discussed at the end of this chapter.

<p class=para>
From a programmer's standpoint, one of the biggest
differences between applets and applications is that applets
do not have a <tt class=literal>main()</tt> method, or other single entry
point from which the program starts running.  Instead, to
write an applet, you subclass the <tt class=literal>Applet</tt> class and
override a number of standard methods.  At appropriate
times, under well-defined circumstances, the Web browser or
applet viewer invokes the methods you have defined.
The applet is not in control of the thread of execution; it
simply responds when the browser or viewer tells it to.  For
this reason, the methods you write must take the necessary
action and return promptly--they are not allowed to enter
time-consuming (or infinite) loops.  In order to perform a
time-consuming or repetitive task, such as animation, an
applet must create its own thread, over which it does have
complete control.

<p class=para>
The task of writing an applet, then, comes down to defining
the appropriate methods.  A number of these methods are
defined by the <tt class=literal>Applet</tt> class:

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>init()</tt><br>
<dd>

<p class=para>
Called when the applet is first loaded into the browser or
viewer.  It is typically used to perform applet
initialization, in preference to a constructor method.  (The
Web browser doesn't pass any arguments to an applet's
constructor method, so defining one isn't too useful.)

<p>
<dt class=varlistentry><tt class=literal>destroy()</tt><br>
<dd>

<p class=para>
Called when the applet is about to be unloaded from the
browser or viewer.  It should free any resources, other than
memory, that the applet has allocated.

<p>
<dt class=varlistentry><tt class=literal>start()</tt><br>
<dd>

<p class=para>
Called when the applet becomes visible and should start
doing whatever it is that it does.  Often used with
animation and with threads.

<p>
<dt class=varlistentry><tt class=literal>stop()</tt><br>
<dd>

<p class=para>
Called when the applet becomes temporarily invisible, for
example, when the user has scrolled it off the screen.
Tells the applet to stop performing an animation or other
task.

<p>
<dt class=varlistentry><tt class=literal>getAppletInfo()</tt><br>
<dd>

<p class=para>
Called to get information about the applet.  Should return a
string suitable for display in a dialog box.

<p>
<dt class=varlistentry><tt class=literal>getParameterInfo()</tt><br>
<dd>

<p class=para>
Called to obtain information about the parameters the applet
responds to.  Should return strings describing those
parameters.</DL>
<p class=para>
In addition to these <tt class=literal>Applet</tt> methods,
there are a number of other methods, inherited
from superclasses of <tt class=literal>Applet</tt>, that the browser
invokes at appropriate times, and that an applet should
override.  The most obvious of these methods is
<tt class=literal>paint()</tt>, which the browser or viewer invokes to ask
the applet to draw itself on the screen.  In Java 1.1, a
related method is <tt class=literal>print()</tt>, which an applet should
override if it wants to display itself on paper differently
than it does on the screen.  There are quite a few other
methods that applets should override to respond to events.
For example, if an applet wants to respond to mouse clicks,
it should override <tt class=literal>mouseDown()</tt>.  (As we'll see in
<a href="ch07_01.htm">Chapter 7, <i>Events</i></A>, however, there are other, preferred, ways to
receive mouse events in Java 1.1.)

<p class=para>
The <tt class=literal>Applet</tt> class also defines some
methods that are commonly used by applets:

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>getImage()</tt><br>
<dd>

<p class=para>
Loads an image file from the network and returns an
<tt class=literal>Image</tt> object.

<p>
<dt class=varlistentry><tt class=literal>getAudioClip()</tt><br>
<dd>

<p class=para>
Loads a sound clip from the network and returns an
<tt class=literal>AudioClip</tt> object.

<p>
<dt class=varlistentry><tt class=literal>getParameter()</tt><br>
<dd>

<p class=para>
Looks up and returns the value of a named parameter,
specified in the HTML file that refers to the applet
with the <tt class=literal>&lt;PARAM&gt;</tt> tag.

<p>
<dt class=varlistentry><tt class=literal>getCodeBase()</tt><br>
<dd>

<p class=para>
Returns the base URL from which the applet class file was
loaded.

<p>
<dt class=varlistentry><tt class=literal>getDocumentBase()</tt><br>
<dd>

<p class=para>
Returns the base URL of the HTML file that refers to the
applet.

<p>
<dt class=varlistentry><tt class=literal>showStatus()</tt><br>
<dd>

<p class=para>
Displays a message in the status line of the browser or
applet viewer.

<p>
<dt class=varlistentry><tt class=literal>getAppletContext()</tt><br>
<dd>

<p class=para>
Returns the <tt class=literal>AppletContext</tt> object for the applet.
<tt class=literal>AppletContext</tt> defines the useful
<tt class=literal>showDocument()</tt> method that asks the browser to load
and display a new Web page.</DL>
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch05_06.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch06_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Other New Features of Java 1.1</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>A First Applet</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
