<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 24] 24.27 java.io.FilterWriter (JDK 1.1)</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Jul 31 16:22:14 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java">
<meta name="title" content="Java in a Nutshell">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java in a Nutshell" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch24_26.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 24<br>The java.io Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch24_28.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JNUT2-CH-24-SECT-27">24.27 java.io.FilterWriter (JDK 1.1)</A></h2>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-24-SECT-27.1"></A></h3>
</DIV>

<p class=para>
This abstract class is intended to act as a superclass for
character output streams that filter the data written to
them before writing it to some other character output
stream.

<p class=para>
<tt class=literal>FilterWriter</tt> is declared <tt class=literal>abstract</tt>, so that
it cannot be instantiated.  But none of its methods are
themselves abstract: they all simply invoke the
corresponding method on the output stream that was passed to
the <tt class=literal>FilterWriter</tt> constructor.  If you were allowed to
instantiate a <tt class=literal>FilterWriter</tt> object, you'd find that it
acts as a "null filter"--that it simply passes the
characters written to it along, without any filtration.

<p class=para>
Because <tt class=literal>FilterWriter</tt> implements a "null filter," it
is an ideal superclass for classes that want to implement
simple filters without having to override all of the methods
of <tt class=literal>Writer</tt>.  In order to create your own filtered
character output stream, you should subclass
<tt class=literal>FilterWriter</tt> and override all of its <tt class=literal>write()</tt>
methods to perform the desired filtering operation.  Note
that you can implement two of the <tt class=literal>write()</tt> methods in
terms of the third, and thus only implement your filtering
algorithm once.  In some cases, you may want to override
other <tt class=literal>Writer</tt> methods as well, and you may often want
to add other methods or constructors that are specific to
your subclass.

<p class=para>
<tt class=literal>FilterWriter</tt> is the character-stream analog of
<tt class=literal>FilterOutputStream</tt>. 

<div class=screen>
<p>
<pre>
public abstract class <tt class=literal>FilterWriter</tt> extends Writer {
    // <tt class=literal>Protected Constructor</tt>
            protected <tt class=literal>FilterWriter</tt>(Writer <tt class=literal>out</tt>);
    // <tt class=literal>Protected Instance Variables</tt>
            protected Writer <tt class=literal>out</tt>;
    // <tt class=literal>Public Instance Methods</tt>
            public void <tt class=literal>close</tt>() throws IOException;  //<tt class=literal> Defines Writer</tt>
            public void <tt class=literal>flush</tt>() throws IOException;  //<tt class=literal> Defines Writer</tt>
            public void <tt class=literal>write</tt>(int <tt class=literal>c</tt>) throws IOException;  //<tt class=literal> Overrides Writer</tt>
            public void <tt class=literal>write</tt>(char[] <tt class=literal>cbuf</tt>, int <tt class=literal>off</tt>, int <tt class=literal>len</tt>) throws IOException;  //<tt class=literal> Defines Writer</tt>
            public void <tt class=literal>write</tt>(String <tt class=literal>str</tt>, int <tt class=literal>off</tt>, int <tt class=literal>len</tt>) throws IOException;  //<tt class=literal> Overrides Writer</tt>
}
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JNUT2-CH-24-SECT-27.2">Hierarchy:</A></h3>

<p class=para>
Object->Writer->FilterWriter

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch24_26.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch24_28.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>java.io.FilterReader (JDK 1.1)</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>java.io.InputStream (JDK 1.0)</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
