<html>
<head>
<title>[Chapter 16] 16.2 Transferable Interface</TITLE>
<meta name="author" content="John Zukowski">
<meta name="date" content="Thu Jul 31 14:56:59 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java AWT">
<meta name="title" content="Java AWT">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java AWT" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch16_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 16<br>Data Transfer</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch16_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JAWT-CH-16-SECT-2">16.2 Transferable Interface</A></h2>

<p class=para>
Objects that can be placed on a clipboard 
must implement the <tt class=literal>Transferable</tt> 
interface. This interface defines a number of methods that let an object 
describe how it presents itself to clipboard 
readers. That sounds complex, but it isn't really; these methods 
let a clipboard reader find out what data flavors are available and what 
Java types they represent. 

<p class=para>
The significance of the <tt class=literal>Transferable</tt> 
interface is that it provides a way to get information about the object 
on the clipboard without knowing what the object actually is. When you 
read the clipboard, you don't necessarily know what kind of object 
is there. It might be some kind of text string, but it could just as likely 
be something bizarre. However, you shouldn't have to care. If you're 
looking for a <tt class=literal>String</tt>, you care only that the object exists in a <tt class=literal>stringFlavor</tt> 
representation. These methods let you ask the object 
what flavors it supports. 

<p class=para>
For text strings, the data transfer package provides a <tt class=literal>StringSelection</tt> 
class that implements <tt class=literal>Transferable</tt>. 
At this point, if you want to transfer other kinds of objects, you'll 
have to create a class that implements <tt class=literal>Transferable</tt> 
yourself. It wouldn't be unreasonable for JavaSoft to provide other 
"selection" classes (for example, <tt class=literal>ImageSelection</tt>) 
in the future. Methods

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public abstract DataFlavor[] getTransferDataFlavors() <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>getTransferDataFlavors()</tt> 
method should return a sorted array of <tt class=literal>DataFlavor</tt>s 
that you support. The most descriptive flavor should be the first element 
in the array and the least descriptive, last. For example, a textual object 
would place <tt class=literal>DataFlavor.plainTextFlavor</tt> 
last, because it has less information than <tt class=literal>DataFlavor.stringFlavor</tt> 
(which includes information like the length of the string) and much less 
information than a hypothetical flavor like <tt class=literal>DataFlavor.richTextFlavor</tt>. 

<p>
<dt class=varlistentry><i class=emphasis>public abstract boolean isDataFlavorSupported(DataFlavor flavor) <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>isDataFlavorSupported()</tt> 
method should return <tt class=literal>true</tt> if 
the object supports the given <tt class=literal>flavor</tt> 
and <tt class=literal>false</tt> otherwise. 

<p>
<dt class=varlistentry><i class=emphasis>public abstract Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException, IOException <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>getTransferData()</tt> method 
is the most complicated to implement. It should return an instance of the 
class representing the data in the given <tt class=literal>flavor</tt>. 
If <tt class=literal>flavor</tt> is not supported 
by this object, <tt class=literal>getTransferData()</tt> 
must throw the <tt class=literal>UnsupportedFlavorException</tt>. 
However, this method must be able to return a class for each flavor the 
object supports (i.e., each data flavor listed by <tt class=literal>getTransferDataFlavors()</tt>). 
The method could throw an <tt class=literal>IOException</tt> 
when returning with a <tt class=literal>Reader</tt> 
as the representation class. For example, if some data flavor required 
you to return a <tt class=literal>FileReader</tt> 
and the file doesn't exist, this method might throw an <tt class=literal>IOException</tt>. </DL>
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch16_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch16_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>DataFlavor</td>
<td width=171 align=center valign=top><a href="index/idx_a.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>ClipboardOwner Interface</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
