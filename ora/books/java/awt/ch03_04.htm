<html>
<head>
<title>[Chapter 3] 3.4 SystemColor</TITLE>
<meta name="author" content="John Zukowski">
<meta name="date" content="Thu Jul 31 14:27:37 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java AWT">
<meta name="title" content="Java AWT">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java AWT" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch03_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 3<br>Fonts and Colors</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch03_05.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JAWT-CH-3-SECT-4">3.4 SystemColor</A></h2>

<p class=para>
<a name="CH03.THEME1"></A><a name="CH03.THEME2"></A><a name="CH03.THEME3"></A>In Java 1.1, AWT provides access to desktop color schemes, or <i class=emphasis>themes</I>. 
To give you an idea of how these themes work, with the Windows Standard 
scheme for the Windows 95 desktop, buttons have a gray background with black 
text. If you use the control panel to change to a High Contrast 
Black scheme, the button's background becomes black and the 
text white. Prior to 1.1, Java didn't know anything about desktop 
colors: all color values were hard coded. If you asked for a particular 
shade of gray, you got that shade, and that was it; applets and applications 
had no knowledge of the desktop color scheme in effect, and therefore, 
wouldn't change in response to changes in the color scheme. 

<p class=para>
<a name="CH03.CONST2"></A> <a name="CH03.CONST3"></A><a name="CH03.CONST4"></A>
 Starting with
Java 1.1, you can write programs that react to changes in the color
scheme: for example, a button's color will change automatically
when you use the control panel to change the color scheme. To do so,
you use a large number of constants that are defined in the
<tt class=literal>SystemColor</tt> class. Although these constants are
<tt class=literal>public</tt> <tt class=literal>static</tt>
<tt class=literal>final</tt>, they actually have a very strange
behavior. Your program is not allowed to modify them (like any other
constant). However, their initial values are loaded at run-time, and
their values may change, corresponding to changes in
the color scheme. This has one important consequence for programmers:
you should not use <tt class=literal>equals()</tt>to compare a
<tt class=literal>SystemColor</tt> with a "regular"
<tt class=literal>Color</tt>; use the <tt class=literal>getRGB()</tt>
methods of the colors you are comparing to ensure that you compare the
current color value.[1] <a href="ch03_06.htm">Using Desktop Colors</A>
contains a usage example.

<blockquote class=footnote>
<p class=para>[1] 
The omission of an
<tt class=literal>equals()</tt> method that can properly compare a
<tt class=literal>SystemColor</tt> with a <tt class=literal>Color</tt> is
unfortunate.
</blockquote>
<p class=para>
Because <tt class=literal>SystemColor</tt> is a subclass 
of <tt class=literal>Color</tt>, you can use a <tt class=literal>SystemColor</tt> 
anywhere you can use a <tt class=literal>Color</tt> 
object. You will never create your own <tt class=literal>SystemColor</tt> 
objects; there is no public constructor. The only objects in this class 
are the twenty or so <tt class=literal>SystemColor</tt> 
constants. 

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JAWT-CH-3-SECT-4.1">SystemColor Methods</A></h3>Constants

<p class=para>
There are two sets of constants within <tt class=literal>SystemColor</tt>. 
The first set provides names for indices into the internal system color 
lookup table; you will probably never need to use these. All of them have 
corresponding constants in the second set, except <tt class=literal>SystemColor.NUM_COLORS</tt>, 
which tells you how many <tt class=literal>SystemColor</tt> 
constants are in the second set. 

<div class=simplelist>

<p>
<i class=emphasis>public final static int ACTIVE_CAPTION</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int ACTIVE_CAPTION_BORDER</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int ACTIVE_CAPTION_TEXT</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int CONTROL</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int CONTROL_DK_SHADOW</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int CONTROL_HIGHLIGHT</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int CONTROL_LT_HIGHLIGHT</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int CONTROL_SHADOW</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int CONTROL_TEXT</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int DESKTOP</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int INACTIVE_CAPTION</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int INACTIVE_CAPTION_BORDER</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int INACTIVE_CAPTION_TEXT</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int INFO</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int INFO_TEXT</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int MENU</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int MENU_TEXT</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int NUM_COLORS</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int SCROLLBAR</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int TEXT</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int TEXT_HIGHLIGHT</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int TEXT_HIGHLIGHT_TEXT</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int TEXT_INACTIVE_TEXT</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int TEXT_TEXT</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int WINDOW</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int WINDOW_BORDER</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
<i class=emphasis>public final static int WINDOW_TEXT</I> <img src="gifs/bstar.gif" alt="(New)" border=0><br>
</DIV>

<p class=para>
The second set of constants is the set of <tt class=literal>SystemColor</tt>s 
you use when creating <tt class=literal>Component</tt> 
objects, to ensure they appear similar to other objects in the user's 
desktop environment. By using these symbolic constants, you can create 
new objects that are well integrated into the user's desktop environment, 
making it easier for the user to work with your program. 

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public final static SystemColor activeCaption <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>activeCaption</tt> color represents 
the background color for the active window's title area. This is 
automatically set for you when you use <tt class=literal>Frame</tt>. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor activeCaptionBorder  <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>activeCaptionBorder</tt> color 
represents the border color for the active window. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor activeCaptionText <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>activeCaptionText</tt> color 
represents the text color to use for the active window's title. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor control <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>control</tt> color represents 
the background color for the different components. If you are creating 
your own <tt class=literal>Component</tt> by subclassing 
<tt class=literal>Canvas</tt>, this should be the 
background color of the new object. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor controlDkShadow  <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>controlDkShadow</tt> color represents 
a dark shadow color to be used with <tt class=literal>control</tt> 
and <tt class=literal>controlShadow</tt> to simulate 
a three-dimensional appearance. Ordinarily, when not depressed, the <tt class=literal>controlDkShadow</tt> 
should be used for the object's bottom and right edges. When depressed, 
<tt class=literal>controlDkShadow</tt> should be used 
for the top and left edges. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor controlHighlight  <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>controlHighlight</tt> color 
represents an emphasis color for use in an area or an item of a custom 
component. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor controlLtHighlight <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>controlLtHighlight</tt> color 
represents a lighter emphasis color for use in an area or an item of a 
custom component. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor controlShadow  <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>controlShadow</tt> color represents 
a light shadow color to be used with <tt class=literal>control</tt> 
and <tt class=literal>controlDkShadow</tt> to simulate 
a three-dimensional appearance. Ordinarily, when not depressed, the <tt class=literal>controlShadow</tt> 
should be used for the top and left edges. When depressed, <tt class=literal>controlShadow</tt> 
should be used for the bottom and right edges. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor controlText  <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>controlText</tt> color represents 
the text color of a component. Before drawing any text in your own components, 
you should change the color to <tt class=literal>controlText</tt> 
with a statement like this: </DL>
<p class=para>
<div class=screen>
<p>
<pre>
g.setColor(SystemColor.controlText);
</PRE>
</DIV>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public final static SystemColor desktop <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>desktop</tt> color represents 
the background color of the desktop workspace. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor inactiveCaption <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>inactiveCaption</tt> color represents 
the background color for an inactive window's title area. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor inactiveCaptionBorder <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>inactiveCaptionBorder</tt> color 
represents the border color for an inactive window. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor inactiveCaptionText <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>inactiveCaptionText</tt> color 
represents the text color to use for each inactive window's title. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor info <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>info</tt> color represents the 
background color for mouse-over help text. When a mouse dwells over an 
object, any pop-up help text should be displayed in an area of this color. 
In the Microsoft Windows world, these are also called "tool tips." 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor infoText <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>infoText</tt> color represents 
the text color for mouse-over help text. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor menu <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>menu</tt> color represents the 
background color of deselected <tt class=literal>MenuItem</tt>-like 
objects. When the menu is selected, the <tt class=literal>textHighlight</tt> 
color is normally the background color. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor menuText <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>menuText</tt> color represents 
the color of the text on deselected <tt class=literal>MenuItem</tt>-like objects. When a menu 
is selected, the <tt class=literal>textHighlightText</tt> 
color is normally the text color. If the menu happens to be inactive, <tt class=literal>textInactiveText</tt> 
would be used. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor scrollbar <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>scrollbar</tt> color represents 
the background color for scrollbars. This color is used by default with 
<tt class=literal>Scrollbar</tt>, <tt class=literal>ScrollPane</tt>, 
<tt class=literal>TextArea</tt>, and <tt class=literal>List</tt> 
objects. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor textHighlight <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>textHighlight</tt> color represents 
the background color of highlighted text; for example, it is used for the 
selected area of a <tt class=literal>TextField</tt> 
or a selected <tt class=literal>MenuItem</tt>. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor textHighlightText <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>textHighlightText</tt> color 
represents the text color of highlighted text. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor textInactiveText <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>textInactiveText</tt> color 
represents the text color of an inactive component. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor textText <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>textText</tt> color represents 
the color of text in <tt class=literal>TextComponent</tt> 
objects. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor window <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>window</tt> color represents 
the background color of the window's display area. For an applet, 
this would be the display area specified by the <tt class=literal>WIDTH </tt>and <tt class=literal>HEIGHT</tt> 
values of the <tt class=literal>&lt;APPLET&gt;</tt> 
tag (<tt class=literal>setBackground(SystemColor.window)</tt>), 
although you would probably use it more for the background of a <tt class=literal>Frame</tt>. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor windowBorder <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>windowBorder</tt> color represents 
the color of the borders around a window. With AWT, instances of <tt class=literal>Window</tt> 
do not have borders, but instances of <tt class=literal>Frame</tt> 
and <tt class=literal>Dialog</tt> do. 

<p>
<dt class=varlistentry><i class=emphasis>public final static SystemColor windowText <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>windowText</tt> color represents 
the color of the text drawn within the window. </DL>
<div class=note>
<p class=note><blockquote><p><b>NOTE:</B> 
</blockquote><p>
</DIV>

<p class=para>
Every platform does not fully support every system color. However, 
on platforms that do not provide natural values for some constants, Java 
selects reasonable alternate colors. 
</blockquote><p>
</DIV>

<p class=para>
If you are going to be working only with Java's prefabricated components 
(<tt class=literal>Button</tt>, <tt class=literal>List</tt>, 
etc.), you don't have to worry about system colors; the component's 
default colors will be set appropriately. You are most likely to use system 
colors if you are creating your own components. In this case, you will 
use system colors to make your component emulate the behavior of other 
components; for example, you will use <tt class=literal>controlText</tt> 
as the color for drawing text, <tt class=literal>activeCaption</tt> 
as the background for the caption of an active window, and so on. Constructors

<p class=para>
There are no public constructors for <tt class=literal>SystemColor</tt>. 
If you need to create a new color, use the <tt class=literal>Color</tt> 
class described previously. Miscellaneous methods

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public int getRGB () </I><br>
<dd>

<p class=para>
The <tt class=literal>getRGB()</tt> method retrieves 
the current settings for red, green, and blue in one combined value, like 
<tt class=literal>Color</tt>. However, since the color 
value is dynamic, <tt class=literal>getRGB()</tt> 
needs to look up the value in an internal table. Therefore, <tt class=literal>SystemColor</tt> 
overrides <tt class=literal>Color.getRGB()</tt>. 

<p>
<dt class=varlistentry><i class=emphasis>public String toString () </I><br>
<dd>

<p class=para>
The <tt class=literal>toString()</tt> method of <tt class=literal>SystemColor</tt> 
returns a string showing the system color's index into its internal 
table. For example, the following string is returned by <tt class=literal>SystemColor.text.toString()</tt>: </DL>
<p class=para>
<div class=screen>
<p>
<pre>
java.awt.SystemColor[i=12]
</PRE>
</DIV>

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch03_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch03_05.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Color</td>
<td width=171 align=center valign=top><a href="index/idx_a.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Displaying Colors</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
