<html>
<head>
<title>[Chapter 7] 7.2 FlowLayout</TITLE>
<meta name="author" content="John Zukowski">
<meta name="date" content="Thu Jul 31 14:39:17 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java AWT">
<meta name="title" content="Java AWT">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java AWT" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch07_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 7<br>Layouts</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch07_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JAWT-CH-7-SECT-2">7.2 FlowLayout</A></h2>

<p class=para>
<a name="CH07.FLOW1"></A><a name="CH07.FLOW2"></A><a name="CH07.FLOW3"></A><tt class=literal>FlowLayout</tt> is the default <tt class=literal>LayoutManager</tt> 
for a <tt class=literal>Panel</tt>. A <tt class=literal>FlowLayout</tt> 
adds components to the container in rows, working from left to right. When 
it can't fit any more components in a row, it starts a new row--not 
unlike a word processor with word wrap enabled. When the container gets 
resized, the components within it get repositioned based on the container's 
new size. If sufficient space is available, components within <tt class=literal>FlowLayout</tt> 
containers are given their preferred size. If there is insufficient space, 
you do not see the components in their entirety. 

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JAWT-CH-7-SECT-2.1">FlowLayout Methods</A></h3>Constants

<p class=para>
<tt class=literal>FlowLayout</tt> defines three constants, 
all of which are used to specify alignment. The alignment tells <tt class=literal>FlowLayout</tt> 
where to start positioning the components 
on each row. Each component is still added from left to right, no matter 
what the alignment setting is. 

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public final static int LEFT </I><br>
<dd>

<p class=para>
<tt class=literal>LEFT</tt> is the constant for left 
alignment. 

<p>
<dt class=varlistentry><i class=emphasis>public final static int CENTER </I><br>
<dd>

<p class=para>
<tt class=literal>CENTER</tt> is the constant for 
center alignment and is the default. 

<p>
<dt class=varlistentry><i class=emphasis>public final static int RIGHT </I><br>
<dd>

<p class=para>
<tt class=literal>RIGHT</tt> is the constant for right 
alignment. </DL>
Constructors

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public FlowLayout () </I><br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>FlowLayout</tt> 
using default settings: center alignment with a horizontal and vertical 
gap of five pixels. The gap is the space between the different components 
in the different directions. By default, there will be five pixels between 
components. The constructor is usually called within a call to <tt class=literal>setLayout()</tt>: 
<tt class=literal>setLayout (new FlowLayout())</tt>. 
<a href="#JAWT-CH-7-FIG-1">Figure 7.1</A> shows how the default <tt class=literal>FlowLayout</tt> 
behaves with different screen sizes. As the screen C shows, if the screen 
is too small, the components will <i class=emphasis>not </I>be 
shrunk so that they can fit better. </DL>
<div class=figure>
<h4 class=figure><a class="TITLE" name="JAWT-CH-7-FIG-1">Figure 7.1: FlowLayout with six buttons and three different screen sizes</A></h4>


<p>
<img align=middle src="figs/jawt0701.gif" alt="[Graphic: Figure 7-1]" width=503 height=313 border=0>

</DIV>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public FlowLayout (int alignment) </I><br>
<dd>

<p class=para>
This version of the constructor creates a <tt class=literal>FlowLayout</tt> 
using the specified <tt class=literal>alignment</tt> 
and a horizontal and vertical gap of five pixels. Valid alignments are 
the <tt class=literal>FlowLayout</tt> constants, although 
there is no verification. <a href="#JAWT-CH-7-FIG-2">Figure 7.2</A> shows the effect 
of different alignments: <tt class=literal>FlowLayout.LEFT</tt> (screen A), 
<tt class=literal>FlowLayout.CENTER</tt> (B), and <tt class=literal>FlowLayout.RIGHT</tt> (C). </DL>
<div class=figure>
<h4 class=figure><a class="TITLE" name="JAWT-CH-7-FIG-2">Figure 7.2: FlowLayout with three different alignments</A></h4>


<p>
<img align=middle src="figs/jawt0702.gif" alt="[Graphic: Figure 7-2]" width=503 height=173 border=0>

</DIV>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public FlowLayout (int alignment, int hgap, int vgap) </I><br>
<dd>

<p class=para>
The final version of the constructor is called by the other two. It requires 
you to explicitly specify the alignment, horizontal gap (<tt class=literal>hgap</tt>), 
and vertical gap (<tt class=literal>vgap</tt>). 
This creates a <tt class=literal>FlowLayout</tt> with 
an alignment of <tt class=literal>alignment</tt>, 
horizontal gap of <tt class=literal>hgap</tt>, and 
vertical gap of <tt class=literal>vgap</tt>. The units 
for gaps are pixels. It is possible to have negative gaps if you want components 
to be placed on top of one another. <a href="#JAWT-CH-7-FIG-3">Figure 7.3</A>
 shows the effect of changing the gap sizes.</DL>
<div class=figure>
<h4 class=figure><a class="TITLE" name="JAWT-CH-7-FIG-3">Figure 7.3: FlowLayout with hgap of 0 and vgap of 20</A></h4>


<p>
<img align=middle src="figs/jawt0703.gif" alt="[Graphic: Figure 7-3]" width=184 height=206 border=0>

</DIV>

Informational methods

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public int getAlignment () <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>getAlignment()</tt> method retrieves 
the current alignment of the <tt class=literal>FlowLayout</tt>. 
The return value should equal one of the class constants <tt class=literal>LEFT</tt>, 
<tt class=literal>CENTER</tt>, or <tt class=literal>RIGHT</tt>. 

<p>
<dt class=varlistentry><i class=emphasis>public void setAlignment (int alignment) <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>setAlignment()</tt> method changes 
the <tt class=literal>FlowLayout</tt> alignment to 
<tt class=literal>alignment</tt>. The alignment value 
should equal one of the class constants <tt class=literal>LEFT</tt>, 
<tt class=literal>CENTER</tt>, or <tt class=literal>RIGHT</tt>, 
but this method does not check. After changing the alignment, you must 
<tt class=literal>validate()</tt> the <tt class=literal>Container</tt>. 

<p>
<dt class=varlistentry><i class=emphasis>public int getHgap () <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>getHgap()</tt> method retrieves 
the current horizontal gap setting. 

<p>
<dt class=varlistentry><i class=emphasis>public void setHgap (int hgap) <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>setHgap()</tt> method changes 
the current horizontal gap setting to <tt class=literal>hgap</tt>. 
After changing the gaps, you must <tt class=literal>validate()</tt> 
the <tt class=literal>Container</tt>. 

<p>
<dt class=varlistentry><i class=emphasis>public int getVgap () <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>getVgap()</tt> method retrieves 
the current vertical gap setting. 

<p>
<dt class=varlistentry><i class=emphasis>public void setVgap (int hgap) <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>setVgap()</tt> method changes 
the current vertical gap setting to <tt class=literal>vgap</tt>. 
After changing the gaps, you must <tt class=literal>validate()</tt> 
the <tt class=literal>Container</tt>. </DL>
LayoutManager methods

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public void addLayoutComponent (String name, Component component)  </I><br>
<dd>

<p class=para>
The <tt class=literal>addLayoutComponent()</tt> method 
of <tt class=literal>FlowLayout</tt> does nothing. 

<p>
<dt class=varlistentry><i class=emphasis>public void removeLayoutComponent (Component component)  </I><br>
<dd>

<p class=para>
The <tt class=literal>removeLayoutComponent()</tt> 
method of <tt class=literal>FlowLayout</tt> does nothing. 

<p>
<dt class=varlistentry><i class=emphasis>public Dimension preferredLayoutSize (Container target)  </I><br>
<dd>

<p class=para>
The <tt class=literal>preferredLayoutSize()</tt> method 
of <tt class=literal>FlowLayout</tt> calculates the 
preferred dimensions for the <tt class=literal>target</tt> 
container. The <tt class=literal>FlowLayout</tt> computes 
the preferred size by placing all the components in one row and adding 
their individual preferred sizes along with gaps and insets. 

<p>
<dt class=varlistentry><i class=emphasis>public Dimension minimumLayoutSize (Container target)  </I><br>
<dd>

<p class=para>
The <tt class=literal>minimumLayoutSize()</tt> method 
of <tt class=literal>FlowLayout</tt> calculates the 
minimum dimensions for the container by adding up the sizes of the components. 
The <tt class=literal>FlowLayout</tt> computes the 
minimum size by placing all the components in one row and adding their 
individual minimum sizes along with gaps and insets. 

<p>
<dt class=varlistentry><i class=emphasis>public void layoutContainer (Container target)  </I><br>
<dd>

<p class=para>
The <tt class=literal>layoutContainer()</tt> method 
draws <tt class=literal>target</tt>'s components 
on the screen, starting with the first row of the display, going left to 
right across the screen, based on the current alignment setting. When it 
reaches the right margin of the container, it skips down to the next row, 
and continues drawing additional components. </DL>
Miscellaneous methods

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public String toString () </I><br>
<dd>

<p class=para>
The <tt class=literal>toString()</tt> method of <tt class=literal>FlowLayout</tt> 
returns the current horizontal and vertical gap settings along with the 
alignment (left, center, right). For a <tt class=literal>FlowLayout</tt> 
that uses all the defaults, <tt class=literal>toString()</tt> 
produces: </DL>
<div class=screen>
<p>
<pre>
java.awt.FlowLayout[hgap=5,vgap=5,align=center]
</PRE>
</DIV>

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch07_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch07_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>The LayoutManager Interface</td>
<td width=171 align=center valign=top><a href="index/idx_a.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>BorderLayout</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
