<html>
<head>
<title>[Chapter 7] 7.8 Combining Layouts</TITLE>
<meta name="author" content="John Zukowski">
<meta name="date" content="Thu Jul 31 14:39:54 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java AWT">
<meta name="title" content="Java AWT">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java AWT" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch07_07.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 7<br>Layouts</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch07_09.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JAWT-CH-7-SECT-8">7.8 Combining Layouts</A></h2>

<p class=para>
If you can't create the display you want with any of the standard 
layout managers, or you are unable to figure out <tt class=literal>GridBagLayout</tt>, 
you may want to try combining several different layouts. This technique 
can often help you build the display you want. <a href="#JAWT-CH-7-FIG-12">Figure 7.12</A> 
shows a display that uses three panels and three different layouts. 

<p class=para>
Here's the source code to generate the display in <a href="#JAWT-CH-7-FIG-12">Figure 7.12</A>: 

<div class=screen>
<p>
<pre>
import java.awt.*;
public class multi extends java.applet.Applet {
    public void init() {
        Panel s = new Panel();
        Panel e = new Panel();
        setLayout (new BorderLayout ());
        add ("North", new Label ("Enter text", Label.CENTER));
        add ("Center", new TextArea ());
        e.setLayout (new GridLayout (0,1));
        e.add (new Button ("Reformat"));
        e.add (new Button ("Spell Check"));
        e.add (new Button ("Options"));
        add ("East", e);
        s.setLayout (new FlowLayout ());
        s.add (new Button ("Save"));
        s.add (new Button ("Cancel"));
        s.add (new Button ("Help"));
        add ("South", s);
    }
}
</PRE>
</DIV>

<div class=figure>
<h4 class=figure><a class="TITLE" name="JAWT-CH-7-FIG-12">Figure 7.12: Multipanel screen using several layouts</A></h4>


<p>
<img align=middle src="figs/jawt0712.gif" alt="[Graphic: Figure 7-12]" width=285 height=250 border=0>

</DIV>

<p class=para>
The display in <a href="#JAWT-CH-7-FIG-12">Figure 7.12</A> is created by adding four sections to a single <tt class=literal>BorderLayout</tt>. 
The north region contains a panel with a single <tt class=literal>Label</tt> 
in it. The panel uses its default <tt class=literal>LayoutManager</tt>, 
which is a <tt class=literal>FlowLayout</tt>. Why 
bother with this panel? Why not just add a label at the north
position in the <tt class=literal>BorderLayout</tt>? 
Our strategy gives the label the position and size we want: the label is 
centered and displayed at its preferred size. If we had added the label 
directly to the <tt class=literal>BorderLayout</tt>, 
it would have been left justified and resized to fill the region. 

<p class=para>
The <tt class=literal>TextArea</tt> has no special 
requirements, so we added it directly to the center of the 
<tt class=literal>BorderLayout</tt>. 

<p class=para>
The three buttons on the right of the screen were arranged in a panel with 
a <tt class=literal>GridLayout</tt>; then this panel 
was placed in the east region of the <tt class=literal>BorderLayout</tt>. 

<p class=para>
To create the buttons at the bottom of the screen, we used another <tt class=literal>Panel</tt> 
with a <tt class=literal>FlowLayout</tt>. It centers 
the three buttons and displays them at their preferred size, with a gap 
between them. 

<p class=para>
With a little work, we could have created this display using a single <tt class=literal>Panel</tt> 
with a <tt class=literal>GridBagLayout</tt>. The result 
would have been more efficient; placing panels within panels has performance 
implications. Each container in the display has its own peer object, which 
uses up system resources. Furthermore, in the 1.0 version of AWT, nesting 
containers complicates event handling. However, using a <tt class=literal>GridBagLayout</tt> 
would have required much more work: figuring out the right <tt class=literal>GridBagConstraints</tt> 
for each component would be time consuming and result in code that is 
harder to understand. Sometimes, it's best to settle for the easy 
solution: a hybrid layout composed of several simple panels, rather than 
a single very complex panel. 

<p class=para>
In Java 1.1, you can make this program even more efficient in its resource 
usage by using a lightweight component instead of panels. This is particularly 
easy because the panels in the multipanel screen exist strictly to help 
with layout and not for partitioning event handling. Therefore, you can 
define a <tt class=literal>LightweightPanel</tt> that 
extends <tt class=literal>Container</tt>, with no 
methods. Use this class instead of <tt class=literal>Panel</tt>. 
The <tt class=literal>LightweightPanel</tt> allows 
you to lay out areas without creating unnecessary peers. Here's all 
the code for the <tt class=literal>LightweightPanel</tt>: 

<div class=screen>
<p>
<pre>
// Java 1.1 only
import java.awt.*;
public class LightweightPanel extends Container {
}
</PRE>
</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch07_07.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch07_09.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>GridBagConstraints</td>
<td width=171 align=center valign=top><a href="index/idx_a.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Disabling the LayoutManager</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
