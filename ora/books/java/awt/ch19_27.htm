<html>
<head>
<title>[Chapter 19] Graphics</TITLE>
<meta name="author" content="John Zukowski">
<meta name="date" content="Thu Jul 31 15:12:51 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java AWT">
<meta name="title" content="Java AWT">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java AWT" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch19_26.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 19<br>java.awt Reference</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch19_28.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=refnamediv>
<h1>Graphics</H1>

<h2>Name</H2>

Graphics

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch19-REFSECT1-AUTOID.27"></A></h2>
</DIV>


<p>
<img align=middle src="figs/graphic.gif" alt="[Graphic: Figure from the text]" width=502 height=52 border=0>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-1">Description</A></h2>

<p class=para>
The <tt class=literal>Graphics</tt> class is an abstract 
class that represents an object on which you can draw. The concrete classes 
that are actually used to represent graphics objects are platform dependent, 
but because they extend the <tt class=literal>Graphics</tt> 
class, must implement the methods here. 

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-2">Class Definition</A></h2>

<div class=screen>
<p>
<pre>
public abstract class java.awt.Graphics
    extends java.lang.Object {
  
  // Constructors
  protected Graphics();
  
  // Instance Methods
  public abstract void clearRect (int x, int y, int width, int height);
  public abstract void clipRect (int x, int y, int width, int height);
  public abstract void copyArea (int x, int y, int width, int height, 
      int deltax, int deltay);
  public abstract Graphics create();
  public Graphics create (int x, int y, int width, int height);
  public abstract void dispose();
  public void draw3DRect (int x, int y, int width, int height, 
      boolean raised);
  public abstract void drawArc (int x, int y, int width, int height, 
      int startAngle, int arcAngle);
  public void drawBytes (byte text[], int offset, int length, 
      int x, int y);
  public void drawChars (char text[], int offset, int length, 
      int x, int y);
  public abstract boolean drawImage (Image image, int x, int y, 
      ImageObserver observer);
  public abstract boolean drawImage (Image image, int x, int y, 
      int width, int height, ImageObserver observer);
  public abstract boolean drawImage (Image image, int x, int y, 
      Color backgroundColor, ImageObserver observer);
  public abstract boolean drawImage (Image image, int x, int y, 
      int width, int height, Color backgroundColor, ImageObserver observer);
  public abstract boolean drawImage(Image img, int dx1, int dy1, 
      int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, ImageObserver 
      observer); <img src="gifs/bstar.gif" alt="(New)" border=0>
  public abstract boolean drawImage(Image img, int dx1, int dy1, 
      int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, Color bgcolor, 
      ImageObserver observer); <img src="gifs/bstar.gif" alt="(New)" border=0>
  public abstract void drawLine (int x1, int y1, int x2, int y2);
  public abstract void drawOval (int x, int y, int width, int height);
  public abstract void drawPolygon (int xPoints[], int yPoints[], 
      int numPoints);
  public void drawPolygon (Polygon p);
  public abstract void drawPolyline(int[ ] xPoints, int[ ] yPoints, 
      int nPoints); <img src="gifs/bstar.gif" alt="(New)" border=0>
  public void drawRect (int x, int y, int width, int height);
  public abstract void drawRoundRect (int x, int y, int width, 
      int height, int arcWidth, int arcHeight);
  public abstract void drawString (String text, int x, int y);
  public void fill3DRect (int x, int y, int width, int height, 
      boolean raised);
  public abstract void fillArc (int x, int y, int width, int height, 
      int startAngle, int arcAngle);
  public abstract void fillOval (int x, int y, int width, int height);
  public abstract void fillPolygon (int xPoints[], int yPoints[], 
      int numPoints);
  public void fillPolygon (Polygon p);
  public abstract void fillRect (int x, int y, int width, int height);
  public abstract void fillRoundRect (int x, int y, int width, 
      int height, int arcWidth, int arcHeight);
  public void finalize();
  public abstract Shape getClip(); <img src="gifs/bstar.gif" alt="(New)" border=0>
  public abstract Rectangle getClipBounds(); <img src="gifs/bstar.gif" alt="(New)" border=0>
  public abstract Rectangle getClipRect();
  public abstract Color getColor();
  public abstract Font getFont();
  public FontMetrics getFontMetrics();
  public abstract FontMetrics getFontMetrics (Font font);
  public abstract void setClip (int x, int y, int width, int height); <img src="gifs/bstar.gif" alt="(New)" border=0>
  public abstract void setClip (Shape clip); <img src="gifs/bstar.gif" alt="(New)" border=0>
  public abstract void setColor (Color color);
  public abstract void setFont (Font font);
  public abstract void setPaintMode();
  public abstract void setXORMode (Color xorColor);
  public String toString();
  public abstract void translate (int x, int y);
}
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-3">Constructors</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-3.1">Graphics</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-3.1.1">protected Graphics()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Called by constructors of platform specific subclasses. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4">Instance Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.1">clearRect</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.1.1">public abstract void clearRect (int x, int y, int width, int height)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of origin 
of area to clear. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of origin 
of area to clear. 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
size in horizontal 
direction to clear. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
size in vertical direction 
to clear. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Resets a rectangular area to the background color. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.2">clipRect</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.2.1">public abstract void clipRect (int x, int y, int width, int height)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of origin 
of clipped area. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of origin 
of clipped area. 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
size in horizontal 
direction to clip. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
size in vertical direction 
to clip. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Reduces the drawing area to the intersection of the current drawing area 
and the rectangular area defined by <tt class=literal>x</tt>, 
<tt class=literal>y</tt>, <tt class=literal>width</tt>, 
and <tt class=literal>height</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.3">copyArea</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.3.1">public abstract void copyArea (int x, int y, int width, int height, int deltax, int deltay)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of origin 
of area to copy. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of origin 
of area to copy. 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
size in horizontal 
direction to copy. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
size in vertical direction 
to copy. 

<p>
<dt class=varlistentry><i class=emphasis>deltax</I><br>
<dd>

<p class=para>
offset in horizontal 
direction to copy area to. 

<p>
<dt class=varlistentry><i class=emphasis>deltay</I><br>
<dd>

<p class=para>
offset in vertical 
direction to copy area to. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Copies a rectangular area to a new area, whose top left corner is (<tt class=literal>x+deltax</tt>, 
<tt class=literal>y+deltay</tt>). </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.4">create</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.4.1">public abstract Graphics create()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
New graphics context. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Creates a second reference to the same graphics context. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.4.2">public Graphics create (int x, int y, int width, int height)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of origin 
of new graphics context. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of origin 
of new graphics context. 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
size in horizontal 
direction. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
size in vertical direction. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
New graphics context 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Creates a second reference to a subset of the same graphics context. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.5">dispose</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.5.1">public abstract void dispose()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Frees system resources used by graphics context. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.6">draw3DRect</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.6.1">public void draw3DRect (int x, int y, int width, int height, boolean raised)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of the rectangle 
origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of the rectangle 
origin 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
Width of the rectangle 
to draw. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
Height of the rectangle 
to draw. 

<p>
<dt class=varlistentry><i class=emphasis>raised</I><br>
<dd>

<p class=para>
Determines if rectangle 
drawn is raised or not; <tt class=literal>true</tt> 
for a raised rectangle. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws an unfilled 3-D rectangle from (<tt class=literal>x</tt>, 
<tt class=literal>y</tt>) of size <tt class=literal>width</tt> 
x <tt class=literal>height</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.7">drawArc</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.7.1">public abstract void drawArc (int x, int y, int width, int height, int startAngle, int arcAngle)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of the bounding 
rectangle's origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of the bounding 
rectangle's origin 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
Width of the bounding 
rectangle for the arc. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
Height of the bounding 
rectangle for the arc. 

<p>
<dt class=varlistentry><i class=emphasis>startAngle</I><br>
<dd>

<p class=para>
Angle at which arc begins, in degrees 

<p>
<dt class=varlistentry><i class=emphasis>arcAngle</I><br>
<dd>

<p class=para>
length of arc, in 
degrees </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws an unfilled arc from <tt class=literal>startAngle</tt> 
to <tt class=literal>arcAngle</tt> within bounding 
rectangle from (<tt class=literal>x</tt>, <tt class=literal>y</tt>) 
of size <tt class=literal>width</tt> x <tt class=literal>height</tt>. 
Zero degrees is at three o'clock; positive angles are counter clockwise. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.8">drawBytes</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.8.1">public void drawBytes (byte text[], int offset, int length, int x, int y)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>text</I><br>
<dd>

<p class=para>
Text to draw, as a byte array. 

<p>
<dt class=varlistentry><i class=emphasis>offset</I><br>
<dd>

<p class=para>
Starting position within <tt class=literal>text</tt> to draw. 

<p>
<dt class=varlistentry><i class=emphasis>length</I><br>
<dd>

<p class=para>
Number of bytes to draw. 

<p>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of baseline 
origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of baseline 
origin. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>ArrayIndexOutOfBoundsException</I><br>
<dd>

<p class=para>
If 
<tt class=literal>offset</tt> or <tt class=literal>length</tt> 
is invalid. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws text on screen, starting with <tt class=literal>text[offset]</tt> 
and ending with <tt class=literal>text[offset+length-1]</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.9">drawChars</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.9.1">public void drawChars (char text[], int offset, int length, int x, int y)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>text</I><br>
<dd>

<p class=para>
Text to draw, as a char array. 

<p>
<dt class=varlistentry>offset<br>
<dd>

<p class=para>
Starting position within 
<tt class=literal>text</tt> to draw. 

<p>
<dt class=varlistentry><i class=emphasis>length</I><br>
<dd>

<p class=para>
Number of bytes to draw. 

<p>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of baseline 
origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of baseline 
origin. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>ArrayIndexOutOfBoundsException</I><br>
<dd>

<p class=para>
If 
<tt class=literal>offset</tt> or <tt class=literal>length</tt> 
is invalid. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws text on screen, starting with <tt class=literal>text[offset]</tt> 
and ending with <tt class=literal>text[offset+length-1]</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.10">drawImage</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.10.1">public abstract boolean drawImage (Image image, int x, int y, ImageObserver observer)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>image</I><br>
<dd>

<p class=para>
Image to draw. 

<p>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of image origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of image origin. 

<p>
<dt class=varlistentry><i class=emphasis>observer</I><br>
<dd>

<p class=para>
Object that watches 
for image information; almost always <tt class=literal>this</tt>. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if the image has fully 
loaded when the method returns, <tt class=literal>false</tt> 
otherwise. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws image to screen at (<tt class=literal>x</tt>, 
<tt class=literal>y</tt>), at its original size. Drawing 
may be asynchronous. If <tt class=literal>image</tt> 
is not fully loaded when the method returns, <tt class=literal>observer</tt> 
is notified when additional information made available. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.10.2">public abstract boolean drawImage (Image image, int x, int y, int width, int height, ImageObserver observer)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>image</I><br>
<dd>

<p class=para>
Image to draw. 

<p>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of image origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of image origin. 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
New image size in horizontal 
direction. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
New image size in 
vertical direction. 

<p>
<dt class=varlistentry><i class=emphasis>observer</I><br>
<dd>

<p class=para>
Object that watches 
for image information; almost always <tt class=literal>this</tt>. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if the image has fully 
loaded when the method returns, <tt class=literal>false</tt> 
otherwise. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws image to screen at (<tt class=literal>x</tt>, 
<tt class=literal>y</tt>), scaled to <tt class=literal>width</tt> 
x <tt class=literal>height</tt>. Drawing may be asynchronous. 
If <tt class=literal>image</tt> is not fully loaded 
when the method returns, <tt class=literal>observer</tt> 
is notified when additional information made available. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.10.3">public abstract boolean drawImage (Image image, int x, int y, Color backgroundColor, ImageObserver observer)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>image</I><br>
<dd>

<p class=para>
Image to draw. 

<p>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of image origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of image origin. 

<p>
<dt class=varlistentry><i class=emphasis>backgroundColor</I><br>
<dd>

<p class=para>
Color to 
show through image where transparent. 

<p>
<dt class=varlistentry><i class=emphasis>observer</I><br>
<dd>

<p class=para>
Object that watches 
for image information; almost always <tt class=literal>this</tt>. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if the image has fully 
loaded when the method returns, <tt class=literal>false</tt> 
otherwise. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws image to screen at (<tt class=literal>x</tt>, 
<tt class=literal>y</tt>), at its original size. Drawing 
may be asynchronous. If <tt class=literal>image</tt> 
is not fully loaded when the method returns, <tt class=literal>observer</tt> 
is notified when additional information made available. The background 
color is visible through any transparent pixels. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.10.4">public abstract boolean drawImage (Image image, int x, int y, int width, int height, Color backgroundColor, ImageObserver observer)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>image</I><br>
<dd>

<p class=para>
Image to draw. 

<p>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of image origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of image origin. 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
New image size in horizontal 
direction. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
New image size in 
vertical direction. 

<p>
<dt class=varlistentry><i class=emphasis>backgroundColor</I><br>
<dd>

<p class=para>
Color to 
show through image where transparent. 

<p>
<dt class=varlistentry><i class=emphasis>observer</I><br>
<dd>

<p class=para>
Object that watches 
for image information; almost always <tt class=literal>this</tt>. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if the image has fully 
loaded when the method returns, <tt class=literal>false</tt> 
otherwise. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws image to screen at (<tt class=literal>x</tt>, 
<tt class=literal>y</tt>), scaled to <tt class=literal>width</tt> 
x <tt class=literal>height</tt>. Drawing may be asynchronous. 
If <tt class=literal>image</tt> is not fully loaded 
when the method returns, <tt class=literal>observer</tt> 
is notified when additional information made available. The background 
color is visible through any transparent pixels. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.10.5">public abstract boolean drawImage (Image image, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, ImageObserver observer) <img src="gifs/bstar.gif" alt="(New)" border=0></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>image</I><br>
<dd>

<p class=para>
Image to draw. 

<p>
<dt class=varlistentry><i class=emphasis>dx1</I><br>
<dd>

<p class=para>
x 
coordinate of one corner of destination (device) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>dy1</I><br>
<dd>

<p class=para>
y coordinate of one 
corner of destination (device) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>dx2</I><br>
<dd>

<p class=para>
x 
coordinate of the opposite corner of destination (device) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>dy2</I><br>
<dd>

<p class=para>
y coordinate of the opposite corner of destination (device) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>sx1</I><br>
<dd>

<p class=para>
x 
coordinate of one corner of source (image) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>sy1</I><br>
<dd>

<p class=para>
y coordinate of one corner of source (image) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>sx2</I><br>
<dd>

<p class=para>
x 
coordinate of the opposite corner of source (image) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>sy2</I><br>
<dd>

<p class=para>
y coordinate of the opposite corner of source (image) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>observer</I><br>
<dd>

<p class=para>
Object that watches 
for image information; almost always <tt class=literal>this</tt>. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if the image has fully 
loaded when the method returns, <tt class=literal>false</tt> 
otherwise. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws the part of image described by <tt class=literal>dx1</tt>, 
<tt class=literal>dy1</tt>, <tt class=literal>dx2</tt>, 
and <tt class=literal>dy2</tt> to the screen into 
the rectangle described by <tt class=literal>sx1</tt>, 
<tt class=literal>sy1</tt>, <tt class=literal>sx2</tt>, 
and <tt class=literal>sy2</tt>. Drawing may be asynchronous. 
If <tt class=literal>image</tt> is not fully loaded 
when the method returns, <tt class=literal>observer</tt> 
is notified when additional information is made available. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.10.6">public abstract boolean drawImage (Image image, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, Color backgroundColor, ImageObserver observer) <img src="gifs/bstar.gif" alt="(New)" border=0></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>image</I><br>
<dd>

<p class=para>
Image to draw. 

<p>
<dt class=varlistentry><i class=emphasis>dx1</I><br>
<dd>

<p class=para>
x 
coordinate of one corner of destination (device) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>dy1</I><br>
<dd>

<p class=para>
y coordinate of one corner of destination (device) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>dx2</I><br>
<dd>

<p class=para>
x 
coordinate of the opposite corner of destination (device) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>dy2</I><br>
<dd>

<p class=para>
y coordinate of the opposite 
corner of destination (device) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>sx1</I><br>
<dd>

<p class=para>
x 
coordinate of one corner of source (image) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>sy1</I><br>
<dd>

<p class=para>
y coordinate of one 
corner of source (image) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>sx2</I><br>
<dd>

<p class=para>
x 
coordinate of the opposite corner of source (image) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>sy2</I><br>
<dd>

<p class=para>
y coordinate of the opposite 
corner of source (image) rectangle. 

<p>
<dt class=varlistentry><i class=emphasis>backgroundColor</I><br>
<dd>

<p class=para>
Color to 
show through image where transparent. 

<p>
<dt class=varlistentry><i class=emphasis>observer</I><br>
<dd>

<p class=para>
Object that watches 
for image information; almost always <tt class=literal>this</tt>. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if the image has fully 
loaded when the method returns, <tt class=literal>false</tt> 
otherwise. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws the part of image described by <tt class=literal>dx1</tt>, 
<tt class=literal>dy1</tt>, <tt class=literal>dx2</tt>, 
and <tt class=literal>dy2</tt> to the screen into 
the rectangle described by <tt class=literal>sx1</tt>, 
<tt class=literal>sy1</tt>, <tt class=literal>sx2</tt>, 
and <tt class=literal>sy2</tt>. Drawing may be asynchronous. 
If <tt class=literal>image</tt> is not fully loaded 
when the method returns, <tt class=literal>observer</tt> 
is notified when additional information made available. The background 
color is visible through any transparent pixels. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.11">drawLine</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.11.1">public abstract void drawLine (int x1, int y1, int x2, int y2)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x1</I><br>
<dd>

<p class=para>
x coordinate of one 
point on line. 

<p>
<dt class=varlistentry><i class=emphasis>y1</I><br>
<dd>

<p class=para>
y coordinate of one 
point on line. 

<p>
<dt class=varlistentry><i class=emphasis>x2</I><br>
<dd>

<p class=para>
x coordinate of the opposite 
point on line. 

<p>
<dt class=varlistentry><i class=emphasis>y2</I><br>
<dd>

<p class=para>
y coordinate of the opposite 
point on line. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws a line connecting <tt class=literal>(x1, y1)</tt> 
and <tt class=literal>(x2, y2)</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.12">drawOval</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.12.1">public abstract void drawOval (int x, int y, int width, int height)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of bounding 
rectangle origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of bounding 
rectangle origin 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
Width of bounding rectangle 
to draw in. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
Height of bounding 
rectangle to draw in. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws an unfilled oval within bounding rectangle from (<tt class=literal>x</tt>, 
<tt class=literal>y</tt>) of size <tt class=literal>width</tt> 
x <tt class=literal>height</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.13">drawPolygon</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.13.1">public abstract void drawPolygon (int xPoints[], int yPoints[], int numPoints)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>xPoints[]</I><br>
<dd>

<p class=para>
The array of x coordinates for each point. 

<p>
<dt class=varlistentry><i class=emphasis>yPoints[]</I><br>
<dd>

<p class=para>
The array of y coordinates for each point. 

<p>
<dt class=varlistentry><i class=emphasis>numPoints</I><br>
<dd>

<p class=para>
The number of elements in both <tt class=literal>xPoints</tt> 
and <tt class=literal>yPoints</tt> arrays to use. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws an unfilled polygon based on first <tt class=literal>numPoints</tt> 
elements in <tt class=literal>xPoints</tt> and <tt class=literal>yPoints</tt>. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.13.2">public void drawPolygon (Polygon p)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>p</I><br>
<dd>

<p class=para>
Points of object to draw. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws an unfilled polygon based on points within the <tt class=literal>Polygon 
p</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.14">drawPolyline</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.14.1">public abstract void drawPolyline (int xPoints[], int yPoints[], int nPoints) <img src="gifs/bstar.gif" alt="(New)" border=0></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>xPoints[]</I><br>
<dd>

<p class=para>
The array of x coordinates for each point. 

<p>
<dt class=varlistentry><i class=emphasis>yPoints[]</I><br>
<dd>

<p class=para>
The array of y coordinates for each point. 

<p>
<dt class=varlistentry><i class=emphasis>nPoints</I><br>
<dd>

<p class=para>
The number of elements in both <tt class=literal>xPoints</tt> 
and <tt class=literal>yPoints</tt> arrays to use. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws a series of line segments based on first <tt class=literal>numPoints</tt> 
elements in <tt class=literal>xPoints</tt> and <tt class=literal>yPoints</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.15">drawRect</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.15.1">public void drawRect (int x, int y, int width, int height)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of rectangle 
origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of rectangle 
origin 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
Width of rectangle 
to draw. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
Height of rectangle 
to draw. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws an unfilled rectangle from (<tt class=literal>x</tt>, 
<tt class=literal>y</tt>) of size <tt class=literal>width</tt> 
x <tt class=literal>height</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.16">drawRoundRect</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.16.1">public abstract void drawRoundRect (int x, int y, int width, int height, int arcWidth, int arcHeight)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of bounding 
rectangle origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of bounding 
rectangle origin 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
Width of rectangle 
to draw. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
Height of rectangle 
to draw. 

<p>
<dt class=varlistentry><i class=emphasis>arcWidth</I><br>
<dd>

<p class=para>
Width of arc of 
rectangle corner. 

<p>
<dt class=varlistentry><i class=emphasis>arcHeight</I><br>
<dd>

<p class=para>
Height of arc of 
rectangle corner. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws an unfilled rectangle from (<tt class=literal>x</tt>, 
<tt class=literal>y</tt>) of size <tt class=literal>width</tt> 
x <tt class=literal>height</tt> with rounded corners. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.17">drawString</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.17.1">public abstract void drawString (String text, int x, int y)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>text</I><br>
<dd>

<p class=para>
Text to draw. 

<p>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of baseline 
origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of baseline 
origin. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws text on screen. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.18">fill3DRect</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.18.1">public void fill3DRect (int x, int y, int width, int height, boolean raised)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of rectangle 
origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of rectangle 
origin 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
Width of rectangle 
to draw. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
Height of rectangle 
to draw. 

<p>
<dt class=varlistentry><i class=emphasis>raised</I><br>
<dd>

<p class=para>
<tt class=literal>true</tt> 
to draw a rectangle that appears raised; <tt class=literal>false</tt> 
to draw a rectangle that appears depressed. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws a filled 3-D rectangle from (<tt class=literal>x</tt>, 
<tt class=literal>y</tt>) of size <tt class=literal>width</tt> 
x <tt class=literal>height</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.19">fillArc</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.19.1">public abstract void fillArc (int x, int y, int width, int height, int startAngle, int arcAngle)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of bounding 
rectangle origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of bounding 
rectangle origin 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
Width of bounding rectangle 
to draw in. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
Height of bounding 
rectangle to draw in. 

<p>
<dt class=varlistentry><i class=emphasis>startAngle</I><br>
<dd>

<p class=para>
Starting angle 
of arc. 

<p>
<dt class=varlistentry><i class=emphasis>arcAngle</I><br>
<dd>

<p class=para>
The extent of the 
arc, measured from startAngle </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws a filled arc from <tt class=literal>startAngle</tt> 
to <tt class=literal>arcAngle</tt> within bounding 
rectangle from (<tt class=literal>x</tt>, <tt class=literal>y</tt>) 
of size <tt class=literal>width</tt> x <tt class=literal>height</tt>. 
Zero degrees is at three o'clock; positive angles are counter clockwise. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.20">fillOval</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.20.1">public abstract void fillOval (int x, int y, int width, int height)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of bounding 
rectangle origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of bounding 
rectangle origin 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
Width of bounding rectangle 
to draw in. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
Height of bounding 
rectangle to draw in. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws filled oval within bounding rectangle from (<tt class=literal>x</tt>, 
<tt class=literal>y</tt>) of size <tt class=literal>width</tt> 
x <tt class=literal>height</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.21">fillPolygon</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.21.1">public abstract void fillPolygon (int xPoints[], int yPoints[], int numPoints)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>xPoints[]</I><br>
<dd>

<p class=para>
The array of x coordinates for each point. 

<p>
<dt class=varlistentry><i class=emphasis>yPoints[]</I><br>
<dd>

<p class=para>
The array of y coordinates for each point. 

<p>
<dt class=varlistentry><i class=emphasis>numPoints</I><br>
<dd>

<p class=para>
The number of elements in both <tt class=literal>xPoints</tt> 
and <tt class=literal>yPoints</tt> arrays to use. </DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>ArrayIndexOutOfBoundsException</I><br>
<dd>

<p class=para>
If 
<tt class=literal>numPoints</tt> &gt; <tt class=literal>xPoints.length</tt> 
or <tt class=literal>numPoints</tt> &gt; <tt class=literal>yPoints.length</tt>. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws filled polygon based on first <tt class=literal>numPoints</tt> 
elements in <tt class=literal>xPoints</tt> and <tt class=literal>yPoints</tt>. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.21.2">public void fillPolygon (Polygon p)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>p</I><br>
<dd>

<p class=para>
Points of object to draw. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws filled polygon based on points within the <tt class=literal>Polygon 
p</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.22">fillRect</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.22.1">public abstract void fillRect (int x, int y, int width, int height)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of rectangle 
origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of rectangle 
origin 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
Width of rectangle 
to draw. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
Height of rectangle 
to draw. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws filled rectangle from (<tt class=literal>x</tt>, 
<tt class=literal>y</tt>) of size <tt class=literal>width</tt> 
x <tt class=literal>height</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.23">fillRoundRect</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.23.1">public abstract void fillRoundRect (int x, int y, int width, int height, int arcWidth, int arcHeight)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of bounding 
rectangle origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of bounding 
rectangle origin 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
Width of rectangle 
to draw. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
Height of rectangle 
to draw. 

<p>
<dt class=varlistentry><i class=emphasis>arcWidth</I><br>
<dd>

<p class=para>
Width of arc of 
rectangle corner. 

<p>
<dt class=varlistentry><i class=emphasis>arcHeight</I><br>
<dd>

<p class=para>
Height of arc of 
rectangle corner. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Draws a filled rectangle from (<tt class=literal>x</tt>, 
<tt class=literal>y</tt>) of size <tt class=literal>width</tt> 
x <tt class=literal>height</tt> with rounded corners. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.24">finalize</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.24.1">public void finalize()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Overrides <br>
<dd>

<p class=para>
<tt class=literal>Object.finalize()</tt> 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Tells the garbage collector to dispose of graphics context. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.25">getClip</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.25.1">public abstract Shape getClip () <img src="gifs/bstar.gif" alt="(New)" border=0></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
Shape describing the clipping are of the graphics context. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.26">getClipBounds</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.26.1">public abstract Rectangle getClipBounds() <img src="gifs/bstar.gif" alt="(New)" border=0></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
Rectangle describing the clipping area of the graphics context. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.27">getClipRect</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.27.1">public abstract Rectangle getClipRect() <img src="gifs/wstar.gif" alt="(Deprecated)" border=0></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
Replaced by <tt class=literal>getClipBounds()</tt>. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.28">getColor</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.28.1">public abstract Color getColor()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The current drawing <tt class=literal>Color</tt> of 
the graphics context. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.29">getFont</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.29.1">public abstract Font getFont()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The current <tt class=literal>Font</tt> of the graphics 
context. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.30">getFontMetrics</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.30.1">public FontMetrics getFontMetrics()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The <tt class=literal>FontMetrics</tt> of the current 
font of the graphics context. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.30.2">public abstract FontMetrics getFontMetrics (Font font)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>font</I><br>
<dd>

<p class=para>
Font to get metrics 
for. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The <tt class=literal>FontMetrics</tt> of the given 
font for the graphics context. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.31">setClip</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.31.1">public abstract void setClip (int x, int y, int width, int height) <img src="gifs/bstar.gif" alt="(New)" border=0></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of rectangle 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of rectangle 

<p>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
width of rectangle 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
height of rectangle </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Changes current clipping region to the specified rectangle. </DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.31.2">public abstract void setClip (Shape clip) <img src="gifs/bstar.gif" alt="(New)" border=0></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>clip</I><br>
<dd>

<p class=para>
The new clipping shape. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Changes current clipping region to the specified shape. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.32">setColor</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.32.1">public abstract void setColor (Color color)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>color</I><br>
<dd>

<p class=para>
New color. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Changes current drawing color of graphics context. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.33">setFont</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.33.1">public abstract void setFont (Font font)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>font</I><br>
<dd>

<p class=para>
New font. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Changes current font of graphics context. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.34">setPaintMode</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.34.1">public abstract void setPaintMode()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Changes painting mode to normal mode. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.35">setXORMode</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.35.1">public abstract void setXORMode (Color xorColor)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>xorColor</I><br>
<dd>

<p class=para>
XOR mode drawing 
color. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Changes painting mode to XOR mode; in this mode, drawing the same object 
in the same color at the same location twice has no net effect. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.36">toString</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.36.1">public String toString()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
A string representation of the <tt class=literal>Graphics</tt> 
object. 

<p>
<dt class=varlistentry>Overrides <br>
<dd>

<p class=para>
<tt class=literal>Object.toString()</tt> </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.37">translate</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-4.37.1">public void translate (int x, int y)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>x</I><br>
<dd>

<p class=para>
x coordinate of new drawing 
origin. 

<p>
<dt class=varlistentry><i class=emphasis>y</I><br>
<dd>

<p class=para>
y coordinate of new drawing 
origin. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Moves the origin of drawing operations to (<tt class=literal>x</tt>, 
<tt class=literal>y</tt>). </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JAWT-CH-19-REF-GRAPHICS-SECT-5">See Also</A></h2>

<p class=para>
<tt class=literal>Color</tt>, <tt class=literal>Font</tt>, 
<tt class=literal>FontMetrics</tt>, <tt class=literal>Image</tt>, 
<tt class=literal>ImageObserver</tt>, <tt class=literal>Object</tt>, 
<tt class=literal>Polygon</tt>, <tt class=literal>Rectangle</tt>, 
<tt class=literal>Shape</tt>, <tt class=literal>String</tt> 

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch19_26.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch19_28.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Frame</td>
<td width=171 align=center valign=top><a href="index/idx_a.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>GridBagConstraints</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
