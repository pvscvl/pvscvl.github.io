<html>
<head>
<title>[Chapter 5] 5.2 Labels</TITLE>
<meta name="author" content="John Zukowski">
<meta name="date" content="Thu Jul 31 14:34:25 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java AWT">
<meta name="title" content="Java AWT">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java AWT" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch05_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 5<br>Components</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch05_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JAWT-CH-5-SECT-2">5.2 Labels</A></h2>

<p class=para>
<a name="CH05.LABEL"></A>Having covered the features of the <tt class=literal>Component</tt> 
class, we can now look at some of the simplest components. The first component 
introduced here is a <tt class=literal>Label</tt>. 
A label is a <tt class=literal>Component</tt> that 
displays a single line of static text.[3] 
It is useful for putting a title or message next to another component. 
The text can be centered or justified to the left or right. Labels react 
to all events they receive. However, they do not get any events from their 
peers. 

<blockquote class=footnote>
<p class=para>[3] 
 
<i class=emphasis>Java in A Nutshell</I> 
(from O'Reilly &amp; Associates) includes a multiline <tt class=literal>Label</tt> component.
</blockquote>
<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JAWT-CH-5-SECT-2.1">Label Methods</A></h3>Constants

<p class=para>
There are three alignment specifiers for labels. The alignment tells the 
<tt class=literal>Label</tt> where to position its 
text within the space allotted. Setting an alignment for a <tt class=literal>Label</tt> 
might not do anything noticeable if the <tt class=literal>LayoutManager</tt> 
being used does not resize the <tt class=literal>Label</tt> 
to give it more space. With <tt class=literal>FlowLayout</tt>, 
the alignment is barely noticeable. See <a href="ch07_01.htm">Chapter 7, <i>Layouts</i></A>, for 
more information. 

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public final static int LEFT </I><br>
<dd>

<p class=para>
<tt class=literal>LEFT</tt> is the constant for left 
alignment. If no alignment is specified in the constructor, left alignment 
is the default. 

<p>
<dt class=varlistentry><i class=emphasis>public final static int CENTER </I><br>
<dd>

<p class=para>
<tt class=literal>CENTER</tt> is the constant for 
center alignment. 

<p>
<dt class=varlistentry><i class=emphasis>public final static int RIGHT </I><br>
<dd>

<p class=para>
<tt class=literal>RIGHT</tt> is the constant for right 
alignment. </DL>
Constructors

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public Label () </I><br>
<dd>

<p class=para>
This constructor creates an empty <tt class=literal>Label</tt>. 
By default, the label's text is left justified. 

<p>
<dt class=varlistentry><i class=emphasis>public Label (String label) </I><br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>Label</tt> 
whose initial text is <tt class=literal>label</tt>. 
By default, the label's text is left justified. 

<p>
<dt class=varlistentry><i class=emphasis>public Label (String label, int alignment) </I><br>
<dd>

<p class=para>
This constructor creates a <tt class=literal>Label</tt> 
whose initial text is <tt class=literal>label</tt>. 
The alignment of the label is <tt class=literal>alignment</tt>. 
If <tt class=literal>alignment</tt> is invalid (not 
<tt class=literal>LEFT</tt>, <tt class=literal>RIGHT</tt>, 
or <tt class=literal>CENTER</tt>), the constructor 
throws the run-time exception <tt class=literal>IllegalArgumentException</tt>. </DL>
Text

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public String getText () </I><br>
<dd>

<p class=para>
The <tt class=literal>getText()</tt> method returns 
the current value of <tt class=literal>Label</tt>. 

<p>
<dt class=varlistentry><i class=emphasis>public void setText (String label) </I><br>
<dd>

<p class=para>
The <tt class=literal>setText()</tt> method changes 
the text of the <tt class=literal>Label</tt> to <tt class=literal>label</tt>. 
If the new label is a different size from the old one, you should revalidate 
the display to ensure the label's entire contents will be seen. </DL>
Alignment

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public int getAlignment () </I><br>
<dd>

<p class=para>
The <tt class=literal>getAlignment()</tt> method returns 
the current alignment of the <tt class=literal>Label</tt>. 

<p>
<dt class=varlistentry><i class=emphasis>public void setAlignment (int alignment) </I><br>
<dd>

<p class=para>
The <tt class=literal>setAlignment()</tt> method changes 
the alignment of the <tt class=literal>Label</tt> 
to <tt class=literal>alignment</tt>. If <tt class=literal>alignment</tt> 
is invalid (not <tt class=literal>LEFT</tt>, <tt class=literal>RIGHT</tt>, 
or <tt class=literal>CENTER</tt>), <tt class=literal>setAlignment()</tt> 
throws the run-time exception <tt class=literal>IllegalArgumentException</tt>. 
<a href="#JAWT-CH-5-FIG-2">Figure 5.2</A> shows all three alignments. </DL>
<div class=figure>
<h4 class=figure><a class="TITLE" name="JAWT-CH-5-FIG-2">Figure 5.2: Labels with different alignments</A></h4>


<p>
<img align=middle src="figs/jawt0502.gif" alt="[Graphic: Figure 5-2]" width=378 height=202 border=0>

</DIV>

Miscellaneous methods

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public synchronized void addNotify () </I><br>
<dd>

<p class=para>
The <tt class=literal>addNotify()</tt> method creates 
the <tt class=literal>Label</tt> peer. If 
you override this method, first call <tt class=literal>super.addNotify()</tt>, 
then put in your customizations. Then you will be able to do everything 
you need with the information about the newly created peer. 

<p>
<dt class=varlistentry><i class=emphasis>protected String paramString () </I><br>
<dd>

<p class=para>
The <tt class=literal>paramString()</tt> method overrides 
<tt class=literal>Component</tt>'s <tt class=literal>paramString()</tt> 
method. It is a protected method that calls the overridden <tt class=literal>paramString()</tt> 
to build a <tt class=literal>String</tt> from the 
different parameters of the <tt class=literal>Component</tt>. 
When the method <tt class=literal>paramString()</tt> is called for a <tt class=literal>Label</tt>, the 
alignment and label's text are added. Thus, for the <tt class=literal>Label</tt> 
created by the constructor <tt class=literal>new Label (`ZapfDingbats`, 
Label.RIGHT)</tt>, the results displayed from a call 
to <tt class=literal>toString()</tt> would be: </DL>
<div class=screen>
<p>
<pre>
java.awt.Label[0,0,0x0,invalid,align=right,label=ZapfDingbats]
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JAWT-CH-5-SECT-2.2">Label Events</A></h3>

<p class=para>
The <tt class=literal>Label</tt> component can react 
to any event it receives, though the <tt class=literal>Label</tt> 
peer normally does not send any. However, there is nothing to stop you 
from posting an event yourself. 

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch05_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch05_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Component</td>
<td width=171 align=center valign=top><a href="index/idx_a.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Buttons</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
