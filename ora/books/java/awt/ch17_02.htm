<html>
<head>
<title>[Chapter 17] 17.2 PrintJob Class</TITLE>
<meta name="author" content="John Zukowski">
<meta name="date" content="Thu Jul 31 14:58:05 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java AWT">
<meta name="title" content="Java AWT">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java AWT" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch17_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 17<br>Printing</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch17_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JAWT-CH-17-SECT-2">17.2 PrintJob Class</A></h2>

<p class=para>
<a name="CH17.PRINT5"></A>The abstract <tt class=literal>PrintJob</tt> class 
provides the basis for the platform-specific printing subclasses. Through 
<tt class=literal>PrintJob</tt>, you have access to 
properties like page size and resolution. 

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JAWT-CH-17-SECT-2.1">Constructor and Pseudo-Constructor</A></h3>

<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public PrintJob () <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>PrintJob()</tt> constructor 
is public; however, the class is abstract, so you would never create a <tt class=literal>PrintJob</tt> 
instance directly. </DL>
<p class=para>
Since you can't call the <tt class=literal>PrintJob</tt> 
constructor directly, you need some other way of getting a print job to 
work with. The proper way to get an instance of <tt class=literal>PrintJob</tt> 
is to ask the <tt class=literal>Toolkit</tt>, which 
is described in <a href="ch15_01.htm">Chapter 15, <i>Toolkit and Peers</i></A>. The <tt class=literal>getPrintJob()</tt> 
method requires a <tt class=literal>Frame</tt> as 
the first parameter, a <tt class=literal>String</tt> 
as the second parameter, and a <tt class=literal>Properties</tt> set as the third parameter. Here's 
how you might call it: 

<div class=screen>
<p>
<pre>
PrintJob pjob = getToolkit().getPrintJob(aFrame, "Job Title",
                                         (Properties)null);
</PRE>
</DIV>

<p class=para>
The <tt class=literal>Frame</tt> is used to hold a 
print dialog box, asking the user to confirm or cancel the print job. (Whether 
or not you get the print dialog may be platform specific, but your programs 
should always assume that the dialog may appear.) The <tt class=literal>String</tt> 
is the job's title; it will be used to identify the job in the print 
queue and on the job's header page, if there is one. 

<p class=para>
The <tt class=literal>Properties</tt> parameter is 
used to request printing options, like page reversal. The property names, 
and whether the requested properties are honored at all, are platform specific. 
UNIX systems use the following properties:

<div class=simplelist>

<p>
<tt class=literal>awt.print.printer</tt><br>
<tt class=literal>awt.print.paperSize</tt><br>
<tt class=literal>awt.print.destination</tt><br>
<tt class=literal>awt.print.orientation</tt><br>
<tt class=literal>awt.print.options</tt><br>
<tt class=literal>awt.print.fileName</tt><br>
<tt class=literal>awt.print.numCopies</tt><br>
</DIV>

<p class=para>
Windows NT/95 ignores the properties sheet. If the properties sheet is <tt class=literal>null</tt>, 
as in the previous example, you get the system's default printing options. 
If the properties sheet is non-<tt class=literal>null</tt>, 
<tt class=literal>getPrintJob()</tt> modifies it to 
show the actual options used to print the job. You can use the modified 
properties sheet to find out what properties are recognized on your system 
and to save a set of printing options for use on a later print job. 

<p class=para>
If you are printing multiple pages, each page should originate from the 
same print job. 

<p class=para>
According to Sun's documentation, <tt class=literal>getPrintJob()</tt> 
ought to return <tt class=literal>null</tt> if the 
user cancels the print job. However, this is a problem. On some platforms 
(notably Windows NT/95), the print dialog box doesn't even appear 
until you call the <tt class=literal>getGraphics()</tt> method. 
In this case, <tt class=literal>getPrintJob()</tt> 
still returns a print job and never returns <tt class=literal>null</tt>. 
If the user cancels the job, <tt class=literal>getGraphics()</tt> 
returns <tt class=literal>null</tt>. 

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JAWT-CH-17-SECT-2.2">Methods</A></h3>

<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>public abstract Graphics getGraphics () <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>getGraphics()</tt> method returns 
an instance of <tt class=literal>Graphics</tt> that 
also implements <tt class=literal>PrintGraphics</tt>. 
This graphics context can then be used as the parameter to methods like 
<tt class=literal>paint()</tt>, <tt class=literal>print()</tt>, 
<tt class=literal>update()</tt>, or <tt class=literal>printAll()</tt> 
to print a single page. (All of these methods result in calls to <tt class=literal>paint()</tt>; 
in <tt class=literal>paint()</tt>, you draw whatever 
you want to print on the <tt class=literal>Graphics</tt> 
object.) 

<p class=para>
On Windows NT/95 platforms, <tt class=literal>getGraphics()</tt> 
returns <tt class=literal>null</tt> if the user cancels the print job.

<p>
<dt class=varlistentry><i class=emphasis>public abstract Dimension getPageDimension () <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>getPageDimension()</tt> method 
returns the dimensions of the page in pixels, as a <tt class=literal>Dimension</tt> 
object. Since <tt class=literal>getGraphics()</tt> 
returns a graphics context only for a single page, it is the programmer's 
responsibility to decide when the current page is full, print the current 
page, and start a new page with a new <tt class=literal>Graphics</tt> 
object. The page size is chosen to roughly represent a screen but has no 
relationship to the page size or orientation. 

<p>
<dt class=varlistentry><i class=emphasis>public abstract int getPageResolution () <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>getPageResolution()</tt> method 
returns the number of pixels per inch for drawing on the page. It is completely 
unclear what this means, since the number returned has no relationship 
to the printer resolution. It appears to be similar to the screen resolution. 

<p>
<dt class=varlistentry><i class=emphasis>public abstract boolean lastPageFirst () <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>lastPageFirst()</tt> method 
lets you know if the user configured the printer to print pages in reverse 
order. If this returns <tt class=literal>true</tt>, 
you need to generate the last page first. If <tt class=literal>false</tt>, 
you should print the first page first. This is relevant only if you are 
trying to print a multipage document. 

<p>
<dt class=varlistentry><i class=emphasis>public abstract void end () <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>end()</tt> method terminates 
the print job. This is the last method you should call when printing; it 
does any cleaning up that's necessary. 

<p>
<dt class=varlistentry><i class=emphasis>public void finalize () <img src="gifs/bstar.gif" alt="(New)" border=0> </I><br>
<dd>

<p class=para>
The <tt class=literal>finalize()</tt> method is called 
by the garbage collector. In the event you forget to call <tt class=literal>end()</tt>, 
<tt class=literal>finalize()</tt> calls it for you. 
However, it is best to call <tt class=literal>end()</tt> 
as soon as you know you have finished printing; don't rely on <tt class=literal>finalize()</tt>. </DL>
</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch17_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch17_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>PrintGraphics Interface</td>
<td width=171 align=center valign=top><a href="index/idx_a.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Component Methods</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
