<html>
<head>
<title>[Chapter 19] Image</TITLE>
<meta name="author" content="John Zukowski">
<meta name="date" content="Thu Jul 31 15:13:53 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Java AWT">
<meta name="title" content="Java AWT">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java AWT" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch19_31.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 19<br>java.awt Reference</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch19_33.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=refnamediv>
<h1>Image</H1>

<h2>Name</H2>

Image

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch19-REFSECT1-AUTOID.32"></A></h2>
</DIV>


<p>
<img align=middle src="figs/image.gif" alt="[Graphic: Figure from the text]" width=502 height=52 border=0>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-1">Description</A></h2>

<p class=para>
The <tt class=literal>Image</tt> class represents 
a displayable object maintained in memory. Because <tt class=literal>Image</tt> 
is an abstract class, you never work with the <tt class=literal>Image</tt> 
class itself, but with a platform specific subclass. However, you should 
never need to know what that subclass is. To draw on an <tt class=literal>Image</tt>, 
get its graphics context. 

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-2">Class Definition</A></h2>

<div class=screen>
<p>
<pre>
public abstract class java.awt.Image
    extends java.lang.Object
    implements java.io.Serializable {
  
  // Constants
  public final static int SCALE_AREA_AVERAGING; <img src="gifs/bstar.gif" alt="(New)" border=0>
  public final static int SCALE_DEFAULT; <img src="gifs/bstar.gif" alt="(New)" border=0>
  public final static int SCALE_FAST; <img src="gifs/bstar.gif" alt="(New)" border=0>
  public final static int SCALE_REPLICATE; <img src="gifs/bstar.gif" alt="(New)" border=0>
  public final static int SCALE_SMOOTH; <img src="gifs/bstar.gif" alt="(New)" border=0>
  public final static Object UndefinedProperty;
  
  // Instance Methods
  public abstract void flush();
  public abstract Graphics getGraphics();
  public abstract int getHeight (ImageObserver observer);
  public abstract Object getProperty (String name, ImageObserver observer);
  public Image getScaledInstance (int width, int height, int hints); <img src="gifs/bstar.gif" alt="(New)" border=0>
  public abstract ImageProducer getSource();
  public abstract int getWidth (ImageObserver observer);
}
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-3">Constants</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-3.1">SCALE_AREA_AVERAGING</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-3.1.1">public final static int SCALE_AREA_AVERAGING <img src="gifs/bstar.gif" alt="(New)" border=0></A></h4>

<p class=para>
Flag that requests use of <tt class=literal>AreaAveragingScaleFilter</tt>. 

</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-3.2">SCALE_DEFAULT</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-3.2.1">public final static int SCALE_DEFAULT <img src="gifs/bstar.gif" alt="(New)" border=0></A></h4>

<p class=para>
Flag that requests use of the default image scaling algorithm. 

</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-3.3">SCALE_FAST</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-3.3.1">public final static int SCALE_FAST <img src="gifs/bstar.gif" alt="(New)" border=0></A></h4>

<p class=para>
Flag that requests use of an image scaling algorithm that is faster rather 
than smoother. 

</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-3.4">SCALE_REPLICATE</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-3.4.1">public final static int SCALE_REPLICATE <img src="gifs/bstar.gif" alt="(New)" border=0></A></h4>

<p class=para>
Flag that requests use of ReplicateScaleFilter. 

</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-3.5">SCALE_SMOOTH</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-3.5.1">public final static int SCALE_SMOOTH <img src="gifs/bstar.gif" alt="(New)" border=0></A></h4>

<p class=para>
Flag that requests use of an image scaling algorithm that is smoother rather 
than faster. 

</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-3.6">UndefinedProperty</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-3.6.1">public final static Object UndefinedProperty</A></h4>

<p class=para>
Possible return object from <tt class=literal>getProperty()</tt>. 

</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4">Instance Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.2">flush</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.2.1">public abstract void flush()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Resets image to initial state. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.3">getGraphics</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.3.1">public abstract Graphics getGraphics()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>ClassCastException</I><br>
<dd>

<p class=para>
If image created from file or URL. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The graphics context of the image. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Gets the graphics context of the image for drawing. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.4">getHeight</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.4.1">public abstract int getHeight (ImageObserver observer)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>observer</I><br>
<dd>

<p class=para>
An image observer; usually the <tt class=literal>Component</tt> 
on which the image is rendered. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
Image height, or -1 if the height is not yet available. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.5">getProperty</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.5.1">public abstract Object getProperty (String name, ImageObserver observer)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>name</I><br>
<dd>

<p class=para>
Name of the property 
to fetch. 

<p>
<dt class=varlistentry><i class=emphasis>observer</I><br>
<dd>

<p class=para>
An image observer; usually the <tt class=literal>Component</tt> 
on which the image is rendered. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>Object</tt> representing the requested 
property, <tt class=literal>null</tt>, or <tt class=literal>UndefinedProperty</tt>. 

<p>
<dt class=varlistentry>Throws <br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>ArrayIndexOutOfBoundsException</I><br>
<dd>

<p class=para>
If 
<tt class=literal>offset</tt> or <tt class=literal>length</tt> 
is invalid. </DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Retrieves a property from the image's private property list. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.1">getScaledInstance</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.1.1">public Image getScaledInstance (int width, int height, int hints) <img src="gifs/bstar.gif" alt="(New)" border=0></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>width</I><br>
<dd>

<p class=para>
The width for the scaled 
image. Use -1 to preserve the aspect ratio with reference to <tt class=literal>height</tt>. 

<p>
<dt class=varlistentry><i class=emphasis>height</I><br>
<dd>

<p class=para>
The height for the scaled image. Use -1 to preserve the 
aspect ratio with reference to <tt class=literal>width</tt>. 

<p>
<dt class=varlistentry><i class=emphasis>hints</I><br>
<dd>

<p class=para>
One or more of the <tt class=literal>SCALE_</tt> 
constants. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The scaled image. It may be loaded asynchronously, even if the original 
image was fully loaded. 

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Creates a copy of an image, scaled to <tt class=literal>width</tt> 
x <tt class=literal>height</tt> and using an algorithm 
chosen based on the <tt class=literal>hints</tt> given. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.6">getSource</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.6.1">public abstract ImageProducer getSource()</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The <tt class=literal>ImageProducer</tt> of the image. </DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.7">getWidth</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-4.7.1">public abstract int getWidth (ImageObserver observer)</A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>observer</I><br>
<dd>

<p class=para>
An image observer; usually the <tt class=literal>Component</tt> 
on which the image is rendered. </DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
Image width, or -1 if the width is not yet available. </DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="JAWT-CH-19-REF-IMAGE-SECT-5">See Also</A></h2>

<p class=para>
<tt class=literal>Graphics</tt>, <tt class=literal>ImageObserver</tt>, 
<tt class=literal>ImageProducer</tt>, <tt class=literal>Object</tt>, 
<tt class=literal>Properties</tt>, <tt class=literal>String</tt> 

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch19_31.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch19_33.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>IllegalComponentStateException <img src="gifs/bstar.gif" alt="(New)" border=0></td>
<td width=171 align=center valign=top><a href="index/idx_a.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Insets</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="../langref/index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
