<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 4] 4.10 Bitwise/Logical Operators</TITLE>
<meta name="author" content="Mark Grand">
<meta name="date" content="Thu Jul 31 13:10:32 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="java">
<meta name="title" content="Java Language Reference">
<meta http-equiv="Content-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Language Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch04_09.htm#JLR2-CH-4-SECT-9.2"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 4<br>Expressions</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch04_11.htm#JLR2-CH-4-SECT-11.1"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JLR2-CH-4-SECT-10">4.10 Bitwise/Logical Operators</A></h2>

<p class=para>
<a name="CH04.BIT1"></A><a name="CH04.BIT3"></A>The bitwise/logical
operators in Java are used for bitwise and logical AND (<tt class=literal>&amp;</tt>),
bitwise and logical exclusive OR (<tt class=literal>^</tt>), and bitwise
and logical inclusive OR (<tt class=literal>|</tt>) operations. These
operators have different precedence; the <tt class=literal>&amp;</tt>
operator has the highest precedence of the group and the <tt class=literal>|</tt>
operator has the lowest. All of the operators are evaluated from
left to right.

<p class=para>
The unary operator <tt class=literal>~</tt>
provides a bitwise negation operation.

<p class=para>
<b>References</b>
<a href="ch04_04.htm#JLR2-CH-4-SECT-4.3">Bitwise Negation Operator ~</A>;
<a href="ch04_14.htm">Order of Operations</A>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JLR2-CH-4-SECT-10.1">Bitwise/Logical AND Operator &amp;</A></h3>

<p class=para>
The bitwise/logical AND operator <tt class=literal>&amp;</tt> produces a pure
value that is the AND of its operands. The <tt class=literal>&amp;</tt>
operator may appear in a bitwise or logical AND expression:


<p>
<img align=middle src="figs/jlr0420.gif" alt="[Graphic: Figure from the text]" width=424 height=74 border=0>

<p class=para>
The
bitwise/logical AND operator is evaluated from left to right. The
operator never throws an exception.

<p class=para>
Here is a code example
that shows the use of the bitwise AND operator:

<div class=screen>
<p>
<pre>
boolean isOdd(int x) {
    return (x &amp; 1) == 1;
}
</PRE>
</DIV>

<p class=para>
The operands
of the bitwise/logical AND operator must both be of either an integer
type or the type <tt class=literal>boolean</tt>, or a compile-time error
occurs.

<p class=para>
If both operands are of integer types, the operator
performs a bitwise AND operation. The operator may perform type
conversions on the operands:
<p>
<ul class=itemizedlist>
<li class=listitem>If either operand is of
type <tt class=literal>long</tt>, the other operand is converted to
<tt class=literal>long</tt> and the operation produces a <tt class=literal>long</tt>
value.

<p>
<li class=listitem>Otherwise, both operands are converted to <tt class=literal>int</tt>
and the operation produces an <tt class=literal>int</tt> value.

<p>
</UL>
<p class=para>
The bitwise AND operator produces a pure value that is the
bitwise AND of its operands. If the corresponding bits in both of
the converted operands are 1s, the corresponding bit in the result
is a 1; otherwise the corresponding bit in the result is a 0.

<p class=para>
If both operands are of type <tt class=literal>boolean</tt>, the
operator performs a logical AND operation. The logical AND operation
produces a pure value of type <tt class=literal>boolean</tt>. If both
operands are <tt class=literal>true</tt>, the operation produces <tt class=literal>true</tt>;
otherwise the operation produces <tt class=literal>false</tt>. This
operator differs from the conditional AND operator (<tt class=literal>&amp;&amp;</tt>)
because it always evaluates both of its operands, even if its left
operand evaluates to <tt class=literal>false</tt>.

<p class=para>
<b>References</b>
<a href="ch04_11.htm#JLR2-CH-4-SECT-11.1">Boolean AND Operator &amp;&amp;</A>;
<a href="ch03_01.htm">Boolean Type</A>;
<a href="ch04_09.htm#JLR2-CH-4-SECT-9.2">Equality Comparison Operators</A>;
<a href="ch03_01.htm">Integer types</A>;
<a href="ch04_14.htm">Order of Operations</A>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JLR2-CH-4-SECT-10.2">Bitwise/Logical Exclusive OR Operator ^</A></h3>

<p class=para>
The bitwise/logical exclusive OR operator <tt class=literal>^</tt> produces
a pure value that is the exclusive OR of its operands. The <tt class=literal>^</tt>
operator may appear in a bitwise or logical exclusive OR expression:


<p>
<img align=middle src="figs/jlr0421.gif" alt="[Graphic: Figure from the text]" width=424 height=75 border=0>

<p class=para>
The bitwise/logical exclusive OR operator is evaluated from left to
right. The operator never throws an exception.

<p class=para>
The operands
of the bitwise/logical exclusive OR operator must both be of either
an integer type or the type <tt class=literal>boolean</tt>, or a compile-time
error occurs.

<p class=para>
If both operands are of integer types,
the operator performs a bitwise exclusive OR operation. The operator
may perform type conversions on the operands:
<p>
<ul class=itemizedlist>
<li class=listitem>If either
operand is of type <tt class=literal>long</tt>, the other operand is
converted to <tt class=literal>long</tt> and the operation produces
a <tt class=literal>long</tt> value.

<p>
<li class=listitem>Otherwise, both operands
are converted to <tt class=literal>int</tt> and the operation produces
an <tt class=literal>int</tt> value.

<p>
</UL>
<p class=para>
The bitwise exclusive
OR operator produces a pure value that is the bitwise exclusive
OR of its operands. If the corresponding bits in the converted
operands are both 0 or both 1, the corresponding bit in
the result is a 0; otherwise the corresponding bit in the result
is a 1.

<p class=para>
If both operands are of type <tt class=literal>boolean</tt>,
the operator performs a logical exclusive OR operation. The logical
exclusive OR operation produces a pure value of type <tt class=literal>boolean</tt>.
If either, but not both, operands are <tt class=literal>true</tt>, the
operation produces <tt class=literal>true</tt>; otherwise the operation
produces <tt class=literal>false</tt>.

<p class=para>
<b>References</b>
<a href="#JLR2-CH-4-SECT-10.1">Bitwise/Logical AND Operator &amp;</A>;
<a href="ch03_01.htm">Boolean Type</A>;
<a href="ch03_01.htm">Integer types</A>;
<a href="ch04_14.htm">Order of Operations</A>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JLR2-CH-4-SECT-10.3">Bitwise/Logical Inclusive OR Operator |</A></h3>

<p class=para>
The bitwise/logical inclusive OR operator <tt class=literal>|</tt> produces a pure value
that is the inclusive OR of its operands. The <tt class=literal>|</tt>
operator may appear in a bitwise or logical inclusive OR expression:


<p>
<img align=middle src="figs/jlr0422.gif" alt="[Graphic: Figure from the text]" width=424 height=77 border=0>

<p class=para>
The
bitwise/logical inclusive OR operator is evaluated from left to
right. The operator never throws an exception.

<p class=para>
Here
is a code example that shows the use of the bitwise inclusive OR
operator:

<div class=screen>
<p>
<pre>
setFont("Helvetica", Font.BOLD | Font.ITALIC, 18);
</PRE>
</DIV>

<p class=para>
The operands of the bitwise/logical inclusive OR operator
must both be of either an integer type or the type <tt class=literal>boolean</tt>,
or a compile-time error occurs.

<p class=para>
If both operands are
of integer types, the operator performs a bitwise inclusive OR operation.
The operator may perform type conversions on the operands:
<p>
<ul class=itemizedlist>
<li class=listitem>If either operand is of type <tt class=literal>long</tt>, the
other operand is converted to <tt class=literal>long</tt> and the operation
produces a <tt class=literal>long</tt> value.

<p>
<li class=listitem>Otherwise,
both operands are converted to <tt class=literal>int</tt> and the operation
produces an <tt class=literal>int</tt> value.

<p>
</UL>
<p class=para>
The bitwise
inclusive OR operator produces a pure value that is the bitwise
inclusive OR of its operands. If the corresponding bits in either
or both of the converted operands are 1s, the corresponding bit
in the result is a 1; otherwise the corresponding bit in the result
is a 0.

<p class=para>
If both operands are of type <tt class=literal>boolean</tt>,
the operator performs a logical inclusive OR operation. The logical
inclusive OR operation produces a pure value of type <tt class=literal>boolean</tt>.
If either or both operands are <tt class=literal>true</tt>, the operation
produces <tt class=literal>true</tt>; otherwise the operation produces
<tt class=literal>false</tt>. This operator differs from the conditional
OR operator (<tt class=literal>||</tt>) because it always evaluates
both of its operands, even if its left operand evaluates to <tt class=literal>true</tt>.

<p class=para>
<b>References</b>
<a href="ch04_11.htm#JLR2-CH-4-SECT-11.1">Boolean OR Operator ||</A>;
<a href="ch03_01.htm">Boolean Type</A>;
<a href="#JLR2-CH-4-SECT-10.2">Bitwise/Logical Exclusive OR Operator ^</A>;
<a href="ch03_01.htm">Integer types</A>;
<a href="ch04_14.htm">Order of Operations</A>

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch04_09.htm#JLR2-CH-4-SECT-9.2"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch04_11.htm#JLR2-CH-4-SECT-11.1"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Equality Comparison Operators</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Boolean Operators</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
