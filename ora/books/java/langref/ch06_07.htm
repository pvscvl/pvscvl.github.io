<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 6] 6.7 Iteration Statements</TITLE>
<meta name="author" content="Mark Grand">
<meta name="date" content="Thu Jul 31 13:14:31 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="java">
<meta name="title" content="Java Language Reference">
<meta http-equiv="Content-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Language Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch06_06.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 6<br>Statements and Control Structures</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch06_08.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JLR2-CH-6-SECT-7">6.7 Iteration Statements</A></h2>

<p class=para>
<a name="CH06.ITER1"></A><a name="CH06.ITER2"></A><a name="CH06.ITER3"></A>Iteration statements
are used to specify the logic of a loop. Java has three varieties
of iteration statement:
<tt class=literal>while</tt>, <tt class=literal>do</tt>, and <tt class=literal>for</tt>.


<p>
<img align=middle src="figs/jlr0611.gif" alt="[Graphic: Figure from the text]" width=423 height=28 border=0>

<p class=para>
<b>References</b>
<a href="#JLR2-CH-6-SECT-7.2">The do Statement</A>;
<a href="#JLR2-CH-6-SECT-7.3">The for Statement</A>;
<a href="#JLR2-CH-6-SECT-7.1">The while Statement</A>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JLR2-CH-6-SECT-7.1">The while Statement</A></h3>

<p class=para>
A <tt class=literal>while</tt> statement evaluates
a Boolean expression. If the expression is <tt class=literal>true</tt>,
a given statement is repeatedly executed for as long as the expression
continues to evaluate to <tt class=literal>true</tt>.


<p>
<img align=middle src="figs/jlr0612.gif" alt="[Graphic: Figure from the text]" width=424 height=27 border=0>

<p class=para>
In Java, the expression in parentheses must produce a <tt class=literal>boolean</tt> value. This is different from C/C++, which allows any
type of expression.

<p class=para>
If the expression in parentheses
evaluates to <tt class=literal>true</tt>, the statement contained in
the <tt class=literal>while</tt> statement is executed and the expression
in parentheses is evaluated again. This process continues until
the expression evaluates to <tt class=literal>false</tt>.

<p class=para>
If the expression in parentheses evaluates to <tt class=literal>false</tt>,
the statement following the <tt class=literal>while</tt> statement is
the next statement to be executed. The expression in parentheses
is evaluated before the contained statement is executed, so it is
possible for the contained statement not to be executed even once.

<p class=para>
Here is an example of a <tt class=literal>while</tt> statement:

<div class=screen>
<p>
<pre>
while ( (c = in.read()) &gt;= 0) {
    out.write(c);
}
</PRE>
</DIV>

<p class=para>
<b>References</b>
<a href="ch03_01.htm">Boolean Type</A>;
<i class=emphasis>Expression</I> 4;
<i class=emphasis>Statement</I> 6

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JLR2-CH-6-SECT-7.2">The do Statement</A></h3>

<p class=para>
A <tt class=literal>do</tt> statement executes a given statement
and then evaluates a Boolean expression. If the expression evaluates
to <tt class=literal>true</tt>, the statement is executed repeatedly
as long as the expression continues to evaluate to <tt class=literal>true</tt>:


<p>
<img align=middle src="figs/jlr0613.gif" alt="[Graphic: Figure from the text]" width=424 height=105 border=0>

<p class=para>
In Java, the expression in parentheses must produce a
<tt class=literal>boolean</tt>
value. This is unlike C/C++, which allows any type of expression.

<p class=para>
The statement contained in the <tt class=literal>do</tt> statement
is executed and then the expression in parentheses is evaluated.
If the expression evaluates to <tt class=literal>true</tt>, the process
is repeated.

<p class=para>
If the expression evaluates to false, the
statement following the <tt class=literal>do</tt> statement is the next
statement to be executed. Because the expression is evaluated after
the contained statement is executed, the statement is always executed
at least once.

<p class=para>
Here's an example of a <tt class=literal>do</tt> statement:

<div class=screen>
<p>
<pre>
do {
    c = in.read();
    out.write(c);
} while (c != ';');
</PRE>
</DIV>

<p class=para>
<b>References</b>
<a href="ch03_01.htm">Boolean Type</A>;
<i class=emphasis>Expression</I> 4;
<i class=emphasis>Statement</I> 6

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JLR2-CH-6-SECT-7.3">The for Statement</A></h3>

<p class=para>
<a name="CH06.FOR"></A>A <tt class=literal>for</tt>
statement is a more structured form of a <tt class=literal>while</tt>
statement. A <tt class=literal>for</tt> statement performs an initialization
step and then evaluates a Boolean expression. If the expression
evaluates to <tt class=literal>true</tt>, a given statement is executed
and an increment expression is evaluated repeatedly as long as the
expression continues to evaluate to <tt class=literal>true</tt>:


<p>
<img align=middle src="figs/jlr0614.gif" alt="[Graphic: Figure from the text]" width=424 height=77 border=0>


<p>
<img align=middle src="figs/jlr0615.gif" alt="[Graphic: Figure from the text]" width=450 height=43 border=0>


<p>
<img align=middle src="figs/jlr0616.gif" alt="[Graphic: Figure from the text]" width=424 height=46 border=0>

<p class=para>
Here is an example of a <tt class=literal>for</tt> statement:

<div class=screen>
<p>
<pre>
for (i = 0; i &lt; a.length; i++) {
    a[i] = i;
}
</PRE>
</DIV>

<p class=para>
The initialization
part of the <tt class=literal>for</tt> statement is executed first.
If the initialization part contains nothing, no initialization is
performed. The expression that follows must produce a
<tt class=literal>boolean</tt>
value. Before the body of the <tt class=literal>for</tt> statement is
executed, the expression is evaluated. If the expression portion
of the <tt class=literal>for</tt> statement is omitted, the default
expression <tt class=literal>true</tt> is used. If the expression evaluates
to <tt class=literal>true</tt>, the body of the <tt class=literal>for</tt>
statement is executed and then the increment portion of the
<tt class=literal>for</tt>
statement is evaluated. Finally, the expression is evaluated again
to determine if there should be another iteration. This process
continues until the expression evaluates to <tt class=literal>false</tt>,
at which point the statement following the <tt class=literal>for</tt>
statement is the next statement to be executed.
The <tt class=literal>for</tt> statement in the above example can be rewritten
as a <tt class=literal>while</tt> statement as follows:

<div class=screen>
<p>
<pre>
i = 0;
while (i &lt; a.length) {
    a[i] = i;
    i++;
}
</PRE>
</DIV>

<p class=para>
One difference between
comparable <tt class=literal>for</tt> and <tt class=literal>while</tt> loops
is that a <tt class=literal>continue</tt> statement in the body of a
<tt class=literal>for</tt> statement causes the increment portion of
the statement to be evaluated. However, this may not be the case
in a comparable <tt class=literal>while</tt> statement.

<p class=para>
Here's a new
version of our <tt class=literal>for</tt> example:

<div class=screen>
<p>
<pre>
for (i = 0; i &lt; a.length; i++) {
    a[i] = i;
    continue;
}
</PRE>
</DIV>

<p class=para>
The added <tt class=literal>continue</tt> statement at the end
of the <tt class=literal>for</tt> loop
does not change the behavior of the loop. In particular, <tt class=literal>i++</tt>
is still evaluated after each iteration through the body of the
loop. Now let's add a <tt class=literal>continue</tt> statement at the
equivalent place in our <tt class=literal>while</tt> example:

<div class=screen>
<p>
<pre>
i = 0;
while (i &lt; a.length) {
    a[i] = i;
    continue;
    i++;
}
</PRE>
</DIV>

<p class=para>
The <tt class=literal>continue</tt>
statement in this <tt class=literal>while</tt> loop prevents the statement
<tt class=literal>i++</tt> from being executed. The <tt class=literal>continue</tt>
statement would have to be moved after the increment operation to
match the logic of the <tt class=literal>for</tt> statement.

<p class=para>
If the expression portion of a <tt class=literal>for</tt> statement is
omitted, the default expression <tt class=literal>true</tt> is supplied.
Take, for example, the following <tt class=literal>for</tt> statement:

<div class=screen>
<p>
<pre>
for ( FileInputStream in = new FileInputStream(fname);;) {
    c = in.read();
    if (c &lt; 0)
        return;
    System.out.print((char)c);
}
</PRE>
</DIV>

<p class=para>
This example uses a local variable declaration in the initialization
portion of the <tt class=literal>for</tt> statement. Local variable
declarations in a <tt class=literal>for</tt>
statement are subject to the same restrictions as local variable
declarations in a block. In particular, a <tt class=literal>for</tt>
statement cannot declare a local variable with the same name as
a local variable or formal parameter that is defined in an enclosing
block.

<p class=para>
The above <tt class=literal>for</tt> statement is
equivalent to the following <tt class=literal>while</tt> statement:

<div class=screen>
<p>
<pre>
{
    FileInputStream in = new FileInputStream(fname);
    while (true) {
        c = in.read();
        if (c &lt; 0)
            return;
        System.out.print((char)c);
    }
}
</PRE>
</DIV>

<p class=para>
The enclosing block in the above example is provided to limit
the scope of the local variable <tt class=literal>in</tt> to just the
<tt class=literal>while</tt> statement.

<p class=para>
The initialization
portion of a <tt class=literal>for</tt> statement can also be empty.
The following statement is a legal way of specifying an infinite loop:

<div class=screen>
<p>
<pre>
for (;;) {...}
</PRE>
</DIV>

<p class=para>
This is equivalent
to the following <tt class=literal>while</tt> statement:

<div class=screen>
<p>
<pre>
while (true) {...}
</PRE>
</DIV>

<p class=para>
Unlike C/C++,
there is no comma operator in Java. However, commas are explicitly
allowed in the initialization portion of a <tt class=literal>for</tt> statement.
For example, a <tt class=literal>for</tt> initialization can consist
of multiple expressions separated by commas:

<div class=screen>
<p>
<pre>
i=2, j=5, k=44
</PRE>
</DIV>

<p class=para>
When the initialization
portion of a <tt class=literal>for</tt> statement contains local variable
declarations, commas are also allowed because the syntax for declarations
allows multiple variables, separated by commas, to be declared in one declaration. For
example:

<div class=screen>
<p>
<pre>
int i=2, j=5, k=44
</PRE>
</DIV>

<p class=para>
<b>References</b>
<a href="ch03_01.htm">Boolean Type</A>;
<i class=emphasis>Expression</I> 4;
<i class=emphasis>Statement</I> 6;
<a href="ch06_01.htm">Local Variables</A>;
<i class=emphasis>TopLevelExpression</I> 6.4;
<a href="ch06_09.htm">The continue Statement</A>;
<a href="#JLR2-CH-6-SECT-7.1">The while Statement</A>

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch06_06.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch06_08.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>The switch Statement</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>The break Statement</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
