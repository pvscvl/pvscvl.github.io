<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 10] ThreadGroup</TITLE>
<meta name="author" content="Mark Grand">
<meta name="date" content="Fri Aug  8 15:29:29 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="java">
<meta name="title" content="Java Language Reference">
<meta http-equiv="index.htmlContent-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Language Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch10_23.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 10<br>The java.lang Package</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch10_25.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=refnamediv>
<h1>ThreadGroup</H1>

<h2>Name</H2>

ThreadGroup

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch10-REFSECT1-AUTOID.178">Synopsis</A></h2>

<dl class=variablelist>
<dt class=varlistentry>Class Name:<br>
<dd>

<p class=para>
<tt class=literal>java.lang.ThreadGroup</tt>

<p>
<dt class=varlistentry>Superclass:<br>
<dd>

<p class=para>
<tt class=literal>java.lang.Object</tt>

<p>
<dt class=varlistentry>Immediate Subclasses:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Interfaces Implemented:<br>
<dd>

<p class=para>
None

<p>
<dt class=varlistentry>Availability:<br>
<dd>

<p class=para>
JDK 1.0 or later</DL>
</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch10-REFSECT1-AUTOID.179">Description</A></h2>

<p class=para>
<a name="MAN.THRGRP.1"></A>The <tt class=literal>ThreadGroup</tt> class implements a grouping
scheme for threads. A <tt class=literal>ThreadGroup</tt> object can own
<tt class=literal>Thread</tt> objects and other
<tt class=literal>ThreadGroup</tt> objects. The <tt class=literal>ThreadGroup</tt>
class provides methods that allow a <tt class=literal>ThreadGroup</tt>
object to control its <tt class=literal>Thread</tt> and <tt class=literal>ThreadGroup</tt>
objects as a group. For example, <tt class=literal>suspend()</tt> and
<tt class=literal>resume()</tt> methods of a <tt class=literal>ThreadGroup</tt>
object call the <tt class=literal>suspend()</tt> and <tt class=literal>resume()</tt> methods of each of the <tt class=literal>Thread</tt> and <tt class=literal>ThreadGroup</tt>
objects that belong to the particular <tt class=literal>ThreadGroup</tt>.

<p class=para>
When a Java program starts, a <tt class=literal>ThreadGroup</tt> object
is created to own the first <tt class=literal>Thread</tt>. Any additional
<tt class=literal>ThreadGroup</tt> objects are explicitly created by
the program.

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch10-REFSECT1-AUTOID.180">Class Summary</A></h2>

<div class=screen>
<p>
<pre>
public class java.lang.ThreadGroup extends java.lang.Object {
    // Constructors
    public ThreadGroup(String name);
    public ThreadGroup(ThreadGroup parent, String name;
    // Instance Methods
    public int activeCount();
    public int activeGroupCount();
    public boolean allowThreadSuspension(boolean b);       // New in 1.1
    public final void checkAccess();
    public final void destroy();
    public int enumerate(Thread list[]);
    public int enumerate(Thread list[], boolean recurse);
    public int enumerate(ThreadGroup list[]);
    public int enumerate(ThreadGroup list[], boolean recurse);
    public final int getMaxPriority();
    public final String getName();
    public final ThreadGroup getParent();
    public final boolean isDaemon();
    public synchronized boolean isDestroyed();             // New in 1.1
    public void list();
    public final boolean parentOf(ThreadGroup g);
    public final void resume();
    public final void setDaemon(boolean daemon);
    public final void setMaxPriority(int pri);
    public final void stop();
    public final void suspend();
    public String toString();
    public void uncaughtException(Thread t, Throwable e);
}
</PRE>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch10-REFSECT1-AUTOID.181">Constructors</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.430">ThreadGroup</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.534"><tt class=literal>public ThreadGroup(String name)</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>name</tt><br>
<dd>

<p class=para>
The name of this <tt class=literal>ThreadGroup</tt>
object.</DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the <tt class=literal>checkAccess()</tt> method of
the <tt class=literal>SecurityManager</tt> throws a <tt class=literal>SecurityException</tt>.</DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Creates a <tt class=literal>ThreadGroup</tt> object that has the
specified name and the same parent <tt class=literal>ThreadGroup</tt>
as the current thread.</DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.535"><tt class=literal>public ThreadGroup(ThreadGroup parent, String name)</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>parent</tt><br>
<dd>

<p class=para>
The <tt class=literal>ThreadGroup</tt> object that this
<tt class=literal>ThreadGroup</tt> object is to be added to.

<p>
<dt class=varlistentry><tt class=literal>name</tt><br>
<dd>

<p class=para>
The name of this <tt class=literal>ThreadGroup</tt>
object.</DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the <tt class=literal>checkAccess()</tt> method of
the <tt class=literal>SecurityManager</tt> throws a <tt class=literal>SecurityException</tt>.</DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
Creates a <tt class=literal>ThreadGroup</tt> object with the specified
name and parent <tt class=literal>ThreadGroup</tt> object.</DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch10-REFSECT1-AUTOID.182">Instance Methods</A></h2>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.431">activeCount</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.536"><tt class=literal>public int activeCount()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
An approximation of the current number of threads in this
<tt class=literal>ThreadGroup</tt> object and any child <tt class=literal>ThreadGroup</tt>
objects.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns an approximation of the number of threads
that belong to this <tt class=literal>ThreadGroup</tt> object and any
child <tt class=literal>ThreadGroup</tt> objects. The count is approximate
because a thread can die after it is counted, but before the complete
count is returned. Also, after a child <tt class=literal>ThreadGroup</tt>
is counted but before the total count is returned, additional <tt class=literal>Thread</tt>
and <tt class=literal>ThreadGroup</tt> objects can be added to a child
<tt class=literal>ThreadGroup</tt>.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.432">activeGroupCount</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.537"><tt class=literal>public int activeGroupCount()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
An approximation of the current number of child <tt class=literal>ThreadGroup</tt>
objects in this <tt class=literal>ThreadGroup</tt> object.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns an approximation of the number of child
<tt class=literal>ThreadGroup</tt> objects that belong to this <tt class=literal>ThreadGroup</tt>
object. The count is approximate because after a child <tt class=literal>ThreadGroup</tt>
is counted but before the total count is returned, additional <tt class=literal>ThreadGroup</tt>
objects can be added to a child <tt class=literal>ThreadGroup</tt>.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.433">allowThreadSuspension</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.538"><tt class=literal>public boolean allowThreadSuspension(boolean b)</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Availability<br>
<dd>

<p class=para>
New as of JDK 1.1

<p>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>b</tt><br>
<dd>

<p class=para>
A <tt class=literal>boolean</tt> value that specifies whether or not
the run-time system is allowed to suspend threads due to low memory.</DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The <tt class=literal>boolean</tt> value <tt class=literal>true</tt>.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method specifies whether or not the Java virtual machine is allowed
to suspend threads due to low memory.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.434">checkAccess</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.539"><tt class=literal>public final void checkAccess()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the <tt class=literal>checkAccess()</tt> method of
the <tt class=literal>SecurityManager</tt> throws a <tt class=literal>SecurityException</tt>.</DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method determines if the currently running thread has
permission to modify this <tt class=literal>ThreadGroup</tt> object.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.435">destroy</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.540"><tt class=literal>public final void destroy()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>IllegalThreadStateException</tt><br>
<dd>

<p class=para>
If this <tt class=literal>ThreadGroup</tt> object is
not empty, or if it has already been destroyed.

<p>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the <tt class=literal>checkAccess()</tt> method of
the <tt class=literal>SecurityManager</tt> throws a <tt class=literal>SecurityException</tt>.</DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method destroys this <tt class=literal>ThreadGroup</tt> object
and any child <tt class=literal>ThreadGroup</tt> objects. The <tt class=literal>ThreadGroup</tt> must not contain any <tt class=literal>Thread</tt> objects.
This method also removes the <tt class=literal>ThreadGroup</tt> object
from its parent <tt class=literal>ThreadGroup</tt> object.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.436">enumerate</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.541"><tt class=literal>public int enumerate(Thread list[])</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>list</tt><br>
<dd>

<p class=para>
<a name="MAN.THRGRP.2"></A>A reference to an array of <tt class=literal>Thread</tt>
objects.</DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The number of <tt class=literal>Thread</tt> objects stored in
the array.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method stores a reference in the array for each of the
<tt class=literal>Thread</tt> objects that belongs to this <tt class=literal>ThreadGroup</tt>
or any of its child <tt class=literal>ThreadGroup</tt> objects.

<p class=para>
If the array is not big enough to contain references to all
the <tt class=literal>Thread</tt> objects, only as many references as
will fit are put into the array. No indication is given that some
<tt class=literal>Thread</tt> objects were left out, so it is a good
idea to call <tt class=literal>activeCount()</tt> before calling this
method, to get an idea of how large to make the array.</DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.542"><tt class=literal>public int enumerate(Thread list[], boolean recurse)</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>list</tt><br>
<dd>

<p class=para>
A reference to an array of <tt class=literal>Thread</tt>
objects.

<p>
<dt class=varlistentry><tt class=literal>recurse</tt><br>
<dd>

<p class=para>
A <tt class=literal>boolean</tt> value that specifies
whether or not to include <tt class=literal>Thread</tt> objects that
belong to child <tt class=literal>ThreadGroup</tt> objects of this <tt class=literal>ThreadGroup</tt>
object.</DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The number of <tt class=literal>Thread</tt> objects stored in
the array.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method stores a reference in the array for each of the
<tt class=literal>Thread</tt> objects that belongs to this <tt class=literal>ThreadGroup</tt>
object. If <tt class=literal>recurse</tt> is <tt class=literal>true</tt>,
the method also stores a reference for each of the <tt class=literal>Thread</tt>
objects that belongs to a child <tt class=literal>ThreadGroup</tt> object
of this <tt class=literal>ThreadGroup</tt>.

<p class=para>
If the array is not big enough to contain references to all
the <tt class=literal>Thread</tt> objects, only as many references as
will fit are put into the array. No indication is given that some
<tt class=literal>Thread</tt> objects were left out, so it is a good
idea to call <tt class=literal>activeCount()</tt> before calling this
method, to get an idea of how large to make the array.</DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.543"><tt class=literal>public int enumerate(ThreadGroup list[])</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>list</tt><br>
<dd>

<p class=para>
A reference to an array of <tt class=literal>ThreadGroup</tt>
objects.</DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The number of <tt class=literal>ThreadGroup</tt> objects stored
in the array.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method stores a reference in the array
for each <tt class=literal>ThreadGroup</tt>
object that belongs to this <tt class=literal>ThreadGroup</tt>
or any of its child <tt class=literal>ThreadGroup</tt> objects.

<p class=para>
If the array is not big enough to contain references to all
the <tt class=literal>ThreadGroup</tt> objects, only as many references
as will fit are put into the array. No indication is given that
some <tt class=literal>ThreadGroup</tt> objects were left out, so it
is a good idea to call <tt class=literal>activeGroupCount()</tt> before
calling this method, to get an idea of how large to make the array.</DL>
</DIV>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.544"><tt class=literal>public int enumerate(Thread list[], boolean recurse)</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>list</tt><br>
<dd>

<p class=para>
A reference to an array of <tt class=literal>ThreadGroup</tt>
objects.

<p>
<dt class=varlistentry><tt class=literal>recurse</tt><br>
<dd>

<p class=para>
A <tt class=literal>boolean</tt> value that specifies
whether or not to include <tt class=literal>ThreadGroup</tt> objects
that belong to child <tt class=literal>ThreadGroup</tt> objects of this
<tt class=literal>ThreadGroup</tt> object.</DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The number of <tt class=literal>ThreadGroup</tt> objects stored
in the array.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method stores a reference in the array for each of the
<tt class=literal>ThreadGroup</tt> objects that belongs to this <tt class=literal>ThreadGroup</tt>
object. If <tt class=literal>recurse</tt> is <tt class=literal>true</tt>,
the method also stores a reference for each of the <tt class=literal>ThreadGroup</tt>
objects that belongs to a child <tt class=literal>ThreadGroup</tt> object
of this <tt class=literal>ThreadGroup</tt>.

<p class=para>
If the array is not big enough to contain references to all
the <tt class=literal>ThreadGroup</tt> objects, only as many references
as will fit are put into the array. No indication is given that
some <tt class=literal>ThreadGroup</tt> objects were left out, so it
is a good idea to call <tt class=literal>activeGroupCount()</tt> before
calling this method, to get an idea of how large to make the array.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.437">getMaxPriority</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.545"><tt class=literal>public final int getMaxPriority()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The maximum priority that can be assigned to <tt class=literal>Thread</tt>
objects that belong to this <tt class=literal>ThreadGroup</tt> object.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the maximum priority that can be assigned
to <tt class=literal>Thread</tt> objects that belong to this <tt class=literal>ThreadGroup</tt>
object.

<p class=para>
It is possible for a <tt class=literal>ThreadGroup</tt> to contain
<tt class=literal>Thread</tt> objects that have higher priorities than
this maximum, if they were given that higher priority before the
maximum was set to a lower value.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.438">getName</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.546"><tt class=literal>public final String getName()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The name of this <tt class=literal>ThreadGroup</tt> object.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the name of this <tt class=literal>ThreadGroup</tt>
object.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.439">getParent</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.547"><tt class=literal>public final ThreadGroup getParent()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
The parent <tt class=literal>ThreadGroup</tt>
object of this <tt class=literal>ThreadGroup</tt>, or <tt class=literal>null</tt> 
if this <tt class=literal>ThreadGroup</tt>
is the root of the thread group hierarchy.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns the parent
<tt class=literal>ThreadGroup</tt> object of this <tt class=literal>ThreadGroup</tt>
object. If this <tt class=literal>ThreadGroup</tt> is at the root of
the thread group hierarchy and has no parent, the method returns
<tt class=literal>null</tt>.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.440">isDaemon</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.548"><tt class=literal>public final boolean isDaemon()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if this <tt class=literal>ThreadGroup</tt>
is a daemon thread group; otherwise <tt class=literal>false</tt>.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method determines whether or not this <tt class=literal>ThreadGroup</tt>
is a daemon thread group, based on the value of daemon
attribute of this <tt class=literal>ThreadGroup</tt> object. A daemon
thread group is destroyed when the last <tt class=literal>Thread</tt>
in it is stopped, or the last <tt class=literal>ThreadGroup</tt> in
it is destroyed.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.441">isDestroyed</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.549"><tt class=literal>public synchronized boolean isDestroyed()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Availability<br>
<dd>

<p class=para>
New as of JDK 1.1

<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if this <tt class=literal>ThreadGroup</tt>
has been destroyed; otherwise <tt class=literal>false</tt>.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method determines whether or not this <tt class=literal>ThreadGroup</tt>
has been destroyed.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.442">list</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.550"><tt class=literal>public void list()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method outputs a listing of the contents of this <tt class=literal>ThreadGroup</tt>
object to <tt class=literal>System.out</tt>.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.443">parentOf</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.551"><tt class=literal>public final boolean parentOf(ThreadGroup g)</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>g</tt><br>
<dd>

<p class=para>
A <tt class=literal>ThreadGroup</tt> object.</DL>
<p>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
<tt class=literal>true</tt> if this <tt class=literal>ThreadGroup</tt>
object is the same <tt class=literal>ThreadGroup</tt>, or a direct or indirect parent of
the specified <tt class=literal>ThreadGroup</tt>; otherwise <tt class=literal>false</tt>.

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method determines if this <tt class=literal>ThreadGroup</tt>
object is the same as the specified <tt class=literal>ThreadGroup</tt>
or one of its ancestors in the thread-group hierarchy.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.444">resume</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.552"><tt class=literal>public final void resume()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the <tt class=literal>checkAccess()</tt> method of
the <tt class=literal>SecurityManager</tt> throws a <tt class=literal>SecurityException</tt>.</DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method resumes each <tt class=literal>Thread</tt> object
that directly or indirectly belongs to this <tt class=literal>ThreadGroup</tt>
object by calling its <tt class=literal>resume()</tt> method.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.445">setDaemon</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.553"><tt class=literal>public final void setDaemon(boolean daemon)</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>daemon</tt><br>
<dd>

<p class=para>
The new value for this <tt class=literal>ThreadGroup</tt>
object's daemon attribute.</DL>
<p>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the <tt class=literal>checkAccess()</tt> method of
the <tt class=literal>SecurityManager</tt> throws a <tt class=literal>SecurityException</tt>.</DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method sets the daemon attribute
of this <tt class=literal>ThreadGroup</tt> object to the given value.
A daemon thread group is destroyed when the last <tt class=literal>Thread</tt>
in it is stopped, or the last <tt class=literal>ThreadGroup</tt> in
it is destroyed.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.446">setMaxPriority</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.554"><tt class=literal>public final void setMaxPriority(int pri)</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>pri</tt><br>
<dd>

<p class=para>
The new maximum priority for <tt class=literal>Thread</tt> objects
that belong to this <tt class=literal>ThreadGroup</tt> object.</DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method sets the maximum priority that can be assigned
to <tt class=literal>Thread</tt> objects that belong to this <tt class=literal>ThreadGroup</tt>
object.

<p class=para>
It is possible for a <tt class=literal>ThreadGroup</tt> to contain
<tt class=literal>Thread</tt> objects that have higher priorities than
this maximum, if they were given that higher priority before the
maximum was set to a lower value.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.447">stop</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.555"><tt class=literal>public final void stop()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the <tt class=literal>checkAccess()</tt> method of
the <tt class=literal>SecurityManager</tt> throws a <tt class=literal>SecurityException</tt>.</DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method stops each <tt class=literal>Thread</tt> object that
directly or indirectly belongs to this <tt class=literal>ThreadGroup</tt>
object by calling its <tt class=literal>stop()</tt> method.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.448">suspend</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.556"><tt class=literal>public final void suspend()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Throws<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>SecurityException</tt><br>
<dd>

<p class=para>
If the <tt class=literal>checkAccess()</tt> method of
the <tt class=literal>SecurityManager</tt> throws a <tt class=literal>SecurityException</tt>.</DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method suspends each <tt class=literal>Thread</tt> object
that directly or indirectly belongs to this <tt class=literal>ThreadGroup</tt>
object by calling its <tt class=literal>suspend()</tt> method.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.449">toString</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.557"><tt class=literal>public String toString()</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Returns<br>
<dd>

<p class=para>
A string representation of this <tt class=literal>ThreadGroup</tt>
object.

<p>
<dt class=varlistentry>Overrides<br>
<dd>

<p class=para>
<tt class=literal>Object.toString()</tt>

<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method returns a string representation of this <tt class=literal>ThreadGroup</tt>
object.</DL>
</DIV>

</DIV>

<div class=refsect2>
<h3 class=refsect2><a class="TITLE" name="ch10-REFSECT2-AUTOID.450">uncaughtException</A></h3>

<div class=refsect3>
<h4 class=refsect3><a class="TITLE" name="ch10-REFSECT3-AUTOID.558"><tt class=literal>public void uncaughtException(Thread t, Throwable e)</tt></A></h4>

<dl class=variablelist>
<dt class=varlistentry>Parameters<br>
<dd>

<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>t</tt><br>
<dd>

<p class=para>
A reference to a <tt class=literal>Thread</tt> that
just died because of an uncaught exception.

<p>
<dt class=varlistentry><tt class=literal>e</tt><br>
<dd>

<p class=para>
The uncaught exception.</DL>
<p>
<dt class=varlistentry>Description<br>
<dd>

<p class=para>
This method is called when a <tt class=literal>Thread</tt> object
that belongs to this <tt class=literal>ThreadGroup</tt> object dies
because of an uncaught exception. If this <tt class=literal>ThreadGroup</tt>
object has a parent <tt class=literal>ThreadGroup</tt> object, this
method just calls the parent's <tt class=literal>uncaughtException()</tt>
method. Otherwise, this method must determine whether the uncaught exception
is an instance of <tt class=literal>ThreadDeath</tt>. If it is, nothing
is done. If it is not, the method calls the <tt class=literal>printStackTrace()</tt>
method of the exception object.

<p class=para>
If this method is overridden, the overriding method should
end with a call to <tt class=literal>super.uncaughtException()</tt>.</DL>
</DIV>

</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch10-REFSECT1-AUTOID.183">Inherited Methods</A></h2>

<div class=informaltable>
<p>
<table class=INFORMALTABLE>
<tr class=row>
<th align="left">

<p class=para>
Method</TH>
<th align="left">

<p class=para>
Inherited From</TH>
<th align="left">

<p class=para>
Method</TH>
<th align="left">

<p class=para>
Inherited From</TH>
</TR>
<tr class=row>
<td align="left">

<p class=para>
<tt class=literal>clone()</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>equals(Object)</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="left">

<p class=para>
<tt class=literal>finalize()</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>getClass()</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="left">

<p class=para>
<tt class=literal>hashCode()</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>notify()</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="left">

<p class=para>
<tt class=literal>notifyAll()</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>wait()</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
<tr class=row>
<td align="left">

<p class=para>
<tt class=literal>wait(long)</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>wait(long, int)</tt></TD>
<td align="left">

<p class=para>
<tt class=literal>Object</tt></TD>
</TR>
</TABLE>
<p>
</DIV>

</DIV>

<div class=refsect1>
<h2 class=refsect1><a class="TITLE" name="ch10-REFSECT1-AUTOID.184">See Also</A></h2>

<p class=para>
<a href="ch09_04.htm">Exceptions</A>;
<a href="ch10_14.htm">Object</A>;
<a href="ch10_16.htm">Runnable</A>;
<a href="ch10_18.htm">SecurityManager</A>;
<a href="ch10_23.htm">Thread</A>;
Threads 8;
<a href="ch10_25.htm">Throwable</A>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch10_23.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch10_25.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Thread</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Throwable</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
