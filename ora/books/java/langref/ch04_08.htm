<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 4] 4.8 Relational Comparison Operators</TITLE>
<meta name="author" content="Mark Grand">
<meta name="date" content="Thu Jul 31 13:10:24 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="java">
<meta name="title" content="Java Language Reference">
<meta http-equiv="Content-Script-Type" content="text/javascript">
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><a href='index.htm'><img src="gifs/smbanner.gif" alt="Java Language Reference" border=0></a></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch04_07.htm#JLR2-CH-4-SECT-7.1"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 4<br>Expressions</FONT></B></TD>
<td width=172 align=right valign=top><a href="ch04_09.htm#JLR2-CH-4-SECT-9.2"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>

&nbsp;
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="JLR2-CH-4-SECT-8">4.8 Relational Comparison Operators</A></h2>

<p class=para>
<a name="CH04.RELAT1"></A><a name="CH04.RELAT2"></A><a name="CH04.EQUAL3"></A>The relational
comparison operators in Java are used for less than (<tt class=literal>&lt;</tt>),
less than or equal to (<tt class=literal>&lt;=</tt>), greater than
or equal to (<tt class=literal>&gt;=</tt>), greater than (<tt class=literal>&gt;</tt>),
and <tt class=literal>instanceof</tt> comparison operations. They
may appear in a relational expression:


<p>
<img align=middle src="figs/jlr0418.gif" alt="[Graphic: Figure from the text]" width=425 height=75 border=0>

<p class=para>
The
relational comparison operators are equal in precedence and are
evaluated from left to right. The <tt class=literal>&lt;</tt>, <tt class=literal>&lt;=</tt>,
<tt class=literal>&gt;=</tt>, and <tt class=literal>&gt;</tt> operators are numerical
comparison operators, while <tt class=literal>instanceof</tt> is a type
comparison operator. All of these operators produce <tt class=literal>boolean</tt>
values.

<p class=para>
<b>References</b>
<a href="ch04_07.htm#JLR2-CH-4-SECT-7.1">Shift Operators</A>;
<a href="ch04_14.htm">Order of Operations</A>;
<i class=emphasis>Type</I> 3

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JLR2-CH-4-SECT-8.1">Less-Than Operator &lt;</A></h3>

<p class=para>
The less-than operator &lt; performs a comparison between its operands
and returns a <tt class=literal>boolean</tt>
value. It returns the pure value <tt class=literal>true</tt> if its
left operand is less than its right operand; otherwise the operator
returns the pure value <tt class=literal>false</tt>. The <tt class=literal>&lt;</tt>
operator may appear as part of a relational expression. The
less-than operator never throws an exception.

<p class=para>
The types of
both operands of the less-than operator must be arithmetic types,
or a compile-time error occurs. The <tt class=literal>&lt;</tt> operator
may perform type conversions on its operands:
<p>
<ul class=itemizedlist>
<li class=listitem>If either operand is of type <tt class=literal>double</tt>, then the other operand
is converted to <tt class=literal>double</tt>.

<p>
<li class=listitem>Otherwise,
if either operand is of type <tt class=literal>float</tt>, the other
operand is converted to <tt class=literal>float</tt>.

<p>
<li class=listitem>Otherwise,
if either operand is of type <tt class=literal>long</tt>, the other
operand is converted to <tt class=literal>long</tt>.

<p>
<li class=listitem>Otherwise,
both operands are converted to <tt class=literal>int</tt>.

<p>
</UL>
<p class=para>
The
comparison of any two arithmetic values produces <tt class=literal>true</tt>
if the value of the left operand is less than the value of the right
operand; otherwise the comparison produces <tt class=literal>false</tt>.
The comparison of floating-point data is governed by the following
additional rules:
<p>
<ul class=itemizedlist>
<li class=listitem>If either operand is not-a-number
(NaN), the comparison produces <tt class=literal>false</tt>.

<p>
<li class=listitem>Negative
infinity is the most negative value. If the left operand is negative
infinity, the comparison produces <tt class=literal>true</tt>, unless
the right operand is also negative infinity, in which case the comparison
produces <tt class=literal>false</tt>.

<p>
<li class=listitem>Positive infinity
is the most positive value. If the right operand is positive infinity,
the comparison produces <tt class=literal>true</tt>, unless the left
operand is also positive infinity, in which case the comparison
produces <tt class=literal>false</tt>.

<p>
<li class=listitem>Positive and negative
zero are treated as equal, so <tt class=literal>-0.0 &lt; 0.0</tt>
produces <tt class=literal>false</tt>.

<p>
</UL>
<p class=para>
<b>References</b>
<a href="ch03_01.htm">Arithmetic Types</A>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JLR2-CH-4-SECT-8.2">Less-Than-Or-Equal-To Operator &lt;=</A></h3>

<p class=para>
The less-than-or-equal-to operator <tt class=literal>&lt;=</tt> performs
a comparison
between its operands and returns a <tt class=literal>boolean</tt> value.
It returns the pure value <tt class=literal>true</tt> if its left operand
is less than or equal to its right operand; otherwise the operator
returns the pure value <tt class=literal>false</tt>. The <tt class=literal>&lt;=</tt>
operator may appear as part of a relational expression.
The less-than-or-equal-to operator never throws an exception.

<p class=para>
The
types of both operands of the less-than-or-equal-to operator must
be arithmetic types, or a compile-time error occurs. The <tt class=literal>&lt;=</tt>
operator may perform type conversions on its operands:

<p>
<ul class=itemizedlist>
<li class=listitem>If either operand is of type <tt class=literal>double</tt>, then the other operand
is converted to <tt class=literal>double</tt>.

<p>
<li class=listitem>Otherwise,
if either operand is of type <tt class=literal>float</tt>, the other
operand is converted to <tt class=literal>float</tt>.

<p>
<li class=listitem>Otherwise,
if either operand is of type <tt class=literal>long</tt>, the other
operand is converted to <tt class=literal>long</tt>.

<p>
<li class=listitem>Otherwise,
both operands are converted to <tt class=literal>int</tt>.

<p>
</UL>
<p class=para>
The
comparison of any two arithmetic values produces <tt class=literal>true</tt>
if the value of the left operand is less than or equal to the value
of the right operand; otherwise the comparison produces <tt class=literal>false</tt>.
The comparison of floating-point data is governed by the following
additional rules:
<p>
<ul class=itemizedlist>
<li class=listitem>If either operand is not-a-number
(NaN), the comparison produces <tt class=literal>false</tt>.

<p>
<li class=listitem>Negative
infinity is the most negative value. If the left operand is negative
infinity, the comparison always produces <tt class=literal>true</tt>.

<p>
<li class=listitem>Positive infinity is the most positive value. If the right
operand is positive infinity, the comparison always produces <tt class=literal>true</tt>.

<p>
<li class=listitem>Positive and negative zero are treated as equal, so
<tt class=literal>0.0 &lt;= -0.0</tt> produces <tt class=literal>true</tt>.

<p>
</UL>
<p class=para>
<b>References</b>
<a href="ch03_01.htm">Arithmetic Types</A>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JLR2-CH-4-SECT-8.3">Greater-Than-Or-Equal-To Operator &gt;=</A></h3>

<p class=para>
The greater-than-or-equal-to operator <tt class=literal>&gt;=</tt> performs
a comparison
between its operands and returns a <tt class=literal>boolean</tt> value.
It returns the pure value <tt class=literal>true</tt> if its left operand
is greater than or equal to its right operand; otherwise the operator
returns the pure value <tt class=literal>false</tt>. The <tt class=literal>&gt;=</tt>
operator may appear as part of a relational expression. 
The greater-than-or-equal-to operator never throws an exception.

<p class=para>
The types of both operands of the greater-than-or-equal-to operator
must be arithmetic types, or a compile-time error occurs.
The <tt class=literal>&gt;=</tt> operator may perform type conversions
on its operands:
<p>
<ul class=itemizedlist>
<li class=listitem>If either operand is of type <tt class=literal>double</tt>, then the other operand
is converted to <tt class=literal>double</tt>.

<p>
<li class=listitem>Otherwise,
if either operand is of type <tt class=literal>float</tt>, the other
operand is converted to <tt class=literal>float</tt>.

<p>
<li class=listitem>Otherwise,
if either operand is of type <tt class=literal>long</tt>, the other
operand is converted to <tt class=literal>long</tt>.

<p>
<li class=listitem>Otherwise,
both operands are converted to <tt class=literal>int</tt>.

<p>
</UL>
<p class=para>
The
comparison of any two arithmetic values produces <tt class=literal>true</tt>
if the value of the left operand is greater than or equal to the
value of the right operand; otherwise the comparison produces <tt class=literal>false</tt>.
The comparison of floating-point data is governed by the following
additional rules:
<p>
<ul class=itemizedlist>
<li class=listitem>If either operand is not-a-number
(NaN), the comparison produces <tt class=literal>false</tt>.

<p>
<li class=listitem>Negative
infinity is the most negative value. If the right operand is negative
infinity, the comparison always produces <tt class=literal>true</tt>.

<p>
<li class=listitem>Positive infinity is the most positive value. If the left
operand is positive infinity, the comparison always produces <tt class=literal>true</tt>.

<p>
<li class=listitem>Positive and negative zero are treated as equal, so <tt class=literal>-0.0
&gt;= 0.0</tt> produces <tt class=literal>true</tt>.

<p>
</UL>
<p class=para>
<b>References</b>
<a href="ch03_01.htm">Arithmetic Types</A>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JLR2-CH-4-SECT-8.4">Greater-Than Operator &gt;</A></h3>

<p class=para>
The greater-than operator <tt class=literal>&gt;</tt>
performs a comparison between its operands and
returns a <tt class=literal>boolean</tt>
value. It returns the pure value <tt class=literal>true</tt> if its
left operand is greater than its right operand; otherwise the operator
returns the pure value <tt class=literal>false</tt>.
The <tt class=literal>&gt;</tt>
operator may appear as part of a relational expression. The greater-than
operator never throws an exception.

<p class=para>
The types of
both operands of the greater-than operator must be arithmetic types,
or a compile-time error occurs. The <tt class=literal>&gt;</tt> operator
may perform type conversions on its operands:
<p>
<ul class=itemizedlist>
<li class=listitem>If either operand is of type <tt class=literal>double</tt>, then the other operand
is converted to <tt class=literal>double</tt>.

<p>
<li class=listitem>Otherwise,
if either operand is of type <tt class=literal>float</tt>, the other
operand is converted to <tt class=literal>float</tt>.

<p>
<li class=listitem>Otherwise, if either operand is of type <tt class=literal>long</tt>, the other
operand is converted to <tt class=literal>long</tt>.

<p>
<li class=listitem>Otherwise,
both operands are converted to <tt class=literal>int</tt>.

<p>
</UL>
<p class=para>
The
comparison of any two arithmetic values produces <tt class=literal>true</tt>
if the value of the left operand is greater than the value of the
right operand; otherwise the comparison produces <tt class=literal>false</tt>.
The comparison of floating-point data is governed by the following
additional rules:
<p>
<ul class=itemizedlist>
<li class=listitem>If either operand is not-a-number
(NaN), the comparison produces <tt class=literal>false</tt>.

<p>
<li class=listitem>Negative
infinity is the most negative value. If the right operand is negative
infinity, the comparison produces <tt class=literal>true</tt>, unless
the left operand is also negative infinity, in which case the comparison
produces <tt class=literal>false</tt>.

<p>
<li class=listitem>Positive infinity
is the most positive value. If the left operand is positive infinity,
the comparison produces <tt class=literal>true</tt>, unless the right
operand is also positive infinity, in which case the comparison
produces <tt class=literal>false</tt>.

<p>
<li class=listitem>Positive and negative
zero are treated as equal, so <tt class=literal>0.0 &gt; -0.0</tt> produces
<tt class=literal>false</tt>.

<p>
</UL>
<p class=para>
<b>References</b>
<a href="ch03_01.htm">Arithmetic Types</A>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="JLR2-CH-4-SECT-8.5">The instanceof Operator</A></h3>

<p class=para>
The <tt class=literal>instanceof</tt> operator performs a type comparison
between its operands and returns a <tt class=literal>boolean</tt> value.
It returns the pure value <tt class=literal>true</tt> if the object
referred to by the left operand can be cast to the type specified
as the right operand; otherwise the operator returns the pure value
<tt class=literal>false</tt>. If the value of the left operand is <tt class=literal>null</tt>,
the <tt class=literal>instanceof</tt> operator returns the pure value
<tt class=literal>false</tt>. The <tt class=literal>instanceof</tt> operator
may appear as part of a relational expression. The <tt class=literal>instanceof</tt>
operator never throws an exception.

<p class=para>
The type of the
left operand of the <tt class=literal>instanceof</tt>
operator must be a reference type, or a compile-time error occurs.

<p class=para>
All objects inherit a method called <tt class=literal>equals()</tt>
from the <tt class=literal>Object</tt> class. The <tt class=literal>equals()</tt>
method defined in the <tt class=literal>Object</tt> class returns <tt class=literal>true</tt>
if the two objects being compared are the same object. For some
classes, it is more appropriate to override the <tt class=literal>equals()</tt>
method so that it compares the contents of two objects. Before
such a method can do the comparison, it should verify that the objects
are instances of the same class by using <tt class=literal>instanceof</tt>.
For example, let's suppose that you are defining a class to represent
complex numbers. Since you want the <tt class=literal>equals()</tt>
method to compare the contents of complex number objects, you define
an <tt class=literal>equals</tt> method for the complex number class
that looks like this:

<div class=screen>
<p>
<pre>
boolean equals (Object o) {
   if (o instanceof complexNumber)
       return o.real == this.real 
           &amp;&amp; o.imaginary == this.imaginary;
}
</PRE>
</DIV>

<p class=para>
The <tt class=literal>instanceof</tt>
operator can also be used to find out if an object is an instance
of a class that implements an interface. For example:

<div class=screen>
<p>
<pre>
if (o instanceof Runnable)
    (new Thread((Runnable)o).start;
</PRE>
</DIV>

<p class=para>
<b>References</b>
<a href="ch04_04.htm#JLR2-CH-4-SECT-4.3">Casts</A>;
<a href="ch03_02.htm#JLR2-CH-3-SECT-2.3">Class Types</A>;
<a href="ch03_02.htm#JLR2-CH-3-SECT-2.3">Interface Types</A>

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch04_07.htm#JLR2-CH-4-SECT-7.1"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src='gifs/txthome.gif' border=0 alt='Home'></a></td>
<td width=172 align=right valign=top><a href="ch04_09.htm#JLR2-CH-4-SECT-9.2"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Shift Operators</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm"><img src='gifs/index.gif' alt='Book Index' border=0></a></td>
<td width=172 align=right valign=top>Equality Comparison Operators</td>
</tr>
</table>
<hr align=left width=515>

<img src="gifs/smnavbar.gif" usemap="#map" border=0> 
<map name="map"> 
<area shape=RECT coords="0,0,108,15" href="../javanut/index.htm" alt="Java in a Nutshell"> 
<area shape=RECT coords="109,0,200,15" href="index.htm" alt="Java Language Reference"> 
<area shape=RECT coords="203,0,290,15" href="../awt/index.htm" alt="Java AWT"> 
<area shape=RECT coords="291,0,419,15" href="../fclass/index.htm" alt="Java Fundamental Classes"> 
<area shape=RECT coords="421,0,514,15" href="../exp/index.htm" alt="Exploring Java"> 
</MAP>
</DIV>

</BODY>
</HTML>
