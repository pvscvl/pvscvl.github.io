<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 16] 16.5 Image Replacement Example</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Wed Apr 23 18:20:50 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="JavaScript">
<meta name="title" content="JavaScript: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Javascript: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch16_04.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 16</b></td>
<td width=172 align=right valign=top><a href="ch16_06.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="ch16-SECT1-AUTOID.5">16.5 Image Replacement Example</A></h2>

<p class=para>
<a name="CH16.IMAGES2"></A>      Because image replacement is such a versatile technique we will
      end our discussion of the Image object with an extended example.
      <a href="#JSCRIPT-CH-IMAGES-EX-3">Example 16-3</A> defines a ToggleButton
      class that uses image replacement to simulate a graphical
      checkbox. Because this class uses images that we provide, we can
      use bolder graphics than those plain-old graphics used by the
      standard HTML Checkbox object.
      <a href="#JSCRIPT-CH-IMAGES-FIG-1">Figure 16-1</A> shows how these
      toggle button graphics could appear on a web page. This is a
      complex, real-world example, and is worth studying carefully.
    

<div class=figure>
<h4 class=figure><a class="TITLE" name="JSCRIPT-CH-IMAGES-FIG-1">Figure 16-1: ToggleButtons implemented with image replacement</A></h4>


<p>
<img align=middle src="figs/js1601.gif" alt="[Graphic: Figure 16-1]" width=392 height=274>

</DIV>

<div class=example>
<h4 class=example><a class="TITLE" name="JSCRIPT-CH-IMAGES-EX-3">Example 16-3: Implementing a ToggleButton with Image Replacement</A></h4>

<div class=programlisting>
<p>
<pre>
&lt;SCRIPT LANGUAGE="JavaScript1.1"&gt;
//<tt class=replaceable><i> This is the constructor function for our new ToggleButton class.</i></tt>
//<tt class=replaceable><i> Calling it creates a ToggleButton object and outputs the required</i></tt>
//<tt class=replaceable><i> &lt;A&gt; and &lt;IMG&gt; tags into the specified document at the current location. </i></tt>
//<tt class=replaceable><i> Therefore, don't call it for the current document from an event handler.</i></tt>
//<tt class=replaceable><i> Arguments:</i></tt>
//<tt class=replaceable><i>    document: the Document object the buttons will be created in.</i></tt>
//<tt class=replaceable><i>    checked:  a Boolean that says whether the button is initially checked.</i></tt>
//<tt class=replaceable><i>    label:    an optional string that specifies text to appear after the button.</i></tt>
//<tt class=replaceable><i>    onclick:  an optional function to be called when the toggle button is</i></tt>
//<tt class=replaceable><i>              clicked. It will be passed a Boolean indicating the new</i></tt>
//<tt class=replaceable><i>              state of the button. You can also pass a string, which will</i></tt>
//<tt class=replaceable><i>              be converted to a function which is passed a Boolean argument</i></tt>
//<tt class=replaceable><i>              named "state".</i></tt>
function ToggleButton(document, checked, label, onclick)
{
    //<tt class=replaceable><i> first time called, document will be false. Ignore this call.</i></tt>
    if (document == null) return;
    //<tt class=replaceable><i> The first time we are called (and only the first time) we have</i></tt>
    //<tt class=replaceable><i> to do some special stuff. First, now that the prototype object</i></tt>
    //<tt class=replaceable><i> is created, we can set up our methods. </i></tt>
    //<tt class=replaceable><i> Second, we've got to load the images that we'll be using.</i></tt>
    //<tt class=replaceable><i> Doing this will get the images in the cache for when we need them.</i></tt>
    if (!ToggleButton.prototype.over) {
        //<tt class=replaceable><i> Initialize the prototype object to create our methods.</i></tt>
        ToggleButton.prototype.over = _ToggleButton_over;
        ToggleButton.prototype.out = _ToggleButton_out;
        ToggleButton.prototype.click = _ToggleButton_click;
        //<tt class=replaceable><i> Now create an array of image objects, and assign URLs to them.</i></tt>
        //<tt class=replaceable><i> The URLs of the images are configurable, and are stored in an</i></tt>
        //<tt class=replaceable><i> array property of this constructor function itself. They will be</i></tt>
        //<tt class=replaceable><i> initialized below. Because of a bug in Navigator, we've got</i></tt>
        //<tt class=replaceable><i> to maintain references to these images, so we store the array</i></tt>
        //<tt class=replaceable><i> in a property of the constructor rather than using a local variable.</i></tt>
        ToggleButton.images = new Array(4);
        for(var i = 0; i &lt; 4; i++) {
            ToggleButton.images[i] = new Image(ToggleButton.width,
                                               ToggleButton.height);
            ToggleButton.images[i].src = ToggleButton.imagenames[i];
        }
    }
    
    //<tt class=replaceable><i> Save some of the arguments we were passed.</i></tt>
    this.document = document;
    this.checked = checked;
    //<tt class=replaceable><i> Remember that the mouse is not currently on top of us.</i></tt>
    this.highlighted = false;
    //<tt class=replaceable><i> Save the onclick argument to be called when the button is clicked.</i></tt>
    //<tt class=replaceable><i> If it is not already a function, attempt to convert it</i></tt>
    //<tt class=replaceable><i> to a function that is passed a single argument, named state.</i></tt>
    this.onclick = onclick;
    if (typeof this.onclick == "string")
        this.onclick = new Function("state", this.onclick);
    //<tt class=replaceable><i> Figure out what entry in the document.images[] array the images</i></tt>
    //<tt class=replaceable><i> for this checkbox will be stored at.</i></tt>
    var index = document.images.length;
    //<tt class=replaceable><i> Now output the HTML code for this checkbox. Use &lt;A&gt; and &lt;IMG&gt; tags.</i></tt>
    //<tt class=replaceable><i> The event handlers we output here are confusing, but crucial to the</i></tt>
    //<tt class=replaceable><i> operation of this class. The "_tb" property is defined below, as</i></tt>
    //<tt class=replaceable><i> are the over(), out(), and click() methods.</i></tt>
    document.write('&amp;nbsp;&lt;A HREF ="" ' +
      'onMouseOver="document.images[' + index + ']._tb.over();return true;" '+
      'onMouseOut="document.images[' + index + ']._tb.out()" '+
      'onClick="document.images[' + index + ']._tb.click(); return false;"&gt;');
    document.write('&lt;IMG SRC="' + ToggleButton.imagenames[this.checked+0] +'"'+
                   ' WIDTH=' + ToggleButton.width +
                   ' HEIGHT=' + ToggleButton.height +
                   ' BORDER=0 HSPACE=0 VSPACE=0 ALIGN="absmiddle"&gt;');
    if (label) document.write(label);
    document.write('&lt;/A&gt;');
    //<tt class=replaceable><i> Now that we've output the &lt;IMG&gt; tag, save a reference to the</i></tt>
    //<tt class=replaceable><i> Image object that it created in the ToggleButton object.</i></tt>
    this.image = document.images[index];
    //<tt class=replaceable><i> And also make a link in the other direction: from the Image object</i></tt>
    //<tt class=replaceable><i> to this ToggleButton object. Do this by defining a "_tb" property</i></tt>
    //<tt class=replaceable><i> in the Image object.</i></tt>
    this.image._tb = this;
}
//<tt class=replaceable><i> This becomes the over() method.</i></tt>
function _ToggleButton_over()
{
    //<tt class=replaceable><i> Change the image, and remember that we're highlighted.</i></tt>
    this.image.src = ToggleButton.imagenames[this.checked + 2];
    this.highlighted = true;
}
//<tt class=replaceable><i> This becomes the out() method.</i></tt>
function _ToggleButton_out()
{
    //<tt class=replaceable><i> Change the image, and remember that we're not highlighted.</i></tt>
    this.image.src = ToggleButton.imagenames[this.checked + 0];
    this.highlighted = false;
}
//<tt class=replaceable><i> This becomes the click() method.</i></tt>
function _ToggleButton_click()
{
    //<tt class=replaceable><i> Toggle the state of the button, change the image, and call the</i></tt>
    //<tt class=replaceable><i> onclick method, if it was specified for this ToggleButton.</i></tt>
    this.checked = !this.checked;
    this.image.src = ToggleButton.imagenames[this.checked+this.highlighted*2];
    if (this.onclick) this.onclick(this.checked);
}
//<tt class=replaceable><i> Initialize static class properties that describe the checkbox images. These</i></tt>
//<tt class=replaceable><i> are just defaults. Programs can override them by assigning new values.</i></tt>
//<tt class=replaceable><i> But the should only be overridden *before* any ToggleButtons are created.</i></tt>
ToggleButton.imagenames = new Array(4);            //<tt class=replaceable><i> create an array</i></tt>
ToggleButton.imagenames[0] = "togglebutton0.gif";  //<tt class=replaceable><i> the unchecked box</i></tt>
ToggleButton.imagenames[1] = "togglebutton1.gif";  //<tt class=replaceable><i> the box with a check mark</i></tt>
ToggleButton.imagenames[2] = "togglebutton2.gif";  //<tt class=replaceable><i> unchecked but highlighted</i></tt>
ToggleButton.imagenames[3] = "togglebutton3.gif";  //<tt class=replaceable><i> checked and highlighted</i></tt>
ToggleButton.width = ToggleButton.height = 25;     //<tt class=replaceable><i> size of all images</i></tt>
&lt;/SCRIPT&gt;
&lt;!--<tt class=replaceable><i> Here's how we might use the ToggleButton class. </i></tt>--&gt;
Optional extras:&lt;BR&gt;
&lt;SCRIPT LANGUAGE="JavaScript1.1"&gt;
//<tt class=replaceable><i> Create the buttons</i></tt>
var tb1 = new ToggleButton(document, true, "28.8K Modem&lt;BR&gt;");
var tb2 = new ToggleButton(document, false, "Laser Printer&lt;BR&gt;");
var tb3 = new ToggleButton(document, false, "Tape Backup Unit&lt;BR&gt;");
&lt;/SCRIPT&gt;
&lt;!--<tt class=replaceable><i> Here's how we can use the ToggleButton objects from event handlers. </i></tt>--&gt;
&lt;FORM&gt;
&lt;INPUT TYPE="button" VALUE="Report Button States"
       onClick="alert(tb1.checked + '\n' + tb2.checked + '\n' + tb3.checked)"&gt;
&lt;INPUT TYPE="button" VALUE="Reset Buttons"
       onClick="if (tb1.checked) tb1.click();
                if (tb2.checked) tb2.click();
                if (tb3.checked) tb3.click();"&gt;
&lt;/FORM&gt;
</PRE>
</DIV>

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch16_04.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch16_06.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Other Image Properties</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Other Image Techniques</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
