<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 12] Programming with Windows</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Wed Apr 23 18:15:57 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="JavaScript">
<meta name="title" content="JavaScript: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Javascript: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_08.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 12</b></td>
<td width=172 align=right valign=top><a href="ch12_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<h1 class=chapter><a class="TITLE" name="JSCRIPT-CH-WINDOWS">12. Programming with Windows</A></H1>

<div class=htmltoc>

<p>
<b>Contents:</b><br>
Simple Dialogs<br>
<a href="ch12_02.htm">Opening and Closing Windows</A><br>
<a href="ch12_03.htm">The Status Line</A><br>
<a href="ch12_04.htm">Frame Programming Techniques</A><br>
<a href="ch12_05.htm">Other Window Programming Techniques</A><br>

</DIV>

<p class=para>
    <a href="ch11_01.htm">Chapter 11, <i>Windows and the JavaScript Name Space</i></A>, discussed implicit and
    explicit references to windows, window names, window lifetime,
    variable scope within windows, and other window-related
    architectural issues in JavaScript. This chapter gets down to
    fundamentals and describes some practical methods, properties, and
    techniques for programming with JavaScript windows.
  

<div class=sect1>
<h2 class=sect1><a class="TITLE" name="ch12-SECT1-AUTOID.1">12.1 Simple Dialogs</A></h2>

<p class=para>
<a name="CH12.DIALOG1"></A><a name="CH12.DIALOG2"></A><a name="CH12.DIALOG3"></A><a name="CH12.DIALOG4"></A><a name="CH12.DIALOG5"></A>      Three commonly used Window methods are <tt class=literal>alert()</tt>,
      <tt class=literal>confirm()</tt>, and <tt class=literal>prompt()</tt>.
      These methods pop up simple dialog boxes.
      <tt class=literal>alert()</tt> displays a message to the user.
      <tt class=literal>confirm()</tt> asks the user to click an <b>Ok</b> or <b>Cancel</b>
      button to confirm or abort an operation. And
      <tt class=literal>prompt()</tt> asks the user to enter a string.
      Sample dialogs produced by these three methods are shown in <a href="#JSCRIPT-CH-WINDOWS-FIG-1">Figure 12-1</A>, and <a href="#JSCRIPT-CH-WINDOWS-EX-1">Example 12-1</A> shows some typical uses of these
      methods.
    

<div class=figure>
<h4 class=figure><a class="TITLE" name="JSCRIPT-CH-WINDOWS-FIG-1">Figure 12-1: alert(), confirm(), and prompt() dialog boxes</A></h4>


<p>
<img align=middle src="figs/js1201.gif" alt="[Graphic: Figure 12-1]" width=285 height=121>

</DIV>

<p class=para>
      Note that the text displayed by these dialog boxes is plain
      text, not HTML-formatted text. The only formatting you can do
      is with spaces, newlines, and various punctuation characters.
      Adjusting the formatting generally requires trial-and-error.
      Bear in mind, though, that the dialogs will look different on
      different platforms and in different browsers, so you can't
      always count on your formatting to look right on all possible
      browsers. 
    

<p class=para>
      The most commonly asked question about these dialog boxes is,
      "How can I get rid of the `JavaScript Alert:' message?" There is
      no way to do this. It is there to prevent you from writing
      malicious code that spoofs system dialogs and tricks users into
      doing things that they shouldn't do.
    

<p class=para>
      Finally, note that JavaScript code keeps executing when an
      <tt class=literal>alert()</tt> dialog is posted, but both the
      <tt class=literal>confirm()</tt> and <tt class=literal>prompt()</tt>
      methods block--that is, those methods do not return until the
      user dismisses the dialog they display. This means that when
      you pop one up, your code will stop running and the currently
      loading document, if any, will stop loading until the user
      responds with the requested input. There is no alternative to
      blocking for these methods--their return value is the user's
      input, so they must wait for the user before they can return.
    

<div class=example>
<h4 class=example><a class="TITLE" name="JSCRIPT-CH-WINDOWS-EX-1">Example 12-1: Using the alert(), confirm() and prompt() Methods</A></h4>

<div class=programlisting>
<p>
<pre>
//<tt class=replaceable><i> Here's a function that uses the alert() method to tell the user</i></tt>
//<tt class=replaceable><i> that their form submission will take some time, and that they should</i></tt>
//<tt class=replaceable><i> be patient. It would be suitable for use in the onSubmit() event handler</i></tt>
//<tt class=replaceable><i> of an HTML form. </i></tt>
//<tt class=replaceable><i> Note that all formatting is done with spaces, newlines, and underscores.</i></tt>
function warn_on_submit()
{
    alert("\n__________________________________________________\n\n" +
          "                  Your query is being submitted....\n"    +
          "__________________________________________________\n\n"   +
          "Please be aware that complex queries such as yours\n"     +
          "     can require a minute or more of search time.\n\n"    +
          "                         Please be patient.");
}
//<tt class=replaceable><i> Here is a use of the confirm() method to ask the user if they really</i></tt>
//<tt class=replaceable><i> want to visit a web page that takes a long time to download. Note that</i></tt>
//<tt class=replaceable><i> the return value of the method indicates the user response. Based</i></tt>
//<tt class=replaceable><i> on this response, we reroute the browser to an appropriate page.</i></tt>
var msg = "\nYou are about to experience the most\n\n" +
          "                -=| AWESOME |=-\n\n" +
          "Web page you have ever visited!!!!!!\n\n" +
          "This page takes an average of 15 minutes to\n" +
          "download over a 28.8K modem connection.\n\n" +
          "Are you ready for a *good* time, Dude????";
if (confirm(msg)) 
    location.replace("awesome_page.html");
else
    location.replace("lame_page.html");
//<tt class=replaceable><i> Here's some very simple code that uses the prompt() method to get</i></tt>
//<tt class=replaceable><i> a user's name, and then uses that name in dynamically generated HTML.</i></tt>
n = prompt("What is your name?", "");
document.write("&lt;hr&gt;&lt;h1&gt;Welcome to my home page, " + n + "&lt;/h1&gt;&lt;hr&gt;");
</PRE>
</DIV>

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_08.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch12_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>The JavaScript Object Hierarchy</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Opening and Closing Windows</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
