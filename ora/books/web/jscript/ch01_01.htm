<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 1] Introduction to JavaScript</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Wed Apr 23 18:00:19 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="JavaScript">
<meta name="title" content="JavaScript: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Javascript: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch00_04.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 1</b></td>
<td width=172 align=right valign=top><a href="ch01_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<h1 class=chapter><a class="TITLE" name="JSCRIPT-CH-INTRO">1. Introduction to JavaScript</A></H1>

<div class=htmltoc>

<p>
<b>Contents:</b><br>
Executable Content: JavaScript in a Web Page<br>
<a href="ch01_02.htm">JavaScript Myths</A><br>
<a href="ch01_03.htm">What JavaScript Can Do</A><br>
<a href="ch01_04.htm">What JavaScript Can't Do</A><br>
<a href="ch01_05.htm">An Example: Calculating Your Taxes with JavaScript</A><br>
<a href="ch01_06.htm">Flavors and Versions of JavaScript</A><br>
<a href="ch01_07.htm">JavaScript Security</A><br>
<a href="ch01_08.htm">Using the Rest of This Book</A><br>
<a href="ch01_09.htm">Exploring JavaScript</A><br>

</DIV>

<p class=para>
    JavaScript is a lightweight interpreted programming language with
    rudimentary object-oriented capabilities. The general-purpose core
    of the language has been embedded in Netscape Navigator and other
    web browsers and embellished for web programming with the addition
    of objects that represent the web browser window and its contents.
    This "client-side" version of JavaScript allows "executable content"
    to be included in web pages--it means that a web page need no longer
    be static HTML, but can include dynamic programs that interact
    with the user, control the browser, and dynamically create HTML
    content. 
  

<p class=para>
    Syntactically, the core JavaScript language resembles C, C++ and
    Java, with programming constructs such as the <tt class=literal>if</tt>
    statement, the <tt class=literal>while</tt> loop, and the
    <tt class=literal>&amp;&amp;</tt> operator. The similarity ends with this
    syntactic resemblance, however. JavaScript is an untyped language,
    which means that variables do not have to have a type
    specified. Objects in JavaScript are more like Perl's associative array
    than they are like structures in C or objects in C++ or Java. Also,
    as mentioned, JavaScript is a purely interpreted language, unlike C
    and C++, which are compiled, and unlike Java, which is compiled to
    byte-code before being interpreted.
  

<p class=para>
    This chapter is a quick overview of JavaScript; it explains what
    JavaScript can do and also what it can't, and exposes some myths
    about the language. The chapter demonstrates web programming with
    some real-world JavaScript examples, explains the many
    versions of JavaScript, and also addresses security concerns.
  

<div class=sect1>
<h2 class=sect1><a class="TITLE" name="ch01-SECT1-AUTOID.1">1.1 Executable Content: JavaScript in a Web Page</A></h2>

<p class=para>
<a name="CH01.CSJ1"></A><a name="CH01.CSJ2"></A>
	
      When a web browser is augmented with a JavaScript interpreter, it
      allows "executable content" to be distributed over the Internet in
      the form of JavaScript "scripts."[1]
      <a href="#JSCRIPT-CH-INTRO-EX-1">Example 1-1</A> shows a simple JavaScript
      program, or script, embedded in a web page. When loaded into a
      JavaScript-enabled browser, it produces the output shown in <a href="#JSCRIPT-CH-INTRO-FIG-1">Figure 1-1</A>.
    

<blockquote class=footnote>
<p class=para>[1] 
	  Currently the only JavaScript-enabled browsers are Netscape
	  Navigator versions 2.0 and 3.0, and Microsoft Internet
	  Explorer version 3.0.
	
</blockquote>
<div class=example>
<h4 class=example><a class="TITLE" name="JSCRIPT-CH-INTRO-EX-1">Example 1-1: A Simple JavaScript Program</A></h4>

<div class=programlisting>
<p>
<pre>
&lt;HTML&gt;
&lt;BODY&gt;
&lt;SCRIPT LANGUAGE="JavaScript"&gt;
document.write("&lt;h2&gt;Table of Factorials&lt;/h2&gt;");
for(i = 1, fact = 1; i &lt; 10; i++, fact *= i) {
    document.write(i + "! = " + fact);
    document.write("&lt;br&gt;");
}
&lt;/SCRIPT&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>
</DIV>

</DIV>

<div class=figure>
<h4 class=figure><a class="TITLE" name="JSCRIPT-CH-INTRO-FIG-1">Figure 1-1: A web page generated with JavaScript</A></h4>


<p>
<img align=middle src="figs/js0101.gif" alt="[Graphic: Figure 1-1]" width=378 height=323>

</DIV>

<p class=para>
	
      As you can see in this example, the
      <tt class=literal>&lt;SCRIPT&gt;</tt> and
      <tt class=literal>&lt;/SCRIPT&gt;</tt> tags are used to embed
      JavaScript code within an HTML file. We'll learn more about the
      <tt class=literal>&lt;SCRIPT&gt;</tt> tag in <a href="ch10_01.htm">Chapter 10, <i>Client-Side Program Structure</i></A>.
      
	
      The main feature of JavaScript demonstrated by this example is the
      use of the <tt class=literal>document.write()</tt> method.[2]
      This method is used to dynamically output HTML text that will be
      parsed and displayed by the web browser; we'll encounter it many
      more times in this book.
    

<blockquote class=footnote>
<p class=para>[2] 
	  "Method" is the object-oriented term for function or
	  procedure; you'll see it used throughout this book.
	
</blockquote>
<p class=para>
      Besides allowing programmatic control over the content of web
      pages, as shown in <a href="#JSCRIPT-CH-INTRO-FIG-1">Figure 1-1</A>,
      JavaScript allows programmatic control over the browser, and
      also over the content of HTML forms that appear in a web page.
      We'll learn about these and other capabilities of JavaScript in
      more detail later in this chapter, and in much more detail later
      in this book.
    

<p class=para>
      
      Not only can JavaScript control the content of HTML forms, it can
      also control the behavior of those forms!  That is, a JavaScript
      program might respond in some way when you enter a value in
      an input field or click on a checkbox in a form. JavaScript can
      do this by defining "event handlers" for the form--pieces of
      JavaScript code that are executed when a particular event occurs,
      such as when the user clicks on a button.
      <a href="#JSCRIPT-CH-INTRO-EX-2">Example 1-2</A> shows the definition of a
      very simple HTML form that includes an event handler that is
      executed in response to a button click.
      <a href="#JSCRIPT-CH-INTRO-FIG-2">Figure 1-2</A> illustrates the result of
      clicking the button.
    

<div class=example>
<h4 class=example><a class="TITLE" name="JSCRIPT-CH-INTRO-EX-2">Example 1-2: An HTML Form with a JavaScript Event Handler Defined</A></h4>

<div class=programlisting>
<p>
<pre>
&lt;FORM&gt;
&lt;INPUT TYPE="button" 
       VALUE="Click here" 
       onClick="alert('You clicked the button')"&gt;
&lt;/FORM&gt;
</PRE>
</DIV>

</DIV>

<div class=figure>
<h4 class=figure><a class="TITLE" name="JSCRIPT-CH-INTRO-FIG-2">Figure 1-2: The JavaScript response to an event</A></h4>


<p>
<img align=middle src="figs/js0102.gif" alt="[Graphic: Figure 1-2]" width=309 height=239>

</DIV>

<p class=para>
      The <tt class=literal>onClick</tt> attribute shown in <a href="#JSCRIPT-CH-INTRO-EX-2">Example 1-2</A> is an HTML extension added by
      Netscape specifically for client-side JavaScript. All JavaScript
      event handlers are defined with HTML attributes like this one.
      The value of the <tt class=literal>onClick</tt> attribute is a string
      of JavaScript code to be executed when the user clicks the
      button. In this case, the <tt class=literal>onClick</tt> event
      handler calls the <tt class=literal>alert()</tt> function. As you can
      see in <a href="#JSCRIPT-CH-INTRO-FIG-2">Figure 1-2</A>, this function
      pops up a dialog box to display the specified message.
    

<p class=para>
      The examples above highlight only the simplest features of
      client-side JavaScript. The real power of JavaScript on the
      client side is that scripts have access to a hierarchy of objects
      that are based on the content of the web page. If you treat
      JavaScript as simply a new programming language, you're missing
      the whole point. What's exciting about JavaScript is the context
      that this language is embedded in. The interactions between
      JavaScript code and the web browser and the browser's contents are
      what matter most. A script can access an array of all hypertext
      links in a page, for example, and it can also read and write data
      from and to each of the elements in each of the forms in a page. In
      Netscape Navigator 3.0, JavaScript can also manipulate the images
      in a web page, and communicate with the Java applets and plug-ins
      on the page. Mastering the use of these client-side "document
      objects" is the real key to using JavaScript effectively in web
      pages.
	
    

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch00_04.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch01_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Acknowledgments</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>JavaScript Myths</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
