<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 4] Expressions and Operators</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Wed Apr 23 18:04:41 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="JavaScript">
<meta name="title" content="JavaScript: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Javascript: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch03_11.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 4</b></td>
<td width=172 align=right valign=top><a href="ch04_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<h1 class=chapter><a class="TITLE" name="JSCRIPT-CH-OPERATORS">4. Expressions and Operators</A></H1>

<div class=htmltoc>

<p>
<b>Contents:</b><br>
Expressions<br>
<a href="ch04_02.htm">Operator Overview</A><br>
<a href="ch04_03.htm">Arithmetic Operators</A><br>
<a href="ch04_04.htm">Comparison Operators</A><br>
<a href="ch04_05.htm">String Operators</A><br>
<a href="ch04_06.htm">Logical Operators</A><br>
<a href="ch04_07.htm">Bitwise Operators</A><br>
<a href="ch04_08.htm">Assignment Operators</A><br>
<a href="ch04_09.htm">Miscellaneous Operators</A><br>

</DIV>

<p class=para>
    Expressions and operators are fundamental to most programming
    languages. This chapter explains how they work in JavaScript. If
    you are familiar with C, C++, or Java, you'll notice that
    expressions and operators in JavaScript are very similar, and
    you'll be able to skim this chapter quickly. If you are not a C,
    C++, or Java programmer, this chapter will teach you what you need
    to know about expressions and operators in JavaScript.
  

<div class=sect1>
<h2 class=sect1><a class="TITLE" name="ch04-SECT1-AUTOID.1">4.1 Expressions</A></h2>

<p class=para>
      An <i class=emphasis>expression</I> is a "phrase" of JavaScript
      that a JavaScript interpreter can <i class=emphasis>evaluate</I>
      to produce a value. Simple expressions are constants (e.g.,
      string or numeric literals) or variable names, like these:
      

<div class=programlisting>
<p>
<pre>
1.7                               //<tt class=replaceable><i> a numeric literal</i></tt>
"Oh no!  We're out of coffee!"    //<tt class=replaceable><i> a string literal</i></tt>
true                              //<tt class=replaceable><i> a Boolean literal</i></tt>
null                              //<tt class=replaceable><i> the literal null value</i></tt>
i                                 //<tt class=replaceable><i> the variable i</i></tt>
sum                               //<tt class=replaceable><i> the variable sum</i></tt>
</PRE>
</DIV>


    

<p class=para>
      The value of a constant expression is simply the constant
      itself. The value of a variable expression is the value that the
      variable refers to.
    

<p class=para>
      These expressions are not particularly interesting. More complex
      (and interesting) expressions can be created by combining simple
      expressions. For example, we saw that <tt class=literal>1.7</tt> is an
      expression and <tt class=literal>i</tt> is an expression, so the
      following is also an expression:
      

<div class=programlisting>
<p>
<pre>
i + 1.7
</PRE>
</DIV>


      The value of this expression is determined by adding the values of
      the two simpler expressions. The plus sign in this example is an
      <i class=emphasis>operator</I> that is used to combine two
      expressions into a more complex expression. Another operator is
      <tt class=literal>-</tt> which is used to combine expressions by
      subtraction. For example:
      

<div class=programlisting>
<p>
<pre>
(i + 1.7) - sum
</PRE>
</DIV>


      This expression uses the <tt class=literal>-</tt> operator to subtract
      the value of the <tt class=literal>sum</tt> variable from the value of
      our previous expression <tt class=literal>i + 1.7</tt>. JavaScript
      supports a number of other operators, besides <tt class=literal>+</tt>
      and <tt class=literal>-</tt>, which we'll learn about in the next
      section.
    

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch03_11.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch04_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Data Type Wrapper Objects</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Operator Overview</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
