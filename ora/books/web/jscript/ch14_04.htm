<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 14] 14.4 The JavaObject Object</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Apr 24 13:35:36 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="JavaScript">
<meta name="title" content="JavaScript: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Javascript: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch14_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 14</b></td>
<td width=172 align=right valign=top><a href="ch15_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="ch14-SECT1-AUTOID.4">14.4 The JavaObject Object</A></h2>

<p class=para>
      The JavaObject object is a JavaScript object that serves as a
      wrapper around Java objects. It allows JavaScript programs to read
      and write the public fields of a Java object, and also to invoke
      the public methods of a Java object. <a href="ch19_01.htm">Chapter 19, <i>LiveConnect: JavaScript and Java</i></A>, covers the "LiveConnect" mechanism
      for communication between Java and JavaScript, and will explain
      JavaObjects in detail, as well as the JavaArray, JavaClass, and
      JavaPackage objects.
    

<p class=para>
      The reason that JavaObjects are being discussed here is that in
      Navigator 3.0, the <tt class=literal>applets[]</tt> and
      <tt class=literal>embeds[]</tt> properties of the Document
      object are arrays that contain JavaObjects. Elements of the
      <tt class=literal>applets[]</tt> array are created when a Java
      applet is included in the document with the
      <tt class=literal>&lt;APPLET&gt;</tt> tag. Each JavaObject in this
      array represents the Java Applet object. Similarly, elements of
      the <tt class=literal>embeds[]</tt> array are created when
      embedded data are included in the document with the
      <tt class=literal>&lt;EMBED&gt;</tt> tag. In Navigator, the
      <tt class=literal>&lt;EMBED&gt;</tt> tag specifies data to be
      displayed through a plug-in, and the JavaObject objects in the
      <tt class=literal>embeds[]</tt> array are Java objects
      provided by the plug-in that allow it to be controlled
      through a Java-based interface. If a plug-in does not support
      Java--and many plug-ins currently do not--then the entry
      in the <tt class=literal>embeds[]</tt> array will be a dummy
      object with no functionality.
    

<p class=para>

      Both the <tt class=literal>&lt;APPLET&gt;</tt> and the
      <tt class=literal>&lt;EMBED&gt;</tt> tags have optional
      <tt class=literal>NAME</tt> attributes. If you specify a name for
      either of these tags, then a property with that specified name will
      be created in the Document object. The value of this property will
      be a reference to the JavaObject for the applet or embedded
      data. Using the <tt class=literal>NAME</tt> attribute in HTML can make
      your JavaScript code more readable--you can use expressions
      like <tt class=literal>document.myapp</tt> instead of
      <tt class=literal>document.applets[0]</tt>.
    

<p class=para>
      <a href="#JSCRIPT-CH-DOCUMENTS-EX-5">Example 14-5</A> shows how you might
      embed a Java applet in a web page with the
      <tt class=literal>&lt;APPLET&gt;</tt> tag, and then invoke the
      <tt class=literal>start()</tt> and <tt class=literal>stop()</tt> methods
      of that applet from JavaScript event handlers.
    

<div class=example>
<h4 class=example><a class="TITLE" name="JSCRIPT-CH-DOCUMENTS-EX-5">Example 14-5: Invoking Methods of a Java Applet from JavaScript</A></h4>

<div class=programlisting>
<p>
<pre>
&lt;APPLET NAME="animation" CODE="Animation.class" WIDTH=500 HEIGHT=200&gt;
&lt;/APPLET&gt;
&lt;FORM&gt;
&lt;INPUT TYPE=button VALUE="Start" onclick="document.animation.start()"&gt;
&lt;INPUT TYPE=button VALUE="Stop" onclick="document.animation.stop()"&gt;
&lt;/FORM&gt;
</PRE>
</DIV>

</DIV>

<p class=para>
      The topic of interacting with Java from JavaScript is a broad one,
      and deserves a chapter on its own. We'll learn more about the
      JavaObject object and the <tt class=literal>applets[]</tt> and
      <tt class=literal>embeds[]</tt> arrays in <a href="ch19_01.htm">Chapter 19, <i>LiveConnect: JavaScript and Java</i></A>.
    

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch14_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch15_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>The Anchor Object</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Saving State with Cookies</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
