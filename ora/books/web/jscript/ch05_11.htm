<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 5] 5.11 function</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Wed Apr 23 18:06:28 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="JavaScript">
<meta name="title" content="JavaScript: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Javascript: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch05_10.htm#ch05-SECT1-AUTOID.10"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 5</b></td>
<td width=172 align=right valign=top><a href="ch05_12.htm#ch05-SECT1-AUTOID.12"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="ch05-SECT1-AUTOID.11">5.11 function</A></h2>

<p class=para>
      Earlier, we saw that the <tt class=literal>()</tt> operator is
      used to invoke a function. Before a function can be invoked,
      however, it must be defined (except for those that are predefined
      by JavaScript); the <tt class=literal>function</tt> statement is used
      to define a new function. It has the following syntax:
    

<div class=programlisting>
<p>
<pre>
function <tt class=replaceable><i>funcname</i></tt>([<tt class=replaceable><i>arg1</i></tt> [,<tt class=replaceable><i>arg2</i></tt> [..., <tt class=replaceable><i>argn</i></tt>]]]) {
    <tt class=replaceable><i>statements</i></tt>
}
</PRE>
</DIV>

<p class=para>
      <tt class=replaceable><i>funcname</i></tt> is the name of the function
      that is being defined. This must be a literal name, not a string
      or an expression. <tt class=replaceable><i>arg1</i></tt>,
      <tt class=replaceable><i>arg2</i></tt>, and so on to
      <tt class=replaceable><i>argn</i></tt> are a comma-separated list of any
      number (including zero) of argument names for the function. These
      are also literal names, not strings or expressions. These names
      can be used as variables within the body of the function; when the
      function is executed, they will be assigned the values specified
      in the function call expression.
    

<p class=para>
      The <tt class=literal>function</tt> statement differs from statements
      like the <tt class=literal>while</tt> and <tt class=literal>for</tt>
      loops. In those loops, the body of the loop is a single statement,
      which can be a single primitive statement or a block of statements
      enclosed in curly braces. For the <tt class=literal>function</tt>
      statement,

      however, curly braces are a required part of the syntax, and any
      number of JavaScript statements may be contained within. Even if
      the body of a function consists of only a single statement, the
      curly braces must still be used. Here are some example function
      definitions:
    

<div class=programlisting>
<p>
<pre>
function welcome() { alert("Welcome to my home page!"); }
function print(msg) { 
    document.write(msg, "&lt;br&gt;");
}
function hypotenuse(x, y) { 
    return Math.sqrt(x*x + y*y);     //<tt class=replaceable><i> return is documented below</i></tt>
}
function factorial(n) {              //<tt class=replaceable><i> a recursive function</i></tt>
    if (n &lt;= 1) return 1;  
    else return n * factorial(n - 1);
}
</PRE>
</DIV>

<p class=para>
      The most important way that the <tt class=literal>function</tt>
      statement differs from other statements is that the
      statements that form the body of the function are
      <i class=emphasis>not</I> executed. Instead, they are stored as the
      definition of a new function named
      <tt class=replaceable><i>funcname</i></tt>, and may be executed at any
      later time with the <tt class=literal>()</tt> function call
      operator.
    

<p class=para>
      We'll learn more about functions in <a href="ch06_01.htm">Chapter 6, <i>Functions</i></A>.
    

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch05_10.htm#ch05-SECT1-AUTOID.10"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch05_12.htm#ch05-SECT1-AUTOID.12"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>var</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>return</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
