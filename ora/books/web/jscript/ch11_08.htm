<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 11] 11.8 The JavaScript Object Hierarchy</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Wed Apr 23 18:14:52 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="JavaScript">
<meta name="title" content="JavaScript: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Javascript: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_07.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 11</b></td>
<td width=172 align=right valign=top><a href="ch12_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="ch11-SECT1-AUTOID.8">11.8 The JavaScript Object Hierarchy</A></h2>

<p class=para>
      We've seen that the Window object is the central object of
      client-side JavaScript. All other client-side objects that
      radiate out from this center. As we've seen, JavaScript
      variables are nothing more than properties of the current Window
      object, and every JavaScript expression is implicitly evaluated in
      the context of that current window object. Therefore, any other
      objects in JavaScript can only be referred to through the Window
      object. For example, every Window object contains a
      <tt class=literal>document</tt> property that refers to the Document
      object associated with the window. Window objects also contain a
      <tt class=literal>frames[]</tt> array that refers to the Window objects
      that represent the frames of the original window. So, for example,
      <tt class=literal>document</tt> represents the Document object of the
      current window, and <tt class=literal>frames[1].document</tt> refers to
      the Document object of the second child frame of the current window.
    

<p class=para>
      Objects referred to through the current window or through some other
      Window object may themselves refer to other objects. For example,
      every Document object has a <tt class=literal>forms[]</tt> array that
      contains Form objects representing any HTML forms that appear in the
      document. To refer to one of these forms, you might write:
      

<div class=programlisting>
<p>
<pre>
self.document.forms[0]
</PRE>
</DIV>


      To continue with the same example, each Form object contains a
      <tt class=literal>elements[]</tt> array that contains objects that
      represent the various HTML form elements (input fields, buttons,
      etc.) that appear within the form. In extreme cases, you can write
      code that refers from one object to another and another and end up
      with expressions as complex as this one:
      

<div class=programlisting>
<p>
<pre>
parent.frames[0].document.forms[0].elements[3].options[2].text
</PRE>
</DIV>


    

<p class=para>
      Because all client-side objects in JavaScript exist as properties
      of other objects, and because all expressions include an implicit
      reference to the current Window object, a
      hierarchy of JavaScript objects exists and that this hierarchy has
      the current window as its root. <a href="#JSCRIPT-CH-NAMESPACE-FIG-2">Figure 11-2</A> shows this hierarchy. Study
      this figure carefully; understanding the HTML object hierarchy and
      the objects it contains is crucial to successful client-side
      JavaScript programming.
    

<div class=figure>
<h4 class=figure><a class="TITLE" name="JSCRIPT-CH-NAMESPACE-FIG-2">Figure 11-2: The JavaScript object hierarchy</A></h4>


<p>
<img align=middle src="figs/js1102.gif" alt="[Graphic: Figure 11-2]" width=503 height=473>

</DIV>

<p class=para>
      Note that <a href="#JSCRIPT-CH-NAMESPACE-FIG-2">Figure 11-2</A> shows only
      object properties that refer to other objects. Most of the objects
      shown in the diagram have quite a few more properties than those
      shown. The notation "3.0" in the figure indicates properties that
      do not exist in Navigator 2.0. The chapters that follow document
      each of the objects shown in the object hierarchy diagram and
      demonstrate common JavaScript programming techniques that make use
      those objects. You may want to refer back to
      <a href="#JSCRIPT-CH-NAMESPACE-FIG-2">Figure 11-2</A>
      while reading these chapters.
    

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_07.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch12_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Garbage Collection</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Programming with Windows</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
