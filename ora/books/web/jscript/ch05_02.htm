<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 5] 5.2 Compound Statements</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Wed Apr 23 18:06:17 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="JavaScript">
<meta name="title" content="JavaScript: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Javascript: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch05_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 5</b></td>
<td width=172 align=right valign=top><a href="ch05_03.htm#ch05-SECT1-AUTOID.3"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="ch05-SECT1-AUTOID.2">5.2 Compound Statements</A></h2>

<p class=para>
      Earlier, we saw that the comma operator can be used to combine a
      number of expressions into a single expression. JavaScript also
      has a way to combine a number of statements into a single
      statement, or <i class=emphasis>statement block</I>. This is done
      simply by enclosing any number of statements within curly
      braces. Thus, the following lines act as a single statement and
      can be used anywhere that JavaScript expects a single statement.
    

<div class=programlisting>
<p>
<pre>
{
    x = Math.PI;
    cx = Math.cos(x);
    alert("cos(" + x + ") = " + cx);
}
</PRE>
</DIV>

<p class=para>
      Note that although this statement block acts as a single
      statement, it does <i class=emphasis>not</I> end with a semicolon. The
      primitive statements within the block end in semicolons, but
      the block itself does not.
    

<p class=para>
      Combining expressions with the comma operator is an infrequently
      used technique in JavaScript. On the other hand, combining
      statements into larger statement blocks is extremely common. As
      we'll see in the following sections, a number of JavaScript
      statements themselves contain statements (just as expressions
      can contain other expressions); these statements are
      <i class=emphasis>compound statements</I>. Formal JavaScript
      syntax specifies that these compound statements contain a single
      substatement. Using statement blocks, you can place any number
      of statements within this single allowed substatement.
    

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch05_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch05_03.htm#ch05-SECT1-AUTOID.3"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Expression Statements</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>if</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
