<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 4] 4.4 Comparison Operators</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Wed Apr 23 18:04:51 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="JavaScript">
<meta name="title" content="JavaScript: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Javascript: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch04_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 4</b></td>
<td width=172 align=right valign=top><a href="ch04_05.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="ch04-SECT1-AUTOID.4">4.4 Comparison Operators</A></h2>

<p class=para>
<a name="CH04.COMP1"></A><a name="CH04.COMP2"></A>      This section describes the JavaScript comparison operators. These
      are operators that compare values of various types and return a
      Boolean value (<tt class=literal>true</tt> or
      <tt class=literal>false</tt>) depending on the result of the
      comparison. As we'll see in <a href="ch05_01.htm">Chapter 5, <i>Statements</i></A>, they
      are most commonly used in things like <tt class=literal>if</tt>
      statements and <tt class=literal>while</tt> loops to control the flow
      of program execution.
    

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="ch04-SECT2-AUTOID.13">Equality (==)</A></h3>

<p class=para>
	The <tt class=literal>==</tt> operator returns
	<tt class=literal>true</tt> if its two operands are equal, and
	returns <tt class=literal>false</tt> if they are not equal. The
	operands may be of any type, and the definition of "equal"
	depends on the type.
      

<p class=para>
	
	In JavaScript, numbers, strings, and Boolean values are compared
	<i class=emphasis>by value</I>. This means that two variables are
	equal only if they contain the same value. For example, two
	strings are equal only if they each contain exactly the same
	characters. In this case, there are two separate values
	involved, and the <tt class=literal>==</tt> operator checks
	that these two values are identical.
      

<p class=para>
	On the other hand, objects and arrays are compared <i class=emphasis>by
	reference</I>. This means that two variables are equal
	only if they refer to the same object. Two separate arrays will
	never be equal, by the definition of the
	<tt class=literal>==</tt> operator, even if they contain
	identical elements. For two variables that contain references to
	objects, arrays, or functions, they are equal only if they refer
	to the same object, array, or function. If you want to test that
	two separate objects contain the same properties or that two
	separate arrays contain the same elements, you'll have to check
	the properties and elements yourself. (And, if any of the properties or
	elements are themselves objects or arrays, you'll have to decide
	which kind of equality you want to test for.)
      

<p class=para>
	In Navigator 3.0, functions are compared by reference, just as
	objects and arrays are. Prior to 3.0, functions may not be used
	with the <tt class=literal>==</tt> operator.
      

<p class=para>
	Usually, if two values have different types, then they are not
	equal. Because JavaScript automatically converts data types when
	needed, though, this is not always the case. For example, the
	expression <tt class=literal>"1" == 1</tt>
	evaluates to <tt class=literal>true</tt> in JavaScript. Similarly,
	and not surprisingly to C or C++ programmers, <tt class=literal>true
	== 1</tt> and <tt class=literal>false == 0</tt>
	are also both <tt class=literal>true</tt> expressions. In Navigator
	2.0, <tt class=literal>null</tt> is equal to <tt class=literal>0</tt>,
	but this was a bug was fixed in 3.0. Be careful when comparing
	values of different types: if you compare a string to a number,
	and the string cannot be converted to a number, then Navigator
	2.0 and 3.0 will produce an error message. Internet Explorer
	takes the simpler, and probably correct, course and returns
	<tt class=literal>false</tt> in this case.
      

<p class=para>
	Note that the equality operator <tt class=literal>==</tt> is
	very different from the assignment operator
	<tt class=literal>=</tt>, although in English, we often read both as
	"equals". It is important to keep the two operators distinct and
	to use the correct one in the correct situation. To keep them
	straight, it may help to read the assignment operator
	<tt class=literal>=</tt> as "is assigned" or as "gets".

      

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="ch04-SECT2-AUTOID.14">Inequality (!=)</A></h3>

<p class=para>
	The <tt class=literal>!=</tt> operator tests for the exact opposite
	of the <tt class=literal>==</tt> operator. If two variables
	are equal to each other, then comparing them with the
	<tt class=literal>!=</tt> operator will return
	<tt class=literal>false</tt>. On the other hand, comparing two
	objects that are not equal to each other with
	<tt class=literal>!=</tt> will return <tt class=literal>true</tt>. As
	we'll see, the <tt class=literal>!</tt> operator computes the
	Boolean NOT operation. This makes it easy to remember that
	<tt class=literal>!=</tt> stands for "not equal to."[1]
	See the
	discussion of the <tt class=literal>==</tt> operator for
	details on how equality is defined for different data types.
      

<blockquote class=footnote>
<p class=para>[1] 
	    There is one case in which the <tt class=literal>!=</tt>
	    operator is not the exact opposite of <tt class=literal>==</tt>,
	    when <tt class=literal>a != b</tt> is not identical to
	    <tt class=literal>!(a == b)</tt>. This occurs with the
	    <tt class=literal>NaN</tt> value (Not-a-Number), which is never
	    equal or inequal to itself. That is, if either operand is
	    <tt class=literal>NaN</tt>, both <tt class=literal>==</tt> and
	    <tt class=literal>!=</tt> return <tt class=literal>false</tt>.
	  
</blockquote>
</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="ch04-SECT2-AUTOID.15">Less Than (&lt;)</A></h3>

<p class=para>
	The <tt class=literal>&lt;</tt> operator evaluates to
	<tt class=literal>true</tt> if its first operand is less than its
	second operand; otherwise it evaluates to
	<tt class=literal>false</tt>. The operands must be numbers or
	strings. Strings are ordered alphabetically, by character
	encoding.
      

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="ch04-SECT2-AUTOID.16">Greater Than (&gt;)</A></h3>

<p class=para>
	The <tt class=literal>&gt;</tt> operator evaluates to
	<tt class=literal>true</tt> if its first operand is greater than its
	second operand; otherwise it evaluates to
	<tt class=literal>false</tt>. The operands must be numbers or
	strings. Strings are ordered alphabetically, by character
	encoding.
      

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="ch04-SECT2-AUTOID.17">Less Than or Equal (&lt;=)</A></h3>

<p class=para>
	The <tt class=literal>&lt;=</tt> operator evaluates to
	<tt class=literal>true</tt> if its first operand is less than or
	equal to its second operand; otherwise it evaluates to
	<tt class=literal>false</tt>. The operands must be numbers or
	strings. Strings are ordered alphabetically, by character
	encoding.
      

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="ch04-SECT2-AUTOID.18">Greater Than or Equal (&gt;=)</A></h3>

<p class=para>
	The <tt class=literal>&gt;=</tt> operator evaluates to
	<tt class=literal>true</tt> if its first operand is greater than or
	equal to its second operand; otherwise it evaluates to
	<tt class=literal>false</tt>. The operands must be numbers or
	strings. Strings are ordered alphabetically, by character
	encoding.
      

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch04_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch04_05.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Arithmetic Operators</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>String Operators</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
