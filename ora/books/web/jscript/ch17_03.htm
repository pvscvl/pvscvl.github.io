<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 17] 17.3 Form Elements</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Wed Apr 23 18:22:05 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="JavaScript">
<meta name="title" content="JavaScript: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Javascript: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch17_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 17</b></td>
<td width=172 align=right valign=top><a href="ch17_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="ch17-SECT1-AUTOID.3">17.3 Form Elements</A></h2>

<p class=para>
<a name="CH17.ELEM1"></A>      As noted above, every Form object has an
      <tt class=literal>elements[]</tt> property, which is an array of the
      JavaScript objects that represent the input elements contained
      in the form. There are quite a few possible HTML form elements
      and corresponding JavaScript objects. They are listed in <a href="#JSCRIPT-CH-FORMS-TAB-1">Table 17.1</A> and pictured in <a href="#JSCRIPT-CH-FORMS-FIG-1">Figure 17-1</A>. The HTML (and
      JavaScript) code that generated that figure is listed in <a href="#JSCRIPT-CH-FORMS-EX-1">Example 17-1</A>. For comparison, <a href="#JSCRIPT-CH-FORMS-FIG-2">Figure 17-2</A> shows the same form
      elements, as they appear in a different operating system. You
      can find out more about these JavaScript objects in the
      reference section of this book, but you may want to refer to an
      HTML book for complete details on the HTML tags and attributes
      used to create these form elements.
    

<p>
<div class=table>
<table>
<caption><a class="TITLE" name="JSCRIPT-CH-FORMS-TAB-1">Table 17-1: HTML Form Elements</A></CAPTION>
<tr class=row>
<th align="left">Object</TH>
<th align="left">HTML Tag</TH>
<th align="left">type Property</TH>
<th align="LEFT">Description and Events</TH>
</TR>
<tr class=row>
<td align="left">Button</TD>
<td align="left"><tt class=literal>&lt;INPUT TYPE=button&gt;</tt></TD>
<td align="left">"button"</TD>
<td align="LEFT">

<p class=para>
            A push-button; <tt class=literal>onClick()</tt>.
            </TD>
</TR>
<tr class=row>
<td align="left">Checkbox</TD>
<td align="left"><tt class=literal>&lt;INPUT TYPE=checkbox&gt;</tt></TD>
<td align="left">"checkbox"</TD>
<td align="LEFT">

<p class=para>
      A toggle-button without radio-button behavior;
      <tt class=literal>onClick()</tt>.
      </TD>
</TR>
<tr class=row>
<td align="left">FileUpload</TD>
<td align="left"><tt class=literal>&lt;INPUT TYPE=file&gt;</tt></TD>
<td align="left">"file"</TD>
<td align="LEFT">

<p class=para>
      An input field for entering the name of a file to
      upload to the web server; <tt class=literal>onChange()</tt>.
      </TD>
</TR>
<tr class=row>
<td align="left">Hidden</TD>
<td align="left"><tt class=literal>&lt;INPUT TYPE=hidden&gt;</tt></TD>
<td align="left">"hidden"</TD>
<td align="LEFT">

<p class=para>
      Data submitted with the form but not visible to the user; no
      event handlers.
      </TD>
</TR>
<tr class=row>
<td align="left">Option</TD>
<td align="left"><tt class=literal>&lt;OPTION&gt;</tt></TD>
<td align="left"><i class=emphasis>none</I></TD>
<td align="LEFT">

<p class=para>
      A single item within a Select object; event handlers are on
      Select object, not individual Option objects.
      </TD>
</TR>
<tr class=row>
<td align="left">Password</TD>
<td align="left"><tt class=literal>&lt;INPUT TYPE=password&gt;</tt></TD>
<td align="left">"password"</TD>
<td align="LEFT">

<p class=para>
      An input field for password entry--typed characters are not
      visible; <tt class=literal>onChange()</tt>.
      </TD>
</TR>
<tr class=row>
<td align="left">Radio</TD>
<td align="left"><tt class=literal>&lt;INPUT TYPE=radio&gt;</tt></TD>
<td align="left">"radio"</TD>
<td align="LEFT">

<p class=para>
      A toggle-button with radio behavior--only one selected at a
      time; <tt class=literal>onClick()</tt>.
      </TD>
</TR>
<tr class=row>
<td align="left">Reset</TD>
<td align="left"><tt class=literal>&lt;INPUT TYPE=reset&gt;</tt></TD>
<td align="left">"reset"</TD>
<td align="LEFT">

<p class=para>
      A push-button that resets a form; <tt class=literal>onClick()</tt>. 
      </TD>
</TR>
<tr class=row>
<td align="left">Select</TD>
<td align="left"><tt class=literal>&lt;SELECT&gt;</tt></TD>
<td align="left">"select-one"</TD>
<td align="LEFT">

<p class=para>
      A list or drop-down menu from which one item may be selected;
      <tt class=literal>onChange()</tt>. See also Option object.
      </TD>
</TR>
<tr class=row>
<td align="left">Select</TD>
<td align="left"><tt class=literal>&lt;SELECT MULTIPLE&gt;</tt></TD>
<td align="left">"select-multiple"</TD>
<td align="LEFT">

<p class=para>
      A list from which multiple items may be selected;
      <tt class=literal>onChange()</tt>. See also Option object.
      </TD>
</TR>
<tr class=row>
<td align="left">Submit</TD>
<td align="left"><tt class=literal>&lt;INPUT TYPE=submit&gt;</tt></TD>
<td align="left">"submit"</TD>
<td align="LEFT">

<p class=para>
      A push-button that submits a form; <tt class=literal>onClick()</tt>. 
      </TD>
</TR>
<tr class=row>
<td align="left">Text</TD>
<td align="left"><tt class=literal>&lt;INPUT TYPE=text&gt;</tt></TD>
<td align="left">"text"</TD>
<td align="LEFT">

<p class=para>
      A single-line text entry field;
      <tt class=literal>onChange()</tt>.
      </TD>
</TR>
<tr class=row>
<td align="left">Textarea</TD>
<td align="left"><tt class=literal>&lt;TEXTAREA&gt;</tt></TD>
<td align="left">"textarea"</TD>
<td align="LEFT">

<p class=para>
      A multiline text entry field;
      <tt class=literal>onChange()</tt>.
      </TD>
</TR>
</TABLE>
<p>
</DIV>
<div class=figure>
<h4 class=figure><a class="TITLE" name="JSCRIPT-CH-FORMS-FIG-1">Figure 17-1: All the form elements, Windows 95</A></h4>


<p>
<img align=middle src="figs/js1701.gif" alt="[Graphic: Figure 17-1]" width=500 height=360>

</DIV>

<div class=figure>
<h4 class=figure><a class="TITLE" name="JSCRIPT-CH-FORMS-FIG-2">Figure 17-2: All the form elements, Unix (X/Motif)</A></h4>


<p>
<img align=middle src="figs/js1702.gif" alt="[Graphic: Figure 17-2]" width=500 height=406>

</DIV>

<p class=para>
       
    

<p class=para>
       
    

<p class=para>
       
    

<div class=example>
<h4 class=example><a class="TITLE" name="JSCRIPT-CH-FORMS-EX-1">Example 17-1: An HTML Form Containing All Form Elements</A></h4>

<div class=programlisting>
<p>
<pre>
&lt;FORM NAME="everything"&gt;  &lt;!--<tt class=replaceable><i> A one-of-everything HTML form... </i></tt>--&gt;
 &lt;TABLE BORDER CELLPADDING=5&gt;   &lt;!--<tt class=replaceable><i> ...in a big HTML table. </i></tt>--&gt;
   &lt;TR&gt;
     &lt;TD&gt;Username:&lt;BR&gt;[1]&lt;INPUT TYPE=text NAME="username" SIZE=15&gt;&lt;/TD&gt;
     &lt;TD&gt;Password:&lt;BR&gt;[2]&lt;INPUT TYPE=password NAME="password" SIZE=15&gt;&lt;/TD&gt;
     &lt;TD ROWSPAN=4&gt;Input Events[3]&lt;BR&gt;
       &lt;TEXTAREA NAME="textarea" ROWS=20 COLS=28&gt;&lt;/TEXTAREA&gt;&lt;/TD&gt;
     &lt;TD ROWSPAN=4 ALIGN=center VALIGN=center&gt;
       [9]&lt;INPUT TYPE=button VALUE="Clear" NAME="clearbutton"&gt;&lt;BR&gt;
       [10]&lt;INPUT TYPE=submit NAME="submitbutton" VALUE="Submit"&gt;&lt;BR&gt;
       [11]&lt;INPUT TYPE=reset NAME="resetbutton" VALUE="Reset"&gt;&lt;/TD&gt;&lt;/TR&gt;
   &lt;TR&gt;
     &lt;TD COLSPAN=2&gt;Filename: [4]&lt;INPUT TYPE=file NAME="file" SIZE=15&gt;&lt;/TD&gt;&lt;/TR&gt;
   &lt;TR&gt;
     &lt;TD&gt;My Computer Peripherals:&lt;BR&gt;
       [5]&lt;INPUT TYPE=checkbox NAME="peripherals" VALUE="modem"&gt;28.8K Modem&lt;BR&gt;
       [5]&lt;INPUT TYPE=checkbox NAME="peripherals" VALUE="printer"&gt;Printer&lt;BR&gt;
       [5]&lt;INPUT TYPE=checkbox NAME="peripherals" VALUE="tape"&gt;Tape Backup&lt;/TD&gt;
     &lt;TD&gt;My Web Browser:&lt;BR&gt;
       [6]&lt;INPUT TYPE=radio NAME="browser" VALUE="nn"&gt;Netscape Navigator&lt;BR&gt;
       [6]&lt;INPUT TYPE=radio NAME="browser" VALUE="ie"&gt;Internet Explorer&lt;BR&gt;
       [6]&lt;INPUT TYPE=radio NAME="browser" VALUE="other"&gt;Other&lt;/TD&gt;&lt;/TR&gt;
   &lt;TR&gt;
     &lt;TD&gt;My Hobbies:[7]&lt;BR&gt;
       &lt;SELECT multiple NAME="hobbies" SIZE=4&gt;
         &lt;OPTION VALUE="programming"&gt;Hacking JavaScript
         &lt;OPTION VALUE="surfing"&gt;Surfing the Web
         &lt;OPTION VALUE="caffeine"&gt;Drinking Coffee
         &lt;OPTION VALUE="annoying"&gt;Annoying my Friends
       &lt;/SELECT&gt;&lt;/TD&gt;
     &lt;TD align=center valign=center&gt;My Favorite Color:&lt;BR&gt;[8]
       &lt;SELECT NAME="color"&gt;
         &lt;OPTION VALUE="red"&gt;Red        &lt;OPTION VALUE="green"&gt;Green
         &lt;OPTION VALUE="blue"&gt;Blue      &lt;OPTION VALUE="white"&gt;White
         &lt;OPTION VALUE="violet"&gt;Violet  &lt;OPTION VALUE="peach"&gt;Peach
       &lt;/SELECT&gt;&lt;/TD&gt;&lt;/TR&gt;
 &lt;/TABLE&gt;
&lt;/FORM&gt;
&lt;DIV ALIGN=center&gt;        &lt;!--<tt class=replaceable><i> Another table--the key to the one above. </i></tt>--&gt;
  &lt;TABLE BORDER=4 BGCOLOR=pink CELLSPACING=1 CELLPADDING=4&gt;
    &lt;TR&gt;
      &lt;TD ALIGN=center&gt;&lt;B&gt;Form Elements&lt;/B&gt;&lt;/TD&gt;
      &lt;TD&gt;[1] Text&lt;/TD&gt;  &lt;TD&gt;[2] Password&lt;/TD&gt;  &lt;TD&gt;[3] Textarea&lt;/TD&gt;
      &lt;TD&gt;[4] FileUpload&lt;/TD&gt; &lt;TD&gt;[5] Checkbox&lt;/TD&gt;&lt;/TR&gt;
    &lt;TR&gt;
      &lt;TD&gt;[6] Radio&lt;/TD&gt;  &lt;TD&gt;[7] Select (list)&lt;/TD&gt;
      &lt;TD&gt;[8] Select (menu)&lt;/TD&gt;  &lt;TD&gt;[9] Button&lt;/TD&gt;
      &lt;TD&gt;[10] Submit&lt;/TD&gt;  &lt;TD&gt;[11] Reset&lt;/TD&gt;&lt;/TR&gt;
  &lt;/TABLE&gt;
&lt;/DIV&gt;
&lt;SCRIPT LANGUAGE="JavaScript1.1"&gt;
//<tt class=replaceable><i> This generic function appends details of an event to the big Textarea</i></tt>
//<tt class=replaceable><i> element in the form above. It will be called from various event handlers.</i></tt>
function report(element, event) 
{
    var t = element.form.textarea;
    var name = element.name;
    if ((element.type == "select-one") || (element.type == "select-multiple")){
        value = " ";
        for(var i = 0; i &lt; element.options.length; i++)
            if (element.options[i].selected) 
                value += element.options[i].value + " ";
    }
    else if (element.type == "textarea") value = "...";
    else value = element.value;
    var msg = event + ": " + name + ' (' + value + ')\n';
    t.value = t.value + msg;
}
//<tt class=replaceable><i> This function adds a bunch of event handlers to every element in a form.</i></tt>
//<tt class=replaceable><i> It doesn't bother checking to see if the element supports the event handler,</i></tt>
//<tt class=replaceable><i> it just adds them all. Note that the event handlers call report() above.</i></tt>
function addhandlers(f)
{
    for(var i = 0; i &lt; f.elements.length; i++) {
        var e = f.elements[i];
        e.onclick = new Function("report(this, 'Click')");
        e.onchange = new Function("report(this, 'Change')");
        e.onfocus = new Function("report(this, 'Focus')");
        e.onblur = new Function("report(this, 'Blur')");
        e.onselect = new Function("report(this, 'Select')");
    }
    //<tt class=replaceable><i> Special case handlers for the buttons:</i></tt>
    f.clearbutton.onclick = 
        new Function("this.form.textarea.value=''; report(this, 'Click');");
    f.submitbutton.onclick = 
        new Function("report(this, 'Click'); return false");
    f.resetbutton.onclick = 
        new Function("this.form.reset(); report(this, 'Click'); return false");
}
//<tt class=replaceable><i> Activate our form by adding all possible event handlers!</i></tt>
addhandlers(document.everything);
&lt;/SCRIPT&gt;
</PRE>
</DIV>

</DIV>

<p class=para>
      While specific details about the JavaScript form element objects
      can be found on their respective reference pages, there are some
      features that all form element objects share. One obvious
      similarity is that (almost) all form element objects define event
      handlers that are invoked when the user interacts with them. The
      important ones are usually called <tt class=literal>onClick()</tt> or
      <tt class=literal>onChange()</tt>, depending on the type of object.
      The event handlers supported by each form element are listed in
      the fourth column of <a href="#JSCRIPT-CH-FORMS-TAB-1">Table 17.1</A>.
    

<p class=para>
      In addition to the event handlers shown in the table, all form
      elements (except the Hidden element) in Navigator 3.0 also support
      the <tt class=literal>onBlur()</tt> and <tt class=literal>onFocus()</tt>
      event handlers, which are invoked when the elements lose or gain
      the keyboard input focus, respectively. Unfortunately, on Unix
      platforms, these event handlers only work correctly for those form
      elements that involve text entry: Text, Textarea, Password and
      FileUpload. In addition to the <tt class=literal>onBlur()</tt> and
      <tt class=literal>onFocus()</tt> event handlers, all form elements in
      Navigator 3.0 also have corresponding <tt class=literal>blur()</tt>
      and <tt class=literal>focus()</tt> methods that remove input focus
      from an element and restore it. Again, on Unix platforms, these
      methods have no effect except on the text-input form elements.
    

<p class=para>
      Another similarity between form element objects is that, in
      Navigator 3.0, all of them have a <tt class=literal>type</tt>
      property that identifies what type of element they are. The
      third column of <a href="#JSCRIPT-CH-FORMS-TAB-1">Table 17.1</A>
      specifies the value of this property for each object. Because
      the <tt class=literal>elements[]</tt> array of the Form object
      contains various types of form element objects, the
      <tt class=literal>type</tt> property allows you to loop through the
      <tt class=literal>elements[]</tt> array and operate on the form
      objects it contains in ways that depending on their type. We'll
      see this done in <a href="ch17_06.htm">Example 17-2</A>, later
      in the chapter. Note that Internet Explorer 3.0 does not support
      the <tt class=literal>type</tt> property.
    

<p class=para>
      All form element objects also have (in both Navigator 3.0 and
      Navigator 2.0) a <tt class=literal>form</tt> property. This is
      simply a reference to the Form object that contains the
      element. This property provides a useful way for form objects
      to refer to other form objects from their event handlers.
      Within a form element event handler, the <tt class=literal>this</tt>
      keyword refers to the element object itself. This means that
      <tt class=literal>this.form</tt> always refers to the containing
      form. And therefore, any event handler in a form can refer to
      sibling objects in the same form with expressions like this:
      

<div class=programlisting>
<p>
<pre>
this.form.elements[4]
</PRE>
</DIV>


    

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch17_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch17_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>The Form Object</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Form Element Names and Values</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
