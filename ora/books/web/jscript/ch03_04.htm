<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 3] 3.4 Boolean Values</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Thu Apr 24 13:13:52 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="JavaScript">
<meta name="title" content="JavaScript: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Javascript: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch03_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 3</b></td>
<td width=172 align=right valign=top><a href="ch03_05.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="ch03-SECT1-AUTOID.4">3.4 Boolean Values</A></h2>

<p class=para>
      The number and string data types have an infinite number of
      possible values. The Boolean data type, on the other hand, has
      only two. As we saw in <a href="ch02_01.htm">Chapter 2, <i>Lexical Structure</i></A>, the two
      legal Boolean values are the keywords <tt class=literal>true</tt>
      and <tt class=literal>false</tt>. A Boolean value represents a
      "truth value"--it says whether something is true or not.
    

<p class=para>
      Boolean values are generally the result of comparisons we make
      in our JavaScript programs. For example, when we write:
      

<div class=programlisting>
<p>
<pre>
a == 4
</PRE>
</DIV>


      we are testing to see if the value of the variable
      <tt class=literal>a</tt> is equal to the number
      <tt class=literal>4</tt>. If it is, then the result of this
      comparison is the Boolean value <tt class=literal>true</tt>. If
      <tt class=literal>a</tt> is not equal to <tt class=literal>4</tt>, then
      the result of the comparison is <tt class=literal>false</tt>. If
      Boolean values are usually generated by comparisons, they are
      generally used in JavaScript control structures. For example,
      the <tt class=literal>if/else</tt> statement in JavaScript will perform
      one action if a Boolean value is <tt class=literal>true</tt> and
      another action if the value is <tt class=literal>false</tt>.
      Generally, we will combine a comparison that creates a Boolean
      value directly with a statement that uses it. The result looks
      like this:
      

<div class=programlisting>
<p>
<pre>
if (a == 4) 
  b = b + 1;
else
  a = a + 1;
</PRE>
</DIV>


      This code checks if <tt class=literal>a</tt> equals
      <tt class=literal>4</tt>. If so, it adds <tt class=literal>1</tt> to
      <tt class=literal>b</tt>; otherwise, it adds <tt class=literal>1</tt>
      to <tt class=literal>a</tt>.
    

<p class=para>
      Instead of thinking of the two possible Boolean values as
      <tt class=literal>true</tt> and <tt class=literal>false</tt>, it is
      sometimes convenient to think of them as "on"
      (<tt class=literal>true</tt>) and "off" (<tt class=literal>false</tt>)
      or "yes" (<tt class=literal>true</tt>) and "no"
      (<tt class=literal>false</tt>).  Sometimes it is even useful to
      consider them equivalent to 1 (<tt class=literal>true</tt>) and 0
      (<tt class=literal>false</tt>). (In fact, JavaScript does just this
      and converts <tt class=literal>true</tt> and
      <tt class=literal>false</tt> to <tt class=literal>1</tt> and
      <tt class=literal>0</tt> when necessary.)
    

<p class=para>
      C and C++ programmers should note that JavaScript has a distinct
      Boolean data type, unlike C and C++ which simply use integer
      values to simulate Boolean values. Java programmers should note
      that although JavaScript has a Boolean type, it is not nearly as
      "pure" as the Java Boolean data type--JavaScript Boolean values
      are easily converted to and from other data types, and so in
      practice, the use of Boolean values is much more like their use
      in C and C++ than in Java.
    

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch03_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch03_05.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Strings</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Functions</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
