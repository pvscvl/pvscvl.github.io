<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 1] 1.7 JavaScript Security</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Wed Apr 23 18:00:31 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="JavaScript">
<meta name="title" content="JavaScript: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Javascript: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch01_06.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 1</b></td>
<td width=172 align=right valign=top><a href="ch01_08.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="ch01-SECT1-AUTOID.7">1.7 JavaScript Security</A></h2>

<p class=para>
      Early versions of client-side JavaScript were plagued with
      security problems. In Navigator 2.0, for example, it was
      possible to write JavaScript code that would automatically steal
      the email address of any visitor to the page containing the
      code. More worrisome was the related capability to send email in
      the visitor's name, without the visitor's knowledge or
      approval. This was done by defining an HTML form, with a
      <tt class=literal>mailto:</tt> URL as its <tt class=literal>ACTION</tt>
      attribute and using <tt class=literal>POST</tt> as the submission
      method. With this form defined, JavaScript code could then call
      the form object's <tt class=literal>submit()</tt> method
      when the page containing the form was first loaded. This would
      automatically generate mail in the visitor's name to any desired
      address. The mail would contain the visitor's email address,
      which could be stolen for use in Internet marketing, for
      example. Furthermore, by setting appropriate values within the
      form, this malicious JavaScript code could send a message in the
      user's name to any email address.
    

<p class=para>
      Fortunately, practically all known security issues in JavaScript
      have been resolved in Navigator 3.0. Furthermore, Navigator 4.0
      will implement a completely new security model that promises to
      make client-side JavaScript even more secure. <a href="ch20_01.htm">Chapter 20, <i>JavaScript Security</i></A> contains a complete discussion of
      security in client-side JavaScript.
    

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch01_06.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch01_08.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Flavors and Versions of JavaScript</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Using the Rest of This Book</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
