<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 16] 16.2 Off-Screen Images and Caching</TITLE>
<meta name="author" content="David Flanagan">
<meta name="date" content="Wed Apr 23 18:20:46 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="JavaScript">
<meta name="title" content="JavaScript: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Javascript: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch16_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 16</b></td>
<td width=172 align=right valign=top><a href="ch16_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="ch16-SECT1-AUTOID.2">16.2 Off-Screen Images and Caching</A></h2>

<p class=para>
      To force an image to be cached, we create an off-screen image and
      load the desired image into it. Then, when the image is required
      on-screen, we know it will be quickly loaded from the cache
      rather than slowly loaded over the network.
      <a href="#JSCRIPT-CH-IMAGES-EX-1">Example 16-1</A> shows code that
      performs a simple animation using this technique.
    

<div class=example>
<h4 class=example><a class="TITLE" name="JSCRIPT-CH-IMAGES-EX-1">Example 16-1: An Animation Using Image Replacement</A></h4>

<div class=programlisting>
<p>
<pre>
&lt;!--<tt class=replaceable><i> The image that will be animated. Give it a name for convenience </i></tt>--&gt;
&lt;IMG SRC="images/0.gif" NAME=animation&gt;
&lt;SCRIPT&gt;
//<tt class=replaceable><i> Create a bunch of off-screen images, and get them started </i></tt>
//<tt class=replaceable><i> loading the images we're going to animate.</i></tt>
images = new Array(10);
for(var i = 0; i &lt; 10; i++) {
    images[i] = new Image();                 //<tt class=replaceable><i> Create an Image object</i></tt>
    images[i].src = "images/" + i + ".gif";  //<tt class=replaceable><i> tell it what URL to load</i></tt>
}
//<tt class=replaceable><i> Later, when we want to perform our animation, we can use these URLs,</i></tt>
//<tt class=replaceable><i> knowing that they've been loaded into the cache. Note that we perform</i></tt>
//<tt class=replaceable><i> the animation by assigning the URL, not the Image object itself.</i></tt>
//<tt class=replaceable><i> Also note that we call the image by name, rather than as document.images[0].</i></tt>
function animate()
{
    document.animation.src = images[frame].src;
    frame = (frame + 1)%10;
    timeout_id = setTimeout("animate()", 250);  //<tt class=replaceable><i> display next frame later</i></tt>
}
var frame = 0;         //<tt class=replaceable><i> Keep track of what frame of the animation we're on.</i></tt>
var timeout_id = null; //<tt class=replaceable><i> This allows us to stop the animation.</i></tt>
&lt;/SCRIPT&gt;
&lt;FORM&gt;                   &lt;!--<tt class=replaceable><i> Buttons to control the animation </i></tt>--&gt;
  &lt;INPUT TYPE=button VALUE="Start" 
         onClick="if (timeout_id == null) animate()"&gt;
  &lt;INPUT TYPE=button VALUE="Stop" 
         onClick="if (timeout_id) clearTimeout(timeout_id); timeout_id=null;"&gt;
&lt;/FORM&gt;
</PRE>
</DIV>

</DIV>

<p class=para>
      <a href="#JSCRIPT-CH-IMAGES-EX-1">Example 16-1</A> demonstrates the important
      steps involved in creating an off-screen image for image caching.
      The first step is to create an Image object with the
      <tt class=literal>Image()</tt> constructor. The second step is to
      assign the URL of the desired image to the <tt class=literal>src</tt>
      property of the newly created Image object. Doing so will cause
      the browser to start loading the contents of the specified URL,
      which, unless caching is turned off, will cause the image to be
      loaded into the cache, even though it is not displayed anywhere.
    

<p class=para>
      A confusing detail about the use of off-screen Image objects is
      that they are not themselves directly used for anything. To
      perform image replacement with an off-screen Image object, you do
      <i class=emphasis>not</I> assign the Image object directly into the
      <tt class=literal>images[]</tt> array of the Document object.
      Instead, you simply set the <tt class=literal>src</tt> property of the
      desired on-screen image to the URL of the desired image. If this
      URL has previously been loaded by an off-screen image, then the
      the desired image should be in the cache and the on-screen image
      replacement will happen quickly. The off-screen image object is
      used to force the image to be loaded, but there isn't anything
      else that you can do with it.
    

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch16_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch16_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Image Replacement with the Image.src Property</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Image Event Handlers</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
