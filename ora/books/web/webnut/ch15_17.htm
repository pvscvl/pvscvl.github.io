<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 15] 15.17 Input/Output</TITLE>
<meta name="author" content="Stephen Spainhour and Valerie Quercia">
<meta name="date" content="Mon Mar 17 14:32:20 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Webmaster in a Nutshell">
<meta name="title" content="Webmaster in a Nutshell">
<!-- JavaScript: pathcont.js -->

</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Webmaster in a Nutshell"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch15_16.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 15</b></td>
<td width=172 align=right valign=top><a href="ch15_18.htm#WEB-CH-15-SECT-18"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="WEB-CH-15-SECT-17">15.17 Input/Output</A></h2>

<p class=para>
 
In input/output operations, <i class=emphasis>filehandle</I> may be a filehandle as opened
by the <tt class=literal>open</tt> operator, a predefined filehandle (e.g.,
STDOUT), or a scalar variable that evaluates to the name of a
filehandle to be used.

<p>
<dl class=variablelist>
<dt class=varlistentry>&lt;<i class=emphasis>filehandle</I>&gt;<dd>

<p class=para>
In scalar context, reads a single line from the file opened on <i class=emphasis>filehandle</I>.
In array context, reads the whole file.

<p>
<dt class=varlistentry>&lt;&nbsp;&gt;<dd>

<p class=para>
Reads from the input stream formed by the files specified in
@ARGV, or standard input if no arguments were supplied.

<p>
<dt class=varlistentry><tt class=literal>binmode</tt> <i class=emphasis>filehandle</I><dd>

<p class=para>
Arranges for the file opened on <i class=emphasis>filehandle</I> to be read or written
in binary mode as opposed to text mode (null-operation on UNIX).

<p>
<dt class=varlistentry><tt class=literal>close</tt> <i class=emphasis>filehandle</I><dd>

<p class=para>
Closes the file or pipe associated with the filehandle.

<p>
<dt class=varlistentry><tt class=literal>dbmclose</tt> %<i class=emphasis>hash</I><dd>

<p class=para>
Deprecated, use <tt class=literal>untie</tt> instead.

<p>
<dt class=varlistentry><tt class=literal>dbmopen</tt> %<i class=emphasis>hash</I>, <i class=emphasis>dbmname</I>, <i class=emphasis>mode</I><dd>

<p class=para>
Deprecated, use <tt class=literal>tie</tt> instead.

<p>
<dt class=varlistentry><tt class=literal>eof</tt> <i class=emphasis>filehandle</I><dd>

<p class=para>
Returns <tt class=literal>true</tt> if the next read will return end of file, or if the file is
not open.

<p>
<dt class=varlistentry><tt class=literal>eof</tt><dd>

<p class=para>
Returns the EOF status for the last file read.

<p>
<dt class=varlistentry><tt class=literal>eof(</tt>\|<tt class=literal>)</tt><dd>

<p class=para>
Indicates EOF on the pseudo file formed of the files listed on the
command line.

<p>
<dt class=varlistentry><tt class=literal>fcntl</tt> <i class=emphasis>filehandle</I>, <i class=emphasis>function</I>, $<i class=emphasis>var</I><dd>

<p class=para>
Implements the <i class=emphasis>fcntl</I>&nbsp;(2) function. This function has nonstandard
return values. 

<p>
<dt class=varlistentry><tt class=literal>fileno</tt> <i class=emphasis>filehandle</I><dd>

<p class=para>
Returns the file descriptor for a given (open) file.

<p>
<dt class=varlistentry><tt class=literal>flock</tt> <i class=emphasis>filehandle</I>, <i class=emphasis>operation</I><dd>

<p class=para>
Calls <i class=emphasis>flock</I>&nbsp;(2) on the file. <i class=emphasis>operation</I> formed by adding 1 (shared), 2
(exclusive), 4 (non-blocking), or 8 (unlock).

<p>
<dt class=varlistentry><tt class=literal>getc</tt> [ <i class=emphasis>filehandle</I> ]<dd>

<p class=para>
Yields the next character from the file, or an empty string on end of file.
If <i class=emphasis>filehandle</I> is omitted, reads from STDIN.

<p>
<dt class=varlistentry><tt class=literal>ioctl</tt> <i class=emphasis>filehandle</I>, <i class=emphasis>function</I>, $<i class=emphasis>var</I><dd>

<p class=para>
Performs <i class=emphasis>ioctl</I>&nbsp;(2) on the file. This function has nonstandard
return values. 

<p>
<dt class=varlistentry><tt class=literal>open</tt> <i class=emphasis>filehandle</I> [ <tt class=literal>,</tt> <i class=emphasis>filename</I> ]<dd>

<p class=para>
Opens a file and associates it with <i class=emphasis>filehandle</I>. If <i class=emphasis>filename</I> is
omitted, the scalar variable of the same name as the <i class=emphasis>filehandle</I> must
contain the filename.

<p class=para>
The following filename conventions apply when opening a file:
<p>
<dl class=variablelist>
<dt class=varlistentry>"<i class=emphasis>file</I>"<dd>

<p class=para>
Open <i class=emphasis>file</I> for input. Also <tt class=literal>"</tt><i class=emphasis>&lt;file</I><tt class=literal>"</tt>.

<p>
<dt class=varlistentry>"&gt;<i class=emphasis>file</I>"<dd>

<p class=para>
Open <i class=emphasis>file</I> for output, creating it if necessary.

<p>
<dt class=varlistentry>"&gt;&gt;<i class=emphasis>file</I>"<dd>

<p class=para>
Open <i class=emphasis>file</I> in append mode.

<p>
<dt class=varlistentry>"+&gt;<i class=emphasis>file</I>"<dd>

<p class=para>
Open <i class=emphasis>file</I> with read/write access.

<p>
<dt class=varlistentry>"| <i class=emphasis>cmd</I>"<dd>

<p class=para>
Opens a pipe to command <i class=emphasis>cmd</I>; forks if <i class=emphasis>cmd</I> is -. 

<p>
<dt class=varlistentry><tt class=literal>"</tt><i class=emphasis>cmd</I><tt class=literal> |"</tt><dd>

<p class=para>
Opens a pipe from command <i class=emphasis>cmd</I>; forks if <i class=emphasis>cmd</I> is -. </DL>

<i class=emphasis>file</I> may be &amp;<i class=emphasis>filehnd</I>, in which case the new filehandle is
connected to the (previously opened) filehandle <i class=emphasis>filehnd</I>.
If it is &amp;=<i class=emphasis>n</I>, <i class=emphasis>file</I> will be connected to the given file descriptor.
<tt class=literal>open</tt>
returns <tt class=literal>undef</tt> upon failure, <tt class=literal>true</tt> otherwise.

<p>
<dt class=varlistentry><tt class=literal>pipe</tt> <i class=emphasis>readhandle</I>, <i class=emphasis>writehandle</I><dd>

<p class=para>
Returns a pair of connected pipes.

<p>
<dt class=varlistentry><tt class=literal>print</tt> [ <i class=emphasis>filehandle</I> ] [ <i class=emphasis>list</I>(dagger) ]<dd>

<p class=para>
Prints the elements of <i class=emphasis>list</I>, converting them to strings if needed. If
<i class=emphasis>filehandle</I> is omitted, prints by default to standard output (or to
the last selected output channel, see <tt class=literal>select</tt>).

<p>
<dt class=varlistentry><tt class=literal>printf</tt> [ <i class=emphasis>filehandle</I> ] [ <i class=emphasis>list</I> ]<dd>

<p class=para>
Equivalent to <tt class=literal>print</tt> <i class=emphasis>filehandle</I> and <tt class=literal>sprintf</tt> <i class=emphasis>list</I>.

<p>
<dt class=varlistentry><tt class=literal>read</tt> <i class=emphasis>filehandle</I>, $<i class=emphasis>var</I><tt class=literal>,</tt> <i class=emphasis>length</I> [ <tt class=literal>,</tt> <i class=emphasis>offset</I> ]<dd>

<p class=para>
Reads <i class=emphasis>length</I> binary bytes from the file into the variable at
<i class=emphasis>offset</I>. Returns number of bytes actually read.

<p>
<dt class=varlistentry><tt class=literal>seek</tt> <i class=emphasis>filehandle</I>, <i class=emphasis>position</I>, <i class=emphasis>whence</I><dd>

<p class=para>
Arbitrarily positions the file. Returns <tt class=literal>true</tt> if successful. 

<p>
<dt class=varlistentry><tt class=literal>select</tt> [ <i class=emphasis>filehandle</I> ]<dd>

<p class=para>
Returns the currently selected filehandle.
Sets the current default filehandle for output operations if
<i class=emphasis>filehandle</I> is supplied.

<p>
<dt class=varlistentry><tt class=literal>select</tt> <i class=emphasis>rbits</I>, <i class=emphasis>wbits</I>, <i class=emphasis>nbits</I>, <i class=emphasis>timeout</I><dd>

<p class=para>
Performs a <i class=emphasis>select</I>&nbsp;(2) system call with the same parameters.

<p>
<dt class=varlistentry><tt class=literal>sprintf</tt> <i class=emphasis>format</I>, <i class=emphasis>list</I><dd>

<p class=para>
Returns a string formatted by (almost all of) the usual <i class=emphasis>printf</I>&nbsp;(3)
conventions.

<p>
<dt class=varlistentry><tt class=literal>sysread</tt> <i class=emphasis>filehandle</I><tt class=literal>,</tt> $<i class=emphasis>var</I><tt class=literal>,</tt> <i class=emphasis>length</I> [ <tt class=literal>,</tt> <i class=emphasis>offset</I> ]<dd>

<p class=para>
Reads <i class=emphasis>length</I> bytes into $<i class=emphasis>var</I> at <i class=emphasis>offset</I>.

<p>
<dt class=varlistentry><tt class=literal>syswrite</tt> <i class=emphasis>filehandle</I>, <i class=emphasis>scalar</I>, <i class=emphasis>length</I> [ , <i class=emphasis>offset</I> ]<dd>

<p class=para>
Writes <i class=emphasis>length</I> bytes from <i class=emphasis>scalar</I> at <i class=emphasis>offset</I>.

<p>
<dt class=varlistentry><tt class=literal>tell</tt> [ <i class=emphasis>filehandle</I> ]<dd>

<p class=para>
Returns the current file position for the file. If <i class=emphasis>filehandle</I> is
omitted, assumes the file last read.</DL>
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch15_16.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch15_18.htm#WEB-CH-15-SECT-18"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>File Operations</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Formats</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
