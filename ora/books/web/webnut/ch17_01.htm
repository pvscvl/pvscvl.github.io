<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 17] HTTP Overview</TITLE>
<meta name="author" content="Stephen Spainhour and Valerie Quercia">
<meta name="date" content="Mon Mar 17 14:33:41 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Webmaster in a Nutshell">
<meta name="title" content="Webmaster in a Nutshell">
<!-- JavaScript: pathcont.js -->

</HEAD>
<body bgcolor="#FFFFFF" text="#000000">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Webmaster in a Nutshell"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch16_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 17</b></td>
<td width=172 align=right valign=top><a href="ch17_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<h1 class=chapter><a class="TITLE" name="WEB-CH-17">HTTP Overview</A></H1>

<div class=htmltoc>

<p>
<b>Contents:</b><br>
HTTP Basics<br>
<a href="ch17_02.htm">Client Requests</A><br>
<a href="ch17_03.htm">Server Responses</A><br>

</DIV>

<p class=para>
The Hypertext Transfer Protocol (HTTP) is the language that Web clients
and Web servers use to communicate with each other. It is essentially
the backbone of the Web.
 

<p class=para>
While HTTP is largely the realm of server and client programming,
a firm understanding of HTTP is also important for CGI programming. In addition, sometimes HTTP filters back to the users--for example, when server error codes are reported in a browser window. In this book, we cover HTTP in four chapters:

<p>
<ul class=itemizedlist>
<li class=listitem>In the current chapter (<a href="ch17_01.htm">Chapter 17, <i>HTTP Overview</i></A>), we give a brief 
introduction to HTTP, the structure of HTTP transactions,
and a discussion of client methods.

<p>
<li class=listitem>In <a href="ch18_01.htm">Chapter 18, <i>Server Response Codes</i></A>, we cover the valid status codes
used in HTTP server responses.

<p>
<li class=listitem>In <a href="ch19_01.htm">Chapter 19, <i>HTTP Headers</i></A>, we list the headers used by 
both clients and servers under HTTP.

<p>
<li class=listitem>Finally, in <a href="ch20_01.htm">Chapter 20, <i>Media Types and Subtypes</i></A>, we cover the Internet media types
used under HTTP.

<p>
</UL>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="WEB-CH-17-SECT-1">17.1 HTTP Basics</A></h2>

<p class=para>
All HTTP transactions follow the same general format. 
Each client request and server response has three parts: the request or
response line, a header section, and the entity body. The client
initiates a transaction as follows:

<p>
<ol class=orderedlist>
<li class=listitem>The client contacts the server at a designated port number (by default, 80).
Then it sends a document request by specifying an HTTP command called a
<i class=emphasis>method</I>&nbsp;, followed by a document address, and an HTTP
version number.
For example:

<p class=para>
<div class=screen>
<p>
<pre>
GET /index.html HTTP/1.0
</PRE>
</DIV>

<p class=para>
uses the <tt class=literal>GET</tt> method to request the document <i class=emphasis>index.html</I> using
version 1.0 of HTTP.
HTTP methods are discussed in more detail later in this chapter.

<p>
<li class=listitem>Next, the client sends optional header information to inform the server of
its configuration and the document formats it will accept. All header 
information is given line by line, each with a header name and value.
<a href="ch19_01.htm">Chapter 19, <i>HTTP Headers</i></A> lists the valid HTTP headers.
For example, this header information sent by the client indicates its
name and version number and specifies several document preferences:

<p class=para>
<div class=screen>
<p>
<pre>
User-Agent: Mozilla/2.02Gold (WinNT; I)
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
</PRE>
</DIV>

<p class=para>
The client sends a blank line to end the header.

<p>
<li class=listitem>After sending the request and headers, the client may send additional
data. This data is mostly used by CGI programs using the POST method. It may also be used by clients like Netscape Navigator-Gold, to publish an edited page back onto the Web server.

<p>
</OL>
<p class=para>
The server responds in the following way to the client's request:

<p>
<ol class=orderedlist>
<li class=listitem>The server replies with a status line containing three fields: HTTP version,
status code, and description. The HTTP version indicates the version of HTTP
that the server is using to respond.
The status code is a three digit number that indicates the server's
result of the client's request. The description following the status
code is just human-readable text that describes the status code. For example, this status line:

<p class=para>
<div class=screen>
<p>
<pre>
HTTP/1.0 200 OK
</PRE>
</DIV>

<p class=para>
indicates that the server uses version 1.0 of HTTP in its response. A status
code of 200 means that the client's request was successful and the requested
data will be supplied after the headers.
<a href="ch18_01.htm">Chapter 18, <i>Server Response Codes</i></A> contains a listing of the status codes and their
descriptions.

<p>
<li class=listitem>After the status line, the server sends header information to the client
about itself and the requested document. 
HTTP headers are covered in <a href="ch19_01.htm">Chapter 19, <i>HTTP Headers</i></A>.
For example:

<p class=para>
<div class=screen>
<p>
<pre>
Date: Fri, 20 Sep 1996 08:17:58 GMT
Server: NCSA/1.5.2
Last-modified: Mon, 17 Jun 1996 21:53:08 GMT
Content-type: text/html
Content-length: 2482
</PRE>
</DIV>

<p class=para>
A blank line ends the header.

<p>
<li class=listitem>If the client's request is successful, the requested data is sent. This
data may be a copy of a file, or the response from a CGI program. If the
client's request could not be fulfilled, additional data may be a human-readable
explanation of why the server could not fulfill the request.

<p class=para>
In HTTP 1.0, after the server has finished sending the requested data, it disconnects from the client and the transaction is over unless a <i class=emphasis>Connection: Key Admin</I> header is sent. In HTTP 1.1, however, the default is for the server to maintain the connection and allow the client to make additional requests. Since many documents embed other documents as inline images, frames, applets, etc., this saves the overhead of the client having to repeatedly connect to the same server just to draw a single page. Under HTTP 1.1, therefore, the transaction might cycle back to the beginning, until either the client or server explicitly closes the connection.

<p class=para>
Being a stateless protocol, HTTP does not maintain any information 
from one transaction to the next, so the next transaction needs to
start all over again. The advantage is that an HTTP server can 
serve a lot more clients in a given period of time, since there's no additional overhead for tracking sessions from one connection to the next. The disadvantage is that
more elaborate CGI programs need to use hidden input fields (as
described in <a href="ch10_01.htm">Chapter 10, <i>HTML Form Tags</i></A>) or
external tools such as Netscape cookies
(as described in <a href="ch12_01.htm">Chapter 12, <i>Cookies</i></A>) to maintain
information from one transaction to the next.

<p>
</OL>
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch16_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch17_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Other CGI Resources</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Client Requests</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
