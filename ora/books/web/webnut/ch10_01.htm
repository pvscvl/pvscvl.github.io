<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 10] HTML Form Tags</TITLE>
<meta name="author" content="Stephen Spainhour and Valerie Quercia">
<meta name="date" content="Mon Mar 17 14:27:42 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Webmaster in a Nutshell">
<meta name="title" content="Webmaster in a Nutshell">
<!-- JavaScript: pathcont.js -->

</HEAD>
<body bgcolor="#FFFFFF" text="#000000">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Webmaster in a Nutshell"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch09_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 10</b></td>
<td width=172 align=right valign=top><a href="ch10_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<h1 class=chapter><a class="TITLE" name="WEB-CH-10">HTML Form Tags</A></H1>

<div class=htmltoc>

<p>
<b>Contents:</b><br>
Summary of Form Tags<br>
<a href="ch10_02.htm">An Example Form</A><br>

</DIV>

<p class=para>
Many CGI programs use HTML forms to gather user input.
This
chapter
summarizes the tags used to produce forms, and then
gives an example of how to use them.
 
 
 

<p class=para>
See <a href="ch03_01.htm">Chapter 3, <i>HTML Tags</i></A>,  for a more complete 
listing of all available HTML tags. 

<div class=sect1>
<h2 class=sect1><a class="TITLE" name="WEB-CH-10-SECT-1">10.1 Summary of Form Tags</A></h2>

<p class=para>
Forms are comprised of one or more text-input boxes, clickable
radio buttons, multiple-choice checkboxes, and
even pull-down menus and clickable images, all placed inside the
<tt class=literal>&lt;form&gt;</tt> tag. Within a form, you may also put
regular body content, including text and images. 

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="WEB-CH-10-SECT-1.1">The &lt;form&gt; Tag</A></h3>

<p class=para>
You place a form anywhere inside the body of an
HTML document with its elements enclosed by the
<tt class=literal>&lt;form&gt;</tt> tag and its respective end tag
<tt class=literal>&lt;/form&gt;</tt>. 
All of the form elements within a <tt class=literal>&lt;form&gt;</tt> tag
comprise a single form. The browser sends all of the values of these
elements--blank, default, or user-modified--when the user
submits the form to the server.

<p class=para>
The required <tt class=literal>action</tt> attribute for
the <tt class=literal>&lt;form&gt;</tt> tag gives the URL of
the application that is to receive and process the form's data.
A typical <tt class=literal>&lt;form&gt;</tt> tag with the
<tt class=literal>action</tt> attribute looks like this:

<p class=para>
<div class=screen>
<p>
<pre>
&lt;form action="http://www.ora.com/cgi-bin/update"&gt;
 ...
&lt;/form&gt;
</PRE>
</DIV>

<p class=para>
The example URL tells the browser to contact the
server named <i class=emphasis>www.ora.com</I> and pass along the
user's form values to the application named
<i class=emphasis>update</I> located in the <i class=emphasis>cgi-bin</I>
directory.

<p class=para>
The browser specially encodes the form's data before it passes
that data to the server so it does not become scrambled or corrupted
during the transmission. It is up to the server to either decode the
parameters or to pass them, still encoded, to the application.

<p class=para>
The standard encoding format is the media type named
<tt class=literal>application/x-www-form-urlencoded</tt>. You can change that
encoding with the optional <tt class=literal>enctype</tt>
attribute in the <tt class=literal>&lt;form&gt;</tt> tag. If you do elect to use an
alternative encoding, the only other supported format is
<tt class=literal>multipart/form-data</tt>.

<p class=para>
The standard
encoding--<tt class=literal>application/x-www-form-urlencoded</tt>--converts any
spaces in the form values to a plus sign (+), nonalphanumeric
characters into a percent sign (%) followed by two hexadecimal digits
that are the ASCII code of the character, and the
line breaks in multiline form data into <tt class=literal>%0D%0A</tt>.
(See <a href="ch09_01.htm">Chapter 9, <i>CGI Overview</i></A>, for more information on URL encoding.)

<p class=para>
The <tt class=literal>multipart/form-data</tt> encoding encapsulates the fields in the form
as several parts of a single MIME-compatible
compound document. 

<p class=para>
The other required attribute for the <tt class=literal>&lt;form&gt;</tt> tag sets
the <tt class=literal>method</tt> by which the browser sends the form's data to the
server for processing. There are two ways: the POST
method and the GET method. See <a href="ch09_01.htm">Chapter 9, <i>CGI Overview</i></A> for more 
information on GET and POST.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="WEB-CH-10-SECT-1.2">The &lt;input&gt; Tag</A></h3>

<p class=para>
 
Use the <tt class=literal>&lt;input&gt;</tt> tag to define any one of a number of
common form elements, including text fields, multiple-choice lists,
clickable images, and submission buttons. Although there are many
attributes for this tag, only the 
<tt class=literal>type</tt> and
<tt class=literal>name</tt> 
attributes are required for each element (only
<tt class=literal>type</tt> 
for a submission button).
Each type of input element uses only a
subset of the allowed attributes. Additional <tt class=literal>&lt;input&gt;</tt>
attributes may be required based upon which type of form element you
specify.

<p class=para>
You select the type of element to include in the form with the
<tt class=literal>&lt;input&gt;</tt> tag's required 
<tt class=literal>type</tt> attribute, and you name the field (used
during the form-submission process to the server) with the
<tt class=literal>name</tt> attribute. 

<p class=para>
The most useful (as well as the most common) form-input element is the
text-entry field. A text-entry field appears in the browser window as
an empty box on one line and accepts a single line of user input that
becomes the value of the element when the user submits the form to the
server. To create a text entry field inside a form in your
HTML document, set the 
<tt class=literal>type</tt> of the <tt class=literal>&lt;input&gt;</tt> form
element to <tt class=literal>text</tt>. You must include a 
<tt class=literal>name</tt> attribute as well.

<p class=para>
The <tt class=literal>size</tt> and 
<tt class=literal>maxlength</tt> attributes allow you to dictate the width,
in characters, of the text-input display box, and how many total
characters to accept from the user, respectively. 
The default value for <tt class=literal>size</tt> is
dependent upon the browser; the default value for 
<tt class=literal>maxlength</tt> is unlimited. 

<p class=para>
A text-entry field is usually blank until the user types
something into it. You may, however, specify an initial default value
for the field with the <tt class=literal>value</tt>
attribute. 

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="WEB-CH-10-SECT-1.2.1">Password fields</A></h4>

<p class=para>
Password fields behave just like a regular text field in a form,
except that the user-typed characters don't appear
onscreen. Rather, the browser obscures the characters in a masked text
to keep such things as passwords and other sensitive codes from
prying eyes.

<p class=para>
To create a password field, set the value of the 
<tt class=literal>type</tt> attribute to
<tt class=literal>password</tt>. All other attributes and semantics of the
conventional text field apply to the masked field.
Note that a masked text field is not all that secure, 
since the browser transmits it
unencrypted when the form is submitted to the server.

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="WEB-CH-10-SECT-1.2.2">File-selection fields</A></h4>

<p class=para>
The file-selection form field (introduced by Netscape Navigator) lets users select a file
stored on their computer and send it to the server when they submit
the form.
Browsers present the file-selection form field to the user like
other text fields, but it's accompanied by a button labeled "Browse."
Users either type the pathname directly as text into
the field or, with the Browse option, select the name of a locally
stored file from a system-specific dialog box.

<p class=para>
Create a file-selection field in a form by setting the value of the
<tt class=literal>type</tt> attribute to 
<tt class=literal>file</tt>. Like other text fields, the 
<tt class=literal>size</tt> and 
<tt class=literal>maxlength</tt> of a file-selection field should
be set to appropriate values.

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="WEB-CH-10-SECT-1.2.3">Checkboxes</A></h4>

<p class=para>
The checkbox element gives users a way to quickly and easily select or
deselect an item in your form. Checkboxes may also be grouped to
create a set of choices, any of which may be selected or deselected by
the user.

<p class=para>
Create individual checkboxes by setting the 
<tt class=literal>type</tt>
attribute for each <tt class=literal>&lt;input&gt;</tt> tag to
<tt class=literal>checkbox</tt>. Include the required
<tt class=literal>name</tt> and 
<tt class=literal>value</tt> attributes. If
the item is selected, it will contribute a value when the form is
submitted. If it is not selected, that element will not contribute a
value. The optional <tt class=literal>checked</tt> attribute (no value)
tells the browser to display a checked checkbox and include the value
when submitting the form to the server unless the user specifically
clicks the mouse to deselect (uncheck) the box.

<p class=para>
The browsers includes the value of selected (checked) checkboxes with
other form parameters when they are submitted to the server. The value
of the checked checkbox is the text string you specify in the required
<tt class=literal>value</tt> attribute.

<p class=para>
By giving several checkboxes the same <tt class=literal>name</tt>
attribute value, you create a group of checkbox elements. The browser
automatically collects the values of a checkbox group and
submits their selected values as a comma-separated string to the
server, significantly easing server-side form processing.

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="WEB-CH-10-SECT-1.2.4">Radio buttons</A></h4>

<p class=para>
Radio buttons are similar in behavior to checkboxes, except only one
in the group may be selected by the user. Create a radio button by
setting the <tt class=literal>type</tt> attribute of the
<tt class=literal>&lt;input&gt;</tt> element to <tt class=literal>radio</tt>. Like
checkbox elements, radio buttons each require a
<tt class=literal>name</tt> and 
<tt class=literal>value</tt> attribute;
buttons with the same name value are members of a group. One of them
may be initially checked by including the <tt class=literal>checked</tt>
attribute with that element. If no element in the group is checked, the browser automatically checks the
first element in the group.

<p class=para>
You should give each radio button element a different value, so the
server can sort them out after submission of the form.

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="WEB-CH-10-SECT-1.2.5">Submission buttons</A></h4>

<p class=para>
The submit button (<tt class=literal>&lt;input type=submit&gt;</tt>) does what its
name implies, setting in motion the form's submission to the
server from the browser. You may have more than one submit button in a
form. You may also include <tt class=literal>name</tt> and
<tt class=literal>value</tt> attributes with a submit button.

<p class=para>
With the simplest submit button (that is, without a 
<tt class=literal>name</tt> or 
<tt class=literal>value</tt> attribute), the browser displays a
small rectangle or oval with the default label "Submit." Otherwise,
the browser will label the button with the text you include with the
tag's <tt class=literal>value</tt> attribute. If you
provide a <tt class=literal>name</tt> attribute, the
<tt class=literal>value</tt> attribute for the submit
button will be added to the parameter list the browser sends
along to the server. 

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="WEB-CH-10-SECT-1.2.6">Reset buttons</A></h4>

<p class=para>
The reset type of form <tt class=literal>&lt;input&gt;</tt> button is nearly
self-explanatory: it lets the user reset--erase or set to some
default value--all elements in the form. 
By default, the browser displays a reset button with the label
"Reset" or "Clear." You can change that by specifying a 
<tt class=literal>value</tt> attribute with your own button label.

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="WEB-CH-10-SECT-1.2.7">Custom buttons</A></h4>

<p class=para>
With the image type of <tt class=literal>&lt;input&gt;</tt> form element, you
create a custom button, one that is a "clickable"
image. It's a special button made out of your specified image
that, when clicked by the user, tells the browser to submit the form
to the server, and includes the x,y coordinates of the mouse pointer
in the form's parameter list.
Image buttons require a <tt class=literal>src</tt> attribute
with the URL of the image file, and you can include
a <tt class=literal>name</tt> attribute. You may also
include the <tt class=literal>align</tt> attribute to
control image alignment within the current line of text, much like the
<tt class=literal>align</tt> attribute for the
<tt class=literal>&lt;img&gt;</tt> tag.

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="WEB-CH-10-SECT-1.2.8">Hidden fields</A></h4>

<p class=para>
The last type of form <tt class=literal>&lt;input&gt;</tt> element we describe in
this chapter is a way to embed information into your
forms that cannot be ignored or altered by the browser or
user. Rather, the <tt class=literal>&lt;input type=hidden&gt;</tt> tag's
required <tt class=literal>name</tt> and 
<tt class=literal>value</tt> attributes automatically get included
in the submitted form's parameter list. These serve to
"label" the form and can be invaluable when sorting out
different forms or form versions from a collection of submitted and
saved forms.

</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="WEB-CH-10-SECT-1.3">The &lt;textarea&gt; Tag</A></h3>

<p class=para>
The <tt class=literal>&lt;textarea&gt;</tt> tag creates a multiline text-entry
area in the user's browser display. In it, the user may type a
nearly unlimited number of lines of text. When the form is
submitted, the browser sends the text along with the
name specified by the required 
<tt class=literal>name</tt> attribute.

<p class=para>
You may include plain text between the <tt class=literal>&lt;textarea&gt;</tt> tag
and its end tag <tt class=literal>&lt;/textarea&gt;</tt>. 
The browser uses that text as the
default value for the text area.

<p class=para>
You can control the dimensions of a multiline text area
by defining the <tt class=literal>cols</tt> and
<tt class=literal>rows</tt> attributes for the visible
rectangular area set aside by the browser for multiline input. 

<p class=para>
Normally, text typed in the text area by the user is transmitted to
the server exactly as typed, with lines broken only where the user
pressed the Enter key. 
With the <tt class=literal>wrap</tt> attribute set to
<tt class=literal>virtual</tt>, the text is wrapped within the text area
for presentation to the user, but the text is transmitted to the
server as if no wrapping had occurred, except where the user pressed
the Enter key.
With the <tt class=literal>wrap</tt> attribute set to
<tt class=literal>physical</tt>, the text is wrapped within the text area
and is transmitted to the server as if the user had actually typed it
that way. 
To obtain the default action, set the <tt class=literal>wrap</tt>
attribute to <tt class=literal>off</tt>.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="WEB-CH-10-SECT-1.4">The &lt;select&gt; Tag</A></h3>

<p class=para>
Checkboxes and radio buttons give you powerful means for creating
multiple-choice questions and answers, but they can lead to long forms
that are tedious to write and put a fair amount of clutter
onscreen. The <tt class=literal>&lt;select&gt;</tt> tag gives you two compact
alternatives: pulldown menus and scrolling lists.

<p class=para>
By placing a list of <tt class=literal>&lt;option&gt;</tt> tagged items inside the
<tt class=literal>&lt;select&gt;</tt> tag of a form, you create a
pull-down menu of choices.

<p class=para>
As with other form tags, the <tt class=literal>name</tt>
attribute is required and used by the browser when submitting the
<tt class=literal>&lt;select&gt;</tt> choices to the server. Unlike radio buttons,
however, no item is preselected, so if the user doesn't select any, no values
are sent to the server when the form is submitted. Otherwise, the
browser submits the selected item or collects multiple selections,
each separated with commas, into a single parameter list and includes
the <tt class=literal>name</tt> attribute when submitting
<tt class=literal>&lt;select&gt;</tt> form data to the server.

<p class=para>
To allow more than one option selection at a time, add the 
<tt class=literal>multiple</tt> attribute to the
<tt class=literal>&lt;select&gt;</tt> tag. This causes the
<tt class=literal>&lt;select&gt;</tt> to behave like an <tt class=literal>&lt;input
type=checkbox&gt;</tt> element. If 
<tt class=literal>multiple</tt> is not specified, exactly one
option can be selected at a time, just like a group of radio buttons.

<p class=para>
The <tt class=literal>size</tt> attribute determines how
many options are visible to the user at one time. The value of
<tt class=literal>size</tt> should be a positive
integer. If <tt class=literal>size</tt> is set to <tt class=literal>1</tt> and
<tt class=literal>multiple</tt> is not specified, the
<tt class=literal>&lt;select&gt;</tt> list is typically implemented as a pop-up
menu, while values greater than 1 or specifying the 
<tt class=literal>multiple</tt> attribute cause the
<tt class=literal>&lt;select&gt;</tt> to be displayed as a scrolling list.

<p class=para>
Use the <tt class=literal>&lt;option&gt;</tt> tag to define each item within a
<tt class=literal>&lt;select&gt;</tt> form element.
The browser displays the <tt class=literal>&lt;option&gt;</tt> tag's
contents as an element within the <tt class=literal>&lt;select&gt;</tt> tag's menu
or scrolling list, so the content must be plain text only, without any
other sort of markup.

<p class=para>
Use the <tt class=literal>value</tt> attribute to set a
value for each option the browser sends to the server if that
option is selected by the user. If the 
<tt class=literal>value</tt> attribute has not been specified, the
value of the option is set to the content of the
<tt class=literal>&lt;option&gt;</tt> tag.

<p class=para>
By default, all options within a multiple-choice
<tt class=literal>&lt;select&gt;</tt> tag are unselected. Include the
<tt class=literal>selected</tt> attribute (no value) inside the
<tt class=literal>&lt;option&gt;</tt> tag to preselect one or more options, which
the user may then deselect. Single-choice <tt class=literal>&lt;select&gt;</tt>
tags will preselect the first option if no option is explicitly
preselected.

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch09_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch10_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Extra Path Information</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>An Example Form</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
