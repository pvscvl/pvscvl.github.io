<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 15] 15.3 Variables</TITLE>
<meta name="author" content="Stephen Spainhour and Valerie Quercia">
<meta name="date" content="Mon Mar 17 14:31:56 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Webmaster in a Nutshell">
<meta name="title" content="Webmaster in a Nutshell">
<!-- JavaScript: pathcont.js -->

</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Webmaster in a Nutshell"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch15_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 15</b></td>
<td width=172 align=right valign=top><a href="ch15_04.htm#WEB-CH-15-SECT-4"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="WEB-CH-15-SECT-3">15.3 Variables</A></h2>

<p class=para>
<p>
<dl class=variablelist>
<dt class=varlistentry>$var<dd>

<p class=para>
A simple scalar variable.

<p>
<dt class=varlistentry>$var[28]<dd>

<p class=para>
29th element of array @var.

<p>
<dt class=varlistentry>$p = \@var<dd>

<p class=para>
Now $p is a reference to array @var.

<p>
<dt class=varlistentry>$$p[28]<dd>

<p class=para>
29th element of array referenced by $p.

<p class=para>
Also, $p-&gt;[28].

<p>
<dt class=varlistentry>$var[-1]<dd>

<p class=para>
Last element of array @var.

<p>
<dt class=varlistentry>$var[$i][$j]<dd>

<p class=para>
$j-th element of $i-th element of array @var.

<p>
<dt class=varlistentry>$var{<tt class=literal>'</tt>Feb<tt class=literal>'</tt>}<dd>

<p class=para>
A value from hash (associative array) %var.

<p>
<dt class=varlistentry>$p = \%var<dd>

<p class=para>
Now $p is a reference to hash %var.

<p>
<dt class=varlistentry>$$p{<tt class=literal>'</tt>Feb<tt class=literal>'</tt>}<dd>

<p class=para>
A value from hash referenced by $p. 

<p class=para>
Also, $p-&gt;{<tt class=literal>'</tt>Feb<tt class=literal>'</tt>}.

<p>
<dt class=varlistentry>$#var<dd>

<p class=para>
Last index of array @var.

<p>
<dt class=varlistentry>@var<dd>

<p class=para>
The entire array;
in a scalar context, the number of elements in the array.

<p>
<dt class=varlistentry>@var[3,4,5]<dd>

<p class=para>
A slice of array @var.

<p>
<dt class=varlistentry>@var{<tt class=literal>'</tt>a<tt class=literal>'</tt>,<tt class=literal>'</tt>b<tt class=literal>'</tt>}<dd>

<p class=para>
A slice of %var; same as ($var{<tt class=literal>'</tt>a<tt class=literal>'</tt>},$var{<tt class=literal>'</tt>b<tt class=literal>'</tt>}).

<p>
<dt class=varlistentry>%var<dd>

<p class=para>
The entire hash;
in a scalar context, <tt class=literal>true</tt> if the hash has elements.

<p>
<dt class=varlistentry>$var{<tt class=literal>'</tt>a<tt class=literal>'</tt>,1,...}<dd>

<p class=para>
Emulates a multidimensional array.

<p>
<dt class=varlistentry>(<tt class=literal>'</tt>a<tt class=literal>'</tt>...<tt class=literal>'</tt>z<tt class=literal>'</tt>)[4,7,9]<dd>

<p class=para>
A slice of an array literal.

<p>
<dt class=varlistentry><i class=emphasis>pkg::var</I><dd>

<p class=para>
A variable from a package, e.g., $pkg::var, @pkg::ary.

<p>
<dt class=varlistentry>\<i class=emphasis>object</I><dd>

<p class=para>
Reference to an object, e.g., \\$var, \\%hash.

<p>
<dt class=varlistentry>*<i class=emphasis>name</I><dd>

<p class=para>
Refers to all objects represented by <i class=emphasis>name</I>.

<p class=para>
*n1 = *n2 makes n1 an alias for n2.

<p class=para>
*n1 = $n2 makes $n1 an alias for $n2.</DL>
<p class=para>
You can always use a { <i class=emphasis>block</I> } returning the right type of reference
instead of the variable identifier, e.g., ${...}, &amp;{...}.
$$p is just a shorthand for ${$p}.

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch15_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch15_04.htm#WEB-CH-15-SECT-4"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Literals</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Operators</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
