<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 15] 15.20 System Interaction</TITLE>
<meta name="author" content="Stephen Spainhour and Valerie Quercia">
<meta name="date" content="Mon Mar 17 14:32:26 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Webmaster in a Nutshell">
<meta name="title" content="Webmaster in a Nutshell">
<!-- JavaScript: pathcont.js -->

</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Webmaster in a Nutshell"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch15_19.htm#WEB-CH-15-SECT-19"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 15</b></td>
<td width=172 align=right valign=top><a href="ch15_21.htm#WEB-CH-15-SECT-21"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="WEB-CH-15-SECT-20">15.20 System Interaction</A></h2>

<p class=para>
<p>
<dl class=variablelist>
<dt class=varlistentry><tt class=literal>alarm</tt> <i class=emphasis>expr</I><dd>

<p class=para>
Schedules a SIG2ALRM to be delivered after <i class=emphasis>expr</I> seconds.

<p>
<dt class=varlistentry><tt class=literal>chdir</tt> [ <i class=emphasis>expr</I> ]<dd>

<p class=para>
Changes the working directory.
Uses $ENV{<tt class=literal>"</tt>HOME<tt class=literal>"</tt>} or
$ENV{<tt class=literal>"</tt>LOGNAME<tt class=literal>"</tt>} if <i class=emphasis>expr</I> is omitted.

<p>
<dt class=varlistentry><tt class=literal>chroot</tt> <i class=emphasis>filename</I>(dagger)<dd>

<p class=para>
Changes the root directory for the process and its children.

<p>
<dt class=varlistentry><tt class=literal>die</tt> [ <i class=emphasis>list</I> ]<dd>

<p class=para>
Prints the value of <i class=emphasis>list</I> to STDERR and exits with the current
value of $! (errno). If $! is 0, exits with the value of
($? &gt;&gt; 8). If ($? &gt;&gt; 8) is 0, exits with 255. <i class=emphasis>list</I>
defaults to \(odDied.\(cd

<p>
<dt class=varlistentry><tt class=literal>exec</tt> <i class=emphasis>list</I><dd>

<p class=para>
Executes the system command in <i class=emphasis>list</I>; does not return.

<p>
<dt class=varlistentry><tt class=literal>exit</tt> [ <i class=emphasis>expr</I> ]<dd>

<p class=para>
Exits immediately with the value of <i class=emphasis>expr</I>, which defaults to
0 (zero). Calls END routines and object destructors before
exiting.

<p>
<dt class=varlistentry><tt class=literal>fork</tt><dd>

<p class=para>
Does a <i class=emphasis>fork</I>&nbsp;(2) system call. Returns the process ID of the
child to the parent process and zero to the child process.

<p>
<dt class=varlistentry><tt class=literal>getlogin</tt><dd>

<p class=para>
Returns the current login name as known by the system.

<p>
<dt class=varlistentry><tt class=literal>getpgrp</tt> [ <i class=emphasis>pid</I> ]<dd>

<p class=para>
Returns the process group for process <i class=emphasis>pid</I> (0, or omitted, means the
current process).

<p>
<dt class=varlistentry><tt class=literal>getppid</tt><dd>

<p class=para>
Returns the process ID of the parent process.

<p>
<dt class=varlistentry><tt class=literal>getpriority</tt> <i class=emphasis>which</I>, <i class=emphasis>who</I><dd>

<p class=para>
Returns the current priority for a process, process group, or user.

<p>
<dt class=varlistentry><tt class=literal>glob</tt> <i class=emphasis>pat</I><dd>

<p class=para>
Returns a list of filenames that match the shell pattern <i class=emphasis>pat</I>.

<p>
<dt class=varlistentry><tt class=literal>kill</tt> <i class=emphasis>list</I><dd>

<p class=para>
Sends a signal to a list of processes. The first element of the list
must be the signal to send (either numeric, or its name as a string).

<p>
<dt class=varlistentry><tt class=literal>setpgrp</tt> <i class=emphasis>pid</I>, <i class=emphasis>pgrp</I><dd>

<p class=para>
Sets the process group for the <i class=emphasis>pid</I> (0 means the current process).

<p>
<dt class=varlistentry><tt class=literal>setpriority</tt> <i class=emphasis>which</I>, <i class=emphasis>who</I>, <i class=emphasis>priority</I><dd>

<p class=para>
Sets the current priority for a process, process group, or a user.

<p>
<dt class=varlistentry><tt class=literal>sleep</tt> [ <i class=emphasis>expr</I> ]<dd>

<p class=para>
Causes the program to sleep for <i class=emphasis>expr</I> seconds, or forever if no
<i class=emphasis>expr</I>. Returns the number of seconds actually slept.

<p>
<dt class=varlistentry><tt class=literal>syscall</tt> <i class=emphasis>list</I><dd>

<p class=para>
Calls the system call specified in the first element of the list,
passing the rest of the list as arguments to the call.

<p>
<dt class=varlistentry><tt class=literal>system</tt> <i class=emphasis>list</I><dd>

<p class=para>
Does exactly the same thing as <tt class=literal>exec </tt><i class=emphasis>list</I> except that a fork is
performed first, and the parent process waits for the child process to complete.

<p>
<dt class=varlistentry><tt class=literal>times</tt><dd>

<p class=para>
Returns a 4-element array (0:$user, 1:$system, 2:$cuser,
3:$csystem) giving the user and system times, in seconds, for this
process and the children of this process.

<p>
<dt class=varlistentry><tt class=literal>umask</tt> [ <i class=emphasis>expr</I> ]<dd>

<p class=para>
Sets the umask for the process and returns the old one. If <i class=emphasis>expr</I> is
omitted, returns current umask value.

<p>
<dt class=varlistentry><tt class=literal>wait</tt><dd>

<p class=para>
Waits for a child process to terminate and returns the process ID of the
deceased process (-1 if none). The status is returned in $?.

<p>
<dt class=varlistentry><tt class=literal>waitpid</tt> <i class=emphasis>pid</I>, <i class=emphasis>flags</I><dd>

<p class=para>
Performs the same function as the corresponding system call.

<p>
<dt class=varlistentry><tt class=literal>warn</tt> [ <i class=emphasis>list</I> ]<dd>

<p class=para>
Prints the message on STDERR like <tt class=literal>die</tt>, but doesn't exit.
<i class=emphasis>list</I> defaults to \(odWarning: something's wrong\(cd.</DL>
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch15_19.htm#WEB-CH-15-SECT-19"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch15_21.htm#WEB-CH-15-SECT-21"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Directory Reading Routines</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Networking</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
