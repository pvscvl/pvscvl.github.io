<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 17] 17.2 Client Requests</TITLE>
<meta name="author" content="Stephen Spainhour and Valerie Quercia">
<meta name="date" content="Mon Mar 17 14:33:44 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Webmaster in a Nutshell">
<meta name="title" content="Webmaster in a Nutshell">
<!-- JavaScript: pathcont.js -->

</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Webmaster in a Nutshell"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch17_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 17</b></td>
<td width=172 align=right valign=top><a href="ch17_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="WEB-CH-17-SECT-2">17.2 Client Requests</A></h2>

<p class=para>
 
Client requests are broken up into three sections. The first line of
a message always contains an HTTP command called a <i class=emphasis>method</I>, a URI
that identifies the file or resource the
client is querying, and the HTTP version number. The following lines
of a client request contain header information, which provides information
about the client and the data entity it is sending the server. The third part
of a client request is the entity body, the data being sent to the server.

<p class=para>
URI (Uniform Resource Identifier) is just a general term for all valid formats of addressing schemes
supported on the World Wide Web. The one in common use now is URL
(Uniform Resource Locator) addressing scheme. See \
<a href="ch01_01.htm">Chapter 1, <i>Introduction</i></A>,
for more information on URLs.
<div class=sect2>
<h3 class=sect2><a class="TITLE" name="WEB-CH-17-SECT-2.1">Methods</A></h3>

<p class=para>
 
A method is an HTTP command that begins the first line of a client request.
The method tells the server the purpose of the client request. There are
three main methods defined for HTTP: GET, HEAD, and POST. Other methods
are also defined, but are not as widely supported by servers as GET, HEAD, and POST (although the other methods will be used more often in the future, not less). Methods are case sensitive, so a "GET" is different
than a "get."

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="WEB-CH-17-SECT-2.1.1">The GET method</A></h4>

<p class=para>
GET is a request for information located at a specified URI on the server. It
is the most commonly used method by browsers to retrieve documents for viewing.
The result of a GET request can be generated in many different ways. It could
be a file accessible by the server, the output of a program or CGI
script, the output from a hardware device, etc. 

<p class=para>
When a client uses the GET method in its request, the server responds with a
status line, headers, and the requested data. If the server cannot process
the request due to an error or lack of authorization, the server usually
sends a textual explanation in the data portion of the response.

<p class=para>
The entity-body portion of a GET request is always empty. GET is 
basically used to say "Give me this file." The file or
program that the client requests is usually identified by its full path name
on the server. 

<p class=para>
Here is an example of a successful GET request to retrieve a file.
The client sends:

<p class=para>
<div class=screen>
<p>
<pre>
GET /index.html HTTP/1.0
Connection: Keep-Alive
User-Agent: Mozilla/2.02Gold (WinNT; I)
Host: www.ora.com
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
</PRE>
</DIV>

<p class=para>
The server responds with:

<p class=para>
<div class=screen>
<p>
<pre>
HTTP/1.0 200 Document follows
Date: Fri, 20 Sep 1996 08:17:58 GMT
Server: NCSA/1.5.2
Last-modified: Mon, 17 Jun 1996 21:53:08 GMT
Content-type: text/html
Content-length: 2482
<i class=emphasis>(body of document here)</I>
</PRE>
</DIV>

<p class=para>
The GET method is also used to send input to programs like CGI through
form tags. Since GET requests have empty entity-bodies, the input data
is appended to the URL in the GET line of the request. When a
<tt class=literal>&lt;form&gt;</tt> tag specifies the <tt class=literal>method="GET"</tt> attribute value,
key-value pairs representing the input from the form are appended
to the URL following a question mark (?). Pairs are separated by an
ampersand (&amp;). For example:

<p class=para>
<div class=screen>
<p>
<pre>
GET /cgi-bin/birthday.pl?month=august&amp;date=24 HTTP/1.0
</PRE>
</DIV>

<p class=para>
causes the server to send the <i class=emphasis>birthday.pl</I> CGI program the
<tt class=literal>month</tt> and <tt class=literal>date</tt> values specified in a form on
the client. The input data at the end of the URL is encoded
to CGI specifications. For literal use of special characters, the
client uses hexadecimal notation. The character encoding is described
in <a href="ch09_01.htm">Chapter 9, <i>CGI Overview</i></A>.

<p class=para>
The GET method can also supply <i class=emphasis>extra-path information</I> in the
same manner. This is achieved by adding the extra path after the
URL, i.e., <tt class=literal>/cgi-bin/ display.pl/cgi/cgi_doc.txt</tt>. The server
gauges where the program's name ends (<tt class=literal>display.pl</tt>). Everything
after that is read as the extra path.

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="WEB-CH-17-SECT-2.1.2">The HEAD method</A></h4>

<p class=para>
The HEAD method is functionally like GET except that the server will not
send anything in the data portion of the reply. The HEAD method requests only
the header information on a file or resource. The header information from
a HEAD request should be the same as that from a GET request.

<p class=para>
This method is used when the client wants to find out information
about the document and not retrieve it. Many applications exist for
the HEAD method. For example, the client may desire the following 
information:

<p>
<ul class=itemizedlist>
<li class=listitem>Modification time of a document, useful for cache-related queries

<p>
<li class=listitem>The size of a document, useful for page layout, estimating arrival time, or 
determining whether to request a smaller version of the document

<p>
<li class=listitem>The type of the document, to allow the client to examine only documents 
of a certain type

<p>
<li class=listitem>The type of server, to allow customized server queries

<p>
</UL>
<p class=para>
It is important to note that most of the header information provided
by a server is optional and may not be given by all servers. A good
design for Web clients is to allow flexibility in the server response and
take default actions when desired header information is not given
by the server.

<p class=para>
The following is an example HTTP transaction using the HEAD request.
The client sends:

<p class=para>
<div class=screen>
<p>
<pre>
HEAD /index.html HTTP/1.0
Connection: Keep-Alive
User-Agent: Mozilla/2.02Gold (WinNT; I)
Host: www.ora.com
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
</PRE>
</DIV>

<p class=para>
The server responds with:

<p class=para>
<div class=screen>
<p>
<pre>
HTTP/1.0 200 Document follows
Date: Fri, 20 Sep 1996 08:17:58 GMT
Server: NCSA/1.5.2
Last-modified: Mon, 17 Jun 1996 21:53:08 GMT
Content-type: text/html
Content-length: 2482
</PRE>
</DIV>

<p class=para>
(No entity body is sent in response to a HEAD request.)

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="WEB-CH-17-SECT-2.1.3">The POST method</A></h4>

<p class=para>
The POST method allows data to be sent to the server in a client request.
The data is directed to a data handling program that the server has
access to (e.g., a CGI script). The POST method can be used for many applications. For
example, it can be used to provide input for:

<p>
<ul class=itemizedlist>
<li class=listitem>Network services, such as newsgroup postings

<p>
<li class=listitem>Command-line interface programs

<p>
<li class=listitem>Annotation of documents on the server

<p>
<li class=listitem>Database operations

<p>
</UL>
<p class=para>
The data sent to the server is in the entity-body section of the client's
request. After the server processes the POST request and headers,
it passes the entity-body to the program specified by the URI.
The encoding scheme most commonly used with POST is URL-encoding,
which allows form data to be translated into a list of
variables and values for CGI processing.
<a href="ch09_01.htm">Chapter 9, <i>CGI Overview</i></A> provides details on CGI and URL-encoded data.

<p class=para>
Here
is a quick example of a client request using the POST method to send
birthdate data from a form:

<p class=para>
<div class=screen>
<p>
<pre>
POST /cgi-bin/birthday.pl HTTP/1.0
User-Agent: Mozilla/2.02Gold (WinNT; I)
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
Host: www.ora.com
Content-type: application/x-www-form-urlencoded
Content-length: 20
month=august&amp;date=24
</PRE>
</DIV>

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="WEB-CH-17-SECT-2.1.4">Other methods</A></h4>

<p class=para>
The following methods are also defined, although not as frequentlly used.

<p>
<dl class=variablelist>
<dt class=varlistentry>LINK<dd>

<p class=para>
Requests that header information is associated with a document on the server.

<p>
<dt class=varlistentry>UNLINK<dd>

<p class=para>
Requests dissociation of header information from a document on the server.

<p>
<dt class=varlistentry>PUT<dd>

<p class=para>
Requests that the entity-body of the request be stored at the specified URI.

<p>
<dt class=varlistentry>DELETE<dd>

<p class=para>
Requests the removal of data at a URI on the server.

<p>
<dt class=varlistentry>OPTIONS<dd>

<p class=para>
Requests information about communications options available on 
the server. The request URI can be substituted with an asterisk (<tt class=literal>*</tt>) to indicate the server as a whole.

<p>
<dt class=varlistentry>TRACE<dd>

<p class=para>
Requests the request entity body be returned intact. Used for debugging.</DL>
<p class=para>
</DIV>

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch17_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch17_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>HTTP Basics</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Server Responses</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
