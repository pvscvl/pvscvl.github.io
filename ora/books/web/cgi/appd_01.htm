<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Appendix D] CGI Lite</TITLE>
<meta name="author" content="Shishir Gundavaram">
<meta name="date" content="Mon Mar 17 13:39:01 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="cgi programming">
<meta name="title" content="CGI Programming on the World Wide Web">
<!-- JavaScript: pathcont.js -->

</HEAD>
<body bgcolor="#FFFFFF" text="#000000">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="CGI Programming on the World Wide Web"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="appc_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Appendix D</b></td>
<td width=172 align=right valign=top><a href="appe_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<h1 class=appendix><a class="TITLE" name="CGI-APP-D">CGI Lite</A></H1>

<div class=htmltoc>

<p>
<b>Contents:</b><br>
Multipart Forms<br>

</DIV>

<p class=para>
CGI
Lite is a Perl 5 library that will decode both URL-encoded and multipart
form data produced by the file upload feature present in Netscape
2.0. This module does not have all of the features of the CGI::*
modules, but is lightweight and slightly easier to use. Here is
a simple example that outputs all the form data:

<div class=screen>
<p>
<pre>
#!/usr/local/bin/perl5
use CGI_Lite;
$cgi = new CGI_Lite ();
$cgi-&gt;parse_form_data ();
 
print "Content-type: text/plain", "\n\n";
$cgi-&gt;print_form_data ();
 
exit (0);
</PRE>
</DIV>

<p class=para>
The <i class=emphasis>parse_form_data</I> method parses the
form data and stores it in an internal associative array, which
can be printed out by calling the <i class=emphasis>print_form_data</I>
method. Or, you can place the form data in a variable of your choice:

<div class=screen>
<p>
<pre>
#!/usr/local/bin/perl5
use CGI_Lite;
 
$cgi = new CGI_Lite ();
%data = $cgi-&gt;parse_form_data ();
 
print "Content-type: text/plain", "\n\n";
 
foreach $key (keys %data) {
    print $key, " = ", $data{$key}, "\n";
}
 
exit (0);
</PRE>
</DIV>

<div class=sect1>
<h2 class=sect1><a class="TITLE" name="CGI-APP-D-SECT-1">D.1 Multipart Forms</A></h2>

<p class=para>
The file
upload feature of Netscape 2.0 allows you to do just that: send
files as part of a form through the network. Here is how to create
a multipart form:

<div class=screen>
<p>
<pre>
&lt;HTML&gt;
&lt;HEAD&gt;&lt;TITLE&gt;CGI Lite Test&lt;/TITLE&gt;&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;H1&gt;CGI Lite Test&lt;/H1&gt;
&lt;HR&gt;
&lt;FORM ACTION="/cgi-bin/upload.pl" ENCTYPE="multipart/form-data" METHOD="POST"&gt;
What is your name? &lt;INPUT TYPE="text" NAME="username"&gt;
&lt;P&gt;     
Select a &lt;B&gt;TEXT&lt;/B&gt; file to send: &lt;INPUT TYPE="file" NAME="input_file"&gt;
&lt;P&gt;
&lt;INPUT TYPE="submit" VALUE="Send the Multipart Form"&gt;
&lt;INPUT TYPE="reset"  VALUE="Clear the Information"&gt;
&lt;/FORM&gt;
&lt;HR&gt;  
&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>
</DIV>

<p class=para>
There are two things that are very different from what we
have seen before. The first is the ENCTYPE
attribute in the FORM tag. If we want the form
data to be URL-encoded, then we don't have to specify ENCTYPE,
in which case it defaults to <i class=command>application/x-www-form-urlencoded</i>.

<p class=para>
The other is the TYPE attribute in
the INPUT tag. By specifying a TYPE
of "file", Netscape will display a "Browse" button which allows
you to select a file from your disk or network.

<p class=para>
<a href="#CGI-APP-D-FIG-1">Figure D.1</A> shows how the form will be rendered by Netscape.

<div class=figure>
<h4 class=figure><a class="TITLE" name="CGI-APP-D-FIG-1">Figure D-1: Snapshot of multipart form</A></h4>


<p>
<img aligindex.htmln=middle webstripperattrwas="src" webstripperlinkwas="http://rtfm.vn.ua/prog/perl/orb/books/web/cgi/figs/cgid01.gif" alt="[Graphic: Figure D-1]" width=488 height=386>

</DIV>

<p class=para>
The following program decodes the form information and sends
the user-uploaded file back to the browser for display. (That's
the reason why we asked the user to send text files.)

<div class=screen>
<p>
<pre>
#!/usr/local/bin/perl5
use CGI_Lite;
 
$cgi = new CGI_Lite ();
print "Content-type: text/plain", "\n\n";
$cgi-&gt;set_directory ("/usr/shishir") || die "Directory doesn't exist.\n";
</PRE>
</DIV>

<p class=para>
The <i class=emphasis>set_directory</I> method allows you to
store the uploaded files in a specific directory. If this method
is not called, CGI_Lite defaults to <i class=emphasis>/tmp</I>.

<div class=screen>
<p>
<pre>
$cgi-&gt;set_platform ("UNIX");
</PRE>
</DIV>

<p class=para>
Since this is a text file, we can use the <i class=emphasis>set_platform</I>
method to add or remove the appropriate end of line (EOL) characters.
The 
EOL character is a 
linefeed ("\n")  in UNIX,
a carriage return ("\r") on the Macintosh, and a combination of
carriage return and line feed ("\r\n") on the Windows/DOS platform.

<div class=screen>
<p>
<pre>
$cgi-&gt;set_file_type ("handle");
%data = $cgi-&gt;parse_form_data ();
</PRE>
</DIV>

<p class=para>
The <i class=emphasis>set_file_type</I> method with an argument
of "handle" returns the filehandle(s) for uploaded files that are
stored in the directory specified by the <i class=emphasis>set_directory</I>method.

<div class=screen>
<p>
<pre>
$user = $data{'username'};
$filename = $data{'input'};
print "Welcome $user, let's see what file you uploaded...", "\n";
print "=" x 80, "\n";
</PRE>
</DIV>

<p class=para>
Here we simply retrieve the form fields and display a welcome
message. Remember, the variable <i class=emphasis>$filename</I> points
to a filehandle.

<div class=screen>
<p>
<pre>
if (-T $filename) {
    while (&lt;$filename&gt;) {
        print;
    } 
    close ($filename);
} else {
    print "Sorry! you did not upload a text file.", "\n";
}
exit (0);
</PRE>
</DIV>

<p class=para>
If the uploaded file is a text file, we proceed to output
it. If not, an error message is output.

<p class=para>
</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="appc_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="appe_01.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Figure -: Form created from Perl 5 modules</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Applications, Modules, Utilities, and Documentation</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
