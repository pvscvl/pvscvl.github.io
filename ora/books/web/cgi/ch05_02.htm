<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 5] 5.2 Configuration</TITLE>
<meta name="author" content="Shishir Gundavaram">
<meta name="date" content="Mon Mar 17 13:25:44 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="cgi programming">
<meta name="title" content="CGI Programming on the World Wide Web">
<!-- JavaScript: pathcont.js -->

</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="CGI Programming on the World Wide Web"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch05_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 5</b></td>
<td width=172 align=right valign=top><a href="ch05_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="CGI-CHP-5-SECT-2">5.2 Configuration</A></h2>

<p class=para>
How does the server know which files to
parse, and which ones to return without parsing? From the information
in the server configuration files, of course. Let's look at how
we can configure SSI on the NCSA server.

<p class=para>
The first thing you need to set is the extension(s) for the
files that the server should parse in the server configuration file
(<i class=emphasis>srm.conf</I>). For example, the following line
will force the server to parse all files that end in .<i class=emphasis>shtml</I>:

<div class=screen>
<p>
<pre>
  AddType text/x-server-parsed-html .shtml
</PRE>
</DIV>

<p class=para>
Internally, the server uses the <i class=command>text/x-server-parsed-html</i>
MIME content type to identify parsed documents.
An important thing to note here is that you cannot have SSI directives
within your CGI program, because the server does not parse the output
generated by the program.

<p class=para>
Alternatively, you can set the configuration so that the server
parses all HTML documents:

<div class=screen>
<p>
<pre>
AddType text/x-server-parsed-html .html
</PRE>
</DIV>

<p class=para>
However, this is not a good idea! It will severely degrade
system performance because the server has to parse all the HTML
documents that it returns.

<p class=para>
Now let's look at the two configuration options that you must
set in the access configuration file (<i class=emphasis>access.conf</I>)
that dictate what type of SSI directives you can place in your HTML
document:

<p>
<ul class=itemizedlist>
<li class=listitem>If you want to embed SSI directives
to display the environment variables and file statistics in your
HTML documents, you need to enable a feature
called <i class=command>Includes</i>.

<p>
<li class=listitem>If you want to have the ability to execute external
programs (CGI as well as other system applications) from within
your HTML documents, you need to enable the <i class=command>Exec</i>
feature.

<p>
</UL>
<p class=para>
Here is how you would enable both <i class=command>Includes</i>
and <i class=command>Exec</i>:

<div class=screen>
<p>
<pre>
Options Includes ExecCGI
</PRE>
</DIV>

<p class=para>
To exclusively enable <i class=command>Includes</i> without
<i class=command>Exec</i>, you need to add the following:

<div class=screen>
<p>
<pre>
Options IncludesNoExec
</PRE>
</DIV>

<p class=para>
Before enabling either of these features, you should think
about system security and performance.

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="CGI-CHP-5-SECT-2.1">Configuring SSI for the CERN Server</A></h3>

<p class=para>
As we mentioned at the
beginning of this chapter, not all servers support SSI. However,
you can use a Perl program called fakessi.pl to emulate SSI behavior.

<p class=para>
For example, on the CERN server, all you
need to do is:

<p>
<ol class=orderedlist>
<li class=listitem>Install fakessi.pl into the cgi-bin
directory.

<p>
<li class=listitem>Add the following directive to httpd.conf:

<p>
</OL>
<div class=screen>
<p>
<pre>
Exec /*.shtml /usr/local/etc/httpd/cgi-bin/fakessi.pl
</PRE>
</DIV>

<p class=para>
(assuming that /usr/local/etc/httpd/cgi-bin is the directory
that fakessi.pl was installed into).

<p class=para>
This tells the server to execute fakessi.pl whenever a client
requests a file ending in .shtml.

<p class=para>
You can get <i class=emphasis>fakessi.pl</I> from <i class=emphasis>http://sw.cse.bris.ac.uk/WebTools/fakessi.html</I>.

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch05_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch05_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Introduction</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Environment Variables</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
