<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Preface 0] Preface</TITLE>
<meta name="author" content="Shishir Gundavaram">
<meta name="date" content="Mon Mar 17 13:18:39 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="cgi programming">
<meta name="title" content="CGI Programming on the World Wide Web">
<!-- JavaScript: pathcont.js -->

</HEAD>
<body bgcolor="#FFFFFF" text="#000000">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="CGI Programming on the World Wide Web"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top>&nbsp;</td>
<td width=171 align=center valign=top><b>Preface</b></td>
<td width=172 align=right valign=top><a href="ch00_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<h1 class=preface><a class="TITLE" name="CGI-CHP-0">Preface</A></H1>

<div class=htmltoc>

<p>
<b>Contents:</b><br>
What's in the Book<br>
<a href="ch00_02.htm">What You Are Expected to Know Before Reading</A><br>
<a href="ch00_03.htm">Organization of This Book</A><br>
<a href="ch00_04.htm">Conventions in This Book</A><br>
<a href="ch00_05.htm">Acknowledgments</A><br>

</DIV>

<p class=para>
The Common Gateway Interface (CGI) emerged as the first way
to present dynamically generated information on the World Wide Web.
CGI allows the computer to generate Web pages instantly at the user's
request rather than being written by someone in advance. And at
the time of this writing, it remains the only stable and well-understood
method for creating such pages. Java presents problems that have
not yet been solved. Other products are currently just in the announcement
stage.

<p class=para>
CGI is fun. You can get a kick out of writing scripts that
perform tricks for you, and the users enjoy the spice the scripts
add to your Web pages. But CGI has a serious side too: It lets the
Internet offer the kind of interactive, user-driven applications
that modern computer users have come to expect. CGI opens up an
entire class of modern applications to the Web.

<p class=para>
Today's computer users expect custom answers to particular
questions. Gone are the days when people were satisfied by the computing
center staff passing out a single, general report to all users.
Instead, each salesperson, manager, and engineer wants to enter
specific queries and get up-to-date responses. And if a single computer
can do that, why not the Web?

<p class=para>
This is the promise of CGI. You can display sales figures
for particular products month by month, as requested by your staff,
using beautiful pie charts or plots. You can let customers enter
keywords in order to find information on your products. You can
also offer day-to-day conveniences, like collecting comments from
users, offering them searches through your archives, and letting
them sign your guestbook.

<div class=sect1>
<h2 class=sect1><a class="TITLE" name="CGI-CHP-0-SECT-1">0.1 What's in the Book</A></h2>

<p class=para>
So, on to the book. What will you encounter here? A variety
of powerful applications that you can use and that will serve as
models for your own CGI scripts. Among the complete applications
in the book are an animated clock, a search tool, a survey, a quiz
program, a game, a gateway to Usenet News, and an appointment calendar
based on a clickable imagemap.

<p class=para>
If you want to set up your own database and can't afford a
commercial product like Oracle, you can use the Sprite extension
to Perl that I wrote. Sprite offers a subset of SQL commands with
a flat file as the database. I also offer a debugging program called
CGI Lint, and a program that lets you write and parse extensions
to HTML. I wrote the latter program to support
my quiz application, but you can adapt it to other purposes without
much trouble. <a href="appe_01.htm">Appendix E, <i>Applications, Modules, Utilities, and Documentation</i></A>, lists where you can get Sprite
and CGI Lint.

<p class=para>
But the most important tool I hope to give you is not any
particular program, but a thorough understanding of CGI's potential
and how to invoke it. The ideas in these programs should become
yours for any purpose you want, no matter what operating system
or language you use. The old adage about "teaching someone how to
fish" may no longer be politically correct, in a world of dangerously
depleted fish stocks, but the metaphor describes what I want to
do. The techniques I show in this book are fundamental CGI practices:
passing information between client (browser) and server, interacting
with databases through SQL, generating graphics, writing gateways
to existing programs, and storing information while handling multiple
forms.

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top>&nbsp;</td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch00_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>&nbsp;</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>What You Are Expected to Know Before Reading</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
