<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Appendix C] CGI Modules for Perl 5</TITLE>
<meta name="author" content="Shishir Gundavaram">
<meta name="date" content="Mon Mar 17 13:38:40 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="cgi programming">
<meta name="title" content="CGI Programming on the World Wide Web">
<!-- JavaScript: pathcont.js -->

</HEAD>
<body bgcolor="#FFFFFF" text="#000000">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="CGI Programming on the World Wide Web"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="appb_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Appendix C</b></td>
<td width=172 align=right valign=top><a href="appc_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<h1 class=appendix><a class="TITLE" name="CGI-APP-C">CGI Modules for Perl 5</A></H1>

<div class=htmltoc>

<p>
<b>Contents:</b><br>
Overview of Modules<br>
<a href="appc_02.htm">Form Creation and Parsing</A><br>

</DIV>

<p class=para>
If
you are tired of writing code to create forms, decoding form information,
or maintaining state between multiple forms, you can make your life
easier by using the freely available CGI modules for Perl 5. However,
unless you are familiar with programming, it will be difficult to
fully grasp how these modules work internally.

<div class=sect1>
<h2 class=sect1><a class="TITLE" name="CGI-APP-C-SECT-1">C.1 Overview of Modules</A></h2>

<p class=para>
First, here is a list of the available modules. We will look
at an example that incorporates the functionality from some of these
modules shortly.

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="CGI-APP-C-SECT-1.1">Base.pm</A></h3>

<p class=para>
This is the core module that contains common methods (i.e.,
functions) that some of the other classes depend on. These include
methods to read form information (the module does not parse or decode
the data), log debug messages, implement socket I/O for maintaining
state, and access and manipulate data from environment variables,
such as the client's acceptable MIME content
types.

<p class=para>
If you are familiar with object-oriented programming, <i class=emphasis>Base.pm</I>
represents the base class, from which other classes "inherit" methods
and data structures. The "child" classes can override the methods
from the base class to create modified functions, or implement new
ones.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="CGI-APP-C-SECT-1.2">BasePlus.pm</A></h3>

<p class=para>
This module consists of functions to handle the new multipart
forms generated by "file upload"-a feature new to Netscape 2.0.
The file upload feature allows users to send files on their local
machines as part of a form. This is a very powerful feature, but
decoding the data can be a hassle. So, you should use either this
module or the <i class=emphasis>CGI_Lite</I> module to handle multipart
forms.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="CGI-APP-C-SECT-1.3">Request.pm</A></h3>

<p class=para>
You can parse and decode form and query data with this module.
That's all there is to it!

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="CGI-APP-C-SECT-1.4">Form.pm</A></h3>

<p class=para>
Have you ever wished you could create forms much more quickly
and easily than outputting a series of HTML tags?
If so, the Form module is the one for you! You no longer have to
remember how to create a radio button or a scrolled down list.

<p class=para>
In addition, this module allows you to easily decode and parse
form and query data. The functions responsible for this are inherited
from the <i class=emphasis>Base.pm</I> and <i class=emphasis>Request.pm</I>
modules.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="CGI-APP-C-SECT-1.5">MiniSvr.pm</A></h3>

<p class=para>
With this module, you can implement a "mini HTTP
daemon" which can be forked from a CGI application to maintain state
between multiple form invocations. The daemon sits on a port with
a relatively short timeout, waiting for a request. It then serves
the request and terminates. Now, imagine what will happen to your
host machine if the rate of process creation (i.e., forking) exceeds
that of termination.

<p class=para>
You need to be careful when using this module to maintain
state, as it creates multiple processes to handle requests. If the
rate of process creation exceeds that of termination, your server
will become overloaded and may result in serious problems.

<p class=para>
However, this module can be very helpful if used correctly,
as all socket I/O is handled by the module so that you don't have
to worry about such things as choosing the correct port number,
establishing the socket, or reading from the socket.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="CGI-APP-C-SECT-1.6">Response.pm</A></h3>

<p class=para>
Though not a part of the official CGI module distribution
at the time of this writing, this module contains functions that
make it easier to output HTML headers. For example,
if you don't want a document to be cached, you can call a method
that will automatically output the <i class=command>Pragma</i> and
<i class=command>Expires</i> headers for you.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="CGI-APP-C-SECT-1.7">Carp.pm</A></h3>

<p class=para>
This module is independent, in that it does not inherit any
functionality from the base class. However, it is a very useful
module that allows you to format error messages sent to the server
log file or redirect them to the browser or another file.

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="appb_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="appc_02.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Summary of Regular Expressions</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Form Creation and Parsing</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
