<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 11] 11.3 Introduction to Imagemaps</TITLE>
<meta name="author" content="Shishir Gundavaram">
<meta name="date" content="Mon Mar 17 13:36:13 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="cgi programming">
<meta name="title" content="CGI Programming on the World Wide Web">
<!-- JavaScript: pathcont.js -->

</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="CGI Programming on the World Wide Web"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 11</b></td>
<td width=172 align=right valign=top><a href="ch11_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="CGI-CHP-11-SECT-3">11.3 Introduction to Imagemaps</A></h2>

<p class=para>
You've
almost certainly seen imagemaps on your trips across the Web. They
are pictures with different parts that you can click, and each part
takes you to a different URL. Imagemaps let web sites offer pictorial
melanges where you can select where you want to go, as an alternative
to presenting a boring list of text items.

<p class=para>
In this
book, the imagemap is generated and interpreted within the program.
But you should probably see how most people use conventional imagemaps.
They start with a crisp graphic image (preferably GIF, as it is
more portable than JPEG). Once they select an
image, they must define various hotspots (or areas where users can
click), and identify them in an imagemap file in the following format:

<div class=screen>
<p>
<pre>
	shape URL coordinate1, coordinate2, ... coordinaten
</PRE>
</DIV>

<p class=para>
where <i class=emphasis>shape</I> can be "circle," "poly,"
or "rect"; <i class=command>URL</i> is the file you want to display
in response to the user's click; and the coordinates are measured
in pixels. Programs exist to help you determine the coordinates
of the regions you want to mark within an image. Here is an example
of an imagemap file (the following applies to the NCSA
server only):

<div class=screen>
<p>
<pre>
default http://my.company.com
rect http://some.machine.com 0, 0, 50, 50
poly http://www.machine.com/graphic.gif 100, 120, 230, 250, 320, 75
circle http://their.machine.com/circle.gif 100, 100, 150, 150, 100 
</PRE>
</DIV>

<p class=para>
The next step is
to edit the <i class=emphasis>imagemap.conf</I> configuration file
and add an entry like the following:[1]

<blockquote class=footnote>
<p class=para>[1] 
Modern versions
of the NCSA HTTPd server no longer use the <i class=filename>imagemap.conf</i>
file. You can pass the map file as extra path information to the
imagemap program directly, like so:
<div class=screen>
<p>
<pre>
&lt;A HREF="/cgi-bin/imagemap/graphics/dragon.map"&gt;
&lt;IMG SRC="/graphics/dragon.gif" ISMAP&gt;
</PRE>
</DIV>

where the map
file (<i class=filename>dragon.map</i>) is stored in the <i class=filename>/graphics</i>
directory. Note that this is a virtual path.
</blockquote>
<div class=screen>
<p>
<pre>
	dragon: /graphics/dragon.map
</PRE>
</DIV>

<p class=para>
The
first part of this statement is the name of the imagemap, while
the second part is the relative path to the imagemap data file.
Now, the imagemap is all but set up. The only step that needs to
be performed is to add the appropriate HTML in
a document to access the imagemap:

<div class=screen>
<p>
<pre>
	&lt;A HREF="/cgi-bin/imagemap/dragon"&gt;&lt;IMG SRC="/graphics/dragon.gif" ISMAP&gt;&lt;/A&gt;
</PRE>
</DIV>

<p class=para>
When
the user clicks on a point in the image, the client sends the coordinates
as query information, and the imagemap name as an extra path to
the imagemap CGI program (which comes with most servers). Here is
what a typical HTTP client request might look
like:

<div class=screen>
<p>
<pre>
	GET /cgi-bin/imagemap/dragon?53,87
</PRE>
</DIV>

<p class=para>
First, the CGI program reads the imagemap configuration file,
in order to determine the imagemap data file for the clicked image.
It then opens the data file and determines the appropriate URL to
access. This is a very inefficient process, as two separate files
have to be opened. As a result, many webmasters do not allow users
to set up imagemaps.

<p class=para>
While this should be enough information
to get you started with imagemaps, we will do something much more
efficient and fun in our last example-we'll generate the imagemap
without using auxiliary files.

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch11_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch11_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Game of Concentration</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Calendar Manager</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
