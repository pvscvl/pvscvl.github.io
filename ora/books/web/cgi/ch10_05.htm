<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 10] 10.5 Checking Hypertext (HTTP) Links</TITLE>
<meta name="author" content="Shishir Gundavaram">
<meta name="date" content="Mon Mar 17 13:34:57 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="cgi programming">
<meta name="title" content="CGI Programming on the World Wide Web">
<!-- JavaScript: pathcont.js -->

</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="CGI Programming on the World Wide Web"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch10_04.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 10</b></td>
<td width=172 align=right valign=top><a href="ch10_06.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="CGI-CHP-10-SECT-5">10.5 Checking Hypertext (HTTP) Links</A></h2>

<p class=para>
If
you look back at the guestbook example in <a href="ch07_01.htm">Chapter 7, <i>Advanced Form Applications</i></A>,
you will notice that one of the fields asked for the user's HTTP
server. At that time, we did not discuss any methods to check if
the address given by the user is valid. However, with our new knowledge
of sockets and network communication, we can, indeed, determine
the validity of the address. After all, web servers have to use
the same Internet protocols as everyone else; they posses no magic.
If we open a TCP/IP socket connection to a web server, we can pass
it commands it recognizes, just as we passed a command to the <i class=emphasis>finger</I>
daemon (server). Before we go any further, here is a small snippet
of code from the guestbook that outputs the user-specified URL:

<div class=screen>
<p>
<pre>
        if ($FORM{'www'}) {
            print GUESTBOOK &lt;&lt;End_of_Web_Address;
&lt;P&gt;
$FORM{'name'} can also be reached at:
&lt;A HREF="$FORM{'www'}"&gt;$FORM{'www'}&lt;/A&gt;
End_of_Web_Address
        }
</PRE>
</DIV>

<p class=para>
Here is a subroutine that utilizes the socket library to check
for valid 
URL addresses. It takes one argument,
the URL to check.

<div class=screen>
<p>
<pre>
sub check_url 
{
    local ($url) = @_;
    local ($current_host, $host, $service, $file, $first_line);
    if (($host, $service, $file) = 
        ($url =~ m|http://([^/:]+):{0,1}(\d*)(\S*)$|)) {
</PRE>
</DIV>

<p class=para>
This regular expression parses the specified URL and retrieves
the hostname, the port number (if included), and the file.


<p>
<img align=middle webstripindex.htmlperattrwas="src" webstripperlinkwas="http://rtfm.vn.ua/prog/perl/orb/books/web/cgi/figs/cgi1001.gif" alt="[Graphic: Figure from the text]" width=470 height=368>

<p class=para>
Let's continue with the program:

<div class=screen>
<p>
<pre>
        chop ($current_host = `\bin\hostname`);
        $host = $current_host  if ($host eq "localhost");
        $service = "http"      unless ($service);
        $file = "/"            unless ($file);
</PRE>
</DIV>

<p class=para>
If the hostname is given as "localhost", the current hostname
is used. In addition, the service name and the file are set to "http",
and "/", respectively, if no information was specified for these
fields.

<div class=screen>
<p>
<pre>
        &amp;open_connection (HTTP, $host, $service) || return (0);   
        print HTTP "HEAD $file HTTP/1.0", "\n\n";
</PRE>
</DIV>

<p class=para>
A socket is created, and a connection is attempted to the
remote host. If it fails, an error status of zero is returned. If
it succeeds, the HEAD command is issued to the
HTTP server. If the specified document exists,
the server returns something like this:

<div class=screen>
<p>
<pre>
HTTP/1.0 200 OK
Date: Fri Nov  3 06:09:17 1995 GMT
Server: NCSA/1.4.2
MIME-version: 1.0
Content-type: text/html
Last-modified: Sat Feb  4 17:56:33 1995 GMT
Content-length: 486
</PRE>
</DIV>

<p class=para>
All
we are concerned about is the first line, which contains a status
code. If the status code is 200, a success status of one is returned.
If the document is protected, or does not exist, error codes of
401 and 404, respectively, are returned (see <a href="ch03_01.htm">Chapter 3, <i>Output from the Common Gateway Interface</i></A>). Here
is the code to check the status:

<div class=screen>
<p>
<pre>
        chop ($first_line = &lt;HTTP&gt;);
        if ($first_line =~ /200/) {
            return (1);
        } else {
            return (0);
        }
        close (HTTP);
    } else {
        return (0);
    }
}
</PRE>
</DIV>

<p class=para>
This is how you would use this subroutine in the guestbook:

<div class=screen>
<p>
<pre>
        if ($FORM{'www'}) {
            &amp;check_url ($FORM{'www'}) ||
                &amp;return_error (500, "Guestbook File Error",
                "The specified URL does not exist. Please enter a valid URL.");
            print GUESTBOOK &lt;&lt;End_of_Web_Address;
&lt;P&gt;
$FORM{'name'} can also be reached at:
&lt;A HREF="$FORM{'www'}"&gt;$FORM{'www'}&lt;/A&gt;
End_of_Web_Address
        }
</PRE>
</DIV>

<p class=para>
Now, let's look at an example that creates a gateway to the
Archie server using pre-existing client software.

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch10_04.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch10_06.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Socket Library</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Archie</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
