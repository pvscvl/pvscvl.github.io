<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 3] 3.3 HTML Tags</TITLE>
<meta name="author" content="Chuck Musciano and Bill Kennedy">
<meta name="date" content="Mon Mar 17 08:52:31 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="HTML">
<meta name="title" content="HTML: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="HTML: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch03_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 3</b></td>
<td width=172 align=right valign=top><a href="ch03_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="USING-HTML-CH03-SECT-3">3.3 HTML Tags</A></h2>

<p class=para>
For the most part, HTML document tags are simple to
understand and use since they are made up of common words,
abbreviations, and notations. For instance, the <tt>&lt;i&gt;</TT>
and <tt>&lt;/i&gt;</TT> tags tell the browser to respectively start
and stop italicizing the text characters that come between
them. Accordingly, the syllable ``simp'' in our barebones
HTML example would appear italicized on a browser
display.
<p class=para>
 The HTML standard and its various
extensions define how and where you place tags within a
document. Let's take a closer look at that syntactic sugar that holds
together all HTML documents.

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH03-SECT-3.1">The Syntax of a Tag</A></h3>

<p class=para>
<a name="CH03.TAGSYNTAX"></A><a name="CH03.ATTRIBUTES"></A>Every HTML tag consists of a tag
<i class=emphasis>name</I>, sometimes followed by an optional list of
tag <i class=emphasis>attributes</I>, all placed between opening and
closing brackets (&lt; and &gt;). The
simplest tag is nothing more than a name appropriately enclosed in
brackets, such as <tt>&lt;head&gt;</TT> and
<tt>&lt;i&gt;</TT>. More complicated tags have attributes, which may
have specific values that are defined by the document author; others
modify the behavior of the tag.
<p class=para>
 
Tag and attribute names are not case sensitive. There's no
difference in effect between <tt>&lt;head&gt;</TT>,
<tt>&lt;Head&gt;</TT>, <tt>&lt;HEAD&gt;</TT>, or even
<tt>&lt;HeaD&gt;</TT>; they are all equivalent. The values that you
assign to a particular attribute may be case sensitive, however,
depending on your browser and server. In particular, file location and
name references--universal resource locators
(URLs)--are case sensitive. <i class=emphasis>[URLs, <a href="ch06_02.htm">6.2</A>]</I>
<p class=para>
Tag attributes, if any, belong after the tag name, each separated by
one or more tab, space, or return characters. Their order of
appearance is not important.

<p class=para>
A tag attribute's value, if any, follows an equal sign
(=) after the attribute name. You may include spaces around the equal
sign, so that width=6, width = 6, width
=6, and width= 6 all mean
the same. For readability, however, we prefer not to include
spaces. That way, it's easier to pick out an attribute/value pair
from a crowd of pairs in a lengthy tag.
<p class=para>
If an attribute's value is a single word or number (no spaces), you may
simply add it after the equal sign. All other values should be
enclosed in single or double quotes, especially those values that
contain several words separated by spaces. The length of the value is
limited to 1024 characters.
<p class=para>
Most browsers are tolerant of how tags are punctuated and broken
across lines. Nonetheless, avoid breaking tags across lines in your
source document whenever possible. This rule promotes readability and
reduces potential errors in your HTML documents.
</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH03-SECT-3.2">Sample Tags</A></h3>

<p class=para>
Here are some tags with attributes:
<div class=screen>
<p>
<pre>
<tt>&lt;a href="http://www.ora.com/catalog.html"&gt;</TT>
<tt>&lt;ul compact&gt;</TT>
<tt>&lt;input name=filename size=24 maxlength=80&gt;</TT>
<tt>&lt;link title="Table of Contents"&gt;</TT>
</PRE>
</DIV>

<p class=para>
The first example is the <tt>&lt;a&gt;</TT> tag for a hyperlink to
O'Reilly &amp; Associates' World Wide Web-based catalog of
products. It has a single attribute, href, followed by the catalog's address in
cyberspace--its URL.
<p class=para>
 The second example shows a tag that formats text into an
unordered list of items. Its single attribute--compact, which limits the space between list
items--does not require a value.
<p class=para>
 The third example shows a tag with multiple attributes,
each with a value that does not require enclosing quotes.
<p class=para>
The last example shows proper use of enclosing quotes when the
attribute value is more than one word long.
<p class=para>
 Finally, what is not immediately evident in these
examples is that while attribute names are not case sensitive
(href works the same as HREF and HreF), attribute values mostly are case
sensitive. The value <tt class=literal>filename</tt> for the name attribute in the
<tt>&lt;input&gt;</TT> tag example is not the same as the value
<tt class=literal>Filename</tt>, for instance.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH03-SECT-3.3">Starting and Ending Tags</A></h3>

<p class=para>
<a name="CH03.SAETAGS1"></A><a name="CH03.SAETAGS2"></A>We alluded earlier to the fact that most HTML tags have a beginning
and an end and affect the portion of text in between. That enclosed
text segment may be large or small, from a single text character,
syllable, or word, such as the italicized ``simp'' syllable
in our barebones example, to the <tt>&lt;html&gt;</TT> tag that bounds the entire
document. The starting component of any tag is the tag name and its
attributes, if any. The corresponding ending tag is the tag name
alone, preceded by a forward slash (/). Ending tags have
no attributes.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH03-SECT-3.4">Proper and Improper Nesting</A></h3>

<p class=para>
Tags can be put inside the affected segment of another tag (nested)
for multiple tag effects on a single segment of the
HTML document. For example, a portion of the
following text is both emboldened and included as part of an anchor
defined by the <tt>&lt;a&gt;</TT> tag:

<div class=screen>
<p>
<pre>
<tt>&lt;body&gt;</TT>
This is some text in the body, with a
<tt>&lt;a href="another_doc.html"&gt;</TT>link, a portion of which
is <tt>&lt;b&gt;</TT>set in bold<tt>&lt;/b&gt;</TT><tt>&lt;/a&gt;</TT>
<tt>&lt;/body&gt;</TT>
</PRE>
</DIV>

<p class=para>
According to the HTML standard, you must end nested
tags starting with the most recent one and work your way back out. For
instance in the example, we end the bold tag (<tt>&lt;/b&gt;</TT>)
before ending the link tag (<tt>&lt;/a&gt;</TT>) since we started in
the reverse order: <tt>&lt;a&gt;</TT> tag first, then
<tt>&lt;b&gt;</TT> tag. It's a good idea to follow that standard,
even though most browsers don't absolutely insist you do so. You may
get away with violating this nesting rule for one browser, sometimes
even with all current browsers. But eventually a new browser version
won't allow the violation and you'll be hard pressed to straighten out
your source HTML document.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH03-SECT-3.5">Tags Without Ends</A></h3>

<p class=para>
According to the HTML standard, only a few tags do
not have an ending tag. For example, the <tt>&lt;br&gt;</TT> tag
causes a line break; it has no effect otherwise on the subsequent
portion of the document and, hence, does not need an ending tag.

<p class=para>
The standard HTML tags that do not have corresponding ending tags are:
<tt>&lt;base&gt;</TT>, <tt>&lt;br&gt;</TT>, <tt>&lt;dd&gt;</TT>, <tt>&lt;dt&gt;</TT>, <tt>&lt;hr&gt;</TT>, <tt>&lt;img&gt;</TT>, <tt>&lt;input&gt;</TT>, <tt>&lt;isindex&gt;</TT>, <tt>&lt;li&gt;</TT>, <tt>&lt;link&gt;</TT>, <tt>&lt;meta&gt;</TT>, <tt>&lt;nextid&gt;</TT>, and <tt>&lt;option&gt;</TT>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH03-SECT-3.6">Omitting Tags</A></h3>

<p class=para>
You often see documents in which the author seemingly has forgotten to
include many ending tags in apparent violation of the
HTML standard. But your browser doesn't complain,
and the documents displays just fine. What gives? The
HTML standard lets you omit certain tags or their
endings for clarity and ease of preparation. The
HTML standard writers didn't intend the language to
be tedious.
<p class=para>
 For example, the <tt>&lt;p&gt;</TT> tag that defines
the start of a paragraph has a corresponding end tag
<tt>&lt;/p&gt;</TT>, but the <tt>&lt;/p&gt;</TT> ending tag rarely
is used. In fact, many HTML authors don't even know
it exists! <i class=emphasis>[<tt>&lt;p&gt;</TT>, <a href="ch04_01.htm">4.1.2</A>]</I>
<p class=para>
 Rather, the HTML standard lets you
omit a starting tag or ending tag whenever it can be unambiguously
inferred by the surrounding context. Many browsers make good guesses
when confronted with missing tags, leading the document author to
assume that a valid omission was made. When in doubt, add the ending
tag: it'll make life easier for yourself, the browser, and anyone
else who might need to modify your document in the future.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH03-SECT-3.7">Ignored or Redundant Tags</A></h3>

<p class=para>
Browsers sometimes ignore tags. This usually happens with redundant
tags whose effects merely cancel or substitute for themselves. The
best example is a series of <tt>&lt;p&gt;</TT> tags, one after the
other with no intervening text. Unlike the similar series of repeating
return characters in a text-processing document, most browsers skip to
a new line only once. The extra <tt>&lt;p&gt;</TT> tags are
redundant and usually ignored by the browser.
<p class=para>
In addition, most browsers ignore any tag that they don't understand
or that was incorrectly specified by the document author. Browsers
habitually forge ahead and make some sense of a document, no matter
how badly formed and error-ridden it may be. This isn't just a tactic
to overcome errors, it's also an important strategy for
extensibility. Imagine how much harder it would be to add new features
to the language if the existing base of browsers choked on them.
<p class=para>
 
The thing to watch out for with nonstandard tags that
aren't supported by most browsers is their enclosed contents, if
any. Browsers that recognize the new tag may process those contents
differently than those that don't support the new tag. For example,
Internet Explorer supports a <tt>&lt;comment&gt;</TT> tag whose
contents serve to document the source HTML and are
not intended to be viewed by the user. However, none of
the other browsers recognize the <tt>&lt;comment&gt;</TT> tag and
render its contents on the user's screen, effectively defeating the
tag's purpose besides ruining the document's appearance. <i class=emphasis>[<tt>&lt;comment&gt;</TT>, <a href="ch03_04.htm">3.4.3</A>]</I>
</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch03_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch03_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Structure of an HTML Document</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Document Content</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
