<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 8] 8.3 Multiline Text Areas</TITLE>
<meta name="author" content="Chuck Musciano and Bill Kennedy">
<meta name="date" content="Mon Mar 17 09:01:00 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="HTML">
<meta name="title" content="HTML: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="HTML: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch08_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 8</b></td>
<td width=172 align=right valign=top><a href="ch08_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="USING-HTML-CH08-SECT-3">8.3 Multiline Text Areas</A></h2>

<p class=para>
<a name="CH08.MULTILINE1"></A><a name="CH08.MULTILINE2"></A><a name="CH08.MULTILINE3"></A>The conventional and hidden-text types for forms restrict user input
to a single line of characters. The <tt>&lt;textarea&gt;</TT> form
tag sets users free.

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH08-SECT-3.1">The <tt>&lt;textarea&gt;</TT> Tag</A></h3>

<p class=para>
<a name="CH08.MULTILINE4"></A><a name="CH08.MULTILINE5"></A>The <tt>&lt;textarea&gt;</TT> tag creates a multiline text-entry
area in the user's browser display. In it, the user may type a
nearly unlimited number of lines of text. Upon submission of the form,
the browser collects all the lines of text, each separated by
``<tt class=literal>%0D%0A</tt>'' (carriage return/line feed),
and sends them to the server as the value of this form element, using
the name specified by the required name attribute.

<div class=sidebar>
<p class=sidebar><blockquote><tt>&lt;textarea&gt;</TT>

<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>Function:</I><dd>

<p class=para>
Create a multiline text input area

<p>
<dt class=varlistentry><i class=emphasis>Attributes:</I><dd>COLS, NAME, ROWS, and WRAP (Extension)

<p>
<dt class=varlistentry><i class=emphasis>End tag:</I><dd>

<p class=para>
<tt>&lt;/textarea&gt;</TT>; never omitted

<p>
<dt class=varlistentry><i class=emphasis>Contains:</I><dd>

<p class=para>
<tt class=replaceable><i>plain_text</i></tt>

<p>
<dt class=varlistentry><i class=emphasis>Used in:</I><dd>

<p class=para>
<tt class=replaceable><i>form_content</i></tt></DL>
</BLOCKQUOTE><p>
</DIV>

<p class=para>
You may include plain text inside the <tt>&lt;textarea&gt;</TT> tag
and its end tag. That default text must be plain text--no
tags or other special HTML elements. The contents
may be modified by the user, and the browser uses that text as the
default value if the user presses a reset button for the form. Hence,
the text content is most often included for instructions and examples:

<p class=para>
<div class=screen>
<p>
<pre>
Tell us about yourself: 
&lt;textarea name=address cols=40 rows=4&gt;
  Your Name Here
  1234 My Street
  Anytown, State Zipcode
&lt;/textarea&gt;
</PRE>
</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="USING-HTML-CH08-SECT-3.1.1">The rows and cols attributes</A></h4>

<p class=para>
A multiline text-input area stands alone onscreen: body content flows
above and below, but not around it. You can control its dimensions,
however, by defining the cols and
rows attributes for the visible
rectangular area set aside by the browser for multiline input. We
suggest you do set these attributes. The common browsers have a habit
of setting aside the smallest, least readable region possible for
<tt>&lt;textarea&gt;</TT> input, and the user can't resize
it. Both attributes require integer values for the respective
dimension's size in characters. The browser automatically
scrolls text that exceeds either dimension.

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="USING-HTML-CH08-SECT-3.1.2">The wrap attribute</A></h4>

<p class=para>
Normally, text typed in the text area by the user is transmitted to
the server exactly as typed, with lines broken only where the user
pressed the Enter key. Since this is often not the desired action by
the user, you can enable word wrapping within the text area. When the
user types a line that is longer than the width of the text area, the
browser automatically moves the extra text down to the next line,
breaking the line at the nearest point between words in the line.

<p class=para>
With the wrap attribute set to
<tt class=literal>virtual</tt>, the text is wrapped within the text area
for presentation to the user, but the text is transmitted to the
server as if no wrapping had occurred, except where the user pressed
the Enter key.

<p class=para>
With the wrap attribute set to
<tt class=literal>physical</tt>, the text is wrapped within the text area
and is transmitted to the server as if the user had actually typed it
that way. This the most useful way to use word wrap, since
the text is transmitted exactly as the user sees it in the text area.

<p class=para>
To obtain the default action, set the wrap
attribute to <tt class=literal>off</tt>.

<p class=para>
As an example, consider the following sixty characters of text being
typed into a 40-character-wide text area:

<p class=para>
<div class=screen>
<p>
<pre>
Word wrapping is a feature that makes life easier for users
</PRE>
</DIV>

<p class=para>
With wrap=off, the text area will
contain one line and the user will have to scroll to the right to see
all of the text. One line of text will be transmitted to the server.

<p class=para>
With wrap=virtual, the text area
will contain two lines of text, broken after the word "makes." Only
one line of text will be transmitted to the server: the entire line
with no embedded newline characters.

<p class=para>
With wrap=physical, the text area
will contain two lines of text, broken after the word "makes." Two
lines of text will be sent to the server, separated by a newline
character after the word "makes."

</DIV>

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch08_02.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch08_04.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Form Input Elements</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Multiple Choice Elements</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
