<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 2] 2.7 Hyperlinks</TITLE>
<meta name="author" content="Chuck Musciano and Bill Kennedy">
<meta name="date" content="Mon Mar 17 08:51:39 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="HTML">
<meta name="title" content="HTML: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="HTML: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch02_06.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 2</b></td>
<td width=172 align=right valign=top><a href="ch02_08.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="USING-HTML-CH02-SECT-7">2.7 Hyperlinks</A></h2>

<p class=para>
<a name="CH02.HYPERLINKS"></A>
While text may be the meat and bones of an HTML
document, its heart is hypertext. Hypertext gives users the ability to
retrieve and display a different document in your own or someone
else's collection simply by a click of the mouse on an associated word
or phrase (<i class=emphasis>hyperlink</I>) in your
HTML document. Use these interactive hyperlinks to
help readers easily navigate and find information in yours and in
others' collections of otherwise separate documents in a variety of
formats, including multimedia, HTML, and plain
ASCII text. Hyperlinks literally bring the wealth
of knowledge on the whole Internet to the tip of the mouse pointer.
<p class=para>
 To include a hyperlink to some other document in your
own collection or on a server in Timbuktu, all you need to know is the
document's unique address and how to drop an
<i class=emphasis>anchor</I> into your HTML
document. <i class=emphasis>[anchors, <a href="#USING-HTML-CH02-SECT-7.2">2.7.2</A>]</I>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH02-SECT-7.1">URLs</A></h3>

<p class=para>
While it is hard to believe given the millions, perhaps billions, of
them out there, every document and resource on the Internet has a
unique address known as its universal resource locator
(URL; commonly pronounced
``you-are-ell''). A URL is comprised of
the document's name preceded by the hierarchy of directory names in
which the file is stored (<i class=emphasis>pathname</I>), the Internet
<i class=emphasis>domain name</I> of the server that hosts the file,
and the software and manner by which the browser and the document's
host server communicate to exchange the document
(<i class=emphasis>protocol</I>):

<div class=screen>
<p>
<pre>
<tt class=replaceable><i>protocol://server domain name/pathname</i></tt>
</PRE>
</DIV>

<p class=para>
Here are some sample URLs:

<div class=screen>
<p>
<pre>
http://www.kumquat.com/docs/catalog/price_list.hmtl
http:price_list.html
http://www.kumquat.com/
ftp://ftp.netcom.com/pub/
</PRE>
</DIV>

<p class=para>
The first example is what's known as an <i class=emphasis>absolute</I>
or complete URL. It includes every part of the
URL format--protocol, server, and the pathname
of the document.
<p class=para>
 While absolute URLs leave nothing to
the imagination, they can lead to big headaches when you move
documents to another directory or server. Fortunately, browsers also
let you use <i class=emphasis>relative</I> URLs and
automatically fill in any missing portions with respective parts from
the current document's <i class=emphasis>base</I>
URL. The second example is the simplest relative
URL of all; it assumes that the
<i class=filename>price_list.html</i> document is located on the same
server and in the same directory as the current document.
<p class=para>
 
Relative URLs are useful, too, if you
don't know a directory or document's name. The third
URL example, for instance, points to kumquat.com's Web home page.

<p class=para>
Although appearances may deceive, the last
FTP example URL actually is
absolute; it points directly at the contents of the
<i class=filename>/pub</i> directory.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH02-SECT-7.2">Anchors</A></h3>

<p class=para>

The anchor (<tt>&lt;a&gt;</TT>) tag is the HTML
feature for defining both the source and the destination of a
hyperlink.[5] 
You'll most often see and use the <tt>&lt;a&gt;</TT> tag
with its href attribute to define
a source hyperlink. The value of the attribute is the
URL of the destination.
<blockquote class=footnote>
<p class=para>[5] 
The nomenclature here is a bit unfortunate: the ``anchor''
tag should mark just a destination, not the jumping off point of a
hyperlink, too. You ``drop anchor''; you don't jump off
one. We won't even mention the atrociously confusing terminology the
HTML standard uses for the various parts of a
hyperlink except to say that someone got things all ``bass
ackwards.''
</blockquote>
<p class=para>
 The contents of the source <tt>&lt;a&gt;</TT>
tag--the words and/or images between it and its
<tt>&lt;/a&gt;</TT> end tag--is the portion of the
HTML document that is specially activated in the
browser display and that users select to take a hyperlink. These
<i class=emphasis>anchor</I> contents usually look different from
the surrounding content (text in a different color or underlined,
images with specially colored borders) and the mouse pointer icon
changes when passed over them. The <tt>&lt;a&gt;</TT> tag contents,
therefore, should be text or an image (icons are great) that
explicitly or intuitively tells users where the hyperlink will take
them. <i class=emphasis>[<tt>&lt;a&gt;</TT>, <a href="ch06_03.htm">6.3.1</A>]</I>
<p class=para>
 For instance, the browser will specially display and
change the mouse pointer when it passes over the ``Kumquat
Archive'' text in the following example:
<div class=screen>
<p>
<pre>
For more information on kumquats, visit our 
&lt;a href="http://www.kumquat.com/archive.html"&gt;
Kumquat Archive&lt;/a&gt;
</PRE>
</DIV>

<p class=para>
If the user clicks the mouse button on that text, the browser
automatically retrieves from the server www.kumquat.com a Web (http:) page stored there named
<i class=filename>archive.html</i>, and then displays it for the user.
</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH02-SECT-7.3">Hyperlink Names and Navigation</A></h3>

<p class=para>
Pointing to another document in some collection somewhere on the other
side of the world is not only cool, but it also supports your own
HTML documents. Yet the hyperlinks' chief duty is to
help users navigate your collection in their search for valuable
information. Hence, the concept of the home page and supporting
HTML documents has arisen.
<p class=para>
 None of your HTML documents should
run on and on. First, there's the performance issue: the value of your
work suffers, no matter how rich it is, if the document takes forever
to download, and if once retrieved, users must endlessly scroll up and
down through the display to find a particular section.
<p class=para>
Rather, design your work as a collection of several compact and
succinct pages, like chapters in a book, each focused to a particular
topic for quick selection and browsing by the user. Then use
hyperlinks to organize that collection.
<p class=para>
For instance, use your home page--the leading document of the
collection--as a master index full of brief descriptions and
respective hyperlinks to the rest of your collection. Also use the
special attribute of the <tt>&lt;a&gt;</TT> tag called 
name.
<p class=para>
 
Anchors with the name
attribute serve as internal hyperlink targets in your
HTML documents. Normally, the browser displays a
freshly downloaded document at the beginning. Name anchors let you
begin the display at the section of interest further
down. Simply include them anywhere they make sense as a hyperlink
target. They do not change the appearance of enclosed or surrounding
content.
<p class=para>
Thereafter, you may append the name, after a separating hash mark
(#), as a suffix in the URL of a hyperlink that
references that specific place in your document. For instance, to
reference a specific topic in an archive, such as ``Kumquat Stew
Recipes'' in our example Kumquat Archive, you mark that section
with a name anchor:
<div class=screen>
<p>
<pre>
... preceding content... 
&lt;a name="Stews"&gt; 
&lt;h3&gt;Kumquat Stew Recipes"&lt;/h3&gt;
&lt;/a&gt;
</PRE>
</DIV>

<p class=para>
In the same or another document, you prepare a source hyperlink that points
directly to those recipes by including the section's anchor name as a
suffix to the document's URL, separated by a hash
mark (#):
<div class=screen>
<p>
<pre>
For more information on kumquats, visit our 
&lt;a href="http://www.kumquat.com/archive.html"&gt;
  Kumquat Archive&lt;/a&gt;, 
and perhaps try one or two of our
&lt;a href="http://www.kumquat.com/archive.html#Stews"&gt; 
  Kumquat Stew Recipes&lt;/a&gt;.
</PRE>
</DIV>

<p class=para>
If selected by the user, the latter hyperlink causes the browser to
download the <i class=filename>archive.html</i> document and start the
display at our ``Stew'' anchor.
</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH02-SECT-7.4">Anchors Beyond HTML</A></h3>

<p class=para>
HTML hyperlinks are not limited to other
HTML documents. Anchors let you point to nearly any
type of document available over the Internet, including other Internet
services.
<p class=para>
 However, ``let'' and ``enable'' are
two different things. Browsers can manage the various Internet
services, like FTP and Gopher, so that users can
download non-HTML documents. They don't yet fully
or gracefully handle multimedia.
<p class=para>
 Today, there are few standards for the many types and
formats of multimedia. Computer systems connected to the Web vary
wildly in their abilities to display those sound and video
formats. Except for some graphics images, standard
HTML gives you no specific provision for display of
multimedia documents except the ability to reference one in an
anchor. The browser, which retrieves the multimedia document, must
activate a special <i class=emphasis>helper</I> application, download
and execute an associated <i class=emphasis>applet</I>, or have a
<i class=emphasis>plugin </I> accessory installed to decode and display
it for the user.
<p class=para>
 Although HTML and most Web browsers
currently avoid the confusion by sidestepping it, that doesn't mean
you can't or shouldn't exploit multimedia in your
HTML documents: just be aware of the
limitations.
</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch02_06.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch02_08.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>HTML and Text</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Images Are Special</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
