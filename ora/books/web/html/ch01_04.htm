<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 1] 1.4 HTML: What It Isn't</TITLE>
<meta name="author" content="Chuck Musciano and Bill Kennedy">
<meta name="date" content="Mon Mar 17 08:50:36 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="HTML">
<meta name="title" content="HTML: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="HTML: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch01_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 1</b></td>
<td width=172 align=right valign=top><a href="ch01_05.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="USING-HTML-CH01-SECT-4">1.4 HTML: What It Isn't</A></h2>

<p class=para>
With all its multimedia-enabling features and the hot technologies
that give life to HTML documents over the Internet,
it is important also to understand the language's limitations:
HTML is not a word processing tool, a desktop
publishing solution, or even a programming language, for that
matter. That's because its fundamental purpose is to define the
structure and appearance of documents and document families so that
they might be delivered quickly and easily to a user over a network
for rendering on a variety of display devices. Jack of all trades, but
master of none, so to speak.

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH01-SECT-4.1">Content Versus Appearance</A></h3>

<p class=para>
Before you can fully appreciate the power of the language and begin
creating effective HTML documents, you must
yield to its one fundamental rule: HTML is designed
to structure documents and make their content more accessible, not to
format documents for display purposes.

<p class=para>
HTML does provide many different ways to let you
define the appearance of your documents: font specifications, line
breaks, and preformatted text are all features of
HTML. And, of course, appearance is important since
it can have either detrimental or beneficial effects on how users
access and use the information in your HTML
documents.

<p class=para>
But with HTML, content is paramount; appearance is
secondary, particularly since it is less predictable given the variety
of browser graphics and text-formatting capabilities. Besides,
HTML contains many more ways for structuring your
document content without regard to the final appearance: section
headers, structured lists, paragraphs, rules, titles, and embedded
images are all defined by HTML without regard
for how these elements might be rendered by a browser.

<p class=para>
If you treat HTML as a document-generation tool,
you will be sorely disappointed in your ability to format your
document in a specific way. There is simply not enough capability
built into HTML to allow you to create the kind of
documents you might whip up with tools like FrameMaker or Microsoft
Word. Attempts to subvert the supplied structuring elements to achieve
specific formatting tricks seldom work across all browsers. In short,
don't waste your time trying to force HTML to do
things it was never designed to do.

<p class=para>
Instead, use HTML in the manner it was designed
for: indicating the structure of a document so that the browser can
then render its content appropriately. HTML is rife
with tags that let you indicate the semantics of your document
content, something that is missing from tools like Frame or
Word. Create your documents using these tags and you'll be happier,
your documents will look better, and your readers will benefit
immensely.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH01-SECT-4.2">Specific Limitations of HTML</A></h3>

<p class=para>
There are limits to the kinds of formatting and document structuring
HTML can provide. Extensions to the language remove
some of the restrictions imposed by HTML 2.0; other
limitations linger.

<p class=para>
Specifically, the features that do not exist in the
HTML 2.0 standard but are made possible by
extensions implemented by the various browser manufacturers, and are
generally considered part of HTML 3.2, include:

<p>
<ul class=itemizedlist>
<li class=listitem>Inline variation of font size

<p>
<li class=listitem>Mixed font attributes like bold and italic

<p>
<li class=listitem>Centered or right-justified text

<p>
<li class=listitem>Justifying images

<p>
<li class=listitem>Flowing text around figures and images

<p>
<li class=listitem>Tables

<p>
</UL>
<p class=para>
Those niceties that just aren't available in any version of
HTML are:

<p>
<ul class=itemizedlist>
<li class=listitem>Footnotes, end notes, automatic table of contents, or indices

<p>
<li class=listitem>Headers and footers

<p>
<li class=listitem>Tabs and other automatic character spacing

<p>
<li class=listitem>Nested numbered lists

<p>
<li class=listitem>Mathematical typesetting

<p>
</UL>
</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH01-SECT-4.3">Yielding to the Browser</A></h3>

<p class=para>
Many novice HTML authors try to get around these
limitations by taking careful note of how their browser displays the
contents of certain tags and then misusing those tags to achieve
formatting tricks. For example, some authors nest certain kinds of
lists several levels deep, not because they are actually creating
deeply nested lists, but because they want their text specially
indented.

<p class=para>
There are many different browsers running on many different computers
and they all do things differently. Even two different users using the
same browser version on their machines can reconfigure the software so
that the same HTML document will look completely
different. What looks fabulous on your personal browser can and often
does look terrible on other browsers.

<p class=para>
Yield to the browser. Let it format your document in whatever way it
deems best. Recognize that the browser's job is to present your
documents to the user in a consistent, usable way. Your job, in turn,
is to use HTML effectively to mark up your
documents so that the browser can do its job effectively. Spend less
time trying to achieve format-oriented goals. Instead, focus your
efforts on creating the actual document content and adding the
HTML tags to structure that content effectively.

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch01_03.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch01_05.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>HTML: What It Is</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Nonstandard Extensions</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
