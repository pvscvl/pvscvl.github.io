<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 2] 2.9 Lists, Searchable Documents, and Forms</TITLE>
<meta name="author" content="Chuck Musciano and Bill Kennedy">
<meta name="date" content="Mon Mar 17 08:51:44 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="HTML">
<meta name="title" content="HTML: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="HTML: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch02_08.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 2</b></td>
<td width=172 align=right valign=top><a href="ch02_10.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="USING-HTML-CH02-SECT-9">2.9 Lists, Searchable Documents, and Forms</A></h2>

<p class=para>
Thought we'd exhausted HTML text elements? Headers,
paragraphs, and line breaks are just the rudimentary
text-organizational elements of an HTML
document. The language also provides several advanced text-based
structures, including three types of lists, ``searchable''
documents, and forms. Searchable documents and forms go beyond text
formatting, too; they are a way to interact with your readers. Forms
let users enter text and click checkboxes and radio buttons to select
particular items and then send that information back to the
server. Once received, a special server application processes the
form's information and responds accordingly, e.g., filling a product
order or collecting data for a user survey.[7]
<blockquote class=footnote>
<p class=para>[7] 
The server-side programming required for processing
forms is beyond the scope of this book. We give some basic guidelines
in the appropriate chapters, but please consult the server
documentation and your server administrator for details.
</blockquote>
<p class=para>
 The HTML syntax for these special
features and their various attributes can get rather complicated;
they're not quick-start grist. So we mention them here and urge you to
read on for details in later chapters.
<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH02-SECT-9.1">Unordered, Ordered, and Definition Lists</A></h3>

<p class=para>
The three types of HTML lists match those we are
most familiar with: unordered, ordered, and definition
lists. An unordered list--one in which the order of items is not
important, such as a laundry or grocery list--gets bounded by
<tt>&lt;ul&gt;</TT> and <tt>&lt;/ul&gt;</TT> tags. Each item in
the list, usually a word or short phrase, is marked by the
<tt>&lt;li&gt;</TT> (list-item) tag and, when rendered, appears
indented from the left margin. The browser also typically precedes
each item with a leading bullet symbol. <i class=emphasis>[<tt>&lt;ul&gt;</TT>, <a href="ch07_01.htm">7.1.1</A>]</I> <i class=emphasis>[<tt>&lt;li&gt;</TT>, <a href="ch07_03.htm">7.3</A>]</I>
<p class=para>
 Ordered lists, bounded by the <tt>&lt;ol&gt;</TT> and
<tt>&lt;/ol&gt;</TT> tags, are identical in format to unordered
ones, including the <tt>&lt;li&gt;</TT> tag for marking list
items. However, the order of items is important--equipment
assembly steps, for instance. The browser accordingly displays each
item in the list preceded by an ascending number. <i class=emphasis>[<tt>&lt;ol&gt;</TT>, <a href="ch07_02.htm">7.2.1</A>]</I>
<p class=para>
 Definition lists are slightly more complicated than
unordered and ordered lists. Within a definition list's enclosing
<tt>&lt;dl&gt;</TT> and <tt>&lt;/dl&gt;</TT> tags, each list item
has two parts, each with a special tag: a short name or title,
contained within a <tt>&lt;dt&gt;</TT> tag, followed by its
corresponding value or definition, denoted by the
<tt>&lt;dd&gt;</TT> tag. When rendered, the browser usually puts the
item name on a separate line (although not indented), and the
definition, which may include several paragraphs, indented below
it. <i class=emphasis>[<tt>&lt;dl&gt;</TT>, <a href="ch07_07.htm">7.7.1</A>]</I>
<p class=para>
 The various types of lists may contain nearly any type
of content normally allowed in the body of the HTML
document. So, you can organize your collection of digitized family
photographs into an ordered list, for example, or put them into a
definition list complete with text
annotations. HTML even lets you put lists inside of
lists (nesting), opening up a wealth of interesting combinations.
</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH02-SECT-9.2">Searchable Documents</A></h3>

<p class=para>
The simplest type of user interaction provided by
HTML is the <i class=emphasis>searchable</I>
document.  You create a searchable HTML document by
including an <tt>&lt;isindex&gt;</TT> tag in its header or body. The
browser automatically provides some way for the user to type one or
more words into a text input box, and to pass those keywords to a
related processing application on the server. <i class=emphasis>[isindex, <a href="ch06_06.htm">6.6.1</A>]</I>
<p class=para>
The processing application on the server uses those keywords to do
some special task, such as perform a database search or match the
keywords against an authentication list to allow the user special
access to some other part of your document collection.
</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH02-SECT-9.3">Forms</A></h3>

<p class=para>
Obviously, searchable documents are very limited--one per
document and only one user input element. Fortunately,
HTML provides better, more extensive support
for collecting user input though <i class=emphasis>forms</I>.
<p class=para>
 You create one or more special form sections in your
HTML document, bounded with the
<tt>&lt;form&gt;</TT> and <tt>&lt;/form&gt;</TT> tags. Inside the
form, you may put predefined as well as customized text-input boxes
allowing for both single and multiline input. You may also insert
checkboxes and radio buttons for single- and multiple-choice
selections, and special buttons that work to reset the form or send
its contents to the server. Users fill out the form at their leisure,
perhaps after reading the rest of the document, and then click a
special send button that makes the browser send the form's data to the
server. A special server-side program you provide then processes the
form and responds accordingly, perhaps by requesting more information
from the user, modifying subsequent HTML documents
the server sends to the user, and so on. <i class=emphasis>[<tt>&lt;form&gt;</TT>, <a href="ch08_01.htm">8.1.1</A>]</I>
<p class=para>
 HTML forms provide everything you
might expect of an automated form, including input area labels,
integrated contents for instructions, default input values, and so
on--except automatic input verification; your server-side program
has to perform that function.
</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch02_08.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch02_10.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Images Are Special</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Beyond the HTML Standard</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
