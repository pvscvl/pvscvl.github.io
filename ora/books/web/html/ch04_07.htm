<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 4] 4.7 Precise Spacing and Layout</TITLE>
<meta name="author" content="Chuck Musciano and Bill Kennedy">
<meta name="date" content="Mon Mar 17 08:54:27 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="HTML">
<meta name="title" content="HTML: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="HTML: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch04_06.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 4</b></td>
<td width=172 align=right valign=top><a href="ch04_08.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="USING-HTML-CH04-SECT-7">4.7 Precise Spacing and Layout</A></h2>

<p class=para>
<a name="CH04.PRECISE"></A>Frankly, if you find yourself overly concerned with layout,
positioning, font styles, colors, and spacing of your text, you have
missed the fundamental concept of HTML. It's
designed for specifying document content without indicating
format. The tags in HTML delineate the structure
and semantics of a document, not how that document is to be presented
to the user. Word wrapping, character and line spacing, and other
presentation details are left to the browser. That way, the
document's content--its rich information, not good
looks--are what matter. Current and, in particular, future
browsers will present the document in ways that best suit the needs of
the user.

<p class=para>
Unfortunately, many people consider HTML to be a
primitive word-processing language whose arcane and incomplete text
formatting directives poorly dictate the final appearance of a
document. Using HTML in this fashion is frustrating
and pointless, serving neither the author nor the reader of the
document. If you find yourself using HTML in this
fashion, you should seriously reconsider your approach to document
creation for the World Wide Web.

<p class=para>
That said, there are certain occasions when explicitly interrupting
normal HTML text formatting makes sense. Besides,
HTML currently is the <i class=emphasis>only</I>
language of the World Wide Web. And, clearly, commercial advertising
and other forms of style-over-content, short-lived
HTML documents do need to have some control over
format. We're adamant, not fanatic.

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH04-SECT-7.1">The <tt>&lt;br&gt;</TT> Tag</A></h3>

<p class=para>
<a name="CH04.BRTAG1"></A><a name="CH04.BRTAG2"></A><a name="CH04.BRTAG3"></A><a name="CH04.BRTAG4"></A>
The <tt>&lt;br&gt;</TT> tag interrupts the normal line filling and
word wrapping of paragraphs within an HTML
document. It has no ending tag, but simply marks the point in the flow
where a new line should begin. Most browsers simply stop adding words
and images to the current line, move down and over to the left margin,
and resume filling and wrapping.

<div class=sidebar>
<p class=sidebar><blockquote><tt>&lt;br&gt;</TT>

<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>Function:</I><dd>

<p class=para>
Insert a line break into a text flow

<p>
<dt class=varlistentry><i class=emphasis>Attributes:</I><dd>

<p class=para>
CLEAR (extension)

<p>
<dt class=varlistentry><i class=emphasis>End tag:</I><dd>

<p class=para>
None

<p>
<dt class=varlistentry><i class=emphasis>Contains:</I><dd>

<p class=para>
Nothing

<p>
<dt class=varlistentry><i class=emphasis>Used in:</I><dd>

<p class=para>
<tt class=replaceable><i>text</i></tt></DL>
</BLOCKQUOTE><p>
</DIV>

<p class=para>
This effect is handy when formatting conventional text with fixed line
breaks, such as addresses, song lyrics, or poetry. Notice, for
example, the lyrical breaks when the following source is rendered by
Netscape (<a href="#USING-HTML-CH04-FIG-18">Figure 4-18</A>).

<div class=figure>
<h4 class=figure><a class="TITLE" name="USING-HTML-CH04-FIG-18">Figure 4-18: Give lyrics their breaks (<tt>&lt;br&gt;</TT>)</A></h4>


<p>
<img align=middle src="figs/uhtml0418.gif" alt="[Graphic: Figure 4-18]" width=500 height=200>

</DIV>

<div class=screen>
<p>
<pre>
<tt>&lt;h3&gt;</TT>
Heartbreak Hotel<tt>&lt;/h3&gt;</TT>
<tt>&lt;p&gt;</TT>
Ever since my baby left me<tt>&lt;br&gt;</TT>
I've found a new place to dwell.<tt>&lt;br&gt;</TT>
It's down at the end of lonely street<tt>&lt;br&gt;</TT>
Called <tt>&lt;cite&gt;</TT>Heartbreak Hotel<tt>&lt;/cite&gt;</TT>.
<tt>&lt;/p&gt;</TT>
</PRE>
</DIV>

<p class=para>
Also notice how the <tt>&lt;br&gt;</TT> tag causes text to simply
start a new line, while the browser, when encountering the
<tt>&lt;p&gt;</TT> tag, typically inserts some vertical space
between adjacent paragraphs. <i class=emphasis>[<tt>&lt;p&gt;</TT>, <a href="ch04_01.htm">4.1.2</A>]</I>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="USING-HTML-CH04-SECT-7.1.1">The clear attribute</A></h4>

<p class=para>

Normally, the <tt>&lt;br&gt;</TT> tag tells the browser to
immediately stop the current flow of text and resume at the left
margin of the next line or against the right border of a
left-justified inline graphic. Sometimes you'd rather the
current text flow resume below any images currently blocking
the left or right margins.

<p class=para>
Netscape and Internet Explorer provide that capability with the
clear attribute for the
<tt>&lt;br&gt;</TT> tag. It can have one of three values:
<tt class=literal>left</tt>, <tt class=literal>right</tt>, or
<tt class=literal>all</tt>, each related to one or both of the
margins. When the specified margin or both margins are clear of
images, the extended browser resumes the text flow.

<p class=para>
<a href="#USING-HTML-CH04-FIG-19">Figure 4-19</A> illustrates the effects of the
clear attribute when Netscape
renders the following HTML fragment:

<div class=screen>
<p>
<pre>
<tt>&lt;img src="http:kumquat.gif" align=left&gt;</TT>
This text should wrap around the image, flowing between the
image and the right margin of the document.
<tt>&lt;br clear=left&gt;</TT>
This text will flow as well, but will be below the image,
extending across the full width of the page. There will
be white space above this text and to the right of the
image.
</PRE>
</DIV>

<div class=figure>
<h4 class=figure><a class="TITLE" name="USING-HTML-CH04-FIG-19">Figure 4-19: Clearing images before resuming text flow after the <tt>&lt;br&gt;</TT> tag</A></h4>


<p>
<img align=middle src="figs/uhtml0419.gif" alt="[Graphic: Figure 4-19]" width=500 height=248>

</DIV>

<p class=para>
Inline HTML images are just that--normally in
 line with text, but usually only a single line of text. Additional
 lines of text flow below the image unless that image is specially
 aligned by right or left attribute values for the
 <tt>&lt;img&gt;</TT> tag. Hence, the clear attribute for the
 <tt>&lt;br&gt;</TT> tag only works in combination with a left- or
 right-aligned image. <i class=emphasis>[image alignment, <a href="ch05_02.htm">5.2.6.4</A>]</I>
<p class=para>
The following HTML code fragment illustrates how to use the <tt>&lt;br&gt;</TT> tag and its clear attribute as well as the extended browser's <tt>&lt;img&gt;</TT> extension attributes to place captions directly above, centered on the right, and below an image that is aligned against the left margin of the browser window 
(<a href="#USING-HTML-CH04-FIG-20">Figure 4-20</A>):

<div class=screen>
<p>
<pre>
Paragraph tags separate leading and following
text flow from the captions. 
<tt>&lt;p&gt;</TT>
I'm the caption on top of the image.
<tt>&lt;br&gt;</TT>
<tt>&lt;img src="kumquat.gif" align=absmiddle&gt;</TT>
This one's centered on the right.
<tt>&lt;br clear=left&gt;</TT>
This caption should be directly below the image.
<tt>&lt;p&gt;</TT>
And the text just keeps flowing along.... 
</PRE>
</DIV>

<div class=figure>
<h4 class=figure><a class="TITLE" name="USING-HTML-CH04-FIG-20">Figure 4-20: Captions placed on top, center-right, and below an image</A></h4>


<p>
<img align=middle src="figs/uhtml0420.gif" alt="[Graphic: Figure 4-20]" width=500 height=318>

</DIV>

<p class=para>
However, it is not easy to align a text caption directly above or
beneath a right-justified image because you cannot predict the exact
size of the browser window.

<p class=para>
You might also include a <tt>&lt;br clear=all&gt;</TT> tag just
 after an <tt>&lt;img&gt;</TT> tag that is at the very end of a
 section of your document. That way you ensure, at least with the
 extended browsers, that the subsequent section's text
 doesn't flow up and against that image and confuse the
 reader. <i class=emphasis>[<tt>&lt;img&gt;</TT>, <a href="ch05_02.htm">5.2.6</A>]</I>

</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH04-SECT-7.2">The <tt>&lt;nobr&gt;</TT> Tag</A></h3>

<p class=para>
<a name="CH04.NOBRTAG1"></A><a name="CH04.NOBRTAG2"></A><a name="CH04.NOBRTAG3"></A><a name="CH04.NOBRTAG4"></A>
Occasionally, you may have a phrase you want to appear unbroken
on a single line in the user's browser window, even if that
means the text extends beyond the visible region of the
window. Computer commands are good examples. Typically, one
types in a computer command--even a multiword one--on a
single line. Because you cannot predict exactly how many words will
fit inside an individual's browser window, the
HTML-based sequence of computer-command words may
end up broken into two or more lines of text. Command syntax is
confusing enough; it doesn't need the extra cross-eyed
effect of being wrapped onto two lines.

<p class=para>
With standard HTML, the way to make sure text
phrases stay intact across the browser display is to enclose those
segments in a <tt>&lt;pre&gt;</TT> tag and format it by
hand. That's acceptable and nearly universal for all
browsers. However, <tt>&lt;pre&gt;</TT> alters the display font from
the regular text, and manual line breaks inside the
<tt>&lt;pre&gt;</TT> tag are not always rendered
correctly. <i class=emphasis>[<tt>&lt;pre&gt;</TT>, <a href="#USING-HTML-CH04-SECT-7.5">4.7.5</A>]</I>
<div class=sidebar>
<p class=sidebar><blockquote><tt>&lt;nobr&gt;</TT> (extension)

<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>Function:</I><dd>

<p class=para>
Create a region of non-breaking text

<p>
<dt class=varlistentry><i class=emphasis>Attributes:</I><dd>

<p class=para>
None

<p>
<dt class=varlistentry><i class=emphasis>End Tag:</I><dd>

<p class=para>
<tt>&lt;/nobr&gt;</TT>; always used

<p>
<dt class=varlistentry><i class=emphasis>Contains:</I><dd>

<p class=para>
<tt class=replaceable><i>text</i></tt>

<p>
<dt class=varlistentry><i class=emphasis>Used in:</I><dd>

<p class=para>
<tt class=replaceable><i>block</i></tt></DL>
</BLOCKQUOTE><p>
</DIV>

<p class=para>

The extended browsers offer the <tt>&lt;nobr&gt;</TT> tag
alternative to <tt>&lt;pre&gt;</TT> so you can be sure enclosed text
stays intact on a single line while retaining normal text style. The
effect is to make the browser treat the tag's contents as though they
were a single, unbroken word. The tag contents retain the current font
style, and you can change to another style within the tag.

<p class=para>
Here's the <tt>&lt;nobr&gt;</TT> tag in action with our
computer-command example:

<div class=screen>
<p>
<pre>
When prompted by the computer, enter
<tt>&lt;nobr&gt;</TT>
<tt>&lt;tt&gt;</TT>find . -name |*.html -exec rm |{|}|;<tt>&lt;/tt&gt;</TT>.
<tt>&lt;/nobr&gt;</TT>
After a few moments, the load on your server will begin
to diminish and will eventually drop to zero.
</PRE>
</DIV>

<p class=para>
Notice in the example source and its display (<a href="#USING-HTML-CH04-FIG-21">Figure 4-21</A>) that we've included the
special <tt>&lt;tt&gt;</TT> tag inside the <tt>&lt;nobr&gt;</TT>
tag. If the <tt>&lt;nobr&gt;</TT>-tagged text cannot fit on a partially
filled line of text, the extended browser precedes it with a line
break, as shown in the figure. The <tt>&lt;nobr&gt;</TT> segment may
then extend beyond the right window boundary.

<div class=figure>
<h4 class=figure><a class="TITLE" name="USING-HTML-CH04-FIG-21">Figure 4-21: The <tt>&lt;nobr&gt;</TT> extension suppresses text wrapping</A></h4>


<p>
<img align=middle src="figs/uhtml0421.gif" alt="[Graphic: Figure 4-21]" width=500 height=168>

</DIV>

<p class=para>
The <tt>&lt;nobr&gt;</TT> tag does not suspend the browser's
normal line-filling process; it still collects and inserts images
and--believe it, or not--asserts forced line breaks caused
by the <tt>&lt;br&gt;</TT> or <tt>&lt;p&gt;</TT> tags, for
example. The <tt>&lt;nobr&gt;</TT> tag's only action is to
suppress an automatic line break when the current line reaches the
right margin.

<p class=para>
Also, you might think this tag is needed only to suppress line breaks
for phrases, not a sequence of characters without spaces that can
exceed the browser window's display boundaries. Today's
browsers do not hyphenate words automatically, but someday soon they
probably will. It makes sense to protect any break-sensitive sequence
of characters with the <tt>&lt;nobr&gt;</TT> tag.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH04-SECT-7.3">The &lt;wbr&gt; Tag</A></h3>

<p class=para>
<a name="CH04.WBRTAG1"></A><a name="CH04.WBRTAG2"></A><a name="CH04.WBRTAG3"></A><a name="CH04.WBRTAG4"></A>
The <tt>&lt;wbr&gt;</TT> tag is the height of
HTML text-layout finesse. Used with the
<tt>&lt;nobr&gt;</TT> tag, <tt>&lt;wbr&gt;</TT> advises the
extended browser when it may insert a line break in an otherwise
nonbreakable sequence of text. Unlike the <tt>&lt;br&gt;</TT> tag,
which always causes a line break even within a <tt>&lt;nobr&gt;</TT>
tagged segment, the <tt>&lt;wbr&gt;</TT> tag works only when placed
inside a <tt>&lt;nobr&gt;</TT>-tagged content segment and causes a
line break only if the current line already had extended beyond the
browser's display window margins.

<div class=sidebar>
<p class=sidebar><blockquote><tt>&lt;wbr&gt;</TT> (extension)

<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>Function:</I><dd>

<p class=para>
Define potential line break point

<p>
<dt class=varlistentry><i class=emphasis>Attributes:</I><dd>

<p class=para>
None

<p>
<dt class=varlistentry><i class=emphasis>End Tag:</I><dd>

<p class=para>
None

<p>
<dt class=varlistentry><i class=emphasis>Contains:</I><dd>

<p class=para>
Nothing

<p>
<dt class=varlistentry><i class=emphasis>Used in:</I><dd>

<p class=para>
<tt class=replaceable><i>text</i></tt></DL>
</BLOCKQUOTE><p>
</DIV>

<p class=para>
Now, <tt>&lt;wbr&gt;</TT> may seem incredibly esoteric to you, but
scowl not: there may come a time when you want to make sure
portions of your document appear on a single line, but you don't
want to overrun the browser window margins so far that readers will
have to camp on the horizontal scroll bar just to read your fine
prose. By inserting the <tt>&lt;wbr&gt;</TT> tag at appropriate
points in the nonbreaking sequence, you let the browser gently break
the text into more manageable lines:

<p class=para>

<div class=screen>
<p>
<pre>
<tt>&lt;p&gt;</TT>
<tt>&lt;nobr&gt;</TT>
This is a very long sequence of text that is
forced to be on a single line, even if doing so causes
<tt>&lt;wbr&gt;</TT>
the browser to extend the document window beyond the
size of the viewing pane and the por user must scroll right
<tt>&lt;wbr&gt;</TT>
to read the entire line.
<tt>&lt;/nobr&gt;</TT>
</PRE>
</DIV>


<p class=para>
You'll notice in our rendered version (<a href="#USING-HTML-CH04-FIG-22">Figure 4-22</A>) that both <tt>&lt;wbr&gt;</TT>
tags take effect. By increasing the horizontal window size or by
reducing the font size, you may fit all of the segment before the
first <tt>&lt;wbr&gt;</TT> tag within the browser window. In that
case, only the second <tt>&lt;wbr&gt;</TT> would have an effect; all
the text leading up to it would extend beyond the window's
margins.

<div class=figure>
<h4 class=figure><a class="TITLE" name="USING-HTML-CH04-FIG-22">Figure 4-22: Gentle line breaks with <tt>&lt;wbr&gt;</TT></A></h4>


<p>
<img align=middle src="figs/uhtml0422.gif" alt="[Graphic: Figure 4-22]" width=500 height=153>

</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH04-SECT-7.4">Better Line-Breaking Rules</A></h3>

<p class=para>
Unlike most browsers, and to their credit, Netscape and Internet
Explorer do not consider tags to be a line-break opportunity. Consider
the unfortunate consequences to your document's display if,
while rendering the example segment below, the browser puts the comma
adjacent to the ``du'' or the period adjacent to the word
``df'' on a separate line. Netscape and Internet Explorer will not:

<div class=screen>
<p>
<pre>
Make sure you type <tt>&lt;tt&gt;</TT>du<tt>&lt;/tt&gt;</TT>, not <tt>&lt;tt&gt;</TT>df<tt>&lt;/tt&gt;</TT>.
</PRE>
</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH04-SECT-7.5">The <tt>&lt;pre&gt;</TT> Tag</A></h3>

<p class=para>
<a name="CH04.PRETAG2"></A><a name="CH04.PRETAG3"></A><a name="CH04.PRETAG1"></A>
The <tt>&lt;pre&gt;</TT> tag and its required end tag
(<tt>&lt;/pre&gt;</TT>) define a segment inside which the browser
renders text in exactly the character and line spacing defined in the
source HTML document. Normal word wrapping and
paragraph filling are disabled and extraneous leading and trailing
spaces are honored. The browser displays all text between the
<tt>&lt;pre&gt;</TT> and <tt>&lt;/pre&gt;</TT> tags in a
monospaced font.

<div class=sidebar>
<p class=sidebar><blockquote><tt>&lt;pre&gt;</TT>

<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>Function:</I><dd>

<p class=para>
Render a block of text without any formatting

<p>
<dt class=varlistentry><i class=emphasis>Attributes:</I><dd>

<p class=para>
WIDTH

<p>
<dt class=varlistentry><i class=emphasis>End tag:</I><dd>

<p class=para>
<tt>&lt;/pre&gt;</TT>; never omitted

<p>
<dt class=varlistentry><i class=emphasis>Contains:</I><dd>

<p class=para>
<tt class=replaceable><i>pre_content</i></tt>

<p>
<dt class=varlistentry><i class=emphasis>Used in:</I><dd>

<p class=para>
<tt class=replaceable><i>block</i></tt></DL>
</BLOCKQUOTE><p>
</DIV>

<p class=para>
HTML authors most often use the
<tt>&lt;pre&gt;</TT> formatting tag when the integrity of columns
and rows of characters must be retained, for instance in tables of
numbers that must line up correctly. Another application for
<tt>&lt;pre&gt;</TT> is to set aside a blank segment--a series
of blank lines--in the document display, perhaps to clearly
separate one content section from another, or to temporarily hide a
portion of the document when it first loads and is rendered by the
user's browser.

<p class=para>
Tab characters have their desired effect within the
<tt>&lt;pre&gt;</TT> block, with tab stops defined at every eight
character positions. We discourage their use, however, since tabs
aren't consistently implemented among the various browsers. Use
spaces to ensure correct horizontal positioning of text within
<tt>&lt;pre&gt;</TT> formatted text segments.

<p class=para>
A common use of the <tt>&lt;pre&gt;</TT> tag is to present computer source code, as in the following example which is displayed by Mosaic as shown in 
<a href="#USING-HTML-CH04-FIG-23">Figure 4-23</A>:

<div class=figure>
<h4 class=figure><a class="TITLE" name="USING-HTML-CH04-FIG-23">Figure 4-23: Use the <tt>&lt;pre&gt;</TT> tag to preserve the integrity of columns and rows</A></h4>


<p>
<img align=middle src="figs/uhtml0423.gif" alt="[Graphic: Figure 4-23]" width=500 height=268>

</DIV>

<div class=screen>
<p>
<pre>
<tt>&lt;p&gt;</TT>
The processing program is:
<tt>&lt;pre&gt;</TT>
main(int argc, char **argv)
{   FILE *f;
    int i;
    if (argc != 2)
      fprintf(stderr, "usage: %s &amp;lt;file&amp;gt;|n",
          argv[0]);
    <tt>&lt;a href="http:process.c"&gt;</TT>
process<tt>&lt;/a&gt;</TT>
(argv[1]);
    exit(0);
}
<tt>&lt;/pre&gt;</TT>
</PRE>
</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="USING-HTML-CH04-SECT-7.5.1">Allowable content</A></h4>

<p class=para>
The text within a <tt>&lt;pre&gt;</TT> segment may contain physical
and content-based style changes, along with anchors, images, and
horizontal rules. When possible, the browser should honor style
changes, within the constraint of using a monospaced font for the
entire <tt>&lt;pre&gt;</TT> block.

<p class=para>
Tags that cause a paragraph break (headings, <tt>&lt;p&gt;</TT>, and
<tt>&lt;address&gt;</TT> tags, for example must not be used within
the <tt>&lt;pre&gt;</TT> block. Some browsers will interpret
paragraph-ending tags as simple line breaks, but this behavior is not
consistent across all browsers.

<p class=para>
Since style markup and other tags are allowed in a
<tt>&lt;pre&gt;</TT> block, you must use entity equivalents for the
literal characters: <tt>&amp;&amp;lt;;</TT> for
&lt;, <tt>&amp;&amp;gt;;</TT> for &gt;, and
<tt>&amp;&amp;amp;;</TT> for the ampersand
(&amp;).

<p class=para>
You place tags into the <tt>&lt;pre&gt;</TT> block as you would in
any other portion of the HTML document. For
instance, study the reference to the ``process'' function in
the previous example. It contains a hyperlink (using the
<tt>&lt;a&gt;</TT> tag) to its source file named
``process.c.''

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="USING-HTML-CH04-SECT-7.5.2">The width attribute</A></h4>

<p class=para>

The <tt>&lt;pre&gt;</TT> tag has a single optional attribute,
width, that determines the number
of characters to fit on a single line within the
<tt>&lt;pre&gt;</TT> block. The browser may use this value to select
a font or font size that fits the specified number of characters on
each line in the <tt>&lt;pre&gt;</TT> block. It does not mean that
the browser will wrap and fill text to the specified width. Rather,
lines longer than the specified width simply extend beyond the visible
region of the browser's window.

<p class=para>
The width attribute is only advice
for the user's browser; it may or may not be able to adjust the
view font to the specified width.

</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH04-SECT-7.6">The <tt>&lt;center&gt;</TT> Tag</A></h3>

<p class=para>

Netscape and Internet Explorer support a special <tt>&lt;center&gt;</TT> tag that centers the text in each line, individually, after the text flow is filled and wrapped. The <tt>&lt;center&gt;</TT> alignment remains in effect until canceled with its <tt>&lt;/center&gt;</TT> end tag.

<div class=sidebar>
<p class=sidebar><blockquote><tt>&lt;center&gt;</TT>

<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>Function:</I><dd>

<p class=para>
Center a section of text

<p>
<dt class=varlistentry><i class=emphasis>Attributes:</I><dd>

<p class=para>
None

<p>
<dt class=varlistentry><i class=emphasis>End tag:</I><dd>

<p class=para>
<tt>&lt;/center&gt;</TT>; never omitted

<p>
<dt class=varlistentry><i class=emphasis>Contains:</I><dd>

<p class=para>
<tt class=replaceable><i>body__content</i></tt>

<p>
<dt class=varlistentry><i class=emphasis>Used in:</I><dd>

<p class=para>
<tt class=replaceable><i>block</i></tt></DL>
</BLOCKQUOTE><p>
</DIV>

<p class=para>
Line-by-line is a common, albeit primitive, way to center text and
should be used judiciously. That's because the extended browsers
do not attempt to balance a centered paragraph or other block-related
elements, such as elements in a list. So, keep your centered text
short and sweet. Titles make good centering candidates; a centered
list usually is difficult to follow.

<p class=para>
Beyond that, you'll rarely see conventional text centered,
except for some lyrical prose, so readers may react badly to large
segments of centered prose in your documents. Rather,
<tt>&lt;center&gt;</TT> is more commonly used to center an image in
the display window (there is no explicit center alignment option
for inline images).

<p class=para>
Because users will have varying window widths, display resolutions,
and so on, you may also want to employ the <tt>&lt;nobr&gt;</TT> and
<tt>&lt;wbr&gt;</TT> extension tags (see above) to keep your
centered text intact and looking good. For example:

<p class=para>

<div class=screen>
<p>
<pre>
<tt>&lt;center&gt;</TT>
<tt>&lt;nobr&gt;</TT>
Copyright 1995 by QuatCo Enterprises.<tt>&lt;wbr&gt;</TT>
All rights reserved.
<tt>&lt;/nobr&gt;</TT>
<tt>&lt;/center&gt;</TT>
</PRE>
</DIV>


<p class=para>
The <tt>&lt;nobr&gt;</TT> tags in the sample source help ensure that
the text remains on a single line and the <tt>&lt;wbr&gt;</TT> tag
controls where the line may be broken if it exceeds the
browser's display window width.

<p class=para>
Centering also is useful for creating distinctive section headers,
although you may now achieve the same effect with an explicit align=center attribute in the respective
heading tag. You might also center text using align=center in conjunction with the
<tt>&lt;div&gt;</TT> or <tt>&lt;p&gt;</TT> tags.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH04-SECT-7.7">The <tt>&lt;listing&gt;</TT> Tag</A></h3>

<p class=para>

The <tt>&lt;listing&gt;</TT> tag is a deprecated element of
HTML 2.0, meaning that its use is discouraged and
that it may disappear entirely in subsequent versions of the
language. We include it here for historical reasons, since it has the
same effect on text formatting as the <tt>&lt;pre&gt;</TT> tag with
a specified width of 132 characters.

<div class=sidebar>
<p class=sidebar><blockquote><tt>&lt;listing&gt;</TT>

<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>Function:</I><dd>

<p class=para>
Render a block of text without any formatting

<p>
<dt class=varlistentry><i class=emphasis>Attributes:</I><dd>

<p class=para>
None

<p>
<dt class=varlistentry><i class=emphasis>End tag:</I><dd>

<p class=para>
<tt>&lt;/listing&gt;</TT>; never omitted

<p>
<dt class=varlistentry><i class=emphasis>Contains:</I><dd>

<p class=para>
<tt class=replaceable><i>literal_text</i></tt>

<p>
<dt class=varlistentry><i class=emphasis>Used in:</I><dd>

<p class=para>
<tt class=replaceable><i>block</i></tt></DL>
</BLOCKQUOTE><p>
</DIV>

<p class=para>
The only difference between <tt>&lt;pre&gt;</TT> and
<tt>&lt;listing&gt;</TT> is that no other markup is allowed within
the <tt>&lt;listing&gt;</TT> tag. So you don't have to replace
the literal <tt class=literal>&lt;</tt>, <tt class=literal>&gt;</tt>, and
&amp; characters with their entity equivalents in a
<tt>&lt;listing&gt;</TT> block as you must inside a
<tt>&lt;pre&gt;</TT> block.

<p class=para>
Since the <tt>&lt;listing&gt;</TT> tag is the same as a <tt>&lt;pre
width=132&gt;</TT> tag, and because it might not be supported in
later version of the language, we recommend you stay away from using
<tt>&lt;listing&gt;</TT>.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH04-SECT-7.8">The <tt>&lt;xmp&gt;</TT> Tag</A></h3>

<p class=para>

Like the <tt>&lt;listing&gt;</TT> tag, the <tt>&lt;xmp&gt;</TT>
tag is a deprecated element of HTML 2.0 included
here mostly for historical reasons.

<div class=sidebar>
<p class=sidebar><blockquote><tt>&lt;xmp&gt;</TT>

<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>Function:</I><dd>

<p class=para>
Render a block of text without any formatting

<p>
<dt class=varlistentry><i class=emphasis>Attributes:</I><dd>

<p class=para>
None

<p>
<dt class=varlistentry><i class=emphasis>End tag:</I><dd>

<p class=para>
<tt>&lt;/xmp&gt;</TT>, never omitted

<p>
<dt class=varlistentry><i class=emphasis>Contains:</I><dd>

<p class=para>
<tt class=replaceable><i>literal_text</i></tt>

<p>
<dt class=varlistentry><i class=emphasis>Used in:</I><dd>

<p class=para>
<tt class=replaceable><i>block</i></tt></DL>
</BLOCKQUOTE><p>
</DIV>

<p class=para>
The <tt>&lt;xmp&gt;</TT> tag formats text just like the
<tt>&lt;pre&gt;</TT> tag with a specified width of 80
characters. However, unlike the <tt>&lt;pre&gt;</TT> tag, you
don't have to replace the literal <tt>&lt;, &gt;</TT>, and
&amp; characters with their entity equivalents within an
<tt>&lt;xmp&gt;</TT> block. The name <tt>&lt;xmp&gt;</TT> is short
for ``example''; the language's designers intended the tag be used to format examples of text originally
displayed on 80-column wide displays. Because the 80-column display
has mostly gone the way of green screens and teletypes, and since the
effect of a <tt>&lt;xmp&gt;</TT> tag is basically the same as
<tt>&lt;pre width=80&gt;</TT>, don't use
<tt>&lt;xmp&gt;</TT>; it may disappear entirely in subsequent
versions of HTML.

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH04-SECT-7.9">The <tt>&lt;plaintext&gt;</TT> Tag</A></h3>

<p class=para>

Tired of tags? Insert a <tt>&lt;plaintext&gt;</TT> tag into your
document and browsers will treat the rest of your text just as written
with no markup allowed. The text will be displayed in a monospaced
font with no other formatting. There is no ending tag for
<tt>&lt;plaintext&gt;</TT> (of course--no markup!).

<div class=sidebar>
<p class=sidebar><blockquote><tt>&lt;plaintext&gt;</TT>

<dl class=variablelist>
<dt class=varlistentry><i class=emphasis>Function:</I><dd>

<p class=para>
Render a block of text without any formatting

<p>
<dt class=varlistentry><i class=emphasis>Attributes:</I><dd>

<p class=para>
None

<p>
<dt class=varlistentry><i class=emphasis>End tag:</I><dd>

<p class=para>
None

<p>
<dt class=varlistentry><i class=emphasis>Contains:</I><dd>

<p class=para>
<tt class=replaceable><i>literal_text</i></tt>

<p>
<dt class=varlistentry><i class=emphasis>Used in:</I><dd>

<p class=para>
<tt class=replaceable><i>block</i></tt></DL>
</BLOCKQUOTE><p>
</DIV>

<p class=para>
The main mission for <tt>&lt;plaintext&gt;</TT> is to make existing
ASCII documents palatable to browsers. In the early
days of the Web, this may have been necessary, but today's
browsers, which handle exceptional documents gracefully thanks to
embedded MIME type encoding, have made this tag
obsolete. It is included here for completeness, but we strongly
discourage its use.

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch04_06.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch04_08.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Expanded Font Handling</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Block Quotes</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
