<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 2] 2.6 HTML and Text</TITLE>
<meta name="author" content="Chuck Musciano and Bill Kennedy">
<meta name="date" content="Mon Mar 17 08:51:33 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="HTML">
<meta name="title" content="HTML: The Definitive Guide">
<!-- JavaScript: pathcont.js -->
</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="HTML: The Definitive Guide"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch02_05.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 2</b></td>
<td width=172 align=right valign=top><a href="ch02_07.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="USING-HTML-CH02-SECT-6">2.6 HTML and Text</A></h2>

<p class=para>
<a name="CH02.TEXT"></A>Text-related HTML tags comprise the richest set of
all in the standard language. That's because HTML
emerged as a way to enrich the structure and organization of text.
<p class=para>
 HTML came out of academia. What was
and still is important to those early developers was the ability of
their mostly academic, text-oriented documents to be scanned and read
without sacrificing their ability to distribute documents over the
Internet to a wide diversity of computer display
platforms. (ASCII text is the only universal format
on the global Internet.) Multimedia integration is something of an
appendage to HTML, albeit an important one.
<p class=para>
 
And, too, page layout is secondary to structure in
HTML. We humans visually scan and decide textual
relationships and structure based on how it looks; machines can only
read encoded markings. Because HTML documents have
encoded tags that relate meaning, they lend themselves very well to
computer-automated searches and recompilation of content--features very important to researchers. It's not so much
<i class=emphasis>how</I> something is said in HTML
as <i class=emphasis>what</I> is being said.
<p class=para>
 Accordingly, HTML is not a
page-layout language. In fact, given the diversity of
user-customizable browsers as well as the diversity of computer
platforms for retrieval and display of electronic documents, all
HTML strives to accomplish is
<i class=emphasis>advise,</I> not dictate, how the document might look
when rendered by the browser. You cannot force the browser to display
your document in any certain way. You'll hurt your brain if you insist
otherwise.

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH02-SECT-6.1">Appearance of Text</A></h3>

<p class=para>
For instance, you cannot predict what font and what absolute
size--8- or 40-point Helvetica, Geneva, Subway, or
whatever--will be used for a particular user's text
display. Users may change their browser fonts and some browsers are
text-only with no nice fonts at all.
<p class=para>
 Nonetheless, you can attach common style attributes to
your text with <i class=emphasis>physical style</I> tags like the
italics <tt>&lt;i&gt;</TT> tag in the simple example. More
importantly and truer to the language's original intentions,
HTML has <i class=emphasis>content-based</I> style
tags that attach <i class=emphasis>meaning</I> to various text passages. All of today's
graphical browsers recognize the physical and content-related text
style tags and change the appearance of their related text passage to
visually convey meaning or structure. You just can't predict exactly
what that change will look like.

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="ch02-SECT3-AUTOID.1">Content-based text styles</A></h4>

<p class=para>
Content-based style tags indicate to the browser that a specific
portion of your HTML text has a specific usage or
meaning. The <tt>&lt;cite&gt;</TT> tag in our simple example, for
instance, means the enclosed text is some sort of citation--the
document's author, in this case. Browsers commonly, although not
universally now or perhaps ever, display the citation text in italics,
not as regular text. <i class=emphasis>[content-based styles,
<a href="ch04_03.htm">4.3.1</A>]</I>
<p class=para>
 While it may or may not be obvious to the current reader
that the text is a citation, someday, someone might create a computer
program that searches a vast collection of HTML
documents for embedded <tt>&lt;cite&gt;</TT> tags and compiles a
special list of citations from the enclosed text. Similar software
agents already scour the Internet for HTML-embedded
information to compile listings, such as the infamous Webcrawler and
the Lycos Home Page databases of Web sites.
<p class=para>
 




The most common content-based style used today is that
of emphasis, indicated with the <tt>&lt;em&gt;</TT> tag. And if
you're feeling really emphatic, you might use the
<tt>&lt;strong&gt;</TT> content style. Other content-based styles
include <tt>&lt;code&gt;</TT>, for snippets of programming code;
<tt>&lt;kbd&gt;</TT>, to denote text entered by the user via a
keyboard; <tt>&lt;samp&gt;</TT> to mark sample text;
<tt>&lt;dfn&gt;</TT> for definitions; and <tt>&lt;var&gt;</TT> to
delimit variable names within programming code samples. All of these
tags have corresponding end tags.

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="USING-HTML-CH02-SECT-6.1.1">Physical styles</A></h4>

<p class=para>
Even the barest of barebones text processors conform to a few
traditional text styles, such as italicized and bold-faced
characters. While HTML is not a word-processing
tool in the traditional sense, it does provide tags that tell the
browser explicitly to display (if it can) a character, word, or phrase
in a particular physical style.
<p class=para>
 



Although you should use related content-based tags for
the reasons we argue above, sometimes form is more important than
function. So, to italicize text, without imposing any specific
meaning, use the <tt>&lt;i&gt;</TT> tag; the <tt>&lt;b&gt;</TT>
tag to display text in bold; or the <tt>&lt;tt&gt;</TT> tag so that
the browser, if it can, displays the text in a teletypewriter-style
monospaced typeface. <i class=emphasis>[physical-based styles, <a href="ch04_03.htm">4.3.2</A>]</I>
<p class=para>
It's easy to fall into the trap of using physical styles when you
should really be using a content-based style instead. Discipline
yourself now to use the content-based styles, because, as we argue
above, they convey meaning as well as style, thereby making your
documents easier to automate and manage.

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="ch02-SECT3-AUTOID.2">Special text characters</A></h4>

<p class=para>
Not all text characters available to you for display by a browser can
be typed from the keyboard. And some characters have special
meanings in HTML, such as the brackets around tags,
which if not somehow differentiated when used for plain text--the
less-than sign (&lt;) in a math equation, for
example--will confuse the browser and trash your
document. HTML gives you a way to include any of
the many different characters that comprise the
ASCII character set anywhere in your text through a
special encoding of its <i class=emphasis>character entity</I>.
<p class=para>
 
Like the copyright symbol in our simple example, a
character entity starts with an ampersand (&amp;),
followed by its name, and terminated with a semicolon. (You
alternatively may also use the character's position
number in the ASCII table of characters preceded by
the number symbol (#) in lieu of its name in the
character entity sequence.) When rendering the document, the browser
displays the proper character, if it exists in the user's
font.<i class=emphasis> [character entities, <a href="ch03_04.htm">3.4.2</A>]</I>
<p class=para>
 For obvious reasons, the most commonly used character
entities are the greater-than (&amp;gt;), less-than (&amp;lt;), and
ampersand (&amp;amp;) characters. Check <a href="appd_01.htm">Appendix D, <i>Character Entities</i></A>, to find what symbol the character entity
``&amp;#166;'' represents.

</DIV>

</DIV>

<div class=sect2>
<h3 class=sect2><a class="TITLE" name="USING-HTML-CH02-SECT-6.2">Text Structures</A></h3>

<p class=para>
It's not obvious in our simple example, but the common carriage
returns we use to separate paragraphs in our source document have no
meaning in HTML, except in special
circumstances. You could have typed the document onto a single line in
your text editor and it would still appear the same in <a href="ch02_02.htm">Figure 2-1</A>![3]
<blockquote class=footnote>
<p class=para>[3] 
We use a computer programming-like style of indentation so our source
HTML documents are more readable. It's not
obligatory, nor are there any formal style guidelines for source
HTML document text formats. We do, however, highly
recommend you adopt your own consistent style, so that you and others
can easily follow your source documents.
</blockquote>
<p class=para>
 You'd soon discover, too, if you hadn't read it here
first, that except in special cases, browsers typically ignore leading
and trailing spaces, and sometimes more than a few in between. (If you
look closely at the source example, the line ``Greetings
from'' looks like it should be indented by leading spaces, but it
isn't in <a href="ch02_02.htm">Figure 2-1</A>.)

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="ch02-SECT3-AUTOID.3">Paragraphs and line breaks</A></h4>

<p class=para>
A browser takes the text in the body of your document and
``flows'' it onto the computer screen, disregarding any
common carriage-return or line-feed characters in the source. The
browser fills as much of each line of the display window as possible,
beginning flush against the left margin, before stopping after the
rightmost word and moving on to the next line. Resize the browser
window, and the text reflows to fill the new space; indicating
HTML's inherent flexibility.

<p class=para>




Of course, readers would rebel if your text just ran on
and on, so HTML does provide both explicit and
implicit ways to control the basic structure of your document. The
most rudimentary and common ways are with the paragraph
(<tt>&lt;p&gt;</TT>) and the line-break (<tt>&lt;br&gt;</TT>)
tags. Both break the text flow, which consequently restarts on a new
line. The only apparent difference is that with most browsers, the
paragraph tag adds more vertical space after the line break. <i class=emphasis>[<tt>&lt;p&gt;</TT>, <a href="ch04_01.htm">4.1.2</A>]</I> <i class=emphasis>[<tt>&lt;br&gt;</TT>, <a href="ch04_07.htm">4.7.1</A>]</I>

<p class=para>
By the way, the HTML standard
includes an end tag for the paragraph tag, but not for the line break
tag. Few authors ever include the paragraph end tag in their
documents;[4]
the browser usually can figure out where one paragraph ends and
another begins. Give yourself a star if you knew that
<tt>&lt;/p&gt;</TT> even exists.

<blockquote class=footnote>
<p class=para>[4] 
The paragraph end tag is being used more commonly now that the popular
browsers support the paragraph-alignment attribute.
</blockquote>
</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="ch02-SECT3-AUTOID.4">Headings</A></h4>

<p class=para>
Besides breaking your text into paragraphs, you also can organize your
documents into sections with headings. Just as they do on this and
other pages in this printed book, HTML headings not
only divide and entitle discrete passages of text, they also convey
meaning visually. With HTML, however, headings also
lend themselves to machine-automated analyses.
<p class=para>
 

There are six HTML heading tags,
<tt>&lt;h1&gt;</TT> through <tt>&lt;h6&gt;</TT>, with
corresponding end tags. Typically, the browser displays their contents
in respectively very large to very small font sizes, and sometimes in
boldface. The text inside the <tt>&lt;h4&gt;</TT> tag is usually the
same size as the regular text. <i class=emphasis>[headings, <a href="ch04_02.htm">4.2</A>]</I>
<p class=para>
 The heading tags also typically break the current text
flow, standing alone on lines and separated from surrounding text,
even though there aren't any explicit paragraph or line-break tags
before or after a heading.

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="ch02-SECT3-AUTOID.5">Horizontal rules</A></h4>

<p class=para>

Besides headings, HTML also provides horizontal
rule lines that help delineate and separate the sections of your
document.
<p class=para>
 When the browser encounters an <tt>&lt;hr&gt;</TT> tag
in your document, it breaks the flow of text and draws a line
completely across the display window on a new line. The flow of text
resumes immediately below the rule. <i class=emphasis>[<tt>&lt;hr&gt;</TT>, <a href="ch05_01.htm">5.1.1</A>]</I>

</DIV>

<div class=sect3>
<h4 class=sect3><a class="TITLE" name="ch02-SECT3-AUTOID.6">Preformatted text</A></h4>

<p class=para>

Occasionally, you'll want the browser to display a block of text as-is
with, for example, indented lines and vertically aligned letters or
numbers that don't change even though the browser window might get
resized. The HTML <tt>&lt;pre&gt;</TT> tag rises
to those occasions. All text, up to the closing
<tt>&lt;/pre&gt;</TT> end tag, appears in the browser window exactly
as you type it, including carriage returns and line feeds, leading,
trailing, and intervening spaces. Although very useful for tables and
forms, <tt>&lt;pre&gt;</TT> text turns out pretty dull; the
popular browsers render the block in a monospace typeface. <i class=emphasis>[<tt>&lt;pre&gt;</TT>, <a href="ch04_07.htm">4.7.5</A>]</I>

</DIV>

</DIV>

</DIV>


<div class=htmlnav>

<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch02_05.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch02_07.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>The Flesh on an HTML Document</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Hyperlinks</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>

</BODY>
</HTML>
