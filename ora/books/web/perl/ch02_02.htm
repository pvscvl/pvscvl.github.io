<!doctype html public "-//ORA//DTD CD HTML 3.2//EN">
<html>
<head>
<title>[Chapter 2] 2.2 Built-in Data Types</TITLE>
<meta name="author" content="Larry Wall, Tom Christiansen, and Randal Schwartz">
<meta name="date" content="Mon Mar 17 13:02:20 1997">
<meta name="form" content="html">
<meta name="metadata" content="dublincore.0.1">
<meta name="objecttype" content="book part">
<meta name="otheragent" content="gmat dbtohtml">
<meta name="publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="source" content="SGML">
<meta name="subject" content="Perl">
<meta name="title" content="Programming Perl, Second Edition">
<!-- JavaScript: pathcont.js -->

</HEAD>
<body bgcolor="#FFFFFF">

<div class=htmlnav>
<h1><img src="gifs/smbanner.gif" alt="Programming Perl, Second Edition"></H1>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch02_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><b>Chapter 2</b></td>
<td width=172 align=right valign=top><a href="ch02_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
</table>
<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
<hr align=left width=515>
</DIV>
<div class=sect1>
<h2 class=sect1><a class="TITLE" name="PERL2-CH-2-SECT-2">2.2 Built-in Data Types</A></h2>

<p class=para>
Computer languages vary in how many and what kinds of data types they
provide at compile time.  Unlike some commonly used languages that
provide many types for similar kinds of values, Perl provides just
a few built-in data types.  (You can, however, define fancy dynamic types
via the object-oriented features of Perl--see <a href="ch05_01.htm">Chapter 5, <i>Packages, Modules, and Object Classes</i></A>.)  Perl has
three basic data types: <i class=emphasis>scalars</I>, <i class=emphasis>arrays</I> of scalars, and <i class=emphasis>hashes</I>
of scalars, also known as <i class=emphasis>associative arrays</I>.

<p class=para>
Scalars are the fundamental type from which more complicated structures
are built.  A scalar stores a single, simple value, typically a string
or a number.  Elements of this simple type can be combined into either
of the two composite types.  An <i class=emphasis>array</I> is an ordered list of scalars that you
access with a numeric subscript (subscripts start at 0).[1]
A <i class=emphasis>hash</I> is an unordered set of key/value pairs that you access using
strings (keys) as subscripts, to look up the scalar value corresponding to
a given
key.  Variables are always one of these three types.  (Other than
variables, Perl also has some partially hidden thingies called
filehandles, directory handles, subroutines, typeglobs, and formats,
which you can think of as data types.)

<blockquote class=footnote>
<p class=para>[1] 
As in C, all of Perl's indexing starts with zero.  (A negative subscript
counts from the end, though.)  This applies to various substring and sublist
operations as well as to regular subscripting.
</blockquote>
</DIV>


<div class=htmlnav>
<p>
<hr align=left width=515>
<table width=515 border=0 cellpadding=0 cellspacing=0>
<tr>
<td width=172 align=left valign=top><a href="ch02_01.htm"><img src="gifs/txtpreva.gif" alt="Previous" border=0></A></td>
<td width=171 align=center valign=top><a href="index.htm"><img src="gifs/txthome.gif" alt="Home" border=0></a></td>
<td width=172 align=right valign=top><a href="ch02_03.htm"><img src="gifs/txtnexta.gif" alt="Next" border=0></A></td>
</tr>
<tr>
<td width=172 align=left valign=top>Lexical Texture</td>
<td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td>
<td width=172 align=right valign=top>Terms</td>
</tr>
</table>

<!-- JavaScript: prev.js -->
&nbsp;
<!-- JavaScript: next.js -->
</DIV>
</BODY>
</HTML>
