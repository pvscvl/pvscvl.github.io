<html>
<head>
<title>Index</TITLE>
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">
<!-- JavaScript: pathbegin.js -->
<b>Index</B>
<p>
<font size="-1">

<a href="idx_0.htm">Symbols</A> |
<a href="idx_a.htm">A</A> |
<a href="idx_b.htm">B</A> |
<a href="idx_c.htm">C</A> |
<a href="idx_d.htm">D</A> |
<a href="idx_e.htm">E</A> |
<a href="idx_f.htm">F</A> |
<a href="idx_g.htm">G</A> |
<a href="idx_h.htm">H</A> |
I |
<a href="idx_j.htm">J</A> |
<a href="idx_k.htm">K</A> |
<a href="idx_l.htm">L</A> |
<a href="idx_m.htm">M</A> |
<a href="idx_n.htm">N</A> |
<a href="idx_o.htm">O</A> |
<a href="idx_p.htm">P</A> |
<a href="idx_q.htm">Q</A> |
<a href="idx_r.htm">R</A> |
<a href="idx_s.htm">S</A> |
<a href="idx_t.htm">T</A> |
<a href="idx_u.htm">U</A> |
<a href="idx_v.htm">V</A> |
<a href="idx_w.htm">W</A> |
<a href="idx_x.htm">X</A> |
<a href="idx_y.htm">Y</A> |
<a href="idx_z.htm">Z</A> 
</FONT>
<hr>
<h1>I</h1>
<dl>
<dt>/i modifier
   <dl>
   <dt><a href="../ch02_04.htm">Pattern Matching</A>
   <dt><a href="../ch02_04.htm">Pattern-Matching Operators</A>
   <dt><a href="../ch02_04.htm">Pattern-Matching Operators</A>
   </DL>
<dt>-i switch, perl
   : <a href="../ch06_01.htm">Switches</A>
<dt>-I switch, perl
   : <a href="../ch06_01.htm">Switches</A>
<dt>I18N: :Collate module
   : <a href="../ch07_02.htm">I18N::Collate--Compare 8-bit Scalar Data According to the Current Locale</A>
<dt>identifiers, package
   : <a href="../ch05_01.htm">Packages</A>
<dt>ideographic unary operators
   : <a href="../ch02_05.htm">Ideographic Unary Operators</A>
<dt>if modifier
   : <a href="../ch02_06.htm">Simple Statements</A>
<dt>if statements
   <dl>
   <dt><a href="../ch01_06.htm">The if and unless statements</A>
   <dt><a href="../ch02_06.htm">If Statements</A>
   <dt><a href="../ch08_02.htm">C Traps</A>
   <dt>in case structure
      : <a href="../ch02_06.htm">Bare Blocks and Case Structures</A>
   </DL>
<dt>'IGNORE' string
   : <a href="../ch06_02.htm">Signals</A>
<dt>imaginary numbers
   : <a href="../ch07_02.htm">Math::Complex--Complex Numbers Package</A>
<dt>implementation
   : <a href="../ch05_05.htm">Implementation (the "Uses" Relationship)</A>
<dt>implementation classes
   : <a href="../ch00_03.htm">Perl Manpages</A>
<dt>import function
   <dl>
   <dt><a href="../ch03_02.htm">import</A>
   <dt><a href="../ch05_02.htm">Modules</A>
   </DL>
<dt>import lists
   : <a href="../ch07_02.htm">Specialized import lists</A>
<dt>import( )
   : <a href="../ch07_02.htm">Env--Import Environment Variables</A>
<dt>importing
   <dl>
   <dt>modules
      : <a href="../ch07_02.htm">Exporter--Default Import Method for Modules</A>
   <dt>semantics into package
      : <a href="../ch03_02.htm">use</A>
   <dt>subroutines
      : <a href="../ch02_07.htm">Subroutines</A>
   </DL>
<dt>in-memory databases
   : <a href="../ch07_02.htm">In-memory databases</A>
<dt>@INC array
   : <a href="../ch02_09.htm">Global Special Arrays</A>
   <dl>
   <dt>prepending directories to
      : <a href="../ch06_01.htm">Switches</A>
   </DL>
<dt>%INC hash
   : <a href="../ch02_09.htm">Global Special Arrays</A>
<dt>@INC variable
   <dl>
   <dt>manipulating at compile time
      : <a href="../ch07_02.htm">lib--Manipulate @INC at Compile-Time</A>
   </DL>
<dt>incr command (debugger)
   : <a href="../ch08_01.htm">Debugger Commands</A>
<dt>index function
   : <a href="../ch03_02.htm">index</A>
<dt>indirect object syntax
   <dl>
   <dt><a href="../ch05_03.htm">Method Invocation</A>
   <dt><a href="../ch05_05.htm">Object-Oriented Scaling Tips</A>
   </DL>
<dt>inequality
   : <a href="../ch02_05.htm">Equality Operators</A>
<dt>infinite loops
   : <a href="../ch02_06.htm">For loops</A>
<dt>infix dereference operator
   : <a href="../ch02_05.htm">The Arrow Operator</A>
<dt>inheritance
   <dl>
   <dt><a href="../ch05_03.htm">Brief Refresher on Object-Oriented Programming</A>
   <dt><a href="../ch05_03.htm">A Class Is Simply a Package</A>
   <dt><a href="../ch05_05.htm">Object-Oriented Scaling Tips</A>
   <dt><a href="../ch05_05.htm">Inheriting a Constructor</A>
   <dt>instance variable
      : <a href="../ch05_05.htm">Instance Variable Inheritance</A>
   </DL>
<dt>init program
   : <a href="../ch03_02.htm">getppid</A>
<dt>initial caps
   : <a href="../ch03_02.htm">ucfirst</A>
<dt>initializing
   <dl>
   <dt>arrays and hash slices
      : <a href="../ch02_05.htm">Multiplicative Operators</A>
   <dt>hash variables
      : <a href="../ch02_03.htm">Hashes (Associative Arrays)</A>
   </DL>
<dt>$ino file statistic
   : <a href="../ch03_02.htm">stat</A>
<dt>INPLACE_EDIT$
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>inporting
   <dl>
   <dt>environment variables
      : <a href="../ch07_02.htm">Env--Import Environment Variables</A>
   </DL>
<dt>input
   : <a href="../ch01_04.htm">Filehandles</A>
   <dl>
   <dt>checking file descriptors for
      : <a href="../ch03_02.htm">select (ready file descriptors)</A>
   <dt>operators
      : <a href="../ch02_03.htm">Input Operators</A>
   <dt>pipes
      : <a href="../ch06_02.htm">Pipes</A>
   <dt>reading in awk
      : <a href="../ch08_02.htm">Awk Traps</A>
   <dt>record separator
      : <a href="../ch02_09.htm">Global Special Variables</A>
   <dt>single-character buffered
      : <a href="../ch03_02.htm">getc</A>
   <dt>unbuffered
      : <a href="../ch03_02.htm">getc</A>
   <dt>unbuffered, POSIX
      : <a href="../ch07_02.htm">Classes</A>
   </DL>
<dt>$INPUT_LINE_NUMBER
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>$INPUT_RECORD_SEPARATOR
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>Install module
   : <a href="../ch07_02.htm">ExtUtils::Install--Install Files from Here to There</A>
<dt>install( )
   : <a href="../ch07_02.htm">ExtUtils::Install--Install Files from Here to There</A>
<dt>installing Perl
   <dl>
   <dt><a href="../ch07_02.htm">ExtUtils::Install--Install Files from Here to There</A>
   <dt><a href="../ch08_05.htm">Distribution and Installation</A>
   </DL>
<dt>instance methods
   <dl>
   <dt><a href="../ch05_03.htm">Brief Refresher on Object-Oriented Programming</A>
   <dt><a href="../ch05_03.htm">Instance methods</A>
   </DL>
<dt>instance variables
   : <a href="../ch05_05.htm">Instance Variables</A>
<dt>instances
   : <a href="../ch05_03.htm">Brief Refresher on Object-Oriented Programming</A>
<dt>int function
   : <a href="../ch03_02.htm">int</A>
<dt>integer method
   : <a href="../ch07_02.htm">integer--Do Arithmetic in Integer Instead of Double</A>
<dt>integer module
   : <a href="../ch02_06.htm">Pragmas</A>
<dt>integers
   <dl>
   <dt><a href="../ch03_02.htm">int</A>
   <dt><a href="../ch07_02.htm">integer--Do Arithmetic in Integer Instead of Double</A>
   <dt><a href="../ch07_02.htm">Math::BigInt--Arbitrary-Length Integer Math Package</A>
   <dt>strings as vectors of
      : <a href="../ch03_02.htm">vec</A>
   </DL>
<dt>Internet TCP clients/servers
   : <a href="../ch06_02.htm">Internet TCP clients and servers</A>
<dt>interpolating
   <dl>
   <dt>array variables
      : <a href="../ch02_03.htm">Interpolating array values</A>
   <dt>scalar values
      : <a href="../ch02_03.htm">String literals</A>
   </DL>
<dt>interpolative context
   : <a href="../ch02_03.htm">Interpolative context</A>
<dt>interpreters
   : <a href="../ch06_01.htm">Cooperating with Command Interpreters</A>
<dt>interprocess communication (IPC)
   : <a href="../ch06_02.htm">Cooperating with Other Processes</A>
<dt>inverting arrays and hashes
   : <a href="../ch03_02.htm">reverse</A>
<dt>invoking
   : <a href="../ch06_01.htm">Switches</A>
<dt>ioctl function
   : <a href="../ch03_02.htm">ioctl</A>
<dt>IPC (interprocess communication)
   : <a href="../ch06_02.htm">Cooperating with Other Processes</A>
<dt>IPC: :Open2 module
   : <a href="../ch07_02.htm">IPC::Open2--Open a Process for Both Reading and Writing</A>
<dt>IPC: :Open3 module
   : <a href="../ch07_02.htm">IPC::Open3--Open a Process for Reading, Writing, and Error Handling</A>
<dt>@ISA array
   <dl>
   <dt><a href="../ch05_03.htm">A Class Is Simply a Package</A>
   <dt><a href="../ch07_02.htm">AnyDBM_File--Provide Framework for Multiple DBMs</A>
   </DL>
<dt>iteration
   : <a href="../ch02_06.htm">Loop control</A>
<dt>itimer routines
   : <a href="../ch03_02.htm">alarm</A>

<p>
<hr>
<p>
<font size="-1">

<a href="idx_0.htm">Symbols</A> |
<a href="idx_a.htm">A</A> |
<a href="idx_b.htm">B</A> |
<a href="idx_c.htm">C</A> |
<a href="idx_d.htm">D</A> |
<a href="idx_e.htm">E</A> |
<a href="idx_f.htm">F</A> |
<a href="idx_g.htm">G</A> |
<a href="idx_h.htm">H</A> |
I |
<a href="idx_j.htm">J</A> |
<a href="idx_k.htm">K</A> |
<a href="idx_l.htm">L</A> |
<a href="idx_m.htm">M</A> |
<a href="idx_n.htm">N</A> |
<a href="idx_o.htm">O</A> |
<a href="idx_p.htm">P</A> |
<a href="idx_q.htm">Q</A> |
<a href="idx_r.htm">R</A> |
<a href="idx_s.htm">S</A> |
<a href="idx_t.htm">T</A> |
<a href="idx_u.htm">U</A> |
<a href="idx_v.htm">V</A> |
<a href="idx_w.htm">W</A> |
<a href="idx_x.htm">X</A> |
<a href="idx_y.htm">Y</A> |
<a href="idx_z.htm">Z</A> 
</FONT>
<p>
Copyright &copy; 1996 O'Reilly &amp; Associates, Inc.
All Rights Reserved.

</BODY>
</HTML>
