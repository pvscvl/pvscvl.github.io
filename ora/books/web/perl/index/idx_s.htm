<html>
<head>
<title>Index</TITLE>
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">
<!-- JavaScript: pathbegin.js -->
<b>Index</B>
<p>
<font size="-1">

<a href="idx_0.htm">Symbols</A> |
<a href="idx_a.htm">A</A> |
<a href="idx_b.htm">B</A> |
<a href="idx_c.htm">C</A> |
<a href="idx_d.htm">D</A> |
<a href="idx_e.htm">E</A> |
<a href="idx_f.htm">F</A> |
<a href="idx_g.htm">G</A> |
<a href="idx_h.htm">H</A> |
<a href="idx_i.htm">I</A> |
<a href="idx_j.htm">J</A> |
<a href="idx_k.htm">K</A> |
<a href="idx_l.htm">L</A> |
<a href="idx_m.htm">M</A> |
<a href="idx_n.htm">N</A> |
<a href="idx_o.htm">O</A> |
<a href="idx_p.htm">P</A> |
<a href="idx_q.htm">Q</A> |
<a href="idx_r.htm">R</A> |
S |
<a href="idx_t.htm">T</A> |
<a href="idx_u.htm">U</A> |
<a href="idx_v.htm">V</A> |
<a href="idx_w.htm">W</A> |
<a href="idx_x.htm">X</A> |
<a href="idx_y.htm">Y</A> |
<a href="idx_z.htm">Z</A> 
</FONT>
<hr>
<h1>S</h1>
<dl>
<dt>s command (debugger)
   : <a href="../ch08_01.htm">Debugger Commands</A>
<dt>S command (debugger)
   : <a href="../ch08_01.htm">Debugger Commands</A>
<dt>-s file test operator
   : <a href="../ch02_05.htm">Named Unary and File Test Operators</A>
<dt>-S file test operator
   : <a href="../ch02_05.htm">Named Unary and File Test Operators</A>
<dt>\s (for whitespace)
   : <a href="../ch01_07.htm">Regular Expressions</A>
<dt>/s modifier
   <dl>
   <dt><a href="../ch02_04.htm">Pattern Matching</A>
   <dt><a href="../ch02_04.htm">The fine print</A>
   <dt><a href="../ch02_04.htm">Pattern-Matching Operators</A>
   <dt><a href="../ch02_04.htm">Pattern-Matching Operators</A>
   <dt><a href="../ch02_04.htm">Pattern-Matching Operators</A>
   </DL>
<dt>s operator
   : <a href="../ch01_07.htm">Regular Expressions</A>
<dt>-s switch, perl
   <dl>
   <dt><a href="../ch06_01.htm">Switches</A>
   <dt><a href="../ch08_01.htm">The Perl Debugger</A>
   </DL>
<dt>-S switch, perl
   <dl>
   <dt><a href="../ch06_01.htm">Switches</A>
   <dt><a href="../ch06_02.htm">UNIX-domain clients and servers</A>
   </DL>
<dt>s// (substitute) operator
   : <a href="../ch08_02.htm">Universal Blunders</A>
<dt>s/// (substitution) operator
   <dl>
   <dt><a href="../ch02_03.htm">Interpolative context</A>
   <dt><a href="../ch02_04.htm">Pattern Matching</A>
   <dt><a href="../ch02_04.htm">Pattern-Matching Operators</A>
   <dt>options for
      : <a href="../ch02_04.htm">Pattern-Matching Operators</A>
   </DL>
<dt>s2p program
   <dl>
   <dt><a href="../ch06_04.htm">s2p</A>
   <dt><a href="../ch08_05.htm">Translation from Awk and Sed</A>
   </DL>
<dt>Safe module
   <dl>
   <dt><a href="../ch06_03.htm">Safe</A>
   <dt><a href="../ch07_02.htm">Safe--Create Safe Namespaces for Evaluating Perl Code</A>
   </DL>
<dt>saving
   <dl>
   <dt>filehandles
      : <a href="../ch07_02.htm">SelectSaver--Save and Restore Selected Filehandle</A>
   </DL>
<dt>scalar context
   <dl>
   <dt><a href="../ch02_03.htm">Scalar and list context</A>
   <dt><a href="../ch03_01.htm">Functions</A>
   <dt>forcing
      : <a href="../ch03_02.htm">scalar</A>
   <dt>range (..) operator in
      : <a href="../ch02_05.htm">Range Operator</A>
   <dt>recognizing in debugger
      : <a href="../ch08_01.htm">Using the Debugger</A>
   </DL>
<dt>scalar pseudo-function
   : <a href="../ch03_02.htm">scalar</A>
<dt>scalar values
   : <a href="../ch02_03.htm">Scalar Values</A>
<dt>scalar variables
   <dl>
   <dt>in angle brackets
      : <a href="../ch02_03.htm">Line input (angle) operator</A>
   </DL>
<dt>scalars
   <dl>
   <dt><a href="../ch01_02.htm">Singularities</A>
   <dt><a href="../ch02_02.htm">Built-in Data Types</A>
   <dt>anonymous
      : <a href="../ch05_04.htm">Tying Scalars</A>
   <dt>byte length of
      : <a href="../ch03_02.htm">length</A>
   <dt>instance variables
      : <a href="../ch05_05.htm">Scalar Instance Variables</A>
   <dt>list of
      : <a href="../ch01_02.htm">Pluralities</A>
   <dt>tied
      : <a href="../ch07_02.htm">Tie::Scalar, Tie::StdScalar--Base Class Definitions for Tied Scalars</A>
   <dt>tying
      : <a href="../ch05_04.htm">Tying Scalars</A>
   <dt>unordered set of
      : <a href="../ch01_02.htm">Hashes.</A>
   </DL>
<dt>scoped declarations
   : <a href="../ch02_06.htm">Scoped Declarations</A>
<dt>scripts
   <dl>
   <dt>building with -e switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>checking syntax of
      : <a href="../ch06_01.htm">Switches</A>
   <dt>controlling debugger from
      : <a href="../ch08_01.htm">Using the Debugger</A>
   <dt>debugging
      : <a href="../ch06_01.htm">Switches</A>
   <dt>dumping core files
      : <a href="../ch06_01.htm">Switches</A>
   <dt>embedding in messages
      : <a href="../ch06_01.htm">Switches</A>
   <dt>end marker for
      : <a href="../ch02_03.htm">Other literal tokens</A>
   <dt>examples of, obtaining
      : <a href="../ch08_05.htm">Examples</A>
   <dt>executing
      : <a href="../ch03_02.htm">system</A>
   <dt>insecure
      : <a href="../ch06_03.htm">Handling Insecure Code</A>
   <dt>names of
      : <a href="../ch02_09.htm">Global Special Variables</A>
   <dt>pausing
      : <a href="../ch03_02.htm">sleep</A>
   <dt>performance of
      : <a href="../ch08_03.htm">Efficiency</A>
   <dt>programming style
      : <a href="../ch08_04.htm">Programming with Style</A>
   <dt>running time of
      : <a href="../ch02_05.htm">Named Unary and File Test Operators</A>
   <dt>searching for
      : <a href="../ch06_01.htm">Switches</A>
   <dt>standard test
      : <a href="../ch07_02.htm">Test::Harness--Run Perl Standard Test Scripts with Statistics</A>
   <dt>terminating with exec
      : <a href="../ch03_02.htm">exec</A>
   <dt>troubleshooting
      : <a href="../ch08_02.htm">Common Goofs for Novices</A>
   </DL>
<dt>SDBM_File module
   <dl>
   <dt><a href="../ch07_02.htm">AnyDBM_File--Provide Framework for Multiple DBMs</A>
   <dt><a href="../ch07_02.htm">SDBM_File--Tied Access to SDBM Files</A>
   </DL>
<dt>search
   <dl>
   <dt>grep function for
      : <a href="../ch03_02.htm">grep</A>
   </DL>
<dt>Search: :Dict module
   : <a href="../ch07_02.htm">Search::Dict--Search for Key in Dictionary File</A>
<dt>searching
   <dl>
   <dt>linear, versus hashes
      : <a href="../ch08_03.htm">Time Efficiency</A>
   <dt>for lines in text file
      : <a href="../ch07_02.htm">Examples</A>
   <dt>for scripts
      : <a href="../ch06_01.htm">Switches</A>
   <dt>for substrings
      <dl>
      <dt><a href="../ch03_02.htm">index</A>
      <dt><a href="../ch03_02.htm">rindex</A>
      </DL>
   </DL>
<dt>security
   <dl>
   <dt><a href="../ch00_01.htm">Perl in a Nutshell</A>
   <dt><a href="../ch03_02.htm">srand</A>
   <dt>bypassing shell
      : <a href="../ch06_02.htm">Talking to yourself</A>
   <dt>handling insecure data
      : <a href="../ch06_03.htm">Handling Insecure Data</A>
   <dt>insecure code
      : <a href="../ch06_03.htm">Handling Insecure Code</A>
   <dt>PATH environment variable
      : <a href="../ch06_03.htm">Cleaning up your path</A>
   <dt>UNIX bugs
      : <a href="../ch06_03.htm">Security bugs</A>
   </DL>
<dt>secutiry
   <dl>
   <dt>Safe module
      : <a href="../ch07_02.htm">Safe--Create Safe Namespaces for Evaluating Perl Code</A>
   </DL>
<dt>sed
   : <a href="../ch08_02.htm">Sed Traps</A>
   <dl>
   <dt>converting to Perl
      : <a href="../ch06_04.htm">s2p</A>
   <dt>converting to/from Perl
      : <a href="../ch08_05.htm">Translation from Awk and Sed</A>
   </DL>
<dt>seed, random number
   : <a href="../ch03_02.htm">srand</A>
<dt>seek function
   : <a href="../ch03_02.htm">seek</A>
<dt>seekdir function
   : <a href="../ch03_02.htm">seekdir</A>
<dt>seekfunction
   : <a href="../ch03_02.htm">tell</A>
<dt>select function
   <dl>
   <dt><a href="../ch03_02.htm">fileno</A>
   <dt><a href="../ch03_02.htm">print</A>
   <dt><a href="../ch03_02.htm">select (output filehandle)</A>
   <dt><a href="../ch03_02.htm">select (ready file descriptors)</A>
   <dt>for format variables
      : <a href="../ch02_08.htm">Format Variables</A>
   </DL>
<dt>SelectSaver module
   : <a href="../ch07_02.htm">SelectSaver--Save and Restore Selected Filehandle</A>
<dt>SelfLoader
   : <a href="../ch07_02.htm">Devel::SelfStubber--Generate Stubs for a SelfLoading Module</A>
<dt>SelfLoader module
   : <a href="../ch07_02.htm">SelfLoader--Load Functions Only on Demand</A>
<dt>SelfLoading module
   : <a href="../ch07_02.htm">Devel::SelfStubber--Generate Stubs for a SelfLoading Module</A>
<dt>SelfStubber module
   : <a href="../ch07_02.htm">Devel::SelfStubber--Generate Stubs for a SelfLoading Module</A>
<dt>semantics
   : <a href="../ch03_02.htm">use</A>
<dt>semaphores
   : <a href="../ch03_02.htm">semget</A>
<dt>semctl function
   : <a href="../ch03_02.htm">semctl</A>
<dt>semget function
   : <a href="../ch03_02.htm">semget</A>
<dt>semicolon
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>semop function
   : <a href="../ch03_02.htm">semop</A>
<dt>send function
   : <a href="../ch03_02.htm">send</A>
<dt>seq function
   : <a href="../ch07_02.htm">Using the Berkeley DB interface directly</A>
<dt>servers, TCP
   : <a href="../ch06_02.htm">Internet TCP clients and servers</A>
<dt>service port number
   : <a href="../ch03_02.htm">getservbyname</A>
<dt>setgid function
   : <a href="../ch06_02.htm">Talking to yourself</A>
<dt>setgrent function
   : <a href="../ch03_02.htm">getgrent</A>
<dt>setgrp function
   : <a href="../ch03_02.htm">setpgrp</A>
<dt>sethostent function
   : <a href="../ch03_02.htm">gethostent</A>
<dt>setlocale( )
   : <a href="../ch07_02.htm">I18N::Collate--Compare 8-bit Scalar Data According to the Current Locale</A>
<dt>setlogmask( )
   : <a href="../ch07_02.htm">Sys::Syslog--Perl Interface to UNIX syslog(3) Calls</A>
<dt>setpriority function
   : <a href="../ch03_02.htm">setpriority</A>
<dt>setprotoent function
   : <a href="../ch03_02.htm">getprotoent</A>
<dt>setpwent function
   : <a href="../ch03_02.htm">getpwent</A>
<dt>sets of bits
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>sets of strings
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>setservent function
   : <a href="../ch03_02.htm">getservent</A>
<dt>setsockopt function
   : <a href="../ch03_02.htm">setsockopt</A>
<dt>setuid function
   : <a href="../ch06_02.htm">Talking to yourself</A>
<dt>setvbuf( )
   : <a href="../ch07_02.htm">FileHandle--Supply Object Methods for Filehandles</A>
<dt>sh (Bourne shell)
   : <a href="../ch06_01.htm">Command Processing</A>
<dt>shared memory segment ID
   : <a href="../ch03_02.htm">shmget</A>
<dt>sharp
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>shebang notation
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>shell
   <dl>
   <dt>bypassing
      : <a href="../ch06_02.htm">Talking to yourself</A>
   </DL>
<dt>Shell module
   : <a href="../ch07_02.htm">Shell--Run Shell Commands Transparently Within Perl</A>
<dt>shells
   : <a href="../ch08_02.htm">Shell Traps</A>
<dt>shift function
   : <a href="../ch03_02.htm">shift</A>
<dt>shift operators
   <dl>
   <dt><a href="../ch02_05.htm">Shift Operators</A>
   <dt><a href="../ch02_05.htm">Shift Operators</A>
   </DL>
<dt>shmctl function
   : <a href="../ch03_02.htm">shmctl</A>
<dt>shmget function
   : <a href="../ch03_02.htm">shmget</A>
<dt>shmread function
   : <a href="../ch03_02.htm">shmread</A>
<dt>shmwrite function
   : <a href="../ch03_02.htm">shmwrite</A>
<dt>short-circuit operators
   <dl>
   <dt><a href="../ch01_05.htm">Logical Operators</A>
   <dt><a href="../ch02_05.htm">C-style Logical (Short Circuit) Operators</A>
   </DL>
<dt>shutdown function
   : <a href="../ch03_02.htm">shutdown</A>
<dt>%SIG hash
   <dl>
   <dt><a href="../ch02_09.htm">Global Special Arrays</A>
   <dt><a href="../ch06_02.htm">Signals</A>
   </DL>
<dt>sigaction function
   : <a href="../ch06_02.htm">Signals</A>
<dt>SigAction objects
   : <a href="../ch07_02.htm">Classes</A>
<dt>SIGALRM signal
   : <a href="../ch03_02.htm">alarm</A>
<dt>SIGIO signal
   : <a href="../ch03_02.htm">fcntl</A>
<dt>signals
   <dl>
   <dt><a href="../ch02_09.htm">Global Special Arrays</A>
   <dt><a href="../ch06_02.htm">Signals</A>
   <dt><a href="../ch07_02.htm">sigtrap--Enable Stack Backtrace on Unexpected Signals</A>
   </DL>
<dt>SigSet objects
   : <a href="../ch07_02.htm">Classes</A>
<dt>sigtrap module
   : <a href="../ch07_02.htm">sigtrap--Enable Stack Backtrace on Unexpected Signals</A>
<dt>sin function
   : <a href="../ch03_02.htm">sin</A>
<dt>sine
   : <a href="../ch03_02.htm">sin</A>
<dt>single quotes
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>singularities
   : <a href="../ch01_02.htm">Singularities</A>
<dt>$size file statistic
   : <a href="../ch03_02.htm">stat</A>
<dt>skipcheck( )
   : <a href="../ch07_02.htm">ExtUtils::Manifest--Utilities to Write and Check a MANIFEST File</A>
<dt>slash
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>sleep function
   : <a href="../ch03_02.htm">sleep</A>
   <dl>
   <dt>select function instead of
      : <a href="../ch03_02.htm">select (ready file descriptors)</A>
   </DL>
<dt>slices of multidimensional arrays
   : <a href="../ch04_06.htm">Slices</A>
<dt>socket
   <dl>
   <dt>attaching address to
      : <a href="../ch03_02.htm">bind</A>
   </DL>
<dt>socket function
   : <a href="../ch03_02.htm">socket</A>
<dt>Socket module
   : <a href="../ch07_02.htm">Socket--Load the C socket.h Defines and Structure Manipulators</A>
<dt>socketpair function
   : <a href="../ch03_02.htm">socketpair</A>
<dt>sockets
   : <a href="../ch06_02.htm">Sockets</A>
   <dl>
   <dt>accepting connections from clients
      : <a href="../ch03_02.htm">accept</A>
   <dt>closing
      : <a href="../ch03_02.htm">close</A>
   <dt>connecting
      : <a href="../ch03_02.htm">connect</A>
   <dt>functions for
      : <a href="../ch03_02.htm">getsockname</A>
   <dt>getting packed sockaddr address
      : <a href="../ch03_02.htm">getpeername</A>
   <dt>listen function for
      : <a href="../ch03_02.htm">listen</A>
   <dt>opening
      : <a href="../ch03_02.htm">socket</A>
   <dt>receiving messages on
      : <a href="../ch03_02.htm">recv</A>
   <dt>sending message on
      : <a href="../ch03_02.htm">send</A>
   <dt>setting options
      : <a href="../ch03_02.htm">setsockopt</A>
   <dt>shutting down connection
      : <a href="../ch03_02.htm">shutdown</A>
   </DL>
<dt>sort function
   : <a href="../ch03_02.htm">sort</A>
<dt>sorting
   <dl>
   <dt>hashes automatically
      : <a href="../ch07_02.htm">In-memory databases</A>
   <dt>lists
      : <a href="../ch03_02.htm">sort</A>
   </DL>
<dt>soundex algorithm
   : <a href="../ch07_02.htm">Text::Soundex--The Soundex Algorithm Described by Knuth</A>
<dt>source distribution
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>source filters
   : <a href="../ch06_04.htm">Source filters</A>
<dt>special characters
   : <a href="../ch02_04.htm">The rules of regular expression matching</A>
<dt>special variables
   : <a href="../ch02_09.htm">Special Variables</A>
<dt>speed
   : <a href="../ch08_03.htm">Efficiency</A>
   <dl>
   <dt>terminal output
      : <a href="../ch07_02.htm">Term::Cap--Terminal Capabilities Interface</A>
   </DL>
<dt>splain program
   : <a href="../ch07_02.htm">The standalone program</A>
<dt>splice function
   <dl>
   <dt><a href="../ch03_02.htm">splice</A>
   <dt><a href="../ch08_02.htm">Previous Perl Traps</A>
   </DL>
<dt>split function
   <dl>
   <dt><a href="../ch01_07.htm">Regular Expressions</A>
   <dt><a href="../ch03_02.htm">split</A>
   <dt><a href="../ch08_02.htm">Awk Traps</A>
   <dt><a href="../ch08_03.htm">Time Efficiency</A>
   </DL>
<dt>splitting
   <dl>
   <dt>modules for autoloading
      : <a href="../ch07_02.htm">AutoSplit--Split a Module for Autoloading</A>
   </DL>
<dt>sprintf function
   : <a href="../ch03_02.htm">sprintf</A>
<dt>sqrt function
   : <a href="../ch03_02.htm">sqrt</A>
<dt>square root function
   : <a href="../ch03_02.htm">sqrt</A>
<dt>srand function
   : <a href="../ch03_02.htm">srand</A>
<dt>stack, call
   : <a href="../ch03_02.htm">caller</A>
<dt>standard library
   : <a href="../ch07_01.htm">The Standard Perl Library</A>
<dt>star
   : <a href="../ch02_07.htm">Prototypes</A>
<dt>stat function
   : <a href="../ch03_02.htm">stat</A>
<dt>Stat module
   : <a href="../ch07_02.htm">Getopt::Std--Process Single-Character Options with Option Clustering</A>
<dt>statements
   : <a href="../ch02_06.htm">Statements and Declarations</A>
   <dl>
   <dt>loops
      : <a href="../ch02_06.htm">If Statements</A>
   </DL>
<dt>static methods
   : <a href="../ch05_03.htm">Brief Refresher on Object-Oriented Programming</A>
<dt>STDERR filehandle
   <dl>
   <dt><a href="../ch02_09.htm">Global Special Filehandles</A>
   <dt><a href="../ch03_02.htm">fileno</A>
   <dt><a href="../ch08_04.htm">Programming with Style</A>
   </DL>
<dt>StdHash module
   : <a href="../ch07_02.htm">Tie::Hash, Tie::StdHash--Base Class Definitions for Tied Hashes</A>
<dt>STDIN
   : <a href="../ch01_04.htm">Filehandles</A>
   <dl>
   <dt>reading single characters from
      : <a href="../ch03_02.htm">getc</A>
   </DL>
<dt>STDIN filehandle
   <dl>
   <dt><a href="../ch02_09.htm">Global Special Filehandles</A>
   <dt><a href="../ch03_02.htm">fileno</A>
   </DL>
<dt>STDOUT
   : <a href="../ch01_04.htm">Filehandles</A>
<dt>STDOUT filehandle
   <dl>
   <dt><a href="../ch02_09.htm">Global Special Filehandles</A>
   <dt><a href="../ch03_02.htm">fileno</A>
   <dt>printing to
      : <a href="../ch03_02.htm">print</A>
   </DL>
<dt>stepping through code
   : <a href="../ch08_01.htm">Debugger Commands</A>
<dt>sticky bit
   : <a href="../ch08_03.htm">Time Efficiency</A>
<dt>stopping
   : <a href="../ch03_02.htm">kill</A>
   <dl>
   <dt>infinite loop
      : <a href="../ch02_06.htm">For loops</A>
   </DL>
<dt>STORE method
   <dl>
   <dt><a href="../ch05_04.htm">Tying Scalars</A>
   <dt><a href="../ch05_04.htm">Tying Arrays</A>
   <dt><a href="../ch05_04.htm">Tying Hashes</A>
   </DL>
<dt>strict module
   <dl>
   <dt><a href="../ch02_06.htm">Pragmas</A>
   <dt><a href="../ch04_04.htm">Symbolic References</A>
   <dt><a href="../ch07_02.htm">strict--Restrict Unsafe Constructs</A>
   </DL>
<dt>string literals
   : <a href="../ch02_03.htm">String literals</A>
<dt>strings
   <dl>
   <dt>abbreviation table
      : <a href="../ch07_02.htm">Text::Abbrev--Create an Abbreviation Table from a List</A>
   <dt>boundary assertions
      <dl>
      <dt><a href="../ch01_07.htm">Nailing Things Down</A>
      <dt><a href="../ch02_04.htm">The rules of regular expression matching</A>
      <dt><a href="../ch02_04.htm">The fine print</A>
      </DL>
   <dt>breaking
      : <a href="../ch02_09.htm">Global Special Variables</A>
   <dt>capitalization of
      : <a href="../ch03_02.htm">lc</A>
   <dt>comparing in awk
      : <a href="../ch06_04.htm">a2p</A>
   <dt>comparison operators
      : <a href="../ch01_05.htm">Comparison Operators</A>
   <dt>concatenating
      <dl>
      <dt><a href="../ch01_05.htm">String Operators</A>
      <dt><a href="../ch02_05.htm">Additive Operators</A>
      <dt><a href="../ch08_02.htm">Awk Traps</A>
      <dt><a href="../ch08_03.htm">Time Efficiency</A>
      </DL>
   <dt>converting to list values
      : <a href="../ch03_02.htm">unpack</A>
   <dt>eval function and
      : <a href="../ch08_03.htm">Time Efficiency</A>
   <dt>extracting substrings
      : <a href="../ch03_02.htm">substr</A>
   <dt>first character of
      : <a href="../ch02_09.htm">Global Special Variables</A>
   <dt>formatting
      : <a href="../ch03_02.htm">sprintf</A>
   <dt>hard references and
      : <a href="../ch04_05.htm">Hard References Don't Work as Hash Keys</A>
   <dt>hexadecimal
      : <a href="../ch03_02.htm">oct</A>
   <dt>index function
      : <a href="../ch03_02.htm">index</A>
   <dt>joining
      : <a href="../ch03_02.htm">join</A>
   <dt>octal
      : <a href="../ch03_02.htm">oct</A>
   <dt>operators
      <dl>
      <dt><a href="../ch01_05.htm">String Operators</A>
      <dt><a href="../ch08_02.htm">Universal Blunders</A>
      </DL>
   <dt>printing
      : <a href="../ch03_02.htm">print</A>
   <dt>rindex function
      : <a href="../ch03_02.htm">rindex</A>
   <dt>soundex algorithm
      : <a href="../ch07_02.htm">Text::Soundex--The Soundex Algorithm Described by Knuth</A>
   <dt>splitting into substrings
      : <a href="../ch03_02.htm">split</A>
   <dt>study function and
      : <a href="../ch03_02.htm">study</A>
   <dt>vec function and
      : <a href="../ch03_02.htm">vec</A>
   </DL>
<dt>StrVal( )
   : <a href="../ch07_02.htm">Public functions</A>
<dt>stubs
   : <a href="../ch07_02.htm">Devel::SelfStubber--Generate Stubs for a SelfLoading Module</A>
<dt>study function
   : <a href="../ch03_02.htm">study</A>
<dt>style, programming
   : <a href="../ch08_04.htm">Programming with Style</A>
<dt>sub declaration
   <dl>
   <dt><a href="../ch03_02.htm">sub</A>
   <dt><a href="../ch04_02.htm">The Anonymous Subroutine Composer</A>
   </DL>
<dt>sub keyword
   <dl>
   <dt><a href="../ch02_07.htm">Subroutines</A>
   <dt><a href="../ch02_07.htm">Prototypes</A>
   </DL>
<dt>subroutine
   : <a href="../ch07_01.htm">The Standard Perl Library</A>
<dt>subroutine call stack
   : <a href="../ch03_02.htm">caller</A>
<dt>subroutines
   <dl>
   <dt><a href="../ch02_07.htm">Subroutines</A>
   <dt><a href="../ch02_07.htm">Subroutines</A>
   <dt><a href="../ch04_02.htm">The Anonymous Subroutine Composer</A>
   <dt><a href="../ch05_03.htm">A Method Is Simply a Subroutine</A>
   <dt>aborting with exit
      : <a href="../ch03_02.htm">exit</A>
   <dt>autoloading
      <dl>
      <dt><a href="../ch05_01.htm">Autoloading</A>
      <dt><a href="../ch05_03.htm">A Class Is Simply a Package</A>
      </DL>
   <dt>declaring
      <dl>
      <dt><a href="../ch02_06.htm">Global Declarations</A>
      <dt><a href="../ch03_02.htm">sub</A>
      </DL>
   <dt>names for
      : <a href="../ch02_03.htm">Variables</A>
   <dt>performance and
      : <a href="../ch08_03.htm">Time Efficiency</A>
   <dt>predeclaring
      : <a href="../ch07_02.htm">subs--Predeclare Subroutine Names</A>
   <dt>return function
      : <a href="../ch03_02.htm">return</A>
   <dt>returning references
      : <a href="../ch04_02.htm">Object Constructors</A>
   <dt>substituting with goto
      : <a href="../ch03_02.htm">goto</A>
   </DL>
<dt>subs module
   : <a href="../ch07_02.htm">subs--Predeclare Subroutine Names</A>
<dt>subscript separator
   : <a href="../ch02_09.htm">Global Special Variables</A>
<dt>subscripting
   : <a href="../ch08_03.htm">Time Efficiency</A>
<dt>$SUBSCRIPT_SEPARATOR
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>$SUBSEP
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>substitute (s//) operator
   : <a href="../ch08_02.htm">Universal Blunders</A>
<dt>substitution
   <dl>
   <dt>shells versus Perl
      : <a href="../ch08_02.htm">Shell Traps</A>
   </DL>
<dt>substitution (s///) operator
   <dl>
   <dt><a href="../ch02_03.htm">Interpolative context</A>
   <dt><a href="../ch02_04.htm">Pattern Matching</A>
   </DL>
<dt>substitution operator
   : <a href="../ch01_07.htm">Regular Expressions</A>
<dt>substitution operator (s///)
   : <a href="../ch02_04.htm">Pattern-Matching Operators</A>
   <dl>
   <dt>options for
      : <a href="../ch02_04.htm">Pattern-Matching Operators</A>
   </DL>
<dt>substr function
   <dl>
   <dt><a href="../ch03_02.htm">substr</A>
   <dt><a href="../ch08_03.htm">Time Efficiency</A>
   <dt>chop function and
      : <a href="../ch03_02.htm">chop</A>
   </DL>
<dt>SubstrHash module
   : <a href="../ch07_02.htm">Tie::SubstrHash--Fixed-table-size, Fixed-key-length Hashing</A>
<dt>substrings
   : <a href="../ch02_04.htm">The fine print</A>
<dt>subtraction
   : <a href="../ch02_05.htm">Additive Operators</A>
<dt>suidperl program
   : <a href="../ch08_05.htm">Distribution and Installation</A>
<dt>SUPER pseudoclass
   : <a href="../ch05_03.htm">Method Invocation</A>
<dt>switch statement
   <dl>
   <dt><a href="../ch02_06.htm">Bare Blocks and Case Structures</A>
   <dt><a href="../ch08_02.htm">C Traps</A>
   <dt><a href="../ch08_03.htm">Time Efficiency</A>
   </DL>
<dt>switches, Perl command-line
   : <a href="../ch06_01.htm">Command Processing</A>
<dt>Symbol module
   : <a href="../ch07_02.htm">Symbol--Generate Anonymous Globs; Qualify Variable Names</A>
<dt>symbol table entries
   : <a href="../ch02_07.htm">Passing Symbol Table Entries (Typeglobs)</A>
   <dl>
   <dt>aliasing
      : <a href="../ch02_03.htm">Typeglobs and Filehandles</A>
   </DL>
<dt>symbol tables
   : <a href="../ch05_01.htm">Symbol Tables</A>
<dt>symbolic links
   : <a href="../ch03_02.htm">symlink</A>
   <dl>
   <dt>GetOptions( ) and
      : <a href="../ch07_02.htm">Linkage specification</A>
   <dt>getting filenames from
      : <a href="../ch03_02.htm">readlink</A>
   <dt>lstat command and
      : <a href="../ch03_02.htm">lstat</A>
   </DL>
<dt>symbolic references
   <dl>
   <dt><a href="../ch04_01.htm">What Is a Reference?</A>
   <dt><a href="../ch04_04.htm">Symbolic References</A>
   </DL>
<dt>symbols, preventing exportation of
   : <a href="../ch07_02.htm">Managing unknown symbols</A>
<dt>symlink function
   : <a href="../ch03_02.htm">symlink</A>
<dt>sync function
   : <a href="../ch07_02.htm">Using the Berkeley DB interface directly</A>
<dt>syntax, checking
   : <a href="../ch06_01.htm">Switches</A>
<dt>Sys: :Hostname module
   : <a href="../ch07_02.htm">Sys::Hostname--Try Every Conceivable Way to Get Hostname</A>
<dt>Sys: :Syslog module
   : <a href="../ch07_02.htm">Sys::Syslog--Perl Interface to UNIX syslog(3) Calls</A>
<dt>syscall function
   <dl>
   <dt><a href="../ch03_02.htm">alarm</A>
   <dt><a href="../ch03_02.htm">syscall</A>
   </DL>
<dt>syslog( )
   : <a href="../ch07_02.htm">Sys::Syslog--Perl Interface to UNIX syslog(3) Calls</A>
<dt>sysopen function
   <dl>
   <dt><a href="../ch03_02.htm">open</A>
   <dt><a href="../ch03_02.htm">sysopen</A>
   </DL>
<dt>sysread function
   : <a href="../ch03_02.htm">sysread</A>
<dt>system calls
   : <a href="../ch03_02.htm">syscall</A>
   <dl>
   <dt>performance and
      : <a href="../ch08_03.htm">Time Efficiency</A>
   <dt>restarting
      : <a href="../ch06_02.htm">Signals</A>
   </DL>
<dt>system CPU time
   : <a href="../ch07_02.htm">Notes</A>
<dt>system function
   <dl>
   <dt><a href="../ch03_02.htm">system</A>
   <dt><a href="../ch08_03.htm">Time Efficiency</A>
   </DL>
<dt>System V IPC
   : <a href="../ch06_02.htm">System V IPC</A>
<dt>$SYSTEM_FD_MAX
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>syswrite function
   : <a href="../ch03_02.htm">syswrite</A>

<p>
<hr>
<p>
<font size="-1">

<a href="idx_0.htm">Symbols</A> |
<a href="idx_a.htm">A</A> |
<a href="idx_b.htm">B</A> |
<a href="idx_c.htm">C</A> |
<a href="idx_d.htm">D</A> |
<a href="idx_e.htm">E</A> |
<a href="idx_f.htm">F</A> |
<a href="idx_g.htm">G</A> |
<a href="idx_h.htm">H</A> |
<a href="idx_i.htm">I</A> |
<a href="idx_j.htm">J</A> |
<a href="idx_k.htm">K</A> |
<a href="idx_l.htm">L</A> |
<a href="idx_m.htm">M</A> |
<a href="idx_n.htm">N</A> |
<a href="idx_o.htm">O</A> |
<a href="idx_p.htm">P</A> |
<a href="idx_q.htm">Q</A> |
<a href="idx_r.htm">R</A> |
S |
<a href="idx_t.htm">T</A> |
<a href="idx_u.htm">U</A> |
<a href="idx_v.htm">V</A> |
<a href="idx_w.htm">W</A> |
<a href="idx_x.htm">X</A> |
<a href="idx_y.htm">Y</A> |
<a href="idx_z.htm">Z</A> 
</FONT>
<p>
Copyright &copy; 1996 O'Reilly &amp; Associates, Inc.
All Rights Reserved.

</BODY>
</HTML>
