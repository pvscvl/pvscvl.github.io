<html>
<head>
<title>Index</TITLE>
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">
<!-- JavaScript: pathbegin.js -->
<b>Index</B>
<p>
<font size="-1">

<a href="idx_0.htm">Symbols</A> |
<a href="idx_a.htm">A</A> |
<a href="idx_b.htm">B</A> |
<a href="idx_c.htm">C</A> |
<a href="idx_d.htm">D</A> |
<a href="idx_e.htm">E</A> |
<a href="idx_f.htm">F</A> |
<a href="idx_g.htm">G</A> |
<a href="idx_h.htm">H</A> |
<a href="idx_i.htm">I</A> |
<a href="idx_j.htm">J</A> |
<a href="idx_k.htm">K</A> |
<a href="idx_l.htm">L</A> |
<a href="idx_m.htm">M</A> |
N |
<a href="idx_o.htm">O</A> |
<a href="idx_p.htm">P</A> |
<a href="idx_q.htm">Q</A> |
<a href="idx_r.htm">R</A> |
<a href="idx_s.htm">S</A> |
<a href="idx_t.htm">T</A> |
<a href="idx_u.htm">U</A> |
<a href="idx_v.htm">V</A> |
<a href="idx_w.htm">W</A> |
<a href="idx_x.htm">X</A> |
<a href="idx_y.htm">Y</A> |
<a href="idx_z.htm">Z</A> 
</FONT>
<hr>
<h1>N</h1>
<dl>
<dt>n command (debugger)
   : <a href="../ch08_01.htm">Debugger Commands</A>
<dt>-n switch, perl
   : <a href="../ch06_01.htm">Switches</A>
<dt>named
   <dl>
   <dt>pipes
      : <a href="../ch06_02.htm">Named pipes</A>
   </DL>
<dt>named unary operators
   <dl>
   <dt><a href="../ch02_03.htm">Filename globbing operator</A>
   <dt><a href="../ch02_05.htm">Named Unary and File Test Operators</A>
   </DL>
<dt>names
   <dl>
   <dt>arrays
      : <a href="../ch02_03.htm">Variables</A>
   <dt>capitalization conventions
      : <a href="../ch02_03.htm">Variables</A>
   <dt>commands
      : <a href="../ch01_02.htm">Verbs</A>
   <dt>current working directory
      : <a href="../ch07_02.htm">Cwd--Get Pathname of Current Working Directory</A>
   <dt>file
      : <a href="../ch02_03.htm">Other literal tokens</A>
   <dt>for files
      : <a href="../ch03_02.htm">rename</A>
   <dt>format
      : <a href="../ch03_02.htm">format</A>
   <dt>functions
      : <a href="../ch01_02.htm">Verbs</A>
   <dt>getting from network addresses
      <dl>
      <dt><a href="../ch03_02.htm">gethostbyaddr</A>
      <dt><a href="../ch03_02.htm">getnetbyaddr</A>
      </DL>
   <dt>getting from port number
      : <a href="../ch03_02.htm">getservbyname</A>
   <dt>global variables
      : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
   <dt>hashes
      : <a href="../ch02_03.htm">Variables</A>
   <dt>labels and filehandles
      : <a href="../ch02_03.htm">Variables</A>
   <dt>modules
      : <a href="../ch05_02.htm">Modules</A>
   <dt>modules/packages
      : <a href="../ch08_04.htm">Programming with Style</A>
   <dt>program
      : <a href="../ch02_09.htm">Global Special Variables</A>
   <dt>protocol
      : <a href="../ch03_02.htm">getprotobynumber</A>
      <dl>
      <dt>getting from port number
         : <a href="../ch03_02.htm">getservbyport</A>
      </DL>
   <dt>signals
      : <a href="../ch06_02.htm">Signals</A>
   <dt>subroutine
      : <a href="../ch02_07.htm">Subroutines</A>
   <dt>subroutines
      : <a href="../ch02_03.htm">Variables</A>
   <dt>translating to network addresses
      <dl>
      <dt><a href="../ch03_02.htm">gethostbyname</A>
      <dt><a href="../ch03_02.htm">getnetbyname</A>
      </DL>
   <dt>typeglobs
      <dl>
      <dt><a href="../ch02_03.htm">Typeglobs and Filehandles</A>
      <dt><a href="../ch02_07.htm">Passing Symbol Table Entries (Typeglobs)</A>
      </DL>
   <dt>user
      : <a href="../ch03_02.htm">getpwnam</A>
   <dt>variable
      <dl>
      <dt><a href="../ch07_02.htm">Symbol--Generate Anonymous Globs; Qualify Variable Names</A>
      <dt><a href="../ch08_04.htm">Programming with Style</A>
      </DL>
   <dt>variables
      <dl>
      <dt><a href="../ch01_02.htm">Nouns</A>
      <dt><a href="../ch02_03.htm">Variables</A>
      </DL>
   </DL>
<dt>namespace
   : <a href="../ch05_01.htm">Packages, Modules, and Object Classes</A>
<dt>namespaces
   <dl>
   <dt>creating safe
      : <a href="../ch07_02.htm">Safe--Create Safe Namespaces for Evaluating Perl Code</A>
   </DL>
<dt>naming
   <dl>
   <dt>socket
      : <a href="../ch03_02.htm">bind</A>
   </DL>
<dt>natural languages
   : <a href="../ch01_02.htm">Natural and Artificial Languages</A>
<dt>NDBM_File module
   : <a href="../ch07_02.htm">AnyDBM_File--Provide Framework for Multiple DBMs</A>
<dt>NDBM_File mofule
   : <a href="../ch07_02.htm">NDBM_File--Tied Access to NDBM Files</A>
<dt>ne operator
   : <a href="../ch08_02.htm">Universal Blunders</A>
<dt>negation
   <dl>
   <dt>arithmetic (-) operator
      : <a href="../ch02_05.htm">Ideographic Unary Operators</A>
   <dt>bitwise (~) operator
      : <a href="../ch02_05.htm">Ideographic Unary Operators</A>
   <dt>logical (!) operator
      : <a href="../ch02_05.htm">Ideographic Unary Operators</A>
   <dt>of character class
      : <a href="../ch01_07.htm">Quantifiers</A>
   </DL>
<dt>negative lookahead asserion
   : <a href="../ch02_04.htm">Regular expression extensions</A>
<dt>nested
   <dl>
   <dt>data structures, printed
      : <a href="../ch08_01.htm">Debugger Commands</A>
   <dt>destruction
      : <a href="../ch05_03.htm">Destructors</A>
   <dt>lists
      <dl>
      <dt><a href="../ch04_06.htm">A Brief Tutorial: Manipulating Lists of Lists</A>
      <dt><a href="../ch04_07.htm">Data Structure Code Examples</A>
      </DL>
   <dt>packages
      : <a href="../ch05_01.htm">Packages</A>
   </DL>
<dt>Net: :Ping module
   : <a href="../ch07_02.htm">Net::Ping--Check Whether a Host Is Online</A>
<dt>network address
   <dl>
   <dt>translating to names
      : <a href="../ch03_02.htm">getnetbyaddr</A>
   </DL>
<dt>network addresses
   <dl>
   <dt>translating to names
      : <a href="../ch03_02.htm">gethostbyaddr</A>
   </DL>
<dt>networks file
   : <a href="../ch03_02.htm">getnetent</A>
<dt>new method
   : <a href="../ch03_02.htm">new</A>
<dt>new( )
   : <a href="../ch07_02.htm">FileHandle--Supply Object Methods for Filehandles</A>
<dt>newlines
   <dl>
   <dt>boundary assertions and
      : <a href="../ch02_04.htm">The rules of regular expression matching</A>
   <dt>removing
      : <a href="../ch01_04.htm">Filehandles</A>
   <dt>in string literals
      : <a href="../ch02_03.htm">String literals</A>
   </DL>
<dt>newsgroups
   : <a href="../ch00_03.htm">Usenet Newsgroups</A>
<dt>new_from_fd( )
   : <a href="../ch07_02.htm">FileHandle--Supply Object Methods for Filehandles</A>
<dt>next operator
   <dl>
   <dt><a href="../ch01_06.htm">Breaking out: next and last</A>
   <dt><a href="../ch02_06.htm">Loop control</A>
   <dt><a href="../ch03_02.htm">next</A>
   <dt>next if construct
      : <a href="../ch08_03.htm">Time Efficiency</A>
   </DL>
<dt>NEXTKEY method
   : <a href="../ch05_04.htm">Tying Hashes</A>
<dt>NFA (nondeterministic finite-state automaton)
   : <a href="../ch02_04.htm">The rules of regular expression matching</A>
<dt>$nlink file statistic
   : <a href="../ch03_02.htm">stat</A>
<dt>no declaration
   <dl>
   <dt><a href="../ch02_06.htm">Pragmas</A>
   <dt><a href="../ch03_02.htm">no</A>
   </DL>
<dt>nomethod operator
   : <a href="../ch07_02.htm">No method</A>
<dt>nondeterministic finite-state automaton (NFA)
   : <a href="../ch02_04.htm">The rules of regular expression matching</A>
<dt>not (!) operator
   : <a href="../ch02_05.htm">Ideographic Unary Operators</A>
<dt>not equal to (!=) operator
   : <a href="../ch02_05.htm">Equality Operators</A>
<dt>nouns
   : <a href="../ch01_02.htm">Nouns</A>
<dt>$NR
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>null
   <dl>
   <dt>filehandle
      <dl>
      <dt>angle operator and
         : <a href="../ch02_03.htm">Line input (angle) operator</A>
      </DL>
   <dt>list
      : <a href="../ch02_03.htm">List Values and Arrays</A>
   <dt>scalars
      : <a href="../ch02_03.htm">Boolean context</A>
   </DL>
<dt>number
   <dl>
   <dt>line
      : <a href="../ch02_03.htm">Other literal tokens</A>
   <dt>port
      <dl>
      <dt>getting protocol name from
         : <a href="../ch03_02.htm">getservbyport</A>
      </DL>
   <dt>port, getting name for
      : <a href="../ch03_02.htm">getservbyname</A>
   <dt>protocol
      : <a href="../ch03_02.htm">getprotobynumber</A>
   </DL>
<dt>numbers
   <dl>
   <dt>command
      : <a href="../ch08_01.htm">Using the Debugger</A>
   <dt>comparing in awk
      : <a href="../ch06_04.htm">a2p</A>
   <dt>comparison operators for
      : <a href="../ch01_05.htm">Comparison Operators</A>
   <dt>complex
      : <a href="../ch07_02.htm">Math::Complex--Complex Numbers Package</A>
   <dt>\d (for digit)
      : <a href="../ch01_07.htm">Regular Expressions</A>
   <dt>digits in names
      : <a href="../ch02_03.htm">Variables</A>
   <dt>floating-point
      : <a href="../ch07_02.htm">Math::BigFloat--Arbitrary-Length, Floating-Point Math Package</A>
   <dt>hexadecimal
      <dl>
      <dt><a href="../ch02_03.htm">String literals</A>
      <dt><a href="../ch02_04.htm">The rules of regular expression matching</A>
      <dt><a href="../ch03_02.htm">hex</A>
      </DL>
   <dt>integer
      : <a href="../ch07_02.htm">integer--Do Arithmetic in Integer Instead of Double</A>
   <dt>integers
      : <a href="../ch07_02.htm">Math::BigInt--Arbitrary-Length Integer Math Package</A>
   <dt>justifying by decimal point
      : <a href="../ch02_08.htm">Formats</A>
   <dt>large, underscore and
      : <a href="../ch02_03.htm">Numeric literals</A>
   <dt>octal
      <dl>
      <dt><a href="../ch02_03.htm">String literals</A>
      <dt><a href="../ch02_04.htm">The rules of regular expression matching</A>
      <dt><a href="../ch03_02.htm">oct</A>
      </DL>
   <dt>for pages
      : <a href="../ch02_09.htm">Per-Filehandle Special Variables</A>
   <dt>random
      <dl>
      <dt><a href="../ch03_02.htm">rand</A>
      <dt><a href="../ch03_02.htm">srand</A>
      </DL>
   <dt>truncating with int
      : <a href="../ch03_02.htm">int</A>
   </DL>
<dt>numeric literals
   : <a href="../ch02_03.htm">Numeric literals</A>

<p>
<hr>
<p>
<font size="-1">

<a href="idx_0.htm">Symbols</A> |
<a href="idx_a.htm">A</A> |
<a href="idx_b.htm">B</A> |
<a href="idx_c.htm">C</A> |
<a href="idx_d.htm">D</A> |
<a href="idx_e.htm">E</A> |
<a href="idx_f.htm">F</A> |
<a href="idx_g.htm">G</A> |
<a href="idx_h.htm">H</A> |
<a href="idx_i.htm">I</A> |
<a href="idx_j.htm">J</A> |
<a href="idx_k.htm">K</A> |
<a href="idx_l.htm">L</A> |
<a href="idx_m.htm">M</A> |
N |
<a href="idx_o.htm">O</A> |
<a href="idx_p.htm">P</A> |
<a href="idx_q.htm">Q</A> |
<a href="idx_r.htm">R</A> |
<a href="idx_s.htm">S</A> |
<a href="idx_t.htm">T</A> |
<a href="idx_u.htm">U</A> |
<a href="idx_v.htm">V</A> |
<a href="idx_w.htm">W</A> |
<a href="idx_x.htm">X</A> |
<a href="idx_y.htm">Y</A> |
<a href="idx_z.htm">Z</A> 
</FONT>
<p>
Copyright &copy; 1996 O'Reilly &amp; Associates, Inc.
All Rights Reserved.

</BODY>
</HTML>
