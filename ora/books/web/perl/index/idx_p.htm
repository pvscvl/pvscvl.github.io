<html>
<head>
<title>Index</TITLE>
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">
<!-- JavaScript: pathbegin.js -->
<b>Index</B>
<p>
<font size="-1">

<a href="idx_0.htm">Symbols</A> |
<a href="idx_a.htm">A</A> |
<a href="idx_b.htm">B</A> |
<a href="idx_c.htm">C</A> |
<a href="idx_d.htm">D</A> |
<a href="idx_e.htm">E</A> |
<a href="idx_f.htm">F</A> |
<a href="idx_g.htm">G</A> |
<a href="idx_h.htm">H</A> |
<a href="idx_i.htm">I</A> |
<a href="idx_j.htm">J</A> |
<a href="idx_k.htm">K</A> |
<a href="idx_l.htm">L</A> |
<a href="idx_m.htm">M</A> |
<a href="idx_n.htm">N</A> |
<a href="idx_o.htm">O</A> |
P |
<a href="idx_q.htm">Q</A> |
<a href="idx_r.htm">R</A> |
<a href="idx_s.htm">S</A> |
<a href="idx_t.htm">T</A> |
<a href="idx_u.htm">U</A> |
<a href="idx_v.htm">V</A> |
<a href="idx_w.htm">W</A> |
<a href="idx_x.htm">X</A> |
<a href="idx_y.htm">Y</A> |
<a href="idx_z.htm">Z</A> 
</FONT>
<hr>
<h1>P</h1>
<dl>
<dt>p command (debugger)
   : <a href="../ch08_01.htm">Debugger Commands</A>
<dt>-p file test operator
   : <a href="../ch02_05.htm">Named Unary and File Test Operators</A>
<dt>-p switch, perl
   : <a href="../ch06_01.htm">Switches</A>
<dt>-P switch, perl
   : <a href="../ch06_01.htm">Switches</A>
<dt>pack function
   : <a href="../ch03_02.htm">pack</A>
<dt>package declaration
   <dl>
   <dt><a href="../ch03_02.htm">package</A>
   <dt><a href="../ch05_01.htm">Packages</A>
   </DL>
<dt>package variables
   : <a href="../ch02_06.htm">Scoped Declarations</A>
<dt>packages
   <dl>
   <dt><a href="../ch05_01.htm">Packages, Modules, and Object Classes</A>
   <dt><a href="../ch05_01.htm">Autoloading</A>
   <dt><a href="../ch07_01.htm">The Standard Perl Library</A>
   <dt>BEGIN and END subentries
      : <a href="../ch05_01.htm">Package Constructors and Destructors: BEGIN and END</A>
   <dt>binding variables to
      : <a href="../ch03_02.htm">untie</A>
   <dt>blessing objects into
      : <a href="../ch03_02.htm">bless</A>
   <dt>declaring
      <dl>
      <dt><a href="../ch02_06.htm">Scoped Declarations</A>
      <dt><a href="../ch03_02.htm">package</A>
      </DL>
   <dt>importing semantics to
      : <a href="../ch03_02.htm">use</A>
   <dt>names for
      : <a href="../ch08_04.htm">Programming with Style</A>
   <dt>tying variables to
      : <a href="../ch03_02.htm">tie</A>
   </DL>
<dt>packed sockaddr
   : <a href="../ch03_02.htm">getpeername</A>
<dt>page numbers
   : <a href="../ch02_09.htm">Per-Filehandle Special Variables</A>
<dt>pages
   : <a href="../ch02_09.htm">Per-Filehandle Special Variables</A>
<dt>pairs, key/value
   : <a href="../ch02_03.htm">Hashes (Associative Arrays)</A>
<dt>paragraph mode
   : <a href="../ch06_01.htm">Switches</A>
<dt>paragraphs, wrapping text into
   : <a href="../ch07_02.htm">Text::Wrap--Wrap Text into a Paragraph</A>
<dt>parent classes
   : <a href="../ch05_03.htm">Brief Refresher on Object-Oriented Programming</A>
<dt>parent processes
   : <a href="../ch03_02.htm">fork</A>
<dt>parentheses
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>parse file specifications
   : <a href="../ch07_02.htm">File::Basename--Parse File Specifications</A>
<dt>ParseWords module
   : <a href="../ch07_02.htm">Text::ParseWords--Parse Text into a List of Tokens</A>
<dt>passing
   <dl>
   <dt>reference
      : <a href="../ch02_07.htm">Passing References</A>
   <dt>symbol table entries
      : <a href="../ch02_07.htm">Passing Symbol Table Entries (Typeglobs)</A>
   </DL>
<dt>passwd file
   : <a href="../ch03_02.htm">getpwent</A>
<dt>passwords
   : <a href="../ch03_02.htm">srand</A>
   <dl>
   <dt>crypt function and
      : <a href="../ch03_02.htm">crypt</A>
   </DL>
<dt>patches
   : <a href="../ch08_05.htm">Patches</A>
<dt>PATH environment variable
   <dl>
   <dt><a href="../ch06_01.htm">Switches</A>
   <dt><a href="../ch06_03.htm">Cleaning up your path</A>
   </DL>
<dt>Path module
   : <a href="../ch07_02.htm">File::Path--Create or Remove a Series of Directories</A>
<dt>pathname, current working directory
   : <a href="../ch07_02.htm">Cwd--Get Pathname of Current Working Directory</A>
<dt>pattern
   <dl>
   <dt>embedded modifiers for
      : <a href="../ch02_04.htm">Regular expression extensions</A>
   </DL>
<dt>pattern-matching operator
   : <a href="../ch01_07.htm">Regular Expressions</A>
<dt>patterns
   <dl>
   <dt><a href="../ch01_07.htm">Regular Expressions</A>
   <dt><a href="../ch02_04.htm">Pattern Matching</A>
   <dt><a href="../ch03_02.htm">/PATTERN/</A>
   <dt>greedy matching
      <dl>
      <dt><a href="../ch01_07.htm">Quantifiers</A>
      <dt><a href="../ch02_04.htm">The rules of regular expression matching</A>
      </DL>
   <dt>matching precedence
      : <a href="../ch02_04.htm">The rules of regular expression matching</A>
   <dt>minimal matching
      : <a href="../ch01_07.htm">Minimal Matching</A>
   <dt>quantifiers
      : <a href="../ch02_04.htm">The rules of regular expression matching</A>
   <dt>special variables for matching
      : <a href="../ch02_09.htm">Regular Expression Special Variables</A>
   <dt>split function and
      : <a href="../ch03_02.htm">split</A>
   <dt>study function
      : <a href="../ch03_02.htm">study</A>
   <dt>for untainting data
      : <a href="../ch06_03.htm">Detecting and laundering tainted data</A>
   </DL>
<dt>pausing scripts
   : <a href="../ch03_02.htm">sleep</A>
<dt>Penguin module
   : <a href="../ch06_03.htm">Penguin</A>
<dt>percent sign (%)
   <dl>
   <dt>for checksums
      : <a href="../ch03_02.htm">unpack</A>
   </DL>
<dt>performance
   <dl>
   <dt><a href="../ch00_01.htm">Perl in a Nutshell</A>
   <dt><a href="../ch08_03.htm">Efficiency</A>
   <dt>measuring
      : <a href="../ch03_02.htm">times</A>
   </DL>
<dt>period
   <dl>
   <dt><a href="../ch01_07.htm">Quantifiers</A>
   <dt><a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
   </DL>
<dt>Perl
   <dl>
   <dt>extensions to
      : <a href="../ch07_02.htm">ExtUtils::Install--Install Files from Here to There</A>
   </DL>
<dt>Perl 4 (and before)
   : <a href="../ch08_02.htm">Previous Perl Traps</A>
<dt>perl intepreter program
   : <a href="../ch01_03.htm">How to Do It</A>
   <dl>
   <dt>-e option
      : <a href="../ch01_03.htm">How to Do It</A>
   <dt>-w switch
      : <a href="../ch01_03.htm">How to Do It</A>
   </DL>
<dt>perl intepreter proram
   <dl>
   <dt>-w option
      : <a href="../ch03_01.htm">Functions</A>
   </DL>
<dt>perl interpreter program
   : <a href="../ch06_01.htm">Switches</A>
   <dl>
   <dt>-a switch
      <dl>
      <dt><a href="../ch02_09.htm">Global Special Arrays</A>
      <dt><a href="../ch06_01.htm">Switches</A>
      </DL>
   <dt>-c switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-D switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-d switch
      <dl>
      <dt><a href="../ch06_01.htm">Switches</A>
      <dt><a href="../ch08_01.htm">The Perl Debugger</A>
      <dt><a href="../ch08_01.htm">Alternative Debuggers: The Perl Profiler</A>
      </DL>
   <dt>-e switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-F switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-h switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-I switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-i switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-l switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-M switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-m switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-n switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-P switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-p switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-S switch
      <dl>
      <dt><a href="../ch06_01.htm">Switches</A>
      <dt><a href="../ch06_02.htm">UNIX-domain clients and servers</A>
      </DL>
   <dt>-s switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>sticky bit
      : <a href="../ch08_03.htm">Time Efficiency</A>
   <dt>-T switch
      <dl>
      <dt><a href="../ch06_01.htm">Switches</A>
      <dt><a href="../ch06_02.htm">Internet TCP clients and servers</A>
      <dt><a href="../ch06_03.htm">Handling Insecure Data</A>
      </DL>
   <dt>-U switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-u switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-V switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-v switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-w switch
      <dl>
      <dt><a href="../ch06_01.htm">Switches</A>
      <dt><a href="../ch07_02.htm">diagnostics--Force Verbose Warning Diagnostics</A>
      <dt><a href="../ch09_01.htm">Diagnostic Messages</A>
      </DL>
   <dt>-x switch
      <dl>
      <dt><a href="../ch06_01.htm">Command Processing</A>
      <dt><a href="../ch06_01.htm">Switches</A>
      </DL>
   <dt>- - switch
      : <a href="../ch06_01.htm">Switches</A>
   <dt>-0 switch
      : <a href="../ch06_01.htm">Switches</A>
   </DL>
<dt>Perl Profiler
   : <a href="../ch08_01.htm">Alternative Debuggers: The Perl Profiler</A>
<dt>Perl standard library
   : <a href="../ch07_01.htm">The Standard Perl Library</A>
<dt>Perl, history of
   : <a href="../ch08_07.htm">History Made Practical</A>
<dt>Perl, obtaining
   : <a href="../ch00_04.htm">How to Get Perl</A>
<dt>PERL5DB variable
   : <a href="../ch08_01.htm">Debugger Customization</A>
<dt>$PERLDB
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>.perldb file
   : <a href="../ch08_01.htm">Debugger Customization</A>
<dt>perldoc command
   : <a href="../ch00_03.htm">Perl Manpages</A>
<dt>PERL_DESTRUCT_LEVEL variable
   : <a href="../ch05_03.htm">A Note on Garbage Collection</A>
<dt>$PERL_VERSION
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>permissions
   <dl>
   <dt><a href="../ch03_02.htm">sysopen</A>
   <dt><a href="../ch03_02.htm">umask</A>
   </DL>
<dt>permissions, file
   <dl>
   <dt>changing
      : <a href="../ch03_02.htm">chmod</A>
   </DL>
<dt>pi
   : <a href="../ch03_02.htm">atan2</A>
<dt>picture lines
   <dl>
   <dt><a href="../ch02_08.htm">Formats</A>
   <dt><a href="../ch03_02.htm">format</A>
   </DL>
<dt>$PID
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>pid
   : <a href="../ch03_02.htm">open</A>
<dt>pid (process ID)
   <dl>
   <dt>getting process group
      : <a href="../ch03_02.htm">setpgrp</A>
   </DL>
<dt>Ping module
   : <a href="../ch07_02.htm">Net::Ping--Check Whether a Host Is Online</A>
<dt>pingecho( )
   : <a href="../ch07_02.htm">Net::Ping--Check Whether a Host Is Online</A>
<dt>pipe function
   : <a href="../ch03_02.htm">pipe</A>
<dt>pipe symbol
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>pipes
   : <a href="../ch06_02.htm">Pipes</A>
   <dl>
   <dt>closing
      : <a href="../ch03_02.htm">close</A>
   </DL>
<dt>pluralities
   : <a href="../ch01_02.htm">Pluralities</A>
<dt>plus
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>Pod: :Text module
   : <a href="../ch07_02.htm">Pod::Text--Convert POD Data to Formatted ASCII Text</A>
<dt>poetry in Perl
   : <a href="../ch08_06.htm">Perl Poetry</A>
<dt>pop function
   : <a href="../ch03_02.htm">pop</A>
<dt>port
   <dl>
   <dt>getting name from number
      : <a href="../ch03_02.htm">getservbyname</A>
   <dt>getting number from name
      : <a href="../ch03_02.htm">getservbyname</A>
   </DL>
<dt>porting, efficiency of
   : <a href="../ch08_03.htm">Porter Efficiency</A>
<dt>pos function
   : <a href="../ch03_02.htm">pos</A>
<dt>positive lookahead assertion
   : <a href="../ch02_04.htm">Regular expression extensions</A>
<dt>POSIX module
   : <a href="../ch07_02.htm">POSIX--Perl Interface to IEEE Std 1003.1</A>
<dt>$POSTMATCH
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>pound sign
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>pragmas
   <dl>
   <dt><a href="../ch02_06.htm">Global Declarations</A>
   <dt><a href="../ch02_06.htm">Pragmas</A>
   <dt><a href="../ch03_02.htm">use</A>
   <dt><a href="../ch05_01.htm">Packages, Modules, and Object Classes</A>
   <dt><a href="../ch06_01.htm">Switches</A>
   <dt><a href="../ch07_01.htm">The Standard Perl Library</A>
   <dt>modules and
      : <a href="../ch05_02.htm">Modules</A>
   </DL>
<dt>pre-extending arrays
   : <a href="../ch08_03.htm">Time Efficiency</A>
<dt>precedence
   <dl>
   <dt><a href="../ch03_01.htm">Functions</A>
   <dt><a href="../ch08_02.htm">Previous Perl Traps</A>
   <dt>diagnostic messages
      : <a href="../ch09_01.htm">Diagnostic Messages</A>
   <dt>key/value pair (hashes)
      : <a href="../ch02_03.htm">Hashes (Associative Arrays)</A>
   <dt>logical operators
      : <a href="../ch02_05.htm">Logical and, or, not, and xor</A>
   <dt>operator, table of
      : <a href="../ch02_05.htm">Operators</A>
   <dt>regular expression matching
      : <a href="../ch02_04.htm">The rules of regular expression matching</A>
   </DL>
<dt>$PREMATCH
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>prepending
   <dl>
   <dt>directories to @INC
      : <a href="../ch06_01.htm">Switches</A>
   </DL>
<dt>prepending elements to arrays
   : <a href="../ch03_02.htm">unshift</A>
<dt>print function
   <dl>
   <dt><a href="../ch03_02.htm">print</A>
   <dt><a href="../ch08_02.htm">Awk Traps</A>
   <dt><a href="../ch08_03.htm">Time Efficiency</A>
   <dt><a href="../ch08_03.htm">Time Efficiency</A>
   </DL>
<dt>printf function
   <dl>
   <dt><a href="../ch03_02.htm">printf</A>
   <dt><a href="../ch03_02.htm">sprintf</A>
   <dt><a href="../ch08_03.htm">Time Efficiency</A>
   </DL>
<dt>printing
   <dl>
   <dt>multidimensional arrays
      <dl>
      <dt><a href="../ch04_06.htm">Access and Printing</A>
      <dt><a href="../ch04_07.htm">Access and printing of an array of arrays</A>
      <dt><a href="../ch04_07.htm">Access and printing of a hash of arrays</A>
      <dt><a href="../ch04_07.htm">Access and printing of an array of hashes</A>
      </DL>
   <dt>multidimensional hashes
      : <a href="../ch04_07.htm">Access and printing of a hash of hashes</A>
   <dt>nested data structures
      : <a href="../ch08_01.htm">Debugger Commands</A>
   </DL>
<dt>priority, process
   : <a href="../ch03_02.htm">setpriority</A>
<dt>private variables
   : <a href="../ch03_02.htm">my</A>
<dt>procedures
   : <a href="../ch01_02.htm">Verbs</A>
<dt>process
   <dl>
   <dt>returning priority of
      : <a href="../ch03_02.htm">getpriority</A>
   </DL>
<dt>process group
   <dl>
   <dt><a href="../ch03_02.htm">getpgrp</A>
   <dt><a href="../ch03_02.htm">setpgrp</A>
   </DL>
<dt>process ID (pid)
   <dl>
   <dt>getting process group from
      : <a href="../ch03_02.htm">getpgrp</A>
   <dt>returning
      : <a href="../ch03_02.htm">getppid</A>
   <dt>returning with fork
      : <a href="../ch03_02.htm">fork</A>
   </DL>
<dt>processes
   <dl>
   <dt>error handling poermission for
      : <a href="../ch07_02.htm">IPC::Open3--Open a Process for Reading, Writing, and Error Handling</A>
   <dt>fork function
      : <a href="../ch03_02.htm">fork</A>
   <dt>getting group for
      : <a href="../ch03_02.htm">setpgrp</A>
   <dt>ID (pid)
      : <a href="../ch03_02.htm">open</A>
   <dt>interprocess communication (IPC)
      : <a href="../ch06_02.htm">Cooperating with Other Processes</A>
   <dt>killing
      : <a href="../ch03_02.htm">kill</A>
   <dt>named pipes
      : <a href="../ch06_02.htm">Named pipes</A>
   <dt>priority, setting
      : <a href="../ch03_02.htm">setpriority</A>
   <dt>read/write permission for
      : <a href="../ch07_02.htm">IPC::Open2--Open a Process for Both Reading and Writing</A>
   <dt>umask for
      : <a href="../ch03_02.htm">umask</A>
   <dt>variables for
      : <a href="../ch02_09.htm">Global Special Variables</A>
   <dt>waiting for
      : <a href="../ch03_02.htm">wait</A>
   <dt>zombie
      : <a href="../ch06_02.htm">Signals</A>
   </DL>
<dt>processing shell commands
   : <a href="../ch06_01.htm">Command Processing</A>
<dt>$PROCESS_ID
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>program generators
   : <a href="../ch06_04.htm">Program Generation</A>
<dt>programming style
   : <a href="../ch08_04.htm">Programming with Style</A>
<dt>programs
   <dl>
   <dt>core dump of
      : <a href="../ch03_02.htm">dump</A>
   <dt>executing
      : <a href="../ch03_02.htm">system</A>
   <dt>exiting
      : <a href="../ch03_02.htm">exit</A>
   </DL>
<dt>$PROGRAM_NAME
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>protocol name
   <dl>
   <dt>getting from protocol number
      : <a href="../ch03_02.htm">getprotobyname</A>
   </DL>
<dt>protocols
   <dl>
   <dt>name-number translations
      : <a href="../ch03_02.htm">getprotobynumber</A>
   </DL>
<dt>prototypes
   : <a href="../ch02_07.htm">Prototypes</A>
<dt>pseudo-literals
   : <a href="../ch02_03.htm">Input Operators</A>
<dt>purging
   : <a href="../ch04_07.htm">Generation of a hash of complex records</A>
<dt>push function
   : <a href="../ch03_02.htm">push</A>
<dt>put function
   : <a href="../ch07_02.htm">Using the Berkeley DB interface directly</A>
<dt>pwd command (UNIX)
   : <a href="../ch08_03.htm">Time Efficiency</A>
<dt>PWD environment variable
   : <a href="../ch07_02.htm">Cwd--Get Pathname of Current Working Directory</A>

<p>
<hr>
<p>
<font size="-1">

<a href="idx_0.htm">Symbols</A> |
<a href="idx_a.htm">A</A> |
<a href="idx_b.htm">B</A> |
<a href="idx_c.htm">C</A> |
<a href="idx_d.htm">D</A> |
<a href="idx_e.htm">E</A> |
<a href="idx_f.htm">F</A> |
<a href="idx_g.htm">G</A> |
<a href="idx_h.htm">H</A> |
<a href="idx_i.htm">I</A> |
<a href="idx_j.htm">J</A> |
<a href="idx_k.htm">K</A> |
<a href="idx_l.htm">L</A> |
<a href="idx_m.htm">M</A> |
<a href="idx_n.htm">N</A> |
<a href="idx_o.htm">O</A> |
P |
<a href="idx_q.htm">Q</A> |
<a href="idx_r.htm">R</A> |
<a href="idx_s.htm">S</A> |
<a href="idx_t.htm">T</A> |
<a href="idx_u.htm">U</A> |
<a href="idx_v.htm">V</A> |
<a href="idx_w.htm">W</A> |
<a href="idx_x.htm">X</A> |
<a href="idx_y.htm">Y</A> |
<a href="idx_z.htm">Z</A> 
</FONT>
<p>
Copyright &copy; 1996 O'Reilly &amp; Associates, Inc.
All Rights Reserved.

</BODY>
</HTML>
