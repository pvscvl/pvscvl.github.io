<html>
<head>
<title>Index</TITLE>
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">
<!-- JavaScript: pathbegin.js -->
<b>Index</B>
<p>
<font size="-1">

<a href="idx_0.htm">Symbols</A> |
<a href="idx_a.htm">A</A> |
<a href="idx_b.htm">B</A> |
C |
<a href="idx_d.htm">D</A> |
<a href="idx_e.htm">E</A> |
<a href="idx_f.htm">F</A> |
<a href="idx_g.htm">G</A> |
<a href="idx_h.htm">H</A> |
<a href="idx_i.htm">I</A> |
<a href="idx_j.htm">J</A> |
<a href="idx_k.htm">K</A> |
<a href="idx_l.htm">L</A> |
<a href="idx_m.htm">M</A> |
<a href="idx_n.htm">N</A> |
<a href="idx_o.htm">O</A> |
<a href="idx_p.htm">P</A> |
<a href="idx_q.htm">Q</A> |
<a href="idx_r.htm">R</A> |
<a href="idx_s.htm">S</A> |
<a href="idx_t.htm">T</A> |
<a href="idx_u.htm">U</A> |
<a href="idx_v.htm">V</A> |
<a href="idx_w.htm">W</A> |
<a href="idx_x.htm">X</A> |
<a href="idx_y.htm">Y</A> |
<a href="idx_z.htm">Z</A> 
</FONT>
<hr>
<h1>C</h1>
<dl>
<dt>\c
   : <a href="../ch02_04.htm">The rules of regular expression matching</A>
<dt>c command (debugger)
   : <a href="../ch08_01.htm">Debugger Commands</A>
<dt>-C file test operator
   : <a href="../ch02_05.htm">Named Unary and File Test Operators</A>
<dt>-c file test operator
   : <a href="../ch02_05.htm">Named Unary and File Test Operators</A>
<dt>C language
   : <a href="../ch08_02.htm">C Traps</A>
   <dl>
   <dt>embedding in Perl
      : <a href="../ch06_04.htm">Embedding C and C++ in Perl</A>
   <dt>embedding Perl in
      : <a href="../ch06_04.htm">Embedding Perl in C and C++</A>
   <dt>library functions
      : <a href="../ch03_01.htm">Functions</A>
   <dt>Miniperl module for
      : <a href="../ch07_02.htm">ExtUtils::Miniperl--Write the C Code for perlmain.c</A>
   <dt>wrapper programs
      : <a href="../ch06_03.htm">Security bugs</A>
   </DL>
<dt>/c modifier
   : <a href="../ch02_04.htm">Pattern-Matching Operators</A>
<dt>C preprocessor
   : <a href="../ch06_01.htm">Switches</A>
<dt>-c switch, perl
   : <a href="../ch06_01.htm">Switches</A>
<dt>C++ language
   <dl>
   <dt><a href="../ch06_04.htm">Embedding Perl in C and C++</A>
   <dt><a href="../ch06_04.htm">Embedding C and C++ in Perl</A>
   </DL>
<dt>C-style logical operators
   : <a href="../ch02_05.htm">C-style Logical (Short Circuit) Operators</A>
<dt>cacheout( )
   : <a href="../ch07_02.htm">FileCache--Keep More Files Open Than the System Permits</A>
<dt>caller function
   <dl>
   <dt><a href="../ch03_02.htm">caller</A>
   <dt><a href="../ch08_01.htm">Debugger Internals</A>
   <dt><a href="../ch08_02.htm">Previous Perl Traps</A>
   </DL>
<dt>Cap module
   : <a href="../ch07_02.htm">Term::Cap--Terminal Capabilities Interface</A>
<dt>capitalization
   <dl>
   <dt><a href="../ch02_03.htm">Variables</A>
   <dt><a href="../ch03_02.htm">uc</A>
   <dt>changing
      : <a href="../ch02_04.htm">Pattern-Matching Operators</A>
   <dt>escape sequences for
      : <a href="../ch02_03.htm">String literals</A>
   <dt>lc function
      : <a href="../ch03_02.htm">lc</A>
   <dt>lcfirst function
      : <a href="../ch03_02.htm">lc</A>
   <dt>package/module names
      : <a href="../ch08_04.htm">Programming with Style</A>
   </DL>
<dt>caret
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>Carp module
   : <a href="../ch07_02.htm">Carp--Generate Error Messages</A>
<dt>case sensitivity
   <dl>
   <dt><a href="../ch02_04.htm">Regular expression extensions</A>
   <dt><a href="../ch02_04.htm">Pattern-Matching Operators</A>
   </DL>
<dt>case structure
   : <a href="../ch02_06.htm">Bare Blocks and Case Structures</A>
<dt>cbreak option
   : <a href="../ch03_02.htm">getc</A>
<dt>centering
   : <a href="../ch02_08.htm">Format Variables</A>
<dt>character classes
   <dl>
   <dt><a href="../ch01_07.htm">Regular Expressions</A>
   <dt><a href="../ch02_04.htm">The rules of regular expression matching</A>
   </DL>
<dt>character set, setting
   : <a href="../ch07_02.htm">I18N::Collate--Compare 8-bit Scalar Data According to the Current Locale</A>
<dt>characters
   : <a href="../ch02_04.htm">The rules of regular expression matching</A>
   <dl>
   <dt>case of
      : <a href="../ch03_02.htm">uc</A>
   <dt>deleting
      : <a href="../ch03_02.htm">chomp</A>
   <dt>getting ASCII values of
      : <a href="../ch03_02.htm">ord</A>
   <dt>getting from ASCII values
      : <a href="../ch03_02.htm">chr</A>
   <dt>hexadecimal
      : <a href="../ch02_03.htm">String literals</A>
   <dt>literal
      : <a href="../ch02_04.htm">The regular expression bestiary</A>
   <dt>metacharacters
      : <a href="../ch02_04.htm">The regular expression bestiary</A>
   <dt>octal
      : <a href="../ch02_03.htm">String literals</A>
   <dt>prototype
      : <a href="../ch02_07.htm">Prototypes</A>
   <dt>single-character input
      : <a href="../ch03_02.htm">getc</A>
   <dt>special
      : <a href="../ch02_04.htm">The rules of regular expression matching</A>
   <dt>whitespace
      : <a href="../ch02_04.htm">Pattern Matching</A>
   <dt>$[ variable
      : <a href="../ch02_09.htm">Global Special Variables</A>
   </DL>
<dt>chdir function
   <dl>
   <dt><a href="../ch03_02.htm">chdir</A>
   <dt><a href="../ch07_02.htm">Cwd--Get Pathname of Current Working Directory</A>
   </DL>
<dt>checking
   <dl>
   <dt>hosts if online
      : <a href="../ch07_02.htm">Net::Ping--Check Whether a Host Is Online</A>
   <dt>MANIFEST file
      : <a href="../ch07_02.htm">ExtUtils::Manifest--Utilities to Write and Check a MANIFEST File</A>
   <dt>taint
      : <a href="../ch06_03.htm">Handling Insecure Data</A>
   </DL>
<dt>checksums
   : <a href="../ch03_02.htm">unpack</A>
<dt>CheckTree module
   : <a href="../ch07_02.htm">File::CheckTree--Run Many Tests on a Collection of Files</A>
<dt>child processes
   : <a href="../ch03_02.htm">wait</A>
<dt>$CHILD_ERROR
   : <a href="../ch07_02.htm">vars--Predeclare Global Variable Names</A>
<dt>chmod function
   : <a href="../ch03_02.htm">chmod</A>
<dt>chomp function
   <dl>
   <dt><a href="../ch01_04.htm">Filehandles</A>
   <dt><a href="../ch03_02.htm">chomp</A>
   </DL>
<dt>chop function
   <dl>
   <dt><a href="../ch01_04.htm">Filehandles</A>
   <dt><a href="../ch03_02.htm">chop</A>
   <dt><a href="../ch03_02.htm">chop</A>
   </DL>
<dt>chown function
   : <a href="../ch03_02.htm">chown</A>
<dt>chr function
   : <a href="../ch03_02.htm">chr</A>
<dt>chroot function
   : <a href="../ch03_02.htm">chroot</A>
<dt>circular references
   : <a href="../ch05_03.htm">A Note on Garbage Collection</A>
<dt>class context
   : <a href="../ch05_05.htm">Class Context and the Object</A>
<dt>class methods
   <dl>
   <dt><a href="../ch05_03.htm">Brief Refresher on Object-Oriented Programming</A>
   <dt><a href="../ch05_03.htm">Class methods</A>
   </DL>
<dt>classes
   <dl>
   <dt><a href="../ch05_01.htm">Packages, Modules, and Object Classes</A>
   <dt><a href="../ch05_03.htm">Brief Refresher on Object-Oriented Programming</A>
   <dt><a href="../ch05_03.htm">A Class Is Simply a Package</A>
   <dt><a href="../ch05_05.htm">Class Context and the Object</A>
   <dt>base
      : <a href="../ch05_05.htm">Overriding Base Class Methods</A>
   <dt>package
      <dl>
      <dt><a href="../ch03_02.htm">tie</A>
      <dt><a href="../ch03_02.htm">untie</A>
      </DL>
   <dt>using as base class
      : <a href="../ch05_05.htm">Object-Oriented Scaling Tips</A>
   </DL>
<dt>CLEAR method
   : <a href="../ch05_04.htm">Tying Hashes</A>
<dt>clearallcache() routine
   : <a href="../ch07_02.htm">Benchmark--Check and Compare Running Times of Code</A>
<dt>clearcache() routine
   : <a href="../ch07_02.htm">Benchmark--Check and Compare Running Times of Code</A>
<dt>clients, TCP
   : <a href="../ch06_02.htm">Internet TCP clients and servers</A>
<dt>close function
   <dl>
   <dt><a href="../ch03_02.htm">close</A>
   <dt><a href="../ch06_02.htm">Anonymous pipes</A>
   </DL>
<dt>closedir function
   <dl>
   <dt><a href="../ch03_02.htm">closedir</A>
   <dt><a href="../ch07_02.htm">DirHandle--Supply Object Methods for Directory Handles</A>
   </DL>
<dt>closelog( )
   : <a href="../ch07_02.htm">Sys::Syslog--Perl Interface to UNIX syslog(3) Calls</A>
<dt>closures
   : <a href="../ch04_03.htm">Closures</A>
<dt>clustering command-line options
   : <a href="../ch07_02.htm">Getopt::Std--Process Single-Character Options with Option Clustering</A>
<dt>cmp operator
   : <a href="../ch03_02.htm">sort</A>
<dt>code
   <dl>
   <dt>effienciency of
      : <a href="../ch08_03.htm">Programmer Efficiency</A>
   <dt>examples, obtaining
      : <a href="../ch08_05.htm">Examples</A>
   <dt>listing
      : <a href="../ch08_01.htm">Debugger Commands</A>
   <dt>perlmain.c
      : <a href="../ch07_02.htm">ExtUtils::Miniperl--Write the C Code for perlmain.c</A>
   <dt>reusing
      <dl>
      <dt><a href="../ch05_05.htm">Thinking of Code Reuse</A>
      <dt><a href="../ch08_04.htm">Programming with Style</A>
      </DL>
   <dt>running times for
      : <a href="../ch07_02.htm">Benchmark--Check and Compare Running Times of Code</A>
   <dt>safe namspaces for
      : <a href="../ch07_02.htm">Safe--Create Safe Namespaces for Evaluating Perl Code</A>
   </DL>
<dt>Collate module
   : <a href="../ch07_02.htm">I18N::Collate--Compare 8-bit Scalar Data According to the Current Locale</A>
<dt>colon
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>comma
   : <a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
<dt>comma operator
   : <a href="../ch02_03.htm">Hashes (Associative Arrays)</A>
<dt>command
   <dl>
   <dt>history, debugger and
      : <a href="../ch08_01.htm">Using the Debugger</A>
   </DL>
<dt>command input operator
   : <a href="../ch02_03.htm">Command input (backtick) operator</A>
<dt>command interpreters
   : <a href="../ch06_01.htm">Cooperating with Command Interpreters</A>
<dt>command-line options
   <dl>
   <dt><a href="../ch07_02.htm">Getopt::Long--Extended Processing of Command-Line Options</A>
   <dt><a href="../ch07_02.htm">Getopt::Std--Process Single-Character Options with Option Clustering</A>
   </DL>
<dt>commands
   <dl>
   <dt>buffering
      : <a href="../ch02_09.htm">Per-Filehandle Special Variables</A>
   <dt>for loop control
      : <a href="../ch02_06.htm">Loop control</A>
   <dt>names for
      : <a href="../ch01_02.htm">Verbs</A>
   <dt>Perl debugger
      : <a href="../ch08_01.htm">Debugger Commands</A>
   <dt>processing
      : <a href="../ch06_01.htm">Command Processing</A>
   <dt>shell
      : <a href="../ch07_02.htm">Shell--Run Shell Commands Transparently Within Perl</A>
   </DL>
<dt>comments
   <dl>
   <dt><a href="../ch02_04.htm">Regular expression extensions</A>
   <dt><a href="../ch08_02.htm">C Traps</A>
   <dt># (sharp) for
      : <a href="../ch02_04.htm">Pattern Matching</A>
   </DL>
<dt>comp.lang.perl newsgroups
   : <a href="../ch00_03.htm">Usenet Newsgroups</A>
<dt>comparing
   <dl>
   <dt>in awk, versus in Perl
      : <a href="../ch06_04.htm">a2p</A>
   <dt>setting character set for
      : <a href="../ch07_02.htm">I18N::Collate--Compare 8-bit Scalar Data According to the Current Locale</A>
   <dt>strings
      : <a href="../ch08_02.htm">Universal Blunders</A>
   </DL>
<dt>comparison operators
   <dl>
   <dt><a href="../ch01_05.htm">Comparison Operators</A>
   <dt><a href="../ch02_05.htm">Equality Operators</A>
   <dt><a href="../ch07_02.htm">Overloadable operations</A>
   <dt>sort function and
      : <a href="../ch03_02.htm">sort</A>
   </DL>
<dt>compiler hints
   : <a href="../ch02_09.htm">Global Special Variables</A>
<dt>compiler limits
   : <a href="../ch07_01.htm">The Standard Perl Library</A>
<dt>complementation
   : <a href="../ch08_07.htm">History Made Practical</A>
<dt>Complete( )
   : <a href="../ch07_02.htm">Term::Complete--Word Completion Module</A>
<dt>completion
   : <a href="../ch07_02.htm">Term::Complete--Word Completion Module</A>
<dt>Complex module
   : <a href="../ch07_02.htm">Math::Complex--Complex Numbers Package</A>
<dt>Comprehensive Perl Archive Network (CPAN)
   <dl>
   <dt><a href="../ch00_04.htm">How to Get Perl</A>
   <dt><a href="../ch07_01.htm">Beyond the Standard Library</A>
   </DL>
<dt>concatenation (.) operator
   <dl>
   <dt><a href="../ch01_05.htm">String Operators</A>
   <dt><a href="../ch02_05.htm">Additive Operators</A>
   <dt><a href="../ch08_02.htm">Awk Traps</A>
   <dt><a href="../ch08_03.htm">Time Efficiency</A>
   </DL>
<dt>conditional (?:) operator
   : <a href="../ch02_05.htm">Conditional Operator</A>
<dt>conditional statements
   : <a href="../ch02_06.htm">If Statements</A>
<dt>confess() routine
   : <a href="../ch07_02.htm">Carp--Generate Error Messages</A>
<dt>Config module
   : <a href="../ch07_02.htm">Config--Access Perl Configuration Information</A>
<dt>configuration
   <dl>
   <dt>accessing information about
      : <a href="../ch07_02.htm">Config--Access Perl Configuration Information</A>
   <dt>GetOptions( )
      : <a href="../ch07_02.htm">Configuration variables</A>
   </DL>
<dt>connect function
   : <a href="../ch03_02.htm">connect</A>
<dt>connection, shutting down
   : <a href="../ch03_02.htm">shutdown</A>
<dt>constructors
   <dl>
   <dt><a href="../ch04_02.htm">Object Constructors</A>
   <dt><a href="../ch05_03.htm">Brief Refresher on Object-Oriented Programming</A>
   <dt><a href="../ch05_03.htm">An Object Is Simply a Referenced Thingy</A>
   <dt>inheriting
      : <a href="../ch05_05.htm">Inheriting a Constructor</A>
   </DL>
<dt>containment
   : <a href="../ch05_05.htm">Containment (the "Has-a" Relationship)</A>
<dt>context
   <dl>
   <dt><a href="../ch02_03.htm">Context</A>
   <dt><a href="../ch02_03.htm">Context</A>
   </DL>
<dt>continuation lines
   <dl>
   <dt><a href="../ch02_06.htm">Loop control</A>
   <dt><a href="../ch02_09.htm">Global Special Variables</A>
   </DL>
<dt>continue block
   <dl>
   <dt><a href="../ch02_06.htm">While statements</A>
   <dt><a href="../ch02_06.htm">Loop control</A>
   <dt><a href="../ch02_06.htm">Loop control</A>
   </DL>
<dt>continue command (in C)
   : <a href="../ch08_02.htm">C Traps</A>
<dt>control characters
   <dl>
   <dt><a href="../ch02_03.htm">String literals</A>
   <dt><a href="../ch02_04.htm">The rules of regular expression matching</A>
   </DL>
<dt>control structures
   : <a href="../ch01_06.htm">Control Structures</A>
<dt>converting
   <dl>
   <dt>ASCII value to character
      : <a href="../ch03_02.htm">chr</A>
   <dt>between languages
      <dl>
      <dt><a href="../ch06_04.htm">Translation from Other Languages</A>
      <dt><a href="../ch08_05.htm">Translation from Awk and Sed</A>
      </DL>
   <dt>character to ASCII value
      : <a href="../ch03_02.htm">ord</A>
   <dt>decimal numbers to hexadecimal
      : <a href="../ch03_02.htm">sprintf</A>
   <dt>decimal numbers to octal
      : <a href="../ch03_02.htm">sprintf</A>
   <dt>hexadecimal numbers to decimal
      : <a href="../ch03_02.htm">hex</A>
   <dt>list values to strings
      <dl>
      <dt><a href="../ch03_02.htm">join</A>
      <dt><a href="../ch03_02.htm">pack</A>
      </DL>
   <dt>octal numbers to decimal
      : <a href="../ch03_02.htm">oct</A>
   <dt>POD data to ASCII text
      : <a href="../ch07_02.htm">Pod::Text--Convert POD Data to Formatted ASCII Text</A>
   <dt>strings to list values
      <dl>
      <dt><a href="../ch03_02.htm">split</A>
      <dt><a href="../ch03_02.htm">unpack</A>
      </DL>
   <dt>time
      <dl>
      <dt><a href="../ch03_02.htm">gmtime</A>
      <dt><a href="../ch03_02.htm">localtime</A>
      </DL>
   </DL>
<dt>copy constructor
   : <a href="../ch07_02.htm">Copy constructor</A>
<dt>Copy module
   : <a href="../ch07_02.htm">File::Copy--Copy Files or Filehandles</A>
<dt>core files
   <dl>
   <dt><a href="../ch03_02.htm">dump</A>
   <dt><a href="../ch06_01.htm">Switches</A>
   </DL>
<dt>cos function
   : <a href="../ch03_02.htm">cos</A>
<dt>cosines
   : <a href="../ch03_02.htm">cos</A>
<dt>CPAN (Comprehensive Perl Archive Network)
   <dl>
   <dt><a href="../ch00_04.htm">How to Get Perl</A>
   <dt><a href="../ch07_01.htm">Beyond the Standard Library</A>
   </DL>
<dt>CPU time
   <dl>
   <dt><a href="../ch03_02.htm">times</A>
   <dt><a href="../ch07_02.htm">Notes</A>
   </DL>
<dt>creation time
   : <a href="../ch08_07.htm">History Made Practical</A>
<dt>croak() routine
   : <a href="../ch07_02.htm">Carp--Generate Error Messages</A>
<dt>crypt function
   : <a href="../ch03_02.htm">crypt</A>
<dt>cryptography
   : <a href="../ch03_02.htm">srand</A>
<dt>$ctime file statistic
   : <a href="../ch03_02.htm">stat</A>
<dt>CTRL-D key
   <dl>
   <dt><a href="../ch02_03.htm">Other literal tokens</A>
   <dt><a href="../ch07_02.htm">Term::Complete--Word Completion Module</A>
   </DL>
<dt>CTRL-U key
   : <a href="../ch07_02.htm">Term::Complete--Word Completion Module</A>
<dt>CTRL-Z key
   : <a href="../ch02_03.htm">Other literal tokens</A>
<dt>curly braces
   <dl>
   <dt><a href="../ch01_07.htm">Quantifiers</A>
   <dt><a href="../ch01_09.htm">What You Don't Know Won't Hurt You (Much)</A>
   </DL>
<dt>customizating debugger
   : <a href="../ch08_01.htm">Debugger Customization</A>
<dt>Cwd module
   : <a href="../ch07_02.htm">Cwd--Get Pathname of Current Working Directory</A>

<p>
<hr>
<p>
<font size="-1">

<a href="idx_0.htm">Symbols</A> |
<a href="idx_a.htm">A</A> |
<a href="idx_b.htm">B</A> |
C |
<a href="idx_d.htm">D</A> |
<a href="idx_e.htm">E</A> |
<a href="idx_f.htm">F</A> |
<a href="idx_g.htm">G</A> |
<a href="idx_h.htm">H</A> |
<a href="idx_i.htm">I</A> |
<a href="idx_j.htm">J</A> |
<a href="idx_k.htm">K</A> |
<a href="idx_l.htm">L</A> |
<a href="idx_m.htm">M</A> |
<a href="idx_n.htm">N</A> |
<a href="idx_o.htm">O</A> |
<a href="idx_p.htm">P</A> |
<a href="idx_q.htm">Q</A> |
<a href="idx_r.htm">R</A> |
<a href="idx_s.htm">S</A> |
<a href="idx_t.htm">T</A> |
<a href="idx_u.htm">U</A> |
<a href="idx_v.htm">V</A> |
<a href="idx_w.htm">W</A> |
<a href="idx_x.htm">X</A> |
<a href="idx_y.htm">Y</A> |
<a href="idx_z.htm">Z</A> 
</FONT>
<p>
Copyright &copy; 1996 O'Reilly &amp; Associates, Inc.
All Rights Reserved.

</BODY>
</HTML>
