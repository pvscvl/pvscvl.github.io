<html><head><title>[Chapter 41] 41.9 Commands to Adjust Your Terminal </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:52:04Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch41_01.htm" webstripperlinkwas="ch41_01.htm" title="41. Terminal and Serial Line Settings"><link rel="prev" href="ch41_08.htm" webstripperlinkwas="ch41_08.htm" title="41.8 ptys and Window Systems "><link rel="next" href="ch41_10.htm" webstripperlinkwas="ch41_10.htm" title="41.10 Using terminfo Capabilities in Shell Programs "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch41_08.htm" webstripperlinkwas="ch41_08.htm" title="41.8 ptys and Window Systems "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 41.8 ptys and Window Systems " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 41<br>Terminal and Serial Line Settings</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch41_10.htm" webstripperlinkwas="ch41_10.htm" title="41.10 Using terminfo Capabilities in Shell Programs "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 41.10 Using terminfo Capabilities in Shell Programs " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-0426">41.9 Commands to Adjust Your Terminal </A
></H2
><p class="para"><a class="indexterm" name="AUTOID-45935"></A
><a class="indexterm" name="AUTOID-45938"></A
><a class="indexterm" name="AUTOID-45941"></A
>Most terminals and window systems read every character that the host
computer sends to them.
They're watching for an <em class="emphasis">escape sequence</EM
>, a series of characters
that give commands to the terminal or window.
(From now on, I'll just say &quot;terminal.&quot;
But this article applies to windows, too.)
When the terminal sees an escape sequence, it performs the command
instead of showing you the characters.</P
><p class="para"><a class="indexterm" name="AUTOID-45945"></A
>You can send these escape sequences yourself, from your UNIX account.
For instance, maybe some program has accidentally left your terminal set to
reverse video.
If you're using an ANSI terminal (like a VT100) you could
type an
<span class="link"><em class="emphasis">echo</EM
> command (<a class="linkend" href="ch08_06.htm" webstripperlinkwas="ch08_06.htm" title="Output Command-Line Arguments ">8.6</A
>)</SPAN
>
to send the sequence
<code class="literal">^[[0m</CODE
> (where <code class="literal">^[</CODE
> is an ESCape character) to
turn off reverse video.
However, it's usually easier to make aliases,
a shell function or script that does
the same thing.</P
><p class="para">These escape sequences should be documented in your terminal's manual.
In this article, I'll use sequences for a VT102 or compatible terminal.
If you're trying to make your setup more general so that it works on lots of
terminals, you should use a command like
<span class="link"><em class="emphasis">tput</EM
> or <em class="emphasis">tcap</EM
> (<a class="linkend" href="ch41_10.htm" webstripperlinkwas="ch41_10.htm" title="Using terminfo Capabilities in Shell Programs ">41.10</A
>)</SPAN
>
that reads your terminal's <em class="emphasis">terminfo</EM
> or <em class="emphasis">termcap</EM
> information.</P
><p class="para">For example, you might decide that it's easier to read a complicated
display when it's in reverse video.
To put it in reverse video and go back to normal video later:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>Revvid</B
></CODE
>
%   <i class="lineannotation">...type commands; all text shows in reverse video...</I
>
% <code class="userinput"><b>Normal</B
></CODE
>
%   <i class="lineannotation">...now everything is in normal video...</I
></PRE
></BLOCKQUOTE
></P
><p class="para">Most full-screen programs (<em class="emphasis">vi</EM
>, etc.) re-initialize your terminal.
That can undo some of what these commands do.</P
><p class="para"><a class="indexterm" name="AUTOID-45968"></A
>To write the script, make a file named for one of the aliases, like
<em class="emphasis">Clear</EM
>.
The first line of the script stores an ESC character in a
<span class="link">shell variable (<a class="linkend" href="ch06_08.htm" webstripperlinkwas="ch06_08.htm" title="Shell Variables ">6.8</A
>)</SPAN
>
named <em class="emphasis">e</EM
>.
It's used in all the other aliases as <code class="literal">${e}</CODE
>:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
&#13;


<a class="co" href="ch45_35.htm" webstripperlinkwas="ch45_35.htm" title="45.35 Using a Control Character in a Script ">echo..3'</A
> 























<a class="co" href="ch44_15.htm" webstripperlinkwas="ch44_15.htm" title="44.15 Handling Command-Line Arguments in Shell Scripts ">$*</A
> 







&#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
&#13;#! /bin/sh
# SENDS VT102 AND COMPATIBLE TERMINAL CONTROL ESCAPE SEQUENCES

e=&quot;`echo e | tr e '\033'`&quot;  # Make an ESCape character portably

case &quot;$0&quot; in
*Clear) seq=&quot;${e}[;H${e}[2J&quot;  ;;# move to top left, clear screen

# ALTERNATE CHARACTER SETS.  YOU USUALLY WANT &quot;NOG&quot; TO CLEAR THESE
# WHEN YOUR TERMINAL GETS IN THIS MODE ACCIDENTALLY:

*NOG) seq=&quot;${e}(B&quot; ;;       # cancel graphics
*Graphics) seq=&quot;${e}(0&quot; ;;  # lower-case letters become graphics

# NOTE: THESE WON'T WORK FOR FULL-SCREEN APPLICATIONS LIKE vi.
# BETTER TO RESET YOUR TERMINAL PARAMETERS (tset, stty):

*C132) seq=&quot;${e}[?3;h&quot; ;;   # 132-column mode
*C80) seq=&quot;${e}[?3;l&quot; ;;    # 80-column mode

*Revvid) seq=&quot;${e}[?5;h&quot; ;; # Reverse video
*Normal) seq=&quot;${e}[?5;l&quot; ;; # Normal video

# WRITE MESSAGE TO TERMINAL STATUS LINE (NICE FOR REMINDERS)
#       EXAMPLE: ToStatus Clean out your files!
# AND CLEAR IT.

*ToStatus) seq=&quot;${e}7${e}[25;1f${e}[0K$*${e}8&quot; ;;
*ClrStatus) seq=&quot;${e}7${e}[25;1f${e}[0K${e}8&quot; ;;
*) echo &quot;$0: HELP - can't run myself.&quot; 1&gt;&amp;2; exit 1;;
esac

# SEND $seq TO TERMINAL WITHOUT INTERPRETATION BY SYSTEM V echo:
cat &lt;&lt; END_OF_seq
$seq
END_OF_seq
exit 0</PRE
></TD
></TR
></TABLE
></P
><p class="para">You can install this script from the CD-ROM
or from the
<span class="link">online archive (<a class="linkend" href="ch52_07.htm" webstripperlinkwas="ch52_07.htm" title="Other Ways to Get the Software ">52.7</A
>)</SPAN
>.
If you don't get the file from the disc,
be careful to type those escape sequences exactly.
The <em class="emphasis">Graphics</EM
> command uses the digit 0, not the letter O.
The <em class="emphasis">ToStatus</EM
> and
<em class="emphasis">ClrStatus</EM
> commands use the digit 1 (one), not the letter l (L).
If you get the script from the archive,
ask <em class="emphasis">tar</EM
> to install <em class="emphasis">Clear</EM
> and its eight other links:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>tar xvf </B
></CODE
><code class="replaceable"><i>archive.tar</I
></CODE
><code class="userinput"><b> Clear NOG Graphics C132 \
C80 Revvid Normal ToStatus ClrStatus</B
></CODE
>
x Clear, 1371 bytes, 3 tape blocks
NOG linked to Clear
Graphics linked to Clear
   ...</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;The script
<span class="link">tests the name it was called with (<a class="linkend" href="ch44_22.htm" webstripperlinkwas="ch44_22.htm" title="Finding a Program Name; Multiple Program Names ">44.22</A
>)</SPAN
>,
in <code class="literal">$0</CODE
>, to decide
which string to output (the asterisk (<code class="literal">*</CODE
>) matches any pathname
before the command name).
This trick saves disk space.
You can add other commands, too, by adding a line to the <code class="literal">case</CODE
>
and another link.</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">JP</SPAN
> <span class="bibliomisc">based on a suggestion and aliases by Bruce Barnett</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch41_08.htm" webstripperlinkwas="ch41_08.htm" title="41.8 ptys and Window Systems "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 41.8 ptys and Window Systems " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch41_10.htm" webstripperlinkwas="ch41_10.htm" title="41.10 Using terminfo Capabilities in Shell Programs "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 41.10 Using terminfo Capabilities in Shell Programs " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">41.8 ptys and Window Systems </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">41.10 Using terminfo Capabilities in Shell Programs </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
