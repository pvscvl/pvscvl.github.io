<html><head><title>[Chapter 18] 18.4 More About Links </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:38:57Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch18_01.htm" webstripperlinkwas="ch18_01.htm" title="18. Linking, Renaming, and Copying Files"><link rel="prev" href="ch18_03.htm" webstripperlinkwas="ch18_03.htm" title="18.3 Files with Two or More Names"><link rel="next" href="ch18_05.htm" webstripperlinkwas="ch18_05.htm" title="18.5 Creating and Removing Links "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch18_03.htm" webstripperlinkwas="ch18_03.htm" title="18.3 Files with Two or More Names"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 18.3 Files with Two or More Names" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 18<br>Linking, Renaming, and Copying Files</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch18_05.htm" webstripperlinkwas="ch18_05.htm" title="18.5 Creating and Removing Links "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 18.5 Creating and Removing Links " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-7944">18.4 More About Links </A
></H2
><p class="para">UNIX provides two different kinds of links:</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><a class="indexterm" name="UPT-ART-7944-IX-LINKS"></A
><a class="indexterm" name="AUTOID-20234"></A
><a class="indexterm" name="AUTOID-20236"></A
><a class="indexterm" name="AUTOID-20239"></A
><a class="indexterm" name="AUTOID-20242"></A
><b class="emphasis.bold">Hard links</B
>: With a hard link, two filenames (i.e., two
<span class="link">directory entries (<a class="linkend" href="ch18_02.htm" webstripperlinkwas="ch18_02.htm" title="What's Really in a Directory ">18.2</A
>)</SPAN
>)
point to the same
inode
and the
same set of data blocks.
All UNIX versions support hard links.
They have two important
limitations: a hard link can't cross a filesystem (i.e., both
filenames must be in the same filesystem), and you can't create a hard
link to a directory (i.e., a directory can only have one name).
[1]
They have two important advantages: the link and the original file
are absolutely and always identical, and the extra link takes no disk
space (except an occasional extra disk block in the directory file).</P
><blockquote class="footnote"><p class="para">[1] Actually, every directory has at least two names.
See the last section of this article.</P
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-20252"></A
><b class="emphasis.bold">Symbolic links</B
> (also called <b class="emphasis.bold">soft links</B
> or <b class="emphasis.bold">symlinks</B
>):
With a symbolic
link, there really are two
different files.
One file contains the actual data; the other file
just contains the name of the first file and serves as a &quot;pointer.&quot;
We call the pointer the <em class="emphasis">link</EM
>.
The system knows
that whenever it opens a link, it should read the contents of the
link, and then access the file that really holds the data you want.
All Berkeley UNIX systems and System V.4 support symbolic links.
Symbolic links are infinitely more flexible than hard links.
They can
cross filesystems, or even computer systems (if you are using NFS or
RFS). 
You can make a symbolic link to a directory.
A symbolic link has its own inode and takes a small amount of disk space
to store.</P
></LI
></UL
><p class="para">You obviously can't do without copies of files: copies are important
whenever users need their own &quot;private version&quot; of some master file.
But it is also important to know about links.
With links, there's
only one set of data and many different names that can access it.
Article
<a class="xref" href="ch18_05.htm" webstripperlinkwas="ch18_05.htm" title="Creating and Removing Links ">18.5</A
>
shows how to make links.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-7944-SECT-1.1">18.4.1 Differences Between Hard and Symbolic Links </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-20263"></A
><a class="indexterm" name="AUTOID-20266"></A
>With a hard link, the two filenames are identical in every
way.
You can delete one without harming the other.
The system
deletes the directory entry for one filename and leaves the data blocks
(which are shared) untouched.
The only thing <em class="emphasis">rm</EM
> does to the
inode is decrement its &quot;link count,&quot; which (as the name implies) counts
the number of hard links to the file.
The data blocks are only deleted
when the link count goes to zero&nbsp;- meaning that there are no more
directory entries that point to this inode.
Article
<a class="xref" href="ch17_22.htm" webstripperlinkwas="ch17_22.htm" title="Finding the Links to a File ">17.22</A
>
shows how to find the hard links to a file.</P
><p class="para">With a symbolic link, the two filenames are really not the same.
Deleting the link with <em class="emphasis">rm</EM
>
leaves the original file untouched, which is what
you'd expect.
But deleting or renaming the original file removes both
the filename and the data.
You are left with a link that doesn't
point anywhere.
(Article
<a class="xref" href="ch16_28.htm" webstripperlinkwas="ch16_28.htm" title="oldlinks: Find Unconnected Symbolic Links ">16.28</A
>
has a script that finds unconnected symlinks.)
Remember that the link itself doesn't have any data
associated with it.
Despite this disadvantage, you rarely see hard
links on UNIX versions that support symbolic links.
Symbolic links
are so much more versatile that they have become omnipresent.</P
><p class="para"><a class="indexterm" name="AUTOID-20275"></A
>Let's finish by taking a look at the <em class="emphasis">ls</EM
> listing for a directory.
This directory has a file named <em class="emphasis">file</EM
> with another hard link to it
named <em class="emphasis">hardlink</EM
>.
There's also a symlink to <em class="emphasis">file</EM
> named (are you ready?) <em class="emphasis">symlink</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>ls -lai</B
></CODE
>
total 8
 140330 drwxr-xr-x   2 jerry    ora      1024 Aug 18 10:11 .
  85523 drwxr-xr-x   4 jerry    ora      1024 Aug 18 10:47 ..
 140331 -rw-r--r--   2 jerry    ora      2764 Aug 18 10:11 file
 140331 -rw-r--r--   2 jerry    ora      2764 Aug 18 10:11 hardlink
 140332 lrwxrwxrwx   1 jerry    ora         4 Aug 18 10:11 symlink -&gt; file</PRE
></BLOCKQUOTE
></P
><p class="para">You've seen the
<span class="link"><em class="emphasis">-l</EM
> option (<a class="linkend" href="ch22_02.htm" webstripperlinkwas="ch22_02.htm" title="Tutorial on File and Directory Permissions ">22.2</A
>)</SPAN
>
and also, probably, the
<span class="link"><em class="emphasis">-a</EM
> option (<a class="linkend" href="ch16_11.htm" webstripperlinkwas="ch16_11.htm" title="Showing Hidden Files with ls -A and -a ">16.11</A
>)</SPAN
>
for listing &quot;dot files.&quot;<a class="indexterm" name="AUTOID-20291"></A
>
The <em class="emphasis">-i</EM
> option lists the
<span class="link">i-number (<a class="linkend" href="ch01_22.htm" webstripperlinkwas="ch01_22.htm" title="How UNIX Keeps Track of Files: Inodes ">1.22</A
>)</SPAN
>
for each
<span class="link">entry in the directory (<a class="linkend" href="ch18_02.htm" webstripperlinkwas="ch18_02.htm" title="What's Really in a Directory ">18.2</A
>)</SPAN
>;
see the first column.
The third column has the <em class="emphasis">link count</EM
>: this is the number of hard links
to the file.</P
><p class="para">When you compare the entries for <em class="emphasis">file</EM
> and <em class="emphasis">hardlink</EM
>, you'll see
that they have a link count of 2.
In this case, both links are in the same directory.
Every other entry (i-number, size, owner, etc.) for
<em class="emphasis">file</EM
> and <em class="emphasis">hardlink</EM
> is the same;
that's because they both refer to exactly the same file, with two links (names).</P
><p class="para">A symbolic link has an <code class="literal">l</CODE
> at the start of
the permissions field.
Its i-number isn't the same as the file it points to
because a symbolic link takes a separate
inode; so, it also takes disk space (which an extra hard link doesn't).
The name has two parts: the name of the link (here, <em class="emphasis">symlink</EM
>) followed
by an arrow and the name the link points to (in this case, to <em class="emphasis">file</EM
>).
The symlink takes just 4 characters, which is exactly enough to store the
pathname (<code class="literal">file</CODE
>) that the link points to.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-7944-SECT-1.2">18.4.2 Links to a Directory </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-20311"></A
><a class="indexterm" name="AUTOID-20314"></A
>While we're at it, here's a section that isn't about
linking to files or making symbolic links.
Let's look at the first two entries in the previous sample directory
in terms of links and link counts.
This should help to tie the filesystem together (both literally and in your
mind!).</P
><p class="para"><a class="indexterm" name="AUTOID-20318"></A
><a class="indexterm" name="AUTOID-20321"></A
>You've seen <code class="literal">.</CODE
> and <code class="literal">..</CODE
> in
<span class="link">pathnames (<a class="linkend" href="ch01_21.htm" webstripperlinkwas="ch01_21.htm" title="Making Pathnames ">1.21</A
>)</SPAN
>;
you might also have read an
<span class="link">explanation of what's in a directory (<a class="linkend" href="ch18_02.htm" webstripperlinkwas="ch18_02.htm" title="What's Really in a Directory ">18.2</A
>)</SPAN
>.
The <code class="literal">.</CODE
> entry is a link to the current directory; notice that its
link count is 2.
Where's the other link?
It's in the parent directory:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>ls -li ..</B
></CODE
>
total 2
 140330 drwxr-xr-x   2 jerry    ora      1024 Aug 18 10:11 sub
  85524 drwxr-xr-x   2 jerry    ora      1024 Aug 18 10:47 sub2</PRE
></BLOCKQUOTE
></P
><p class="para">Look at the i-numbers for the entries in the parent directory.
Which entry is for our current directory?
The entry for <em class="emphasis">sub</EM
> has the i-number 140330, and so does
the <code class="literal">.</CODE
> listing in the current directory.
So the current directory is named <em class="emphasis">sub</EM
>.</P
><p class="para">Now you should be able see why every directory has at least two links.
One link, named <code class="literal">.</CODE
>, is to the directory itself.
The other link, in its parent, gives the directory its name.
(Article
<a class="xref" href="ch14_04.htm" webstripperlinkwas="ch14_04.htm" title="How Does UNIX Find Your Current Directory? ">14.4</A
>
has a picture of this.)</P
><p class="para">Every directory has a <code class="literal">..</CODE
> entry, which is
a link to its parent directory.
If you look back at the listing of our current directory,
you can see that the parent directory has four links.
Where are they?
Think for a minute.
(No fair peeking ahead!)</P
><p class="para">Bzzzzzzt... time's up.<a class="indexterm" name="AUTOID-20342"></A
>
When a directory has subdirectories, it will also have a hard link named
<code class="literal">..</CODE
> in each subdirectory.
You can see above, in the output from <code class="literal">ls&nbsp;-li&nbsp;..</CODE
>, that the parent
directory has two subdirectories:
<em class="emphasis">sub</EM
> and <em class="emphasis">sub2</EM
>.
That's two of the four links.
The other two links are
the <code class="literal">.</CODE
> entry in the parent directory,
and the entry for the parent directory (which is named <em class="emphasis">test</EM
>)
in <em class="emphasis">its</EM
> parent directory:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
<a class="co" href="ch16_08.htm" webstripperlinkwas="ch16_08.htm" title="16.8 The ls -d Option ">-d</A
> 
&#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
% <code class="userinput"><b>ls -dli ../. ../../test</B
></CODE
>
  85523 drwxr-xr-x   4 jerry    ora      1024 Aug 18 10:47 ../.
  85523 drwxr-xr-x   4 jerry    ora      1024 Aug 18 10:47 ../../test</PRE
></TD
></TR
></TABLE
></P
><p class="para">As they should, all the links have the same i-number: 85523.
Make sense?
This concept can be a little abstract and hard to follow at first.
Understanding it will help you, though&nbsp;- especially if you're a system
administrator who has to use strong medicine like 
<span class="link"><em class="emphasis">clri</EM
> (<a class="linkend" href="ch23_13.htm" webstripperlinkwas="ch23_13.htm" title="Deleting Files with the Null Name ">23.13</A
>)</SPAN
>.
For more practice, make a subdirectory and experiment in it the way
we've shown in this article.</P
><p class="para"><a class="indexterm" name="AUTOID-20361"></A
>By the way, directories and their hard links <code class="literal">.</CODE
> and <code class="literal">..</CODE
>
are added by the <em class="emphasis">mkdir</EM
>(2) system call.
That's the only way that normal users can create a directory (and the
links to it).
Article
<a class="xref" href="ch23_18.htm" webstripperlinkwas="ch23_18.htm" title="How Making and Deleting Directories Works ">23.18</A
>
has even more low-level details.</P
></DIV
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">JP</SPAN
>, <span class="authorinitials">ML</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch18_03.htm" webstripperlinkwas="ch18_03.htm" title="18.3 Files with Two or More Names"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 18.3 Files with Two or More Names" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch18_05.htm" webstripperlinkwas="ch18_05.htm" title="18.5 Creating and Removing Links "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 18.5 Creating and Removing Links " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">18.3 Files with Two or More Names</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">18.5 Creating and Removing Links </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
