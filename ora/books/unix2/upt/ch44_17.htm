<html><head><title>[Chapter 44] 44.17 Handling Arguments with while and shift </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:53:56Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch44_01.htm" webstripperlinkwas="ch44_01.htm" title="44. Shell Programming for the Uninitiated"><link rel="prev" href="ch44_16.htm" webstripperlinkwas="ch44_16.htm" title="44.16 Handling Command-Line Arguments with a for Loop "><link rel="next" href="ch44_18.htm" webstripperlinkwas="ch44_18.htm" title="44.18 Standard Command-Line Parsing "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch44_16.htm" webstripperlinkwas="ch44_16.htm" title="44.16 Handling Command-Line Arguments with a for Loop "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 44.16 Handling Command-Line Arguments with a for Loop " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 44<br>Shell Programming for the Uninitiated</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch44_18.htm" webstripperlinkwas="ch44_18.htm" title="44.18 Standard Command-Line Parsing "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 44.18 Standard Command-Line Parsing " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-8008">44.17 Handling Arguments with while and shift </A
></H2
><p class="para"><a class="indexterm" name="AUTOID-51536"></A
><a class="indexterm" name="AUTOID-51539"></A
><a class="indexterm" name="AUTOID-51542"></A
><a class="indexterm" name="AUTOID-51545"></A
><a class="indexterm" name="AUTOID-51548"></A
><a class="indexterm" name="AUTOID-51551"></A
><a class="indexterm" name="AUTOID-51554"></A
><a class="indexterm" name="AUTOID-51557"></A
><a class="indexterm" name="AUTOID-51560"></A
><a class="indexterm" name="AUTOID-51563"></A
><a class="indexterm" name="AUTOID-51566"></A
><a class="indexterm" name="AUTOID-51569"></A
><a class="indexterm" name="AUTOID-51572"></A
><a class="indexterm" name="AUTOID-51575"></A
><a class="indexterm" name="AUTOID-51578"></A
>A 
<span class="link"><em class="emphasis">for</EM
> loop (<a class="linkend" href="ch44_16.htm" webstripperlinkwas="ch44_16.htm" title="Handling Command-Line Arguments with a for Loop ">44.16</A
>)</SPAN
>
is great if you want to handle all of the command-line arguments to a
script, one by one.  But, as is often the case, some arguments are
options that have their own arguments.  For example, in the command
<code class="literal">grep&nbsp;-f&nbsp;</CODE
><code class="replaceable"><i>filename</I
></CODE
>, <em class="emphasis">filename</EM
> is an argument to
<em class="emphasis">-f</EM
>; the option and its argument need to be processed
together.  One good way to handle this is with a combination of
<span class="link"><em class="emphasis">while</EM
> (<a class="linkend" href="ch44_10.htm" webstripperlinkwas="ch44_10.htm" title="Loops That Test Exit Status ">44.10</A
>)</SPAN
>,
<span class="link"><em class="emphasis">test</EM
> (<a class="linkend" href="ch44_20.htm" webstripperlinkwas="ch44_20.htm" title="test: Testing Files and Strings ">44.20</A
>)</SPAN
>,
<span class="link"><em class="emphasis">case</EM
> (<a class="linkend" href="ch44_05.htm" webstripperlinkwas="ch44_05.htm" title="Test String Values with Bourne Shell case ">44.5</A
>)</SPAN
>,
and <em class="emphasis">shift</EM
>.
Here's the basic construct:</P
><p class="para"><blockquote class="screen"><pre class="screen">while [ $# -gt 0 ]
do
    case &quot;$1&quot; in
        -a) options=&quot;$options $1&quot;;;
            ...
        -f) options=&quot;$options $1&quot;
            argfile=&quot;$2&quot;
            shift
            ;;
         *) files=&quot;$files $1&quot;;;
    esac
    shift
done</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-51597"></A
>
The trick is this: <em class="emphasis">shift</EM
> removes an argument from the script's
argument list, shifting all the others over by one (<code class="literal">$1</CODE
> disappears,
<code class="literal">$2</CODE
> becomes <code class="literal">$1</CODE
>, <code class="literal">$3</CODE
> 
becomes <code class="literal">$2</CODE
> and so on).
To handle an option with its own argument, do another <em class="emphasis">shift</EM
>.
The <em class="emphasis">while</EM
> loop uses
<span class="link"><em class="emphasis">test</EM
> (<a class="linkend" href="ch44_20.htm" webstripperlinkwas="ch44_20.htm" title="test: Testing Files and Strings ">44.20</A
>)</SPAN
>
to check
that <code class="literal">$#</CODE
>&nbsp;- the number of arguments&nbsp;- is greater than zero, and
keeps going until this is no longer true, which only happens when
they have all been used up.</P
><p class="para"><a class="indexterm" name="AUTOID-51611"></A
>Meanwhile, all the <em class="emphasis">case</EM
> has to do is to test <code class="literal">$1</CODE
> against the
desired option strings.
In the simple example shown above, we simply
assume that anything beginning with a minus sign is an option, which
we (presumably) want to pass on to some program that is being invoked
by the script.
So all we do is build up a shell variable that will
eventually contain all of the options.
It would be quite possible to
do anything else instead, perhaps setting other shell variables
or executing commands.</P
><p class="para">We assume that anything without a minus sign is a file.
This last
case could be written more robustly with a <em class="emphasis">test</EM
> to be sure the
argument is a file.
Here's an example of a simple script that uses this construct to
pass an option and some files to <em class="emphasis">pr</EM
> and from there to a program
that converts text to PostScript and on to the print spooler:</P
><p class="para"><blockquote class="screen"><pre class="screen">while [ $# -ne 0 ]
do
   case $1 in
        +*) pages=&quot;$1&quot; ;;
         *) if [ -f &quot;$1&quot; ]; then
              files=&quot;$files $1&quot;
            else 
              echo &quot;$0: file $1 not found&quot; 1&gt;&amp;2
            fi;;
   esac
   shift
done
pr $pages $files | psprint | lpr</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-51622"></A
>This approach is perhaps obsolete if you have
<span class="link"><em class="emphasis">getopts</EM
> (<a class="linkend" href="ch44_18.htm" webstripperlinkwas="ch44_18.htm" title="Standard Command-Line Parsing ">44.18</A
>)</SPAN
>,
since <em class="emphasis">getopts</EM
> lets you recognize option strings like
<code class="literal">-abc</CODE
>
as being equivalent to 
<code class="literal">-a&nbsp;-b&nbsp;-c</CODE
>
but I still find it handy.

[In this example, it's essential.
The <em class="emphasis">pr</EM
> option <code class="literal">+</CODE
><code class="replaceable"><i>page-list</I
></CODE
> starts with a plus sign.
<em class="emphasis">getopt</EM
> and <em class="emphasis">getopts</EM
> don't support those old-style
options. -<em class="emphasis">JP</EM
>&nbsp;]</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">TOR</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch44_16.htm" webstripperlinkwas="ch44_16.htm" title="44.16 Handling Command-Line Arguments with a for Loop "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 44.16 Handling Command-Line Arguments with a for Loop " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch44_18.htm" webstripperlinkwas="ch44_18.htm" title="44.18 Standard Command-Line Parsing "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 44.18 Standard Command-Line Parsing " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">44.16 Handling Command-Line Arguments with a for Loop </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">44.18 Standard Command-Line Parsing </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
