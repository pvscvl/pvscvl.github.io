<html><head><title>[Chapter 38] 38.8 What Are Signals? </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:49:41Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch38_01.htm" webstripperlinkwas="ch38_01.htm" title="38. Starting, Stopping, and Killing Processes"><link rel="prev" href="ch38_07.htm" webstripperlinkwas="ch38_07.htm" title="38.7 Why ps Prints Some Commands in Parentheses "><link rel="next" href="ch38_09.htm" webstripperlinkwas="ch38_09.htm" title="38.9 Killing Foreground Jobs "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch38_07.htm" webstripperlinkwas="ch38_07.htm" title="38.7 Why ps Prints Some Commands in Parentheses "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 38.7 Why ps Prints Some Commands in Parentheses " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 38<br>Starting, Stopping, and Killing Processes</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch38_09.htm" webstripperlinkwas="ch38_09.htm" title="38.9 Killing Foreground Jobs "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 38.9 Killing Foreground Jobs " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-2010">38.8 What Are Signals? </A
></H2
><p class="para"><a class="indexterm" name="AUTOID-42819"></A
>Signals are a simple, but important means of interprocess
communication. Interprocess communication sounds fancy, but it's
really a simple concept: it's the means by which one program sends a
message to another program. It's common to think of signals as
special messages sent by the 
<span class="link">UNIX kernel (<a class="linkend" href="ch01_14.htm" webstripperlinkwas="ch01_14.htm" title="The Kernel and Daemons ">1.14</A
>)</SPAN
>
but, in fact, any program can signal any other program.</P
><p class="para">What kinds of messages can you send with a signal? Relatively few, in
reality. Signals aren't &quot;arbitrary&quot; messages, like letters; they are
a small group of pre-defined messages, each with its own special
meaning. System V UNIX supports 16 signals, each of which is assigned
a number; BSD-derived UNIX implementations and SVR4 have 32 signals.
<a class="xref" href="#UPT-ART-2010-TAB-0" title="Common Signals">Table 38.2</A
>
lists some of the more commonly used signals.  It also lists keyboard
characters that 
send common signals on BSD systems (these can
be changed; see article
<a class="xref" href="ch05_09.htm" webstripperlinkwas="ch05_09.htm" title="Setting Your Erase, Kill, and Interrupt Characters ">5.9</A
>).<a class="indexterm" name="AUTOID-42825"></A
><a class="indexterm" name="AUTOID-42827"></A
><a class="indexterm" name="AUTOID-42830"></A
><a class="indexterm" name="AUTOID-42832"></A
><a class="indexterm" name="AUTOID-42835"></A
><a class="indexterm" name="AUTOID-42837"></A
><a class="indexterm" name="AUTOID-42839"></A
><a class="indexterm" name="AUTOID-42841"></A
><a class="indexterm" name="AUTOID-42844"></A
><a class="indexterm" name="AUTOID-42846"></A
><a class="indexterm" name="AUTOID-42849"></A
><a class="indexterm" name="AUTOID-42851"></A
><a class="indexterm" name="AUTOID-42853"></A
><a class="indexterm" name="AUTOID-42855"></A
><a class="indexterm" name="AUTOID-42858"></A
><a class="indexterm" name="AUTOID-42860"></A
><a class="indexterm" name="AUTOID-42862"></A
><a class="indexterm" name="AUTOID-42864"></A
><a class="indexterm" name="AUTOID-42866"></A
></P
><table class="table"><caption class="table"><a class="title" name="UPT-ART-2010-TAB-0">Table 38.2: Common Signals</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Signal Name</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Number</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Meaning and Typical Use</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">HUP</TD
><td class="entry" rowspan="1" colspan="1">1</TD
><td class="entry" rowspan="1" colspan="1">Hangup&nbsp;- stop running. Sent when you log out or disconnect a modem.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">INT</TD
><td class="entry" rowspan="1" colspan="1">2</TD
><td class="entry" rowspan="1" colspan="1">Interrupt&nbsp;- stop running. Sent when you type CTRL-c.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">QUIT</TD
><td class="entry" rowspan="1" colspan="1">3</TD
><td class="entry" rowspan="1" colspan="1">Quit&nbsp;- stop running
(and<span class="link">dump core (<a class="linkend" href="glossary.htm" webstripperlinkwas="glossary.htm#UPT-ART-1010" title="Glossary">52.9</A
>)</SPAN
>).Sent when you type
CTRL-\.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">KILL</TD
><td class="entry" rowspan="1" colspan="1">9</TD
><td class="entry" rowspan="1" colspan="1">Kill&nbsp;- stop unconditionally and immediately; a good &quot;emergency kill.&quot;</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">SEGV</TD
><td class="entry" rowspan="1" colspan="1">11</TD
><td class="entry" rowspan="1" colspan="1">Segmentation violation&nbsp;- you have tried to access illegal memory.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">TERM</TD
><td class="entry" rowspan="1" colspan="1">15</TD
><td class="entry" rowspan="1" colspan="1">Terminate&nbsp;- terminate gracefully, if possible.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">STOP</TD
><td class="entry" rowspan="1" colspan="1">17</TD
><td class="entry" rowspan="1" colspan="1">Stop unconditionally and immediately; continue with CONT.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">TSTP</TD
><td class="entry" rowspan="1" colspan="1">18</TD
><td class="entry" rowspan="1" colspan="1">Stop&nbsp;- stop
executing, ready to continue (in either background or
foreground). Sent when you type CTRL-z.  <span class="link"><em class="emphasis">stty</EM
> (<a class="linkend" href="ch05_09.htm" webstripperlinkwas="ch05_09.htm" title="Setting Your Erase, Kill, and Interrupt Characters ">5.9</A
>)</SPAN
> calls this
<em class="emphasis">susp</EM
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">CONT</TD
><td class="entry" rowspan="1" colspan="1">19</TD
><td class="entry" rowspan="1" colspan="1">Continue&nbsp;- continue executing after STOP or TSTP.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">CHLD</TD
><td class="entry" rowspan="1" colspan="1">20</TD
><td class="entry" rowspan="1" colspan="1">Child&nbsp;- a child process's status has changed.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">USR1</TD
><td class="entry" rowspan="1" colspan="1">30</TD
><td class="entry" rowspan="1" colspan="1">User-defined signal.</TD
></TR
></TBODY
></TABLE
><p class="para"><a class="indexterm" name="AUTOID-42927"></A
><a class="indexterm" name="AUTOID-42929"></A
>While this list isn't definitive, it shows you the types of things
signals can do. Many signals, like <em class="emphasis">SIGSEGV</EM
>, are warning or
error messages. You've probably seen the frustrating &quot;segmentation
violation&quot; message. That message came when the kernel detected
something wrong and sent your program a <em class="emphasis">SIGSEGV</EM
> signal; in response, your
program quit. Others signals, like <em class="emphasis">SIGTSTP</EM
>, are generated in response to
special characters on the keyboard. And a lot of signals just say,
&quot;Your time is up, goodbye!&quot;</P
><p class="para">When a process receives a signal, it can take a number of actions; for 
example:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">It can take whatever default action is specified for the signal. By
default, some signals kill the process that receives them. For some
signals, the default action is to stop running and dump core.
(<em class="emphasis">SIGQUIT</EM
> is an example of this.) Other
signals have no effect by default.</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-42942"></A
><a class="indexterm" name="AUTOID-42944"></A
>It can 
<span class="link">trap (<a class="linkend" href="ch44_12.htm" webstripperlinkwas="ch44_12.htm" title="Trapping Exits Caused by Interrupts ">44.12</A
>)</SPAN
>
the signal and run a special &quot;signal handling&quot;
function&nbsp;- in which case, it can do whatever it wants. A signal
handler often does whatever's necessary to shut the program down
nicely: make sure that files are closed and left in a consistent
state, and so on.</P
></LI
><li class="listitem"><p class="para">It can ignore the signal, in which case nothing happens.</P
></LI
></UL
><p class="para">You've probably read that the command <em class="emphasis">kill -9</EM
> is guaranteed to kill a
process.
Why?
Two special signals in
<a class="xref" href="#UPT-ART-2010-TAB-0" title="Common Signals">Table 38.2</A
>
can't be caught or ignored: the <em class="emphasis">KILL</EM
> and <em class="emphasis">STOP</EM
>
signals.</P
><p class="para">The 
<span class="link"><em class="emphasis">kill</EM
> (<a class="linkend" href="ch38_10.htm" webstripperlinkwas="ch38_10.htm" title="Destroying Processes with kill ">38.10</A
>)</SPAN
>
command doesn't kill&nbsp;- it really does nothing more than
send signals. As you now know, signals often bring death and
destruction&nbsp;- but there's no necessary reason for them to do so.</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">ML</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch38_07.htm" webstripperlinkwas="ch38_07.htm" title="38.7 Why ps Prints Some Commands in Parentheses "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 38.7 Why ps Prints Some Commands in Parentheses " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch38_09.htm" webstripperlinkwas="ch38_09.htm" title="38.9 Killing Foreground Jobs "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 38.9 Killing Foreground Jobs " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">38.7 Why ps Prints Some Commands in Parentheses </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">38.9 Killing Foreground Jobs </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
