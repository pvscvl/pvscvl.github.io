<html><head><title>[Chapter 6] Shell and Environment Variables</TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-10-23T15:37:54Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="part01.htm" webstripperlinkwas="part01.htm" title="I. Making Yourself at Home "><link rel="prev" href="ch05_12.htm" webstripperlinkwas="ch05_12.htm" title="5.12 Initializing the Terminal with tput "><link rel="next" href="ch06_02.htm" webstripperlinkwas="ch06_02.htm" title="6.2 Parent-Child Relationships "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch05_12.htm" webstripperlinkwas="ch05_12.htm" title="5.12 Initializing the Terminal with tput "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 5.12 Initializing the Terminal with tput " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 6</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch06_02.htm" webstripperlinkwas="ch06_02.htm" title="6.2 Parent-Child Relationships "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 6.2 Parent-Child Relationships " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="CHAPTER"><h1 class="chapter"><a class="title" name="UPT-CHP-6">6. Shell and Environment Variables</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="sect1" href="#UPT-ART-1170" title="6.1 What Environment Variables Are Good For ">What Environment Variables Are Good For </A
><br><a class="sect1" href="ch06_02.htm" webstripperlinkwas="ch06_02.htm" title="6.2 Parent-Child Relationships ">Parent-Child Relationships </A
><br><a class="sect1" href="ch06_03.htm" webstripperlinkwas="ch06_03.htm" title="6.3 Predefined Environment Variables ">Predefined Environment Variables </A
><br><a class="sect1" href="ch06_04.htm" webstripperlinkwas="ch06_04.htm" title="6.4 The PATH Environment Variable ">The PATH Environment Variable </A
><br><a class="sect1" href="ch06_05.htm" webstripperlinkwas="ch06_05.htm" title="6.5 PATH and path ">PATH and path </A
><br><a class="sect1" href="ch06_06.htm" webstripperlinkwas="ch06_06.htm" title="6.6 The TZ Environment Variable ">The TZ Environment Variable </A
><br><a class="sect1" href="ch06_07.htm" webstripperlinkwas="ch06_07.htm" title="6.7 What Time Is It in Japan? ">What Time Is It in Japan? </A
><br><a class="sect1" href="ch06_08.htm" webstripperlinkwas="ch06_08.htm" title="6.8 Shell Variables ">Shell Variables </A
><br><a class="sect1" href="ch06_09.htm" webstripperlinkwas="ch06_09.htm" title="6.9 Special C Shell Variables ">Special C Shell Variables </A
><br><a class="sect1" href="ch06_10.htm" webstripperlinkwas="ch06_10.htm" title="6.10 Running a Command with a Temporarily Different Environment ">Running a Command with a Temporarily Different Environment </A
></P
><p></P
></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="UPT-ART-1170">6.1 What Environment Variables Are Good For </A
></H2
><p class="para"><a class="indexterm" name="AUTOID-5707"></A
>Many UNIX utilities, including the shell, need 
information about you and what you're doing 
in order to do a reasonable job.</P
><p class="para">What kinds of information?
Well, to start with, a lot of programs (particularly editors)
need to know what kind of terminal you're using. The shell needs to
know where any commands you want to use are likely to be found. Lots
of UNIX programs (like mail programs)
include a command to start an editor as a subprocess;
they like to know your favorite editor. And so on.</P
><p class="para">Of course, one could always write programs that made you put all this
information on the command line. For example, you might have to type
commands like:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>mail -editor vi -term aardvark48 -favoritecolor blue_no_red</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">But your favorite editor probably doesn't change every day. (Nor will
your favorite color.) The terminal you use may change frequently, but
it certainly won't change from the time you log in until the time you
log out. And you certainly wouldn't want to type something like this
whenever you want to send mail.</P
><p class="para"><a class="indexterm" name="AUTOID-5717"></A
>Rather than forcing you to type this information with every command,
UNIX uses <em class="emphasis">environment variables</EM
> to store information that you'd
rather not worry about.
For example, the 
<span class="link"><em class="emphasis">TERM</EM
> (<a class="linkend" href="ch05_10.htm" webstripperlinkwas="ch05_10.htm" title="Finding What Terminal Names You Can Use ">5.10</A
>)</SPAN
>
environment variable tells programs what kind of
terminal you're using. Any programs that care about your terminal
type know (or ought 
to know) that they can read this variable, find out your terminal
type, and act accordingly.</P
><p class="para">Similarly, the directories that store the commands you want
to execute are listed in the 
<span class="link"><em class="emphasis">PATH</EM
> (<a class="linkend" href="ch06_04.htm" webstripperlinkwas="ch06_04.htm" title="The PATH Environment Variable ">6.4</A
>)</SPAN
><a class="indexterm" name="AUTOID-5725"></A
>
variable. 
When you type a command,
your shell looks through each directory in your <em class="emphasis">PATH</EM
> variable to find
that command. Presumably, UNIX wouldn't need a <em class="emphasis">PATH</EM
> variable if all 
commands were located in the same directory; but you'll soon be
writing your own commands (if you aren't already), and storing them in
your own
<span class="link">&quot;private&quot; command directories (<a class="linkend" href="ch04_02.htm" webstripperlinkwas="ch04_02.htm" title="A bin Directory for Your Programs and Scripts ">4.2</A
>)</SPAN
>,
and you'll need to tell the shell
<span class="link">how to find them (<a class="linkend" href="ch08_07.htm" webstripperlinkwas="ch08_07.htm" title="Setting Your Search Path ">8.7</A
>)</SPAN
>.</P
><table class="para.programreference" border="1"><tr><th valign="TOP"><a class="xref.warning" href="ch06_02.htm" webstripperlinkwas="ch06_02.htm" title="6.2 Parent-Child Relationships ">Warning!</A
> </TH
><td valign="TOP">Environment variables are managed by your shell. The difference
between environment variables and regular 
<span class="link">shell variables (<a class="linkend" href="ch06_08.htm" webstripperlinkwas="ch06_08.htm" title="Shell Variables ">6.8</A
>)</SPAN
>
is that a shell variable is local to a particular instance of the shell
(such as a shell script), while environment variables are &quot;inherited&quot;
by any program you start, including
<span class="link">another shell (<a class="linkend" href="ch38_04.htm" webstripperlinkwas="ch38_04.htm" title="Subshells ">38.4</A
>)</SPAN
>.
That is, the new
process gets its own copy of these variables, which it can read,
modify, and pass on in turn to its own children.

In fact, every UNIX process (not just the shell) passes its environment
variables to its child processes.</TD
></TR
></TABLE
><p class="para">You can set environment variables with a command like this:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
&#13;<a class="co" href="ch08_05.htm" webstripperlinkwas="ch08_05.htm" title="8.5 Command-Line Evaluation ">;</A
> &#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
% <code class="userinput"><b>setenv </B
></CODE
><code class="replaceable"><i>NAME value   </I
></CODE
><em class="emphasis">C shell</EM
>
$ <code class="replaceable"><i>NAME</I
></CODE
><code class="userinput"><b>=</B
></CODE
><code class="replaceable"><i>value</I
></CODE
><code class="userinput"><b>; export </B
></CODE
><code class="replaceable"><i>NAME   </I
></CODE
><em class="emphasis">Bourne or Korn shell</EM
>&#13;</PRE
></TD
></TR
></TABLE
></P
><p class="para">There's nothing particularly special about the <em class="emphasis">NAME</EM
>; you can create
environment variables with any names you want. Of course, these
don't necessarily do anything for you; variables like <em class="emphasis">PATH</EM
> and <em class="emphasis">TERM</EM
>
are important because lots of programs have
<span class="link">&quot;agreed&quot; (<a class="linkend" href="ch06_03.htm" webstripperlinkwas="ch06_03.htm" title="Predefined Environment Variables ">6.3</A
>)</SPAN
>
that these names
are important. But if you want to create an environment variable that
holds the name of your lover, that's your business:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>setenv LOVER Judy</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">If you're so inclined, you could write a program called
<em class="emphasis">valentine</EM
> that reads the <em class="emphasis">LOVER</EM
> environment variable and generates an
appropriate message. If you like short-term relationships or tend to
forget names, this might even be convenient!</P
><p class="para"><a class="indexterm" name="AUTOID-5761"></A
>By convention, the names of environment variables use all uppercase 
letters. There's nothing to enforce this convention&nbsp;- if you're making
your own names, you can use any capitalization you please. But
there's no advantage to violating the convention, either. The
environment variables that are used by standard UNIX programs all have
uppercase names.
[I usually make my shell variable names lowercase so it's easy to
tell the difference. <em class="emphasis">-JP</EM
>&nbsp;]</P
><p class="para"><a class="indexterm" name="AUTOID-5766"></A
><a class="indexterm" name="AUTOID-5768"></A
><a class="indexterm" name="AUTOID-5770"></A
>If you want the C shell to forget that an environment variable ever
existed, use the command <em class="emphasis">unsetenv&nbsp;NAME</EM
>.
(Some Bourne shells, but not all, have a similar command:
<em class="emphasis">unset&nbsp;NAME</EM
>.)</P
><table class="para.programreference" border="1"><tr><th valign="TOP"><a class="programreference" href="examples/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/examples/index.htm" title="printenv">printenv</A
><br><a class="programreference" href="examples/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/examples/index.htm" title="env">env</A
><br></TH
><td valign="TOP">&#13;If you want to list all of your environment variables, use
<em class="emphasis">printenv</EM
> or <em class="emphasis">env</EM
>.
(Both are on the CD-ROM.)
The <em class="emphasis">printenv</EM
> command also lets you ask about a particular variable.
Here's a typical report:</TD
></TR
></TABLE
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>printenv EDITOR</B
></CODE
>
EDITOR=/usr/local/bin/emacs
% <code class="userinput"><b>printenv</B
></CODE
>
HOME=/home/los/mikel
SHELL=/bin/csh
TERM=sun
USER=mikel
PATH=/usr/local/bin:/usr/ucb:/bin:/usr/bin:.:/home/los/mikel/bin
LOGNAME=mikel

PWD=/home/los/mikel/power/articles
PRINTER=ps
EDITOR=/usr/local/bin/emacs</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-5785"></A
>The 
<span class="link"><em class="emphasis">set</EM
> (<a class="linkend" href="ch06_08.htm" webstripperlinkwas="ch06_08.htm" title="Shell Variables ">6.8</A
>)</SPAN
>
command provides a similar listing of shell variables.</P
><p class="para"><a class="indexterm" name="AUTOID-5791"></A
>You can also use the
<span class="link"><em class="emphasis">echo</EM
> (<a class="linkend" href="ch08_06.htm" webstripperlinkwas="ch08_06.htm" title="Output Command-Line Arguments ">8.6</A
>)</SPAN
>
command to show the value of a particular
variable, preceding the variable name with a dollar sign (which tells
the shell to substitute the value of the variable):</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>echo $TERM</B
></CODE
>
xterm</PRE
></BLOCKQUOTE
></P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">ML</SPAN
></P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch05_12.htm" webstripperlinkwas="ch05_12.htm" title="5.12 Initializing the Terminal with tput "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 5.12 Initializing the Terminal with tput " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch06_02.htm" webstripperlinkwas="ch06_02.htm" title="6.2 Parent-Child Relationships "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 6.2 Parent-Child Relationships " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">5.12 Initializing the Terminal with tput </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">6.2 Parent-Child Relationships </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
