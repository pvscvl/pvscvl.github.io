<html><head><title>[Chapter 18] 18.3 Files with Two or More Names</TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:38:54Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch18_01.htm" webstripperlinkwas="ch18_01.htm" title="18. Linking, Renaming, and Copying Files"><link rel="prev" href="ch18_02.htm" webstripperlinkwas="ch18_02.htm" title="18.2 What's Really in a Directory "><link rel="next" href="ch18_04.htm" webstripperlinkwas="ch18_04.htm" title="18.4 More About Links "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch18_02.htm" webstripperlinkwas="ch18_02.htm" title="18.2 What's Really in a Directory "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 18.2 What's Really in a Directory " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 18<br>Linking, Renaming, and Copying Files</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch18_04.htm" webstripperlinkwas="ch18_04.htm" title="18.4 More About Links "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 18.4 More About Links " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-1470">18.3 Files with Two or More Names</A
></H2
><p class="para"><a class="indexterm" name="UPT-ART-1470-IX-FILES-NAMING"></A
><a class="indexterm" name="UPT-ART-1470-IX-NAMING-MULTIPLE-NAMES-FOR-ONE-FILE"></A
><a class="indexterm" name="UPT-ART-1470-IX-MULTIPLE-NAMES-FOR-ONE-FILE"></A
><a class="indexterm" name="UPT-ART-1470-IX-SYMBOLIC-LINKS-ADVANTAGES"></A
>We talk about hard links and symbolic links in
<span class="link">a number of places (<a class="linkend" href="ch18_04.htm" webstripperlinkwas="ch18_04.htm" title="More About Links ">18.4</A
>, <a class="linkend" href="ch18_05.htm" webstripperlinkwas="ch18_05.htm" title="Creating and Removing Links ">18.5</A
>, <a class="linkend" href="ch24_04.htm" webstripperlinkwas="ch24_04.htm" title="Save Space with a Link ">24.4</A
>)</SPAN
>.
However, we've never really said <em class="emphasis">why</EM
> you'd want a file with
several names. When I was learning UNIX, this was a big stumbling
block. It was easy to understand what a link would <em class="emphasis">do</EM
>, but why
would you want one?</P
><p class="para">With time, I acquired wisdom. There are many situations that links
(and only links) are able to handle. Once you've seen a few of the
problems that a link can solve, you'll start seeing even more
situations in which they are appropriate.</P
><p class="para">Consider a company
phone list on a system that is shared by several users. Every user
might want a copy of the phone list in his or her home directory.
However, you wouldn't want to give each user a different phone list.
In addition to wasting disk space, it would be a pain to modify all of
the individual lists whenever you made a change. Giving each user a
&quot;link&quot; to a master phone list is one way to solve the problem.</P
><p class="para">Similarly, assume
that you use several different systems that share files via
<span class="link">NFS (<a class="linkend" href="ch01_33.htm" webstripperlinkwas="ch01_33.htm" title="UNIX Networking and Communications ">1.33</A
>)</SPAN
>.
Eventually, you get tired of editing five or six different 
<span class="link"><em class="emphasis">.login</EM
> and <em class="emphasis">.cshrc</EM
> (<a class="linkend" href="ch02_02.htm" webstripperlinkwas="ch02_02.htm" title="Shell Setup Files-Which, Where, and Why ">2.2</A
>)</SPAN
>
files whenever you decide to add a new
alias or change some element in your startup file; you'd like to have
the exact same file appear in each
of your home directories. You might also want to give several
systems access to the same master database files.</P
><p class="para">How about this: you have a program or script that performs several
related functions.
Why not perform them all with the same
executable?
All the script or program needs to do is check the
name it's called by, and act accordingly.
Article
<a class="xref" href="ch45_13.htm" webstripperlinkwas="ch45_13.htm" title="Save Disk Space and Programming: Multiple Names for a Program">45.13</A
>
explains how this works;
articles
<a class="xref" href="ch08_08.htm" webstripperlinkwas="ch08_08.htm" title="A Directory for Commands You Shouldn't Run ">8.8</A
>,
<a class="xref" href="ch16_07.htm" webstripperlinkwas="ch16_07.htm" title="ls Shortcuts: ll, lf, lg, etc. ">16.7</A
>,
and 
<a class="xref" href="ch22_10.htm" webstripperlinkwas="ch22_10.htm" title="cx, cw, c-w: Quick File Permission Changes ">22.10</A
>
show scripts that act differently depending on their (current) name.</P
><p class="para">Yet another example.
Assume that you have two versions of a file: a current version,
which changes from time to time, and one or more older versions. One
good convention would be to name the files <code class="literal">data.</CODE
><code class="replaceable"><i>date</I
></CODE
>, where
<code class="replaceable"><i>date</I
></CODE
> shows when the file was created. For
example, you might have the files <em class="emphasis">data.jul1</EM
>, <em class="emphasis">data.jul2</EM
>,
<em class="emphasis">data.jul5</EM
>, and so on. However, when you access these files, you
don't necessarily want to figure out the date&nbsp;- not unless you
have a better chronological sense than I do. To make it easier on
yourself, create a link (either symbolic or hard) named <em class="emphasis">data.cur</EM
>
that always refers to your most recent file.
The following script runs the program <em class="emphasis">output</EM
>, puts the
data into a dated file, and resets <em class="emphasis">data.cur</EM
>:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
&#13;<a class="co" href="ch51_10.htm" webstripperlinkwas="ch51_10.htm" title="51.10 The date Command ">+%h%d</A
> 


&#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
#!/bin/sh
curfile=data.`date +%h%d`
linkname=data.cur
output &gt; $curfile
rm -f $linkname
ln -s $curfile $linkname</PRE
></TD
></TR
></TABLE
></P
><p class="para">Here's an analogous problem. When writing technical manuals at one
company, I had two classes of readers: some insisted on referring to
the manuals by name, and the others by (believe it or not) part number.
Rather than looking up part numbers all the time, I created a set of
links so that I could look up a manual online either via its name or
via its part number. For example, if the manual was named
&quot;Programming&quot; and had the part number 046-56-3343, I would create
the file <em class="emphasis">/manuals/byname/programming</EM
>. I would then create the link
<em class="emphasis">/manuals/bynumber/046-56-3343</EM
>:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
&#13;<a class="co" href="ch01_21.htm" webstripperlinkwas="ch01_21.htm" title="1.21 Making Pathnames ">..</A
> </PRE
></TH
><td valign="TOP"><pre class="screen">
% <code class="userinput"><b>cd /manuals/bynumber</B
></CODE
>
% <code class="userinput"><b>ln -s ../byname/programming 046-56-3343</B
></CODE
></PRE
></TD
></TR
></TABLE
></P
><p class="para">Sometimes you simply want to collect an assortment of files in one
directory. These files may really belong in other places, but you
want to collect them for some temporary purpose: for example, to make
a tape.
Let's say that you want to make a tape that
includes manual pages from <em class="emphasis">/development/doc/man/man1</EM
>, a manual
from <em class="emphasis">/development/doc/product</EM
>, source files from
<em class="emphasis">/src/ccode</EM
>, and a set of executables from
<em class="emphasis">/release/68000/execs</EM
>.
The shell script below creates links for all of these
directories within the <em class="emphasis">/tmp/tape</EM
> directory, and then creates a
<span class="link"><em class="emphasis">tar</EM
> (<a class="linkend" href="ch20_01.htm" webstripperlinkwas="ch20_01.htm#UPT-ART-8024" title="tar in a Nutshell ">20.1</A
>)</SPAN
>
tape that can be sent to a customer or friend.
Note that the <em class="emphasis">tar&nbsp;h</EM
> option tells <em class="emphasis">tar</EM
> to follow symbolic links and
archive whatever is at the end of the link; otherwise, <em class="emphasis">tar</EM
>
makes a copy of just the symbolic link:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
&#13;<a class="co" href="ch21_02.htm" webstripperlinkwas="ch21_02.htm" title="21.2 A Better Place for Temporary Files: /tmp ">/tmp</A
> 





&#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
#!/bin/sh
mkdir /tmp/tape
cd /tmp/tape
rm -f man1 product ccode execs
ln -s /development/doc/man/man1
ln -s /development/doc/product
ln -s /src/ccode
ln -s /release/68000/execs
tar ch ./man1 ./product ./ccode ./execs</PRE
></TD
></TR
></TABLE
></P
><p class="para">This really only scrapes the surface.
Links provide neat solutions to
many problems, including source control, filesystem layout, etc.<a class="indexterm" name="AUTOID-20219"></A
><a class="indexterm" name="AUTOID-20220"></A
><a class="indexterm" name="AUTOID-20221"></A
><a class="indexterm" name="AUTOID-20222"></A
></P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">ML</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch18_02.htm" webstripperlinkwas="ch18_02.htm" title="18.2 What's Really in a Directory "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 18.2 What's Really in a Directory " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch18_04.htm" webstripperlinkwas="ch18_04.htm" title="18.4 More About Links "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 18.4 More About Links " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">18.2 What's Really in a Directory </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">18.4 More About Links </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
