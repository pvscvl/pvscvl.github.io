<html><head><title>[Chapter 38] 38.2 fork and exec </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:49:29Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch38_01.htm" webstripperlinkwas="ch38_01.htm" title="38. Starting, Stopping, and Killing Processes"><link rel="prev" href="ch38_01.htm" webstripperlinkwas="ch38_01.htm" title="38.1 What's in This Chapter "><link rel="next" href="ch38_03.htm" webstripperlinkwas="ch38_03.htm" title="38.3 Managing Processes: Overall Concepts "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch38_01.htm" webstripperlinkwas="ch38_01.htm" title="38.1 What's in This Chapter "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 38.1 What's in This Chapter " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 38<br>Starting, Stopping, and Killing Processes</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch38_03.htm" webstripperlinkwas="ch38_03.htm" title="38.3 Managing Processes: Overall Concepts "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 38.3 Managing Processes: Overall Concepts " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-4880">38.2 fork and exec </A
></H2
><p class="para"><a class="indexterm" name="AUTOID-42164"></A
><a class="indexterm" name="AUTOID-42166"></A
><a class="indexterm" name="AUTOID-42168"></A
><a class="indexterm" name="AUTOID-42170"></A
><a class="indexterm" name="AUTOID-42172"></A
><a class="indexterm" name="AUTOID-42175"></A
>We've already discussed <em class="emphasis">fork</EM
> and <em class="emphasis">exec</EM
> way back in article
<a class="xref" href="ch01_11.htm" webstripperlinkwas="ch01_11.htm" title="How the Shell Executes Other Commands ">1.11</A
>,
but the concept comes up so often in this chapter that we thought we
ought to have a closer cross reference.</P
><p class="para">Put simply, <em class="emphasis">fork</EM
> and <em class="emphasis">exec</EM
> are the UNIX system calls (requests
for operating system services) that UNIX programs use to create new
processes.
When you start up a UNIX system, it starts with only one
process, a program called <em class="emphasis">init</EM
>.<a class="indexterm" name="AUTOID-42185"></A
></P
><p class="para">How does <em class="emphasis">init</EM
> magically turn into the hundreds or perhaps even
thousands of processes that make up a working UNIX system?
That's where <em class="emphasis">fork</EM
> and <em class="emphasis">exec</EM
> come in.</P
><p class="para">One process spawns another (&quot;spawn&quot; is another term you should get
used to seeing) either by replacing itself when it's done&nbsp;- an
<em class="emphasis">exec</EM
>&nbsp;- or if it needs to stay around, by making a copy of itself&nbsp;- a
<em class="emphasis">fork</EM
>.<a class="indexterm" name="AUTOID-42194"></A
><a class="indexterm" name="AUTOID-42196"></A
>
In the latter case, the forked copy commits polite
suicide by <em class="emphasis">exec</EM
>ing the desired second program.</P
><p class="para">A good example of this whole sequence can be seen in the way
a UNIX system's login procedure for terminals (non-
<span class="link">network (<a class="linkend" href="ch01_33.htm" webstripperlinkwas="ch01_33.htm" title="UNIX Networking and Communications ">1.33</A
>)</SPAN
>
logins) works.<a class="indexterm" name="AUTOID-42201"></A
>
The <em class="emphasis">init</EM
> process spawns a series of <em class="emphasis">getty</EM
>
processes, each of which monitors a serial port (a <em class="emphasis">tty</EM
>) looking for
activity.
It's the <em class="emphasis">getty</EM
> program that actually puts up the
first <code class="literal">login:</CODE
> prompt.</P
><p class="para">Once someone actually types a login name, <em class="emphasis">getty</EM
>'s job is done;
it <em class="emphasis">exec</EM
>s the <em class="emphasis">login</EM
> command.  <em class="emphasis">login</EM
> prompts for a
password (if the account has one) and, if the password is okay,
<em class="emphasis">exec</EM
>s the login shell.  Whenever you start another program,
the shell <em class="emphasis">fork</EM
>s itself, and the copy <em class="emphasis">exec</EM
>s whatever
program you asked to run.</P
><p class="para">That's why 
<span class="link">some commands are built-in to the shell (<a class="linkend" href="ch01_10.htm" webstripperlinkwas="ch01_10.htm" title="Internal and External Commands ">1.10</A
>)</SPAN
>.
There's overhead involved in starting a new process.  What's more,
because
<span class="link">a child process can't affect its parent's environment (<a class="linkend" href="ch38_03.htm" webstripperlinkwas="ch38_03.htm" title="Managing Processes: Overall Concepts ">38.3</A
>)</SPAN
>,
some commands don't make sense as separate processes.  For example,
<em class="emphasis">cd</EM
> must be built in, or it couldn't change the working directory
for the current shell.</P
><p class="para">There's an <em class="emphasis">exec</EM
> command that you can type at a shell prompt; see
article
<a class="xref" href="ch45_07.htm" webstripperlinkwas="ch45_07.htm" title="The exec Command ">45.7</A
>.
Watch out, though, it will replace your shell with whatever command
you <em class="emphasis">exec</EM
>, with no going back.  This is useful only if you want
to replace your shell with some other interactive command interpreter
with similar powers (as in article
<a class="xref" href="ch22_22.htm" webstripperlinkwas="ch22_22.htm" title="The su Command Isn't Just for the Superuser ">22.22</A
>),
or if you'll be ready to log out when the command you <em class="emphasis">exec</EM
>
finishes.</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">TOR</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch38_01.htm" webstripperlinkwas="ch38_01.htm" title="38.1 What's in This Chapter "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 38.1 What's in This Chapter " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch38_03.htm" webstripperlinkwas="ch38_03.htm" title="38.3 Managing Processes: Overall Concepts "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 38.3 Managing Processes: Overall Concepts " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">38.1 What's in This Chapter </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">38.3 Managing Processes: Overall Concepts </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
