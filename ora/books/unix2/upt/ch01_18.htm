<html><head><title>[Chapter 1] 1.18 Who Handles Wildcards? </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:31:22Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch01_01.htm" webstripperlinkwas="ch01_01.htm" title="1. Introduction"><link rel="prev" href="ch01_17.htm" webstripperlinkwas="ch01_17.htm" title="1.17 Filename Extensions "><link rel="next" href="ch01_19.htm" webstripperlinkwas="ch01_19.htm" title="1.19 The Tree Structure of the Filesystem "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch01_17.htm" webstripperlinkwas="ch01_17.htm" title="1.17 Filename Extensions "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 1.17 Filename Extensions " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 1<br>Introduction</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch01_19.htm" webstripperlinkwas="ch01_19.htm" title="1.19 The Tree Structure of the Filesystem "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 1.19 The Tree Structure of the Filesystem " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-1013">1.18 Who Handles Wildcards? </A
></H2
><p class="para"><a class="indexterm" name="AUTOID-1782"></A
><span class="link">Wildcards (<a class="linkend" href="ch01_16.htm" webstripperlinkwas="ch01_16.htm" title="Wildcards ">1.16</A
>)</SPAN
>
are actually defined by the UNIX shells, rather than the
UNIX filesystem. In theory, a new shell could define new
wildcards, and consequently, we should discuss wildcarding when we
discuss the shell. In practice, all UNIX shells (including
<span class="link"><em class="emphasis">ksh</EM
>, <em class="emphasis">bash</EM
>, and other variants (<a class="linkend" href="ch01_08.htm" webstripperlinkwas="ch01_08.htm" title="There Are Many Shells ">1.8</A
>)</SPAN
>)
honor the same wildcard conventions, and we don't expect to see anyone
change the rules. (But different shells do different things
<span class="link">when a wildcard doesn't match (<a class="linkend" href="ch15_04.htm" webstripperlinkwas="ch15_04.htm" title="What if a Wildcard Doesn't Match? ">15.4</A
>)</SPAN
>.)</P
><p class="para">You may see different wildcarding if you buy a special-purpose
shell that emulates another operating system (for example, a shell
that looks like DEC's DCL)-in this case, your shell will obey the
other operating system's wildcard rules. But even in this case,
operating system designers stick to a reasonably similar set of
wildcard rules.</P
><p class="para">The fact that the shell defines wildcards, rather than the filesystem
itself or the program you're running, has some important implications
for a few commands.
Most of the time, a program never sees wildcards.
For example, typing:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>lpr *</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">is exactly the same as typing:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>lpr </B
></CODE
><code class="replaceable"><i>file1 file2 file3 file4 file5</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">In this case everything works as expected.
But there are other situations in which
wildcards don't work at all.
Assume you want to read some files from a tape, which requires
the command
<span class="link"><em class="emphasis">tar&nbsp;x</EM
> (<a class="linkend" href="ch20_04.htm" webstripperlinkwas="ch20_04.htm" title="Restoring Files from Tape with tar ">20.4</A
>)</SPAN
>,
so you type the command
<code class="literal">tar&nbsp;x&nbsp;*.txt</CODE
>.
Will you be happy or disappointed?</P
><p class="para">You'll be disappointed&nbsp;- unless older versions of the files you want
are already in your
<span class="link">current directory (<a class="linkend" href="ch01_21.htm" webstripperlinkwas="ch01_21.htm" title="Making Pathnames ">1.21</A
>)</SPAN
>.
The shell expands the wildcard
<code class="literal">*.txt</CODE
>, according to what's in the current directory,
<em class="emphasis">before it hands the completed command line over to tar for
execution</EM
>. All
<em class="emphasis">tar</EM
> gets is a list of files. But you're probably not interested
in the current directory; you probably want the wildcard <code class="literal">*</CODE
> to
be expanded on the tape, retrieving any <code class="literal">*.txt</CODE
> files that the
tape has.</P
><p class="para">There's a way to pass wildcards to programs, without having them interpreted
by the shell.
Simply put <code class="literal">*.txt</CODE
> in
<span class="link">quotes (<a class="linkend" href="ch08_14.htm" webstripperlinkwas="ch08_14.htm" title="Bourne Shell Quoting ">8.14</A
>)</SPAN
>.<a class="indexterm" name="AUTOID-1814"></A
><a class="indexterm" name="AUTOID-1817"></A
>
The quotes prevent the UNIX shell from expanding the wildcard, passing
it to the command unchanged. Programs that can be
used in this way (like
<span class="link"><em class="emphasis">uucp</EM
> and <em class="emphasis">rcp</EM
> (<a class="linkend" href="ch01_33.htm" webstripperlinkwas="ch01_33.htm" title="UNIX Networking and Communications ">1.33</A
>)</SPAN
>)
know how to handle
wildcards, obeying the same rules as the shell (in fact, these programs
usually start a shell to interpret their arguments). You only need to
make sure that the programs see the wildcards, that they aren't stripped by
the shell before it passes the command line to the program.
As a more general
rule, you should be aware of when and why a wildcard gets expanded,
and you should know how to make sure that wildcards are expanded at an
appropriate time.</P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> <a class="indexterm" name="AUTOID-1825"></A
><a class="indexterm" name="AUTOID-1828"></A
>If your shell understands the
<span class="link"><code class="literal">{}</CODE
> characters (<a class="linkend" href="ch09_05.htm" webstripperlinkwas="ch09_05.htm" title="Build Strings with {&nbsp;} ">9.5</A
>)</SPAN
>,
you can use them because they can generate any string&nbsp;- not just filenames
that already exist.
You have to type the unique part of each name, but you only have to
type the common part once.
For example, to extract the files called <em class="emphasis">project/wk9/summary</EM
>,
<em class="emphasis">project/wk14/summary</EM
>, and <em class="emphasis">project/wk15/summary</EM
> from a
<em class="emphasis">tar</EM
> tape, you might use:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>tar xv project/wk{9,14,15}/summary</B
></CODE
>
x project/wk9/summary, 3161 bytes, 7 tape blocks
x project/wk14/summary, 878 bytes, 2 tape blocks
x project/wk15/summary, 2268 bytes, 5 tape blocks</PRE
></BLOCKQUOTE
></P
></BLOCKQUOTE
><p class="para">Some versions of <em class="emphasis">tar</EM
> understand wildcards, but many don't. There is a
<span class="link">clever workaround (<a class="linkend" href="ch20_09.htm" webstripperlinkwas="ch20_09.htm" title="When a Program Doesn't Understand Wildcards ">20.9</A
>)</SPAN
>.</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">ML</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch01_17.htm" webstripperlinkwas="ch01_17.htm" title="1.17 Filename Extensions "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 1.17 Filename Extensions " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch01_19.htm" webstripperlinkwas="ch01_19.htm" title="1.19 The Tree Structure of the Filesystem "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 1.19 The Tree Structure of the Filesystem " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">1.17 Filename Extensions </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">1.19 The Tree Structure of the Filesystem </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
