<html><head><title>[Chapter 45] 45.28 Quick Reference: expr </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:55:00Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch45_01.htm" webstripperlinkwas="ch45_01.htm" title="45. Shell Programming for the Initiated"><link rel="prev" href="ch45_27.htm" webstripperlinkwas="ch45_27.htm" title='45.27 Turn Off echo for "Secret&quot; Answers'><link rel="next" href="ch45_29.htm" webstripperlinkwas="ch45_29.htm" title="45.29 Testing Characters in a String with expr "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch45_27.htm" webstripperlinkwas="ch45_27.htm" title='45.27 Turn Off echo for "Secret&quot; Answers'><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt='Previous: 45.27 Turn Off echo for "Secret&quot; Answers' border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 45<br>Shell Programming for the Initiated</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch45_29.htm" webstripperlinkwas="ch45_29.htm" title="45.29 Testing Characters in a String with expr "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 45.29 Testing Characters in a String with expr " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-4030">45.28 Quick Reference: expr </A
></H2
><table class="para.programreference" border="1"><tr><th valign="TOP"><a class="programreference" href="examples/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/examples/index.htm" title="expr">expr</A
><br></TH
><td valign="TOP"><a class="indexterm" name="AUTOID-54267"></A
><a class="indexterm" name="AUTOID-54269"></A
><a class="indexterm" name="AUTOID-54272"></A
><em class="emphasis">expr</EM
> is a very handy tool in shell programming, since it
provides the ability to evaluate a wide range of arithmetic, logical,
and relational expressions.
It evaluates its arguments as expressions and prints the result.

<em class="emphasis">expr</EM
> is a standard UNIX utility; the GNU version
is on the CD-ROM.</TD
></TR
></TABLE
><p class="para"><a class="indexterm" name="AUTOID-54279"></A
>Here's the syntax.
The [brackets] mean &quot;optional&quot;; don't type the brackets:</P
><blockquote class="blockquote"><p class="para"><code class="literal">expr</CODE
> <code class="replaceable"><i>arg1 operator arg2 </I
></CODE
><code class="literal">[</CODE
> <code class="replaceable"><i>operator arg3 </I
></CODE
><code class="literal">... ]</CODE
> </P
></BLOCKQUOTE
><p class="para">Arguments and operators must be separated by spaces.
In many cases, an argument is an integer, typed literally or
represented by a shell variable.
There are three types of operators: arithmetic, relational, and logical.</P
><p class="para"><a class="indexterm" name="AUTOID-54291"></A
><a class="indexterm" name="AUTOID-54294"></A
><span class="link">Exit status (<a class="linkend" href="ch44_07.htm" webstripperlinkwas="ch44_07.htm" title="Exit Status of UNIX Processes ">44.7</A
>)</SPAN
>
values for <em class="emphasis">expr</EM
> are 0 if the expression evaluates non-zero and non-null,
1 if the expression evaluates to 0 or null, or 2 if the expression is invalid.<a class="indexterm" name="AUTOID-54299"></A
><a class="indexterm" name="AUTOID-54302"></A
></P
><dl class="variablelist"><dt class="term">Arithmetic operators</DT
><dd class="listitem"><p class="para">Use these to produce mathematical expressions whose results are printed.</P
><dl class="variablelist"><dt class="term"><code class="literal">+</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54316"></A
>Add <code class="replaceable"><i>arg2</I
></CODE
> to <code class="replaceable"><i>arg1</I
></CODE
>.</P
></DD
><dt class="term"><code class="literal">-</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54326"></A
>Subtract <code class="replaceable"><i>arg2</I
></CODE
> from <code class="replaceable"><i>arg1</I
></CODE
>.</P
></DD
><dt class="term"><code class="literal">*</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54336"></A
>Multiply the arguments.</P
></DD
><dt class="term"><code class="literal">/</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54344"></A
>Divide <code class="replaceable"><i>arg1</I
></CODE
> by <code class="replaceable"><i>arg2</I
></CODE
>.</P
></DD
><dt class="term"><code class="literal">%</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54354"></A
>Take the remainder when <code class="replaceable"><i>arg1</I
></CODE
> is divided by <code class="replaceable"><i>arg2</I
></CODE
>.</P
></DD
></DL
><p class="para">Addition and subtraction are evaluated last, unless they are grouped inside
parentheses. The symbols <code class="literal">*</CODE
>, <code class="literal">(</CODE
>, and <code class="literal">)</CODE
> have meaning to the shell,
so they must be escaped (preceded by a backslash or enclosed in
quotes).<a class="indexterm" name="AUTOID-54363"></A
><a class="indexterm" name="AUTOID-54366"></A
></P
></DD
><dt class="term">Relational operators</DT
><dd class="listitem"><p class="para">Use these to compare two arguments. Arguments can also be words, in which
case comparisons assume a<code class="literal">&lt;</CODE
>z and A<code class="literal">&lt;</CODE
>Z.
If the comparison statement is true, <em class="emphasis">expr</EM
> writes 1 to
<span class="link">standard output (<a class="linkend" href="ch13_01.htm" webstripperlinkwas="ch13_01.htm#UPT-ART-1023" title="Using Standard Input and Output">13.1</A
>)</SPAN
>;
if false, it writes 0.
The symbols <code class="literal">&gt;</CODE
> and <code class="literal">&lt;</CODE
> must be escaped.</P
><dl class="variablelist"><dt class="term"><code class="literal">=</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54385"></A
>Are the arguments equal?</P
></DD
><dt class="term"><code class="literal">!=</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54393"></A
>Are the arguments different?</P
></DD
><dt class="term"><code class="literal">&gt;</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54401"></A
>Is <code class="replaceable"><i>arg1</I
></CODE
> greater than <code class="replaceable"><i>arg2</I
></CODE
>?</P
></DD
><dt class="term"><code class="literal">&gt;=</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54411"></A
>Is <code class="replaceable"><i>arg1</I
></CODE
> greater than or equal to <code class="replaceable"><i>arg2</I
></CODE
>?</P
></DD
><dt class="term"><code class="literal">&lt;</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54421"></A
>Is <code class="replaceable"><i>arg1</I
></CODE
> less than <code class="replaceable"><i>arg2</I
></CODE
>?</P
></DD
><dt class="term"><code class="literal">&lt;=</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54431"></A
>Is <code class="replaceable"><i>arg1</I
></CODE
> less than or equal to <code class="replaceable"><i>arg2</I
></CODE
>?<a class="indexterm" name="AUTOID-54436"></A
><a class="indexterm" name="AUTOID-54439"></A
></P
></DD
></DL
></DD
><dt class="term">Logical operators</DT
><dd class="listitem"><p class="para">Use these to compare two arguments. Depending on the values,
the result written to standard output
can be <code class="replaceable"><i>arg1</I
></CODE
> (or some portion of it), <code class="replaceable"><i>arg2</I
></CODE
>, or 0.
The symbols <code class="literal">|</CODE
> and <code class="literal">&amp;</CODE
> must be escaped.</P
><dl class="variablelist"><dt class="term"><code class="literal">|</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54456"></A
>Logical OR; if <code class="replaceable"><i>arg1</I
></CODE
> has a non-zero (and non-null) value,
the output is <code class="replaceable"><i>arg1</I
></CODE
>; otherwise, the output is <code class="replaceable"><i>arg2</I
></CODE
>.</P
></DD
><dt class="term"><code class="literal">&amp;</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54467"></A
>Logical AND; if both <code class="replaceable"><i>arg1</I
></CODE
> and <code class="replaceable"><i>arg2</I
></CODE
> have a non-zero 
(and non-null) value, the output is <code class="replaceable"><i>arg1</I
></CODE
>; otherwise, 
the output is 0.</P
></DD
><dt class="term"><code class="literal">:</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-54478"></A
>Sort of like
<span class="link"><em class="emphasis">grep</EM
> (<a class="linkend" href="ch27_01.htm" webstripperlinkwas="ch27_01.htm#UPT-ART-7420" title="Different Versions of grep ">27.1</A
>)</SPAN
>;
<code class="replaceable"><i>arg2</I
></CODE
> is a pattern to search for in <code class="replaceable"><i>arg1</I
></CODE
>.
<code class="replaceable"><i>arg2</I
></CODE
> must be a regular expression in this case. If the <code class="replaceable"><i>arg2</I
></CODE
> pattern
is enclosed in <code class="literal">\(&nbsp;\)</CODE
>, the output is the portion of <code class="replaceable"><i>arg1</I
></CODE
> that matches;
otherwise, the output is simply the number of characters that match. A 
pattern match always applies to the beginning of the 
argument (the <code class="literal">^</CODE
> 
symbol is assumed by default).</P
></DD
></DL
></DD
></DL
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-4030-SECT-1.0.1">45.28.1 Examples </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-54493"></A
><a class="indexterm" name="AUTOID-54496"></A
><a class="indexterm" name="AUTOID-54499"></A
><a class="indexterm" name="AUTOID-54502"></A
><a class="indexterm" name="AUTOID-54505"></A
>Division happens first; output is 10:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>expr 5 + 10 / 2</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Addition happens first; output is 7 (truncated from 7.5):</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>expr \( 5 + 10 \) / 2</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Add 1 to variable <em class="emphasis">i</EM
>; this is how variables are incremented in
Bourne shell scripts:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="userinput"><b>i=`expr &quot;$i&quot; + 1`</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-54521"></A
><a class="indexterm" name="AUTOID-54524"></A
>
Output 1 (true) if variable <em class="emphasis">a</EM
> is the string &quot;hello&quot;:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>expr &quot;$a&quot; = hello</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Output 1 (true) if variable <em class="emphasis">b</EM
> plus 5 equals 10 or more:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>expr &quot;$b&quot; + 5 \&gt;= 10</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">&#13;In the examples below, variable <em class="emphasis">p</EM
> is the string 
&quot;version.100&quot;. This command returns the number of characters in <em class="emphasis">p</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen"><a class="indexterm" name="AUTOID-54541"></A
>$ <code class="userinput"><b>expr &quot;$p&quot; : '.*'</B
></CODE
>   <i class="lineannotation">Output is 11</I
></PRE
></BLOCKQUOTE
></P
><p class="para">Match all characters and print them:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>expr &quot;$p&quot; : '\(.*\)'</B
></CODE
>   <i class="lineannotation">Output is &quot;version.100&quot;</I
></PRE
></BLOCKQUOTE
></P
><p class="para">Output the number of lowercase letters matched:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>expr &quot;$p&quot; : '[a-z]*'</B
></CODE
>   <i class="lineannotation">Output is 7</I
></PRE
></BLOCKQUOTE
></P
><p class="para">Match a string of lowercase letters:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>expr &quot;$p&quot; : '\([a-z]*\)'</B
></CODE
>   <i class="lineannotation">Output is \&quot;version&quot;</I
></PRE
></BLOCKQUOTE
></P
><p class="para">Truncate <code class="literal">$x</CODE
> if it contains five or more characters; 
if not, just output <code class="literal">$x</CODE
>. (Logical OR uses the second argument when
the first one is 0 or null; i.e., when the match fails.)</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>expr &quot;$x&quot; : '\(.....\)'  &quot;$x&quot;</B
></CODE
></PRE
></BLOCKQUOTE
></P
></DIV
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">DG</SPAN
> <span class="bibliomisc">from O'Reilly &amp; Associates' <cite class="citetitle">UNIX in a Nutshell (SVR4/Solaris)</CITE
></SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch45_27.htm" webstripperlinkwas="ch45_27.htm" title='45.27 Turn Off echo for "Secret&quot; Answers'><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt='Previous: 45.27 Turn Off echo for "Secret&quot; Answers' border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch45_29.htm" webstripperlinkwas="ch45_29.htm" title="45.29 Testing Characters in a String with expr "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 45.29 Testing Characters in a String with expr " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">45.27 Turn Off echo for "Secret&quot; Answers</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">45.29 Testing Characters in a String with expr </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
