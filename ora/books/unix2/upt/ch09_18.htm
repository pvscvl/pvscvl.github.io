<html><head><title>[Chapter 9] 9.18 Process Substitution </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:35:17Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch09_01.htm" webstripperlinkwas="ch09_01.htm" title="9. Saving Time on the Command Line"><link rel="prev" href="ch09_17.htm" webstripperlinkwas="ch09_17.htm" title="9.17 Handling Lots of Text with Temporary Files "><link rel="next" href="ch09_19.htm" webstripperlinkwas="ch09_19.htm" title="9.19 For the Impatient: Type-Ahead "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_17.htm" webstripperlinkwas="ch09_17.htm" title="9.17 Handling Lots of Text with Temporary Files "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 9.17 Handling Lots of Text with Temporary Files " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 9<br>Saving Time on the Command Line</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_19.htm" webstripperlinkwas="ch09_19.htm" title="9.19 For the Impatient: Type-Ahead "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 9.19 For the Impatient: Type-Ahead " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-0109">9.18 Process Substitution </A
></H2
><p class="para"><a class="indexterm" name="UPT-ART-109-IX-PROCESS-SUBSTITUTION"></A
>Do you find yourself making temporary files, then giving those files to some
commands to read?
For example, maybe you want to compare two files with
<span class="link"><em class="emphasis">comm</EM
> (<a class="linkend" href="ch28_12.htm" webstripperlinkwas="ch28_12.htm" title="Comparing Two Files with comm ">28.12</A
>)</SPAN
>-
but <em class="emphasis">comm</EM
>
needs sorted files, and these files aren't sorted.
So you have to type:</P
><p class="para"><blockquote class="screen"><pre class="screen">bash$ <code class="userinput"><b>sort file1 &gt; /tmp/file1.sort</B
></CODE
>
bash$ <code class="userinput"><b>sort file2 &gt; /tmp/file2.sort</B
></CODE
>
bash$ <code class="userinput"><b>comm /tmp/file1.sort /tmp/file2.sort</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">There are easier ways to do that.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-109-SECT-1.1">9.18.1 bash Process Substitution </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-10740"></A
><em class="emphasis">bash</EM
> has the operator <code class="literal">&lt;(</CODE
><code class="replaceable"><i>process</I
></CODE
><code class="literal">)</CODE
>.
It runs a <code class="replaceable"><i>process</I
></CODE
> and gives the output to a named pipe.
Then the filename of the named pipe becomes a command-line
argument.
Here's an example that shows two unsorted files and the result:</P
><p class="para"><blockquote class="screen"><pre class="screen">bash$ <code class="userinput"><b>cat file1</B
></CODE
>
rcsdiff.log
runsed
runsed.new
echo.where
foo
bash$ <code class="userinput"><b>cat file2</B
></CODE
>
newprogram
runsed
echo.where
foo

bash$ <code class="userinput"><b>comm &lt;(sort file1) &lt;(sort file2)</B
></CODE
>
                echo.where
                foo
        newprogram
rcsdiff.log
                runsed
runsed.new</PRE
></BLOCKQUOTE
></P
><p class="para">(In the first column, <em class="emphasis">comm</EM
> shows lines only in <em class="emphasis">file1</EM
>.
The second column shows lines only in <em class="emphasis">file2</EM
>.
The third column shows lines that were in both files.)</P
><p class="para">Let's take a closer look at how that works.
By setting the
<span class="link"><em class="emphasis">-x</EM
> option (<a class="linkend" href="ch08_17.htm" webstripperlinkwas="ch08_17.htm" title="verbose and echo Variables Show Quoting ">8.17</A
>)</SPAN
>,
the shell
will display the processes it runs with a <code class="literal">+</CODE
> before each top-level
process and <code class="literal">++</CODE
> before second-level processes:</P
><p class="para"><blockquote class="screen"><pre class="screen">bash$ <code class="userinput"><b>set -x</B
></CODE
>
bash$ <code class="userinput"><b>comm &lt;(sort file1) &lt;(sort file2)</B
></CODE
>
+ comm /tmp/sh-np-a11167 /tmp/sh-np-b11167
++ sort file1
++ sort file2
                echo.where
                foo
        newprogram
rcsdiff.log
                runsed
runsed.new</PRE
></BLOCKQUOTE
></P
><p class="para">The script made its named pipes in <em class="emphasis">/tmp</EM
>.
<em class="emphasis">bash</EM
> ran each <em class="emphasis">sort</EM
> command, sent its output to a named pipe,
and put the pipe's filename on the command line.
When the <em class="emphasis">comm</EM
> program finished, the named pipes were deleted.</P
><p class="para">I've run into problems with this operator in some cases:
when the process reading from a named pipe &quot;hung&quot; and never made any
output.
For example, that happened when I replaced <em class="emphasis">comm</EM
> with <em class="emphasis">diff</EM
>:
I'd get no output from <em class="emphasis">diff</EM
>.
I worked around the problem by
closing the standard output of each process with the
<span class="link"><code class="literal">&gt;&amp;-</CODE
> operator (<a class="linkend" href="ch45_21.htm" webstripperlinkwas="ch45_21.htm" title="n&gt;&amp;m: Swap Standard Output and Standard Error ">45.21</A
>)</SPAN
>,
like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">bash$ <code class="userinput"><b>diff &lt;(sort file1; exec &gt;&amp;-) &lt;(sort file2; exec &gt;&amp;-)</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">That made <em class="emphasis">diff</EM
> happy; it showed me the differences between the
two sorted files.</P
><p class="para"><em class="emphasis">bash</EM
> also has a similar operator, <code class="literal">&gt;(&nbsp;)</CODE
>, which takes the
input of a process from a named pipe.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-109-SECT-1.2">9.18.2 Automatic Temporary Files with ! </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-10788"></A
><a class="indexterm" name="AUTOID-10791"></A
>If you don't have <em class="emphasis">bash</EM
>, you can use the 
shell script named <code class="replaceable"><i>!</I
></CODE
> (an exclamation
point)
[2]
that runs a command, stores its output in a temporary file,
then puts the temporary filename on its standard output.
You use it with
<span class="link">backquotes (<a class="linkend" href="ch09_16.htm" webstripperlinkwas="ch09_16.htm" title="Command Substitution ">9.16</A
>)</SPAN
>
(<code class="literal">``</CODE
>).
Here's how to write the example from the previous section:</P
><blockquote class="footnote"><p class="para">[2] The C shell also uses an exclamation point as its
<span class="link">history character (<a class="linkend" href="ch11_01.htm" webstripperlinkwas="ch11_01.htm#UPT-ART-4920" title="The Lessons of History ">11.1</A
>, <a class="linkend" href="ch11_15.htm" webstripperlinkwas="ch11_15.htm" title="Changing C Shell History Characters with histchars ">11.15</A
>)</SPAN
>,
but not if there's a space after the exclamation point.
This script doesn't conflict with <em class="emphasis">csh</EM
> history.
<em class="emphasis">bash</EM
> uses the exclamation point to reverse the exit status of a
command&nbsp;- but then, if you're using <em class="emphasis">bash</EM
>, you don't need our <em class="emphasis">!</EM
>
script.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>comm `! sort file1` `! sort file2`</B
></CODE
>
                echo.where
                foo
        newprogram
rcsdiff.log
                runsed
runsed.new</PRE
></BLOCKQUOTE
></P
><p class="para">Why didn't I use the command line below, without the <code class="replaceable"><i>!</I
></CODE
> script?</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>comm `sort file1` `sort file2`</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">That's because the <em class="emphasis">comm</EM
> program (like most UNIX programs)
needs filename arguments.
Using backquotes by themselves would place the list of names (the sorted
contents of the files <em class="emphasis">file1</EM
> and <em class="emphasis">file2</EM
>) on the
<em class="emphasis">comm</EM
> command line.</P
><p class="para">To see what's happening, you can use
a Bourne shell and set its
<span class="link"><em class="emphasis">-x</EM
> option (<a class="linkend" href="ch08_17.htm" webstripperlinkwas="ch08_17.htm" title="verbose and echo Variables Show Quoting ">8.17</A
>)</SPAN
>;
the shell
will display the commands it runs with a <code class="literal">+</CODE
> before each one:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>set -x</B
></CODE
>
$ <code class="userinput"><b>comm `! sort file1` `! sort file2`</B
></CODE
>
+ ! sort file1 
+ ! sort file2 
+ comm /tmp/bang3969 /tmp/bang3971 
                echo.where
                foo
        newprogram
rcsdiff.log
                runsed
runsed.new</PRE
></BLOCKQUOTE
></P
><p class="para">The script made its
<span class="link">temporary files (<a class="linkend" href="ch21_03.htm" webstripperlinkwas="ch21_03.htm" title="Unique Names for Temporary Files ">21.3</A
>)</SPAN
>
in <em class="emphasis">/tmp</EM
>.
You should probably remove them.
If you're the only one using this script, you might be able to get away
with a command like:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>rm /tmp/bang[1-9]*</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">If your system has more than one user, it's safer to use
<span class="link"><em class="emphasis">find</EM
> (<a class="linkend" href="ch17_01.htm" webstripperlinkwas="ch17_01.htm#UPT-ART-7410" title="The find Command Is Great; The Problem Is Finding How to Use It">17.1</A
>)</SPAN
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>find /tmp -name 'bang*' -user</B
></CODE
> <code class="replaceable"><i>myname</I
></CODE
> <code class="userinput"><b>-exec rm {} \;</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">If you use this script much, you might make that cleanup command into an
<span class="link">alias (<a class="linkend" href="ch10_02.htm" webstripperlinkwas="ch10_02.htm" title="Aliases for Common Commands ">10.2</A
>)</SPAN
>
or a shell script&nbsp;- or start it
<span class="link">in the background (<a class="linkend" href="ch01_26.htm" webstripperlinkwas="ch01_26.htm" title="What a Multiuser System Can Do for You ">1.26</A
>)</SPAN
>
from your
<span class="link"><em class="emphasis">.logout</EM
> file (<a class="linkend" href="ch03_01.htm" webstripperlinkwas="ch03_01.htm#UPT-ART-4800" title="Running Commands When You Log Out ">3.1</A
>, <a class="linkend" href="ch03_02.htm" webstripperlinkwas="ch03_02.htm" title="Running Commands at Bourne/Korn Shell Logout ">3.2</A
>)</SPAN
>.</P
><p class="para">Here's the <em class="emphasis">!</EM
> script.
Of course, you can change the name to something besides <em class="emphasis">!</EM
> if you want.</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
&#13;








<a class="co" href="ch44_15.htm" webstripperlinkwas="ch44_15.htm" title="44.15 Handling Command-Line Arguments in Shell Scripts ">$@</A
> 


&#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
&#13;#! /bin/sh

temp=/tmp/bang$$

case $# in
0)  echo &quot;Usage: `basename $0` command [args]&quot; 1&gt;&amp;2
    echo $temp
    exit 1
    ;;

*)  &quot;$@&quot; &gt; $temp
    echo $temp
    ;;
esac</PRE
></TD
></TR
></TABLE
></P
><a class="indexterm" name="AUTOID-10852"></A
></DIV
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">JP</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_17.htm" webstripperlinkwas="ch09_17.htm" title="9.17 Handling Lots of Text with Temporary Files "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 9.17 Handling Lots of Text with Temporary Files " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_19.htm" webstripperlinkwas="ch09_19.htm" title="9.19 For the Impatient: Type-Ahead "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 9.19 For the Impatient: Type-Ahead " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">9.17 Handling Lots of Text with Temporary Files </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">9.19 For the Impatient: Type-Ahead </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
