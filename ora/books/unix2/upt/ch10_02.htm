<html><head><title>[Chapter 10] 10.2 Aliases for Common Commands </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:35:43Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch10_01.htm" webstripperlinkwas="ch10_01.htm" title="10. Aliases"><link rel="prev" href="ch10_01.htm" webstripperlinkwas="ch10_01.htm" title="10.1 Creating Custom Commands "><link rel="next" href="ch10_03.htm" webstripperlinkwas="ch10_03.htm" title="10.3 C Shell Aliases with Command-Line Arguments "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_01.htm" webstripperlinkwas="ch10_01.htm" title="10.1 Creating Custom Commands "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 10.1 Creating Custom Commands " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 10<br>Aliases</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_03.htm" webstripperlinkwas="ch10_03.htm" title="10.3 C Shell Aliases with Command-Line Arguments "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 10.3 C Shell Aliases with Command-Line Arguments " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-2340">10.2 Aliases for Common Commands </A
></H2
><p class="para"><a class="indexterm" name="AUTOID-11624"></A
><a class="indexterm" name="AUTOID-11627"></A
><a class="indexterm" name="AUTOID-11630"></A
>The C shells, <em class="emphasis">ksh</EM
> and <em class="emphasis">bash</EM
> have an &quot;alias&quot; facility that lets you
define abbreviations for commonly used commands. Aliases can get very
complicated, so we'll give just an introduction here. We'll use
the <em class="emphasis">csh</EM
> alias syntax here;
article
<a class="xref" href="ch10_04.htm" webstripperlinkwas="ch10_04.htm" title="Aliases in ksh and bash ">10.4</A
>
shows <em class="emphasis">bash</EM
> and <em class="emphasis">ksh</EM
>.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-2340-SECT-1.1">10.2.1 Simple Aliases </A
></H3
><p class="para">The simplest kind of alias is simply a new name for an old
command. For example, you might want to rename the <em class="emphasis">ls</EM
> command
as <em class="emphasis">dir</EM
> because you're used to DOS or VMS systems. That's easily
done:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias dir ls</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;<em class="emphasis">dir</EM
> is the new name; from now on, typing <code class="literal">dir</CODE
> as a command
is equivalent to typing <code class="literal">ls</CODE
>. Some other commonly used aliases
are:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias la ls -a         # include &quot;hidden&quot; files in listings
alias lf ls -F         # show whether files are directories, etc.
alias lr ls -R         # list recursively-show directory contents
alias ri rm -i         # ask before deleting
alias mi mv -i         # ask before moving over an existing file</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-11653"></A
><a class="indexterm" name="AUTOID-11656"></A
>In a <em class="emphasis">.cshrc</EM
> file, the hash mark (<code class="literal">#</CODE
>) means that
the rest of the line is a comment.
Describing your aliases can help you remember what they're for.
That's an especially good idea for complicated aliases you write&nbsp;- like the
aliases in the next section.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-2340-SECT-1.2">10.2.2 Using More Complex Aliases </A
></H3
><p class="para">Here are a few aliases that I
find useful; you'll have to adapt them to your own circumstances:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias emacs /home/src/emacs/bin/emacs                       
alias clean &quot;rm *~ .*~ core *.bak&quot;                          
alias vtext 'setenv EXINIT &quot;source $HOME/.exrc.text&quot; ; vi'  
alias vprog 'setenv EXINIT &quot;source $HOME/.exrc.prog&quot; ; vi'</PRE
></BLOCKQUOTE
></P
><p class="para">Let's look at these aliases more closely.
The <em class="emphasis">emacs</EM
> alias isn't anything fancy; it's just a way of
remembering a long command name, without having to
<span class="link">add another directory to your search path (<a class="linkend" href="ch08_07.htm" webstripperlinkwas="ch08_07.htm" title="Setting Your Search Path ">8.7</A
>)</SPAN
>
for a single command.
(I find long
search paths aesthetically unappealing.
They can also slow your system down, although the C shell uses a
<span class="link">hash table (<a class="linkend" href="glossary.htm" webstripperlinkwas="glossary.htm#UPT-ART-1010" title="Glossary">52.9</A
>)</SPAN
>
to speed up searching.
On the other hand, it takes time to read aliases like <em class="emphasis">emacs</EM
>
from your <em class="emphasis">.cshrc</EM
> file into the shell.
Defining lots of aliases, instead of simply changing your search path, can
delay logins and
<span class="link">subshells (<a class="linkend" href="ch38_04.htm" webstripperlinkwas="ch38_04.htm" title="Subshells ">38.4</A
>)</SPAN
>.
If you have a fast computer, it may not matter whether you use lots of
aliases or have a long search path.)</P
><p class="para">The <em class="emphasis">clean</EM
> alias is great; it deletes GNU Emacs backup files and 
<span class="link"><em class="emphasis">core</EM
> (<a class="linkend" href="glossary.htm" webstripperlinkwas="glossary.htm#UPT-ART-1010" title="Glossary">52.9</A
>)</SPAN
>
files (which I usually don't keep around) and other miscellany.
Rather than have some complex &quot;auto-cleaning&quot; system that runs from
<em class="emphasis">cron</EM
>, I just occasionally type <code class="literal">clean</CODE
> in my current directory.
Everyone should have an alias like this and doctor
it so that it gets rid of as much junk as possible.
(A lot of people, though, would tell you not to be so quick to delete
your editor's backup files. Use your own judgment.)</P
><p class="para">The third and fourth aliases are a bit clever, in a primitive sort of way. 
You type the command <code class="literal">vtext&nbsp;afile</CODE
>; the shell separates the commands at
the semicolon and executes one after the other:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
<a class="co" href="ch14_11.htm" webstripperlinkwas="ch14_11.htm" title="14.11 Finding (Anyone's) Home Directory, Quickly ">$HOME</A
> &#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
setenv EXINIT &quot;source $HOME/.exrc.text&quot;
vi afile</PRE
></TD
></TR
></TABLE
></P
><p class="para"><a class="indexterm" name="AUTOID-11685"></A
>The first command sets the
<em class="emphasis">EXINIT</EM
>
<span class="link">environment variable (<a class="linkend" href="ch06_01.htm" webstripperlinkwas="ch06_01.htm#UPT-ART-1170" title="What Environment Variables Are Good For ">6.1</A
>)</SPAN
>;
this makes <em class="emphasis">vi</EM
> read a particular
<span class="link">setup file (<a class="linkend" href="ch04_09.htm" webstripperlinkwas="ch04_09.htm" title="Setting Up vi with the .exrc File ">4.9</A
>)</SPAN
>
named <em class="emphasis">.exrc.text</EM
>
in the home directory.
The second command starts <em class="emphasis">vi</EM
> with whatever arguments you type.
You aren't limited to just one filename.
You can type whatever arguments you want, including more filenames
and <em class="emphasis">vi</EM
> options; they're all tacked on after <code class="literal">vi</CODE
>. There are
more graceful ways to<a class="indexterm" name="AUTOID-11695"></A
><a class="indexterm" name="AUTOID-11698"></A
>
<span class="link">get command-line arguments into aliases (<a class="linkend" href="ch10_03.htm" webstripperlinkwas="ch10_03.htm" title="C Shell Aliases with Command-Line Arguments ">10.3</A
>)</SPAN
>,
but this does the trick when the arguments go on the end of an alias.</P
><p class="para"><a class="indexterm" name="AUTOID-11703"></A
>Note that we put this alias in quotes.
Why? Because it's a compound
command (<em class="emphasis">setenv</EM
>, then <em class="emphasis">vi</EM
>).
We want the alias to
include both stages of the command. Think about what this means if we
don't put quotes around the alias definition when defining the alias:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias vtext setenv EXINIT &quot;source $HOME/.exrc.text&quot; ; vi    <em class="emphasis">Wrong!</EM
></PRE
></BLOCKQUOTE
></P
><p class="para">The shell sees the
<span class="link">semicolon (<a class="linkend" href="ch08_05.htm" webstripperlinkwas="ch08_05.htm" title="Command-Line Evaluation ">8.5</A
>)</SPAN
>
(a command separator) outside of quotes,
so it separates the command line into two commands.
The first command defines the <em class="emphasis">vtext</EM
> alias to run <em class="emphasis">setenv</EM
>,
not <em class="emphasis">vi</EM
>.
After the alias is defined, the shell runs the second command:
<em class="emphasis">vi</EM
> with no filename.
In any case, the results have nothing to do with what you want.</P
><p class="para">The way we originally defined the <em class="emphasis">vtext</EM
> alias, with quotes
around the whole definition, is what we want.
The outer quotes tell the shell to put everything into the alias
definition.
The semicolon in the alias will be interpreted, and separate the two commands,
any time you use the alias.</P
><p class="para">Next, look at the <em class="emphasis">clean</EM
> alias.
As with the <em class="emphasis">vtext</EM
> alias, this one needs to be quoted.
The
reason now is a bit different; the quotes prevent the shell
from expanding the <code class="literal">*</CODE
> wildcard immediately. That is, if you just typed:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>alias clean rm *~</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">the shell would expand the wildcard immediately.
So if a file named <em class="emphasis">foo~</EM
> is in your current directory, the
<em class="emphasis">clean</EM
> alias will be <code class="literal">rm</CODE
>&nbsp;<code class="literal">foo~</CODE
>.
That (most likely) isn't what you want; a
<em class="emphasis">clean</EM
> alias that will only delete one particular file isn't very
interesting.</P
><p class="para">So you need a way to prevent the shell from interpreting the <code class="literal">*</CODE
> right
now (when you define the alias); you want the shell to interpret <code class="literal">*</CODE
>
later, when you use the alias.
There are plenty of articles in this book about 
<span class="link">quoting (<a class="linkend" href="ch08_14.htm" webstripperlinkwas="ch08_14.htm" title="Bourne Shell Quoting ">8.14</A
>, <a class="linkend" href="ch08_15.htm" webstripperlinkwas="ch08_15.htm" title="Differences Between Bourne and C Shell Quoting ">8.15</A
>)</SPAN
>,
but the
simplest way to write an alias that uses wildcards (or other special
characters) is to put it inside of quotation marks.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-2340-SECT-1.3">10.2.3 Setting Aliases Automatically, Unsetting Aliases </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-11739"></A
><a class="indexterm" name="AUTOID-11742"></A
>Any aliases you define can be placed in your <em class="emphasis">.cshrc</EM
> file, so
that they'll be available whenever you're using the C shell.
(Note: aliases are
<span class="link"><em class="emphasis">not</EM
> passed to subprocesses (<a class="linkend" href="ch02_02.htm" webstripperlinkwas="ch02_02.htm" title="Shell Setup Files-Which, Where, and Why ">2.2</A
>)</SPAN
>,
so putting them
in your <em class="emphasis">.login</EM
> file probably isn't wise.)</P
><p class="para"><a class="indexterm" name="AUTOID-11750"></A
>Some people like to use aliases to redefine UNIX commands.
For instance, you could make an alias named <em class="emphasis">rm</EM
> that actually
runs <em class="emphasis">mv</EM
>, moving a file to a &quot;trashcan&quot; directory instead of
actually removing it.
[1]
Redefining commands can be
<span class="link">confusing or dangerous (<a class="linkend" href="ch10_06.htm" webstripperlinkwas="ch10_06.htm" title="Avoiding C Shell Alias Loops ">10.6</A
>)</SPAN
>.
Still, in some cases, aliases that redefine commands can be useful.</P
><blockquote class="footnote"><p class="para">[1] Article
<a class="xref" href="ch23_09.htm" webstripperlinkwas="ch23_09.htm" title="delete: Protecting Files from Accidental Deletion ">23.9</A
>
shows the <em class="emphasis">delete</EM
> programs, a better way to do this.</P
></BLOCKQUOTE
><p class="para">To temporarily use the default <em class="emphasis">rm</EM
> (not your alias named <em class="emphasis">rm</EM
>),
type 
<span class="link">a backslash (<code class="literal">\</CODE
>) before the name (<a class="linkend" href="ch08_12.htm" webstripperlinkwas="ch08_12.htm" title="Which One Will the C Shell Use? ">8.12</A
>)</SPAN
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>\rm</B
></CODE
> <code class="replaceable"><i>filename</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">To use the default <em class="emphasis">rm</EM
> for the rest of your login session:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>unalias rm</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Unless you remove the definition from <em class="emphasis">.cshrc</EM
>, 
the alias is restored the next time you log in
(or the next time you create any new C shell).</P
><p class="para"><a class="indexterm" name="AUTOID-11777"></A
>A final piece of trivia: the C shell manual page tells us that aliases
can be nested; that is, they can refer to other aliases. Personally,
I think this would get too complicated too quickly to be very useful,
so I don't do it and can't recommend it. But you can try.</P
></DIV
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">ML</SPAN
>, <span class="authorinitials">JP</SPAN
>, <span class="authorinitials">DG</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_01.htm" webstripperlinkwas="ch10_01.htm" title="10.1 Creating Custom Commands "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 10.1 Creating Custom Commands " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_03.htm" webstripperlinkwas="ch10_03.htm" title="10.3 C Shell Aliases with Command-Line Arguments "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 10.3 C Shell Aliases with Command-Line Arguments " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">10.1 Creating Custom Commands </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10.3 C Shell Aliases with Command-Line Arguments </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
