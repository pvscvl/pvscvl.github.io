<html><head><title>[Chapter 38] 38.11 Printer Queue Watcher: A Restartable Daemon Shell Script</TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:49:47Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch38_01.htm" webstripperlinkwas="ch38_01.htm" title="38. Starting, Stopping, and Killing Processes"><link rel="prev" href="ch38_10.htm" webstripperlinkwas="ch38_10.htm" title="38.10 Destroying Processes with kill "><link rel="next" href="ch38_12.htm" webstripperlinkwas="ch38_12.htm" title="38.12 Killing All Your Processes "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch38_10.htm" webstripperlinkwas="ch38_10.htm" title="38.10 Destroying Processes with kill "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 38.10 Destroying Processes with kill " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 38<br>Starting, Stopping, and Killing Processes</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch38_12.htm" webstripperlinkwas="ch38_12.htm" title="38.12 Killing All Your Processes "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 38.12 Killing All Your Processes " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-0212">38.11 Printer Queue Watcher: A Restartable Daemon Shell Script</A
></H2
><p class="para"><a class="indexterm" name="AUTOID-43076"></A
>[This article may not appear to have a lot to do with the subject of this
chapter, but it illustrates the other side of signal handling&nbsp;- what a
program or shell script can do when it receives a signal.
Jerry's script uses the 
<span class="link"><em class="emphasis">trap</EM
> (<a class="linkend" href="ch44_12.htm" webstripperlinkwas="ch44_12.htm" title="Trapping Exits Caused by Interrupts ">44.12</A
>)</SPAN
>
command to catch several different signals, and act differently
depending on whether the signal is a &quot;hangup&quot; (<i class="filename">HUP</I
>, or signal 1)
or a <i class="filename">TERM</I
> (signal 15). -TOR&nbsp;]</P
><p class="para"><a class="indexterm" name="AUTOID-43084"></A
>UNIX systems run &quot;daemon&quot; programs like <em class="emphasis">cron</EM
>(8) and <em class="emphasis">syslogd</EM
>(8)
that wait in the background, looking for work to do.
Many daemons read configuration files when they start up.
System administrators sometimes change the configuration files and want
the daemon to re-read the file.
One way to do that is by terminating and restarting the program&nbsp;- but
that's ugly and also means the daemon won't be running for a few seconds
until it's restarted.
So, many daemons are designed to re-read their configuration files
and/or restart themselves when they get a signal (usually, the HUP
signal, signal 1).
System administrators do this by getting the daemon's process ID number
and sending the signal with the <em class="emphasis">kill</EM
> command.
Because the daemon &quot;catches&quot; the signal, the daemon isn't actually killed.</P
><p class="para"><a class="indexterm" name="AUTOID-43091"></A
><a class="indexterm" name="AUTOID-43094"></A
><a class="indexterm" name="AUTOID-43096"></A
>You can run a shell script as a daemon by putting it in the
background.
[4]
Here's a simple example, a shell script named <em class="emphasis">watchq</EM
>.
It reads a file full of printer queue names and stores it in a shell variable.
Every 30 seconds, it runs
<span class="link"><em class="emphasis">lpq</EM
> (<a class="linkend" href="ch43_02.htm" webstripperlinkwas="ch43_02.htm" title="Introduction to Printing on UNIX ">43.2</A
>)</SPAN
>
on all printer queues listed.
If any queues have an error, the script echoes a message and the output
of <em class="emphasis">lpq</EM
> to a particular user with the
<span class="link"><em class="emphasis">write</EM
> (<a class="linkend" href="ch01_33.htm" webstripperlinkwas="ch01_33.htm" title="UNIX Networking and Communications ">1.33</A
>)</SPAN
>
command.</P
><blockquote class="footnote"><p class="para">[4] It's usually also a good idea to be sure that
<span class="link">the input and outputs are redirected (<a class="linkend" href="ch13_01.htm" webstripperlinkwas="ch13_01.htm#UPT-ART-1023" title="Using Standard Input and Output">13.1</A
>, <a class="linkend" href="ch45_21.htm" webstripperlinkwas="ch45_21.htm" title="n&gt;&amp;m: Swap Standard Output and Standard Error ">45.21</A
>)</SPAN
>
away from the terminal, maybe to the system console instead.
On systems and shells that kill background jobs when you log out, use
<span class="link"><em class="emphasis">nohup</EM
> (<a class="linkend" href="ch38_18.htm" webstripperlinkwas="ch38_18.htm" title="nohup ">38.18</A
>)</SPAN
>.</P
></BLOCKQUOTE
><p class="para">After the script has run for a while, the printer named <em class="emphasis">office</EM
> goes down.
I edit the <em class="emphasis">watchqs</EM
> file and remove that printer so the poor user
<em class="emphasis">lisa</EM
> won't keep getting complaints about it.
Then I send a signal to have the file re-read:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
&#13;















<a class="co" href="ch13_14.htm" webstripperlinkwas="ch13_14.htm" title="13.14 What Can You Do with an Empty File? ">/dev/null</A
> 
<a class="co" href="ch13_13.htm" webstripperlinkwas="ch13_13.htm" title='13.13 The "Filename&quot; - '>-</A
> 









<a class="co" href="ch38_10.htm" webstripperlinkwas="ch38_10.htm" title="38.10 Destroying Processes with kill ">kill</A
> 

&#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
&#13;% <code class="userinput"><b>cat watchq</B
></CODE
>
#! /bin/sh
# watchq - &quot;daemon&quot; script that watches printer queue(s) for errors
temp=/tmp/WATCHQ$$             # Holds output of lpq
watch=/usr/local/lib/watchqs   # Queue names to watch
writeto=lisa                   # User who gets notices about printer
queues=&quot;`cat $watch`&quot;          # Put list of queue names in $queues
trap 'queues=&quot;`cat $watch`&quot;' 1 # Reset $queues if we get a SIGHUP
trap 'rm -f $temp; exit' 0 15  # Clean up temp file when killed

# Loop forever (until someone kills script):
while :
do
    for queue in $queues
    do
        lpq -P$queue &gt;$temp
        if egrep '(out of paper|error|warning)' $temp &gt;/dev/null
        then echo &quot;PRINTER QUEUE $queue:&quot; | cat - $temp | write $writeto
        fi
    done
    sleep 30
done
% <code class="userinput"><b>echo office main lobby &gt; /usr/local/lib/watchqs</B
></CODE
>
% <code class="userinput"><b>watchq &amp;</B
></CODE
>
[1] 4363
   ...
% <code class="userinput"><b>echo main lobby &gt; /usr/local/lib/watchqs</B
></CODE
>
%<code class="userinput"><b> kill -1 4363</B
></CODE
>
   ...
% <code class="userinput"><b>kill 4363</B
></CODE
>
[1]    Exit -48             watchq</PRE
></TD
></TR
></TABLE
></P
><p class="para">In real life, the <em class="emphasis">watchq</EM
> script might be started from a system file
like <em class="emphasis">/etc/rc.local</EM
> when the system reboots.
Lisa would probably edit the <em class="emphasis">watchqs</EM
> file herself.
The username that's notified by <em class="emphasis">write</EM
> might also be resettable with a
<em class="emphasis">kill -1</EM
>.</P
><p class="para">This isn't foolproof and you can run into subtle problems.
For instance, the <em class="emphasis">write</EM
> command may not work on some UNIXes if
it's running from a daemon without a
<span class="link">controlling tty (<a class="linkend" href="ch38_06.htm" webstripperlinkwas="ch38_06.htm" title="The Controlling Terminal ">38.6</A
>)</SPAN
>.
Also, the error messages that
<span class="link"><em class="emphasis">egrep</EM
> (<a class="linkend" href="ch27_05.htm" webstripperlinkwas="ch27_05.htm" title="Extended Searching for Text with egrep ">27.5</A
>)</SPAN
>
searches for may not catch all
problems and are system-dependent.
But this script is just a demonstration&nbsp;- to show a great way to write a
quick-and-dirty daemon.</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">JP</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch38_10.htm" webstripperlinkwas="ch38_10.htm" title="38.10 Destroying Processes with kill "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 38.10 Destroying Processes with kill " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch38_12.htm" webstripperlinkwas="ch38_12.htm" title="38.12 Killing All Your Processes "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 38.12 Killing All Your Processes " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">38.10 Destroying Processes with kill </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">38.12 Killing All Your Processes </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
