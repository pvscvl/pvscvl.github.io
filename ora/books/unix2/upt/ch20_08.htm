<html><head><title>[Chapter 20] 20.8 Telling tar Which Files to Exclude or Include </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-10-23T15:44:58Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch20_01.htm" webstripperlinkwas="ch20_01.htm" title="20. Backing Up Files"><link rel="prev" href="ch20_07.htm" webstripperlinkwas="ch20_07.htm" title="20.7 Creating a Timestamp File for Selective Backups "><link rel="next" href="ch20_09.htm" webstripperlinkwas="ch20_09.htm" title="20.9 When a Program Doesn't Understand Wildcards "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch20_07.htm" webstripperlinkwas="ch20_07.htm" title="20.7 Creating a Timestamp File for Selective Backups "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 20.7 Creating a Timestamp File for Selective Backups " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 20<br>Backing Up Files</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch20_09.htm" webstripperlinkwas="ch20_09.htm" title="20.9 When a Program Doesn't Understand Wildcards "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 20.9 When a Program Doesn't Understand Wildcards " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-0424">20.8 Telling tar Which Files to Exclude or Include </A
></H2
><p class="para">[This article was written for SunOS.
Many versions of tar don't have some or all of
these features.
Some do it in a different way.
Check your tar manual page, or use the
<span class="link"><em class="emphasis">GNU </EM
>tar (<a class="linkend" href="ch19_06.htm" webstripperlinkwas="ch19_06.htm" title="GNU tar Sampler ">19.6</A
>)</SPAN
>
that we provide
on the disc. -JP]</P
><p class="para"><a class="indexterm" name="UPT-ART-424-IX-ARCHIVES-TAR-ARCHIVES"></A
><a class="indexterm" name="UPT-ART-424-IX-TAR-ARCHIVES-EXCLUDING-INCLUDING-FILES-IN"></A
>On some systems,
<span class="link"><em class="emphasis">make</EM
> (<a class="linkend" href="ch28_13.htm" webstripperlinkwas="ch28_13.htm" title="make Isn't Just for Programmers! ">28.13</A
>)</SPAN
>
creates filenames starting with a
comma&nbsp;(<code class="literal">,</CODE
>) 
to keep track of dependencies.
Various editors create backup files whose names end with a
percent sign&nbsp;(<code class="literal">%</CODE
>) 
or a
tilde&nbsp;(<code class="literal">~</CODE
>).
I often keep the original copy of a program with the <em class="emphasis">.orig</EM
>
extension and old versions with a <em class="emphasis">.old</EM
>
extension.</P
><p class="para">I often don't want to save these files on my backups.
There may be some binary files that I don't
want to archive, but don't want to delete either.</P
><p class="para"><a class="indexterm" name="AUTOID-22299"></A
><a class="indexterm" name="AUTOID-22302"></A
><a class="indexterm" name="AUTOID-22305"></A
>A solution is to use the
<em class="emphasis">X</EM
>
flag to
<span class="link"><em class="emphasis">tar</EM
> (<a class="linkend" href="ch20_01.htm" webstripperlinkwas="ch20_01.htm#UPT-ART-8024" title="tar in a Nutshell ">20.1</A
>)</SPAN
>.
[Check your <em class="emphasis">tar</EM
> manual page for the <em class="emphasis">F</EM
> and <em class="emphasis">FF</EM
> options, too.
<em class="emphasis">-JIK</EM
>&nbsp;]
This flag specifies that the matching argument to 
<em class="emphasis">tar</EM
>
is the name of a file that lists files to exclude from the archive.
Here is an example:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>find project ! -type d -print | \
egrep '/,|%$|~$|\.old$|SCCS|/core$|\.o$|\.orig$' &gt; Exclude</B
></CODE
>
% <code class="userinput"><b>tar cvfX project.tar Exclude project</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">In this example,
<span class="link"><em class="emphasis">find</EM
> (<a class="linkend" href="ch17_01.htm" webstripperlinkwas="ch17_01.htm#UPT-ART-7410" title="The find Command Is Great; The Problem Is Finding How to Use It">17.1</A
>)</SPAN
>
lists all files in the directories, but does not
print the directory names explicitly.
If you have a directory name in an excluded list, 
it will also exclude all the files inside the directory.
<span class="link"><em class="emphasis">egrep</EM
> (<a class="linkend" href="ch27_05.htm" webstripperlinkwas="ch27_05.htm" title="Extended Searching for Text with egrep ">27.5</A
>)</SPAN
>
is then used as a filter to exclude certain files from the archive.
Here,
<em class="emphasis">egrep</EM
>
is given several regular expressions to match certain files.
This expression seems complex but is simple once you understand
a few special characters:</P
><dl class="variablelist"><dt class="term"><code class="literal">/</CODE
></DT
><dd class="listitem"><p class="para">The slash is not a special character. 
However, since no filename
can contain a slash, it matches the beginning of a filename,
as output by the 
<em class="emphasis">find</EM
>
command.</P
></DD
><dt class="term"><code class="literal">|</CODE
></DT
><dd class="listitem"><p class="para">The vertical bar separates each regular expression.</P
></DD
><dt class="term"><code class="literal">$</CODE
></DT
><dd class="listitem"><p class="para">The dollar sign is one of the two regular expression
&quot;anchors&quot;
and specifies the end of the line, or filename in this case.
The other anchor, which specifies the beginning of the line, is
<code class="literal">^</CODE
> (caret).
But because we are matching filenames output by
<em class="emphasis">find</EM
>,
the only filenames that can match
<code class="literal">^</CODE
>
are those in the top directory.</P
></DD
><dt class="term"><code class="literal">\.</CODE
></DT
><dd class="listitem"><p class="para">Normally the dot matches any character in a regular
expression. Here, we want to match the actual
character <code class="literal">.</CODE
> (dot),
which is why the backslash is used to
quote
or
escape
the normal meaning.</P
></DD
></DL
><p class="para">A breakdown of the patterns and examples of the files
that match these patterns is given here:</P
><table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Pattern</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Matches Files</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Used by</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">/,</TD
><td class="entry" rowspan="1" colspan="1">starting with <em class="emphasis">,</EM
></TD
><td class="entry" rowspan="1" colspan="1"><em class="emphasis">make</EM
> dependency files</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">%$</TD
><td class="entry" rowspan="1" colspan="1">ending with <em class="emphasis">%</EM
></TD
><td class="entry" rowspan="1" colspan="1"><em class="emphasis">textedit</EM
> backup files</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">~$</TD
><td class="entry" rowspan="1" colspan="1">ending with <em class="emphasis">~</EM
></TD
><td class="entry" rowspan="1" colspan="1"><em class="emphasis">emacs</EM
> backup files</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">\.old$</TD
><td class="entry" rowspan="1" colspan="1">ending with <em class="emphasis">.old</EM
></TD
><td class="entry" rowspan="1" colspan="1">old copies</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">SCCS</TD
><td class="entry" rowspan="1" colspan="1">in <em class="emphasis">SCCS</EM
> directory</TD
><td class="entry" rowspan="1" colspan="1"><span class="link">Source Code Control System (<a class="linkend" href="ch20_13.htm" webstripperlinkwas="ch20_13.htm" title="SCCS Basics ">20.13</A
>)</SPAN
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">/core$</TD
><td class="entry" rowspan="1" colspan="1">with name of <em class="emphasis">core</EM
></TD
><td class="entry" rowspan="1" colspan="1"><span class="link">core dump (<a class="linkend" href="glossary.htm" webstripperlinkwas="glossary.htm#UPT-ART-1010" title="Glossary">52.9</A
>)</SPAN
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">\.o$</TD
><td class="entry" rowspan="1" colspan="1">ending with <em class="emphasis">.o</EM
></TD
><td class="entry" rowspan="1" colspan="1">object files</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">\.orig$</TD
><td class="entry" rowspan="1" colspan="1">ending with <em class="emphasis">.orig</EM
></TD
><td class="entry" rowspan="1" colspan="1">original version</TD
></TR
></TBODY
></TABLE
><p class="para"><a class="indexterm" name="AUTOID-22407"></A
>Instead of specifying which files are to be excluded, you can specify which 
files to archive using the
<em class="emphasis">-I</EM
> 
option.
As with the exclude flag, specifying a directory tells
<em class="emphasis">tar</EM
>
to include (or exclude) the entire directory.
You should also note that the syntax of the
<em class="emphasis">-I</EM
>
option is different from the typical
<em class="emphasis">tar</EM
>
flag.
The next example archives all C files and makefiles.
It uses <em class="emphasis">egrep</EM
>'s <code class="literal">()</CODE
> grouping operators to make
the <code class="literal">$</CODE
> anchor character apply to all patterns inside the
parentheses:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>find project -type f -print | \
egrep '(\.[ch]|[Mm]akefile)$' &gt; Include</B
></CODE
>
% <code class="userinput"><b>tar cvf project.tar -I Include</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">I suggest using
<em class="emphasis">find</EM
>
to create the include or exclude file.
You can edit it afterward, if you wish.
One caution: extra spaces at the end of any line will cause that file
to be ignored.</P
><p class="para">One way to debug the
output
of the
<em class="emphasis">find</EM
>
command is to use
<span class="link"><em class="emphasis">/dev/null</EM
> (<a class="linkend" href="ch13_14.htm" webstripperlinkwas="ch13_14.htm" title="What Can You Do with an Empty File? ">13.14</A
>)</SPAN
>
as the output file:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>tar cvfX /dev/null Exclude project</B
></CODE
></PRE
></BLOCKQUOTE
></P
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-424-SECT-1.1">20.8.1 Including Other Directories </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-22433"></A
><a class="indexterm" name="AUTOID-22436"></A
>There are times when you want to make an archive of several directories.
You may want to archive a source directory and
another directory like
<em class="emphasis">/usr/local</EM
>.
The natural, but wrong, way to do this is to use the command:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>tar cvf /dev/rmt8 project /usr/local</B
></CODE
></PRE
></BLOCKQUOTE
></P
><blockquote class="note"><p class="para"><strong>NOTE:</STRONG
> When using <em class="emphasis">tar</EM
>, you must never specify a directory name starting with a
slash (/).
This will cause problems when you restore a directory,
<span class="link">as you will see later (<a class="linkend" href="ch20_10.htm" webstripperlinkwas="ch20_10.htm" title="Avoid Absolute Paths with tar ">20.10</A
>)</SPAN
>.</P
></BLOCKQUOTE
><p class="para">The proper way to handle the incorrect example above is to use the<a class="indexterm" name="AUTOID-22448"></A
>
<em class="emphasis">-C</EM
> 
flag:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>tar cvf /dev/rmt8 project -C /usr local</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">This will archive
<em class="emphasis">/usr/local/...</EM
>
as
<em class="emphasis">local/...</EM
>.
Article
<a class="xref" href="ch20_10.htm" webstripperlinkwas="ch20_10.htm" title="Avoid Absolute Paths with tar ">20.10</A
>
has more information.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-424-SECT-1.2">20.8.2 Type Pathnames Exactly </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-22462"></A
>For the above options to work when you extract files from an archive,
the pathname given in the include or exclude file
must exactly match the pathname on the tape.</P
><p class="para">Here's a sample run.
I'm extracting from a file named <em class="emphasis">appe.tar</EM
>.
Of course, this example applies to tapes, too:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>tar tf appe.tar</B
></CODE
>
appe
code/appendix/font_styles.c
code/appendix/xmemo.c
code/appendix/xshowbitmap.c
code/appendix/zcard.c
code/appendix/zcard.icon</PRE
></BLOCKQUOTE
></P
><p class="para">Next, I create an exclude file, named <em class="emphasis">exclude</EM
>, that contains the
lines:</P
><p class="para"><blockquote class="screen"><pre class="screen">code/appendix/zcard.c
code/appendix/zcard.icon</PRE
></BLOCKQUOTE
></P
><p class="para">Now, I run the following <em class="emphasis">tar</EM
> command:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>tar xvfX appe.tar exclude</B
></CODE
>
x appe, 6421 bytes, 13 tape blocks
x code/appendix/font_styles.c, 3457 bytes, 7 tape blocks
x code/appendix/xmemo.c, 10920 bytes, 22 tape blocks
x code/appendix/xshowbitmap.c, 20906 bytes, 41 tape blocks
code/appendix/zcard.c excluded
code/appendix/zcard.icon excluded</PRE
></BLOCKQUOTE
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-424-SECT-1.3">20.8.3 Exclude the Archive File! </A
></H3
><p class="para">If you're archiving the current directory (<code class="literal">.</CODE
>) instead of
starting at a subdirectory, remember to start with
two pathnames in the <em class="emphasis">Exclude</EM
> file:
the archive that <em class="emphasis">tar</EM
> creates and the <em class="emphasis">Exclude</EM
> file itself.
That keeps <em class="emphasis">tar</EM
> from trying to archive its own output!</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>cat &gt; Exclude
./somedir.tar
./Exclude</B
></CODE
>
<kbd class="keycap">[CTRL-d]</KBD
>
% <code class="userinput"><b>find . -type f -print | \
egrep  '/,|%$|~$|\.old$|SCCS|/core$|\.o$|\.orig$' &gt;&gt;Exclude</B
></CODE
>
% <code class="userinput"><b>tar cvfX somedir.tar Exclude .</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">In that example,
we used
<span class="link"><code class="literal">cat</CODE
>&nbsp;<code class="literal">&gt;</CODE
> (<a class="linkend" href="ch25_02.htm" webstripperlinkwas="ch25_02.htm" title="Four Ways to Skin a cat ">25.2</A
>)</SPAN
>
to create the file quickly; you could use a text
editor instead.
Notice that the pathnames in the <em class="emphasis">Exclude</EM
> file start with <code class="literal">./</CODE
>;
that's what the <em class="emphasis">tar</EM
> command expects when you tell it to archive
the current directory (<code class="literal">.</CODE
>).
The long <em class="emphasis">find</EM
>/<em class="emphasis">egrep</EM
> command line uses the
<span class="link"><code class="literal">&gt;&gt;</CODE
> operator (<a class="linkend" href="ch13_01.htm" webstripperlinkwas="ch13_01.htm#UPT-ART-1023" title="Using Standard Input and Output">13.1</A
>)</SPAN
>
to add other pathnames to the end of the <em class="emphasis">Exclude</EM
> file.</P
><p class="para">&#13;Or, instead of adding the archive and exclude file's pathnames to the
exclude file, you can move those two files somewhere out of the
directory tree that <em class="emphasis">tar</EM
> will read.<a class="indexterm" name="AUTOID-22508"></A
><a class="indexterm" name="AUTOID-22509"></A
></P
></DIV
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">BB, TOR</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch20_07.htm" webstripperlinkwas="ch20_07.htm" title="20.7 Creating a Timestamp File for Selective Backups "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 20.7 Creating a Timestamp File for Selective Backups " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch20_09.htm" webstripperlinkwas="ch20_09.htm" title="20.9 When a Program Doesn't Understand Wildcards "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 20.9 When a Program Doesn't Understand Wildcards " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">20.7 Creating a Timestamp File for Selective Backups </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">20.9 When a Program Doesn't Understand Wildcards </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
