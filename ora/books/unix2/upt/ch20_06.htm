<html><head><title>[Chapter 20] 20.6 Writing a Tape Drive on a Remote Machine </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-10-23T15:44:55Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch20_01.htm" webstripperlinkwas="ch20_01.htm" title="20. Backing Up Files"><link rel="prev" href="ch20_05.htm" webstripperlinkwas="ch20_05.htm" title="20.5 Using tar to a Remote Tape Drive "><link rel="next" href="ch20_07.htm" webstripperlinkwas="ch20_07.htm" title="20.7 Creating a Timestamp File for Selective Backups "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch20_05.htm" webstripperlinkwas="ch20_05.htm" title="20.5 Using tar to a Remote Tape Drive "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 20.5 Using tar to a Remote Tape Drive " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 20<br>Backing Up Files</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch20_07.htm" webstripperlinkwas="ch20_07.htm" title="20.7 Creating a Timestamp File for Selective Backups "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 20.7 Creating a Timestamp File for Selective Backups " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-6050">20.6 Writing a Tape Drive on a Remote Machine </A
></H2
><p class="para">[Bruce Barnett introduces this topic in article
<a class="xref" href="ch20_05.htm" webstripperlinkwas="ch20_05.htm" title="Using tar to a Remote Tape Drive ">20.5</A
>.
-JP]</P
><p class="para">In news posting <em class="emphasis">&lt;5932@tahoe.unr.edu&gt; malc@equinox.unr.edu</EM
> 
(Malcolm Carlock) asked how to make <em class="emphasis">tar</EM
> write a remote tape drive 
via
<span class="link"><em class="emphasis">rsh</EM
> (<a class="linkend" href="ch01_33.htm" webstripperlinkwas="ch01_33.htm" title="UNIX Networking and Communications ">1.33</A
>)</SPAN
>
and
<span class="link"><em class="emphasis">dd</EM
> (<a class="linkend" href="ch35_06.htm" webstripperlinkwas="ch35_06.htm" title="Low-Level File Butchery with dd ">35.6</A
>)</SPAN
>.
Here's the answer:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>tar cf - . | rsh foo dd of=/dev/</B
></CODE
><code class="replaceable"><i>device</I
></CODE
> <code class="userinput"><b>obs=20b</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-22135"></A
><a class="indexterm" name="AUTOID-22138"></A
><a class="indexterm" name="AUTOID-22141"></A
><a class="indexterm" name="AUTOID-22143"></A
><a class="indexterm" name="AUTOID-22146"></A
>Be forewarned that most incarnations of <em class="emphasis">dd</EM
> are extremely slow at handling this.</P
><p class="para">What is going on? This answer requires some background:</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-22154"></A
><a class="indexterm" name="AUTOID-22156"></A
><a class="indexterm" name="AUTOID-22158"></A
><a class="indexterm" name="AUTOID-22160"></A
>Tapes have &quot;block sizes.&quot; Not all tapes, mind you&nbsp;- most SCSI
tapes have a fixed block size that can, for the most part, be
ignored. Nine-track tapes, however, typically record data in
&quot;records&quot; separated by &quot;gaps,&quot; and only whole records can be
reread later.</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-22164"></A
><a class="indexterm" name="AUTOID-22166"></A
>In order to accommodate this, UNIX tape drivers generally translate
each <em class="emphasis">read(&nbsp;)</EM
> or <em class="emphasis">write(&nbsp;)</EM
> system call into a single record transfer.
The size of a written record is the number of bytes passed to
<em class="emphasis">write(&nbsp;)</EM
>. (There may be some additional constraints, such as
&quot;the size must be even&quot; or &quot;the size must be no more than 32768&nbsp;bytes.&quot; 
Note that phase-encoded (1600-bpi) blocks should be no
longer than 10240 bytes, and GCR (6250-bpi) blocks should be no
longer than 32768 bytes, to reduce the chance of an unrecoverable
error.) Each <em class="emphasis">read(&nbsp;)</EM
> call must ask for at least one whole record
(many drivers get this wrong and silently drop trailing portions
of a record that was longer than the byte count given to <em class="emphasis">read(&nbsp;)</EM
>);
each <em class="emphasis">read(&nbsp;)</EM
> returns the actual number of bytes in the record.</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-22176"></A
>Network connections are generally &quot;byte streams&quot;: the two host
&quot;peers&quot; (above, the machine running <em class="emphasis">tar</EM
>, and the machine with the
tape drive) will exchange data but will drop any &quot;record boundary&quot;
notion at the protocol-interface level. If record boundaries are
to be preserved, this must be done in a layer above the network
protocol itself. (Not all network protocols are stream-oriented,
not even flow-controlled, error-recovering protocols. Internet RDP
and XNS SPP are two examples of reliable record-oriented protocols.
Many of these, however, impose fairly small record sizes.)</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-22182"></A
><em class="emphasis">rsh</EM
> simply opens a stream protocol, and does no work to preserve
&quot;packet boundaries.&quot;</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">dd</EM
> works in mysterious ways:</P
><p class="para"><blockquote class="screen"><pre class="screen">dd if=x of=y</PRE
></BLOCKQUOTE
></P
><p class="para">is the same as:</P
><p class="para"><blockquote class="screen"><pre class="screen">dd if=x of=y ibs=512 obs=512</PRE
></BLOCKQUOTE
></P
><p class="para">which means: open files <em class="emphasis">x</EM
> and <em class="emphasis">y</EM
>, then loop doing <em class="emphasis">read(fd_x)</EM
> 
with a byte count of 512, take whatever you got, copy it into an output
buffer for file <em class="emphasis">y</EM
>, and each time that buffer reaches 512&nbsp;bytes,
do a single <em class="emphasis">write(fd_y)</EM
> with 512&nbsp;bytes.</P
><p class="para">On the other hand:</P
><p class="para"><blockquote class="screen"><pre class="screen">dd if=x of=y bs=512</PRE
></BLOCKQUOTE
></P
><p class="para">means something completely different: open files <em class="emphasis">x</EM
> and <em class="emphasis">y</EM
>, then
loop doing <em class="emphasis">read(fd_x)</EM
> with a byte count of 512, take whatever
you got, and do a single <em class="emphasis">write(fd_y)</EM
> with that count.
All of this means that:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>tar cf - . | rsh otherhost dd of=/dev/</B
></CODE
><code class="replaceable"><i>device</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">will write 512-byte blocks (not what you wanted), while:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>tar cf - . | rsh otherhost dd of=/dev/</B
></CODE
><code class="replaceable"><i>device</I
></CODE
> <code class="userinput"><b>bs=20b</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">will be even worse: it will take whatever it gets from <em class="emphasis">stdin</EM
>-which,
being a TCP connection, will be arbitrarily lumpy depending on the
underlying network parameters and the particular TCP 
implementation&nbsp;- and write essentially random-sized records.
On purely &quot;local&quot; (Ethernet) connections, with typical implementations, 
you will wind up with 1024-byte blocks (a <em class="emphasis">tar</EM
> &quot;block factor&quot; of 2).</P
></LI
></UL
><p class="para"><a class="indexterm" name="AUTOID-22221"></A
>If a blocking factor of 2 is acceptable, and if <em class="emphasis">cat</EM
>
forces 1024-byte blocks (both true in some cases), you can use:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>tar cf - . | rsh otherhost &quot;cat &gt;/dev/</B
></CODE
><code class="replaceable"><i>device</I
></CODE
><code class="userinput"><b>&quot;</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">but this depends on undocumented features in <em class="emphasis">cat</EM
>. In any case, on<a class="indexterm" name="AUTOID-22231"></A
><a class="indexterm" name="AUTOID-22233"></A
><a class="indexterm" name="AUTOID-22235"></A
>
nine-track tapes, since each gap occupies approximately 0.7&nbsp;inches of
otherwise useful tape space, a block size of 1024 has ten times as many
gaps as a block size of 10240, wasting 9x1600x0.7&nbsp;=&nbsp;10&nbsp;kbytes of
tape at 1600&nbsp;bpi, or 32 times as many as a size of 32768, wasting
31x6250x0.7&nbsp;=&nbsp;136&nbsp;kbytes of tape at 6250&nbsp;bpi.</P
><p class="para">I say &quot;approximately&quot; because
actual gap sizes vary. In particular, certain &quot;streaming&quot; drives
(all too often called streaming because they do not&nbsp;- in some cases
the controller is too &quot;smart&quot; to be able to keep up with the required
data rate, even when fed back-to-back DMA requests) have been known
to stretch the gaps to 0.9 inches.</P
><p class="para"><a class="indexterm" name="AUTOID-22239"></A
>In general, because of tape gaps, you should use the largest record size
that permits error recovery. Note, however, that some olid 
[2]
hardware (such
as that found on certain AT&amp;T 3B systems) puts a ridiculous upper limit
(5K) on tape blocks.</P
><blockquote class="footnote"><p class="para">[2] Go ahead, look it up... it is a perfectly good crossword puzzle word. <code class="literal">:-)</CODE
></P
></BLOCKQUOTE
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">CT</SPAN
> <span class="bibliomisc">in <a class="systemitem.newsgroup" href="../WebStripper/protected.html#link======news:comp.unix.questions" webstripperlinkwas="../WebStripper/protected.html#link======news:comp.unix.questions">comp.unix.questions</A
> on Usenet, 3 April 1991</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch20_05.htm" webstripperlinkwas="ch20_05.htm" title="20.5 Using tar to a Remote Tape Drive "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 20.5 Using tar to a Remote Tape Drive " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch20_07.htm" webstripperlinkwas="ch20_07.htm" title="20.7 Creating a Timestamp File for Selective Backups "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 20.7 Creating a Timestamp File for Selective Backups " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">20.5 Using tar to a Remote Tape Drive </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">20.7 Creating a Timestamp File for Selective Backups </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
