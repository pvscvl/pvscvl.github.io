<html><head><title>Glossary</TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:59:10Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="part09.htm" webstripperlinkwas="part09.htm" title="IX. Miscellaneous "><link rel="prev" href="ch52_09.htm" webstripperlinkwas="ch52_09.htm" title="52.9 Software Support from RTR "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch52_09.htm" webstripperlinkwas="ch52_09.htm" title="52.9 Software Support from RTR "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 52.9 Software Support from RTR " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Glossary</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172">&nbsp;</TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><dl class="GLOSSARY"><h1 class="glossary"><a class="title" name="UPT-ART-1010">Glossary</A
></H1
><dt class="glossterm"><a class="glossterm" name="GLOSS-AIX">AIX</A
></DT
><dd class="glossdef"><p class="para">A version of UNIX from the IBM Corporation.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-ARGUMENT">argument</A
></DT
><dd class="glossdef"><p class="para">Zero or more characters passed to a program as a single unit.
The shell breaks a command line into arguments by cutting it at
unquoted white space. <em class="emphasis">See also</EM
> article
<a class="xref" href="ch08_05.htm" webstripperlinkwas="ch08_05.htm" title="Command-Line Evaluation ">8.5</A
>,
<a class="xref" href="#GLOSS-WORD" title="">word</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-ARRAY">array</A
></DT
><dd class="glossdef"><p class="para">An ordered collection of data items.
An array has a single overall name; each item in it is called an <em class="emphasis">element</EM
>
or <em class="emphasis">member</EM
>.
For instance, the C shell stores its command search path in an
<span class="link">array (<a class="linkend" href="ch47_05.htm" webstripperlinkwas="ch47_05.htm" title="Using C Shell Arrays ">47.5</A
>)</SPAN
>
named
<span class="link"><em class="emphasis">path</EM
> (<a class="linkend" href="ch06_05.htm" webstripperlinkwas="ch06_05.htm" title="PATH and path ">6.5</A
>)</SPAN
>.
The first array member is named <code class="literal">$path[1]</CODE
>, the second is
<code class="literal">$path[2]</CODE
>, and so on.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-ASCII-FILE">ASCII file</A
></DT
><dd class="glossdef"><p class="para">Formally, a file containing only
<span class="link">ASCII (<a class="linkend" href="ch51_03.htm" webstripperlinkwas="ch51_03.htm" title="ASCII Characters: Listing and Getting Values ">51.3</A
>)</SPAN
>
characters.
More commonly (in the USA, at least) a file containing text that's
printable, viewable, and has no &quot;binary&quot; (non-ASCII) characters.
ASCII characters use only seven of the bits in a (8-bit) byte.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-BACKQUOTE">backquote</A
></DT
><dd class="glossdef"><p class="para">The character <code class="literal">`</CODE
>.
Not the same as a single quote (<code class="literal">'</CODE
>).
Does
<span class="link">command substitution (<a class="linkend" href="ch09_16.htm" webstripperlinkwas="ch09_16.htm" title="Command Substitution ">9.16</A
>)</SPAN
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-BACKSLASH">backslash</A
></DT
><dd class="glossdef"><p class="para">The character <code class="literal">\</CODE
>.
In UNIX, it changes the interpretation of the next character in some way.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch08_20.htm" webstripperlinkwas="ch08_20.htm" title="How Many Backslashes?">8.20</A
>,
<a class="xref" href="#GLOSS-SLASH" title="">slash</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-BATCH-QUEUE">batch queue</A
></DT
><dd class="glossdef"><p class="para">A mechanism for sequencing large jobs. A batch queue receives job
requests from users. It then executes the jobs one at a time. Batch
queues go back to the earliest days of data processing. They are an
extremely effective, if uncomfortable, way to manage system load.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch40_06.htm" webstripperlinkwas="ch40_06.htm" title="System V.4 Batch Queues ">40.6</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-BIN-DIRECTORY">bin directory</A
></DT
><dd class="glossdef"><p class="para">A directory for storing executable programs.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch04_02.htm" webstripperlinkwas="ch04_02.htm" title="A bin Directory for Your Programs and Scripts ">4.2</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-BINARIES-BINARY-FILE">binaries, binary file</A
></DT
><dd class="glossdef"><p class="para">A file with non-text characters.
Often, a directly executable file that can be run as a program.
Binary characters use all the bits in a (8-bit) byte.
<em class="emphasis">See also</EM
>
<a class="xref" href="#GLOSS-ASCII-FILE" title="">ASCII file</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-BLOCK-SIZE">block size</A
></DT
><dd class="glossdef"><p class="para">The largest amount of data that a UNIX filesystem will always
allocate contiguously. For example, if a filesystem's block size is 8
KB, files of size up to 8 KB are always physically contiguous (i.e.,
in one place), rather than spread across the disk. Files that are
larger than the filesystem's block size may be fragmented: 8 KB pieces of
the file are located in different places on the disk. Fragmentation
limits filesystem performance. Note that the filesystem block size is
different from a disk's physical block size, which is almost always 512&nbsp;bytes.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-BRAIN-DAMAGED">brain-damaged</A
></DT
><dd class="glossdef"><p class="para">A program with poor design or other errors can be called <em class="emphasis">brain-damaged</EM
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-BSD-UNIX">BSD UNIX</A
></DT
><dd class="glossdef"><p class="para">The versions of UNIX developed at the University of California,
Berkeley. BSD UNIX has been dominant in academia and has
historically had some more advanced features than System V: BSD
introduced virtual memory, networking, and the &quot;fast filesystem&quot; to
the UNIX community. It is also the system on which SunOS was based.
System V Release 4 and some vendors' earlier System V versions
also have Berkeley features.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-BUFFER">buffer</A
></DT
><dd class="glossdef"><p class="para">A temporary storage place such as a file or an area of the computer's
memory.
Most text editors store the file you're editing in a buffer; when you're
done editing, the edited buffer is copied over (i.e., replaces) the original file.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-COMMAND-LINE">command line</A
></DT
><dd class="glossdef"><p class="para">The text you type at a shell prompt.
A UNIX shell reads the command line, parses it to find the command name
(which is the first word on the command line), and executes the command.
A command line may have more than one command joined by operators like
<span class="link">semicolons (<code class="literal">;</CODE
>) (<a class="linkend" href="ch08_05.htm" webstripperlinkwas="ch08_05.htm" title="Command-Line Evaluation ">8.5</A
>)</SPAN
>,
<span class="link">pipes (<code class="literal">|</CODE
>) (<a class="linkend" href="ch01_04.htm" webstripperlinkwas="ch01_04.htm" title="Using Pipes to Create a New Tool ">1.4</A
>)</SPAN
>,
or
<span class="link">double ampersands (<code class="literal">&amp;&amp;</CODE
>) (<a class="linkend" href="ch44_09.htm" webstripperlinkwas="ch44_09.htm" title="Testing Your Success ">44.9</A
>)</SPAN
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-CONTROL-CHARACTER">control character</A
></DT
><dd class="glossdef"><p class="para">A character you make by holding down the keyboard 
CTRL 
(Control) key
while pressing a letter or another character key.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-CORE-FILE-CORE-DUMP">core file, core dump</A
></DT
><dd class="glossdef"><p class="para">When a program terminates abnormally, it may make a file named <em class="emphasis">core</EM
>.
The <em class="emphasis">core</EM
> file can be used for debugging.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch24_05.htm" webstripperlinkwas="ch24_05.htm" title="Limiting File Sizes ">24.5</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-.CSHRC-FILE">.cshrc file</A
></DT
><dd class="glossdef"><p class="para"><em class="emphasis">See</EM
>
<a class="xref" href="#GLOSS-DOT-FILES" title="">dot (.) files (.cshrc, .login, .profile</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-CTRL-X">CTRL-x</A
></DT
><dd class="glossdef"><p class="para">The character called &quot;control <em class="emphasis">x</EM
>,&quot; where <em class="emphasis">x</EM
> is a key on the keyboard.
<em class="emphasis">See also</EM
>
<a class="xref" href="#GLOSS-CONTROL-CHARACTER" title="">control character</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-DAEMON">daemon</A
></DT
><dd class="glossdef"><p class="para">A program that is invisible to users but provides important system
services. Daemons manage everything from paging to networking to
notification of incoming mail. BSD UNIX has many different daemons:
without counting, I would guess that there are roughly two&nbsp;dozen.
Daemons normally spend most of their time 
&quot;sleeping&quot; or waiting for something to do, so that they don't
account for a lot of CPU load.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch01_14.htm" webstripperlinkwas="ch01_14.htm" title="The Kernel and Daemons ">1.14</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-DATA-SWITCH">data switch</A
></DT
><dd class="glossdef"><p class="para">This hardware is something like a telephone switchboard.
A data switch connects many terminals to two or more computers.
The user, on a terminal or through a modem, tells the data switch which
computer she wants a connection to.
Also called a <em class="emphasis">terminal multiplexor</EM
>.
Computers without data switches usually have one terminal connected to
each
<span class="link"><em class="emphasis">tty</EM
> (<a class="linkend" href="ch03_08.htm" webstripperlinkwas="ch03_08.htm" title="What tty Am I On? ">3.8</A
>)</SPAN
>
port; characteristics like the
<span class="link">terminal type (<a class="linkend" href="ch05_10.htm" webstripperlinkwas="ch05_10.htm" title="Finding What Terminal Names You Can Use ">5.10</A
>)</SPAN
>
can be set in system files.
Conversely,
computers with data switches can't know in advance what sort of terminal
is connected to each <em class="emphasis">tty</EM
> port.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-DEFAULT">default</A
></DT
><dd class="glossdef"><p class="para">In a program that gives you more than one choice, the default choice is
the one you get by not choosing.
The default is usually the most common choice.
As an example, the default file for many UNIX programs is the standard
input.
If you don't give a filename on the command line, a program will
read its standard input.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-DOT-FILES">dot (.) files (.cshrc, .login, .profile</A
></DT
><dd class="glossdef"><p class="para">Files that are read when you start a program (including when you log in and
start a shell).
These set up your environment and run any other UNIX commands (for
instance,
<em class="emphasis">tset</EM
>).
If your account uses the C shell, it will read <em class="emphasis">.cshrc</EM
> and <em class="emphasis">.login</EM
>.
Accounts that use the Bourne shell and shells like it read <em class="emphasis">.profile</EM
>.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch02_02.htm" webstripperlinkwas="ch02_02.htm" title="Shell Setup Files-Which, Where, and Why ">2.2</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-DOUBLE-QUOTE">double quote</A
></DT
><dd class="glossdef"><p class="para">The <code class="literal">&quot;</CODE
> character. This isn't the same as two single quotes (<code class="literal">''</CODE
>)
together.
The <code class="literal">&quot;</CODE
> is used around a part of a UNIX command line where
the shell should do variable and command substitution (and, on the C
shell, history substitution), but no other interpretation.
<em class="emphasis">See also</EM
> articles
<a class="xref" href="ch08_14.htm" webstripperlinkwas="ch08_14.htm" title="Bourne Shell Quoting ">8.14</A
>
and
<a class="xref" href="ch08_15.htm" webstripperlinkwas="ch08_15.htm" title="Differences Between Bourne and C Shell Quoting ">8.15</A
>,
<a class="xref" href="#GLOSS-SINGLE-QUOTE" title="">single quote</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-ESCAPE">escape</A
></DT
><dd class="glossdef"><p class="para">When you <em class="emphasis">escape</EM
> a character or a string of characters, you change
the way it is interpreted.
Escaping something can take away its special meaning, as in
<span class="link">shell quoting (<a class="linkend" href="ch08_14.htm" webstripperlinkwas="ch08_14.htm" title="Bourne Shell Quoting ">8.14</A
>)</SPAN
>-
or can add special meaning, as in
<span class="link">terminal escape sequences (<a class="linkend" href="ch05_08.htm" webstripperlinkwas="ch05_08.htm" title="Terminal Escape Sequences ">5.8</A
>)</SPAN
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-FLAG">flag</A
></DT
><dd class="glossdef"><p class="para">In programming, a <em class="emphasis">flag variable</EM
> is set to signal that some
condition has been met or that something should be done.
For example, a flag can be set (&quot;raised&quot;) if the user has entered something
wrong; the program can test for this flag and not continue until
the problem has been fixed.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-FLAME">flame</A
></DT
><dd class="glossdef"><p class="para">A heated or irrational statement.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-FRAGMENT">fragment</A
></DT
><dd class="glossdef"><p class="para">In the BSD &quot;fast filesystem,&quot; a fragment is a portion of a disk
block&nbsp;- usually one-eighth of a block, but possibly one-quarter or 
one-half of a block. If the last portion of a file doesn't occupy a 
full disk block, the filesystem will allocate one or more fragments 
rather than an entire block. Don't confuse &quot;fragments&quot; with 
&quot;fragmentation.&quot; Fragments allow the BSD filesystem to use 
larger block sizes without becoming inefficient.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-FREE-SOFTWARE-FOUNDATION">Free Software Foundation, FSF</A
></DT
><dd class="glossdef"><p class="para">A group that develops the freely available GNU software.
Their address is: 675 Massachusetts Avenue, Cambridge, MA 02139 USA.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-FULL-DUPLEX">full-duplex</A
></DT
><dd class="glossdef"><p class="para">Communications between a terminal and a computer where data flows in both
directions at the same time.
<em class="emphasis">Half-duplex</EM
> communications, where data flows in only one direction
at a time, are unusual these days.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch41_02.htm" webstripperlinkwas="ch41_02.htm" title="stty and All That Stuff ">41.2</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-GNU">GNU</A
></DT
><dd class="glossdef"><p class="para">Gnu's Not Unix, a system of software planned to
eventually be a freely available substitute for UNIX.
<em class="emphasis">See also</EM
>
<a class="xref" href="#GLOSS-FREE-SOFTWARE-FOUNDATION" title="">Free Software Foundation, FSF</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-GOTCHA">gotcha</A
></DT
><dd class="glossdef"><p class="para">A &quot;catch,&quot; difficulty, or surprise in the way that a program works.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-HARDCODED">hardcoded</A
></DT
><dd class="glossdef"><p class="para">In general, a value that can't be changed.
For example, in a shell script with the command <code class="literal">grep jane</CODE
>, the
value <code class="literal">jane</CODE
> is hardcoded; <em class="emphasis">grep</EM
> will always search for
<em class="emphasis">jane</EM
>.
But in the command <code class="literal">grep&nbsp;$USER</CODE
>, the text that <em class="emphasis">grep</EM
> searches for
is not hardcoded; it's a variable value.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-HASH-TABLE">hash table</A
></DT
><dd class="glossdef"><p class="para"><em class="emphasis">Hashing</EM
> data into the format of a hash table lets
specially designed programs search for data quickly.
A hash table assigns a special search code to each piece of data.
For example, the C shell uses a hash table to locate commands
more quickly; the
<span class="link"><em class="emphasis">rehash</EM
> (<a class="linkend" href="ch04_02.htm" webstripperlinkwas="ch04_02.htm" title="A bin Directory for Your Programs and Scripts ">4.2</A
>)</SPAN
>
command rebuilds the hash table after you add a new command.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-IO">I/O</A
></DT
><dd class="glossdef"><p class="para">Input/output of text from software or hardware.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-INODE">inode</A
></DT
><dd class="glossdef"><p class="para">A data structure that describes a file. Within any filesystem, the
number of inodes, and hence the maximum number of files, is set when
the filesystem is created.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch01_22.htm" webstripperlinkwas="ch01_22.htm" title="How UNIX Keeps Track of Files: Inodes ">1.22</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-I-NUMBER">i-number</A
></DT
><dd class="glossdef"><p class="para">A UNIX file has a name (for people to identify it with) and an i-number
(for UNIX to identify it with).
Each file's i-number is stored in a directory, along with the filename, to
let UNIX find the file that you name.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch01_22.htm" webstripperlinkwas="ch01_22.htm" title="How UNIX Keeps Track of Files: Inodes ">1.22</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-JOB">job</A
></DT
><dd class="glossdef"><p class="para">One UNIX command. It is easy to be sloppy and use the terms job,
process, and program interchangeably. I do it and I'm sure you do,
too. Within UNIX documentation, though, the word &quot;job&quot; is usually
used to mean one, and only one, command line. Note that one command
line can be complex. For example:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="userinput"><b>pic a.ms | tbl | eqn | troff -ms</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">is one command, and hence one job, that is formed from four processes.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-JOB-NUMBER">job number</A
></DT
><dd class="glossdef"><p class="para">Shells with job control assign a job number to every command that is stopped or
that is running in the
<span class="link">background (<a class="linkend" href="ch01_26.htm" webstripperlinkwas="ch01_26.htm" title="What a Multiuser System Can Do for You ">1.26</A
>)</SPAN
>.
You can use job numbers to refer
to your own commands or groups of commands. Job numbers are
generally easier to use than process IDs; they are much smaller
(typically between 1 and 10), and therefore easier to remember.
The C shell <em class="emphasis">jobs</EM
> command displays job numbers.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch12_01.htm" webstripperlinkwas="ch12_01.htm#UPT-ART-0439" title="Job Control: Work Faster, Stop Runaway Jobs ">12.1</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-KERNEL">kernel</A
></DT
><dd class="glossdef"><p class="para">The part of the UNIX operating system that provides memory
management, I/O services, and all other low-level services. The
kernel is the &quot;core&quot; or &quot;heart&quot; of the operating system.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch01_14.htm" webstripperlinkwas="ch01_14.htm" title="The Kernel and Daemons ">1.14</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-KLUDGE">kludge</A
></DT
><dd class="glossdef"><p class="para">A program or a solution to a problem that isn't written carefully, doesn't
work as well as it should, doesn't use good programming style, and so on.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-LIBRARY-FUNCTION">library function</A
></DT
><dd class="glossdef"><p class="para">Packages of system calls (and of other library functions) for programmers
in C and other languages.
In general (though not always), a library function is a &quot;higher-level
operation&quot; than a system call.
<em class="emphasis">See also</EM
>
<a class="xref" href="#GLOSS-SYSTEM-CALL" title="">system call</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-LOAD-AVERAGE">load average</A
></DT
><dd class="glossdef"><p class="para">A measure of how busy the CPU is. The load average is useful, though
imprecise. It is defined as the average number of jobs in the run
queue plus the average number of jobs that are blocked while waiting for
disk I/O.
The
<span class="link"><em class="emphasis">uptime</EM
> (<a class="linkend" href="ch39_07.htm" webstripperlinkwas="ch39_07.htm" title="Checking System Load: uptime ">39.7</A
>)</SPAN
>
command shows the load average.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-.LOGIN-FILE">.login file</A
></DT
><dd class="glossdef"><p class="para"><em class="emphasis">See</EM
> 
<a class="xref" href="#GLOSS-DOT-FILES" title="">dot (.) files (.cshrc, .login, .profile</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-MODE">mode</A
></DT
><dd class="glossdef"><p class="para">In UNIX, an
octal number
that describes what access a file's owner, group,
and others have to the file.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch01_23.htm" webstripperlinkwas="ch01_23.htm" title="File Access Permissions ">1.23</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-MODULO">modulo</A
></DT
><dd class="glossdef"><p class="para">Think back to your fourth grade arithmetic.
When you divide two
numbers, you have a <em class="emphasis">dividend</EM
> (the number on top), a
<em class="emphasis">divisor</EM
> (the number on the bottom), a <em class="emphasis">quotient</EM
> (the
answer), and a <em class="emphasis">remainder</EM
> (what's left over).
In computer science, this kind of division is very important.
However, we're usually more interested in the remainder than in the quotient.
When we're interested in the remainder, we call the operation a
<em class="emphasis">modulus</EM
> (or <em class="emphasis">modulo</EM
>, or <em class="emphasis">mod</EM
>).

For instance, one of the examples on your fourth grade arithmetic text
might have been <code class="literal">13&nbsp;&#247;&nbsp;3&nbsp;=&nbsp;4</CODE
> (with a remainder of 1).
As computer users, we're more interested in <code class="literal">13&nbsp;mod&nbsp;3&nbsp;=&nbsp;1</CODE
>.
It's really the same operation, though.

<em class="emphasis">Modulo</EM
> is also used in expressions like &quot;modulo wildcards,&quot;
which means &quot;everything but wildcards.&quot;</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-NFS">NFS</A
></DT
><dd class="glossdef"><p class="para"><em class="emphasis">N</EM
>etwork <em class="emphasis">F</EM
>ile <em class="emphasis">S</EM
>ystem. NFS allows UNIX systems and many non-UNIX
systems to share files via a TCP/IP network. Subject to certain
security restrictions, systems are allowed complete access to another
system's files.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch01_33.htm" webstripperlinkwas="ch01_33.htm" title="UNIX Networking and Communications ">1.33</A
>,
<a class="xref" href="#GLOSS-TCP-IP" title="">TCP/IP</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-NEWLINE">newline</A
></DT
><dd class="glossdef"><p class="para">The character that marks the end of a line of text in most UNIX files.
(This is a convention, not a requirement.)</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-NULL">null</A
></DT
><dd class="glossdef"><p class="para">Empty, zero-length, with no characters&nbsp;- for example, a <em class="emphasis">null string</EM
>.
This is <em class="emphasis">not</EM
> the same as an
<span class="link">ASCII NUL (<a class="linkend" href="ch51_03.htm" webstripperlinkwas="ch51_03.htm" title="ASCII Characters: Listing and Getting Values ">51.3</A
>)</SPAN
>
character.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-OCTAL-NUMBER">octal number</A
></DT
><dd class="glossdef"><p class="para">The base&nbsp;8 numbering system.
Octal numbers are made with the digits 0 through 7.
For example, the decimal (base&nbsp;10) number <code class="literal">12</CODE
> is the same as the
octal number <code class="literal">14</CODE
>.
<span class="link">ASCII character codes (<a class="linkend" href="ch51_03.htm" webstripperlinkwas="ch51_03.htm" title="ASCII Characters: Listing and Getting Values ">51.3</A
>)</SPAN
>
are often shown as octal numbers.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-OPTION-SWITCH">option switch</A
></DT
><dd class="glossdef"><p class="para">Typed on a command line to modify the way that a UNIX command works.
Usually starts with a dash (<code class="literal">-</CODE
>).
The terms <em class="emphasis">option</EM
> and <em class="emphasis">switch</EM
> are more or less interchangeable.
An option may have several settings, but a switch usually has two
settings:
on or off, enabled or disabled, yes or no, etc.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-PANIC">panic</A
></DT
><dd class="glossdef"><p class="para">UNIX jargon for a &quot;crash.&quot; A panic is really a special kind of a
crash. Panics occur when UNIX detects some
irreconcilable inconsistency in one of its internal data structures. The
kernel throws up its hands and shuts the system down before any damage
can be done. As it is going down, it prints a &quot;panic&quot; message on
the console.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-PARSE">parse</A
></DT
><dd class="glossdef"><p class="para">To split into pieces and interpret.
Article
<a class="xref" href="ch08_05.htm" webstripperlinkwas="ch08_05.htm" title="Command-Line Evaluation ">8.5</A
>
explains how the shell parses a command line.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-PARTITION">partition</A
></DT
><dd class="glossdef"><p class="para">A portion of a disk drive. UNIX disk drives typically have eight
partitions, although not all are in use.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-PATH-SEARCH">path, search</A
></DT
><dd class="glossdef"><p class="para"><em class="emphasis">See</EM
> 
<a class="xref" href="#GLOSS-SEARCH-PATH" title="">search path</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-PIPE">pipe</A
></DT
><dd class="glossdef"><p class="para">A UNIX mechanism for sending the output of one program directly to
the input of another program, without using an intermediate file. All
UNIX systems support pipes.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch01_04.htm" webstripperlinkwas="ch01_04.htm" title="Using Pipes to Create a New Tool ">1.4</A
>.
System V and SunOS also provide &quot;named
pipes,&quot; which are FIFO (first-in/first-out) buffers that have names
and can be accessed via the filesystem.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-PORTABLE">portable</A
></DT
><dd class="glossdef"><p class="para">A program that's <em class="emphasis">portable</EM
> can be used on more than one version of
UNIX or with more than one version of a command.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-POSIX">POSIX</A
></DT
><dd class="glossdef"><p class="para">An &quot;open&quot; computer operating system that is
similar to UNIX.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-PRIORITY">priority</A
></DT
><dd class="glossdef"><p class="para">A number that determines how often the kernel will run a process.
A higher-priority process will run more often and, therefore, will
finish faster, than a low-priority process.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-PROCESS">process</A
></DT
><dd class="glossdef"><p class="para">A lot of the time, a process is nothing more than
another name for a program that is running on the system. But there
is a more formal definition: a process is a single 
execution thread, or a single stream of computer instructions.
One job may be built from many different processes. For example, a
command line with
<span class="link">pipes (<a class="linkend" href="ch01_04.htm" webstripperlinkwas="ch01_04.htm" title="Using Pipes to Create a New Tool ">1.4</A
>)</SPAN
>
starts two or more processes.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch38_03.htm" webstripperlinkwas="ch38_03.htm" title="Managing Processes: Overall Concepts ">38.3</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-PROCESS-ID-PID">process ID (PID)</A
></DT
><dd class="glossdef"><p class="para">UNIX assigns every process an ID number (called a PID) when it starts.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch38_03.htm" webstripperlinkwas="ch38_03.htm" title="Managing Processes: Overall Concepts ">38.3</A
>.
This number allows you to refer to a process at a later time. If you
need to
<span class="link">kill (<a class="linkend" href="ch38_10.htm" webstripperlinkwas="ch38_10.htm" title="Destroying Processes with kill ">38.10</A
>)</SPAN
>
a runaway program, you refer to it by its process ID.
The
<span class="link"><em class="emphasis">ps</EM
> (<a class="linkend" href="ch38_05.htm" webstripperlinkwas="ch38_05.htm" title="The ps Command ">38.5</A
>)</SPAN
>
command displays process IDs.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-.PROFILE-FILE">.profile file</A
></DT
><dd class="glossdef"><p class="para"><em class="emphasis">See</EM
> 
<a class="xref" href="#GLOSS-DOT-FILES" title="">dot (.) files (.cshrc, .login, .profile</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-PROMPT">prompt</A
></DT
><dd class="glossdef"><p class="para">How a program asks you for information: by printing a short string
like <code class="literal">Delete afile?</CODE
> to the terminal and waiting for a response.
<em class="emphasis">See also</EM
>
<a class="xref" href="#GLOSS-SHELL-PROMPT" title="">shell prompt</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-PSEUDO-CODE">pseudo-code</A
></DT
><dd class="glossdef"><p class="para">A way to write out program text, structured like a program, without using 
the actual programming language.
Pseudo-code is usually used to explain a program.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-QUOTE">quote</A
></DT
><dd class="glossdef"><p class="para"><em class="emphasis">See</EM
>
<a class="xref" href="#GLOSS-BACKQUOTE" title="">backquote</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-READ-ONLY-FILESYSTEM">read-only filesystem</A
></DT
><dd class="glossdef"><p class="para">Filesystems are usually set up to allow write access to users who have
the proper
<span class="link">permissions (<a class="linkend" href="ch01_23.htm" webstripperlinkwas="ch01_23.htm" title="File Access Permissions ">1.23</A
>)</SPAN
>.
The system administrator can mount a filesystem <em class="emphasis">read-only</EM
>; then no
user will be able to make changes to files there.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-RECURSIVE">recursive</A
></DT
><dd class="glossdef"><p class="para">A program or routine that re-executes itself or repeats an action over
and over.
For example, the
<span class="link"><em class="emphasis">find</EM
> (<a class="linkend" href="ch17_01.htm" webstripperlinkwas="ch17_01.htm#UPT-ART-7410" title="The find Command Is Great; The Problem Is Finding How to Use It">17.1</A
>)</SPAN
>
program moves through a directory tree recursively, doing something in
each directory.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-REVERSE-VIDEO">reverse video</A
></DT
><dd class="glossdef"><p class="para">On a video display, reversed foreground and background colors or tones.
Reverse video is used to highlight an area or to identify text to be used or modified.

For instance, if text is usually shown with black letters on a white
background, reverse video would have white letters on a black background.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch05_08.htm" webstripperlinkwas="ch05_08.htm" title="Terminal Escape Sequences ">5.8</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-SCSI">SCSI</A
></DT
><dd class="glossdef"><p class="para">Small Computer Systems Interface, a standard interface for disk and
tape devices now used on many UNIX (and non-UNIX) systems.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-SEARCH-PATH">search path</A
></DT
><dd class="glossdef"><p class="para">A list of directories that the shell searches to find the program file you
want to execute.
<em class="emphasis">See also</EM
> articles
<a class="xref" href="ch06_04.htm" webstripperlinkwas="ch06_04.htm" title="The PATH Environment Variable ">6.4</A
>
and 
<a class="xref" href="ch08_07.htm" webstripperlinkwas="ch08_07.htm" title="Setting Your Search Path ">8.7</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-SHELL">shell</A
></DT
><dd class="glossdef"><p class="para">A program that reads and interprets command lines and also runs those programs.
<em class="emphasis">See also</EM
> articles
<a class="xref" href="ch08_05.htm" webstripperlinkwas="ch08_05.htm" title="Command-Line Evaluation ">8.5</A
>
and
<a class="xref" href="ch44_03.htm" webstripperlinkwas="ch44_03.htm" title="What's a Shell, Anyway? ">44.3</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-SHELL-PROMPT">shell prompt</A
></DT
><dd class="glossdef"><p class="para">A signal from a shell (when it's used interactively) that the shell is
ready to read a command line.
By default, the percent sign (<code class="literal">%</CODE
>) is the C shell prompt and 
the dollar sign (<code class="literal">$</CODE
>) is the Bourne shell prompt.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-SLASH">slash</A
></DT
><dd class="glossdef"><p class="para">The character <code class="literal">/</CODE
>.
It separates elements in a pathname.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch01_21.htm" webstripperlinkwas="ch01_21.htm" title="Making Pathnames ">1.21</A
>,
<a class="xref" href="#GLOSS-BACKSLASH" title="">backslash</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-SINGLE-QUOTE">single quote</A
></DT
><dd class="glossdef"><p class="para">The <code class="literal">'</CODE
> character.
This isn't the same as a backquote (<code class="literal">`</CODE
>).
The single quote is used around a part of a UNIX command line where the shell 
should do no interpretation (except history substitution in the C shell).
<em class="emphasis">See also</EM
> articles
<a class="xref" href="ch08_14.htm" webstripperlinkwas="ch08_14.htm" title="Bourne Shell Quoting ">8.14</A
>
and
<a class="xref" href="ch08_15.htm" webstripperlinkwas="ch08_15.htm" title="Differences Between Bourne and C Shell Quoting ">8.15</A
>,
<a class="xref" href="#GLOSS-DOUBLE-QUOTE" title="">double quote</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-SPECIAL-FILE">special file</A
></DT
><dd class="glossdef"><p class="para">An entity in the filesystem that accesses I/O devices. There is a
special file for every terminal, every network controller, every
partition of every disk drive, and every possible way of accessing
every tape drive.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch01_29.htm" webstripperlinkwas="ch01_29.htm" title="When Is a File Not a File? ">1.29</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-STRING">string</A
></DT
><dd class="glossdef"><p class="para">A sequence of characters.
<em class="emphasis">See also</EM
>
<a class="xref" href="#GLOSS-WORD" title="">word</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-SUBDIRECTORY">subdirectory</A
></DT
><dd class="glossdef"><p class="para">A directory within a directory.
<em class="emphasis">See also</EM
> articles
<a class="xref" href="ch01_21.htm" webstripperlinkwas="ch01_21.htm" title="Making Pathnames ">1.21</A
>
and
<a class="xref" href="ch04_07.htm" webstripperlinkwas="ch04_07.htm" title="Make More Directories! ">4.7</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-SWAPPING">swapping</A
></DT
><dd class="glossdef"><p class="para">A technique that the UNIX kernel uses to clean up physical memory.
The kernel moves entire processes from memory to disk and then
reassigns the memory to some other function. Processes that have been
idle for more than a certain period may be removed from memory to save space.
Swapping is also used to satisfy extreme memory shortages. When the
system is extremely short of memory, active processes may be &quot;swapped out.&quot;</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-SWITCH">switch</A
></DT
><dd class="glossdef"><p class="para"><em class="emphasis">See</EM
>
<a class="xref" href="#GLOSS-OPTION-SWITCH" title="">option switch</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-SYSTEM-CALL">system call</A
></DT
><dd class="glossdef"><p class="para">The lowest-level access to the UNIX operating system.
Everything else in UNIX is built on system calls.
<em class="emphasis">See also</EM
>
<a class="xref" href="#GLOSS-LIBRARY-FUNCTION" title="">library function</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-SYSTEM-V-UNIX">System V UNIX</A
></DT
><dd class="glossdef"><p class="para">A version of UNIX from AT&amp;T.
The most recent Release of System&nbsp;V is Release&nbsp;4, known as V.4 or SVR4.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-TCP-IP">TCP/IP</A
></DT
><dd class="glossdef"><p class="para">A network protocol that is commonly used for communications via an Ethernet.
TCP/IP is also called the &quot;Internet protocol.&quot; It is also common to
use TCP/IP over leased lines for long-distance communications.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-TERMCAP">termcap</A
></DT
><dd class="glossdef"><p class="para">Stands for <em class="emphasis">term</EM
>inal <em class="emphasis">cap</EM
>abilities, an early (and still common)
way to describe terminals to UNIX.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch41_11.htm" webstripperlinkwas="ch41_11.htm" title="How termcap and terminfo Describe Terminals ">41.11</A
>,
<a class="xref" href="#GLOSS-TERMINFO" title="">terminfo</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-TERMINAL-EMULATOR">terminal emulator</A
></DT
><dd class="glossdef"><p class="para">A program that makes a computer display emulate (act like) a terminal.
For example, many terminal emulator programs emulate the Digital
Equipment Corporation VT100 terminal.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-TERMINFO">terminfo</A
></DT
><dd class="glossdef"><p class="para">A newer way to describe terminal capabilities to UNIX.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch41_11.htm" webstripperlinkwas="ch41_11.htm" title="How termcap and terminfo Describe Terminals ">41.11</A
>,
<a class="xref" href="#GLOSS-TERMCAP" title="">termcap</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-THE-NET">the Net</A
></DT
><dd class="glossdef"><p class="para">A term for two particular networks:
<span class="link">Usenet and Internet (<a class="linkend" href="ch01_33.htm" webstripperlinkwas="ch01_33.htm" title="UNIX Networking and Communications ">1.33</A
>)</SPAN
>.
For instance, &quot;I read it on the Net&quot; or &quot;You can get that file on the Net.&quot;</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-TIMESTAMP">timestamp</A
></DT
><dd class="glossdef"><p class="para">The UNIX filesystem stores the times that each file was last
modified, accessed, or had a change to its inode.
These times&nbsp;- especially the modification time&nbsp;- are often called
<em class="emphasis">timestamps</EM
>.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch21_13.htm" webstripperlinkwas="ch21_13.htm" title="Read an Inode with stat ">21.13</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-TRUNCATE">truncate</A
></DT
><dd class="glossdef"><p class="para">To cut, to shorten&nbsp;- for example, &quot;truncate a file after line&nbsp;10&quot; means
to remove all lines after line&nbsp;10.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-UUENCODE-UUDECODE">uuencode, uudecode</A
></DT
><dd class="glossdef"><p class="para">Utilities that encode files with binary (8-bit) characters into an ASCII
(7-bit) format&nbsp;- and decode them back into the original binary format.
This is used for transferring data across communications links that
can't transfer binary (8-bit) data.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch19_05.htm" webstripperlinkwas="ch19_05.htm" title="Using tar to Create and Unpack Archives ">19.5</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-VAX-VMS">VAX/VMS</A
></DT
><dd class="glossdef"><p class="para">A popular computer operating system from the Digital Equipment Corporation.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-WEDGED">wedged</A
></DT
><dd class="glossdef"><p class="para">A terminal or program is <em class="emphasis">wedged</EM
> when it's &quot;frozen&quot; or &quot;stuck.&quot;
The normal activity stops and often can't be restarted without
resetting the terminal or killing the program.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-WHITE-SPACE">white space</A
></DT
><dd class="glossdef"><p class="para">A series of one or more space or TAB characters.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-WORD">word</A
></DT
><dd class="glossdef"><p class="para">Similar to a word in a spoken language like English, a word is a unit
made up of one or more characters.
But unlike English,
words in UNIX can contain white space; they can also have no
characters (a <em class="emphasis">zero-length</EM
> word).
<em class="emphasis">See also</EM
>
<a class="xref" href="#GLOSS-ARGUMENT" title="">argument</A
>.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-XENIX">XENIX</A
></DT
><dd class="glossdef"><p class="para">One of the first versions of UNIX to run on IBM PCs, and one of the
few that will run on 80286 systems. XENIX descends from Version&nbsp;7
UNIX, a version developed by AT&amp;T in the late 1970s. It has many
resemblances to BSD UNIX. Over time, XENIX has been rewritten as a
variant of System&nbsp;V.2.</P
></DD
><dt class="glossterm"><a class="glossterm" name="GLOSS-ZOMBIES">zombies</A
></DT
><dd class="glossdef"><p class="para">Dead processes that have not yet been deleted from the process table.
Zombies normally disappear almost immediately. However, at times it
is impossible to delete a zombie from the process table, so it remains
there (and in your <em class="emphasis">ps</EM
> output) until you reboot. Aside from
their slot in the process table, zombies don't require any of the
system's resources.
<em class="emphasis">See also</EM
> article
<a class="xref" href="ch38_16.htm" webstripperlinkwas="ch38_16.htm" title="Why You Can't Kill a Zombie ">38.16</A
>.</P
></DD
><div class="docinfo"><p class="DOCINFO">- <span class="authorinitials">JP</SPAN
>, <span class="authorinitials">ML</SPAN
></P
></DIV
></DL
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch52_09.htm" webstripperlinkwas="ch52_09.htm" title="52.9 Software Support from RTR "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 52.9 Software Support from RTR " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">&nbsp;</TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">52.9 Software Support from RTR </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">&nbsp;</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
