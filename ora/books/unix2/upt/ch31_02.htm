<html><head><title>[Chapter 31] 31.2 Save Time and Typing with the vi map Commands </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:46:09Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch31_01.htm" webstripperlinkwas="ch31_01.htm" title="31. Creating Custom Commands in vi"><link rel="prev" href="ch31_01.htm" webstripperlinkwas="ch31_01.htm" title="31.1 Why Type More Than You Have To? "><link rel="next" href="ch31_03.htm" webstripperlinkwas="ch31_03.htm" title="31.3 What You Lose When You Use map! "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch31_01.htm" webstripperlinkwas="ch31_01.htm" title="31.1 Why Type More Than You Have To? "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 31.1 Why Type More Than You Have To? " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 31<br>Creating Custom Commands in vi</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch31_03.htm" webstripperlinkwas="ch31_03.htm" title="31.3 What You Lose When You Use map! "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 31.3 What You Lose When You Use map! " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-2770">31.2 Save Time and Typing with the vi map Commands </A
></H2
><p class="para"><a class="indexterm" name="UPT-ART-2770-IX-VI-EDITOR-MAP-COMMANDS"></A
><a class="indexterm" name="UPT-ART-2770-IX-KEYBOARD-SHORTCUTS-VI-MAP-COMMANDS"></A
>While you're editing, you may find that you are using a command
sequence frequently, or you may occasionally use a very complex
command sequence.  To save yourself keystrokes, or the time it takes
to remember the sequence, assign the sequence to an unused key by
using the <code class="literal">map</CODE
> and <code class="literal">map!</CODE
> commands.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-2770-SECT-1.1">31.2.1 Command Mode Maps </A
></H3
><p class="para">The <code class="literal">map</CODE
> command acts a lot like
<span class="link"><code class="literal">ab</CODE
> (<a class="linkend" href="ch30_31.htm" webstripperlinkwas="ch30_31.htm" title="vi Word Abbreviation ">30.31</A
>)</SPAN
>
except that you
define a macro for command mode instead of text-input mode.
(The <code class="literal">map!</CODE
> command works during text-input mode.
See below.)</P
><dl class="variablelist"><dt class="term"><code class="literal">map </CODE
><code class="replaceable"><i>x sequence</I
></CODE
></DT
><dd class="listitem"><p class="para">Define <em class="emphasis">x</EM
> as a <em class="emphasis">sequence</EM
> of editing commands.</P
></DD
><dt class="term"><code class="literal">unmap </CODE
><code class="replaceable"><i>x</I
></CODE
></DT
><dd class="listitem"><p class="para">Disable the <em class="emphasis">x</EM
> definition.</P
></DD
><dt class="term"><code class="literal">map</CODE
></DT
><dd class="listitem"><p class="para">List the characters that are currently mapped.</P
></DD
></DL
><p class="para">As with other <em class="emphasis">ex</EM
>-mode commands, these map commands can be saved in your
<span class="link"><em class="emphasis">.exrc</EM
> file (<a class="linkend" href="ch04_09.htm" webstripperlinkwas="ch04_09.htm" title="Setting Up vi with the .exrc File ">4.9</A
>)</SPAN
>-
or typed in after a colon (<code class="literal">:</CODE
>).
If you want a keymap to use only during this editing session, you might
find that <em class="emphasis">vi</EM
>
<span class="link"><code class="literal">@</CODE
>-functions (<a class="linkend" href="ch31_04.htm" webstripperlinkwas="ch31_04.htm" title="vi @-Functions ">31.4</A
>)</SPAN
>
are easier to create and use.
The map commands are best for keymaps that you save in your <em class="emphasis">.exrc</EM
>
file and use during many editing sessions.</P
><p class="para">Before you can start creating your own maps, you need to know the
keys not used in command mode that are available for user-defined
commands:<a class="indexterm" name="AUTOID-34855"></A
></P
><dl class="variablelist"><dt class="term">Letters:</DT
><dd class="listitem"><p class="para"><code class="literal">g K q V v</CODE
></P
></DD
><dt class="term">Control keys:</DT
><dd class="listitem"><p class="para"><code class="literal">^A ^K ^O ^T ^W ^X</CODE
></P
></DD
><dt class="term">Symbols:</DT
><dd class="listitem"><p class="para"><code class="literal">_ * \ =</CODE
>
(Note: the = is used by <em class="emphasis">vi</EM
> if Lisp mode is set.)</P
></DD
></DL
><p class="para">With maps you can create simple or complex command sequences.
As a simple example, you could define a command to reverse the order of
words.
In <em class="emphasis">vi</EM
>, with the cursor as shown:</P
><p class="para"><blockquote class="screen"><pre class="screen">you can _the scroll page</PRE
></BLOCKQUOTE
></P
><p class="para">the sequence to put <em class="emphasis">the</EM
> after <em class="emphasis">scroll</EM
> would be
<code class="literal">dwwP</CODE
>: delete word, <code class="literal">dw</CODE
>; move to the next word,
<code class="literal">w</CODE
>; put the deleted word before that word, <code class="literal">P</CODE
>.
(You can also use <code class="literal">W</CODE
> instead of <code class="literal">w</CODE
>.)
Saving this sequence:</P
><p class="para"><blockquote class="screen"><pre class="screen">map v dwwP</PRE
></BLOCKQUOTE
></P
><p class="para">enables you to reverse the order of two words at any time in the editing
session with the single keystroke <code class="literal">v</CODE
>.</P
><p class="para">You can also map certain multiple-character sequences.
Start the map with one of the symbols in the list above.
For example, to map the keystrokes <code class="literal">*s</CODE
> to put single quotes
around a word (<code class="literal">'</CODE
><code class="replaceable"><i>word</I
></CODE
><code class="literal">'</CODE
>),
and <code class="literal">*d</CODE
> to use double quotes (<code class="literal">&quot;</CODE
><code class="replaceable"><i>word</I
></CODE
><code class="literal">&quot;</CODE
>):</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
<a class="co" href="ch31_06.htm" webstripperlinkwas="ch31_06.htm" title="31.6 Protecting Keys from Interpretation by ex ">^[</A
> &#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
map *s Ea'^[Bi'^[
map *d Ea&quot;^[Bi&quot;^[</PRE
></TD
></TR
></TABLE
></P
><p class="para"><a class="indexterm" name="AUTOID-34905"></A
><a class="indexterm" name="AUTOID-34907"></A
>Now you'll be able to make hundreds of key maps (though your version
of <em class="emphasis">vi</EM
> probably has a limit).
Article
<a class="xref" href="ch31_09.htm" webstripperlinkwas="ch31_09.htm" title="Good Stuff for Your .exrc File ">31.9</A
>
has lots of examples.</P
><p class="para">&#13;You may also be able to associate map
sequences with your terminal's function keys if
your
<span class="link"><em class="emphasis">termcap</EM
> or <em class="emphasis">terminfo</EM
> entry (<a class="linkend" href="ch05_02.htm" webstripperlinkwas="ch05_02.htm" title="The Idea of a Terminal Database ">5.2</A
>)</SPAN
>
defines those keys.
For example, to make function key F1 transpose words:</P
><p class="para"><blockquote class="screen"><pre class="screen">map #1 dwelp</PRE
></BLOCKQUOTE
></P
><p class="para">A final note: map assignments are not really limited to unused keys.
You can map keys that are defined as other <em class="emphasis">vi</EM
> commands,
but then the key's original meaning is inaccessible.
But this is probably okay if the key is tied to a command that you 
rarely use.
There's more information in article
<a class="xref" href="ch31_14.htm" webstripperlinkwas="ch31_14.htm" title="Don't Lose Important Functions with vi Maps: Use noremap">31.14</A
>
about the <em class="emphasis">noremap</EM
> option.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-2770-SECT-1.2">31.2.2 Text-Input Mode Maps </A
></H3
><p class="para">The <code class="literal">map!</CODE
> command works like <code class="literal">map</CODE
>,
but <code class="literal">map!</CODE
> works during text-input mode.
You actually set the <code class="literal">map!</CODE
> during command mode, in the same
way as a plain <code class="literal">map</CODE
>:
at a colon (<code class="literal">:</CODE
>) prompt, type <code class="literal">map!</CODE
> followed by a space and
the key(s) that activate the map; then type a space and the text that
the text-input mode map stands for.
These text-input mode maps are a lot like
<span class="link">abbreviations (<a class="linkend" href="ch30_31.htm" webstripperlinkwas="ch30_31.htm" title="vi Word Abbreviation ">30.31</A
>)</SPAN
>;
the difference is that <code class="literal">map!</CODE
> lets you switch from text-input mode to
command mode, execute commands, then go back to text-input mode.
To go to command mode during a <code class="literal">map!</CODE
>, you'll need to put an ESC key in the
value of the map by
<span class="link">typing CTRL-v and then ESC (<a class="linkend" href="ch31_06.htm" webstripperlinkwas="ch31_06.htm" title="Protecting Keys from Interpretation by ex ">31.6</A
>)</SPAN
>.
After your <code class="literal">map!</CODE
> does whatever in command mode, it can re-enter
text-input mode with the usual commands <code class="literal">a</CODE
>, <code class="literal">i</CODE
>, and so on.</P
><p class="para">Let's say you normally never type the caret (<code class="literal">^</CODE
>) key during
input mode.
When you're typing along, as you realize that what you're typing is
important, you want to press the caret key.
Then, <em class="emphasis">vi</EM
> should open a line above and insert the phrase
&quot;THIS IS IMPORTANT:&quot;.
Finally, <em class="emphasis">vi</EM
> should return you to text-input mode at the end of the line
where you pressed the caret key.
To do that, go to command mode and enter the following <code class="literal">map!</CODE
>
command.
The first <code class="literal">^</CODE
> comes from pressing the caret key.
Then you'll see two places with <code class="literal">^[</CODE
>; that's made by pressing
CTRL-v followed by the ESC key.
Finish the map by pressing RETURN:</P
><p class="para"><blockquote class="screen"><pre class="screen">:map! ^ ^[OTHIS IS IMPORTANT:^[jA</PRE
></BLOCKQUOTE
></P
><p class="para">What does that do?
It executes the same <em class="emphasis">vi</EM
> commands you'd use to add those three words
yourself, manually.
During text-input mode, typing a caret (<code class="literal">^</CODE
>) will:</P
><ol class="orderedlist"><li class="listitem"><p class="para">Do ESC to go to command mode,</P
></LI
><li class="listitem"><p class="para">Use <code class="literal">O</CODE
> to open a new line above (in text-input mode),</P
></LI
><li class="listitem"><p class="para">Enter the text <code class="literal">THIS IS IMPORTANT:</CODE
></P
></LI
><li class="listitem"><p class="para">Do another ESC to go back to command mode,</P
></LI
><li class="listitem"><p class="para">Do <code class="literal">j</CODE
> to go down a line (to the line where you started), and</P
></LI
><li class="listitem"><p class="para">Do <code class="literal">A</CODE
> to put you at the end of the line, in text-input mode.</P
></LI
></OL
><p class="para">The trick is to use <code class="literal">map!</CODE
> only to redefine keys you'll
never use for anything else during text-input mode.
To temporarily disable a text-input mode map, press CTRL-v
before the key.
For example, to put a real caret into your file, type
<kbd class="keycap">[CTRL-v]</KBD
>
<kbd class="keycap">[<code class="literal">^</CODE
>]</KBD
>
To disable an input-mode map for the rest of your <em class="emphasis">vi</EM
> session,
type <code class="literal">:unmap!</CODE
> followed by the character(s) that activate the
map.</P
><p class="para"><a class="indexterm" name="AUTOID-34976"></A
>A more common example is mapping your keyboard's arrow or function keys
to do something during text-input mode.
These keys send a special series of characters.
Normally, without a <code class="literal">map!</CODE
> defined for these keys, the characters
they send will be put into your editor buffer&nbsp;- just as if you'd typed
the characters they make, yourself, one by one.
For instance, my left arrow key sends the characters <code class="literal">ESC</CODE
>, then
<code class="literal">[</CODE
> (left bracket), then <code class="literal">D</CODE
>.
Without an text-input mode <code class="literal">map!</CODE
> defined for that three-character
sequence, <em class="emphasis">vi</EM
> will be hopelessly confused
[1]
if I press that arrow key.
Many UNIX developers have added text-input mode maps for arrow keys.
You can see them when you list all your text-input mode maps by typing
<code class="literal">:map!</CODE
> by itself, with nothing after:</P
><blockquote class="footnote"><p class="para">[1] Actually, the <code class="literal">ESC</CODE
> will switch <em class="emphasis">vi</EM
> back to command mode.
The first <code class="literal">[</CODE
> will make <em class="emphasis">vi</EM
> think you're about to type
the section-motion command <code class="literal">[[</CODE
>, so the following <code class="literal">D</CODE
>
will make <em class="emphasis">vi</EM
> beep.
Ugly, eh?</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">up      ^[[A    ^[ka
down    ^[[B    ^[ja
left    ^[[D    ^[hi
right   ^[[C    ^[la
^       ^       ^[OTHIS IS IMPORTANT:^[jA</PRE
></BLOCKQUOTE
></P
><p class="para">Article
<a class="xref" href="ch31_03.htm" webstripperlinkwas="ch31_03.htm" title="What You Lose When You Use map! ">31.3</A
>
lists some problems with <code class="literal">map!</CODE
>.</P
></DIV
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">JP</SPAN
>, <span class="authorinitials">DG</SPAN
>, <span class="authorinitials">LL</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch31_01.htm" webstripperlinkwas="ch31_01.htm" title="31.1 Why Type More Than You Have To? "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 31.1 Why Type More Than You Have To? " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch31_03.htm" webstripperlinkwas="ch31_03.htm" title="31.3 What You Lose When You Use map! "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 31.3 What You Lose When You Use map! " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">31.1 Why Type More Than You Have To? </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">31.3 What You Lose When You Use map! </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
