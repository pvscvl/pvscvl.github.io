<html><head><title>[Chapter 7] 7.4 Faster Prompt Setting with Built-Ins </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:33:44Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_01.htm" webstripperlinkwas="ch07_01.htm" title="7. Setting Your Shell Prompt"><link rel="prev" href="ch07_03.htm" webstripperlinkwas="ch07_03.htm" title="7.3 C Shell Prompt Causes Problems in vi, rsh, etc. "><link rel="next" href="ch07_05.htm" webstripperlinkwas="ch07_05.htm" title="7.5 Multiline Shell Prompts "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_03.htm" webstripperlinkwas="ch07_03.htm" title="7.3 C Shell Prompt Causes Problems in vi, rsh, etc. "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 7.3 C Shell Prompt Causes Problems in vi, rsh, etc. " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 7<br>Setting Your Shell Prompt</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch07_05.htm" webstripperlinkwas="ch07_05.htm" title="7.5 Multiline Shell Prompts "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 7.5 Multiline Shell Prompts " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-1270">7.4 Faster Prompt Setting with Built-Ins </A
></H2
><p class="para"><a class="indexterm" name="AUTOID-6713"></A
><a class="indexterm" name="AUTOID-6716"></A
>To set your prompt, you execute a command (on most shells, the command
sets a shell variable).
Before setting the prompt, you may run other commands to get information
for it: the current directory name, for example.
A shell can run two kinds of commands:<a class="indexterm" name="AUTOID-6718"></A
>
<span class="link">built-in and external (<a class="linkend" href="ch01_10.htm" webstripperlinkwas="ch01_10.htm" title="Internal and External Commands ">1.10</A
>)</SPAN
>.
Built-in commands usually run faster than external commands.
On a slow computer, the difference may be important&nbsp;- waiting a few
seconds for your prompt to reset can get irritating.
Creative use of your shell's built-in commands might pay off there.
Let's look at some examples:</P
><ol class="orderedlist"><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-6724"></A
><em class="emphasis">pwd</EM
> is an external command that
<span class="link">searches the filesystem (<a class="linkend" href="ch14_04.htm" webstripperlinkwas="ch14_04.htm" title="How Does UNIX Find Your Current Directory? ">14.4</A
>)</SPAN
>
to find your current directory name.
(<em class="emphasis">pwd</EM
> is built into some shells, but that version doesn't search the
filesystem.) However, 
some shells can give you the current directory name from a variable, usually
<code class="literal">$cwd</CODE
> or <code class="literal">$PWD</CODE
>.
On slow computers, the first prompt-setting command below would take
more time:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
<a class="co" href="ch09_16.htm" webstripperlinkwas="ch09_16.htm" title="9.16 Command Substitution ">`...`</A
> &#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
set prompt=&quot;`pwd`% &quot;
set prompt=&quot;${cwd}% &quot;</PRE
></TD
></TR
></TABLE
></P
><p class="para">There's a tradeoff here, though&nbsp;- the shell built-in
<span class="link">may not (<a class="linkend" href="ch14_13.htm" webstripperlinkwas="ch14_13.htm" title="Which Directory Am I in, Really? ">14.13</A
>)</SPAN
>
give the right answer.
Also, in the C shell, each time you change to a new directory, you need
to run a new <code class="literal">set&nbsp;prompt</CODE
> command; you can use an alias like
<span class="link">setprompt (<a class="linkend" href="ch07_05.htm" webstripperlinkwas="ch07_05.htm" title="Multiline Shell Prompts ">7.5</A
>)</SPAN
>
to do this automatically.</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-6740"></A
>If you're putting your current directory in your prompt, you may only
want the tail of the pathname (the name past the last slash).
How can you edit a pathname?
Most people think of
<span class="link"><em class="emphasis">basename</EM
> (<a class="linkend" href="ch45_18.htm" webstripperlinkwas="ch45_18.htm" title="Using basename and dirname ">45.18</A
>)</SPAN
>
or
<span class="link"><em class="emphasis">sed</EM
> (<a class="linkend" href="ch34_24.htm" webstripperlinkwas="ch34_24.htm" title="Quick Reference: sed ">34.24</A
>)</SPAN
>.
Using the current directory from <code class="literal">$cwd</CODE
>, they might type:</P
><p class="para"><blockquote class="screen"><pre class="screen">set prompt=&quot;`basename $cwd`% &quot;</PRE
></BLOCKQUOTE
></P
><p class="para">The faster way is with the C shell's built-in &quot;tail&quot; operator, <code class="literal">:t</CODE
>:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
<a class="co" href="ch06_08.htm" webstripperlinkwas="ch06_08.htm" title="6.8 Shell Variables ">{}</A
> </PRE
></TH
><td valign="TOP"><pre class="screen">
set prompt=&quot;${cwd:t}% &quot;</PRE
></TD
></TR
></TABLE
></P
><p class="para">If your current directory is <em class="emphasis">/usr/users/hanna/projects</EM
>, either of
those prompts would look like this (with a space after the percent sign):</P
><p class="para"><blockquote class="screen"><pre class="screen">projects%</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-6760"></A
>The C shell has several of these built-in
<span class="link">string operators (<a class="linkend" href="ch09_06.htm" webstripperlinkwas="ch09_06.htm" title="String Editing (Colon) Operators ">9.6</A
>)</SPAN
>
like <code class="literal">:t</CODE
>;
the Korn Shell and <em class="emphasis">bash</EM
> have
more-powerful
<span class="link">string operators (<a class="linkend" href="ch09_07.htm" webstripperlinkwas="ch09_07.htm" title="String Editing in ksh and bash ">9.7</A
>)</SPAN
>.</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-6769"></A
><a class="indexterm" name="AUTOID-6772"></A
>The Korn shell and <em class="emphasis">bash</EM
> can include the current value of another
shell variable in their prompt.
So, put
<span class="link"><code class="literal">$PWD</CODE
> (<a class="linkend" href="ch06_03.htm" webstripperlinkwas="ch06_03.htm" title="Predefined Environment Variables ">6.3</A
>)</SPAN
>
in your prompt string (the <em class="emphasis">PS1</EM
> shell variable)
and the prompt will always show the current directory.
Or use any other variable; anytime it changes, the prompt will change too.
The important trick is to store the prompt with<a class="indexterm" name="AUTOID-6779"></A
>
single quotes (<code class="literal">'</CODE
>), not double quotes (<code class="literal">&quot;</CODE
>), so that
the variable name in your prompt won't be
<span class="link">evaluated (<a class="linkend" href="ch08_14.htm" webstripperlinkwas="ch08_14.htm" title="Bourne Shell Quoting ">8.14</A
>, <a class="linkend" href="ch08_05.htm" webstripperlinkwas="ch08_05.htm" title="Command-Line Evaluation ">8.5</A
>)</SPAN
>
until the prompt is actually printed to the screen.</P
><p class="para">For example, I'll put the current directory and the value of a variable
named <em class="emphasis">PSX</EM
> in my prompt.
When I change either, the prompt changes too:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>PSX=foo</B
></CODE
>
$ <code class="userinput"><b>PS1='$PWD $PSX\$ '</B
></CODE
>
/home/jerry foo$ <code class="userinput"><b>PSX=bar</B
></CODE
>
/home/jerry bar$ <code class="userinput"><b>cd ..</B
></CODE
>
/home bar$</PRE
></BLOCKQUOTE
></P
><p class="para"></P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-6796"></A
><em class="emphasis">tcsh</EM
> and <em class="emphasis">bash</EM
> also have special prompt string customizations
that let you include the hostname, username, time, and more.
You don't need external UNIX commands; you don't need to use an alias
like <em class="emphasis">setprompt</EM
> to reset your prompt string.</P
><p class="para">For example, to make your shell prompt 
show your current directory, a newline character (to move to the next
line of a
<span class="link">two-line prompt (<a class="linkend" href="ch07_05.htm" webstripperlinkwas="ch07_05.htm" title="Multiline Shell Prompts ">7.5</A
>)</SPAN
>),
then the current time, and finally a <code class="literal">$</CODE
> or <code class="literal">%</CODE
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">PS1='$PWD\n\t \$ '            <i class="lineannotation">...bash</I
>
set prompt = '%~\\            <i class="lineannotation">...tcsh</I
>
%p%% '</PRE
></BLOCKQUOTE
></P
><p class="para">For more information, see O'Reilly &amp; Associates'
<em class="emphasis">Using csh &amp; tcsh</EM
> and
<em class="emphasis">Learning the bash Shell</EM
>-or your shell's manpage.</P
></LI
></OL
><p class="para">So, if your prompt takes too long to set, look for built-ins that can
save time.
As another example, article 
<a class="xref" href="ch07_11.htm" webstripperlinkwas="ch07_11.htm" title="dirs in Your Prompt: Better than $cwd ">7.11</A
>
shows how to use <em class="emphasis">dirs</EM
> in a shell prompt.</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">JP</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_03.htm" webstripperlinkwas="ch07_03.htm" title="7.3 C Shell Prompt Causes Problems in vi, rsh, etc. "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 7.3 C Shell Prompt Causes Problems in vi, rsh, etc. " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch07_05.htm" webstripperlinkwas="ch07_05.htm" title="7.5 Multiline Shell Prompts "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 7.5 Multiline Shell Prompts " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.3 C Shell Prompt Causes Problems in vi, rsh, etc. </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.5 Multiline Shell Prompts </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
