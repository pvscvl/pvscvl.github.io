<html><head><title>[Chapter 9] 9.21 Handle Too-Long Command Lines with xargs </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:35:27Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch09_01.htm" webstripperlinkwas="ch09_01.htm" title="9. Saving Time on the Command Line"><link rel="prev" href="ch09_20.htm" webstripperlinkwas="ch09_20.htm" title="9.20 Too Many Files for the Command Line "><link rel="next" href="ch09_22.htm" webstripperlinkwas="ch09_22.htm" title="9.22 xargs: Problems with Spaces and Newlines "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_20.htm" webstripperlinkwas="ch09_20.htm" title="9.20 Too Many Files for the Command Line "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 9.20 Too Many Files for the Command Line " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 9<br>Saving Time on the Command Line</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_22.htm" webstripperlinkwas="ch09_22.htm" title="9.22 xargs: Problems with Spaces and Newlines "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 9.22 xargs: Problems with Spaces and Newlines " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-5490">9.21 Handle Too-Long Command Lines with xargs </A
></H2
><p class="para"><em class="emphasis">xargs</EM
> is one of those UNIX utilities that seems pretty useless when
you first hear about it&nbsp;- but turns into one of the handiest tools you
can have.</P
><table class="para.programreference" border="1"><tr><th valign="TOP"><a class="programreference" href="examples/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/examples/index.htm" title="xargs">xargs</A
><br></TH
><td valign="TOP">&#13;If your system doesn't already have <em class="emphasis">xargs</EM
>, be sure to install
it from the CD-ROM.</TD
></TR
></TABLE
><p class="para"><em class="emphasis">xargs</EM
> reads a group of arguments from its standard input, then 
runs a UNIX command with that group of arguments.
It keeps reading arguments and running the command until it runs out of
arguments.
The shell's
<span class="link">backquotes (<a class="linkend" href="ch09_16.htm" webstripperlinkwas="ch09_16.htm" title="Command Substitution ">9.16</A
>)</SPAN
>
do the same kind of thing, but they give all the arguments to the command
at once.
This can give you a
<span class="link"><code class="literal">Too many arguments</CODE
> (<a class="linkend" href="ch09_20.htm" webstripperlinkwas="ch09_20.htm" title="Too Many Files for the Command Line ">9.20</A
>)</SPAN
>
error.</P
><p class="para">Here are a couple of examples:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">If you want to print most of the files in a large directory,
put the output of <em class="emphasis">ls</EM
> into a file.
Edit the file to leave just the filenames you want printed.
Give the file to <em class="emphasis">xargs</EM
>' standard input:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
&#13;
<a class="co" href="ch13_01.htm" webstripperlinkwas="ch13_01.htm" title="13.1 Using Standard Input and Output">&lt;</A
> </PRE
></TH
><td valign="TOP"><pre class="screen">
% <code class="userinput"><b>ls &gt; allfiles.tmp</B
></CODE
>
% <code class="userinput"><b>vi allfiles.tmp</B
></CODE
>
% <code class="userinput"><b>xargs lpr &lt; allfiles.tmp</B
></CODE
></PRE
></TD
></TR
></TABLE
></P
><p class="para">What did that do?
With lines like these in <em class="emphasis">allfiles.tmp</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>cat allfiles.tmp</B
></CODE
>
afile
application
   ...
yoyotest
zapme</PRE
></BLOCKQUOTE
></P
><p class="para"><em class="emphasis">xargs</EM
> ran one or more <em class="emphasis">lpr</EM
> commands, each with a group of
arguments, until it had read every word in the file:</P
><p class="para"><blockquote class="screen"><pre class="screen">lpr afile application ...
   ...
lpr ... yoyotest zapme</PRE
></BLOCKQUOTE
></P
><p class="para"></P
></LI
><li class="listitem"><p class="para">The standard output of <em class="emphasis">xargs</EM
> is the standard output of the
commands it runs.
So, if you'd created <em class="emphasis">allfiles.tmp</EM
> above but you wanted to format
the files with
<span class="link"><em class="emphasis">pr</EM
> (<a class="linkend" href="ch43_07.htm" webstripperlinkwas="ch43_07.htm" title="Quick-and-Dirty Formatting Before Printing ">43.7</A
>)</SPAN
>
first, you could type:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>xargs pr &lt; allfiles.tmp | lpr</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Then <em class="emphasis">xargs</EM
> would run all of these <em class="emphasis">pr</EM
> commands.
The shell would pipe their standard outputs
[4]
to a single <em class="emphasis">lpr</EM
> command:</P
><blockquote class="footnote"><p class="para">[4] Actually, the shell is piping the standard output of <em class="emphasis">xargs</EM
>.
As I said above, <em class="emphasis">xargs</EM
> sends the standard output of commands it runs
to its own standard output.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">pr afile application ...
   ...
pr ... yoyotest zapme</PRE
></BLOCKQUOTE
></P
><p class="para">In this next example,
<span class="link"><em class="emphasis">find</EM
> (<a class="linkend" href="ch17_01.htm" webstripperlinkwas="ch17_01.htm#UPT-ART-7410" title="The find Command Is Great; The Problem Is Finding How to Use It">17.1</A
>)</SPAN
>
gets a list of all files in the directory tree.
Next, we use <em class="emphasis">xargs</EM
> to read those filenames and run
<span class="link"><em class="emphasis">grep -l</EM
> (<a class="linkend" href="ch15_07.htm" webstripperlinkwas="ch15_07.htm" title="Getting a List of Matching Files with grep -l ">15.7</A
>)</SPAN
>
to find which files contain the word &quot;WARNING.&quot;
Next, we pipe that to a setup with <em class="emphasis">pr</EM
> and <em class="emphasis">lpr</EM
>, like the one
in the previous example:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>find . -type f -print | xargs grep -l WARNING | xargs pr | lpr</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">&quot;Huh?&quot; you might say.
Just take that step by step.
The output of <em class="emphasis">find</EM
> is a list of filenames, like 
<code class="literal">./afile ./bfile ... ./adir/zfile</CODE
> and so on.
The first <em class="emphasis">xargs</EM
> gives those filenames to one or more <em class="emphasis">grep -l</EM
>
commands:</P
><p class="para"><blockquote class="screen"><pre class="screen">&#13;grep -l WARNING ./afile ./bfile ...
   ...
grep -l WARNING ./adir/zfile ...</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;The standard output of all those <em class="emphasis">grep</EM
>s is a (shortened) list of
filenames that match.
That's piped to another <em class="emphasis">xargs</EM
>-it runs <em class="emphasis">pr</EM
> commands with the
filenames that <em class="emphasis">grep</EM
> found.</P
><p class="para">UNIX is weird and wonderful!</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-11115"></A
>Sometimes you don't want <em class="emphasis">xargs</EM
> to run its command with as many
arguments as it can fit on the command line.
The <em class="emphasis">-n</EM
> option sets the maximum number of arguments <em class="emphasis">xargs</EM
>
will give to each command.
Another handy option, <em class="emphasis">-p</EM
>, prompts you before running each command.</P
><p class="para">Here's a directory full of files with errors (whose names end with
<em class="emphasis">.bad</EM
>) and corrected versions (named <em class="emphasis">.fixed</EM
>).
I use <em class="emphasis">ls</EM
> to give the list of files to <em class="emphasis">xargs</EM
>; it reads two
filenames at once, then asks whether I want to run <em class="emphasis">diff -c</EM
> to compare
those two files.
It keeps prompting me and running <em class="emphasis">diff -c</EM
>
until it runs out of file pairs:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>ls</B
></CODE
>
chap1.bad
chap1.fixed
chap2.bad
chap2.fixed
    ...
chap9.bad
chap9.fixed
% <code class="userinput"><b>ls | xargs -p -n2 diff -c</B
></CODE
>
diff -c chap1.bad chap1.fixed ?...<code class="userinput"><b>y</B
></CODE
>
   ...<em class="emphasis">Output of diff command for chap1</EM
>...
diff -c chap2.bad chap2.fixed ?...<code class="userinput"><b>n</B
></CODE
>
diff -c chap3.bad chap3.fixed ?...<code class="userinput"><b>y</B
></CODE
>
   ...<em class="emphasis">Output of diff command for chap3</EM
>...
    ...</PRE
></BLOCKQUOTE
></P
></LI
></UL
><p class="para">As the
<span class="link">next article (<a class="linkend" href="ch09_22.htm" webstripperlinkwas="ch09_22.htm" title="xargs: Problems with Spaces and Newlines ">9.22</A
>)</SPAN
>
explains, <em class="emphasis">xargs</EM
> can have trouble if an argument has white space
inside a word.
Luckily, the GNU <em class="emphasis">xargs</EM
> (read about it there) solves the problem.</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">JP</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_20.htm" webstripperlinkwas="ch09_20.htm" title="9.20 Too Many Files for the Command Line "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 9.20 Too Many Files for the Command Line " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_22.htm" webstripperlinkwas="ch09_22.htm" title="9.22 xargs: Problems with Spaces and Newlines "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 9.22 xargs: Problems with Spaces and Newlines " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">9.20 Too Many Files for the Command Line </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">9.22 xargs: Problems with Spaces and Newlines </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
