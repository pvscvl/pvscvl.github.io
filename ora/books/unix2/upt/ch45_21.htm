<html><head><title>[Chapter 45] 45.21 n&gt;&amp;m: Swap Standard Output and Standard Error </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:54:48Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch45_01.htm" webstripperlinkwas="ch45_01.htm" title="45. Shell Programming for the Initiated"><link rel="prev" href="ch45_20.htm" webstripperlinkwas="ch45_20.htm" title="45.20 Overview: Open Files and File Descriptors "><link rel="next" href="ch45_22.htm" webstripperlinkwas="ch45_22.htm" title="45.22 Handling Files Line-by-Line "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch45_20.htm" webstripperlinkwas="ch45_20.htm" title="45.20 Overview: Open Files and File Descriptors "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 45.20 Overview: Open Files and File Descriptors " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 45<br>Shell Programming for the Initiated</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch45_22.htm" webstripperlinkwas="ch45_22.htm" title="45.22 Handling Files Line-by-Line "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 45.22 Handling Files Line-by-Line " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-7930">45.21 n&gt;&amp;m: Swap Standard Output and Standard Error </A
></H2
><p class="para"><a class="indexterm" name="UPT-ART-7930-IX-NGT-AMP-M-DESCRIBED"></A
>
<a class="indexterm" name="UPT-ART-7930-IX-FILE-DESCRIPTORS-REDIRECTING"></A
>
<a class="indexterm" name="UPT-ART-7930-IX-REDIRECTING-FILE-DESCRIPTORS"></A
>
<a class="indexterm" name="UPT-ART-7930-IX-REDIRECTING-STANDARD-ERROR"></A
><a class="indexterm" name="UPT-ART-7930-IX-REDIRECTING-STANDARD-OUTPUT"></A
><a class="indexterm" name="UPT-ART-7930-IX-STANDARD-ERRORS-REDIRECTING"></A
><a class="indexterm" name="UPT-ART-7930-IX-STANDARD-OUTPUT-REDIRECTING"></A
>

By default, a command's standard error goes to your terminal.
The standard output goes to the terminal or is redirected somewhere
(to a file, down a pipe, into backquotes).</P
><p class="para">Sometimes you want the opposite.
For instance, you may need to send a command's standard output to the screen
and grab the error messages (standard error) with
backquotes.
Or, you might want to send a command's standard output to a file and the
standard error down a pipe to an error-processing command.
Here's how to do that in the Bourne shell.
(The C shell can't do this.)</P
><p class="para">File descriptors 0, 1, and 2 are, respectively, the standard
input, standard output, and standard error
(article
<a class="xref" href="ch45_20.htm" webstripperlinkwas="ch45_20.htm" title="Overview: Open Files and File Descriptors ">45.20</A
>
explains).
Without redirection, they're all associated with the terminal file
<span class="link"><em class="emphasis">/dev/tty</EM
> (<a class="linkend" href="ch45_20.htm" webstripperlinkwas="ch45_20.htm" title="Overview: Open Files and File Descriptors ">45.20</A
>)</SPAN
>.
It's easy to redirect any descriptor to any file&nbsp;- if you know the filename.
For instance, to redirect file descriptor 2 to <em class="emphasis">errfile</EM
>, type:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="replaceable"><i>command</I
></CODE
><code class="userinput"><b> 2&gt;errfile</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">You know that a pipe and backquotes also redirect the standard output:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="replaceable"><i>command</I
></CODE
><code class="userinput"><b> | ...</B
></CODE
>
$ <code class="userinput"><b>var=`</B
></CODE
><code class="replaceable"><i>command</I
></CODE
><code class="userinput"><b>`</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">But there's no filename associated with the pipe or backquotes, so
you can't use the <code class="literal">2&gt;</CODE
> redirection.
You need to rearrange the file descriptors without knowing the file
(or whatever) that they're associated with.
Here's how.</P
><p class="para"><a class="indexterm" name="AUTOID-53713"></A
><a class="indexterm" name="AUTOID-53716"></A
><a class="indexterm" name="AUTOID-53719"></A
>Let's start slowly: by sending both standard output and standard error
to the pipe or backquotes.
The Bourne shell operator <code class="replaceable"><i>n</I
></CODE
><code class="literal">&gt;&amp;</CODE
><code class="replaceable"><i>m</I
></CODE
> rearranges the 
files and file descriptors.
It says &quot;make file descriptor <em class="emphasis">n</EM
> point to the same file as
file descriptor <em class="emphasis">m</EM
>.&quot;
Let's

use that operator on the previous example.
We'll send standard error to the same place standard output is going:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="replaceable"><i>command</I
></CODE
> <code class="userinput"><b>2&gt;&amp;1 | ...</B
></CODE
>
$ <code class="userinput"><b>var=`</B
></CODE
><code class="replaceable"><i>command</I
></CODE
><code class="userinput"><b> 2&gt;&amp;1`</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">In both those examples, <code class="literal">2&gt;&amp;1</CODE
> means &quot;send standard error (file
descriptor 2) to the same place standard output (file descriptor 1)
is going.&quot;
Simple, eh?</P
><p class="para">You can use more than one of those <code class="replaceable"><i>n</I
></CODE
><code class="literal">&gt;&amp;</CODE
><code class="replaceable"><i>m</I
></CODE
> operators.
The shell reads them left-to-right before it executes the command.</P
><p class="para">&quot;Oh!&quot; you might say,
&quot;To swap standard output and standard error&nbsp;- make <em class="emphasis">stderr</EM
> go down a
pipe and <em class="emphasis">stdout</EM
> go to the screen-I could do this!&quot;</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="replaceable"><i>command</I
></CODE
> <code class="userinput"><b>2&gt;&amp;1 1&gt;&amp;2 | ...</B
></CODE
>     <em class="emphasis">(wrong...)</EM
></PRE
></BLOCKQUOTE
></P
><p class="para">Sorry, Charlie.
When the shell sees <code class="literal">2&gt;&amp;1&nbsp;1&gt;&amp;2</CODE
>, the shell first does <code class="literal">2&gt;&amp;1</CODE
>.
You've seen that before&nbsp;- it makes file descriptor 2 (<em class="emphasis">stderr</EM
>) 
go the same place as file descriptor 1 (<em class="emphasis">stdout</EM
>).
Then, the shell does <code class="literal">1&gt;&amp;2</CODE
>.
It makes <em class="emphasis">stdout</EM
> (<code class="literal">1</CODE
>) go the same place as <em class="emphasis">stderr</EM
>
(<code class="literal">2</CODE
>)... but <em class="emphasis">stderr</EM
> is already going the same place as
<em class="emphasis">stdout</EM
>, down the pipe.</P
><p class="para">This is one place the other file descriptors, 3 through 9, come in handy.
They normally aren't used.
You can use one of them as a &quot;holding place,&quot; to remember where another
file descriptor &quot;pointed.&quot;
For example, one way to read the operator <code class="literal">3&gt;&amp;2</CODE
> is &quot;make
<code class="literal">3</CODE
> point the same place as <code class="literal">2</CODE
>.&quot;
After you use <code class="literal">3&gt;&amp;2</CODE
> to grab the location of <code class="literal">2</CODE
>,
you can make <code class="literal">2</CODE
> point somewhere else.
Then, make <code class="literal">1</CODE
> point where <code class="literal">2</CODE
> used to (where <code class="literal">3</CODE
>
points now).</P
><p class="para">We'll take that step-by-step below.
The command line you want is one of these:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="replaceable"><i>command</I
></CODE
> <code class="userinput"><b>3&gt;&amp;2 2&gt;&amp;1 1&gt;&amp;3 | ...</B
></CODE
>
$ <code class="userinput"><b>var=`</B
></CODE
><code class="replaceable"><i>command</I
></CODE
><code class="userinput"><b> 3&gt;&amp;2 2&gt;&amp;1 1&gt;&amp;3`</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">How does it work?
The next four figures
break the second command line (with the backquotes) into the same
steps the shell follows as it rearranges the file descriptors.
You can try these on your terminal, if you'd like.
Each figure adds another <code class="replaceable"><i>n</I
></CODE
><code class="literal">&gt;&amp;</CODE
><code class="replaceable"><i>m</I
></CODE
> operator and
shows the location of each file descriptor after that operator.</P
><p class="para">The figures use a <em class="emphasis">grep</EM
> command reading two files.
<em class="emphasis">afone</EM
> is readable and <em class="emphasis">grep</EM
> finds one matching line in it;
the line is written to the standard output.
<em class="emphasis">bfoen</EM
> is misspelled and so is not readable; <em class="emphasis">grep</EM
> writes an
error message to the standard error.
In each figure, you'll see the terminal output (if any) just after the
variable-setting command with the backquotes.
The text grabbed by the backquotes goes into the shell variable;
the <em class="emphasis">echo</EM
> command shows that text.</P
><p class="para">By <a class="xref" href="#UPT-ART-7930-FIG-3" title="File Descriptors After 3&gt;&amp;2&nbsp;2&gt;&amp;1&nbsp;1&gt;&amp;3 Redirection">Figure 45.6</A
>
the redirection is correct.
Standard output goes to the screen, and standard error is captured by
the backquotes.</P
><p class="para"><h4 class="figure"><a class="title" name="UPT-ART-7930-FIG-0">Figure 45.3: File Descriptors Before Redirection</A
></H4
><img class="graphic" src="figs/7930a.gif" webstripperlinkwas="figs/7930a.gif" alt="Figure 45.3"></P
><p class="para"><h4 class="figure"><a class="title" name="UPT-ART-7930-FIG-1">Figure 45.4: File Descriptors After 3&gt;&amp;2 Redirection</A
></H4
><img class="graphic" src="figs/7930b.gif" webstripperlinkwas="figs/7930b.gif" alt="Figure 45.4"></P
><p class="para"><h4 class="figure"><a class="title" name="UPT-ART-7930-FIG-2">Figure 45.5: File Descriptors After 3&gt;&amp;2&nbsp;2&gt;&amp;1 Redirection</A
></H4
><img class="graphic" src="figs/7930c.gif" webstripperlinkwas="figs/7930c.gif" alt="Figure 45.5"></P
><p class="para"><h4 class="figure"><a class="title" name="UPT-ART-7930-FIG-3">Figure 45.6: File Descriptors After 3&gt;&amp;2&nbsp;2&gt;&amp;1&nbsp;1&gt;&amp;3 Redirection</A
></H4
><img class="graphic" src="figs/7930d.gif" webstripperlinkwas="figs/7930d.gif" alt="Figure 45.6"><a class="indexterm" name="AUTOID-53807"></A
><a class="indexterm" name="AUTOID-53810"></A
></P
><p class="para">Open files are automatically closed when a process exits.
But it's safer to close the files yourself as soon as you're done with them.
That way, if you forget and use the same descriptor later for something
else (for instance, use F.D. 3 to redirect some other command, or a
subprocess uses F.D. 3), you won't run into conflicts.
Use <code class="replaceable"><i>m</I
></CODE
><code class="literal">&lt;&amp;-</CODE
> to close input file descriptor <code class="replaceable"><i>m</I
></CODE
> and
<code class="replaceable"><i>m</I
></CODE
><code class="literal">&gt;&amp;-</CODE
> to close output file descriptor <code class="replaceable"><i>m</I
></CODE
>.
If you need to close standard input, use <code class="literal">&lt;&amp;-</CODE
>;
<code class="literal">&gt;&amp;-</CODE
> will close standard output.<a class="indexterm" name="AUTOID-53822"></A
><a class="indexterm" name="AUTOID-53823"></A
><a class="indexterm" name="AUTOID-53824"></A
><a class="indexterm" name="AUTOID-53825"></A
><a class="indexterm" name="AUTOID-53826"></A
><a class="indexterm" name="AUTOID-53827"></A
><a class="indexterm" name="AUTOID-53828"></A
></P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">JP</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch45_20.htm" webstripperlinkwas="ch45_20.htm" title="45.20 Overview: Open Files and File Descriptors "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 45.20 Overview: Open Files and File Descriptors " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch45_22.htm" webstripperlinkwas="ch45_22.htm" title="45.22 Handling Files Line-by-Line "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 45.22 Handling Files Line-by-Line " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">45.20 Overview: Open Files and File Descriptors </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">45.22 Handling Files Line-by-Line </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
