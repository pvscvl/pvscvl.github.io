<html><head><title>[Chapter 29] 29.4 Inside spell </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:45:02Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch29_01.htm" webstripperlinkwas="ch29_01.htm" title="29. Spell Checking, Word Counting, and Textual Analysis"><link rel="prev" href="ch29_03.htm" webstripperlinkwas="ch29_03.htm" title="29.3 How Do I Spell That Word? "><link rel="next" href="ch29_05.htm" webstripperlinkwas="ch29_05.htm" title="29.5 Adding Words to ispell's Dictionary "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch29_03.htm" webstripperlinkwas="ch29_03.htm" title="29.3 How Do I Spell That Word? "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 29.3 How Do I Spell That Word? " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 29<br>Spell Checking, Word Counting, and Textual Analysis</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch29_05.htm" webstripperlinkwas="ch29_05.htm" title="29.5 Adding Words to ispell's Dictionary "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 29.5 Adding Words to ispell's Dictionary " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-7963">29.4 Inside spell </A
></H2
><p class="para">[If you have 
<span class="link"><em class="emphasis">ispell</EM
> (<a class="linkend" href="ch29_02.htm" webstripperlinkwas="ch29_02.htm" title="Check Spelling Interactively with ispell ">29.2</A
>)</SPAN
>,
there's not a whole lot of reason for using <i class="filename">spell</I
> any more.
Not only is <i class="filename">ispell</I
> more powerful, it's a heck of a lot easier to update
its spelling dictionaries.
Nonetheless, we decided to include this
article, because it makes clear the kinds of rules that spelling
checkers go through to expand on the words in their dictionaries. -TOR\]</P
><p class="para">On many UNIX systems,
the directory <em class="emphasis">/usr/lib/spell</EM
> contains the main program invoked by the
<em class="emphasis">spell</EM
> command along with auxiliary programs and data files.</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>ls -l /usr/lib/spell</B
></CODE
>
total 888
-rwxr-xr-x   1 bin          545 Dec  9  1988 compress
-rwxr-xr-x   1 bin        16324 Dec  9  1988 hashcheck
-rwxr-xr-x   1 bin        14828 Dec  9  1988 hashmake
-rw-r--r--   1 bin        53872 Dec  9  1988 hlista
-rw-r--r--   1 bin        53840 Dec  9  1988 hlistb
-rw-r--r--   1 bin         6336 Dec  9  1988 hstop
-rw-rw-rw-   1 root      252312 Nov 27 16:24 spellhist
-rwxr-xr-x   1 bin        21634 Dec  9  1988 spellin
-rwxr-xr-x   1 bin        23428 Dec  9  1988 spellprog</PRE
></BLOCKQUOTE
></P
><p class="para">On some systems, 
the <em class="emphasis">spell</EM
> command is a shell script that pipes its input through
<span class="link"><em class="emphasis">deroff -w</EM
> (<a class="linkend" href="ch29_10.htm" webstripperlinkwas="ch29_10.htm" title="Just the Words, Please ">29.10</A
>)</SPAN
>
and
<span class="link"><em class="emphasis">sort -u</EM
> (<a class="linkend" href="ch36_06.htm" webstripperlinkwas="ch36_06.htm" title="Miscellaneous sort Hints ">36.6</A
>)</SPAN
>
to remove formatting codes and prepare a sorted word list, one word per line.
On other systems, it is a stand-alone program that does these steps
internally.
Two separate spelling lists are maintained, one for American usage
and one for British usage (invoked with the <em class="emphasis">-b</EM
> option to <em class="emphasis">spell</EM
>).
These lists, <em class="emphasis">hlista</EM
> and <em class="emphasis">hlistb</EM
>, cannot be read or updated directly.
They are compressed files, compiled from a list of words
represented as nine-digit hash codes.
(Hash coding is a special technique used to quickly search for information.)</P
><p class="para"><a class="indexterm" name="AUTOID-32021"></A
>The main program invoked by <em class="emphasis">spell</EM
> is <em class="emphasis">spellprog</EM
>.
It loads the list of hash codes from either <em class="emphasis">hlista</EM
> or <em class="emphasis">hlistb</EM
> into a
table, and looks for the hash code corresponding to each word on the
sorted word list.
This eliminates all words (or hash codes) actually found in the
spelling list.
For the remaining words, <em class="emphasis">spellprog</EM
> tries to see if it can derive a
recognizable word by performing various operations on the word stem,
based on suffix and prefix rules.<a class="indexterm" name="AUTOID-32028"></A
>
A few of these manipulations follow:</P
><blockquote class="blockquote"><p class="para">-y+iness
+ness
-y+i+less
+less
-y+ies
-t+ce
-t+cy</P
></BLOCKQUOTE
><p class="para">The new words created as a result of these manipulations will be
checked once more against the spell table.
However, before the stem-derivative rules are applied, the remaining
words are checked against a table of hash codes built from the file <em class="emphasis">hstop</EM
>.<a class="indexterm" name="AUTOID-32034"></A
>
The stop list contains typical misspellings that stem-derivative
operations might allow to pass.
For instance, the misspelled word <em class="emphasis">thier</EM
> would be converted into <em class="emphasis">thy</EM
>
using the suffix rule -y+ier.
The <em class="emphasis">hstop</EM
> file accounts for as many cases of this type
of error as possible.</P
><p class="para">The final output consists of words not found in the spell list, even
after the program tried to search for their stems, and words that
were found in the stop list.</P
><p class="para"><a class="indexterm" name="AUTOID-32041"></A
>You can get a better sense of these rules in action by using the <em class="emphasis">-v</EM
>
or <em class="emphasis">-x</EM
> option.
The <em class="emphasis">-v</EM
> option eliminates the last lookup in the table, and produces
a list of words that are not actually in the spelling list along
with possible derivatives.
It allows you to see which words were found as a result of
stem-derivative operations, and prints the rule used.
(Refer to the <em class="emphasis">sample</EM
> file in article
<a class="xref" href="ch29_01.htm" webstripperlinkwas="ch29_01.htm#UPT-ART-4080" title="The UNIX spell Command ">29.1</A
>.)</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>spell -v sample</B
></CODE
>
Alcuin
ditroff
LaserWriter
PostScript
printerr
TranScript
+out  output
+s    uses</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-32053"></A
>The <em class="emphasis">-x</EM
> option makes <em class="emphasis">spell</EM
> begin at the stem-derivative stage, and
prints the various attempts it makes to find the word stem of each word.</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>spell -x sample</B
></CODE
>
...
=into
=LaserWriter
=LaserWrite
=LaserWrit
=laserWriter
=laserWrite
=laserWrit
=output
=put
...
LaserWriter
...</PRE
></BLOCKQUOTE
></P
><p class="para">The stem is preceded by an equal sign (<code class="literal">=</CODE
>).
At the end of the output are the words whose
stem does not appear in the spell list.</P
><p class="para"><a class="indexterm" name="AUTOID-32064"></A
>One other file you should know about is <em class="emphasis">spellhist</EM
>.
On some systems,
each time you run <em class="emphasis">spell</EM
>, the output is appended through
<span class="link"><em class="emphasis">tee</EM
> (<a class="linkend" href="ch13_09.htm" webstripperlinkwas="ch13_09.htm" title="Send Output Two or More Places with tee ">13.9</A
>)</SPAN
>
into <em class="emphasis">spellhist</EM
>, in effect creating a list of all the
misspelled or unrecognized words for your site.
The <em class="emphasis">spellhist</EM
> file is something of a &quot;garbage&quot; file that keeps on
growing.
You will want to reduce it or remove it periodically.
To extract useful information from this <em class="emphasis">spellhist</EM
>, you might use the
<em class="emphasis">sort</EM
>
and
<span class="link"><em class="emphasis">uniq&nbsp;-c</EM
> (<a class="linkend" href="ch35_20.htm" webstripperlinkwas="ch35_20.htm" title="Quick Reference: uniq ">35.20</A
>)</SPAN
>
commands to compile a
list of misspelled words or special terms that occur most frequently
(see article
<a class="xref" href="ch29_07.htm" webstripperlinkwas="ch29_07.htm" title="Count How Many Times Each Word Is Used ">29.7</A
>
for a similar example).
It is possible to add these words back into the basic spelling
dictionary, but this is too complex a process to describe here.
It's probably easier just to use a 
<span class="link">local spelling dictionary (<a class="linkend" href="ch29_01.htm" webstripperlinkwas="ch29_01.htm#UPT-ART-4080" title="The UNIX spell Command ">29.1</A
>)</SPAN
>.
Even better, use <em class="emphasis">ispell</EM
>; not only is it a more powerful
spelling program, it is much easier to
<span class="link">update the word lists it uses (<a class="linkend" href="ch29_05.htm" webstripperlinkwas="ch29_05.htm" title="Adding Words to ispell's Dictionary ">29.5</A
>)</SPAN
>.</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">DD</SPAN
> <span class="bibliomisc">from <cite class="citetitle">UNIX Text Processing</CITE
>, Hayden Books, 1987</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch29_03.htm" webstripperlinkwas="ch29_03.htm" title="29.3 How Do I Spell That Word? "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 29.3 How Do I Spell That Word? " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch29_05.htm" webstripperlinkwas="ch29_05.htm" title="29.5 Adding Words to ispell's Dictionary "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 29.5 Adding Words to ispell's Dictionary " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">29.3 How Do I Spell That Word? </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">29.5 Adding Words to ispell's Dictionary </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
