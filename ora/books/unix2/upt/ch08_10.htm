<html><head><title>[Chapter 8] 8.10 eval: When You Need Another Chance </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:34:24Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch08_01.htm" webstripperlinkwas="ch08_01.htm" title="8. How the Shell Interprets What You Type"><link rel="prev" href="ch08_09.htm" webstripperlinkwas="ch08_09.htm" title="8.9 Wildcards Inside of Aliases "><link rel="next" href="ch08_11.htm" webstripperlinkwas="ch08_11.htm" title="8.11 Which One Will bash Use? "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_09.htm" webstripperlinkwas="ch08_09.htm" title="8.9 Wildcards Inside of Aliases "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 8.9 Wildcards Inside of Aliases " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 8<br>How the Shell Interprets What You Type</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_11.htm" webstripperlinkwas="ch08_11.htm" title="8.11 Which One Will bash Use? "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 8.11 Which One Will bash Use? " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-6840">8.10 eval: When You Need Another Chance </A
></H2
><p class="para"><a class="indexterm" name="AUTOID-8088"></A
><a class="indexterm" name="AUTOID-8091"></A
>If you read the
<span class="link">previous article (<a class="linkend" href="ch08_09.htm" webstripperlinkwas="ch08_09.htm" title="Wildcards Inside of Aliases ">8.9</A
>)</SPAN
>,
you saw that, most of the time, the
shell evaluates the command line &quot;in the right order.&quot; But what about
when it doesn't? Here's a situation that the shell can't handle.
It's admittedly contrived, but not too different from what you might
find in a
<span class="link">shell program (<a class="linkend" href="ch01_05.htm" webstripperlinkwas="ch01_05.htm" title="Anyone Can Program the Shell ">1.5</A
>)</SPAN
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>set b=\$a</B
></CODE
>
% <code class="userinput"><b>set a=foo</B
></CODE
>
% <code class="userinput"><b>echo $b</B
></CODE
>
$a</PRE
></BLOCKQUOTE
></P
><p class="para">When we use the variable <code class="literal">$b</CODE
>, we'd like to get the variable
<code class="literal">$a</CODE
>, read it, and use its value. But that doesn't happen.
Variable substitution happens once, and it isn't recursive. The value
of <code class="literal">$b</CODE
> is <code class="literal">$a</CODE
>, and that's it. You don't go any further.</P
><p class="para">But there's a loophole. The <em class="emphasis">eval</EM
> command says, in essence,
&quot;Give me another chance. Re-evaluate this line and execute it.&quot;
Here's what happens if we stick <em class="emphasis">eval</EM
> before the <em class="emphasis">echo</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>eval echo $b</B
></CODE
>
foo</PRE
></BLOCKQUOTE
></P
><p class="para">The shell converts <code class="literal">$b</CODE
> into <code class="literal">$a</CODE
>; then <em class="emphasis">eval</EM
> runs through the
command-line evaluation process again, converting <code class="literal">echo</CODE
>&nbsp;<code class="literal">$a</CODE
> 
into <code class="literal">echo</CODE
>&nbsp;<code class="literal">foo</CODE
>-which is what we wanted in the first place!</P
><p class="para">Here's a more realistic example; you see code like this fairly often
in Bourne shell scripts:</P
><p class="para"><blockquote class="screen"><pre class="screen">...
command='grep $grepopts $searchstring $file'
for opt
do
   case &quot;$opt&quot; in
      file) output=' &gt; $ofile' ;;
      read) output=' | more'   ;;
      sort) postproc=' | sort $sortopts';;
   esac
done
...
eval $command $postproc $output</PRE
></BLOCKQUOTE
></P
><p class="para">Do you see what's happening? We're constructing a command that will
look something like:</P
><p class="para"><blockquote class="screen"><pre class="screen">grep $grepopts $searchstring $file | sort $sortopts &gt; $ofile</PRE
></BLOCKQUOTE
></P
><p class="para">But the entire command is &quot;hidden&quot; in shell variables, including the
I/O redirectors and various options. If the <em class="emphasis">eval</EM
> isn't there,
this command will blow up in all sorts of bizarre ways. You'll see
messages like <code class="literal">| not found</CODE
>, because variable expansion occurs after
output redirection. The &quot;nested&quot; variables (like <code class="literal">$ofile</CODE
>, which is
used inside of <code class="literal">$output</CODE
>) won't be expanded either, so you'll also see
<code class="literal">$ofile not found</CODE
>.
Putting an <em class="emphasis">eval</EM
> in front of the command forces the shell to
process the line again, guaranteeing that the variables will be
expanded properly and that I/O redirection will take place.</P
><p class="para"><em class="emphasis">eval</EM
> is incredibly useful if you have shell variables that
include other shell variables, shell variables that include aliases,
shell variables that include I/O redirectors, 
or all sorts of perversities. It's commonly used within shell
scripts to &quot;evaluate&quot; commands that are built during execution.
There are more examples of <em class="emphasis">eval</EM
> in articles
<a class="xref" href="ch05_04.htm" webstripperlinkwas="ch05_04.htm" title="Setting the TERMCAP Variable with tset ">5.4</A
>,
<a class="xref" href="ch10_07.htm" webstripperlinkwas="ch10_07.htm" title="How to Put if-then-else in a C Shell Alias ">10.7</A
>,
<a class="xref" href="ch10_10.htm" webstripperlinkwas="ch10_10.htm" title="Simulated Bourne Shell Functions and Aliases ">10.10</A
>,
<a class="xref" href="ch45_17.htm" webstripperlinkwas="ch45_17.htm" title="Making a for Loop with Multiple Variables ">45.17</A
>,
<a class="xref" href="ch45_34.htm" webstripperlinkwas="ch45_34.htm" title="Arrays in the Bourne Shell ">45.34</A
>,
<a class="xref" href="ch46_03.htm" webstripperlinkwas="ch46_03.htm" title="Bourne Shell Debugger Shows a Shell Variable ">46.3</A
>,
and others.</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">ML</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_09.htm" webstripperlinkwas="ch08_09.htm" title="8.9 Wildcards Inside of Aliases "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 8.9 Wildcards Inside of Aliases " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_11.htm" webstripperlinkwas="ch08_11.htm" title="8.11 Which One Will bash Use? "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 8.11 Which One Will bash Use? " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">8.9 Wildcards Inside of Aliases </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">8.11 Which One Will bash Use? </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
