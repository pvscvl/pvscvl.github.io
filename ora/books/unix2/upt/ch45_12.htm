<html><head><title>[Chapter 45] 45.12 Parameter Substitution </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:54:34Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch45_01.htm" webstripperlinkwas="ch45_01.htm" title="45. Shell Programming for the Initiated"><link rel="prev" href="ch45_11.htm" webstripperlinkwas="ch45_11.htm" title="45.11 The Multipurpose jot Command "><link rel="next" href="ch45_13.htm" webstripperlinkwas="ch45_13.htm" title="45.13 Save Disk Space and Programming: Multiple Names for a Program"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch45_11.htm" webstripperlinkwas="ch45_11.htm" title="45.11 The Multipurpose jot Command "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 45.11 The Multipurpose jot Command " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 45<br>Shell Programming for the Initiated</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch45_13.htm" webstripperlinkwas="ch45_13.htm" title="45.13 Save Disk Space and Programming: Multiple Names for a Program"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 45.13 Save Disk Space and Programming: Multiple Names for a Program" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-7968">45.12 Parameter Substitution </A
></H2
><p class="para"><a class="indexterm" name="AUTOID-53057"></A
><a class="indexterm" name="AUTOID-53060"></A
>The Bourne shell has a handy set of operators for testing and setting
shell variables.
They're listed in</P
><table class="table"><caption class="table"><a class="title" name="UPT-ART-7968-TAB-0">Table 45.2: Bourne Shell Parameter Substitution Operators</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Operator</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Explanation</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">${<code class="replaceable"><i>var</I
></CODE
>:-<code class="replaceable"><i>default</I
></CODE
>}</TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If <em class="emphasis">var</EM
> is not set or is empty, use <em class="emphasis">default</EM
> instead.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">${<code class="replaceable"><i>var</I
></CODE
>:=<code class="replaceable"><i>default</I
></CODE
>}</TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If <em class="emphasis">var</EM
> is not set or is empty, set it to <em class="emphasis">default</EM
> and use that value.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">${<code class="replaceable"><i>var</I
></CODE
>:+<code class="replaceable"><i>instead</I
></CODE
>}</TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If <em class="emphasis">var</EM
> is set and is not empty, use
<em class="emphasis">instead</EM
>.  Otherwise, use nothing (null string).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">${<code class="replaceable"><i>var</I
></CODE
>:?<code class="replaceable"><i>message</I
></CODE
>}</TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If <em class="emphasis">var</EM
> is set and is not empty, use its value.
Otherwise, print <em class="emphasis">message</EM
>, if any, and exit from the
shell.  If <em class="emphasis">message</EM
> is missing, print a default message (which depends on your shell).</P
></TD
></TR
></TBODY
></TABLE
><p class="para"><a class="indexterm" name="AUTOID-53105"></A
><a class="indexterm" name="AUTOID-53108"></A
>If you omit the colon (<code class="literal">:</CODE
>) from the expressions in Table 45-2, the
shell doesn't check for an empty parameter.
In other words, the substitution will happen whenever the parameter is set.
(That's how some early Bourne shells work:
they don't understand a colon in parameter substitution.)</P
><p class="para"><a class="indexterm" name="AUTOID-53113"></A
>To see how parameter substitution works, here's another version of the
<span class="link"><em class="emphasis">bkedit</EM
> script (<a class="linkend" href="ch44_08.htm" webstripperlinkwas="ch44_08.htm" title="Test Exit Status with the if Statement ">44.8</A
>, <a class="linkend" href="ch44_11.htm" webstripperlinkwas="ch44_11.htm" title="Set Exit Status of a Shell (Script) ">44.11</A
>)</SPAN
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">#!/bin/sh
if cp &quot;$1&quot; &quot;$1.bak&quot;
then
    ${VISUAL:-/usr/ucb/vi} &quot;$1&quot;
    exit   # USE STATUS FROM EDITOR
else
    echo &quot;`basename $0` quitting: can't make backup?&quot; 1&gt;&amp;2
    exit 1
fi</PRE
></BLOCKQUOTE
></P
><p class="para">If the
<span class="link"><em class="emphasis">VISUAL</EM
> (<a class="linkend" href="ch06_03.htm" webstripperlinkwas="ch06_03.htm" title="Predefined Environment Variables ">6.3</A
>)</SPAN
>
environment variable
is set and is not empty, its value
(like <em class="emphasis">/usr/local/bin/emacs</EM
>) is used and the
command line becomes <code class="literal">/usr/local/bin/emacs&nbsp;&quot;$1&quot;</CODE
>.
If <em class="emphasis">VISUAL</EM
> isn't set, the command line will default to
<code class="literal">/usr/ucb/vi&nbsp;&quot;$1&quot;</CODE
>.</P
><p class="para">You can use parameter substitution operators in any command line.
You'll see them used with the
<span class="link">colon (<code class="literal">:</CODE
>) operator (<a class="linkend" href="ch45_09.htm" webstripperlinkwas="ch45_09.htm" title='The Unappreciated Bourne Shell  ":&quot; Operator'>45.9</A
>)</SPAN
>,
checking or setting default values.
There's an example below.
The first substitution (<code class="literal">${nothing=default}</CODE
>) will leave
<code class="literal">$nothing</CODE
> empty because the variable has been set.
The second substitution will set <code class="literal">$nothing</CODE
>
to <em class="emphasis">default</EM
> because the variable has been set but is empty.
The third substitution will leave <code class="literal">$something</CODE
>
set to <em class="emphasis">stuff</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">nothing=
something=stuff
: ${nothing=default}
: ${nothing:=default}
: ${something:=default}</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-53139"></A
><a class="indexterm" name="AUTOID-53142"></A
><a class="indexterm" name="AUTOID-53145"></A
><a class="indexterm" name="AUTOID-53148"></A
><a class="indexterm" name="AUTOID-53151"></A
>
The Korn shell and <em class="emphasis">bash</EM
> have similar
<span class="link">string editing operators (<a class="linkend" href="ch09_07.htm" webstripperlinkwas="ch09_07.htm" title="String Editing in ksh and bash ">9.7</A
>)</SPAN
>
like <code class="literal">${</CODE
><code class="replaceable"><i>var</I
></CODE
>##<code class="replaceable"><i>pattern</I
></CODE
><code class="literal">}</CODE
>.
They're useful in shell programs,
as well as on the command line and in shell setup files.</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">JP</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch45_11.htm" webstripperlinkwas="ch45_11.htm" title="45.11 The Multipurpose jot Command "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 45.11 The Multipurpose jot Command " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch45_13.htm" webstripperlinkwas="ch45_13.htm" title="45.13 Save Disk Space and Programming: Multiple Names for a Program"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 45.13 Save Disk Space and Programming: Multiple Names for a Program" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">45.11 The Multipurpose jot Command </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">45.13 Save Disk Space and Programming: Multiple Names for a Program</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
