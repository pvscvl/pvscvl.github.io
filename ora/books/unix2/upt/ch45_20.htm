<html><head><title>[Chapter 45] 45.20 Overview: Open Files and File Descriptors </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:54:45Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch45_01.htm" webstripperlinkwas="ch45_01.htm" title="45. Shell Programming for the Initiated"><link rel="prev" href="ch45_19.htm" webstripperlinkwas="ch45_19.htm" title="45.19 A while Loop with Several Loop Control Commands "><link rel="next" href="ch45_21.htm" webstripperlinkwas="ch45_21.htm" title="45.21 n&gt;&amp;m: Swap Standard Output and Standard Error "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch45_19.htm" webstripperlinkwas="ch45_19.htm" title="45.19 A while Loop with Several Loop Control Commands "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 45.19 A while Loop with Several Loop Control Commands " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 45<br>Shell Programming for the Initiated</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch45_21.htm" webstripperlinkwas="ch45_21.htm" title="45.21 n&gt;&amp;m: Swap Standard Output and Standard Error "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 45.21 n&gt;&amp;m: Swap Standard Output and Standard Error " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-2050">45.20 Overview: Open Files and File Descriptors </A
></H2
><p class="para">[This introduction is general and simplified.
If you're a technical person who needs a complete and exact description,
read a book on UNIX programming. -JP]</P
><p class="para"><a class="indexterm" name="AUTOID-53556"></A
>UNIX shells let you redirect the input and output of programs
with operators like <code class="literal">&gt;</CODE
> and <code class="literal">|</CODE
>.
How does that work?
How can you use it better?
Here's an overview.</P
><p class="para"><a class="indexterm" name="AUTOID-53561"></A
>When the UNIX kernel starts any
<span class="link">process (<a class="linkend" href="ch38_03.htm" webstripperlinkwas="ch38_03.htm" title="Managing Processes: Overall Concepts ">38.3</A
>)</SPAN
>-
for example, <em class="emphasis">grep</EM
>, <em class="emphasis">ls</EM
>, or a shell&nbsp;- it sets up several places for that
process to read from and write to.
<a class="xref" href="#UPT-ART-2050-FIG-0" title="Open Standard I/O Files with No Command-Line Redirection">Figure 45.1</A
>
shows that.</P
><h4 class="figure"><a class="title" name="UPT-ART-2050-FIG-0">Figure 45.1: Open Standard I/O Files with No Command-Line Redirection</A
></H4
><img class="graphic" src="figs/2050a.gif" webstripperlinkwas="figs/2050a.gif" alt="Figure 45.1"><p class="para">These places are called <em class="emphasis">open files</EM
>.
The kernel gives each file a number called a <em class="emphasis">file descriptor</EM
>.
But people usually use names for these places instead of the numbers:</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-53577"></A
>The <em class="emphasis">standard input</EM
> or <em class="emphasis">stdin</EM
> (File Descriptor (F.D.) number 0) is the place where
the process can read text.
This might be text from other programs or from your keyboard.</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-53583"></A
>The <em class="emphasis">standard output</EM
> or <em class="emphasis">stdout</EM
> (F.D. 1) is a place for the process
to write its &quot;answers.&quot;</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-53589"></A
>The <em class="emphasis">standard error</EM
> or <em class="emphasis">stderr</EM
> (F.D. 2) is where the process can send
error messages.</P
></LI
></UL
><p class="para">By default, as
<a class="xref" href="#UPT-ART-2050-FIG-0" title="Open Standard I/O Files with No Command-Line Redirection">Figure 45.1</A
>
shows, the file that's opened for <em class="emphasis">stdin</EM
>, <em class="emphasis">stdout</EM
>, and
<em class="emphasis">stderr</EM
> is <em class="emphasis">/dev/tty</EM
>-a name for your terminal.
This makes life easier for users&nbsp;- and programmers, too.
The user doesn't have to tell a program where to read or write
because the default is your terminal.
A programmer doesn't have to open files to read or write from (in many
cases); the programs can just read from <em class="emphasis">stdin</EM
>, write to
<em class="emphasis">stdout</EM
>, and send errors to <em class="emphasis">stderr</EM
>.</P
><p class="para"><a class="indexterm" name="AUTOID-53603"></A
>This gets better.
When the shell starts a process (when you type a command at a prompt),
you can tell the shell what file to &quot;connect to&quot; any of those file descriptors.
For example, 
<a class="xref" href="#UPT-ART-2050-FIG-1" title="Standard Output Redirected to a File">Figure 45.2</A
>
shows what happens when you
run <em class="emphasis">grep</EM
> and make the shell redirect <em class="emphasis">grep</EM
>'s
standard output away from the terminal to a file named <em class="emphasis">grepout</EM
>.</P
><h4 class="figure"><a class="title" name="UPT-ART-2050-FIG-1">Figure 45.2: Standard Output Redirected to a File</A
></H4
><img class="graphic" src="figs/2050b.gif" webstripperlinkwas="figs/2050b.gif" alt="Figure 45.2"><a class="indexterm" name="AUTOID-53613"></A
><a class="indexterm" name="AUTOID-53615"></A
><p class="para">Programs can read and write files besides the ones on <em class="emphasis">stdin</EM
>,
<em class="emphasis">stdout</EM
>, and <em class="emphasis">stderr</EM
>.
For instance, in 
<a class="xref" href="#UPT-ART-2050-FIG-1" title="Standard Output Redirected to a File">Figure 45.2</A
>,
<em class="emphasis">grep</EM
> opened the file
<em class="emphasis">somefile</EM
> itself&nbsp;- it didn't use any of the standard file descriptors
for <em class="emphasis">somefile</EM
>.
A UNIX convention is that if you don't name any files on the command
line, a program will read from its standard input.
Programs that work that way are called
<span class="link"><em class="emphasis">filters</EM
> (<a class="linkend" href="ch01_30.htm" webstripperlinkwas="ch01_30.htm" title="Redirecting Input and Output ">1.30</A
>)</SPAN
>.</P
><p class="para"><a class="indexterm" name="AUTOID-53629"></A
><a class="indexterm" name="AUTOID-53632"></A
><a class="indexterm" name="AUTOID-53635"></A
><a class="indexterm" name="AUTOID-53638"></A
><a class="indexterm" name="AUTOID-53641"></A
><a class="indexterm" name="AUTOID-53644"></A
>All shells can do basic redirection with <em class="emphasis">stdin</EM
>, <em class="emphasis">stdout</EM
>, and
<em class="emphasis">stderr</EM
>.
But, as you'll see in article
<a class="xref" href="ch45_21.htm" webstripperlinkwas="ch45_21.htm" title="n&gt;&amp;m: Swap Standard Output and Standard Error ">45.21</A
>,
the Bourne shell also handles file descriptors 3 through 9.
That's useful sometimes:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Maybe you have a few data files that you want to keep reading from or
writing to.
Instead of giving their names, you can use the file descriptor numbers.</P
></LI
><li class="listitem"><p class="para">Once you open a file, the kernel remembers what place in the file you
last read from or wrote to.
Each time you use that file descriptor number while the file is open,
you'll be at the same
place in the file.
That's especially nice when you want to read from or write to the same file
with more than one program.
For example, the <em class="emphasis">line</EM
> command on some UNIX systems reads one line
from a file&nbsp;- you can call <em class="emphasis">line</EM
> over
and over, whenever you want to read the next line from a file.
Once the file has been opened, you can
<span class="link">remove its link (name) from the directory (<a class="linkend" href="ch45_10.htm" webstripperlinkwas="ch45_10.htm" title="Removing a File Once It's Opened&nbsp;- for Security and Easy Cleanup">45.10</A
>)</SPAN
>;
the process can access the file through its descriptor without using the name.</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-53661"></A
>When UNIX starts a new
<span class="link">subprocess (<a class="linkend" href="ch38_03.htm" webstripperlinkwas="ch38_03.htm" title="Managing Processes: Overall Concepts ">38.3</A
>)</SPAN
>,
the open file descriptors are given to
that process.
A subprocess can read or write from file descriptors opened by its parent
process.
A redirected-I/O loop, as in articles
<a class="xref" href="ch45_22.htm" webstripperlinkwas="ch45_22.htm" title="Handling Files Line-by-Line ">45.22</A
>
and
<a class="xref" href="ch45_23.htm" webstripperlinkwas="ch45_23.htm" title="The Ins and Outs of Redirected I/O Loops ">45.23</A
>,
takes advantage of this.</P
></LI
></UL
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">JP</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch45_19.htm" webstripperlinkwas="ch45_19.htm" title="45.19 A while Loop with Several Loop Control Commands "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 45.19 A while Loop with Several Loop Control Commands " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch45_21.htm" webstripperlinkwas="ch45_21.htm" title="45.21 n&gt;&amp;m: Swap Standard Output and Standard Error "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 45.21 n&gt;&amp;m: Swap Standard Output and Standard Error " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">45.19 A while Loop with Several Loop Control Commands </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">45.21 n&gt;&amp;m: Swap Standard Output and Standard Error </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
