<html><head><title>[Chapter 35] 35.10 Splitting Files by Context: csplit </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:48:09Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch35_01.htm" webstripperlinkwas="ch35_01.htm" title="35. You Can't Quite Call This Editing"><link rel="prev" href="ch35_09.htm" webstripperlinkwas="ch35_09.htm" title="35.9 Splitting Files at Fixed Points: split "><link rel="next" href="ch35_11.htm" webstripperlinkwas="ch35_11.htm" title="35.11 Hacking on Characters with tr "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch35_09.htm" webstripperlinkwas="ch35_09.htm" title="35.9 Splitting Files at Fixed Points: split "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 35.9 Splitting Files at Fixed Points: split " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 35<br>You Can't Quite Call This Editing</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch35_11.htm" webstripperlinkwas="ch35_11.htm" title="35.11 Hacking on Characters with tr "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 35.11 Hacking on Characters with tr " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-2890">35.10 Splitting Files by Context: csplit </A
></H2
><table class="para.programreference" border="1"><tr><th valign="TOP"><a class="programreference" href="examples/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/examples/index.htm" title="csplit">csplit</A
><br></TH
><td valign="TOP"><a class="indexterm" name="UPT-ART-2890-IX-CSPLIT-PROGRAM"></A
>Like
<span class="link"><em class="emphasis">split</EM
> (<a class="linkend" href="ch35_09.htm" webstripperlinkwas="ch35_09.htm" title="Splitting Files at Fixed Points: split ">35.9</A
>)</SPAN
>,
<em class="emphasis">csplit</EM
> lets you break a file into smaller pieces,
but <em class="emphasis">csplit</EM
> (context split) also allows the file to be broken into
different-sized pieces, according to context. With <em class="emphasis">csplit</EM
>,

you give the locations (line numbers or search patterns)
at which to break each section.
<em class="emphasis">csplit</EM
> comes with System V, but there are also
freely available versions.</TD
></TR
></TABLE
><p class="para">Let's look at search patterns first.
Suppose you have an outline consisting of three main sections. You could
create a separate file for each section by typing:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>csplit outline /I./ /II./ /III./</B
></CODE
>
28 <i class="lineannotation">number of characters in each file</I
>
415                   .
372                   .
554                   .
% <code class="userinput"><b>ls</B
></CODE
>
outline
xx00   <i class="lineannotation"> outline title, etc.</I
>
xx01   <i class="lineannotation"> Section I</I
>
xx02   <i class="lineannotation"> Section II</I
>
xx03   <i class="lineannotation"> Section III</I
></PRE
></BLOCKQUOTE
></P
><p class="para">This command creates four new files (<em class="emphasis">outline</EM
> remains intact).
<em class="emphasis">csplit</EM
> displays the character counts for each file. Note that
the first file (<em class="emphasis">xx00</EM
>) contains any text up to <em class="emphasis">but not including</EM
> 
the first pattern, and that <em class="emphasis">xx01</EM
> contains the first section, as you'd
expect. This is why the naming scheme begins with <em class="emphasis">00</EM
>.
(Even if <em class="emphasis">outline</EM
> had begun immediately with a <code class="literal">I.</CODE
>,
<em class="emphasis">xx01</EM
> would still contain Section I, but <em class="emphasis">xx00</EM
> would be empty in this
case.)</P
><p class="para">If you don't want to save the text that occurs before a specified pattern,
use a percent sign as the pattern delimiter:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>csplit outline %I.% /II./ /III./</B
></CODE
>
415
372
554
% <code class="userinput"><b>ls</B
></CODE
>
outline
xx00 <i class="lineannotation"> Section I</I
>
xx01 <i class="lineannotation"> Section II</I
>
xx02 <i class="lineannotation"> Section III</I
></PRE
></BLOCKQUOTE
></P
><p class="para">The preliminary text file has been suppressed, and
the created files now begin where the actual outline starts (the file
numbering is off, however).</P
><p class="para">Let's make some further refinements. We'll use the <em class="emphasis">-s</EM
> 
option to suppress the display of the character counts, and we'll use the 
<em class="emphasis">-f</EM
> option to specify a file prefix other than the conventional <em class="emphasis">xx</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>csplit -s -f part. outline /I./ /II./ /III./</B
></CODE
>
% <code class="userinput"><b>ls</B
></CODE
>
outline
part.00
part.01
part.02
part.03</PRE
></BLOCKQUOTE
></P
><p class="para">There's still a slight problem though. In search patterns, a period is a 
<span class="link">metacharacter (<a class="linkend" href="ch26_10.htm" webstripperlinkwas="ch26_10.htm" title="Pattern Matching Quick Reference with Examples ">26.10</A
>)</SPAN
>
that matches any single character, so the pattern 
<code class="literal">/I./</CODE
> may inadvertently
match words like <em class="emphasis">Introduction</EM
>. We need to escape the period with a
backslash; however, the backslash has meaning both to the pattern and to
the shell, so in fact, we need either to use a double backslash or to surround
the pattern in
<span class="link">quotes (<a class="linkend" href="ch08_14.htm" webstripperlinkwas="ch08_14.htm" title="Bourne Shell Quoting ">8.14</A
>)</SPAN
>.
A subtlety, yes, but one that can drive you crazy
if you don't remember it. Our command line becomes:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>csplit -s -f part. outline &quot;/I\./&quot; /II./ /III./</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">You can also break a file at repeated occurrences of the same pattern.
Let's say you have a file that describes 50 ways to cook a chicken,
and you want each method stored in a separate file. Each section begins
with headings <em class="emphasis">WAY #1</EM
>, <em class="emphasis">WAY #2</EM
>, and so on. To divide the file,
use <em class="emphasis">csplit</EM
>'s repeat argument:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>csplit -s -f cook. fifty_ways /^WAY/ &quot;{49}&quot;</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">This command splits the file at the first occurrence of <em class="emphasis">WAY</EM
>,
and the number in braces tells <em class="emphasis">csplit</EM
> to repeat the split 49 more times.
Note that a caret is used to match the beginning of the line and that
the C shell requires quotes around the
<span class="link">braces (<a class="linkend" href="ch09_05.htm" webstripperlinkwas="ch09_05.htm" title="Build Strings with {&nbsp;} ">9.5</A
>)</SPAN
>.
The command has created
50 files:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>ls cook.*</B
></CODE
>
cook.00
cook.01
  ...
cook.48
cook.49</PRE
></BLOCKQUOTE
></P
><p class="para">Quite often, when you want to split a file repeatedly,
you don't know or don't care how many files will be created; you just 
want to make sure that the necessary number of splits takes place.
In this case, it makes sense to specify a repeat count that is slightly higher
than what you need (maximum is 99). Unfortunately, if you tell <em class="emphasis">csplit</EM
> to
create more files than it's able to, this produces an &quot;out of range&quot; error.
Furthermore, when <em class="emphasis">csplit</EM
> encounters an error, it exits by removing any 
files it created along the way. (A bug, if you ask me.) This is where the
<em class="emphasis">-k</EM
> option comes in.
Specify <em class="emphasis">-k</EM
> to <em class="emphasis">k</EM
>eep the files around, even when the &quot;out of range&quot;
message occurs.</P
><p class="para"><em class="emphasis">csplit</EM
> allows you to break a file at some number of lines above or below
a given search pattern. For example, to break a file at the line that is five 
lines below the one containing <em class="emphasis">Sincerely,</EM
> you could type:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>csplit -s -f letter. all_letters /Sincerely/+5</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">This situation might arise if you have a series of business letters
strung together in one file. Each letter begins differently, but each one 
begins five lines after the previous letter's <em class="emphasis">Sincerely</EM
> line.
Here's another example, adapted from AT&amp;T's UNIX <em class="emphasis">User's Reference Manual</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>csplit -s -k -f routine. prog.c '%main(%' '/^}/+1' '{99}'</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The idea is that the file <em class="emphasis">prog.c</EM
> contains a group of C routines,
and we want to place each one in a separate file 
(<em class="emphasis">routine.00</EM
>, <em class="emphasis">routine.01</EM
>, etc.). The first pattern uses <code class="literal">%</CODE
>
because we want to discard anything before <em class="emphasis">main</EM
>. The next argument
says, &quot;Look for a closing brace at the beginning of a line (the conventional
end of a routine) and split on the following line (the assumed beginning of
the next routine).&quot; Repeat this split up to 99 times, using <em class="emphasis">-k</EM
> to 
preserve the created files.
[4]</P
><blockquote class="footnote"><p class="para">[4] In this case, the repeat can actually occur only 98 times, since we've 
already specified two arguments and the maximum number is 100.</P
></BLOCKQUOTE
><p class="para">The <em class="emphasis">csplit</EM
> command takes line-number arguments in addition to patterns.
You can say:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>csplit stuff 50 373 955</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">to create files split at some arbitrary line numbers.
In that example, the new file <em class="emphasis">xx00</EM
>
will have lines 1-49 (49 lines total), <em class="emphasis">xx01</EM
> will have lines
50-372 (323 lines total), <em class="emphasis">xx02</EM
> will have lines 373-954
(582 lines total), and <em class="emphasis">xx03</EM
> will hold the rest of <em class="emphasis">stuff</EM
>.</P
><p class="para"><em class="emphasis">csplit</EM
> works 
like <em class="emphasis">split</EM
> if you repeat the argument. The command:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>csplit top_ten_list 10 &quot;{18}&quot;</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">breaks the list into 19 segments of 10 lines each.
[5]<a class="indexterm" name="AUTOID-40665"></A
><a class="indexterm" name="AUTOID-40666"></A
></P
><blockquote class="footnote"><p class="para">[5] Not really. The first file contains only nine lines (1-9); the rest
contain 10. In this case, you're better off saying 
<code class="literal">split&nbsp;-10&nbsp;top_ten_list</CODE
>.</P
></BLOCKQUOTE
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">DG</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch35_09.htm" webstripperlinkwas="ch35_09.htm" title="35.9 Splitting Files at Fixed Points: split "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 35.9 Splitting Files at Fixed Points: split " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch35_11.htm" webstripperlinkwas="ch35_11.htm" title="35.11 Hacking on Characters with tr "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 35.11 Hacking on Characters with tr " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">35.9 Splitting Files at Fixed Points: split </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">35.11 Hacking on Characters with tr </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
