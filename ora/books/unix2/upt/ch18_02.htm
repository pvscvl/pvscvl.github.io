<html><head><title>[Chapter 18] 18.2 What's Really in a Directory </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:38:51Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch18_01.htm" webstripperlinkwas="ch18_01.htm" title="18. Linking, Renaming, and Copying Files"><link rel="prev" href="ch18_01.htm" webstripperlinkwas="ch18_01.htm" title="18.1 What's So Complicated About Copying Files? "><link rel="next" href="ch18_03.htm" webstripperlinkwas="ch18_03.htm" title="18.3 Files with Two or More Names"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch18_01.htm" webstripperlinkwas="ch18_01.htm" title="18.1 What's So Complicated About Copying Files? "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 18.1 What's So Complicated About Copying Files? " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 18<br>Linking, Renaming, and Copying Files</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch18_03.htm" webstripperlinkwas="ch18_03.htm" title="18.3 Files with Two or More Names"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 18.3 Files with Two or More Names" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-1450">18.2 What's Really in a Directory </A
></H2
><p class="para"><a class="indexterm" name="AUTOID-20082"></A
>Before you can understand moving and copying files, you need to know
a bit more about how files are represented in directories.
What does it mean to say that a file is really &quot;in&quot; a directory?
It's easy to imagine that files are actually inside of something
(some special chunk of the disk that's called a directory).
But that's precisely wrong, and it's one place where the
<span class="link">filing cabinet model (<a class="linkend" href="ch01_19.htm" webstripperlinkwas="ch01_19.htm" title="The Tree Structure of the Filesystem ">1.19</A
>)</SPAN
>
of a filesystem doesn't apply.</P
><p class="para">A directory really is just another file, and really isn't different
from any other data file.
If you want to prove this, try the command<a class="indexterm" name="AUTOID-20087"></A
>
<code class="literal">od&nbsp;-c&nbsp;.</CODE
>; on many UNIX systems,
it dumps the current directory to the screen in raw form.
It will certainly look ugly (it's not a text file&nbsp;- it has lots
of binary characters).
But, if your system allows it,
<span class="link"><em class="emphasis">od&nbsp;-c</EM
> (<a class="linkend" href="ch25_07.htm" webstripperlinkwas="ch25_07.htm" title="Show Non-Printing Characters with cat -v or od -c ">25.7</A
>)</SPAN
>
should let you see the names of the files that are in
the current directory
[and, probably, some names of files that have been deleted!
Sorry, they're only the old directory entries;
<span class="link">you can't get the files back (<a class="linkend" href="ch23_02.htm" webstripperlinkwas="ch23_02.htm" title="rm and Its Dangers ">23.2</A
>)</SPAN
>.
<em class="emphasis">-JP</EM
>].
If <em class="emphasis">od&nbsp;-c</EM
> doesn't work, use <code class="literal">ls&nbsp;-if</CODE
> instead.</P
><p class="para">So a directory is really just a list of files. It contains filenames
and
<span class="link">inode numbers (<a class="linkend" href="ch01_22.htm" webstripperlinkwas="ch01_22.htm" title="How UNIX Keeps Track of Files: Inodes ">1.22</A
>)</SPAN
>.
That is, we can visualize a directory like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">The file named    .          is inode 34346
The file named    ..         is inode 987
The file named    mr.ed      is inode 10674
The file named    joe.txt    is inode 8767
The file named    grok       is inode 67871
The file named    otherdir   is inode 2345</PRE
></BLOCKQUOTE
></P
><p class="para">So when you give a filename like <em class="emphasis">grok</EM
>, the kernel looks up
<em class="emphasis">grok</EM
> in the current directory and finds out that this file has inode
67871; it looks up this inode to find out who owns the file,
where the data blocks are, and so on.</P
><p class="para">What's more, some of these &quot;files&quot; may be directories in their own
right. In particular, that's true of the first two entries:
<code class="literal">.</CODE
>
and <code class="literal">..</CODE
>. These entries are in <em class="emphasis">every</EM
> directory.
Single <code class="literal">.</CODE
> just refers to the current directory, while double <code class="literal">..</CODE
>
refers to the &quot;parent&quot; of the current directory (i.e., the directory
that &quot;contains&quot; the current directory). The file <em class="emphasis">otherdir</EM
> is
yet another directory that happens to be &quot;within&quot; the current directory.
But there's no way you can tell that from its directory entry-UNIX
doesn't know it's different until it looks up its inode.</P
><p class="para">Now that you know what a directory is, let's think about some basic
operations. What does it mean to move, or rename, a file? If the<a class="indexterm" name="AUTOID-20112"></A
><a class="indexterm" name="AUTOID-20114"></A
><a class="indexterm" name="AUTOID-20117"></A
><a class="indexterm" name="AUTOID-20119"></A
><a class="indexterm" name="AUTOID-20123"></A
><a class="indexterm" name="AUTOID-20126"></A
><a class="indexterm" name="AUTOID-20129"></A
><a class="indexterm" name="AUTOID-20131"></A
>
file is staying in the same directory, the <em class="emphasis">mv</EM
> command just 
changes the file's name in the directory; it doesn't touch the data at all.</P
><p class="para">Moving a file into another directory takes a little more work, but not
much. A command like <em class="emphasis">mv&nbsp;dir1/foo&nbsp;dir2/foo</EM
> means &quot;delete <em class="emphasis">foo</EM
>'s
entry in <em class="emphasis">dir1</EM
>, and create a new entry for <em class="emphasis">foo</EM
> in <em class="emphasis">dir2</EM
>.&quot; 
Again, UNIX doesn't have to touch the data blocks or the inode at all.</P
><p class="para"><a class="indexterm" name="AUTOID-20142"></A
>The only time you actually need to copy data is if you're moving a
file into another filesystem. In that case, you have to copy the
file to the new filesystem; delete its old directory entry; return the
file's data blocks to 
the &quot;free list,&quot; which means that they can be re-used; and so on.
It's a fairly complicated operation, but (still) relatively rare.
(On some old versions of UNIX, <em class="emphasis">mv</EM
> won't let you move files
between filesystems.)</P
><p class="para">Now let's see if you've understood. How does UNIX find out the name of
the current directory? In our &quot;current directory,&quot; there's an entry
for <code class="literal">.</CODE
>, which tells us that the current directory has inode
34346. Is the directory's name part of the inode? Sorry&nbsp;- it isn't.
The directory's name is included in the parent directory. The
parent directory is <code class="literal">..</CODE
>, which is inode 987. So UNIX looks up
inode 987, finds out where the data is, and starts reading every entry
in the parent directory. Sooner or later, it will find one that
corresponds to inode 34346. When it does that, it knows that it has found the
directory entry for the current directory, and can read its name.
Article
<a class="xref" href="ch14_04.htm" webstripperlinkwas="ch14_04.htm" title="How Does UNIX Find Your Current Directory? ">14.4</A
>
has a diagram and more explanation.</P
><p class="para">Complicated? Yes, but if you understand this, you have a pretty good
idea of how UNIX directories work.</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">ML</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch18_01.htm" webstripperlinkwas="ch18_01.htm" title="18.1 What's So Complicated About Copying Files? "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 18.1 What's So Complicated About Copying Files? " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch18_03.htm" webstripperlinkwas="ch18_03.htm" title="18.3 Files with Two or More Names"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 18.3 Files with Two or More Names" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">18.1 What's So Complicated About Copying Files? </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">18.3 Files with Two or More Names</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
