<html><head><title>[Chapter 45] 45.34 Arrays in the Bourne Shell </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:55:17Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch45_01.htm" webstripperlinkwas="ch45_01.htm" title="45. Shell Programming for the Initiated"><link rel="prev" href="ch45_33.htm" webstripperlinkwas="ch45_33.htm" title="45.33 Testing Two Strings with One case Statement "><link rel="next" href="ch45_35.htm" webstripperlinkwas="ch45_35.htm" title="45.35 Using a Control Character in a Script "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch45_33.htm" webstripperlinkwas="ch45_33.htm" title="45.33 Testing Two Strings with One case Statement "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 45.33 Testing Two Strings with One case Statement " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 45<br>Shell Programming for the Initiated</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch45_35.htm" webstripperlinkwas="ch45_35.htm" title="45.35 Using a Control Character in a Script "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 45.35 Using a Control Character in a Script " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-0217">45.34 Arrays in the Bourne Shell </A
></H2
><p class="para"><a class="indexterm" name="AUTOID-55082"></A
><a class="indexterm" name="AUTOID-55085"></A
><a class="indexterm" name="AUTOID-55088"></A
><a class="indexterm" name="AUTOID-55091"></A
><a class="indexterm" name="AUTOID-55094"></A
>The
<span class="link">C shell (<a class="linkend" href="ch47_05.htm" webstripperlinkwas="ch47_05.htm" title="Using C Shell Arrays ">47.5</A
>)</SPAN
>,
<span class="link"><em class="emphasis">awk</EM
> (<a class="linkend" href="ch33_11.htm" webstripperlinkwas="ch33_11.htm" title="Quick Reference: awk ">33.11</A
>)</SPAN
>,
the Korn shell, and some other UNIX command
interpreters have built-in array support.
The standard Bourne shell doesn't, though its
command line is a sort-of array that you can store with the
<span class="link"><em class="emphasis">set</EM
> (<a class="linkend" href="ch44_19.htm" webstripperlinkwas="ch44_19.htm" title="The Bourne Shell set Command ">44.19</A
>)</SPAN
>
command&nbsp;- and get stored values through <code class="literal">$1</CODE
>, <code class="literal">$2</CODE
>, etc.</P
><p class="para"><a class="indexterm" name="AUTOID-55105"></A
><a class="indexterm" name="AUTOID-55108"></A
><a class="indexterm" name="AUTOID-55111"></A
>You can store and use Bourne shell variables&nbsp;- with names like <em class="emphasis">array1</EM
>,
<em class="emphasis">array2</EM
>, and so on&nbsp;- to simulate an array with elements 1, 2, and so on.
The
<span class="link"><em class="emphasis">eval</EM
> (<a class="linkend" href="ch08_10.htm" webstripperlinkwas="ch08_10.htm" title="eval: When You Need Another Chance ">8.10</A
>)</SPAN
>
command does the trick.
As an example, if the <em class="emphasis">n</EM
> shell variable stores the array index
(<code class="literal">1</CODE
>, <code class="literal">2</CODE
>, etc.), you can store an element of the array named
<em class="emphasis">part</EM
> with:</P
><p class="para"><blockquote class="screen"><pre class="screen">eval part$n=&quot;<code class="replaceable"><i>value</I
></CODE
>&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">and use its value with:</P
><p class="para"><blockquote class="screen"><pre class="screen">eval echo &quot;The part is \$part$n.&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">You need the extra quoting in that last command because <em class="emphasis">eval</EM
> scans the
command line twice.
The really important part is <code class="literal">\$part$n</CODE
>-on the first pass, the shell
interprets <code class="literal">$n</CODE
>, strips off the backslash, and leaves a line like:</P
><p class="para"><blockquote class="screen"><pre class="screen">echo &quot;The part is $part5.&quot;</PRE
></BLOCKQUOTE
></P
><p class="para">The next pass gives the value of the <em class="emphasis">part5</EM
> variable.</P
><p class="para"><a class="indexterm" name="AUTOID-55137"></A
>To store a line of text with multiple words into these fake array elements, the
<em class="emphasis">set</EM
> command won't work.
A
<span class="link"><em class="emphasis">for</EM
> loop (<a class="linkend" href="ch44_16.htm" webstripperlinkwas="ch44_16.htm" title="Handling Command-Line Arguments with a for Loop ">44.16</A
>)</SPAN
>
usually will.
For example, to read a line of text into the <em class="emphasis">temp</EM
> variable and store
it in an &quot;array&quot; named <em class="emphasis">part</EM
>:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
&#13;



<a class="co" href="ch45_28.htm" webstripperlinkwas="ch45_28.htm" title="45.28 Quick Reference: expr ">expr</A
> 
&#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
echo &quot;Enter the line: \c&quot;
read temp
n=0
for word in $temp
do
n=`expr $n + 1`
   eval part$n=&quot;$word&quot;
done</PRE
></TD
></TR
></TABLE
></P
><p class="para">The first word from <code class="literal">$temp</CODE
> goes into the variable <em class="emphasis">part1</EM
>, the
second into <em class="emphasis">part2</EM
>, and so on.</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">JP</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch45_33.htm" webstripperlinkwas="ch45_33.htm" title="45.33 Testing Two Strings with One case Statement "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 45.33 Testing Two Strings with One case Statement " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch45_35.htm" webstripperlinkwas="ch45_35.htm" title="45.35 Using a Control Character in a Script "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 45.35 Using a Control Character in a Script " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">45.33 Testing Two Strings with One case Statement </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">45.35 Using a Control Character in a Script </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
