<html><head><title>[Chapter 1] 1.28 Some Gotchas with Background Processing </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:31:37Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch01_01.htm" webstripperlinkwas="ch01_01.htm" title="1. Introduction"><link rel="prev" href="ch01_27.htm" webstripperlinkwas="ch01_27.htm" title="1.27 How Background Processing Works "><link rel="next" href="ch01_29.htm" webstripperlinkwas="ch01_29.htm" title="1.29 When Is a File Not a File? "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch01_27.htm" webstripperlinkwas="ch01_27.htm" title="1.27 How Background Processing Works "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 1.27 How Background Processing Works " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 1<br>Introduction</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch01_29.htm" webstripperlinkwas="ch01_29.htm" title="1.29 When Is a File Not a File? "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 1.29 When Is a File Not a File? " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-7730">1.28 Some Gotchas with Background Processing </A
></H2
><ol class="orderedlist"><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2378"></A
>If you're using the Bourne shell, you have to watch out for
putting a series of commands separated by
<span class="link">semicolons (<a class="linkend" href="ch08_05.htm" webstripperlinkwas="ch08_05.htm" title="Command-Line Evaluation ">8.5</A
>)</SPAN
>
into the
background. The Bourne shell puts only the last command on the
line into the background, but waits for the first.</P
><p class="para">An easy way to test this is with the following command line, which
waits for 15 seconds, then does an <em class="emphasis">ls</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>sleep 15; ls &amp;</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">In the Bourne shell, you won't get your prompt back until the
<span class="link"><em class="emphasis">sleep</EM
> (<a class="linkend" href="ch40_02.htm" webstripperlinkwas="ch40_02.htm" title="Waiting a Little While: sleep ">40.2</A
>)</SPAN
>
command has finished.</P
><p class="para">The proper way to put a series of Bourne shell commands into
the background is to group them with parentheses:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
<a class="co" href="ch13_07.htm" webstripperlinkwas="ch13_07.htm" title="13.7 The () Subshell Operators ">( )</A
> </PRE
></TH
><td valign="TOP"><pre class="screen">
$ <code class="userinput"><b>(sleep 15; ls)&amp;</B
></CODE
></PRE
></TD
></TR
></TABLE
></P
><p class="para">This may strike you as a defect, but in fact, it's a sign of
the greater precision of Bourne shell syntax, which makes it
somewhat exasperating for interactive use, but much better for
programming.</P
></LI
><li class="listitem"><p class="para">It doesn't make any sense to run an interactive program such as
an editor in the background. For example, if you type this from the C shell:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>vi &amp;</B
></CODE
>
[1] 3071</PRE
></BLOCKQUOTE
></P
><p class="para">you'll get a message like the following:</P
><p class="para"><blockquote class="screen"><pre class="screen">[1]  + Stopped (tty output) vi</PRE
></BLOCKQUOTE
></P
><p class="para"><em class="emphasis">vi</EM
> can be active only in the foreground. However, it does make
sense to have <em class="emphasis">vi</EM
>
<span class="link">stopped (<a class="linkend" href="ch12_08.htm" webstripperlinkwas="ch12_08.htm" title="Job Control in a Nutshell ">12.8</A
>)</SPAN
>
in the background.</P
><p class="para"><a class="indexterm" name="AUTOID-2409"></A
>If you are running <em class="emphasis">vi</EM
> or any other interactive program, you can quickly get
back to the shell by typing CTRL-z to stop the program.
The shell will take control of your terminal and print another shell prompt.</P
><p class="para"><span class="link">Stopping <em class="emphasis">vi</EM
> (<a class="linkend" href="ch12_04.htm" webstripperlinkwas="ch12_04.htm" title="Job Control and autowrite: Real Time Savers! ">12.4</A
>)</SPAN
>
is more efficient than using its
<span class="link">shell escape mechanism (<a class="linkend" href="ch30_26.htm" webstripperlinkwas="ch30_26.htm" title="Shell Escapes: Running One UNIX Command While Using Another">30.26</A
>)</SPAN
>,
since it lets you go back to your original shell rather than
starting a new one. Simply type <code class="literal">fg</CODE
> to get back to where you
were in editing.</P
></LI
><li class="listitem"><p class="para">We have shared a system with new users who were overenthusiastic
users of background processes, rather like the man who loved loving
so much he sought many lovers. Because each background process is
competing for the same resources, running many of them
can be a drain on the system. This means that everything takes longer
for everyone. We used to have people who thought that if they ran
three
<span class="link"><em class="emphasis">troff</EM
> (<a class="linkend" href="ch43_13.htm" webstripperlinkwas="ch43_13.htm" title="The Text Formatters nroff, troff, ditroff, ... ">43.13</A
>)</SPAN
>
processes at once, they'd get their three files formatted faster than
if they did them one after another. Boy, were they mistaken.
[4]</P
><blockquote class="footnote"><p class="para">[4] In the old days, UNIX systems gave all processes to a single
CPU. Modern UNIX systems can have multiple CPUs. On these
systems, you may do several jobs almost as quickly as one.</P
></BLOCKQUOTE
></LI
><li class="listitem"><p class="para">If you use the Bourne shell,
any background processes you have running will normally
be terminated when you log out. To avoid this, use the
<span class="link"><em class="emphasis">nohup</EM
> (<a class="linkend" href="ch38_18.htm" webstripperlinkwas="ch38_18.htm" title="nohup ">38.18</A
>)</SPAN
><a class="indexterm" name="AUTOID-2427"></A
>
command.</P
></LI
><li class="listitem"><p class="para">Not all processes are created equal. UNIX maintains a queue
of processes ordered by priority. Foreground processes, such
as a user typing a command at a prompt, often receive higher priority than
background processes. However, you
may want to run background processes at an even lower priority, by
using<a class="indexterm" name="AUTOID-2432"></A
>
<span class="link"><em class="emphasis">nice</EM
> (<a class="linkend" href="ch39_09.htm" webstripperlinkwas="ch39_09.htm" title='Know When to Be "nice&quot; to OTher Users...and When' not to'>39.9</A
>)</SPAN
>.
This is a relatively painless way of being kind to other users&nbsp;- and making
your foreground job run faster&nbsp;- though it will make your background tasks take
a little longer.</P
></LI
></OL
><a class="indexterm" name="AUTOID-2437"></A
><a class="indexterm" name="AUTOID-2438"></A
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">TOR</SPAN
>, <span class="authorinitials">DD</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch01_27.htm" webstripperlinkwas="ch01_27.htm" title="1.27 How Background Processing Works "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 1.27 How Background Processing Works " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch01_29.htm" webstripperlinkwas="ch01_29.htm" title="1.29 When Is a File Not a File? "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 1.29 When Is a File Not a File? " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">1.27 How Background Processing Works </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">1.29 When Is a File Not a File? </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
