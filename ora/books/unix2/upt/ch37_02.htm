<html><head><title>[Chapter 37] 37.2 Why Learn Perl? #1 </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:48:50Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch37_01.htm" webstripperlinkwas="ch37_01.htm" title="37. Perl, a Pathologically Eclectic Rubbish Lister"><link rel="prev" href="ch37_01.htm" webstripperlinkwas="ch37_01.htm" title="37.1 What We Do and Don't Tell You About Perl "><link rel="next" href="ch37_03.htm" webstripperlinkwas="ch37_03.htm" title="37.3 Three Great Virtues of a Programmer "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch37_01.htm" webstripperlinkwas="ch37_01.htm" title="37.1 What We Do and Don't Tell You About Perl "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 37.1 What We Do and Don't Tell You About Perl " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 37<br>Perl, a Pathologically Eclectic Rubbish Lister</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch37_03.htm" webstripperlinkwas="ch37_03.htm" title="37.3 Three Great Virtues of a Programmer "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 37.3 Three Great Virtues of a Programmer " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-5561">37.2 Why Learn Perl? #1 </A
></H2
><p class="para"><a class="indexterm" name="UPT-ART-5561-IX-PERL-ADVANTAGES"></A
>Perl is a language for easily manipulating text, files, and processes.
Perl provides a more concise and readable way to do many jobs that were
formerly accomplished (with difficulty) by programming in the C
language or one of the shells.
While this book is primarily intended
for users of the UNIX operating system, Perl runs on several
other operating systems, and provides a portable model of computing
across diverse architectures.</P
><p class="para">In the beginning, Perl was intended to be a data reduction language: a
language for navigating among various files in an arbitrary fashion,
scanning large amounts of text efficiently, invoking commands to
obtain dynamic data, and printing easily formatted reports based on
the information gleaned.
And it does these things quite well&nbsp;- the
pattern matching and textual manipulation capabilities of Perl often
outperform dedicated C programs.
But as Perl developed, it also
became a convenient file manipulation language&nbsp;- that is, a language in
which you can deal with the files themselves apart from their
contents, moving them, renaming them, changing their permissions, and
so on.
And it also became a convenient process manipulation language,
allowing you to create and destroy processes, to control the flow of
data between them, to preprocess their input and postprocess their
output, and to clean up after them when they blow up.
And it became a
networking language, with the ability to communicate to other
processes on other machines via sockets.</P
><p class="para">These things can be done in other languages, such as C or one of the
shells.
But the solutions are difficult and ugly, because C can't
easily do many of the things that a shell can do, and a shell can't do
many of the things that C lets you do.
Perl fills a rather large
niche between them&nbsp;- providing you with those things that are easy to
do in both languages (all in one convenient place), thus bridging the
gap between shell programming and C programming.</P
><p class="para">On the other hand, knowledge of Perl can actually help you in learning
the C language, if that is your goal.
And if you already know C, then
learning Perl will be easy, since the languages are structured quite
similarly.
Perl also shares features with many of the UNIX
utilities that a shell would invoke, and this can ease your learning of
both Perl and UNIX.</P
><p class="para">It has been stated that a language is not worth knowing unless it
teaches you to think differently.  Perl is the exception to that rule
(for those who know UNIX), because much of Perl is derived in
spirit from other portions of UNIX.  To those who merely like
Perl, it is the Practical Extraction and Report Language.  To those
who love it, it's the Pathologically Eclectic Rubbish Lister.  And to
the minimalists in the crowd who think there should only be one way to
do something, Perl looks hopelessly redundant and derivative.  But
somehow, by a grave violation of the minimalistic UNIX toolbox
philosophy, Perl has become the UNIX tool of choice for many
tasks of small-to-medium complexity, and ends up fitting quite happily
back into the toolbox.  Perl can be said to be the toolsmith's
workbench from which new tools are derived.</P
><p class="para">Perl is in many ways a simple language.  The types and structures used
by Perl are easy to use and understand, and you can often tell what a
well-written piece of Perl code is doing just by glancing at it.  You
don't have to know any special incantations to compile a Perl
program&nbsp;- you can just
<span class="link">execute it like a shell script (<a class="linkend" href="ch45_03.htm" webstripperlinkwas="ch45_03.htm" title="Don't Need a Shell for Your Script?  Don't Use One ">45.3</A
>)</SPAN
>.
You don't have to know everything there is to know about Perl before
you can write useful programs.</P
><p class="para">Though simple in many ways, Perl is also a rich language, and there is
much to be learned about it.  Although it will take some time for you
to absorb all that Perl can do, you will be glad that you have access
to the extensive capabilities of Perl when the time comes that you
need them.  We noted above that Perl borrows many capabilities from
the shells and C, but Perl also possesses a strict superset of
<em class="emphasis">sed</EM
> and <em class="emphasis">awk</EM
> capabilities.  There are, in fact, translators
supplied with Perl to turn your old <em class="emphasis">sed</EM
> and <em class="emphasis">awk</EM
> (and
<em class="emphasis">nawk</EM
>, and <em class="emphasis">gawk</EM
>) scripts into Perl scripts, so you can
see how the features you may already be familiar with correspond to
those of Perl.</P
><p class="para">There are other more mundane reasons why people like Perl.  Many
UNIX utilities have undocumented limitations: they don't like
lines longer than <em class="emphasis">n</EM
>, where <em class="emphasis">n</EM
> is some mysterious power of
two, or they blow up if you feed them binary data.  These limitations
are to some extent encouraged by the C language in which they are
written.  Perl, however, does not have these limitations.  Your lines
(and arrays) may grow as long as you like.  Your subroutine recursion
may go as deep as you like.  Variable names can be as long as you
like.  Binary data will not cause problems.  The hashed tables used by
associative arrays expand as necessary to avoid degradation of
performance.  And you can keep them in database files called DBM
files.</P
><p class="para">You might also like to learn Perl because it will allow you to write
programs more securely.  Through a dataflow tracing mechanism, Perl
can determine which data is derived from insecure sources, and prevent
dangerous operations before they happen.  System administrators will
particularly love this feature.</P
><p class="para">You might like Perl because it lets you develop programs quickly.  As
an interpreted script language, you get instant feedback when
something isn't right.  And there's a built-in symbolic debugger that
understands any Perl expression because it's written in Perl (and
because a running Perl script is itself good at executing random bits
of Perl code).</P
><p class="para">People have been calling
Perl a &quot;system administration language&quot; primarily because system
administrators have been talking about it, but we think it has a
much broader appeal.  </P
><p class="para">[Perl is too complex (or should we say &quot;complete&quot;) a language to
describe in this chapter.  There is an extensive manual page on the
disc along with the software, but if what we've said here intrigues
you, you should probably get Larry and Randal's book <em class="emphasis">Programming
Perl</EM
>.  As they say in the preface of the book (from which this
article was taken): &quot;Whether you are learning Perl because you are
curious, or because your boss told you to, this handbook will lead you
through both the basics and the intricacies.  And although we don't
intend to teach you how to program, the perceptive reader will be able
to absorb some of the art, and a little of the science, of
programming.  You will also learn much about UNIX, and how to
balance the benefits of the integrated-tool approach with the benefits
of the toolbox approach.  We will encourage you to develop the three
great virtues of a programmer: laziness, impatience, and hubris.
Along the way, we hope you find the book mildly amusing in some spots
(and wildly amusing in others).  And while we're at it, we firmly
believe that learning Perl will increase the value of your
resume.&quot;-<em class="emphasis">TOR</EM
>&nbsp;]</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">LW, RS</SPAN
> <span class="bibliomisc">from O'Reilly &amp; Associates' <cite class="citetitle">Programming Perl</CITE
></SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch37_01.htm" webstripperlinkwas="ch37_01.htm" title="37.1 What We Do and Don't Tell You About Perl "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 37.1 What We Do and Don't Tell You About Perl " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch37_03.htm" webstripperlinkwas="ch37_03.htm" title="37.3 Three Great Virtues of a Programmer "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 37.3 Three Great Virtues of a Programmer " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">37.1 What We Do and Don't Tell You About Perl </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">37.3 Three Great Virtues of a Programmer </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
