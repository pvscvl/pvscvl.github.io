<html>
<head>
<title>Index</TITLE>
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">
<p><a href="../index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm"><img src="../gifs/smbanns.gif" webstripperlinkwas="../gifs/smbanns.gif" alt="Book Home" border=0></A>

<p><font size="-1">Symbols
| <a href="idx_a.htm" webstripperlinkwas="idx_a.htm">A</A>
| <a href="idx_b.htm" webstripperlinkwas="idx_b.htm">B</A>
| <a href="idx_c.htm" webstripperlinkwas="idx_c.htm">C</A>
| <a href="idx_d.htm" webstripperlinkwas="idx_d.htm">D</A>
| <a href="idx_e.htm" webstripperlinkwas="idx_e.htm">E</A>
| <a href="idx_f.htm" webstripperlinkwas="idx_f.htm">F</A>
| <a href="idx_g.htm" webstripperlinkwas="idx_g.htm">G</A>
| <a href="idx_h.htm" webstripperlinkwas="idx_h.htm">H</A>
| <a href="idx_i.htm" webstripperlinkwas="idx_i.htm">I</A>
| <a href="idx_j.htm" webstripperlinkwas="idx_j.htm">J</A>
| <a href="idx_k.htm" webstripperlinkwas="idx_k.htm">K</A>
| <a href="idx_l.htm" webstripperlinkwas="idx_l.htm">L</A>
| <a href="idx_m.htm" webstripperlinkwas="idx_m.htm">M</A>
| <a href="idx_n.htm" webstripperlinkwas="idx_n.htm">N</A>
| <a href="idx_o.htm" webstripperlinkwas="idx_o.htm">O</A>
| <a href="idx_p.htm" webstripperlinkwas="idx_p.htm">P</A>
| <a href="idx_q.htm" webstripperlinkwas="idx_q.htm">Q</A>
| <a href="idx_r.htm" webstripperlinkwas="idx_r.htm">R</A>
| <a href="idx_s.htm" webstripperlinkwas="idx_s.htm">S</A>
| <a href="idx_t.htm" webstripperlinkwas="idx_t.htm">T</A>
| <a href="idx_u.htm" webstripperlinkwas="idx_u.htm">U</A>
| <a href="idx_v.htm" webstripperlinkwas="idx_v.htm">V</A>
| <a href="idx_w.htm" webstripperlinkwas="idx_w.htm">W</A>
| <a href="idx_x.htm" webstripperlinkwas="idx_x.htm">X</A>
| <a href="idx_y.htm" webstripperlinkwas="idx_y.htm">Y</A>
| <a href="idx_z.htm" webstripperlinkwas="idx_z.htm">Z</A></FONT>

<h1>Index: Symbols and Numbers</H1>

<dl>
<dt><a name=".22batch-editing.22">&quot;batch editing&quot;</A>
: <a href="../ch33_01.htm" webstripperlinkwas="../ch33_01.htm">33. Batch Editing</A>
<dt><a name=".28zero.29-process-id">0 (zero) process ID</A>
: <a href="../ch38_12.htm" webstripperlinkwas="../ch38_12.htm">38.12. Killing All Your Processes </A>
<dt><a name=".2d.31-process-id">-1 process ID</A>
: <a href="../ch38_12.htm" webstripperlinkwas="../ch38_12.htm">38.12. Killing All Your Processes </A>
<dt><a name=".31">1</A>
<dd><dl>
  <dt>C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.1. Assignment Operators </A>
</DL>
<dt><a name=".2en-filename-extension">.n filename extension</A>
: <a href="../ch01_17.htm" webstripperlinkwas="../ch01_17.htm">1.17. Filename Extensions </A>
<dt><a name=".38.2dbit-filenames">8-bit filenames</A>
: <a href="../ch23_15.htm" webstripperlinkwas="../ch23_15.htm">23.15. Using unlink to Remove a File with a Strange Name </A>
<dt><a name="cols-file">80cols file</A>
<dd><dl>
  <dt><a href="../ch42_06.htm" webstripperlinkwas="../ch42_06.htm">42.6.1. Single Line Screen Width: 80cols </A>
  <dt><a href="../ch52_04.htm" webstripperlinkwas="../ch52_04.htm">52.4. Quick Descriptions of What's on the Disc </A>
</DL>
<dt><a name=".39.2dtrack-tapes">9-track tapes</A>
: <a href="../ch20_06.htm" webstripperlinkwas="../ch20_06.htm">20.6. Writing a Tape Drive on a Remote Machine </A>
<dt><a name=".26">&amp; (ampersand)</A>
<dd><dl>
  <dt>&amp;&amp;
: <a href="../ch48_04.htm" webstripperlinkwas="../ch48_04.htm">48.4.3. Automating Your Own Calendar </A>
  <dt>&amp;&amp; C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.3. Bitwise and Logical Operators </A>
  <dt>&amp;&amp; operator
: <a href="../ch44_09.htm" webstripperlinkwas="../ch44_09.htm">44.9. Testing Your Success </A>
  <dd><dl>
    <dt>examples
: <a href="../ch44_09.htm" webstripperlinkwas="../ch44_09.htm">44.9. Testing Your Success </A>
  </DL>
  <dt>&amp;&amp; sequence
: <a href="../ch11_09.htm" webstripperlinkwas="../ch11_09.htm">11.9. Running a Series of Commands on a File </A>
  <dt>&amp;=
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.1. Assignment Operators </A>
  <dt>C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.3. Bitwise and Logical Operators </A>
  <dt>on command line
: <a href="../ch01_27.htm" webstripperlinkwas="../ch01_27.htm">1.27. How Background Processing Works </A>
  <dt>at end of commands
: <a href="../ch38_03.htm" webstripperlinkwas="../ch38_03.htm">38.3. Managing Processes: Overall Concepts </A>
  <dt>escaping special characters using
: <a href="../ch51_03.htm" webstripperlinkwas="../ch51_03.htm">51.3. ASCII Characters: Listing and Getting Values </A>
  <dt>as logical operator for expr
: <a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
  <dt>precedence in C shell
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.2. Expressions </A>
</DL>
<dt><a name=".2a">* (asterisk)</A>
<dd><dl>
  <dt>*= C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.1. Assignment Operators </A>
  <dt>as arithmetic operator for expr
: <a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
  <dt>C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.2. Arithmetic Operators </A>
  <dt>examples
: <a href="../ch50_06.htm" webstripperlinkwas="../ch50_06.htm">50.6. Searching Online Manual Pages </A>
  <dt>filename wildcard
: <a href="../ch15_02.htm" webstripperlinkwas="../ch15_02.htm">15.2. Filename Wildcards in a Nutshell </A>
  <dt>in pcal
: <a href="../ch48_09.htm" webstripperlinkwas="../ch48_09.htm">48.9. PostScript Calendars with pcal </A>
  <dt>precedence in C shell
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.2. Expressions </A>
  <dt>regular expression metacharacter
  <dd><dl>
    <dt><a href="../ch26_03.htm" webstripperlinkwas="../ch26_03.htm">26.3. Understanding Expressions </A>
    <dt><a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.6. Repeating Character Sets with * </A>
  </DL>
  <dt>as wildcard character
: <a href="../ch01_16.htm" webstripperlinkwas="../ch01_16.htm">1.16. Wildcards </A>
</DL>
<dt><a name=".40">@ (at sign)</A>
: <a href="../ch09_05.htm" webstripperlinkwas="../ch09_05.htm">9.5. Build Strings with {&nbsp;} </A>
<dt><a name=".40-commands">@ commands (csh)</A>
<dd><dl>
  <dt><a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.2. Expressions </A>
  <dt><a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.4. Examples</A>
</DL>
<dt><a name=".40.2dfunctions">@-functions (vi)</A>
: <a href="../ch31_04.htm" webstripperlinkwas="../ch31_04.htm">31.4. vi @-Functions </A>
<dt><a name=".5c">\ (backslash)</A>
<dd><dl>
  <dt>\&lt; \&gt; metacharacters
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.8. Matching Words with \&nbsp;&lt; and \&nbsp;&gt; </A>
  <dt>\( \) metacharacters
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.9. Remembering Patterns with \&nbsp;(, \&nbsp;), and \1 </A>
  <dt>\1, \2, ... metacharacters
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.9. Remembering Patterns with \&nbsp;(, \&nbsp;), and \1 </A>
  <dt>\{ \} metacharacters
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.7. Matching a Specific Number of Sets with \&nbsp;{ and \&nbsp;} </A>
  <dt>for avoiding multiline commands
: <a href="../ch09_13.htm" webstripperlinkwas="../ch09_13.htm">9.13. Multiline Commands, Secondary Prompts </A>
  <dt>before newline
  <dd><dl>
    <dt><a href="../ch08_14.htm" webstripperlinkwas="../ch08_14.htm">8.14.4. Multiline Quoting </A>
    <dt><a href="../ch08_15.htm" webstripperlinkwas="../ch08_15.htm">8.15.2. How Quoting Works </A>
  </DL>
  <dt>in C shell scripts
: <a href="../ch44_14.htm" webstripperlinkwas="../ch44_14.htm">44.14. Putting awk, sed, etc., Inside Shell Scripts </A>
  <dt>for escape sequences
: <a href="../ch08_06.htm" webstripperlinkwas="../ch08_06.htm">8.6.1. Portability </A>
  <dt>escaping special characters
: <a href="../ch10_03.htm" webstripperlinkwas="../ch10_03.htm">10.3. C Shell Aliases with Command-Line Arguments </A>
  <dt>placement of
: <a href="../ch08_20.htm" webstripperlinkwas="../ch08_20.htm">8.20. How Many Backslashes?</A>
  <dt>preventing history substitution
: <a href="../ch08_05.htm" webstripperlinkwas="../ch08_05.htm">8.5. Command-Line Evaluation </A>
  <dt>in prompt settings
: <a href="../ch07_12.htm" webstripperlinkwas="../ch07_12.htm">7.12. External Commands Send Signals to Set Variables </A>
  <dt>quoting and
: <a href="../ch08_14.htm" webstripperlinkwas="../ch08_14.htm">8.14.2. How Quoting Works </A>
  <dt>in stty command
: <a href="../ch05_09.htm" webstripperlinkwas="../ch05_09.htm">5.9. Setting Your Erase, Kill, and Interrupt Characters </A>
</DL>
<dt><a name=".60">` (backquotes)</A>
<dd><dl>
  <dt>command substitution
: <a href="../ch09_16.htm" webstripperlinkwas="../ch09_16.htm">9.16. Command Substitution </A>
  <dt>examples
  <dd><dl>
    <dt><a href="../ch44_18.htm" webstripperlinkwas="../ch44_18.htm">44.18. Standard Command-Line Parsing </A>
    <dt><a href="../ch50_03.htm" webstripperlinkwas="../ch50_03.htm">50.3. apropos on Systems Without apropos </A>
  </DL>
  <dt>for loops combined with
: <a href="../ch45_16.htm" webstripperlinkwas="../ch45_16.htm">45.16. Standard Input to a for Loop </A>
  <dt>nesting
: <a href="../ch45_31.htm" webstripperlinkwas="../ch45_31.htm">45.31. Nested Command Substitution </A>
</DL>
<dt><a name=".21">! (bang)</A>
<dd><dl>
  <dt>!* variable
: <a href="../ch10_03.htm" webstripperlinkwas="../ch10_03.htm">10.3. C Shell Aliases with Command-Line Arguments </A>
  <dt>!:script
: <a href="../ch52_04.htm" webstripperlinkwas="../ch52_04.htm">52.4. Quick Descriptions of What's on the Disc </A>
  <dt>!= C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.4. Comparison Operators </A>
  <dt>!= relational operator
: <a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
  <dt>!\*
: <a href="../ch50_08.htm" webstripperlinkwas="../ch50_08.htm">50.8. Which Version Am I Using? </A>
  <dt>automatic temporary files
: <a href="../ch09_18.htm" webstripperlinkwas="../ch09_18.htm">9.18.2. Automatic Temporary Files with ! </A>
  <dt>with brackets wildcards
: <a href="../ch15_02.htm" webstripperlinkwas="../ch15_02.htm">15.2. Filename Wildcards in a Nutshell </A>
  <dt>in C shell quoting
: <a href="../ch08_15.htm" webstripperlinkwas="../ch08_15.htm">8.15.2. How Quoting Works </A>
  <dt>C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.3. Bitwise and Logical Operators </A>
  <dt>history substitution commands
: <a href="../ch11_07.htm" webstripperlinkwas="../ch11_07.htm">11.7. History Substitutions </A>
  <dd><dl>
    <dt>!:n* sequence
    <dd><dl>
      <dt><a href="../ch11_04.htm" webstripperlinkwas="../ch11_04.htm">11.4. My Favorite Is !:n* </A>
      <dt><a href="../ch11_07.htm" webstripperlinkwas="../ch11_07.htm">11.7. History Substitutions </A>
    </DL>
    <dt>!$ sequence
    <dd><dl>
      <dt><a href="../ch10_03.htm" webstripperlinkwas="../ch10_03.htm">10.3. C Shell Aliases with Command-Line Arguments </A>
      <dt><a href="../ch11_03.htm" webstripperlinkwas="../ch11_03.htm">11.3. My Favorite Is !$ </A>
      <dt><a href="../ch11_06.htm" webstripperlinkwas="../ch11_06.htm">11.6. Using !$ for Safety with Wildcards </A>
      <dt><a href="../ch11_07.htm" webstripperlinkwas="../ch11_07.htm">11.7. History Substitutions </A>
    </DL>
  </DL>
  <dt>NOT operator
  <dd><dl>
    <dt><a href="../ch17_01.htm" webstripperlinkwas="../ch17_01.htm#UPT-ART-7410">17.1. The find Command Is Great; The Problem Is Finding How to Use It</A>
    <dt><a href="../ch17_06.htm" webstripperlinkwas="../ch17_06.htm">17.6. Be an Expert on find Search Operators </A>
  </DL>
  <dt>preceding operators
: <a href="../ch05_03.htm" webstripperlinkwas="../ch05_03.htm">5.3. Setting the Terminal Type When You Log In </A>
  <dt>terms for
: <a href="../ch51_08.htm" webstripperlinkwas="../ch51_08.htm">51.8. Type Bang Splat.  Don't Forget the Rabbit Ears </A>
</DL>
<dt><a name=".7b-.7d">{ } (braces)</A>
<dd><dl>
  <dt>{ cmd } C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.3. Bitwise and Logical Operators </A>
  <dt>/{ /} metacharacters
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.11. Extended Regular Expressions </A>
  <dt>\{ \} metacharacters
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.7. Matching a Specific Number of Sets with \&nbsp;{ and \&nbsp;} </A>
  <dt>Bourne shell list operators
: <a href="../ch13_08.htm" webstripperlinkwas="../ch13_08.htm">13.8. Using {list} to Group Bourne Shell Commands </A>
  <dt>building strings
: <a href="../ch09_05.htm" webstripperlinkwas="../ch09_05.htm">9.5. Build Strings with {&nbsp;} </A>
  <dt>in C shell
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.1. Variables </A>
  <dt>creating new files with
: <a href="../ch01_16.htm" webstripperlinkwas="../ch01_16.htm">1.16. Wildcards </A>
  <dt>filename wildcards
  <dd><dl>
    <dt><a href="../ch15_02.htm" webstripperlinkwas="../ch15_02.htm">15.2. Filename Wildcards in a Nutshell </A>
    <dt><a href="../ch15_03.htm" webstripperlinkwas="../ch15_03.htm">15.3. Adding { } Operators to Korn (and Bourne) Shells </A>
  </DL>
  <dt>find -exec command and
: <a href="../ch17_10.htm" webstripperlinkwas="../ch17_10.htm">17.10. Running Commands on What You Find </A>
  <dt>foreach loop and
: <a href="../ch09_11.htm" webstripperlinkwas="../ch09_11.htm">9.11. Repeating a Command with a foreach Loop </A>
  <dt>in shells
: <a href="../ch01_18.htm" webstripperlinkwas="../ch01_18.htm">1.18. Who Handles Wildcards? </A>
  <dt>with variable names
: <a href="../ch06_08.htm" webstripperlinkwas="../ch06_08.htm">6.8. Shell Variables </A>
</DL>
<dt><a name=".5b-.5d">[ ] (brackets)</A>
<dd><dl>
  <dt>[ command
  <dd><dl>
    <dt><a href="../ch46_04.htm" webstripperlinkwas="../ch46_04.htm">46.4. Stop Syntax Errors in Numeric Tests </A>
    <dt><a href="../ch46_05.htm" webstripperlinkwas="../ch46_05.htm">46.5. Stop Syntax Errors in String Tests </A>
  </DL>
  <dt>[ at start of escape sequence
: <a href="../ch05_08.htm" webstripperlinkwas="../ch05_08.htm">5.8. Terminal Escape Sequences </A>
  <dt>fast find and
: <a href="../ch17_18.htm" webstripperlinkwas="../ch17_18.htm">17.18. Using "Fast find&quot;</A>
  <dt>filename wildcards
: <a href="../ch15_02.htm" webstripperlinkwas="../ch15_02.htm">15.2. Filename Wildcards in a Nutshell </A>
  <dt>regular expression metacharacter
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.4. Specifying a Range of Characters with [...] </A>
  <dt>sc program using
: <a href="../ch49_08.htm" webstripperlinkwas="../ch49_08.htm">49.8. It's Great to Have a Spreadsheet </A>
  <dt>wildcards
: <a href="../ch09_04.htm" webstripperlinkwas="../ch09_04.htm">9.4. Use Wildcards to Create Files? </A>
</DL>
<dt><a name=".5e">^ (caret)</A>
<dd><dl>
  <dt>^[
: (see <a href="idx_c.htm" webstripperlinkwas="idx_c.htm">CTRL key</A>)
  <dt>^^ sequence
: <a href="../ch11_05.htm" webstripperlinkwas="../ch11_05.htm">11.5. My Favorite Is ^^ </A>
  <dt>^= C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.1. Assignment Operators </A>
  <dt>^^ sequence
: <a href="../ch11_07.htm" webstripperlinkwas="../ch11_07.htm">11.7. History Substitutions </A>
  <dt>^M
: (see <a href="idx_c.htm" webstripperlinkwas="idx_c.htm">CTRL-m character</A>)
  <dt>C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.3. Bitwise and Logical Operators </A>
  <dt>filename wildcard
: <a href="../ch15_02.htm" webstripperlinkwas="../ch15_02.htm">15.2. Filename Wildcards in a Nutshell </A>
  <dt>in control character
: <a href="../ch41_11.htm" webstripperlinkwas="../ch41_11.htm">41.11.1. Special Character Codes </A>
  <dt>regular expression metacharacter
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.1. The Anchor Characters: ^ and $ </A>
  <dt>within [ ] metacharacters
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.5. Exceptions in a Character Set </A>
</DL>
<dt><a name=".3a">: (colon)</A>
<dd><dl>
  <dt>:p operator
: <a href="../ch11_10.htm" webstripperlinkwas="../ch11_10.htm">11.10. Check Your History First with :p </A>
  <dt>as alternative to #
: <a href="../ch45_09.htm" webstripperlinkwas="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A>
  <dt>as comment character
: <a href="../ch45_09.htm" webstripperlinkwas="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A>
  <dt>as parameter substitute
: <a href="../ch45_09.htm" webstripperlinkwas="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A>
  <dt>colon-separated lists
: <a href="../ch04_10.htm" webstripperlinkwas="../ch04_10.htm">4.10. Find All Command Versions with whereiz </A>
  <dt>examples
: <a href="../ch44_18.htm" webstripperlinkwas="../ch44_18.htm">44.18. Standard Command-Line Parsing </A>
  <dt>if loops using
: <a href="../ch45_09.htm" webstripperlinkwas="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A>
  <dt>as logical operator for expr
  <dd><dl>
    <dt><a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
    <dt><a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28.1. Examples </A>
  </DL>
  <dt>as null character
: <a href="../ch44_08.htm" webstripperlinkwas="../ch44_08.htm">44.8. Test Exit Status with the if Statement </A>
  <dt>as parameter substitute
: <a href="../ch45_12.htm" webstripperlinkwas="../ch45_12.htm">45.12. Parameter Substitution </A>
  <dt>separating fields
  <dd><dl>
    <dt><a href="../ch01_09.htm" webstripperlinkwas="../ch01_09.htm">1.9. Which Shell Am I Running? </A>
    <dt><a href="../ch05_06.htm" webstripperlinkwas="../ch05_06.htm">5.6. Checklist: Terminal Hangs When I Log In </A>
  </DL>
  <dt>separating values
: <a href="../ch05_03.htm" webstripperlinkwas="../ch05_03.htm">5.3. Setting the Terminal Type When You Log In </A>
  <dt>shell script comments
: <a href="../ch45_02.htm" webstripperlinkwas="../ch45_02.htm">45.2. The Story of  : #  #! </A>
  <dt>string editing operator
: <a href="../ch09_06.htm" webstripperlinkwas="../ch09_06.htm">9.6. String Editing (Colon) Operators </A>
  <dt>trap used with
: <a href="../ch45_08.htm" webstripperlinkwas="../ch45_08.htm">45.8. Handling Signals to Child Processes </A>
  <dt>while loops using
: <a href="../ch45_09.htm" webstripperlinkwas="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A>
</DL>
<dt><a name=".2c">, (comma) in filenames</A>
: <a href="../ch01_15.htm" webstripperlinkwas="../ch01_15.htm">1.15. Filenames </A>
<dt><a name=".24">$ (dollar sign)</A>
<dd><dl>
  <dt>$0 parameter
: <a href="../ch44_22.htm" webstripperlinkwas="../ch44_22.htm">44.22. Finding a Program Name; Multiple Program Names </A>
  <dt>$1 command-line arguments
  <dd><dl>
    <dt><a href="../ch44_11.htm" webstripperlinkwas="../ch44_11.htm">44.11. Set Exit Status of a Shell (Script) </A>
    <dt><a href="../ch44_12.htm" webstripperlinkwas="../ch44_12.htm">44.12. Trapping Exits Caused by Interrupts </A>
    <dt><a href="../ch44_15.htm" webstripperlinkwas="../ch44_15.htm">44.15. Handling Command-Line Arguments in Shell Scripts </A>
  </DL>
  <dt>$* argument
: <a href="../ch45_30.htm" webstripperlinkwas="../ch45_30.htm">45.30.1. Matching with expr </A>
  <dt>$@ argument
: <a href="../ch45_30.htm" webstripperlinkwas="../ch45_30.htm">45.30.1. Matching with expr </A>
  <dt>$! variable
: <a href="../ch47_02.htm" webstripperlinkwas="../ch47_02.htm">47.2.5. Variable Syntax </A>
  <dt>$$ command-line arguments
: <a href="../ch44_12.htm" webstripperlinkwas="../ch44_12.htm">44.12. Trapping Exits Caused by Interrupts </A>
  <dt>$# command-line argument
: <a href="../ch44_15.htm" webstripperlinkwas="../ch44_15.htm">44.15.3. Counting Arguments with $# </A>
  <dt>$&lt; variable
: <a href="../ch47_02.htm" webstripperlinkwas="../ch47_02.htm">47.2.1.2. Reading Files </A>
  <dt>$() command
: <a href="../ch45_31.htm" webstripperlinkwas="../ch45_31.htm">45.31. Nested Command Substitution </A>
  <dt>$? variable
: <a href="../ch47_02.htm" webstripperlinkwas="../ch47_02.htm">47.2.1.4. More Elaborate Combinations </A>
  <dt>$*
: <a href="../ch46_07.htm" webstripperlinkwas="../ch46_07.htm">46.7. Quoting and Command-Line Parameters </A>
  <dt>$@
: <a href="../ch46_07.htm" webstripperlinkwas="../ch46_07.htm">46.7. Quoting and Command-Line Parameters </A>
  <dd><dl>
    <dt>passing arguments to getopt
: <a href="../ch44_18.htm" webstripperlinkwas="../ch44_18.htm">44.18. Standard Command-Line Parsing </A>
  </DL>
  <dt>$@ argument
: <a href="../ch44_15.htm" webstripperlinkwas="../ch44_15.htm">44.15.1. With the  $@"</A>
  <dt>as wildcard
: <a href="../ch44_06.htm" webstripperlinkwas="../ch44_06.htm">44.6. Pattern Matching in case Statements </A>
  <dt>Bourne shell script variable
: <a href="../ch44_07.htm" webstripperlinkwas="../ch44_07.htm">44.7. Exit Status of UNIX Processes </A>
  <dt>in C shells
: <a href="../ch47_05.htm" webstripperlinkwas="../ch47_05.htm">47.5. Using C Shell Arrays </A>
  <dt>quoting and
: <a href="../ch08_14.htm" webstripperlinkwas="../ch08_14.htm">8.14.2. How Quoting Works </A>
  <dt>regular expression metacharacter
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.1. The Anchor Characters: ^ and $ </A>
  <dt>with variable names
: <a href="../ch06_08.htm" webstripperlinkwas="../ch06_08.htm">6.8. Shell Variables </A>
</DL>
<dt><a name=".24.2d-test">$- test</A>
: <a href="../ch02_11.htm" webstripperlinkwas="../ch02_11.htm">2.11. Faster ksh and bash Startup with $- Test </A>
<dt><a name=".2e">. (dot)</A>
<dd><dl>
  <dt>. command, subroutines compared to
: <a href="../ch44_23.htm" webstripperlinkwas="../ch44_23.htm">44.23. Reading Files with the . and source Commands </A>
  <dt>. scripts
: <a href="../ch44_23.htm" webstripperlinkwas="../ch44_23.htm">44.23. Reading Files with the . and source Commands </A>
  <dt>.. for parent directory
: <a href="../ch18_04.htm" webstripperlinkwas="../ch18_04.htm">18.4.2. Links to a Directory </A>
  <dt>for current directory
: <a href="../ch18_04.htm" webstripperlinkwas="../ch18_04.htm">18.4.2. Links to a Directory </A>
  <dt>in filenames
  <dd><dl>
    <dt><a href="../ch01_15.htm" webstripperlinkwas="../ch01_15.htm">1.15. Filenames </A>
    <dt><a href="../ch01_16.htm" webstripperlinkwas="../ch01_16.htm">1.16. Wildcards </A>
  </DL>
  <dt>filenames starting with
: (see <a href="idx_d.htm" webstripperlinkwas="idx_d.htm#dot-files">dot files</A>)
  <dt>in pathnames
: <a href="../ch01_21.htm" webstripperlinkwas="../ch01_21.htm">1.21. Making Pathnames </A>
  <dt>regular expression metacharacter
  <dd><dl>
    <dt><a href="../ch26_03.htm" webstripperlinkwas="../ch26_03.htm">26.3. Understanding Expressions </A>
    <dt><a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.3. Match any Character with . (Dot) </A>
  </DL>
  <dt>terms for
: <a href="../ch51_08.htm" webstripperlinkwas="../ch51_08.htm">51.8. Type Bang Splat.  Don't Forget the Rabbit Ears </A>
</DL>
<dt><a name=".3d">= (equal sign)</A>
<dd><dl>
  <dt>== C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.4. Comparison Operators </A>
  <dt>=~ C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.4. Comparison Operators </A>
  <dt>for alias definitions
: <a href="../ch10_04.htm" webstripperlinkwas="../ch10_04.htm">10.4. Aliases in ksh and bash </A>
  <dt>as arithmetic operator for expr
: <a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28.1. Examples </A>
  <dt>C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.1. Assignment Operators </A>
  <dt>as relational operator for expr
  <dd><dl>
    <dt><a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
    <dt><a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28.1. Examples </A>
  </DL>
</DL>
<dt><a name=".23"># (hash mark)</A>
<dd><dl>
  <dt>: (colon) used in place of
: <a href="../ch45_09.htm" webstripperlinkwas="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A>
  <dt>#!
  <dd><dl>
    <dt>Bourne shell scripts using
: <a href="../ch44_04.htm" webstripperlinkwas="../ch44_04.htm">44.4. Testing How Your System Executes Files </A>
  </DL>
  <dt><a name=".23.21-notation">#! notation</A>
  <dd><dl>
    <dt><a href="../ch08_17.htm" webstripperlinkwas="../ch08_17.htm">8.17. verbose and echo Variables Show Quoting </A>
    <dt><a href="../ch45_02.htm" webstripperlinkwas="../ch45_02.htm">45.2. The Story of  : #  #! </A>
    <dt><a href="../ch45_04.htm" webstripperlinkwas="../ch45_04.htm">45.4. Fun with #! </A>
    <dt>in Bourne shell scripts
: <a href="../ch44_02.htm" webstripperlinkwas="../ch44_02.htm">44.2. Writing a Simple Shell Program </A>
    <dt>character limit
: <a href="../ch45_04.htm" webstripperlinkwas="../ch45_04.htm">45.4. Fun with #! </A>
    <dt>examples
    <dd><dl>
      <dt><a href="../ch45_03.htm" webstripperlinkwas="../ch45_03.htm">45.3. Don't Need a Shell for Your Script?  Don't Use One </A>
      <dt><a href="../ch45_04.htm" webstripperlinkwas="../ch45_04.htm">45.4. Fun with #! </A>
    </DL>
    <dt>executing files without showing
: <a href="../ch45_05.htm" webstripperlinkwas="../ch45_05.htm">45.5. A File That Shows Itself... and What #! Does </A>
    <dt>making programs executable
: <a href="../ch45_04.htm" webstripperlinkwas="../ch45_04.htm">45.4. Fun with #! </A>
  </DL>
  <dt>alternatives to
: <a href="../ch45_09.htm" webstripperlinkwas="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A>
  <dt>for comments
: <a href="../ch10_02.htm" webstripperlinkwas="../ch10_02.htm">10.2.1. Simple Aliases </A>
  <dt>in crontab entries
: <a href="../ch40_12.htm" webstripperlinkwas="../ch40_12.htm">40.12.1. Execution Scheduling </A>
  <dt>shell script comments
: <a href="../ch45_02.htm" webstripperlinkwas="../ch45_02.htm">45.2. The Story of  : #  #! </A>
</DL>
<dt><a name=".2d">- (hyphen)</A>
<dd><dl>
  <dt>-= C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.1. Assignment Operators </A>
  <dt>-- (two dashes) as argument to set command
: <a href="../ch44_19.htm" webstripperlinkwas="../ch44_19.htm">44.19. The Bourne Shell set Command </A>
  <dt>- as dashes
: <a href="../ch44_18.htm" webstripperlinkwas="../ch44_18.htm">44.18. Standard Command-Line Parsing </A>
  <dt>as arithmetic operator for expr
: <a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
  <dt>C shell operator
  <dd><dl>
    <dt><a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.1. Assignment Operators </A>
    <dt><a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.2. Arithmetic Operators </A>
  </DL>
  <dt>command-line arguments starting with
  <dd><dl>
    <dt><a href="../ch44_16.htm" webstripperlinkwas="../ch44_16.htm">44.16. Handling Command-Line Arguments with a for Loop </A>
    <dt><a href="../ch44_17.htm" webstripperlinkwas="../ch44_17.htm">44.17. Handling Arguments with while and shift </A>
  </DL>
  <dt>filenames starting with
: <a href="../ch23_14.htm" webstripperlinkwas="../ch23_14.htm">23.14. Handling a Filename Starting with a Dash (-) </A>
  <dt>with &lt;&lt; operator
: <a href="../ch08_18.htm" webstripperlinkwas="../ch08_18.htm">8.18. Here Documents </A>
  <dt>in login shell
: <a href="../ch02_16.htm" webstripperlinkwas="../ch02_16.htm">2.16. Approved Shells: Using Unapproved Login Shell </A>
  <dt>precedence in C shell
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.2. Expressions </A>
  <dt>for stdin (on command line)
: <a href="../ch13_13.htm" webstripperlinkwas="../ch13_13.htm">13.13. The "Filename&quot; - </A>
</DL>
<dt><a name=".3c">&lt; (left angle bracket)</A>
<dd><dl>
  <dt>&lt;= C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.4. Comparison Operators </A>
  <dt>&lt;= relational operator
: <a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
  <dt>&lt;&lt; C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.3. Bitwise and Logical Operators </A>
  <dt>&lt;&lt; operator
  <dd><dl>
    <dt><a href="../ch08_18.htm" webstripperlinkwas="../ch08_18.htm">8.18. Here Documents </A>
    <dt><a href="../ch19_02.htm" webstripperlinkwas="../ch19_02.htm">19.2. Introduction to Shell Archives </A>
  </DL>
  <dt>&lt;&lt;- operator
  <dd><dl>
    <dt><a href="../ch08_18.htm" webstripperlinkwas="../ch08_18.htm">8.18. Here Documents </A>
    <dt><a href="../ch09_14.htm" webstripperlinkwas="../ch09_14.htm">9.14. Using Here Documents for Form Letters, etc. </A>
  </DL>
  <dt>/&lt; /&gt; metacharacters
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.11. Extended Regular Expressions </A>
  <dt>\&lt; \&gt; metacharacters
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.8. Matching Words with \&nbsp;&lt; and \&nbsp;&gt; </A>
  <dt>C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.4. Comparison Operators </A>
  <dt>examples
: <a href="../ch48_04.htm" webstripperlinkwas="../ch48_04.htm">48.4.3. Automating Your Own Calendar </A>
  <dt>precedence in C shell
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.2. Expressions </A>
  <dt>as relational operator for expr
: <a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
</DL>
<dt><a name=".28-.29">( ) (parentheses)</A>
<dd><dl>
  <dt>\( \) metacharacters
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.9. Remembering Patterns with \&nbsp;(, \&nbsp;), and \1 </A>
  <dt>in extended regular expressions
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.11. Extended Regular Expressions </A>
  <dt>grouping expressions using
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.2. Expressions </A>
  <dt>as operators
: <a href="../ch02_02.htm" webstripperlinkwas="../ch02_02.htm">2.2. Shell Setup Files-Which, Where, and Why </A>
  <dt>subshell operators
: <a href="../ch13_07.htm" webstripperlinkwas="../ch13_07.htm">13.7. The () Subshell Operators </A>
</DL>
<dt><a name=".25">% (percent sign)</A>
<dd><dl>
  <dt>%= C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.1. Assignment Operators </A>
  <dt>as arithmetic operator for expr
: <a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
  <dt>C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.2. Arithmetic Operators </A>
  <dt>default C shell prompt
: <a href="../ch07_01.htm" webstripperlinkwas="../ch07_01.htm#UPT-ART-4820">7.1. Why Change Your Prompt? </A>
  <dt>for job numbers
  <dd><dl>
    <dt><a href="../ch12_01.htm" webstripperlinkwas="../ch12_01.htm#UPT-ART-439-SECT-1.1">12.1.1. Foreground and Background </A>
    <dt><a href="../ch12_03.htm" webstripperlinkwas="../ch12_03.htm">12.3. The "Current Job&quot; Isn't Always What You Expect</A>
  </DL>
  <dt>precedence in C shell
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.2. Expressions </A>
</DL>
<dt><a name=".2b">+ (plus sign)</A>
<dd><dl>
  <dt>+= C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.1. Assignment Operators </A>
  <dt>as arithmetic operator for expr
  <dd><dl>
    <dt><a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
    <dt><a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28.1. Examples </A>
  </DL>
  <dt>C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.2. Arithmetic Operators </A>
  <dt>in job reports
: <a href="../ch12_01.htm" webstripperlinkwas="../ch12_01.htm#UPT-ART-439-SECT-1.1">12.1.1. Foreground and Background </A>
  <dt>precedence in C shell
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.2. Expressions </A>
  <dt>regular expression metacharacter
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.11. Extended Regular Expressions </A>
</DL>
<dt><a name=".3f">? (question mark)</A>
<dd><dl>
  <dt>?*) wildcard
: <a href="../ch44_06.htm" webstripperlinkwas="../ch44_06.htm">44.6. Pattern Matching in case Statements </A>
  <dt>?) wildcard
: <a href="../ch44_06.htm" webstripperlinkwas="../ch44_06.htm">44.6. Pattern Matching in case Statements </A>
  <dt>Bourne shell script variable
: <a href="../ch44_07.htm" webstripperlinkwas="../ch44_07.htm">44.7. Exit Status of UNIX Processes </A>
  <dt>examples
: <a href="../ch47_05.htm" webstripperlinkwas="../ch47_05.htm">47.5. Using C Shell Arrays </A>
  <dt>fast find and
: <a href="../ch17_18.htm" webstripperlinkwas="../ch17_18.htm">17.18. Using "Fast find&quot;</A>
  <dt>filename wildcard
: <a href="../ch15_02.htm" webstripperlinkwas="../ch15_02.htm">15.2. Filename Wildcards in a Nutshell </A>
  <dt>foreach loop and
: <a href="../ch09_11.htm" webstripperlinkwas="../ch09_11.htm">9.11. Repeating a Command with a foreach Loop </A>
  <dt>in C shells
: <a href="../ch47_05.htm" webstripperlinkwas="../ch47_05.htm">47.5. Using C Shell Arrays </A>
  <dt>regular expression metacharacter
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.11. Extended Regular Expressions </A>
  <dt>shell variable
: <a href="../ch06_09.htm" webstripperlinkwas="../ch06_09.htm">6.9. Special C Shell Variables </A>
  <dt>as wildcard character
: <a href="../ch01_16.htm" webstripperlinkwas="../ch01_16.htm">1.16. Wildcards </A>
</DL>
<dt><a name=".27">' (single quotes)</A>
: <a href="../ch08_14.htm" webstripperlinkwas="../ch08_14.htm">8.14.3. Single Quotes Inside Single Quotes? </A>
<dd><dl>
  <dt>around PS1 string
: <a href="../ch07_08.htm" webstripperlinkwas="../ch07_08.htm">7.8. Highlighting in Shell Prompts </A>
  <dt>with bash pre-prompt commands
: <a href="../ch07_13.htm" webstripperlinkwas="../ch07_13.htm">7.13. Pre-Prompt Commands in bash </A>
  <dt>passing wildcards to programs
: <a href="../ch01_18.htm" webstripperlinkwas="../ch01_18.htm">1.18. Who Handles Wildcards? </A>
  <dt>prompt setting and
: <a href="../ch07_04.htm" webstripperlinkwas="../ch07_04.htm">7.4. Faster Prompt Setting with Built-Ins </A>
  <dt>protecting special characters
: <a href="../ch10_03.htm" webstripperlinkwas="../ch10_03.htm">10.3. C Shell Aliases with Command-Line Arguments </A>
  <dt>quoting and
  <dd><dl>
    <dt><a href="../ch08_14.htm" webstripperlinkwas="../ch08_14.htm">8.14.2. How Quoting Works </A>
    <dt><a href="../ch08_15.htm" webstripperlinkwas="../ch08_15.htm">8.15. Differences Between Bourne and C Shell Quoting </A>
  </DL>
  <dt>sc program using
: <a href="../ch49_08.htm" webstripperlinkwas="../ch49_08.htm">49.8. It's Great to Have a Spreadsheet </A>
</DL>
<dt><a name=".22">&quot; (double quotes)</A>
<dd><dl>
  <dt>aliases in
: <a href="../ch10_02.htm" webstripperlinkwas="../ch10_02.htm">10.2.2. Using More Complex Aliases </A>
  <dt>for comments
: <a href="../ch04_09.htm" webstripperlinkwas="../ch04_09.htm">4.9. Setting Up vi with the .exrc File </A>
  <dt>passing wildcards to programs
: <a href="../ch01_18.htm" webstripperlinkwas="../ch01_18.htm">1.18. Who Handles Wildcards? </A>
  <dt>prompt setting
: <a href="../ch07_08.htm" webstripperlinkwas="../ch07_08.htm">7.8. Highlighting in Shell Prompts </A>
  <dt>quoting and
  <dd><dl>
    <dt><a href="../ch08_14.htm" webstripperlinkwas="../ch08_14.htm">8.14.2. How Quoting Works </A>
    <dt><a href="../ch08_15.htm" webstripperlinkwas="../ch08_15.htm">8.15. Differences Between Bourne and C Shell Quoting </A>
  </DL>
  <dt>sc program using
: <a href="../ch49_08.htm" webstripperlinkwas="../ch49_08.htm">49.8. It's Great to Have a Spreadsheet </A>
  <dt>in sed scripts
: <a href="../ch51_06.htm" webstripperlinkwas="../ch51_06.htm">51.6. Cleaning script Files </A>
  <dt>terms for
: <a href="../ch51_08.htm" webstripperlinkwas="../ch51_08.htm">51.8. Type Bang Splat.  Don't Forget the Rabbit Ears </A>
</DL>
<dt><a name=".3e">&gt; (right angle bracket)</A>
<dd><dl>
  <dt>&gt;=
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.4. Comparison Operators </A>
  <dt>&gt;&amp; operator
: <a href="../ch13_05.htm" webstripperlinkwas="../ch13_05.htm">13.5. Redirection in C Shell: Capture Errors, Too? </A>
  <dt>&gt;= relational operator
  <dd><dl>
    <dt><a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
    <dt><a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28.1. Examples </A>
  </DL>
  <dt>&gt;&gt; C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.3. Bitwise and Logical Operators </A>
  <dt>&gt;&gt; for appending files
: <a href="../ch45_22.htm" webstripperlinkwas="../ch45_22.htm">45.22. Handling Files Line-by-Line </A>
  <dt>C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.4. Comparison Operators </A>
  <dt>precedence in C shell
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.2. Expressions </A>
  <dt>redirection operator
: <a href="../ch06_09.htm" webstripperlinkwas="../ch06_09.htm">6.9. Special C Shell Variables </A>
  <dt>as relational operator for expr
: <a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
</DL>
<dt><a name=".3b">; (semicolon)</A>
<dd><dl>
  <dt>on command line
: <a href="../ch08_05.htm" webstripperlinkwas="../ch08_05.htm">8.5. Command-Line Evaluation </A>
  <dt>separating commands
: <a href="../ch44_12.htm" webstripperlinkwas="../ch44_12.htm">44.12. Trapping Exits Caused by Interrupts </A>
</DL>
<dt><a name=".2f">/ (slash)</A>
<dd><dl>
  <dt>/*/ wildcard
: <a href="../ch44_06.htm" webstripperlinkwas="../ch44_06.htm">44.6. Pattern Matching in case Statements </A>
  <dt>/{ /} metacharacters
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.11. Extended Regular Expressions </A>
  <dt>/= C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.1. Assignment Operators </A>
  <dt>/&lt; /&gt; metacharacters
: <a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.11. Extended Regular Expressions </A>
  <dt>as arithmetic operator for expr
  <dd><dl>
    <dt><a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
    <dt><a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28.1. Examples </A>
  </DL>
  <dt>C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.2. Arithmetic Operators </A>
  <dt>fast find and
: <a href="../ch17_18.htm" webstripperlinkwas="../ch17_18.htm">17.18. Using "Fast find&quot;</A>
  <dt>in filenames
  <dd><dl>
    <dt><a href="../ch01_15.htm" webstripperlinkwas="../ch01_15.htm">1.15. Filenames </A>
    <dt><a href="../ch01_16.htm" webstripperlinkwas="../ch01_16.htm">1.16. Wildcards </A>
  </DL>
  <dt>in pathnames
  <dd><dl>
    <dt><a href="../ch01_21.htm" webstripperlinkwas="../ch01_21.htm">1.21. Making Pathnames </A>
    <dt><a href="../ch14_02.htm" webstripperlinkwas="../ch14_02.htm">14.2. Using Relative and Absolute Pathnames </A>
  </DL>
  <dt>precedence in C shell
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.2. Expressions </A>
  <dt>for root directory
: <a href="../ch01_19.htm" webstripperlinkwas="../ch01_19.htm">1.19. The Tree Structure of the Filesystem </A>
  <dt>terms for
: <a href="../ch51_08.htm" webstripperlinkwas="../ch51_08.htm">51.8. Type Bang Splat.  Don't Forget the Rabbit Ears </A>
</DL>
<dt><a name=".7e">~ (tilde)</A>
<dd><dl>
  <dt>C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.3. Bitwise and Logical Operators </A>
  <dt>ending filenames
: <a href="../ch14_11.htm" webstripperlinkwas="../ch14_11.htm">14.11. Finding (Anyone's) Home Directory, Quickly </A>
  <dt>filenames ending with
: <a href="../ch17_18.htm" webstripperlinkwas="../ch17_18.htm">17.18. Using "Fast find&quot;</A>
  <dt>for home directory
  <dd><dl>
    <dt><a href="../ch07_11.htm" webstripperlinkwas="../ch07_11.htm">7.11. dirs in Your Prompt: Better than $cwd </A>
    <dt><a href="../ch14_11.htm" webstripperlinkwas="../ch14_11.htm">14.11. Finding (Anyone's) Home Directory, Quickly </A>
  </DL>
  <dt>in pathnames
: <a href="../ch01_21.htm" webstripperlinkwas="../ch01_21.htm">1.21. Making Pathnames </A>
</DL>
<dt><a name=".5f">_ (underscore) in filenames</A>
: <a href="../ch01_15.htm" webstripperlinkwas="../ch01_15.htm">1.15. Filenames </A>
<dt><a name=".7c">| (vertical bar)</A>
<dd><dl>
  <dt><a href="../ch26_04.htm" webstripperlinkwas="../ch26_04.htm">26.4.11. Extended Regular Expressions </A>
  <dt><a href="../ch44_07.htm" webstripperlinkwas="../ch44_07.htm">44.7. Exit Status of UNIX Processes </A>
  <dt><a href="../ch44_18.htm" webstripperlinkwas="../ch44_18.htm">44.18. Standard Command-Line Parsing </A>
  <dt>(see also <a href="idx_p.htm" webstripperlinkwas="idx_p.htm#pipelines">pipelines</A>)
  <dt>|&amp; operator
  <dd><dl>
    <dt><a href="../ch13_03.htm" webstripperlinkwas="../ch13_03.htm">13.3. Send (only) Standard Error Down a Pipe </A>
    <dt><a href="../ch13_05.htm" webstripperlinkwas="../ch13_05.htm">13.5. Redirection in C Shell: Capture Errors, Too? </A>
  </DL>
  <dt>|= C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.1. Assignment Operators </A>
  <dt>|| operator
  <dd><dl>
    <dt><a href="../ch44_08.htm" webstripperlinkwas="../ch44_08.htm">44.8. Test Exit Status with the if Statement </A>
    <dt><a href="../ch44_09.htm" webstripperlinkwas="../ch44_09.htm">44.9. Testing Your Success </A>
    <dt><a href="../ch44_18.htm" webstripperlinkwas="../ch44_18.htm">44.18. Standard Command-Line Parsing </A>
    <dt><a href="../ch46_06.htm" webstripperlinkwas="../ch46_06.htm">46.6. Watch Out for Bourne Shell -e Bug </A>
    <dt><a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.3. Bitwise and Logical Operators </A>
    <dt>examples
: <a href="../ch44_09.htm" webstripperlinkwas="../ch44_09.htm">44.9. Testing Your Success </A>
    <dt>inverse of a condition
: <a href="../ch44_08.htm" webstripperlinkwas="../ch44_08.htm">44.8. Test Exit Status with the if Statement </A>
  </DL>
  <dt>C shell operator
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.3.3. Bitwise and Logical Operators </A>
  <dt>as logical operator for expr
: <a href="../ch45_28.htm" webstripperlinkwas="../ch45_28.htm">45.28. Quick Reference: expr </A>
  <dt>noclobber variable and
: <a href="../ch13_06.htm" webstripperlinkwas="../ch13_06.htm">13.6. Safe I/O Redirection with noclobber </A>
  <dt>pipes
: <a href="../ch01_03.htm" webstripperlinkwas="../ch01_03.htm">1.3. Programs Are Designed to Work Together </A>
  <dt>piping commands
: <a href="../ch13_03.htm" webstripperlinkwas="../ch13_03.htm">13.3. Send (only) Standard Error Down a Pipe </A>
  <dt>precedence in C shell
: <a href="../ch47_04.htm" webstripperlinkwas="../ch47_04.htm">47.4.2. Expressions </A>
  <dt>|| operator
: <a href="../ch45_06.htm" webstripperlinkwas="../ch45_06.htm">45.6. Making Sure Your Script Runs with Bourne Shell, Without #! </A>
</DL>
</DL>

<p>
<hr width="515" align="LEFT">

<p><font size="-1">Symbols
| <a href="idx_a.htm" webstripperlinkwas="idx_a.htm">A</A>
| <a href="idx_b.htm" webstripperlinkwas="idx_b.htm">B</A>
| <a href="idx_c.htm" webstripperlinkwas="idx_c.htm">C</A>
| <a href="idx_d.htm" webstripperlinkwas="idx_d.htm">D</A>
| <a href="idx_e.htm" webstripperlinkwas="idx_e.htm">E</A>
| <a href="idx_f.htm" webstripperlinkwas="idx_f.htm">F</A>
| <a href="idx_g.htm" webstripperlinkwas="idx_g.htm">G</A>
| <a href="idx_h.htm" webstripperlinkwas="idx_h.htm">H</A>
| <a href="idx_i.htm" webstripperlinkwas="idx_i.htm">I</A>
| <a href="idx_j.htm" webstripperlinkwas="idx_j.htm">J</A>
| <a href="idx_k.htm" webstripperlinkwas="idx_k.htm">K</A>
| <a href="idx_l.htm" webstripperlinkwas="idx_l.htm">L</A>
| <a href="idx_m.htm" webstripperlinkwas="idx_m.htm">M</A>
| <a href="idx_n.htm" webstripperlinkwas="idx_n.htm">N</A>
| <a href="idx_o.htm" webstripperlinkwas="idx_o.htm">O</A>
| <a href="idx_p.htm" webstripperlinkwas="idx_p.htm">P</A>
| <a href="idx_q.htm" webstripperlinkwas="idx_q.htm">Q</A>
| <a href="idx_r.htm" webstripperlinkwas="idx_r.htm">R</A>
| <a href="idx_s.htm" webstripperlinkwas="idx_s.htm">S</A>
| <a href="idx_t.htm" webstripperlinkwas="idx_t.htm">T</A>
| <a href="idx_u.htm" webstripperlinkwas="idx_u.htm">U</A>
| <a href="idx_v.htm" webstripperlinkwas="idx_v.htm">V</A>
| <a href="idx_w.htm" webstripperlinkwas="idx_w.htm">W</A>
| <a href="idx_x.htm" webstripperlinkwas="idx_x.htm">X</A>
| <a href="idx_y.htm" webstripperlinkwas="idx_y.htm">Y</A>
| <a href="idx_z.htm" webstripperlinkwas="idx_z.htm">Z</A></FONT>

<p><a href="../../copyrght.htm" webstripperlinkwas="../../copyrght.htm">Copyright</A> &copy; 1998
 <a href="../../../../../../../../www.oreilly.com/">O'Reilly &amp; Associates, Inc.</A>
All Rights Reserved.
</HTML>
<p><img src="../../gifs/smnavbar.gif" webstripperlinkwas="../../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="../index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
>
</BODY>
</HTML>
