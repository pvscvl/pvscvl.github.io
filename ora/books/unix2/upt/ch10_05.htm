<html><head><title>[Chapter 10] 10.5 Sourceable Scripts </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:35:49Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch10_01.htm" webstripperlinkwas="ch10_01.htm" title="10. Aliases"><link rel="prev" href="ch10_04.htm" webstripperlinkwas="ch10_04.htm" title="10.4 Aliases in ksh and bash "><link rel="next" href="ch10_06.htm" webstripperlinkwas="ch10_06.htm" title="10.6 Avoiding C Shell Alias Loops "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_04.htm" webstripperlinkwas="ch10_04.htm" title="10.4 Aliases in ksh and bash "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 10.4 Aliases in ksh and bash " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 10<br>Aliases</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_06.htm" webstripperlinkwas="ch10_06.htm" title="10.6 Avoiding C Shell Alias Loops "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 10.6 Avoiding C Shell Alias Loops " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-5600">10.5 Sourceable Scripts </A
></H2
><p class="para"><a class="indexterm" name="UPT-ART-5600-IX-SOURCEABLE-SCRIPTS-DESCRIBED"></A
><a class="indexterm" name="UPT-ART-5600-IX-SCRIPTS-SOURCEABLE"></A
>A powerful concept in <em class="emphasis">csh</EM
> is that of aliases. Another great
capability is shell scripts. Each has its strengths. An alias is just
right for common sequences of commands, calling a command by a different
name, and so on.
Scripts are great for more flexible processing and batch processing.
There are limitations to both, and I will show a way around them.</P
><p class="para">The limitation to aliases is that you are working pretty much with
one command line. Consider this example:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias pp 'set o2=$cwd; popd; set old=$o2; dir_number; record_dir pp; \\
  prompt_set; set cd_attempt=(\!*); if ($#cd_attempt &gt; 0) cd $cd_attempt'</PRE
></BLOCKQUOTE
></P
><p class="para">Now this works fine for me, and it served me well for a few years
and thousands of invocations, but it's at the point where I start thinking that
a script is more suited to the job. This brings me to the limitation
of scripts...</P
><p class="para">Shell scripts are great for accomplishing some task that might change
a file, start a program, etc. They are limited by the fact that
any changes they make to shell or environment variables
<span class="link">are not visible (<a class="linkend" href="ch38_03.htm" webstripperlinkwas="ch38_03.htm" title="Managing Processes: Overall Concepts ">38.3</A
>)</SPAN
>
to the parent shell that started them.
In other words, you can write some
really cool script that will change directories for you if you don't
touch the keyboard for five seconds, but once the script exits, you are
still in the same place you started.</P
><p class="para">The answer is to combine the best of both worlds. Consider this:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
<a class="co" href="ch47_05.htm" webstripperlinkwas="ch47_05.htm" title="47.5 Using C Shell Arrays ">( )</A
> </PRE
></TH
><td valign="TOP"><pre class="screen">
alias pp 'set cd_attempt=(\!*); source ~/bin/pp_csh'</PRE
></TD
></TR
></TABLE
></P
><p class="para">We set up a variable and source a script. The concept
is this: put your command-line arguments into a variable and then
<span class="link"><em class="emphasis">source</EM
> (<a class="linkend" href="ch44_23.htm" webstripperlinkwas="ch44_23.htm" title="Reading Files with the . and source Commands ">44.23</A
>)</SPAN
>
a script in order to accomplish something. The difference here is that
because you are not starting a
<span class="link">subshell (<a class="linkend" href="ch38_04.htm" webstripperlinkwas="ch38_04.htm" title="Subshells ">38.4</A
>)</SPAN
>
for the script, it can do everything
an alias can and more. This is much like
<span class="link">Bourne shell functions (<a class="linkend" href="ch10_09.htm" webstripperlinkwas="ch10_09.htm" title="Shell Functions ">10.9</A
>)</SPAN
>.</P
><p class="para">Some hints on using this technique:</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><b class="emphasis.bold">Naming:</B
>
I like to name the script that is doing all of the
work after the alias, with <em class="emphasis">_csh</EM
> or <em class="emphasis">.csh</EM
> at the end of its
name. I put all of the scripts in my
<span class="link"><em class="emphasis">~/bin</EM
> (<a class="linkend" href="ch04_02.htm" webstripperlinkwas="ch04_02.htm" title="A bin Directory for Your Programs and Scripts ">4.2</A
>)</SPAN
>.
[Instead of names ending in <em class="emphasis">.csh</EM
>, I put mine in a directory named
<em class="emphasis">~/.lib/csh</EM
>. <em class="emphasis">-JP</EM
>&nbsp;]</P
></LI
><li class="listitem"><p class="para"><b class="emphasis.bold">Feedback:</B
>
You don't want to execute the script directly. You want
to source it.
Here's a good first line that detects this:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
<a class="co" href="ch45_05.htm" webstripperlinkwas="ch45_05.htm" title="45.5 A File That Shows Itself... and What #! Does ">#!</A
> </PRE
></TH
><td valign="TOP"><pre class="screen">
#! /bin/echo sorry,try:source</PRE
></TD
></TR
></TABLE
></P
><p class="para"></P
></LI
><li class="listitem"><p class="para"><b class="emphasis.bold">Usage statement:</B
>
Check the variable that you expect to see from the alias.
If it isn't there, you can show a usage statement, and
do a <em class="emphasis">goto</EM
> to the end of the script:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
<a class="co" href="ch47_04.htm" webstripperlinkwas="ch47_04.htm" title="47.4 C Shell Variable Operators and Expressions ">$#</A
> 
<a class="co" href="ch08_18.htm" webstripperlinkwas="ch08_18.htm" title="8.18 Here Documents ">&lt;&lt;</A
> 






&#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
if ($#lg_args == 0) then
1
usage: lg [-a][-p] pattern [command]
    -a  lists all (.dot files)
    -p  pipe resulting list into command
+++
    goto lg_end
endif
   ...
lg_end:</PRE
></TD
></TR
></TABLE
></P
><p class="para"></P
></LI
><li class="listitem"><p class="para"><b class="emphasis.bold">Alias options:</B
>
You aren't limited to what an alias can do, since you are
sourcing a script. You gain some flexibility here. Here's one way of
handling options:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
&#13;
<a class="co" href="ch47_06.htm" webstripperlinkwas="ch47_06.htm" title="47.6 Quick Reference: C Shell switch Statement ">switch</A
> <a class="co" href="ch47_05.htm" webstripperlinkwas="ch47_05.htm" title="47.5 Using C Shell Arrays ">[1]</A
> 

<a class="co" href="ch06_08.htm" webstripperlinkwas="ch06_08.htm" title="6.8 Shell Variables ">set</A
> 
<a class="co" href="ch47_05.htm" webstripperlinkwas="ch47_05.htm" title="47.5 Using C Shell Arrays ">shift</A
> 






&#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
unset ls_arg
while (! $?ls_arg)
    switch (&quot;$lg_args[1]&quot;)
        case &quot;-a&quot;:
            set ls_arg=&quot;-a&quot;
            shift lg_args
        case &quot;-p&quot;:
            set use_pipe
            shift lg_args
        default:
            set ls_arg
            breaksw
    endsw
end</PRE
></TD
></TR
></TABLE
></P
></LI
></UL
><p class="para">Have fun with this! You may find yourself tossing some old aliases
and rewriting them as sourceable scripts. They're also easier to maintain.<a class="indexterm" name="AUTOID-11997"></A
><a class="indexterm" name="AUTOID-11998"></A
></P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">DS</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_04.htm" webstripperlinkwas="ch10_04.htm" title="10.4 Aliases in ksh and bash "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 10.4 Aliases in ksh and bash " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_06.htm" webstripperlinkwas="ch10_06.htm" title="10.6 Avoiding C Shell Alias Loops "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 10.6 Avoiding C Shell Alias Loops " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">10.4 Aliases in ksh and bash </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10.6 Avoiding C Shell Alias Loops </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
