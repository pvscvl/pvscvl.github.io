<html><head><title>[Chapter 9] 9.24 Get File List by Editing Output of ls -l, grep, etc. </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:35:31Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch09_01.htm" webstripperlinkwas="ch09_01.htm" title="9. Saving Time on the Command Line"><link rel="prev" href="ch09_23.htm" webstripperlinkwas="ch09_23.htm" title='9.23 Workaround for "Arguments too long&quot; Error'><link rel="next" href="ch09_25.htm" webstripperlinkwas="ch09_25.htm" title="9.25 The C Shell repeat Command "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_23.htm" webstripperlinkwas="ch09_23.htm" title='9.23 Workaround for "Arguments too long&quot; Error'><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt='Previous: 9.23 Workaround for "Arguments too long&quot; Error' border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 9<br>Saving Time on the Command Line</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_25.htm" webstripperlinkwas="ch09_25.htm" title="9.25 The C Shell repeat Command "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 9.25 The C Shell repeat Command " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-7630">9.24 Get File List by Editing Output of ls -l, grep, etc. </A
></H2
><p class="para"><a class="indexterm" name="AUTOID-11252"></A
><a class="indexterm" name="AUTOID-11255"></A
><a class="indexterm" name="AUTOID-11258"></A
><a class="indexterm" name="AUTOID-11261"></A
><a class="indexterm" name="AUTOID-11264"></A
>It seems like I'm always using <em class="emphasis">ls</EM
>-also, usually, <em class="emphasis">-l</EM
> and
maybe other options&nbsp;- to find out which of my files I need to do
something to.
I also use <em class="emphasis">grep</EM
> or one of the
<span class="link">other <em class="emphasis">grep</EM
>s (<a class="linkend" href="ch27_01.htm" webstripperlinkwas="ch27_01.htm#UPT-ART-7420" title="Different Versions of grep ">27.1</A
>)</SPAN
>
to search for files that have certain text in them.
No matter what command I use, I
<span class="link">redirect the output (<a class="linkend" href="ch13_01.htm" webstripperlinkwas="ch13_01.htm#UPT-ART-1023" title="Using Standard Input and Output">13.1</A
>)</SPAN
>
to a
<span class="link">temporary file (<a class="linkend" href="ch21_02.htm" webstripperlinkwas="ch21_02.htm" title="A Better Place for Temporary Files: /tmp ">21.2</A
>, <a class="linkend" href="ch21_03.htm" webstripperlinkwas="ch21_03.htm" title="Unique Names for Temporary Files ">21.3</A
>)</SPAN
>
and then edit the file.
After the editing, I have a list of filenames that I can use inside
<span class="link">backquotes (<a class="linkend" href="ch09_16.htm" webstripperlinkwas="ch09_16.htm" title="Command Substitution ">9.16</A
>)</SPAN
>
with some other command&nbsp;- or store in a
<span class="link">shell variable (<a class="linkend" href="ch06_08.htm" webstripperlinkwas="ch06_08.htm" title="Shell Variables ">6.8</A
>)</SPAN
>.</P
><p class="para">Here are two examples.
These show the <em class="emphasis">vi</EM
> editor, but you can use any other UNIX editor
that handles plain text files.
Depending on what you need, there are probably UNIX utilities that can help.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-7630-SECT-1.1">9.24.1 What Files Have I Just Edited? </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-11281"></A
>While I was working on this book, my current directory could have around
1000 files.
If I wanted to find out which files I'd edited today, I would use
<span class="link"><em class="emphasis">ls -lt</EM
> (<a class="linkend" href="ch16_02.htm" webstripperlinkwas="ch16_02.htm" title="Finding Oldest or Newest Files with ls -t and ls -u ">16.2</A
>)</SPAN
>
to get a listing of files with the most recently modified
listed first.
Edit the file, delete all lines except files I'd edited today, then
remove everything from each line except the filename.
Finally, use backquotes and
<span class="link"><em class="emphasis">rcp</EM
> (<a class="linkend" href="ch01_33.htm" webstripperlinkwas="ch01_33.htm" title="UNIX Networking and Communications ">1.33</A
>)</SPAN
>
to copy the files to the <em class="emphasis">ptbackup</EM
> directory on the <em class="emphasis">fserver</EM
>
computer:</P
><ol class="orderedlist"><li class="listitem"><p class="para">Make the file list and start the editor:</P
><p class="para"><table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
&#13;<a class="co" href="ch11_03.htm" webstripperlinkwas="ch11_03.htm" title="11.3 My Favorite Is !$ ">!$</A
> &#13;</PRE
></TH
><td valign="TOP"><pre class="screen">
% <code class="userinput"><b>ls -lt &gt; /tmp/bk$$</B
></CODE
>
% <code class="userinput"><b>vi !$</B
></CODE
>
vi /tmp/bk28182</PRE
></TD
></TR
></TABLE
></P
></LI
><li class="listitem"><p class="para">Delete all lines except the ones for files from February 29:</P
><p class="para"><blockquote class="screen"><pre class="screen">total 4294                                           <i class="lineannotation">&lt;&lt; delete</I
>
-rw-r--r--  1 jerry        1529 Feb 29 17:25 a7630
-rw-r--r--  1 jerry        1864 Feb 29 16:29 a0147
   ...<i class="lineannotation">Keep these lines</I
>...
-rw-r--r--  1 jerry        1772 Feb 29 09:01 a1900
-rw-r--r--  1 jerry        2693 Feb 29 08:51 a0031
-rw-r--r--  1 jerry         744 Feb 28 23:35 a7600   <i class="lineannotation">&lt;&lt; delete</I
>
-rw-r--r--  1 jerry        1957 Feb 28 22:18 a5210   <i class="lineannotation">&lt;&lt; delete</I
>
   ...<i class="lineannotation">Delete the rest</I
>...</PRE
></BLOCKQUOTE
></P
><p class="para"></P
></LI
><li class="listitem"><p class="para">In <em class="emphasis">vi</EM
>, use the
<span class="link"><code class="literal">|</CODE
> (vertical bar) command (<a class="linkend" href="ch30_34.htm" webstripperlinkwas="ch30_34.htm" title="vi Line Commands vs. Character Commands ">30.34</A
>)</SPAN
>
to find the column
number just before the filenames start.
For example, here's where the commands <code class="literal">30|</CODE
>, <code class="literal">39|</CODE
>,
and <code class="literal">45|</CODE
> moved the cursor:</P
><p class="para"><blockquote class="screen"><pre class="screen">-rw-r--r--  1 jerry        1529 Feb 29 17:25 a7630
                           30^      39^   45^</PRE
></BLOCKQUOTE
></P
><p class="para"></P
></LI
><li class="listitem"><p class="para">So, I want to delete columns 1-45 from every line.
The easiest way is a
<span class="link">filter-through (<a class="linkend" href="ch30_22.htm" webstripperlinkwas="ch30_22.htm" title="Filtering Text Through a UNIX Command ">30.22</A
>)</SPAN
>
with
<span class="link"><em class="emphasis">colrm&nbsp;1&nbsp;45</EM
> (<a class="linkend" href="ch35_15.htm" webstripperlinkwas="ch35_15.htm" title="Cutting Columns with colrm ">35.15</A
>)</SPAN
>
or
<span class="link"><em class="emphasis">cut -c46-</EM
> (<a class="linkend" href="ch35_14.htm" webstripperlinkwas="ch35_14.htm" title="Cutting Columns or Fields with cut ">35.14</A
>)</SPAN
>:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="userinput"><b>:%!cut -c46-</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para"></P
></LI
><li class="listitem"><p class="para">Now the file looks like this&nbsp;- just the filenames:</P
><p class="para"><blockquote class="screen"><pre class="screen">a7630
a0147
...
a1900
a0031</PRE
></BLOCKQUOTE
></P
><p class="para">I can sort it with
<code class="literal">:%!sort</CODE
>
if I want to&nbsp;- or do more editing.
Then I write the file and quit.</P
></LI
><li class="listitem"><p class="para">Feed the list of filenames to the UNIX command I want to run:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>rcp `cat /tmp/bk$$` fserver:ptbackup</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">This works with most any UNIX command&nbsp;- not just <em class="emphasis">rcp</EM
>.
For example, if I want to print the files, I can use:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>lpr `cat /tmp/bk$$`</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para"></P
></LI
><li class="listitem"><p class="para">If I'll be doing a lot of work with the filenames, typing the backquotes
over and over is a pain.
I'll store the filenames in a
<span class="link">shell variable (<a class="linkend" href="ch06_08.htm" webstripperlinkwas="ch06_08.htm" title="Shell Variables ">6.8</A
>)</SPAN
>:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">First, pick a name for the shell variable.
I usually choose <em class="emphasis">temp</EM
> because it's not used on my account.
You should check the name you choose before you set it by typing <code class="literal">echo</CODE
>
<code class="literal">&quot;$</CODE
><code class="replaceable"><i>varname</I
></CODE
><code class="literal">&quot;</CODE
>; be sure it's empty or useless.</P
></LI
><li class="listitem"><p class="para">Store the filenames from your temporary file:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>set temp=(`cat /tmp/bk$$`)</B
></CODE
> <i class="lineannotation">...C shells</I
> 
$ <code class="userinput"><b>temp=&quot;`cat /tmp/bk$$`&quot;</B
></CODE
> <i class="lineannotation">...Bourne shells</I
></PRE
></BLOCKQUOTE
></P
><p class="para"></P
></LI
><li class="listitem"><p class="para">Use the shell variable.
For example:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>cp $temp</B
></CODE
><code class="replaceable"><i> backupdir</I
></CODE
>
% <code class="userinput"><b>vi $temp</B
></CODE
>
% ...</PRE
></BLOCKQUOTE
></P
></LI
></UL
></LI
></OL
><p class="para">(Sometimes,
<span class="link"><em class="emphasis">find</EM
> with operators like <em class="emphasis">-newer</EM
> (<a class="linkend" href="ch17_08.htm" webstripperlinkwas="ch17_08.htm" title="Exact File Time Comparisons ">17.8</A
>)</SPAN
>
is easier&nbsp;- but <em class="emphasis">find</EM
> searches subdirectories too,
unless you use
<span class="link"><em class="emphasis">-prune</EM
> (<a class="linkend" href="ch17_23.htm" webstripperlinkwas="ch17_23.htm" title="Finding Files with -prune ">17.23</A
>)</SPAN
>.)
Oh, try to remember to <em class="emphasis">rm</EM
> the temp file when you're 
done with it.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-7630-SECT-1.2">9.24.2 Search for Text with grep </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-11385"></A
><a class="indexterm" name="AUTOID-11388"></A
>The <em class="emphasis">grep</EM
>
<span class="link"><em class="emphasis">-l</EM
> option (<a class="linkend" href="ch15_07.htm" webstripperlinkwas="ch15_07.htm" title="Getting a List of Matching Files with grep -l ">15.7</A
>)</SPAN
>
gives you a list of filenames that match a string&nbsp;- that might be all I
need.
But sometimes I need to see the lines that <em class="emphasis">grep</EM
> found to decide
whether to include that file or not.
Here's how:</P
><ol class="orderedlist"><li class="listitem"><p class="para">Search the files.
Be sure that your <em class="emphasis">grep</EM
>-like command will print the filename before
each matching line:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>egrep -i &quot;summar(y|ies)&quot; * &gt; /tmp/bk$$</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para"></P
></LI
><li class="listitem"><p class="para">Edit the temporary file.
The lines will look something like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">a0066:Here is a summary of the different components:
a0183:Summary: String functions in awk
a0183:for a summary of all the string functions
a0184:Let's start wlth a short summary how awk treats command
a1000:Here's a summary of the rules that UNIX uses to interpret paths:
a1000:Here's a summary of the different sorts of wildcards available:
a1680:cumulative summary files and ASCII reports in 
a2710:In summary, \fIcomm\fP is similar to \fIdiff\fP:
   ...</PRE
></BLOCKQUOTE
></P
><p class="para">Leave a line for each file that you want to operate on; delete the rest:</P
><p class="para"><blockquote class="screen"><pre class="screen">a0066:Here is a summary of the different components:
a0183:Summary: String functions in awk
a1000:Here's a summary of the different sorts of wildcards available:
   ...</PRE
></BLOCKQUOTE
></P
><p class="para"></P
></LI
><li class="listitem"><p class="para">Strip off everything after the filenames.
Unless any of your filenames have colons (<code class="literal">:</CODE
>) in them, you
can tell <em class="emphasis">vi</EM
> to strip off the colons and everything after them.
That command is:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="userinput"><b>:%s/:.*//</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">If there's a chance that a filename might be repeated (because
<em class="emphasis">grep</EM
> matched more than one line), filter the filenames through
<em class="emphasis">sort -u</EM
> to get rid of duplicates.
In <em class="emphasis">vi</EM
>, type:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="userinput"><b>:%!sort -u</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">Like before, what's left is a list of filenames:</P
><p class="para"><blockquote class="screen"><pre class="screen">a0066
a0183
a1000
    ...</PRE
></BLOCKQUOTE
></P
><p class="para">&#13;You can feed them to whatever command you need to run, as in the
previous example.</P
></LI
></OL
><p class="para">I hope those two examples give you the idea, which is: learn what UNIX utilities
are &quot;out there&quot;-and how to grab and edit their output to do what you want.</P
></DIV
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">JP</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_23.htm" webstripperlinkwas="ch09_23.htm" title='9.23 Workaround for "Arguments too long&quot; Error'><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt='Previous: 9.23 Workaround for "Arguments too long&quot; Error' border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch09_25.htm" webstripperlinkwas="ch09_25.htm" title="9.25 The C Shell repeat Command "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 9.25 The C Shell repeat Command " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">9.23 Workaround for "Arguments too long&quot; Error</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">9.25 The C Shell repeat Command </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
