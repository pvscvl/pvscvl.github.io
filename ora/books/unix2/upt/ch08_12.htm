<html><head><title>[Chapter 8] 8.12 Which One Will the C Shell Use? </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:34:26Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch08_01.htm" webstripperlinkwas="ch08_01.htm" title="8. How the Shell Interprets What You Type"><link rel="prev" href="ch08_11.htm" webstripperlinkwas="ch08_11.htm" title="8.11 Which One Will bash Use? "><link rel="next" href="ch08_13.htm" webstripperlinkwas="ch08_13.htm" title='8.13 Is It "2&gt;&amp;1 file&quot; or "&gt; file 2&gt;&amp;1&quot;? Why?'></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_11.htm" webstripperlinkwas="ch08_11.htm" title="8.11 Which One Will bash Use? "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 8.11 Which One Will bash Use? " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 8<br>How the Shell Interprets What You Type</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_13.htm" webstripperlinkwas="ch08_13.htm" title='8.13 Is It "2&gt;&amp;1 file&quot; or "&gt; file 2&gt;&amp;1&quot;? Why?'><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt='Next: 8.13 Is It "2&gt;&amp;1 file&quot; or "&gt; file 2&gt;&amp;1&quot;? Why?' border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-6060">8.12 Which One Will the C Shell Use? </A
></H2
><p class="para">[Article
<a class="xref" href="ch08_11.htm" webstripperlinkwas="ch08_11.htm" title="Which One Will bash Use? ">8.11</A
><a class="indexterm" name="AUTOID-8254"></A
>
shows how to control whether <i class="filename">bash</I
> uses a built-in
command, a shell function, or an external command.
The way you do that in the C shell is a little, errr, different.<a class="indexterm" name="AUTOID-8258"></A
>
Chris Torek explains why, for example, <code class="literal">\rm</CODE
> disables an alias
for <i class="filename">rm</I
> and <code class="literal">\cd</CODE
> disables the built-in <i class="filename">cd</I
> command.
He starts with a fairly complex explanation, then gives some practical
guidelines.
At the end is a &quot;review&quot; that's easy to follow and fun too. -JP]</P
><p class="para"><a class="indexterm" name="AUTOID-8265"></A
><a class="indexterm" name="AUTOID-8267"></A
>The C shell first breaks each input line into a <em class="emphasis">word vector</EM
>.
It then matches against aliases.
Since <code class="literal">\rm</CODE
> does not match <code class="literal">rm</CODE
>, any alias is ignored.
Eventually the C shell fully applies any quoting
(since an alias can include quotes, some of this work must be deferred;
since an alias can include multiple words, more word vector work must
be done as well; it all gets rather hairy).</P
><p class="para">The C shell implements quoting by setting the 8th bit (bit 7) of each
byte of a quoted character.
Since <code class="literal">'*'|0x80</CODE
> [a character <em class="emphasis">OR</EM
>ed with 80 hex a.k.a.
10000000 binary-<em class="emphasis">JP</EM
>&nbsp;] is not the same character as <code class="literal">'*'</CODE
>,
this prevents file name expansion, further word breaking, and so on.</P
><p class="para">Eventually, the shell has a fully &quot;parsed&quot; line.
It then compares <code class="literal">word[0]</CODE
> [the first word on the command
line-<em class="emphasis">JP</EM
>&nbsp;] against all the built-ins.
If there is a match, it runs the corresponding built-in command
(and it is up to that command to expand any remaining words;
for instance, <code class="literal">ls&nbsp;*</CODE
> in a directory containing
only the file <em class="emphasis">-l</EM
> produces a long listing, but <code class="literal">jobs&nbsp;*</CODE
>
produces a usage message).
If not, the shell performs globbing [filename wildcard expansion-<em class="emphasis">JP</EM
>&nbsp;]
on the current word list, producing a new word list, and then:</P
><ol class="orderedlist"><li class="listitem"><p class="para">strips the 8th bit of each byte of each word</P
></LI
><li class="listitem"><p class="para"><em class="emphasis">exec</EM
>()s the resulting command.</P
></LI
></OL
><p class="para">This means that:</P
><p class="para"><blockquote class="screen"><pre class="screen">\cd</PRE
></BLOCKQUOTE
></P
><p class="para">not only bypasses any alias, but also reaches the built-in scanner as:</P
><p class="para"><blockquote class="screen"><pre class="screen">'c'|0x80, 'd', '\0'</PRE
></BLOCKQUOTE
></P
><p class="para">which does not match the built-in command:</P
><p class="para"><blockquote class="screen"><pre class="screen">'c', 'd', '\0'</PRE
></BLOCKQUOTE
></P
><p class="para">and so does not run the <em class="emphasis">cd</EM
> builtin.
It is later stripped and the shell looks for an external program called
<em class="emphasis">cd</EM
>.</P
><p class="para">If you want to avoid alias substitution, but not built-in matching,
you can replace:</P
><p class="para"><blockquote class="screen"><pre class="screen">\cd foo   <em class="emphasis">or</EM
>   \rm foo</PRE
></BLOCKQUOTE
></P
><p class="para">with:</P
><p class="para"><blockquote class="screen"><pre class="screen">''cd foo   <em class="emphasis">or</EM
>   &quot;&quot;rm foo</PRE
></BLOCKQUOTE
></P
><p class="para">These do not match the aliases&nbsp;- during alias scanning they
have quote pairs in front of them&nbsp;- but do match any builtin
since the quotes have by then been stripped (setting bit&nbsp;7 of
all the characters contained between the two quotes, here none).</P
><p class="para">Incidentally, since alias expansion occurs early, you can do
some peculiar things with it:</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>[</B
></CODE
>
Missing ].
% <code class="userinput"><b>alias [ echo foo</B
></CODE
>
% <code class="userinput"><b>[</B
></CODE
>
foo</PRE
></BLOCKQUOTE
></P
><p class="para">(alias expansion occurs before globbing)</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>unalias [</B
></CODE
>
unalias: Missing ].</PRE
></BLOCKQUOTE
></P
><p class="para">(unalias globs its arguments!)</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>unalias \[</B
></CODE
>
% <code class="userinput"><b>alias unalias echo foo</B
></CODE
>
unalias: Too dangerous to alias that.</PRE
></BLOCKQUOTE
></P
><p class="para">(the C shell attempts caution...)</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>alias \unalias echo foo</B
></CODE
>
% <code class="userinput"><b>alias</B
></CODE
>
unalias   (echo foo)
% <code class="userinput"><b>unalias unalias</B
></CODE
>
foo unalias</PRE
></BLOCKQUOTE
></P
><p class="para">(but fails!)</P
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>''unalias unalias</B
></CODE
>
% <code class="userinput"><b>alias</B
></CODE
>
%</PRE
></BLOCKQUOTE
></P
><p class="para">(Fortunately, there is an exit.)</P
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">CT</SPAN
> <span class="bibliomisc">on Usenet, 14 November 1990</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_11.htm" webstripperlinkwas="ch08_11.htm" title="8.11 Which One Will bash Use? "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 8.11 Which One Will bash Use? " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_13.htm" webstripperlinkwas="ch08_13.htm" title='8.13 Is It "2&gt;&amp;1 file&quot; or "&gt; file 2&gt;&amp;1&quot;? Why?'><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt='Next: 8.13 Is It "2&gt;&amp;1 file&quot; or "&gt; file 2&gt;&amp;1&quot;? Why?' border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">8.11 Which One Will bash Use? </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">8.13 Is It "2&gt;&amp;1 file&quot; or "&gt; file 2&gt;&amp;1&quot;? Why?</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
