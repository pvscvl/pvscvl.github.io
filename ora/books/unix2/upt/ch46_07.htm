<html><head><title>[Chapter 46] 46.7 Quoting and Command-Line Parameters </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:55:41Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch46_01.htm" webstripperlinkwas="ch46_01.htm" title="46. Shell Script Debugging and Gotchas"><link rel="prev" href="ch46_06.htm" webstripperlinkwas="ch46_06.htm" title="46.6 Watch Out for Bourne Shell -e Bug "><link rel="next" href="ch46_08.htm" webstripperlinkwas="ch46_08.htm" title="46.8 Test Built-In Commands for Failure "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch46_06.htm" webstripperlinkwas="ch46_06.htm" title="46.6 Watch Out for Bourne Shell -e Bug "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 46.6 Watch Out for Bourne Shell -e Bug " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 46<br>Shell Script Debugging and Gotchas</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch46_08.htm" webstripperlinkwas="ch46_08.htm" title="46.8 Test Built-In Commands for Failure "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 46.8 Test Built-In Commands for Failure " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-0386">46.7 Quoting and Command-Line Parameters </A
></H2
><div class="msgset"><div class="msgentry"><div class="msg"><div class="msgtext"><p class="para"><b class="msgentry.role">Q:</B
> <a class="indexterm" name="UPT-ART-386-IX-COMMAND-LINE-ARGUMENTS-QUOTING"></A
><a class="indexterm" name="UPT-ART-386-IX-QUOTING-COMMAND-LINE-PARAMETERS"></A
> I need to pass a shell script some arguments with multiple words.
I thought that putting
<span class="link">quotes (<a class="linkend" href="ch08_14.htm" webstripperlinkwas="ch08_14.htm" title="Bourne Shell Quoting ">8.14</A
>)</SPAN
>
around command-line arguments would
group them.
The shell script seems to ignore the quoting, somehow.
Here's a simple example:<a class="indexterm" name="AUTOID-55708"></A
></P
><p class="para"><b class="msgentry.role">Q:</B
> <blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>cat script</B
></CODE
>
   ...
for arg in $*
do
    echo &quot;Argument is $arg&quot;
done
$ <code class="userinput"><b>script '1 2 3' 4</B
></CODE
>
   ...
Argument is 1
Argument is 2
Argument is 3
Argument is 4</PRE
></BLOCKQUOTE
></P
></DIV
></DIV
></DIV
><div class="msgentry"><div class="msg"><div class="msgtext"><p class="para"><b class="msgentry.role">A:</B
> <a class="indexterm" name="AUTOID-55720"></A
> This is the way <code class="literal">$*</CODE
> is defined to work. <code class="literal">$*</CODE
> expands to:</P
><p class="para"><b class="msgentry.role">A:</B
> <blockquote class="screen"><pre class="screen">$1 $2</PRE
></BLOCKQUOTE
></P
><p class="para"><b class="msgentry.role">A:</B
> [not <code class="literal">&lt;&quot;&gt;$1&lt;&quot;&gt; &lt;&quot;&gt;$2&lt;&quot;&gt;</CODE
><em class="emphasis">-JP</EM
>&nbsp;] if there are two arguments. 
Hence the <em class="emphasis">for</EM
> loop reads:</P
><p class="para"><b class="msgentry.role">A:</B
> <blockquote class="screen"><pre class="screen">for arg in 1 2 3 4</PRE
></BLOCKQUOTE
></P
><p class="para"><b class="msgentry.role">A:</B
> Note that the quotes are gone. What you wanted the shell
to see was:</P
><p class="para"><b class="msgentry.role">A:</B
> <blockquote class="screen"><pre class="screen">for arg in '1 2 3' 4</PRE
></BLOCKQUOTE
></P
><p class="para"><b class="msgentry.role">A:</B
> You cannot get that, but you can get something that is Good Enough:</P
><p class="para"><b class="msgentry.role">A:</B
> <table class="screen.co" border="1"><tr><th valign="TOP"><pre class="calloutlist">
<a class="co" href="ch44_15.htm" webstripperlinkwas="ch44_15.htm" title="44.15 Handling Command-Line Arguments in Shell Scripts ">&quot;$@&quot;</A
> </PRE
></TH
><td valign="TOP"><pre class="screen">
for arg in &quot;$@&quot;</PRE
></TD
></TR
></TABLE
></P
><p class="para"><b class="msgentry.role">A:</B
> In effect, <code class="literal">$@</CODE
> expands to:</P
><p class="para"><b class="msgentry.role">A:</B
> <blockquote class="screen"><pre class="screen">$1&quot; &quot;$2</PRE
></BLOCKQUOTE
></P
><p class="para"><b class="msgentry.role">A:</B
> Putting <code class="literal">&quot;&quot;</CODE
>s around <code class="literal">$@</CODE
>, the effect is:</P
><p class="para"><b class="msgentry.role">A:</B
> <blockquote class="screen"><pre class="screen">for arg in &quot;$1&quot; &quot;$2&quot;</PRE
></BLOCKQUOTE
></P
><p class="para"><b class="msgentry.role">A:</B
> <a class="indexterm" name="AUTOID-55750"></A
><a class="indexterm" name="AUTOID-55753"></A
><a class="indexterm" name="AUTOID-55756"></A
><a class="indexterm" name="AUTOID-55759"></A
><a class="indexterm" name="AUTOID-55762"></A
><a class="indexterm" name="AUTOID-55764"></A
><a class="indexterm" name="AUTOID-55767"></A
>Shell quoting is unnecessarily complex. The C shell actually has
the right idea (variables can be set to
<span class="link">&quot;word lists&quot; (<a class="linkend" href="ch47_05.htm" webstripperlinkwas="ch47_05.htm" title="Using C Shell Arrays ">47.5</A
>)</SPAN
>;
<em class="emphasis">argv</EM
> is such
a list), but its defaults and syntax for suppressing them make for
an artless programming language:</P
><p class="para"><b class="msgentry.role">A:</B
> <blockquote class="screen"><pre class="screen"><a class="indexterm" name="AUTOID-55774"></A
><a class="indexterm" name="AUTOID-55777"></A
>foreach arg ($argv:q)      # colon q ?!?</PRE
></BLOCKQUOTE
></P
><p class="para"><b class="msgentry.role">A:</B
> For the special case of iterating a shell variable over the argument
list as it stands at the beginning of the iteration, the Bourne shell
provides the construct <code class="literal">for arg do</CODE
>
[i.e., no <code class="literal">in </CODE
><code class="replaceable"><i>list</I
></CODE
><em class="emphasis">-JP</EM
>&nbsp;]:</P
><p class="para"><b class="msgentry.role">A:</B
> <blockquote class="screen"><pre class="screen">for arg
do echo &quot;Argument is $arg&quot;
done</PRE
></BLOCKQUOTE
></P
><p class="para"><b class="msgentry.role">A:</B
> produces:</P
><p class="para"><b class="msgentry.role">A:</B
> <blockquote class="screen"><pre class="screen">Argument is 1 2 3
Argument is 4</PRE
></BLOCKQUOTE
></P
><p class="para"><b class="msgentry.role">A:</B
> <a class="indexterm" name="AUTOID-55791"></A
><a class="indexterm" name="AUTOID-55794"></A
><a class="indexterm" name="AUTOID-55797"></A
><code class="literal">&quot;$@&quot;</CODE
> is still needed for passing argument lists to other programs.
Unfortunately, since <code class="literal">$@</CODE
> is defined as expanding to:</P
><p class="para"><b class="msgentry.role">A:</B
> <blockquote class="screen"><pre class="screen">$1&quot; &quot;$2...$<code class="replaceable"><i>n-1</I
></CODE
>&quot; &quot;$<code class="replaceable"><i>n</I
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para"><b class="msgentry.role">A:</B
> (where <code class="replaceable"><i>n</I
></CODE
> is the number of arguments), when there are no arguments:</P
><p class="para"><b class="msgentry.role">A:</B
> <blockquote class="screen"><pre class="screen">&quot;$@&quot;</PRE
></BLOCKQUOTE
></P
><p class="para"><b class="msgentry.role">A:</B
> 
expands to:</P
><p class="para"><b class="msgentry.role">A:</B
> <blockquote class="screen"><pre class="screen">&quot;&quot;</PRE
></BLOCKQUOTE
></P
><p class="para"><b class="msgentry.role">A:</B
> and <code class="literal">&quot;&quot;</CODE
> produces a single argument. [Many UNIX vendors
considered this a bug and changed it so that it produces <em class="emphasis">no</EM
>
arguments. <em class="emphasis">-JP</EM
>&nbsp;]
The best solution for this is to use, for example: </P
><p class="para"><b class="msgentry.role">A:</B
> <blockquote class="screen"><pre class="screen">% <code class="userinput"><b>cat bin/okeeffe</B
></CODE
>
#! /bin/sh
exec rsh okeeffe.berkeley.edu -l torek ${1+&quot;$@&quot;}
%</PRE
></BLOCKQUOTE
></P
><p class="para"><b class="msgentry.role">A:</B
> The construct <code class="literal">${1+&quot;$@&quot;}</CODE
> means &quot;expand <code class="literal">$1</CODE
>, 
but if <code class="literal">$1</CODE
>
is defined, use <code class="literal">&quot;$@&quot;</CODE
> instead.&quot; [You don't need this on
Bourne shells with the &quot;bug fix&quot; I mentioned. <em class="emphasis">-JP</EM
>&nbsp;]
Hence, if there are no arguments, we get <code class="literal">$1</CODE
> (which is
nothing and produces no arguments), otherwise we get <code class="literal">&quot;$@&quot;</CODE
> (which
expands as above). <code class="literal">${</CODE
><code class="replaceable"><i>var</I
></CODE
><code class="literal">+</CODE
><code class="replaceable"><i>instead</I
></CODE
><code class="literal">}</CODE
>
is one of several <em class="emphasis">sh</EM
>
<span class="link">\*(lqexpansion shortcuts\*(rq (<a class="linkend" href="ch45_12.htm" webstripperlinkwas="ch45_12.htm" title="Parameter Substitution ">45.12</A
>)</SPAN
>.
Another more generally useful one is
<code class="literal">${</CODE
><code class="replaceable"><i>var-default</I
></CODE
><code class="literal">}</CODE
>,
which expands to <code class="literal">$</CODE
><code class="replaceable"><i>var</I
></CODE
>, but if <em class="emphasis">var</EM
> is not set, to
<code class="replaceable"><i>default</I
></CODE
> instead.
All of these can be found in the manual for <em class="emphasis">sh</EM
>, which is worth
reading several times, experimenting as you go.</P
></DIV
></DIV
></DIV
></DIV
><a class="indexterm" name="AUTOID-55843"></A
><a class="indexterm" name="AUTOID-55844"></A
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">CT</SPAN
> <span class="bibliomisc">in <a class="systemitem.newsgroup" href="../WebStripper/protected.html#link======news:comp.unix.questions" webstripperlinkwas="../WebStripper/protected.html#link======news:comp.unix.questions">comp.unix.questions</A
> on Usenet, 18 March 1988</SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch46_06.htm" webstripperlinkwas="ch46_06.htm" title="46.6 Watch Out for Bourne Shell -e Bug "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 46.6 Watch Out for Bourne Shell -e Bug " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch46_08.htm" webstripperlinkwas="ch46_08.htm" title="46.8 Test Built-In Commands for Failure "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 46.8 Test Built-In Commands for Failure " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">46.6 Watch Out for Bourne Shell -e Bug </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">46.8 Test Built-In Commands for Failure </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
