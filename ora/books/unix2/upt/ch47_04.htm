<html><head><title>[Chapter 47] 47.4 C Shell Variable Operators and Expressions </TITLE
><meta name="DC.title" content="UNIX Power Tools"><meta name="DC.creator" content="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-04T21:55:59Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-260-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch47_01.htm" webstripperlinkwas="ch47_01.htm" title="47. C Shell Programming...NOT"><link rel="prev" href="ch47_03.htm" webstripperlinkwas="ch47_03.htm" title="47.3 Conditional Statements with if "><link rel="next" href="ch47_05.htm" webstripperlinkwas="ch47_05.htm" title="47.5 Using C Shell Arrays "></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX Power Tools" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,58" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch47_03.htm" webstripperlinkwas="ch47_03.htm" title="47.3 Conditional Statements with if "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 47.3 Conditional Statements with if " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 47<br>C Shell Programming...NOT</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch47_05.htm" webstripperlinkwas="ch47_05.htm" title="47.5 Using C Shell Arrays "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 47.5 Using C Shell Arrays " border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UPT-ART-7650">47.4 C Shell Variable Operators and Expressions </A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-7650-SECT-1.1">47.4.1 Variables </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-56681"></A
><a class="indexterm" name="AUTOID-56684"></A
><a class="indexterm" name="AUTOID-56687"></A
>In the following substitutions, braces (<code class="literal">{}</CODE
>) are optional,
except when needed to separate a variable name from following characters 
that would otherwise be a part of it.
The array <em class="emphasis">argv</EM
> (the command-line arguments) is used as an example,
but any <em class="emphasis">csh</EM
> array name may be used.

<table class="informaltable"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">${<code class="replaceable"><i>var</I
></CODE
>}</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The value of variable <em class="emphasis">var</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">${<code class="replaceable"><i>var</I
></CODE
>[<code class="replaceable"><i>i</I
></CODE
>]}</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Select word or words in position <em class="emphasis">i</EM
> of
<em class="emphasis">var</EM
>. <em class="emphasis">i</EM
> can be a single number,
a range <code class="replaceable"><i>m</I
></CODE
><code class="literal">-</CODE
><code class="replaceable"><i>n</I
></CODE
>,
a range <code class="literal">-</CODE
><code class="replaceable"><i>n</I
></CODE
> (missing <code class="replaceable"><i>m</I
></CODE
> implies 1),
a range <code class="replaceable"><i>m</I
></CODE
><code class="literal">-</CODE
> (missing <code class="replaceable"><i>n</I
></CODE
> implies all
remaining words), or <code class="literal">*</CODE
> (select all words). <em class="emphasis">i</EM
> can also
be a variable that expands to one of these values.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">${#<code class="replaceable"><i>var</I
></CODE
>}</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The number of words in <em class="emphasis">var</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">${#argv}</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The number of command-line arguments.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">${argv[<code class="replaceable"><i>n</I
></CODE
>]}</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Individual arguments on command line (positional parameters).
<em class="emphasis">n</EM
> is a number (1, 12, etc.).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">${<code class="replaceable"><i>n</I
></CODE
>}</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Same as <code class="literal">${argv[</CODE
><code class="replaceable"><i>n</I
></CODE
><code class="literal">]}</CODE
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">${argv[*]}</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">All arguments on command line.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">$*</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Same as <code class="literal">$argv[*]</CODE
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">${argv[$#argv]}</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The last argument.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">${?<code class="replaceable"><i>var</I
></CODE
>}</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Return 1 if <em class="emphasis">var</EM
> is set; 0 if <em class="emphasis">var</EM
> is not set.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">! ${?<code class="replaceable"><i>var</I
></CODE
>}</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Return 0 if <em class="emphasis">var</EM
> is set; 1 if <em class="emphasis">var</EM
> is not set.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">$$</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Process number of current shell; useful as part of a filename
for creating temporary files with unique names.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">$&lt;</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Read a line from standard input.</P
></TD
></TR
></TBODY
></TABLE
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-7650-SECT-1.2">47.4.2 Expressions </A
></H3
><p class="para"><a class="indexterm" name="AUTOID-56797"></A
><a class="indexterm" name="AUTOID-56800"></A
><a class="indexterm" name="AUTOID-56803"></A
><a class="indexterm" name="AUTOID-56806"></A
><a class="indexterm" name="AUTOID-56809"></A
><a class="indexterm" name="AUTOID-56811"></A
><a class="indexterm" name="AUTOID-56814"></A
>Expressions are used in C shell <code class="replaceable"><i>@</I
></CODE
>, <em class="emphasis">if</EM
>, and <em class="emphasis">while</EM
> 
statements to perform arithmetic, string comparisons, file testing,
and so on.
<em class="emphasis">exit</EM
> and <em class="emphasis">set</EM
> can also specify expressions.
Expressions are formed by combining variables and constants with
operators that resemble those in the C programming language.
Operator precedence is the same as in C but can be remembered as
follows:</P
><ol class="orderedlist"><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-56825"></A
><a class="indexterm" name="AUTOID-56828"></A
><a class="indexterm" name="AUTOID-56831"></A
><code class="literal">* / %</CODE
></P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-56837"></A
><a class="indexterm" name="AUTOID-56840"></A
><code class="literal">+ -</CODE
></P
></LI
></OL
><p class="para"><a class="indexterm" name="AUTOID-56845"></A
><a class="indexterm" name="AUTOID-56848"></A
><a class="indexterm" name="AUTOID-56851"></A
><a class="indexterm" name="AUTOID-56854"></A
><a class="indexterm" name="AUTOID-56857"></A
>Group all other expressions inside (&nbsp;).
Parentheses are required if the expression contains
<code class="literal">&lt;</CODE
>, <code class="literal">&gt;</CODE
>, <code class="literal">&amp;</CODE
>, or <code class="literal">|</CODE
>.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-7650-SECT-1.3">47.4.3 Operators </A
></H3
><p class="para">Operators can be one of the following types:</P
><div class="sect3"><h4 class="sect3"><a class="title" name="UPT-ART-7650-SECT-1.3.1">47.4.3.1 Assignment Operators </A
></H4
><p class="para"><a class="indexterm" name="AUTOID-56870"></A
><a class="indexterm" name="AUTOID-56873"></A
><a class="indexterm" name="AUTOID-56876"></A
><a class="indexterm" name="AUTOID-56879"></A
><a class="indexterm" name="AUTOID-56882"></A
><a class="indexterm" name="AUTOID-56885"></A
><a class="indexterm" name="AUTOID-56888"></A
><a class="indexterm" name="AUTOID-56891"></A
><a class="indexterm" name="AUTOID-56894"></A
><a class="indexterm" name="AUTOID-56897"></A
><a class="indexterm" name="AUTOID-56900"></A
><a class="indexterm" name="AUTOID-56903"></A
>
<table class="informaltable"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">=</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Assign value.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">+=  -=</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Reassign after addition/subtraction.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">*=  /=  %=</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Reassign after multiplication/division/remainder.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">&amp;= ^= |=</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Reassign after bitwise AND/XOR/OR.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">++</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Increment.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">-</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Decrement.</P
></TD
></TR
></TBODY
></TABLE
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="UPT-ART-7650-SECT-1.3.2">47.4.3.2 Arithmetic Operators </A
></H4
><p class="para"><a class="indexterm" name="AUTOID-56942"></A
><a class="indexterm" name="AUTOID-56945"></A
><a class="indexterm" name="AUTOID-56948"></A
><a class="indexterm" name="AUTOID-56951"></A
><a class="indexterm" name="AUTOID-56954"></A
><a class="indexterm" name="AUTOID-56957"></A
>
<table class="informaltable"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">*  /  %</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Multiplication; integer division; modulus (remainder).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">c+  -</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Addition; subtraction.</P
></TD
></TR
></TBODY
></TABLE
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="UPT-ART-7650-SECT-1.3.3">47.4.3.3 Bitwise and Logical Operators </A
></H4
><p class="para"><a class="indexterm" name="AUTOID-56976"></A
><a class="indexterm" name="AUTOID-56979"></A
><a class="indexterm" name="AUTOID-56982"></A
><a class="indexterm" name="AUTOID-56985"></A
><a class="indexterm" name="AUTOID-56988"></A
><a class="indexterm" name="AUTOID-56991"></A
><a class="indexterm" name="AUTOID-56994"></A
><a class="indexterm" name="AUTOID-56997"></A
><a class="indexterm" name="AUTOID-57000"></A
><a class="indexterm" name="AUTOID-57003"></A
><a class="indexterm" name="AUTOID-57006"></A
><a class="indexterm" name="AUTOID-57009"></A
>
<table class="informaltable"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">~</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Binary inversion (one's complement).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">!</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Logical negation.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">&lt;&lt;  &gt;&gt;</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bitwise left shift; bitwise right shift.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">&amp;</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bitwise AND.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">^</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bitwise exclusive OR.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">|</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bitwise OR.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">&amp;&amp;</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Logical AND.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">||</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Logical OR.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">{ <code class="replaceable"><i>cmd</I
></CODE
> }</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Return 1 if command <em class="emphasis">cmd</EM
> is successful; 0 otherwise.
Note that this is the opposite of <em class="emphasis">cmd</EM
>'s normal return code.
The <em class="emphasis">status</EM
> variable may be more practical.</P
></TD
></TR
></TBODY
></TABLE
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="UPT-ART-7650-SECT-1.3.4">47.4.3.4 Comparison Operators </A
></H4
><p class="para"><a class="indexterm" name="AUTOID-57067"></A
><a class="indexterm" name="AUTOID-57070"></A
><a class="indexterm" name="AUTOID-57073"></A
><a class="indexterm" name="AUTOID-57076"></A
><a class="indexterm" name="AUTOID-57079"></A
><a class="indexterm" name="AUTOID-57082"></A
><a class="indexterm" name="AUTOID-57085"></A
><a class="indexterm" name="AUTOID-57088"></A
><a class="indexterm" name="AUTOID-57091"></A
>

<table class="informaltable"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">==  !=</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Equality; inequality.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">&lt;=  &gt;=</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Less than or equal to; greater than or equal to.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">&lt;  &gt;</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Less than; greater than.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">=~</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">String on left matches a filename pattern on the right
containing <code class="literal">*</CODE
>, <code class="literal">?</CODE
>, or <code class="literal">[</CODE
>...<code class="literal">]</CODE
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">!~</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">String on left does not match a filename pattern
containing <code class="literal">*</CODE
>, <code class="literal">?</CODE
>, or <code class="literal">[</CODE
>...<code class="literal">]</CODE
>.</P
></TD
></TR
></TBODY
></TABLE
></P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="UPT-ART-7650-SECT-1.3.5">47.4.3.5 File Inquiry Operators </A
></H4
><p class="para"><a class="indexterm" name="AUTOID-57133"></A
>Command substitution and filename expansion are performed on
<em class="emphasis">file</EM
> before the test is performed.<a class="indexterm" name="AUTOID-57137"></A
>

<table class="informaltable"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">-d <code class="replaceable"><i>file</I
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The file is a directory.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">-e <code class="replaceable"><i>file</I
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The file exists.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">-f <code class="replaceable"><i>file</I
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The file is a plain file.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">-o <code class="replaceable"><i>file</I
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The user owns the file.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">-r <code class="replaceable"><i>file</I
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The user has read permission.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">-w <code class="replaceable"><i>file</I
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The user has write permission.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">-x <code class="replaceable"><i>file</I
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The user has execute permission.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">-z <code class="replaceable"><i>file</I
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">The file has zero size.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">!</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Reverse the sense of any of the above inquiries.</P
></TD
></TR
></TBODY
></TABLE
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UPT-ART-7650-SECT-1.4">47.4.4 Examples</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-57198"></A
><a class="indexterm" name="AUTOID-57200"></A
><a class="indexterm" name="AUTOID-57203"></A
>The following examples show <code class="literal">@</CODE
> commands and assume
<em class="emphasis">n</EM
> = 4:

<table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Expression</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Value of $x</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">@ x = ($n &gt; 10 || $n &lt; 5)</TD
><td class="entry" rowspan="1" colspan="1">1</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">@ x = ($n &gt;= 0 &amp;&amp; $n &lt; 3)</TD
><td class="entry" rowspan="1" colspan="1">0</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">@ x = ($n &lt;&lt; 2)</TD
><td class="entry" rowspan="1" colspan="1">16</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">@ x = ($n &gt;&gt; 2)</TD
><td class="entry" rowspan="1" colspan="1">1</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">@ x = $n % 2</TD
><td class="entry" rowspan="1" colspan="1">0</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">@ x = $n % 3</TD
><td class="entry" rowspan="1" colspan="1">1</TD
></TR
></TBODY
></TABLE
></P
><p class="para">The following examples show the first line of <em class="emphasis">if</EM
> or
<em class="emphasis">while</EM
> statements:

<table class="informaltable"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Expression</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Meaning</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">while ($#argv != 0)</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">While there are command-line (<em class="emphasis">argv</EM
>) arguments ...</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">if ($today[1] == Fri)</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If the first word is <em class="emphasis">Fri</EM
>...</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">if ($file !~ *.[zZ])</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If the file doesn't end with <em class="emphasis">.z</EM
> or <em class="emphasis">.Z</EM
> ...</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">if ($argv[1] =~ chap?)</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If the first argument is <em class="emphasis">chap</EM
> followed by a single character...</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">if (-f $argv[1])</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If the first argument is a plain file...</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">if (! -d $tmpdir)</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If <em class="emphasis">tmpdir</EM
> is not a directory...</P
></TD
></TR
></TBODY
></TABLE
><a class="indexterm" name="AUTOID-57281"></A
><a class="indexterm" name="AUTOID-57284"></A
><a class="indexterm" name="AUTOID-57287"></A
><a class="indexterm" name="AUTOID-57290"></A
><a class="indexterm" name="AUTOID-57293"></A
><a class="indexterm" name="AUTOID-57296"></A
><a class="indexterm" name="AUTOID-57299"></A
><a class="indexterm" name="AUTOID-57302"></A
><a class="indexterm" name="AUTOID-57305"></A
><a class="indexterm" name="AUTOID-57308"></A
><a class="indexterm" name="AUTOID-57311"></A
><a class="indexterm" name="AUTOID-57314"></A
><a class="indexterm" name="AUTOID-57317"></A
><a class="indexterm" name="AUTOID-57320"></A
><a class="indexterm" name="AUTOID-57323"></A
><a class="indexterm" name="AUTOID-57326"></A
><a class="indexterm" name="AUTOID-57329"></A
><a class="indexterm" name="AUTOID-57332"></A
><a class="indexterm" name="AUTOID-57335"></A
><a class="indexterm" name="AUTOID-57338"></A
><a class="indexterm" name="AUTOID-57341"></A
><a class="indexterm" name="AUTOID-57344"></A
><a class="indexterm" name="AUTOID-57347"></A
><a class="indexterm" name="AUTOID-57350"></A
></P
></DIV
><div class="sect1info"><p class="SECT1INFO">- <span class="authorinitials">DG</SPAN
> <span class="bibliomisc">from O'Reilly &amp; Associates' <cite class="citetitle">UNIX in a Nutshell (SVR4/Solaris)</CITE
></SPAN
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch47_03.htm" webstripperlinkwas="ch47_03.htm" title="47.3 Conditional Statements with if "><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 47.3 Conditional Statements with if " border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" title="UNIX Power Tools"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX Power Tools" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch47_05.htm" webstripperlinkwas="ch47_05.htm" title="47.5 Using C Shell Arrays "><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 47.5 Using C Shell Arrays " border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">47.3 Conditional Statements with if </TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">47.5 Using C Shell Arrays </TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
