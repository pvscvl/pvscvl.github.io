<html><head><title>[Chapter 5] 5.3 Variables</TITLE
><meta name="DC.Creator" content="Arnold Robbins"><meta name="DC.Date" content="1999-12-03T20:25:50Z"><meta name="DC.Format" content="text/html" scheme="MIME"><meta name="DC.Identifier" content="O'Reilly-CDROM-1-56592-427-4"><meta name="DC.Language" content="en-US"><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.Source" content="1-56592-427-4" scheme="ISBN"><meta name="DC.Subject.Keyword" content="HTML, Web, CSS"><meta name="DC.Title" content="UNIX in a Nutshell: System V Edition"><meta name="DC.Type" content="Text.Monograph"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch05_01.htm" webstripperlinkwas="ch05_01.htm" title="5. The C Shell"><link rel="prev" href="ch05_02.htm" webstripperlinkwas="ch05_02.htm" title="5.2 Syntax"><link rel="next" href="ch05_04.htm" webstripperlinkwas="ch05_04.htm" title="5.4 Expressions"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX in a Nutshell: System V Edition" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell: System V Edition"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch05_02.htm" webstripperlinkwas="ch05_02.htm" title="5.2 Syntax"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 5.2 Syntax" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch05_01.htm" webstripperlinkwas="ch05_01.htm" title="5. The C Shell">Chapter 5<br>The C Shell</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch05_04.htm" webstripperlinkwas="ch05_04.htm" title="5.4 Expressions"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 5.4 Expressions" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UNUT-CH-5-SECT-3">5.3 Variables</A
></H2
><p class="para"><a class="indexterm" name="UNUT-CH-5-IX-VARIABLES-CSH-SHELL"></A
><a class="indexterm" name="UNUT-CH-5-IX-CSH-C-SHELL-VARIABLES"></A
>This section describes the following:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Variable substitution</P
></LI
><li class="listitem"><p class="para">Variable modifiers</P
></LI
><li class="listitem"><p class="para">Predefined shell variables</P
></LI
><li class="listitem"><p class="para">Example <i class="filename">.cshrc</I
> file</P
></LI
><li class="listitem"><p class="para">Environment variables</P
></LI
></UL
><div class="sect2"><h3 class="sect2"><a class="title" name="UNUT-CH-5-SECT-3.1">5.3.1 Variable Substitution</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-29714"></A
>In the following substitutions, braces (<code class="literal"><b>{}</B
></CODE
>) are optional, except when needed to separate a variable name from following characters  that would otherwise be a part of it.</P
><table class="informaltable" border="1" cellpadding="3"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>${</B
></CODE
><i class="replaceable">var</I
><code class="literal"><b>}</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">The value of variable <em class="emphasis">var</EM
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>${</B
></CODE
><i class="replaceable">var</I
><code class="literal"><b>[</B
></CODE
><i class="replaceable">i</I
><code class="literal"><b>]}</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Select word or words in position <em class="emphasis">i</EM
> of <em class="emphasis">var</EM
>. <em class="emphasis">i</EM
> can be a single number, a range <em class="emphasis">m</EM
>-<em class="emphasis">n</EM
>, a range <code class="literal"><b>-</B
></CODE
><em class="emphasis">n</EM
> (missing <em class="emphasis">m</EM
> implies 1), a range <em class="emphasis">m</EM
><code class="literal"><b>-</B
></CODE
> (missing <em class="emphasis">n</EM
> implies all remaining words), or <code class="literal"><b>*</B
></CODE
> (select all words). <em class="emphasis">i</EM
> can also be a variable that expands to one of these values.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>${#</B
></CODE
><i class="replaceable">var</I
><code class="literal"><b>}</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">The number of words in <em class="emphasis">var</EM
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>${#argv}</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">The number of arguments.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>$0</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Name of the program. (Usually not set in interactive shells.)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>${argv[</B
></CODE
><i class="replaceable">n</I
><code class="literal"><b>]}</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Individual arguments on command line (positional parameters). <em class="emphasis">n</EM
> = 1-9.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>${</B
></CODE
><i class="replaceable">n</I
><code class="literal"><b>}</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Same as <code class="literal"><b>${argv[</B
></CODE
><em class="emphasis">n</EM
><code class="literal"><b>]}</B
></CODE
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>${argv[*]}</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">All arguments on command line.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>$*</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Same as <code class="literal"><b>$argv[*]</B
></CODE
>.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>$argv[$#argv]</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">The last argument.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>${?</B
></CODE
><i class="replaceable">var</I
><code class="literal"><b>}</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Return 1 if <em class="emphasis">var</EM
> is set; 0 if <em class="emphasis">var</EM
> is not set.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>$$</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Process number of current shell; useful as part of a filename for creating temporary files with unique names.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>$?0</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Return 1 if input filename is known; 0 if not.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>$&lt;</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Read a line from standard input.</TD
></TR
></TBODY
></TABLE
><div class="sect3"><h4 class="sect3"><a class="title" name="UNUT-CH-5-SECT-3.1.1">5.3.1.1 Examples</A
></H4
><p class="para">Sort the third through last arguments (files) and save the output in a unique temporary file:</P
><p class="para"><blockquote class="screen"><pre class="screen">sort $argv[3-] &gt; tmp.$$</PRE
></BLOCKQUOTE
></P
><p class="para">Process <i class="filename">.cshrc</I
> commands only if the shell is interactive (i.e., the <code class="literal"><b>prompt</B
></CODE
> variable must be set):</P
><p class="para"><blockquote class="screen"><pre class="screen">if ($?prompt) then
   <i class="lineannotation">set commands,</I
>
   <i class="lineannotation">alias commands,</I
>
   <i class="lineannotation">etc.</I
>
endif</PRE
></BLOCKQUOTE
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UNUT-CH-5-SECT-3.2">5.3.2 Variable Modifiers</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-29833"></A
>Except for <code class="literal"><b>$?</B
></CODE
><em class="emphasis">var</EM
>, <code class="literal"><b>$$</B
></CODE
>, <code class="literal"><b>$?0</B
></CODE
>, and <code class="literal"><b>$&lt;</B
></CODE
>, the previous variable substitutions may be followed by one of the following modifiers. When braces are used, the modifier goes inside them.</P
><dl class="variablelist"><dt class="term"><code class="literal"><b>:r</B
></CODE
></DT
><dd class="listitem"><p class="para">Return the variable's root.</P
></DD
><dt class="term"><code class="literal"><b>:e</B
></CODE
></DT
><dd class="listitem"><p class="para">Return the variable's extension.</P
></DD
><dt class="term"><code class="literal"><b>:h</B
></CODE
></DT
><dd class="listitem"><p class="para">Return the variable's header.</P
></DD
><dt class="term"><code class="literal"><b>:t</B
></CODE
></DT
><dd class="listitem"><p class="para">Return the variable's tail.</P
></DD
><dt class="term"><code class="literal"><b>:gr</B
></CODE
></DT
><dd class="listitem"><p class="para">Return all roots.</P
></DD
><dt class="term"><code class="literal"><b>:ge</B
></CODE
></DT
><dd class="listitem"><p class="para">Return all extensions.</P
></DD
><dt class="term"><code class="literal"><b>:gh</B
></CODE
></DT
><dd class="listitem"><p class="para">Return all headers.</P
></DD
><dt class="term"><code class="literal"><b>:gt</B
></CODE
></DT
><dd class="listitem"><p class="para">Return all tails.</P
></DD
><dt class="term"><code class="literal"><b>:q</B
></CODE
></DT
><dd class="listitem"><p class="para">Quote a wordlist variable, keeping the items separate. Useful when the variable contains filename metacharacters that should not be expanded.</P
></DD
><dt class="term"><code class="literal"><b>:x</B
></CODE
></DT
><dd class="listitem"><p class="para">Quote a pattern, expanding it into a wordlist.</P
></DD
></DL
><div class="sect3"><h4 class="sect3"><a class="title" name="UNUT-CH-5-SECT-3.2.1">5.3.2.1 Examples using pathname modifiers</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-29894"></A
>This table shows the use of pathname modifiers on the  following variable:</P
><p class="para"><blockquote class="screen"><pre class="screen">set aa=(/progs/num.c /book/chap.ps)</PRE
></BLOCKQUOTE
></P
><table class="informaltable" border="1" cellpadding="3"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Variable Portion</EM
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Specification</EM
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Output Result</EM
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Normal variable</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo $aa</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>/progs/num.c /book/chap.ps</B
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Second root</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo $aa[2]:r</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>/book/chap</B
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Second header</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo $aa[2]:h</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>/book</B
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Second tail</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo $aa[2]:t</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>chap.ps</B
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Second extension</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo $aa[2]:e</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>ps</B
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Root</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo $aa:r</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>/progs/num /book/chap.ps</B
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Global root</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo $aa:gr</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>/progs/num /book/chap</B
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Header</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo $aa:h</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>/progs /book/chap.ps</B
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Global header</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo $aa:gh</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>/progs /book</B
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Tail</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo $aa:t</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>num.c /book/chap.ps</B
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Global tail</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo $aa:gt</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>num.c chap.ps</B
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Extension</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo $aa:e</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>c /book/chap.ps</B
></CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Global extension</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo $aa:ge</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>c ps</B
></CODE
></TD
></TR
></TBODY
></TABLE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="UNUT-CH-5-SECT-3.2.2">5.3.2.2 Examples using quoting modifiers</A
></H4
><p class="para"><blockquote class="screen"><pre class="screen">% <code class="userinput"><b>set a=&quot;[a-z]*&quot; A=&quot;[A-Z]*&quot;</B
></CODE
>
% <code class="userinput"><b>echo &quot;$a&quot; &quot;$A&quot;</B
></CODE
>
[a-z]* [A-Z]*

% <code class="userinput"><b>echo $a $A</B
></CODE
>
at cc m4 Book Doc

% <code class="userinput"><b>echo $a:x $A</B
></CODE
>
[a-z]* Book Doc

% <code class="userinput"><b>set d=($a:q $A:q)</B
></CODE
>
% <code class="userinput"><b>echo $d</B
></CODE
>
at cc m4 Book Doc

% <code class="userinput"><b>echo $d:q</B
></CODE
>
[a-z]* [A-Z]*

% <code class="userinput"><b>echo $d[1] +++ $d[2]</B
></CODE
>
at cc m4 +++ Book Doc

% <code class="userinput"><b>echo $d[1]:q</B
></CODE
>
[a-z]*</PRE
></BLOCKQUOTE
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UNUT-CH-5-SECT-3.3">5.3.3 Predefined Shell Variables</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-30003"></A
><a class="indexterm" name="AUTOID-30006"></A
><a class="indexterm" name="AUTOID-30009"></A
><a class="indexterm" name="AUTOID-30012"></A
>Variables can be set in one of two ways, by assigning a value:</P
><p class="para"><blockquote class="screen"><pre class="screen">set <i class="replaceable">var</I
>=<i class="replaceable">value</I
></PRE
></BLOCKQUOTE
></P
><p class="para">or by simply turning them on:</P
><p class="para"><blockquote class="screen"><pre class="screen">set <i class="replaceable">var</I
></PRE
></BLOCKQUOTE
></P
><p class="para">In the following table, variables that accept values are shown  with the equals sign followed by the type of value they accept; the value is then described.  (Note, however, that variables such as <code class="literal"><b>argv</B
></CODE
>, <code class="literal"><b>cwd</B
></CODE
>, or <code class="literal"><b>status</B
></CODE
> are never explicitly assigned.) For variables that are turned on or off, the table describes what they do when set. The C shell automatically sets the variables  <code class="literal"><b>argv</B
></CODE
>, <code class="literal"><b>cwd</B
></CODE
>, <code class="literal"><b>home</B
></CODE
>, <code class="literal"><b>path</B
></CODE
>, <code class="literal"><b>prompt</B
></CODE
>, <code class="literal"><b>shell</B
></CODE
>, <code class="literal"><b>status</B
></CODE
>, <code class="literal"><b>term</B
></CODE
>, and <code class="literal"><b>user</B
></CODE
>.</P
><table class="informaltable" border="1" cellpadding="3"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Variable</EM
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Description</EM
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>argv=(</B
></CODE
><i class="replaceable">args</I
><code class="literal"><b>)</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">List of arguments passed to current command; default is <code class="literal"><b>()</B
></CODE
>.<a class="indexterm" name="AUTOID-30054"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>cdpath=(</B
></CODE
><i class="replaceable">dirs</I
><code class="literal"><b>)</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">List of alternate directories to search when locating arguments for<a class="indexterm" name="AUTOID-30063"></A
> <kbd class="command">cd</KBD
>, <kbd class="command">popd</KBD
>, or <kbd class="command">pushd</KBD
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>cwd=</B
></CODE
><i class="replaceable">dir</I
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Full pathname of<a class="indexterm" name="AUTOID-30074"></A
> current directory.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>echo</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Redisplay each command line before execution; same as<a class="indexterm" name="AUTOID-30081"></A
> <code class="literal"><b>csh -x</B
></CODE
> command.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>fignore=(</B
></CODE
><i class="replaceable">chars</I
><code class="literal"><b>)</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">List of filename suffixes to ignore during <a class="indexterm" name="AUTOID-30091"></A
> filename completion (see <code class="literal"><b>filec</B
></CODE
>).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>filec</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If set, a filename that is partially typed on the command line<a class="indexterm" name="AUTOID-30099"></A
> can be expanded to its full name when the Escape key is pressed.   If more than one filename matches, type <em class="emphasis">EOF</EM
>  to list possible completions.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>hardpaths</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Tell <kbd class="command">dirs</KBD
> to display the actual pathname<a class="indexterm" name="AUTOID-30108"></A
> of any directory that is a symbolic link.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>histchars=</B
></CODE
><i class="replaceable">ab</I
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">A two-character string that sets the characters to use<a class="indexterm" name="AUTOID-30116"></A
> in history-substitution and quick-substitution (default is <code class="literal"><b>!^</B
></CODE
>).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>history=</B
></CODE
><i class="replaceable">n</I
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="AUTOID-30125"></A
>Number of commands to save in history list.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>home=</B
></CODE
><i class="replaceable">dir</I
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Home directory of user, initialized from <i class="envar">HOME</I
>. <a class="indexterm" name="AUTOID-30134"></A
> The <code class="literal"><b>~</B
></CODE
> character is shorthand for this value.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>ignoreeof</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="AUTOID-30142"></A
>Ignore an end-of-file (<em class="emphasis">EOF</EM
>) from terminals; prevents accidental logout.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>mail=(</B
></CODE
><i class="replaceable">n file</I
><code class="literal"><b>)</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="AUTOID-30152"></A
>One or more files checked for new mail every five minutes or (if <em class="emphasis">n</EM
> is supplied) every <em class="emphasis">n</EM
> seconds.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>nobeep</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="AUTOID-30161"></A
>Don't ring bell for ambiguous file completion (see <code class="literal"><b>filec</B
></CODE
>).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>noclobber</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Don't redirect output to an existing file; prevents accidental<a class="indexterm" name="AUTOID-30169"></A
> destruction of files.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>noglob</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="AUTOID-30176"></A
>Turn off filename expansion; useful in shell scripts.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>nonomatch</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="AUTOID-30183"></A
>Treat filename metacharacters as literal characters; e.g., <code class="literal"><b>vi ch*</B
></CODE
> creates new file  <i class="filename">ch*</I
> instead of printing &quot;No match.&quot;</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>notify</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Notify user of completed jobs right away,<a class="indexterm" name="AUTOID-30192"></A
> instead of waiting for the next prompt.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>path=(</B
></CODE
><i class="replaceable">dirs</I
><code class="literal"><b>)</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">	List of pathnames in which to search for commands to execute. 	Initialized from <i class="envar">PATH</I
>. 	SVR4 default is <code class="literal"><b>( . /usr/ucb /usr/bin )</B
></CODE
>. 	On Solaris, the default path is 	<code class="literal"><b>( /usr/bin . )</B
></CODE
>. 	However, the standard start-up scripts then change it to 	<code class="literal"><b>( /bin /usr/bin /usr/ucb /etc . )</B
></CODE
>. 	</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>prompt='</B
></CODE
><i class="replaceable">str</I
><code class="literal"><b>'</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="AUTOID-30212"></A
>String that prompts for interactive input; default is <code class="literal"><b>%</B
></CODE
>.  </P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>savehist=</B
></CODE
><i class="replaceable">n</I
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Number of history commands to save in<a class="indexterm" name="AUTOID-30221"></A
> <i class="filename">~/.history</I
> upon logout; they can be accessed at the next login.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>shell=</B
></CODE
><i class="replaceable">file</I
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Pathname of the shell program currently in use; default is <i class="filename">/bin/csh</I
>.<a class="indexterm" name="AUTOID-30231"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>status=</B
></CODE
><i class="replaceable">n</I
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Exit status of last command.  Built-in commands return<a class="indexterm" name="AUTOID-30240"></A
> 0 (success) or 1 (failure).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>term=</B
></CODE
><i class="replaceable">ID</I
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Name of terminal type, same as <i class="envar">TERM</I
>.<a class="indexterm" name="AUTOID-30249"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>time='</B
></CODE
><i class="replaceable">n</I
> <code class="literal"><b>%</B
></CODE
><i class="replaceable">c</I
><code class="literal"><b>'</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If command execution takes more than <em class="emphasis">n</EM
> CPU seconds,<a class="indexterm" name="AUTOID-30261"></A
> report user time, system time, elapsed time, and CPU percentage. Supply optional <code class="literal"><b>%</B
></CODE
><em class="emphasis">c</EM
> flags to show other data.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>user=</B
></CODE
><i class="replaceable">name</I
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Login name of user, initialized from <i class="envar">USER</I
>.<a class="indexterm" name="AUTOID-30272"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>verbose</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Display a command after history substitution; same as the <a class="indexterm" name="AUTOID-30279"></A
> command <code class="literal"><b>csh -v</B
></CODE
>.</P
></TD
></TR
></TBODY
></TABLE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UNUT-CH-5-SECT-3.4">5.3.4 Example .cshrc File</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-30285"></A
></P
><p class="para"><blockquote class="screen"><pre class="screen"># PREDEFINED VARIABLES
set path=(~ ~/bin /usr/ucb /bin /usr/bin . )
set mail=(/var/mail/tom)

if ($?prompt) then            # Settings for interactive use
  set echo
  set filec
  set noclobber ignoreeof

  set cdpath=(/usr/lib /var/spool/uucp)
# Now I can type cd macros 
# instead of cd /usr/lib/macros

  set fignore=.o              # Ignore object files for filec
  set history=100 savehist=25
  set prompt='tom \!% '       # Includes history number
  set time=3

# MY VARIABLES

  set man1=&quot;/usr/man/man1&quot;    # Lets me do    cd $man1, ls $man1
  set a=&quot;[a-z]*&quot;              # Lets me       do vi $a
  set A=&quot;[A-Z]*&quot;              # Or            grep string $A

# ALIASES

  alias c &quot;clear; dirs&quot;       # Use quotes to protect ; or |
  alias h &quot;history | more&quot;
  alias j jobs -l
  alias ls ls -sFC            # Redefine ls command
  alias del 'mv \!* ~/tmp_dir'# A safe alternative to rm
endif</PRE
></BLOCKQUOTE
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UNUT-CH-5-SECT-3.5">5.3.5 Environment Variables</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-30292"></A
><a class="indexterm" name="AUTOID-30294"></A
>The C shell maintains a set of <em class="emphasis">environment variables</EM
>, which are distinct from shell variables and aren't really part of  the C shell. Shell variables are meaningful only within the current shell, but environment variables are automatically exported, making them available globally. For example, C shell variables are accessible  only to a particular script in which they're defined, whereas environment variables can be used by any shell scripts, mail utilities, or editors you might invoke.</P
><p class="para">Environment variables are assigned as follows:</P
><p class="para"><blockquote class="screen"><pre class="screen">setenv <i class="replaceable">VAR value</I
></PRE
></BLOCKQUOTE
></P
><p class="para">By convention, environment variable names are all uppercase. You can create your own environment variables, or you can use the following predefined environment variables.</P
><p class="para">These environment variables have a corresponding C shell variable:</P
><dl class="variablelist"><dt class="term"><i class="envar">HOME</I
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-30310"></A
>Home directory; same as <code class="literal"><b>home</B
></CODE
>. These may be changed independently of each other.</P
></DD
><dt class="term"><i class="envar">PATH</I
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-30318"></A
>Search path for commands; same as <code class="literal"><b>path</B
></CODE
>. Changing either one updates the value stored in the other.</P
></DD
><dt class="term"><i class="envar">TERM</I
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-30326"></A
>Terminal type; same as <code class="literal"><b>term</B
></CODE
>. Changing <code class="literal"><b>term</B
></CODE
> updates <i class="envar">TERM</I
>, but not the other way around.</P
></DD
><dt class="term"><i class="envar">USER</I
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-30336"></A
>Username; same as <code class="literal"><b>user</B
></CODE
>. Changing <code class="literal"><b>user</B
></CODE
> updates <i class="envar">USER</I
>, but not the other way around.</P
></DD
></DL
><p class="para">Other environment variables include the following:</P
><dl class="variablelist"><dt class="term"><i class="envar">EXINIT</I
></DT
><dd class="listitem"><p class="para">A string of <kbd class="command">ex</KBD
> commands similar to those found in<a class="indexterm" name="AUTOID-30349"></A
> the startup <i class="filename">.exrc</I
> file (e.g., <code class="literal"><b>set ai</B
></CODE
>). Used by <kbd class="command">vi</KBD
> and <kbd class="command">ex</KBD
>.</P
></DD
><dt class="term"><i class="envar">LOGNAME</I
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-30360"></A
>Another name for the <i class="envar">USER</I
> variable.</P
></DD
><dt class="term"><i class="envar">MAIL</I
></DT
><dd class="listitem"><p class="para">The file that holds mail.  Used by mail programs.<a class="indexterm" name="AUTOID-30368"></A
> This is not the same as the C shell <code class="literal"><b>mail</B
></CODE
> variable, which only checks for new mail.</P
></DD
><dt class="term"><i class="envar">PWD</I
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-30376"></A
>The current directory; the value is copied from <code class="literal"><b>cwd</B
></CODE
>.</P
></DD
><dt class="term"><i class="envar">SHELL</I
></DT
><dd class="listitem"><p class="para">Undefined by default; once initialized to <code class="literal"><b>shell</B
></CODE
>,<a class="indexterm" name="AUTOID-30385"></A
> the two are identical.</P
></DD
></DL
><a class="indexterm" name="AUTOID-30387"></A
><a class="indexterm" name="AUTOID-30388"></A
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch05_02.htm" webstripperlinkwas="ch05_02.htm" title="5.2 Syntax"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 5.2 Syntax" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" title="UNIX in a Nutshell: System V Edition"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX in a Nutshell: System V Edition" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch05_04.htm" webstripperlinkwas="ch05_04.htm" title="5.4 Expressions"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 5.4 Expressions" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">5.2 Syntax</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">5.4 Expressions</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="../upt/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>


