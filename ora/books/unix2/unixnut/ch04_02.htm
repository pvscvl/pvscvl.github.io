<html><head><title>[Chapter 4] 4.2 Syntax</TITLE
><meta name="DC.Creator" content="Arnold Robbins"><meta name="DC.Date" content="1999-12-03T20:23:22Z"><meta name="DC.Format" content="text/html" scheme="MIME"><meta name="DC.Identifier" content="O'Reilly-CDROM-1-56592-427-4"><meta name="DC.Language" content="en-US"><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.Source" content="1-56592-427-4" scheme="ISBN"><meta name="DC.Subject.Keyword" content="HTML, Web, CSS"><meta name="DC.Title" content="UNIX in a Nutshell: System V Edition"><meta name="DC.Type" content="Text.Monograph"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch04_01.htm" webstripperlinkwas="ch04_01.htm" title="4. The Bourne Shell and Korn Shell"><link rel="prev" href="ch04_01.htm" webstripperlinkwas="ch04_01.htm" title="4.1 Overview of Features"><link rel="next" href="ch04_03.htm" webstripperlinkwas="ch04_03.htm" title="4.3 Variables"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX in a Nutshell: System V Edition" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell: System V Edition"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch04_01.htm" webstripperlinkwas="ch04_01.htm" title="4.1 Overview of Features"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 4.1 Overview of Features" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch04_01.htm" webstripperlinkwas="ch04_01.htm" title="4. The Bourne Shell and Korn Shell">Chapter 4<br>The Bourne Shell and Korn Shell</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch04_03.htm" webstripperlinkwas="ch04_03.htm" title="4.3 Variables"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 4.3 Variables" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="UNUT-CH-4-SECT-2">4.2 Syntax</A
></H2
><p class="para">This section describes the many symbols peculiar to the Bourne and Korn shells.  The topics are arranged as follows:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Special files </P
></LI
><li class="listitem"><p class="para">Filename metacharacters </P
></LI
><li class="listitem"><p class="para">Quoting</P
></LI
><li class="listitem"><p class="para">Command forms</P
></LI
><li class="listitem"><p class="para">Redirection forms</P
></LI
><li class="listitem"><p class="para">Coprocesses (Korn shell only)</P
></LI
></UL
><div class="sect2"><h3 class="sect2"><a class="title" name="UNUT-CH-4-SECT-2.1">4.2.1 Special Files</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-22975"></A
><a class="indexterm" name="AUTOID-22978"></A
><a class="indexterm" name="AUTOID-22982"></A
><a class="indexterm" name="AUTOID-22984"></A
></P
><dl class="variablelist"><dt class="term"><i class="filename">/etc/profile</I
></DT
><dd class="listitem"><p class="para">Executed automatically at login, first.</P
></DD
><dt class="term"><i class="filename">$HOME/.profile</I
></DT
><dd class="listitem"><p class="para">Executed automatically at login, second.</P
></DD
><dt class="term">$ENV</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-23002"></A
>Specifies the name of a file to read when a new Korn shell is created. (<kbd class="command">ksh88</KBD
>: all shells. <kbd class="command">ksh93</KBD
>: interactive shells only.) The value is variable (<kbd class="command">ksh93</KBD
>: and command and arithmetic) substituted in order to determine the actual file name. Login shells read $ENV after processing <i class="filename">/etc/profile</I
> and <i class="filename">$HOME/.profile</I
>.</P
></DD
><dt class="term"><i class="filename">/etc/passwd</I
></DT
><dd class="listitem"><p class="para">Source of home directories for <code class="literal"><b>~</B
></CODE
><em class="emphasis">name</EM
> abbreviations. (On networked systems, this information may come from NIS or NIS+, not your workstation password file.)</P
></DD
></DL
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UNUT-CH-4-SECT-2.2">4.2.2 Filename Metacharacters</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-23019"></A
><a class="indexterm" name="AUTOID-23023"></A
><a class="indexterm" name="AUTOID-23026"></A
><a class="indexterm" name="AUTOID-23030"></A
><a class="indexterm" name="AUTOID-23033"></A
><a class="indexterm" name="AUTOID-23036"></A
><a class="indexterm" name="AUTOID-23039"></A
><a class="indexterm" name="AUTOID-23042"></A
></P
><table class="informaltable" border="1" cellpadding="3"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>*</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Match any string of zero or more characters.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>?</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Match any single character.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>[</B
></CODE
><i class="replaceable">abc</I
>...<code class="literal"><b>]</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Match any one of the enclosed characters; a hyphen can specify a range (e.g., a-z, A-Z, 0-9).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>[!</B
></CODE
><i class="replaceable">abc</I
>...<code class="literal"><b>]</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Match any character <em class="emphasis">not</EM
> enclosed as above.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">In the Korn shell:<a class="indexterm" name="AUTOID-23080"></A
><a class="indexterm" name="AUTOID-23083"></A
><a class="indexterm" name="AUTOID-23086"></A
><a class="indexterm" name="AUTOID-23089"></A
></P
><table class="informaltable" border="1" cellpadding="3"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>?(</B
></CODE
><i class="replaceable">pattern</I
><code class="literal"><b>)</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Match zero or one instance of <em class="emphasis">pattern</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>*(</B
></CODE
><i class="replaceable">pattern</I
><code class="literal"><b>)</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Match zero or more instances of <em class="emphasis">pattern</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>+(</B
></CODE
><i class="replaceable">pattern</I
><code class="literal"><b>)</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Match one or more instances of <em class="emphasis">pattern</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>@(</B
></CODE
><i class="replaceable">pattern</I
><code class="literal"><b>)</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Match exactly one instance of <em class="emphasis">pattern</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>!(</B
></CODE
><i class="replaceable">pattern</I
><code class="literal"><b>)</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Match any strings that don't match <em class="emphasis">pattern</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>\</B
></CODE
><i class="replaceable">n</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Match the text matched by the <em class="emphasis">n</EM
>'th subpattern in <code class="literal"><b>(...)</B
></CODE
>. <kbd class="command">ksh93</KBD
> only.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>~</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Home directory of the current user. </P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>~</B
></CODE
><i class="replaceable">name</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Home directory of user <em class="emphasis">name</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>~+</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Current working directory ($PWD).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>~-</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Previous working directory ($OLDPWD).</P
></TD
></TR
><a class="indexterm" name="AUTOID-23178"></A
><a class="indexterm" name="AUTOID-23181"></A
><a class="indexterm" name="AUTOID-23184"></A
></TBODY
></TABLE
><p class="para">This <em class="emphasis">pattern</EM
> can be a sequence of patterns separated by <code class="literal"><b>|</B
></CODE
>, meaning that the match applies to any of the patterns. If <code class="literal"><b>&amp;</B
></CODE
> is used instead of <code class="literal"><b>|</B
></CODE
>, all the patterns must match. <code class="literal"><b>&amp;</B
></CODE
> has higher precedence than <code class="literal"><b>|</B
></CODE
>. This extended syntax resembles that available in <kbd class="command">egrep</KBD
> and <kbd class="command">awk</KBD
>.</P
><p class="para"><kbd class="command">ksh93</KBD
> supports the POSIX <code class="literal"><b>[[=</B
></CODE
><i class="replaceable">c</I
><code class="literal"><b>=]]</B
></CODE
> notation for matching characters that have the same weight, and <code class="literal"><b>[[.</B
></CODE
><i class="replaceable">c</I
><code class="literal"><b>.]]</B
></CODE
> for specifying collating sequences. In addition, character classes, of the form <code class="literal"><b>[[:</B
></CODE
><i class="replaceable">class</I
><code class="literal"><b>:]]</B
></CODE
>, allow you to match the following classes of characters.<a class="indexterm" name="AUTOID-23207"></A
><a class="indexterm" name="AUTOID-23209"></A
></P
><table class="informaltable" border="1" cellpadding="3"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Class</EM
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Characters Matched</EM
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>alnum</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Alphanumeric characters<a class="indexterm" name="AUTOID-23226"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>alpha</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Alphabetic characters<a class="indexterm" name="AUTOID-23234"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>blank</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Space or tab<a class="indexterm" name="AUTOID-23242"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>cntrl</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Control characters<a class="indexterm" name="AUTOID-23250"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>digit</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Decimal digits<a class="indexterm" name="AUTOID-23258"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>graph</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Nonspace characters<a class="indexterm" name="AUTOID-23266"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>lower</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Lowercase characters<a class="indexterm" name="AUTOID-23274"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>print</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Printable characters<a class="indexterm" name="AUTOID-23282"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>space</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Whitespace characters<a class="indexterm" name="AUTOID-23290"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>upper</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Uppercase characters<a class="indexterm" name="AUTOID-23298"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>xdigit</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Hexadecimal digits<a class="indexterm" name="AUTOID-23306"></A
></P
></TD
></TR
></TBODY
></TABLE
><div class="sect3"><h4 class="sect3"><a class="title" name="UNUT-CH-4-SECT-2.2.1">4.2.2.1 Examples</A
></H4
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>ls new*</B
></CODE
>                 <i class="lineannotation">List new and new.1</I
>
$ <code class="userinput"><b>cat ch?</B
></CODE
>                 <i class="lineannotation">Match ch9 but not ch10</I
>
$ <code class="userinput"><b>vi [D-R]*</B
></CODE
>               <i class="lineannotation">Match files that begin with uppercase D through R</I
>
$ <code class="userinput"><b>pr !(*.o|core) | lp</B
></CODE
>     <i class="lineannotation">Korn shell only; print files that are not object files or core dumps</I
></PRE
></BLOCKQUOTE
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UNUT-CH-4-SECT-2.3">4.2.3 Quoting</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-23323"></A
><a class="indexterm" name="AUTOID-23326"></A
><a class="indexterm" name="AUTOID-23329"></A
>Quoting disables a character's special meaning and allows it to be used literally, as itself. The following table displays characters have special meaning to the Bourne and Korn shells.</P
><table class="informaltable" border="1" cellpadding="3"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Character</EM
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Meaning</EM
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>;</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Command separator</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>&amp;</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Background execution</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>(  )</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Command grouping</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>|</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Pipe</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>&lt; &gt; &amp;</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Redirection symbols</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>* ? [ ] ~ + - @ !</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Filename metacharacters</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>&quot; ' \</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Used in quoting other characters</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>`</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Command substitution</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>$</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Variable substitution (or command or arithmetic substitution)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>space</B
></CODE
> <code class="literal"><b>tab</B
></CODE
> <code class="literal"><b>newline</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Word separators</P
></TD
></TR
></TBODY
></TABLE
><p class="para">These characters can be used for quoting:</P
><dl class="variablelist"><dt class="term"><code class="literal"><b>&quot; &quot;</B
></CODE
></DT
><dd class="listitem"><p class="para">Everything between <code class="literal"><b>&quot;</B
></CODE
> and <code class="literal"><b>&quot;</B
></CODE
> is taken literally, except for the following characters that keep their special meaning:<a class="indexterm" name="AUTOID-23413"></A
>  <dl class="variablelist"><dt class="term"><code class="literal"><b>$</B
></CODE
></DT
><dd class="listitem"><p class="para">Variable (or Korn shell command and arithmetic) substitution will occur.</P
></DD
><dt class="term"><code class="literal"><b>`</B
></CODE
></DT
><dd class="listitem"><p class="para">Command substitution will occur.</P
></DD
><dt class="term"><code class="literal"><b>&quot;</B
></CODE
></DT
><dd class="listitem"><p class="para">This marks the end of the double quote.</P
></DD
></DL
> </P
></DD
><dt class="term"><code class="literal"><b>' '</B
></CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-23436"></A
><a class="indexterm" name="AUTOID-23439"></A
>Everything between <code class="literal"><b>'</B
></CODE
> and <code class="literal"><b>'</B
></CODE
> is taken literally except for another <code class="literal"><b>'</B
></CODE
>. You cannot embed another <code class="literal"><b>'</B
></CODE
> within such a quoted string.</P
></DD
><dt class="term"><code class="literal"><b>\</B
></CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-23451"></A
>The character following a <code class="literal"><b>\</B
></CODE
> is taken literally. Use within <code class="literal"><b>&quot; &quot;</B
></CODE
> to escape <code class="literal"><b>&quot;</B
></CODE
>, <code class="literal"><b>$</B
></CODE
>, and <code class="literal"><b>`</B
></CODE
>. Often used to escape itself, spaces, or newlines.</P
></DD
><dt class="term"><code class="literal"><b>$&quot; &quot;</B
></CODE
></DT
><dd class="listitem"><p class="para"><kbd class="command">ksh93</KBD
> only. Just like <code class="literal"><b>&quot;&quot;</B
></CODE
>, except that locale translation is done.</P
></DD
><dt class="term"><code class="literal"><b>$' '</B
></CODE
></DT
><dd class="listitem"><p class="para"><kbd class="command">ksh93</KBD
> only. Similar to <code class="literal"><b>''</B
></CODE
>, but the quoted text is processed for the following escape sequences:  </P
><table class="informaltable" border="1" cellpadding="3"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Sequence</EM
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Value</EM
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Sequence</EM
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Value</EM
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>\a</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Alert</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>\</B
></CODE
><i class="replaceable">nnn</I
></TD
><td class="entry" rowspan="1" colspan="1">Octal value <em class="emphasis">nnn</EM
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>\b</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Backspace</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>\x</B
></CODE
><i class="replaceable">nn</I
></TD
><td class="entry" rowspan="1" colspan="1">Hexadecimal value <em class="emphasis">nn</EM
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>\f</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Form feed</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>\'</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Single quote</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>\n</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Newline</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>\&quot;</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Double quote</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>\r</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Carriage return</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>\\</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Backslash</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>\t</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Tab</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>\E</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Escape</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>\v</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1">Vertical tab</TD
><td class="entry" rowspan="1" colspan="1">&nbsp;</TD
><td class="entry" rowspan="1" colspan="1">&nbsp;</TD
></TR
></TBODY
></TABLE
><p class="para"> </P
></DD
></DL
><div class="sect3"><h4 class="sect3"><a class="title" name="UNUT-CH-4-SECT-2.3.1">4.2.3.1 Examples</A
></H4
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>echo 'Single quotes &quot;protect&quot; double quotes'</B
></CODE
>
Single quotes &quot;protect&quot; double quotes
$ <code class="userinput"><b>echo &quot;Well, isn't that \&quot;special\&quot;?&quot;</B
></CODE
>
Well, isn't that &quot;special&quot;?
$ <code class="userinput"><b>echo &quot;You have `ls | wc -l` files in `pwd`&quot;</B
></CODE
>
You have      43 files in /home/bob
$ <code class="userinput"><b>echo &quot;The value of \$x is $x&quot;</B
></CODE
>
The value of $x is 100</PRE
></BLOCKQUOTE
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UNUT-CH-4-SECT-2.4">4.2.4 Command Forms</A
></H3
><a class="indexterm" name="AUTOID-23548"></A
><a class="indexterm" name="AUTOID-23551"></A
><a class="indexterm" name="AUTOID-23554"></A
><a class="indexterm" name="AUTOID-23557"></A
><a class="indexterm" name="AUTOID-23560"></A
><a class="indexterm" name="AUTOID-23562"></A
><a class="indexterm" name="AUTOID-23565"></A
><a class="indexterm" name="AUTOID-23567"></A
><a class="indexterm" name="AUTOID-23570"></A
><table class="informaltable" border="1" cellpadding="3"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <code class="literal"><b>&amp;</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Execute <em class="emphasis">cmd</EM
> in background.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd1</I
> <code class="literal"><b>;</B
></CODE
> <i class="replaceable">cmd2</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Command sequence; execute multiple <em class="emphasis">cmd</EM
>s on the same line.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>{</B
></CODE
> <i class="replaceable">cmd1</I
> <code class="literal"><b>;</B
></CODE
> <i class="replaceable">cmd2</I
> <code class="literal"><b>; }</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Execute commands as a group in the current shell.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>(</B
></CODE
><i class="replaceable">cmd1</I
> <code class="literal"><b>;</B
></CODE
> <i class="replaceable">cmd2</I
><code class="literal"><b>)</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Execute commands as a group in a subshell.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd1</I
> <code class="literal"><b>|</B
></CODE
> <i class="replaceable">cmd2</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Pipe; use output from <em class="emphasis">cmd1</EM
> as input to <em class="emphasis">cmd2</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd1</I
> <code class="literal"><b>`</B
></CODE
><i class="replaceable">cmd2</I
><code class="literal"><b>`</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Command substitution; use <em class="emphasis">cmd2</EM
> output as arguments to <em class="emphasis">cmd1</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd1</I
> <code class="literal"><b>$(</B
></CODE
><i class="replaceable">cmd2</I
><code class="literal"><b>)</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Korn shell command substitution; nesting is allowed.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
>   <code class="literal"><b>$((</B
></CODE
><i class="replaceable">expression</I
><code class="literal"><b>))</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Korn shell arithmetic substitution. Use the result of <em class="emphasis">expression</EM
> as argument to <em class="emphasis">cmd</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd1</I
> <code class="literal"><b>&amp;&amp;</B
></CODE
> <i class="replaceable">cmd2</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">AND; execute <em class="emphasis">cmd1</EM
> and then (if <em class="emphasis">cmd1</EM
> succeeds) <em class="emphasis">cmd2</EM
>. This is a &quot;short-circuit&quot; operation; <em class="emphasis">cmd2</EM
> is never executed if <em class="emphasis">cmd1</EM
> fails.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd1</I
> <code class="literal"><b>||</B
></CODE
> <i class="replaceable">cmd2</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">OR; execute either <em class="emphasis">cmd1</EM
> or (if <em class="emphasis">cmd1</EM
> fails) <em class="emphasis">cmd2</EM
>. This is a &quot;short-circuit&quot; operation; <em class="emphasis">cmd2</EM
> is never executed if <em class="emphasis">cmd1</EM
> succeeds.</P
></TD
></TR
></TBODY
></TABLE
><a class="indexterm" name="AUTOID-23682"></A
><a class="indexterm" name="AUTOID-23685"></A
><div class="sect3"><h4 class="sect3"><a class="title" name="UNUT-CH-4-SECT-2.4.1">4.2.4.1 Examples</A
></H4
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>nroff file &gt; file.txt &amp;</B
></CODE
>             <i class="lineannotation">Format in the background</I
>
$ <code class="userinput"><b>cd; ls</B
></CODE
>                              <i class="lineannotation">Execute sequentially</I
>
$ <code class="userinput"><b>(date; who; pwd) &gt; logfile</B
></CODE
>          <i class="lineannotation">All output is redirected</I
>
$ <code class="userinput"><b>sort file | pr -3 | lp</B
></CODE
>              <i class="lineannotation">Sort file, page output, then print</I
>
$ <code class="userinput"><b>vi `grep -l ifdef *.c`</B
></CODE
>              <i class="lineannotation">Edit files found by grep</I
>
$ <code class="userinput"><b>egrep '(yes|no)' `cat list`</B
></CODE
>         <i class="lineannotation">Specify a list of files to search</I
>
$ <code class="userinput"><b>egrep '(yes|no)' $(cat list)</B
></CODE
>        <i class="lineannotation">Korn shell version of previous</I
>
$ <code class="userinput"><b>egrep '(yes|no)' $(&lt;list)</B
></CODE
>           <i class="lineannotation">Same, but faster</I
>
$ <code class="userinput"><b>grep XX file &amp;&amp; lp file</B
></CODE
>             <i class="lineannotation">Print file if it contains the pattern;</I
>
$ <code class="userinput"><b>grep XX file || echo &quot;XX not found&quot;</B
></CODE
> <i class="lineannotation">otherwise, echo an error message</I
></PRE
></BLOCKQUOTE
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UNUT-CH-4-SECT-2.5">4.2.5 Redirection Forms</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-23715"></A
><a class="indexterm" name="AUTOID-23718"></A
><a class="indexterm" name="AUTOID-23721"></A
></P
><table class="informaltable" border="1" cellpadding="3"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">File Descriptor</EM
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Name</EM
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Common Abbreviation</EM
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><em class="emphasis">Typical Default</EM
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">0</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Standard input</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">stdin</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Keyboard</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">1</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Standard output</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">stdout</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Terminal</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">2</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Standard error</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">stderr</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Terminal</P
></TD
></TR
></TBODY
></TABLE
><p class="para">The usual input source or output destination can be changed, as seen in the following sections.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="UNUT-CH-4-SECT-2.5.1">4.2.5.1 Simple redirection</A
></H4
><dl class="variablelist"><dt class="term"><i class="replaceable">cmd</I
> <code class="literal"><b>&gt;</B
></CODE
> <i class="replaceable">file</I
></DT
><dd class="listitem"><p class="para">Send output of <em class="emphasis">cmd</EM
> to <em class="emphasis">file</EM
> (overwrite).<a class="indexterm" name="AUTOID-23777"></A
></P
></DD
><dt class="term"><i class="replaceable">cmd</I
> <code class="literal"><b>&gt;&gt;</B
></CODE
> <i class="replaceable">file</I
></DT
><dd class="listitem"><p class="para">Send output of <em class="emphasis">cmd</EM
> to <em class="emphasis">file</EM
> (append).<a class="indexterm" name="AUTOID-23789"></A
></P
></DD
><dt class="term"><i class="replaceable">cmd</I
> <code class="literal"><b>&lt;</B
></CODE
> <i class="replaceable">file</I
></DT
><dd class="listitem"><p class="para">Take input for <em class="emphasis">cmd</EM
> from <em class="emphasis">file</EM
>.<a class="indexterm" name="AUTOID-23801"></A
></P
></DD
><dt class="term"><i class="replaceable">cmd</I
> <code class="literal"><b>&lt;&lt;</B
></CODE
> <i class="replaceable">text</I
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-23811"></A
>The contents of the shell script up to a line identical to <em class="emphasis">text</EM
> become the standard input for <em class="emphasis">cmd</EM
> (<em class="emphasis">text</EM
> can be stored in a shell variable). This command form is sometimes called a <em class="emphasis">Here document</EM
>. Input is usually typed at the keyboard or in the shell program. Commands that typically use this syntax include <kbd class="command">cat</KBD
>, <kbd class="command">ex</KBD
>, and <kbd class="command">sed</KBD
>. (If <code class="literal"><b>&lt;&lt;-</B
></CODE
> is used, leading tabs are ignored when comparing input with the end-of-input <em class="emphasis">text</EM
> marker.) If <em class="emphasis">text</EM
> is quoted, the input is passed through verbatim. Otherwise, the contents are processed for variable and command substitutions. The Korn shell also processes the input for arithmetic substitution.</P
></DD
><dt class="term"><i class="replaceable">cmd</I
> <code class="literal"><b>&lt;&gt;</B
></CODE
> <i class="replaceable">file</I
></DT
><dd class="listitem"><p class="para">Korn shell only.<a class="indexterm" name="AUTOID-23831"></A
> Open <em class="emphasis">file</EM
> for reading <em class="emphasis">and</EM
> writing on the standard input.  The contents are not destroyed.[<a class="footnote" href="#AUTOID-23836">1</A
>]</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="AUTOID-23836">[1]</A
> With <code class="literal"><b>&lt;</B
></CODE
>, the file is opened read-only, and writes on the file descriptor will fail. With <code class="literal"><b>&lt;&gt;</B
></CODE
>, the file is opened read-write; it is up to the application to actually take advantage of this.</P
></DIV
></BLOCKQUOTE
></DD
></DL
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="UNUT-CH-4-SECT-2.5.2">4.2.5.2 Redirection using file descriptors</A
></H4
><table class="informaltable" border="1" cellpadding="3"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <code class="literal"><b>&gt;&amp;</B
></CODE
><i class="replaceable">n</I
> </P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Send <em class="emphasis">cmd</EM
> output to file descriptor <em class="emphasis">n</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="AUTOID-23860"></A
><a class="indexterm" name="AUTOID-23862"></A
><i class="replaceable">cmd</I
> <i class="replaceable">m</I
><code class="literal"><b>&gt;&amp;</B
></CODE
><i class="replaceable">n</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Same, except that output that would normally go to file descriptor <em class="emphasis">m</EM
> is sent to file descriptor <em class="emphasis">n</EM
> instead.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <code class="literal"><b>&gt;&amp;-</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Close standard output.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <code class="literal"><b>&lt;&amp;</B
></CODE
><i class="replaceable">n</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Take input for <em class="emphasis">cmd</EM
> from file descriptor <em class="emphasis">n</EM
>.<a class="indexterm" name="AUTOID-23890"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <i class="replaceable">m</I
><code class="literal"><b>&lt;&amp;</B
></CODE
><i class="replaceable">n</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Same, except that input that would normally come from file descriptor <em class="emphasis">m</EM
> comes from file descriptor <em class="emphasis">n</EM
> instead.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <code class="literal"><b>&lt;&amp;-</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Close standard input.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <code class="literal"><b>&lt;&amp;</B
></CODE
><i class="replaceable">n</I
><code class="literal"><b>-</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Move input file descriptor <em class="emphasis">n</EM
> instead of duplicating it. <kbd class="command">ksh93</KBD
> only.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <code class="literal"><b>&gt;&amp;</B
></CODE
><i class="replaceable">n</I
><code class="literal"><b>-</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Move output file descriptor <em class="emphasis">n</EM
> instead of duplicating it. <kbd class="command">ksh93</KBD
> only.</P
></TD
></TR
></TBODY
></TABLE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="UNUT-CH-4-SECT-2.5.3">4.2.5.3 Multiple redirection</A
></H4
><table class="informaltable" border="1" cellpadding="3"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <code class="literal"><b>2&gt;</B
></CODE
><i class="replaceable">file</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Send standard error to <em class="emphasis">file</EM
>; standard output remains the same (e.g., the screen).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="AUTOID-23952"></A
><i class="replaceable">cmd</I
> <code class="literal"><b>&gt;</B
></CODE
> <i class="replaceable">file</I
> <code class="literal"><b>2&gt;&amp;1</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Send both standard error and standard output to <em class="emphasis">file</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <code class="literal"><b>&gt;</B
></CODE
> <i class="replaceable">f1</I
> <code class="literal"><b>2&gt;</B
></CODE
><i class="replaceable">f2</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Send standard output to file <em class="emphasis">f1</EM
>, standard error to file <em class="emphasis">f2</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <code class="literal"><b>| tee</B
></CODE
> <i class="replaceable">files</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Send output of <em class="emphasis">cmd</EM
> to standard output (usually the terminal) and to <em class="emphasis">files</EM
>. (See the Example in <a class="xref" href="ch02_01.htm" webstripperlinkwas="ch02_01.htm">Chapter 2, <cite class="CHAPTER">Unix Commands</CITE
></A
>, under <b class="emphasis.bold">tee</B
>.)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <code class="literal"><b>2&gt;&amp;1 | tee</B
></CODE
> <i class="replaceable">files</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Send standard output and error output of <em class="emphasis">cmd</EM
> to standard output (usually the terminal) and to <em class="emphasis">files</EM
>.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">No space should appear between file descriptors and a redirection symbol; spacing is optional in the other cases.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="UNUT-CH-4-SECT-2.5.4">4.2.5.4 Examples</A
></H4
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>cat part1 &gt; book</B
></CODE
>
$ <code class="userinput"><b>cat part2 part3 &gt;&gt; book</B
></CODE
>
$ <code class="userinput"><b>mail tim &lt; report</B
></CODE
>
$ <code class="userinput"><b>sed 's/^/XX /g' &lt;&lt; END_ARCHIVE</B
></CODE
>
&gt; <code class="userinput"><b>This is often how a shell archive is &quot;wrapped&quot;,</B
></CODE
>
&gt; <code class="userinput"><b>bundling text for distribution.  You would normally</B
></CODE
>
&gt; <code class="userinput"><b>run sed from a shell program, not from the command line.</B
></CODE
>
&gt; <code class="userinput"><b>END_ARCHIVE</B
></CODE
>
XX This is often how a shell archive is &quot;wrapped&quot;,
XX bundling text for distribution.  You would normally
XX run sed from a shell program, not from the command line.</PRE
></BLOCKQUOTE
></P
><p class="para">To redirect standard output to standard error:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>echo &quot;Usage error:  see administrator&quot; 1&gt;&amp;2</B
></CODE
></PRE
></BLOCKQUOTE
></P
><p class="para">The following command sends output (files found) to <i class="filename">filelist</I
> and error messages (inaccessible files) to file <i class="filename">no_access</I
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>find / -print &gt; filelist 2&gt;no_access</B
></CODE
></PRE
></BLOCKQUOTE
></P
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="UNUT-CH-4-SECT-2.6">4.2.6 Coprocesses</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-24021"></A
><a class="indexterm" name="AUTOID-24023"></A
>Coprocesses are a feature of the Korn shell only.</P
><table class="informaltable" border="1" cellpadding="3"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd1</I
> <code class="literal"><b>|</B
></CODE
> <i class="replaceable">cmd2</I
> <code class="literal"><b>|&amp;</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Coprocess; execute the pipeline in the background. The shell sets up a two-way pipe, allowing redirection of both standard input and standard output.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>read -p</B
></CODE
> <i class="replaceable">var</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Read coprocess output into variable <em class="emphasis">var</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>print -p</B
></CODE
> <i class="replaceable">string</I
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Write <em class="emphasis">string</EM
> to the coprocess.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <code class="literal"><b>&lt;&amp;p</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Take input for <em class="emphasis">cmd</EM
> from the coprocess.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><i class="replaceable">cmd</I
> <code class="literal"><b>&gt;&amp;p</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Send output of <em class="emphasis">cmd</EM
> to the coprocess.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>exec</B
></CODE
> <i class="replaceable">n</I
><code class="literal"><b>&lt;&amp;p</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Move input for coprocess to file descriptor <em class="emphasis">n</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b>exec</B
></CODE
> <i class="replaceable">n</I
><code class="literal"><b>&gt;&amp;p</B
></CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Move output from coprocess to file descriptor <em class="emphasis">n</EM
>.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">Moving the coprocess input and output file descriptors to standard file descriptors allows you to open multiple coprocesses.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="UNUT-CH-4-SECT-2.6.1">4.2.6.1 Examples</A
></H4
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>ed - memo |&amp;</B
></CODE
>		<i class="lineannotation">Start coprocess</I
>
$ <code class="userinput"><b>print -p /word/</B
></CODE
>		<i class="lineannotation">Send ed command to coprocess</I
>
$ <code class="userinput"><b>read -p search</B
></CODE
>		<i class="lineannotation">Read output of ed command into variable search</I
>
$ <code class="userinput"><b>print &quot;$search&quot;</B
></CODE
>		<i class="lineannotation">Show the line on standard output</I
>
A word to the wise.</PRE
></BLOCKQUOTE
></P
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch04_01.htm" webstripperlinkwas="ch04_01.htm" title="4.1 Overview of Features"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 4.1 Overview of Features" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" title="UNIX in a Nutshell: System V Edition"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX in a Nutshell: System V Edition" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch04_03.htm" webstripperlinkwas="ch04_03.htm" title="4.3 Variables"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 4.3 Variables" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">4.1 Overview of Features</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">4.3 Variables</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="../upt/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>


