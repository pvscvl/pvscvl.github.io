<html><head><title>Reference: bc</TITLE
><meta name="DC.Creator" content="Arnold Robbins"><meta name="DC.Date" content="1999-12-03T20:05:47Z"><meta name="DC.Format" content="text/html" scheme="MIME"><meta name="DC.Identifier" content="O'Reilly-CDROM-1-56592-427-4"><meta name="DC.Language" content="en-US"><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.Source" content="1-56592-427-4" scheme="ISBN"><meta name="DC.Subject.Keyword" content="HTML, Web, CSS"><meta name="DC.Title" content="UNIX in a Nutshell: System V Edition"><meta name="DC.Type" content="Text.Monograph"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch02_01.htm" webstripperlinkwas="ch02_01.htm" title="2. Unix Commands"><link rel="prev" href="c02_013.htm" webstripperlinkwas="c02_013.htm" title="Reference: batch"><link rel="next" href="c02_015.htm" webstripperlinkwas="c02_015.htm" title="Reference: bdiff"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="UNIX in a Nutshell: System V Edition" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell: System V Edition"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="NUTENTRY" href="c02_013.htm" webstripperlinkwas="c02_013.htm" title="Reference: batch"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: Reference: batch" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch02_01.htm" webstripperlinkwas="ch02_01.htm" title="2. Unix Commands">Chapter 2<br>Unix Commands</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="NUTENTRY" href="c02_015.htm" webstripperlinkwas="c02_015.htm" title="Reference: bdiff"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: Reference: bdiff" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="NUTENTRY"><h2 class="nutentry"><a class="term" name="AUTOID-1842">bc</A
></H2
><code class="literal"><b>bc</B
></CODE
> [<i class="replaceable">options</I
>] [<i class="replaceable">files</I
>]<br><dl class="nutentrybody"><p class="para"><a class="indexterm" name="AUTOID-1850"></A
><a class="indexterm" name="AUTOID-1852"></A
>Interactively perform arbitrary-precision arithmetic or convert numbers from one base to another.  Input can be taken from <em class="emphasis">files</EM
> or read from the standard input.  To exit, type <code class="literal"><b>quit</B
></CODE
> or <em class="emphasis">EOF</EM
>.</P
><div class="refsect2"><h3 class="refsect2"><a class="title" name="AUTOID-1858">Options</A
></H3
><dl class="variablelist"><dt class="term"><code class="option">-c</CODE
></DT
><dd class="listitem"><p class="para">Do not invoke <kbd class="command">dc</KBD
>; compile only. (Since <kbd class="command">bc</KBD
> is a preprocessor for <kbd class="command">dc</KBD
>, <kbd class="command">bc</KBD
> normally invokes <kbd class="command">dc</KBD
>.)</P
></DD
><dt class="term"><code class="option">-l</CODE
></DT
><dd class="listitem"><p class="para">Make available functions from the math library.</P
></DD
></DL
><p class="para"><kbd class="command">bc</KBD
> is a language (and compiler) whose syntax resembles that of C. <kbd class="command">bc</KBD
> consists of identifiers, keywords, and symbols, which are briefly described here.  Examples follow at the end.</P
></DIV
><div class="refsect2"><h3 class="refsect2"><a class="title" name="AUTOID-1879">Identifiers</A
></H3
><p class="para">An identifier is a single character, consisting of the lowercase letters a-z. Identifiers are used as names for variables, arrays, and functions. Within the same program you may name a variable, an array, and a function using the same letter.  The following identifiers would not conflict:</P
><table class="informaltable" border="1" cellpadding="3"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>x</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Variable <code class="literal"><b>x</B
></CODE
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>x[</B
></CODE
><i class="replaceable">i</I
><code class="literal"><b>]</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Element <em class="emphasis">i</EM
> of array <code class="literal"><b>x</B
></CODE
>. <em class="emphasis">i</EM
> can range from 0 to 2047 and can also be an expression.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal"><b>x(y,z)</B
></CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Call function <code class="literal"><b>x</B
></CODE
> with parameters <code class="literal"><b>y</B
></CODE
> and <code class="literal"><b>z</B
></CODE
>.</P
></TD
></TR
></TBODY
></TABLE
></DIV
><div class="refsect2"><h3 class="refsect2"><a class="title" name="AUTOID-1911">Input/Output Keywords</A
></H3
><p class="para"><code class="literal"><b>ibase</B
></CODE
>, <code class="literal"><b>obase</B
></CODE
>, and <code class="literal"><b>scale</B
></CODE
> each store a value. Typing them on a line by themselves displays their current value.  More commonly, you would change their values  through assignment.  Letters A-F are treated as digits whose values are 10-15.</P
><dl class="variablelist"><dt class="term"><code class="literal"><b>ibase =</B
></CODE
> <i class="replaceable">n</I
></DT
><dd class="listitem"><p class="para">Numbers that are input (e.g., typed) are read as base <em class="emphasis">n</EM
> (default is 10).</P
></DD
><dt class="term"><code class="literal"><b>obase =</B
></CODE
> <i class="replaceable">n</I
></DT
><dd class="listitem"><p class="para">Numbers displayed are in base <em class="emphasis">n</EM
> (default is 10). Note: once <code class="literal"><b>ibase</B
></CODE
> has been changed from 10, use digit &quot;A&quot; to restore <code class="literal"><b>ibase</B
></CODE
> or <code class="literal"><b>obase</B
></CODE
> to decimal.</P
></DD
><dt class="term"><code class="literal"><b>scale =</B
></CODE
> <i class="replaceable">n</I
></DT
><dd class="listitem"><p class="para">Display computations using <em class="emphasis">n</EM
> decimal places (default is 0, meaning that results are truncated to integers). <code class="literal"><b>scale</B
></CODE
> is normally used only for base-10 computations.</P
></DD
></DL
></DIV
><div class="refsect2"><h3 class="refsect2"><a class="title" name="AUTOID-1943">Statement Keywords</A
></H3
><p class="para">A semicolon or a newline separates one statement from another. Curly braces are needed only when grouping multiple statements.</P
><dl class="variablelist"><dt class="term"><code class="literal"><b>if (</B
></CODE
><i class="replaceable">rel-expr</I
><code class="literal"><b>) {</B
></CODE
><i class="replaceable">statements</I
><code class="literal"><b>}</B
></CODE
></DT
><dd class="listitem"><p class="para">Do one or more <em class="emphasis">statements</EM
> if relational expression <em class="emphasis">rel-expr</EM
> is true; for example:  <blockquote class="screen"><pre class="screen"><code class="userinput"><b>if (x == y) i = i + 1</B
></CODE
></PRE
></BLOCKQUOTE
></P
></DD
><dt class="term"><code class="literal"><b>while (</B
></CODE
><i class="replaceable">rel-expr</I
><code class="literal"><b>) {</B
></CODE
><i class="replaceable">statements</I
><code class="literal"><b>}</B
></CODE
></DT
><dd class="listitem"><p class="para">Repeat one or more <em class="emphasis">statements</EM
> while <em class="emphasis">rel-expr</EM
> is true; for example:  <blockquote class="screen"><pre class="screen"><code class="userinput"><b>while (i &gt; 0) {p = p*n; q = a/b; i = i-1}</B
></CODE
></PRE
></BLOCKQUOTE
></P
></DD
><dt class="term"><code class="literal"><b>for (</B
></CODE
><i class="replaceable">expr1</I
><code class="literal"><b>;</B
></CODE
> <i class="replaceable">rel-expr</I
><code class="literal"><b>;</B
></CODE
> <i class="replaceable">expr2</I
><code class="literal"><b>) {</B
></CODE
><i class="replaceable">statements</I
><code class="literal"><b>}</B
></CODE
></DT
><dd class="listitem"><p class="para">Similar to <code class="literal"><b>while</B
></CODE
>; for example, to print the first 10 multiples of 5, you could type:  <blockquote class="screen"><pre class="screen"><code class="userinput"><b>for (i = 1; i &lt;= 10; i++) i*5</B
></CODE
></PRE
></BLOCKQUOTE
></P
></DD
><dt class="term"><code class="literal"><b>break</B
></CODE
></DT
><dd class="listitem"><p class="para">Terminate a <code class="literal"><b>while</B
></CODE
> or <code class="literal"><b>for</B
></CODE
> statement.</P
></DD
><dt class="term"><code class="literal"><b>quit</B
></CODE
></DT
><dd class="listitem"><p class="para">Exit <kbd class="command">bc</KBD
>.</P
></DD
></DL
></DIV
><div class="refsect2"><h3 class="refsect2"><a class="title" name="AUTOID-2002">Function Keywords</A
></H3
><dl class="variablelist"><dt class="term"><code class="literal"><b>define</B
></CODE
> <i class="replaceable">j</I
><code class="literal"><b>(</B
></CODE
><i class="replaceable">k</I
><code class="literal"><b>) {</B
></CODE
></DT
><dd class="listitem"><p class="para">Begin the definition of function <em class="emphasis">j</EM
> having a single argument <em class="emphasis">k</EM
>. Additional arguments are allowed, separated by commas. Statements follow on successive lines.  End with a <code class="literal"><b>}</B
></CODE
>.</P
></DD
><dt class="term"><code class="literal"><b>auto</B
></CODE
> <i class="replaceable">x</I
><code class="literal"><b>,</B
></CODE
> <i class="replaceable">y</I
></DT
><dd class="listitem"><p class="para">Set up <em class="emphasis">x</EM
> and <em class="emphasis">y</EM
> as variables local to a function definition, initialized to 0 and meaningless outside the function.  Must appear first.</P
></DD
><dt class="term"><code class="literal"><b>return(</B
></CODE
><i class="replaceable">expr</I
><code class="literal"><b>)</B
></CODE
></DT
><dd class="listitem"><p class="para">Pass the value of expression <em class="emphasis">expr</EM
> back to the program. Return 0 if <code class="literal"><b>(</B
></CODE
><em class="emphasis">expr</EM
><code class="literal"><b>)</B
></CODE
> is left off. Used in function definitions.</P
></DD
><dt class="term"><code class="literal"><b>sqrt(</B
></CODE
><i class="replaceable">expr</I
><code class="literal"><b>)</B
></CODE
></DT
><dd class="listitem"><p class="para">Compute the square root of expression <em class="emphasis">expr</EM
>.</P
></DD
><dt class="term"><code class="literal"><b>length(</B
></CODE
><i class="replaceable">expr</I
><code class="literal"><b>)</B
></CODE
></DT
><dd class="listitem"><p class="para">Compute how many digits are in <em class="emphasis">expr</EM
>.</P
></DD
><dt class="term"><code class="literal"><b>scale(</B
></CODE
><i class="replaceable">expr</I
><code class="literal"><b>)</B
></CODE
></DT
><dd class="listitem"><p class="para">Same, but count only digits to the right of the decimal point.</P
></DD
></DL
></DIV
><div class="refsect2"><h3 class="refsect2"><a class="title" name="AUTOID-2061">Math Library Functions</A
></H3
><p class="para">These are available when <kbd class="command">bc</KBD
> is invoked with <code class="option">-l</CODE
>. Library functions set <code class="literal"><b>scale</B
></CODE
> to 20.</P
><dl class="variablelist"><dt class="term"><code class="literal"><b>s(</B
></CODE
><i class="replaceable">angle</I
><code class="literal"><b>)</B
></CODE
></DT
><dd class="listitem"><p class="para">Compute the sine of <em class="emphasis">angle</EM
>, a constant or expression in radians.</P
></DD
><dt class="term"><code class="literal"><b>c(</B
></CODE
><i class="replaceable">angle</I
><code class="literal"><b>)</B
></CODE
></DT
><dd class="listitem"><p class="para">Compute the cosine of <em class="emphasis">angle</EM
>, a constant or expression in radians.</P
></DD
><dt class="term"><code class="literal"><b>a(</B
></CODE
><i class="replaceable">n</I
><code class="literal"><b>)</B
></CODE
></DT
><dd class="listitem"><p class="para">Compute the arctangent of <em class="emphasis">n</EM
>, returning an angle in radians.</P
></DD
><dt class="term"><code class="literal"><b>e(</B
></CODE
><i class="replaceable">expr</I
><code class="literal"><b>)</B
></CODE
></DT
><dd class="listitem"><p class="para">Compute <em class="emphasis">e</EM
> to the power of <em class="emphasis">expr</EM
>.</P
></DD
><dt class="term"><code class="literal"><b>l(</B
></CODE
><i class="replaceable">expr</I
><code class="literal"><b>)</B
></CODE
></DT
><dd class="listitem"><p class="para">Compute natural log of <em class="emphasis">expr</EM
>.</P
></DD
><dt class="term"><code class="literal"><b>j(</B
></CODE
><i class="replaceable">n</I
><code class="literal"><b>, </B
></CODE
><i class="replaceable">x</I
><code class="literal"><b>)</B
></CODE
></DT
><dd class="listitem"><p class="para">Compute Bessel function of integer order <em class="emphasis">n</EM
>.</P
></DD
></DL
></DIV
><div class="refsect2"><h3 class="refsect2"><a class="title" name="AUTOID-2119">Operators</A
></H3
><p class="para">These consist of operators and other symbols. Operators can be arithmetic, unary, assignment, or relational.</P
><table class="informaltable" border="1" cellpadding="3"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Arithmetic</TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b><code class="literal"><b>+   -   *   /   %   ^</B
></CODE
></B
></CODE
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Unary</TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b><code class="literal"><b>-   ++  --</B
></CODE
></B
></CODE
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Assignment</TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b><code class="literal"><b>=+  =-  =*  =/  =%  =^  =</B
></CODE
></B
></CODE
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Relational</TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal"><b><code class="literal"><b>&lt;   &lt;=  &gt;   &gt;=  ==  !=</B
></CODE
></B
></CODE
></P
></TD
></TR
></TBODY
></TABLE
></DIV
><div class="refsect2"><h3 class="refsect2"><a class="title" name="AUTOID-2151">Other Symbols</A
></H3
><dl class="variablelist"><dt class="term"><code class="literal"><b>/*   */</B
></CODE
></DT
><dd class="listitem"><p class="para">Enclose comments.</P
></DD
><dt class="term"><code class="literal"><b>( )</B
></CODE
></DT
><dd class="listitem"><p class="para">Control the evaluation of expressions (change precedence). Can also be used around assignment statements to force the result to print.</P
></DD
><dt class="term"><code class="literal"><b>{ }</B
></CODE
></DT
><dd class="listitem"><p class="para">Used to group statements.</P
></DD
><dt class="term"><code class="literal"><b>[ ]</B
></CODE
></DT
><dd class="listitem"><p class="para">Array index.</P
></DD
><dt class="term"><code class="literal"><b>&quot;</B
></CODE
><i class="replaceable">text</I
><code class="literal"><b>&quot;</B
></CODE
></DT
><dd class="listitem"><p class="para">Use as a statement to print <em class="emphasis">text</EM
>.</P
></DD
></DL
></DIV
><div class="refsect2"><h3 class="refsect2"><a class="title" name="AUTOID-2182">Examples</A
></H3
><p class="para">Note that when you type some quantity (a number or expression), it is evaluated and printed, but assignment statements produce no display:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="userinput"><b>ibase = 8</B
></CODE
>         <i class="lineannotation">Octal input</I
>
<code class="userinput"><b>20</B
></CODE
>                <i class="lineannotation">Evaluate this octal number</I
>
<code class="literal"><b>16</B
></CODE
>                <i class="lineannotation">Terminal displays decimal value</I
>
<code class="userinput"><b>obase = 2</B
></CODE
>         <i class="lineannotation">Display output in base 2 instead of base 10</I
>
<code class="userinput"><b>20</B
></CODE
>                <i class="lineannotation">Octal input</I
>
10000             <i class="lineannotation">Terminal now displays binary value</I
>
<code class="userinput"><b>ibase = A</B
></CODE
>         <i class="lineannotation">Restore base 10 input</I
>
<code class="userinput"><b>scale = 3</B
></CODE
>         <i class="lineannotation">Truncate results to three places</I
>
<code class="userinput"><b>8/7</B
></CODE
>               <i class="lineannotation">Evaluate a division</I
>
<code class="literal"><b>1.001001000</B
></CODE
>       <i class="lineannotation">Oops! Forgot to reset output base to 10</I
>
<code class="userinput"><b>obase = 10</B
></CODE
>        <i class="lineannotation">Input is decimal now, so &quot;A&quot; isn't needed</I
>
<code class="userinput"><b>8/7</B
></CODE
>
1.142             <i class="lineannotation">Terminal displays result (truncated)</I
></PRE
></BLOCKQUOTE
></P
><p class="para">The following lines show the use of functions:</P
><p class="para"><blockquote class="screen"><pre class="screen"><code class="userinput"><b>define p(r,n){</B
></CODE
>    <i class="lineannotation">Function p uses two arguments</I
>
  <code class="userinput"><b>auto v</B
></CODE
>          <i class="lineannotation">v is a local variable</I
>
  <code class="userinput"><b>v = r^n</B
></CODE
>         <i class="lineannotation">r raised to the n power</I
>
  <code class="userinput"><b>return(v)}</B
></CODE
>       <i class="lineannotation">Value returned</I
>
<code class="userinput"><b>scale = 5</B
></CODE
>
<code class="userinput"><b>x = p(2.5,2)</B
></CODE
>      <i class="lineannotation">x = 2.5 ^ 2</I
>
<code class="userinput"><b>x</B
></CODE
>                 <i class="lineannotation">Print value of x</I
>
6.25
<code class="userinput"><b>length(x)</B
></CODE
>         <i class="lineannotation">Number of digits</I
>
3
<code class="userinput"><b>scale(x)</B
></CODE
>          <i class="lineannotation">Number of places to right of decimal point</I
>
2</PRE
></BLOCKQUOTE
></P
></DIV
></DL
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="NUTENTRY" href="c02_013.htm" webstripperlinkwas="c02_013.htm" title="Reference: batch"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: Reference: batch" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" title="UNIX in a Nutshell: System V Edition"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="UNIX in a Nutshell: System V Edition" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="NUTENTRY" href="c02_015.htm" webstripperlinkwas="c02_015.htm" title="Reference: bdiff"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: Reference: bdiff" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">Reference: batch</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">Reference: bdiff</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="../upt/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>


