<html><head><title>[Chapter 12] 12.8 Improved Editing Facilities</TITLE
><meta name="DC.Creator" content="Linda Lamb &amp; Arnold Robbins"><meta name="DC.Date" content="1999-11-23T17:59:26Z"><meta name="DC.Format" content="text/html" scheme="MIME"><meta name="DC.Identifier" content="O'Reilly Unix CDROM-unknown"><meta name="DC.Language" content="en-US"><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.Source" content="unknown" scheme="ISBN"><meta name="DC.Subject.Keyword" content="Unix, vi, text, editor, tool"><meta name="DC.Title" content="Learning the vi Editor"><meta name="DC.Type" content="Text.Monograph"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch12_01.htm" webstripperlinkwas="ch12_01.htm" title="12. vile&nbsp;-- vi Like Emacs"><link rel="prev" href="ch12_07.htm" webstripperlinkwas="ch12_07.htm" title="12.7 Extended Regular Expressions"><link rel="next" href="ch12_09.htm" webstripperlinkwas="ch12_09.htm" title="12.9 Programming Assistance"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="Learning the vi Editor" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch12_07.htm" webstripperlinkwas="ch12_07.htm" title="12.7 Extended Regular Expressions"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 12.7 Extended Regular Expressions" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch12_01.htm" webstripperlinkwas="ch12_01.htm" title="12. vile&nbsp;-- vi Like Emacs">Chapter 12<br>vile&nbsp;-- vi Like Emacs</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch12_09.htm" webstripperlinkwas="ch12_09.htm" title="12.9 Programming Assistance"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 12.9 Programming Assistance" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="VI6-CH-12-SECT-8">12.8 Improved Editing Facilities</A
></H2
><p class="para"><a class="indexterm" name="CH12.FACIL1"></A
><a class="indexterm" name="CH12.FACIL2"></A
><a class="indexterm" name="CH12.FACIL3"></A
>This section describes the features of <kbd class="command">vile</KBD
>
that make simple text editing easier and more powerful.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-12-SECT-8.1">12.8.1 Command-Line History and Completion</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-19583"></A
><a class="indexterm" name="AUTOID-19587"></A
><a class="indexterm" name="AUTOID-19591"></A
><a class="indexterm" name="AUTOID-19594"></A
><a class="indexterm" name="AUTOID-19597"></A
><a class="indexterm" name="AUTOID-19600"></A
><a class="indexterm" name="AUTOID-19603"></A
><kbd class="command">vile</KBD
> stores all your <kbd class="command">ex</KBD
>
commands in a buffer named <code class="literal">[History]</CODE
>.  This
feature is controlled with the <code class="literal">history</CODE
> option,
which is true by default. Turning it off disables the history feature
and removes the <code class="literal">[History]</CODE
> buffer.<a class="indexterm" name="AUTOID-19610"></A
>
The command <code class="literal">show-history</CODE
> will split the screen
and display the <code class="literal">[History]</CODE
> buffer in a new window.</P
><p class="para">Starting with <kbd class="command">vile</KBD
> 7.4, the
colon command line is really a minibuffer. 
You can use it to recall lines from the <code class="literal">[History]</CODE
>
buffer and edit them.</P
><p class="para">You use the <img src="../chars/uarr.gif" webstripperlinkwas="../chars/uarr.gif" alt="-^"> and <img src="../chars/darr.gif" webstripperlinkwas="../chars/darr.gif" alt="-v"> keys to scroll backward and forward
in the history, and <img src="../chars/larr.gif" webstripperlinkwas="../chars/larr.gif" alt="&lt;-"> and <img src="../chars/rarr.gif" webstripperlinkwas="../chars/rarr.gif" alt="-&gt;"> to move around within the
line. Your current delete character (usually <kbd class="keycap">[BACKSPACE]</KBD
>)
can be used to delete characters. Any other characters you type
will be inserted at the current cursor postion.</P
><p class="para">You can toggle the minibuffer into <kbd class="command">vi</KBD
> mode
by typing the <code class="literal">mini-edit</CODE
> character (by
default, <code class="literal">^G</CODE
>).
When you do this, <kbd class="command">vile</KBD
>
will highlight the minibuffer using the mechanism specified<a class="indexterm" name="AUTOID-19624"></A
>
by the <code class="literal">mini-hilite</CODE
> option.
The default is <code class="literal">reverse</CODE
>, for reverse video.
In <kbd class="command">vi</KBD
> mode, you can
use <kbd class="command">vi</KBD
>
style commands for positioning.
In Version 8.0, you can also use the <code class="literal">i</CODE
>,
<code class="literal">I</CODE
>, <code class="literal">a</CODE
>, and <code class="literal">A</CODE
>
<kbd class="command">vi</KBD
> commands.</P
><p class="para">An interesting feature is that <kbd class="command">vile</KBD
> will use the
history to show you previous data that corresponds to the command
you're entering. For instance, after typing <code class="literal">:set</CODE
>
followed by a space,
<kbd class="command">vile</KBD
> will prompt you with <code class="literal">Global value:</CODE
>.
At that point, you can use <img src="../chars/uarr.gif" webstripperlinkwas="../chars/uarr.gif" alt="-^"> to see previous global
variables that you've set, should you wish to change one of them.</P
><p class="para">The <kbd class="command">ex</KBD
>
command line provides completion of various sorts.
As you type the name of a command, you can hit
the <kbd class="keycap">[TAB]</KBD
> key at any point.
<kbd class="command">vile</KBD
> will fill out the rest of the command name
as much as possible. If you type a <kbd class="keycap">[TAB]</KBD
> a second
time, <kbd class="command">vile</KBD
> will create a new window showing
you all the possible completions.</P
><p class="para">Completion applies to built-in
and user-defined <kbd class="command">vile</KBD
> commands, tags,
filenames, modes (described later in this chapter), variables,
and to the terminal characters (the character settings such
as backspace, suspend, and so on, derived from your
<kbd class="command">stty</KBD
> settings).</P
><p class="para">As a side point, this leads to an interesting phenomenon.
In <kbd class="command">vi</KBD
>-style editors, commands may have long names,
but they tend to be unique in the first few characters,
since abbreviations are accepted.
In <kbd class="command">emacs</KBD
>-style editors, command names often are
not unique in the first several characters, but command completion
still allows you to get away with less typing.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-12-SECT-8.2">12.8.2 Tag Stacks</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-19655"></A
><a class="indexterm" name="AUTOID-19658"></A
><a class="indexterm" name="AUTOID-19662"></A
><a class="indexterm" name="AUTOID-19665"></A
>Tag stacking is described in <a class="xref" href="ch08_05.htm" webstripperlinkwas="ch08_05.htm">Section 8.5.3, "Tag Stacks"</A
> in <a class="xref" href="ch08_01.htm" webstripperlinkwas="ch08_01.htm">Chapter 8</A
>.
In <kbd class="command">vile</KBD
>, tag stacking is available and straightforward.
It is somewhat different than the other clones, most notably in the
<kbd class="command">vi</KBD
> mode commands that are used for tag searching
and popping the tag stack. <a class="xref" href="#VI6-CH-12-TAB-2">Table 12.2</A
> shows the <em class="emphasis">vile</EM
>
tag commands.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="VI6-CH-12-TAB-2">Table 12.2: vile Tag Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">ta</CODE
>[<code class="literal">g</CODE
>][<code class="literal">!</CODE
>] [<code class="replaceable"><i>tagstring</I
></CODE
>]</TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Edit the file containing
<em class="emphasis">tagstring</EM
> as defined in the <i class="filename">tags</I
><a class="indexterm" name="AUTOID-19693"></A
>
file. The <code class="literal">!</CODE
> forces <kbd class="command">vile</KBD
> to
switch to the new file if the current buffer has been modified
but not saved.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">pop</CODE
>[<code class="literal">!</CODE
>]</TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Pops a cursor position off the stack,<a class="indexterm" name="AUTOID-19703"></A
>
restoring the cursor to its previous position.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">next-tag</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Continues searching through<a class="indexterm" name="AUTOID-19710"></A
>
the <i class="filename">tags</I
> file for more matches.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">show-tagstack</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Creates a new window that displays<a class="indexterm" name="AUTOID-19718"></A
>
the tag stack. The display changes as tags are pushed onto or popped
off of the stack.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">The <kbd class="command">vi</KBD
> mode commands are described
in <a class="xref" href="#VI6-CH-12-TAB-3">Table 12.3</A
>.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="VI6-CH-12-TAB-3">Table 12.3: vile Command Mode Tag Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">^]</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Look up the location of the identifier<a class="indexterm" name="AUTOID-19739"></A
>
under the cursor in the <i class="filename">tags</I
> file, and move to that
location. The current location is automatically pushed onto the
tag stack.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">^T&nbsp;&nbsp;&nbsp; ^X ^]</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Return to the previous location<a class="indexterm" name="AUTOID-19749"></A
>
in the tag stack, i.e., pop off one element.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">^A ^]</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="AUTOID-19758"></A
>Same as the <code class="literal">:next-tag</CODE
> command.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">As in the other editors, options control how <kbd class="command">vile</KBD
>
manages the tag related commands, as shown in 
<a class="xref" href="#VI6-CH-12-TAB-4">Table 12.4</A
>. </P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="VI6-CH-12-TAB-4">Table 12.4: vile Options for Tag Management</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Option</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">taglength</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Controls the number of significant
characters in a tag<a class="indexterm" name="AUTOID-19780"></A
>
that is to be looked up. The default value of zero indicates that all
characters are significant.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">tagignorecase</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Makes tag searches ignore case.<a class="indexterm" name="AUTOID-19787"></A
>
By default this option is false.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">tagrelative</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">When using
a <i class="filename">tags</I
> file in another directory, filenames in<a class="indexterm" name="AUTOID-19795"></A
>
that <i class="filename">tags</I
> file are considered to be relative to
the directory where the <i class="filename">tags</I
> file is.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">tags</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Can be set to a whitespace
separated list of <i class="filename">tags</I
> files to use for<a class="indexterm" name="AUTOID-19805"></A
>
looking up tags.  <kbd class="command">vile</KBD
> loads all 
<i class="filename">tags</I
> files
into separate buffers that are hidden by default, but that can be
edited if you wish.
You can place environment variables and shell wildcards
into <code class="literal">tags</CODE
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">tagword</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Uses the whole word under the cursor for
the tag lookup, not just the sub-word starting at the current<a class="indexterm" name="AUTOID-19815"></A
>
cursor position.
This option is disabled by default, which keeps
<kbd class="command">vile</KBD
> compatible with <kbd class="command">vi</KBD
>.</P
></TD
></TR
></TBODY
></TABLE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-12-SECT-8.3">12.8.3 Infinite Undo</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-19822"></A
><a class="indexterm" name="AUTOID-19825"></A
><kbd class="command">vile</KBD
> is similar in principle but different in practice
from the other editors. Like <kbd class="command">elvis</KBD
> and
<kbd class="command">vim</KBD
>, there is an undo limit you can set, but like
<kbd class="command">nvi</KBD
>, the <code class="literal">.</CODE
> command will do the
next undo or redo, as appropriate it.
Separate <kbd class="command">vi</KBD
> mode commands implement
successive undo and redo.</P
><p class="para"><a class="indexterm" name="AUTOID-19836"></A
><kbd class="command">vile</KBD
> uses the <code class="literal">undolimit</CODE
> option
to control how many changes it will store.
The default is 10, meaning that you can undo up to the 10 most
recent changes. Setting it to zero allows true &quot;infinite
undo,&quot; but this may consume a lot of memory.</P
><p class="para">To start an undo, first use either the <code class="literal">u</CODE
>
or <code class="literal">^X u</CODE
> commands.
Then each successive <code class="literal">.</CODE
> command will do another undo.
Like <kbd class="command">vi</KBD
>, two <code class="literal">u</CODE
> commands
just toggle the state of the change; however, each
<code class="literal">^X u</CODE
> command does another undo.</P
><p class="para">The <code class="literal">^X r</CODE
> command does
a redo. Typing <code class="literal">.</CODE
> after the first
<code class="literal">^X r</CODE
> will do successive
redos. You can provide a count to the
<code class="literal">^X u</CODE
> and
<code class="literal">^X r</CODE
> commands,
in which case <kbd class="command">vile</KBD
> will perform the
requested number of undos or redos.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-12-SECT-8.4">12.8.4 Arbitrary Length Lines and Binary Data</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-19857"></A
><a class="indexterm" name="AUTOID-19860"></A
><a class="indexterm" name="AUTOID-19864"></A
><a class="indexterm" name="AUTOID-19868"></A
><a class="indexterm" name="AUTOID-19872"></A
><kbd class="command">vile</KBD
> can edit files with arbitrary length
lines, and with an arbitrary number of lines.</P
><p class="para"><kbd class="command">vile</KBD
>
automatically handles binary data. No special command lines
or options are required.
To enter 8-bit text, type <code class="literal">^V</CODE
> followed by
an <code class="literal">x</CODE
> and two hexadecimal digits, or
a <code class="literal">0</CODE
> and three octal digits, or three
decimal digits.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-12-SECT-8.5">12.8.5 Incremental Searching</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-19884"></A
><a class="indexterm" name="AUTOID-19887"></A
><a class="indexterm" name="AUTOID-19891"></A
><a class="indexterm" name="AUTOID-19895"></A
>As mentioned in
<a class="xref" href="ch08_06.htm" webstripperlinkwas="ch08_06.htm#VI6-CH-8-SECT-6.4">Section 8.6.4, "Incremental Searching"</A
> in <a class="xref" href="ch08_01.htm" webstripperlinkwas="ch08_01.htm">Chapter 8</A
>,
you perform
incremental searching in <kbd class="command">vile</KBD
>
using the <code class="literal">^X S</CODE
> and <code class="literal">^X R</CODE
>
commands. It is not necessary to set an option to
enable incremental searching.</P
><p class="para">The cursor moves through the
file as you type, always being placed on the first character of
the text that matches. <code class="literal">^X S</CODE
> incrementally searches forward
through the file, while <code class="literal">^X R</CODE
> incrementally searches
backwards.</P
><p class="para">You may wish to add these commands
(described below) to your <i class="filename">.vilerc</I
>
file to make the more familiar <code class="literal">/</CODE
>
and <code class="literal">?</CODE
> search commands work incrementally:<a class="indexterm" name="AUTOID-19908"></A
><a class="indexterm" name="AUTOID-19910"></A
></P
><blockquote class="screen"><pre class="screen">bind-key incremental-search /
bind-key reverse-incremental-search ?</PRE
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-19914"></A
>Also of interest is the &quot;visual match&quot; facility,
which will highlight <em class="emphasis">all</EM
> occurrences of the
matched expression. For a <i class="filename">.vilerc</I
> file:</P
><blockquote class="screen"><pre class="screen">set visual-matches reverse</PRE
></BLOCKQUOTE
><p class="para">This command directs <kbd class="command">vile</KBD
> to use reverse
video for visual matching.
Since the highlighting can sometimes be visually distracting,
the <code class="literal">=</CODE
> command will turn off any current
highlighting until you enter a new search pattern.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-12-SECT-8.6">12.8.6 Left-Right Scrolling</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-19925"></A
><a class="indexterm" name="AUTOID-19928"></A
><a class="indexterm" name="AUTOID-19931"></A
><a class="indexterm" name="AUTOID-19934"></A
><a class="indexterm" name="AUTOID-19938"></A
><a class="indexterm" name="AUTOID-19941"></A
><a class="indexterm" name="AUTOID-19944"></A
>As mentioned in
<a class="xref" href="ch08_06.htm" webstripperlinkwas="ch08_06.htm#VI6-CH-8-SECT-6.5">Section 8.6.5, "Left-Right Scrolling"</A
> in <a class="xref" href="ch08_01.htm" webstripperlinkwas="ch08_01.htm">Chapter 8</A
>,
you enable
left-right scrolling in <kbd class="command">vile</KBD
> using
<code class="literal">:set nolinewrap</CODE
>. Unlike the other editors,
left-right scrolling is the default.
Long lines are marked at the left and right edges with
<code class="literal">&lt;</CODE
> and <code class="literal">&gt;</CODE
>.
The value of
<code class="literal">sideways</CODE
> controls the number of characters
by which <kbd class="command">vile</KBD
> shifts the screen when scrolling
left to right.
With <code class="literal">sideways</CODE
> set to zero, each scroll moves the
screen by one third. Otherwise the screen scrolls by
the desired number of characters.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-12-SECT-8.7">12.8.7 Visual Mode</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-19957"></A
><a class="indexterm" name="AUTOID-19960"></A
><kbd class="command">vile</KBD
> is different from <kbd class="command">elvis</KBD
>
and <kbd class="command">vim</KBD
> in the way you highlight the text
you want to operate on. It uses the &quot;quoted motion&quot;
command, <code class="literal">q</CODE
>.<a class="indexterm" name="AUTOID-19967"></A
><a class="indexterm" name="AUTOID-19969"></A
></P
><p class="para">You enter <code class="literal">q</CODE
> at the beginning of the region,
any other <kbd class="command">vi</KBD
> motions to get to the opposite
end of the region, and then another <code class="literal">q</CODE
> to end
the quoted motion. <kbd class="command">vile</KBD
> highlights the marked text.</P
><p class="para">Arguments to the <code class="literal">q</CODE
> command determine what kind
of highlighting it will do. <code class="literal">1q</CODE
> (same as
<code class="literal">q</CODE
>) does an exact highlighting, <code class="literal">2q</CODE
>
does line-at-a-time highlighting, and <code class="literal">3q</CODE
> does
rectangular highlighting.</P
><p class="para">Typically, you use a quoted motion in conjunction with an
operator, such as <code class="literal">d</CODE
> or <code class="literal">y</CODE
>.
Thus, <code class="literal">d3qjjwq</CODE
> deletes the rectangle indicated
by the motions.
When used without an operator, the region is left highlighted. It can
be referred to later using <code class="literal">^S</CODE
>.
Thus, <code class="literal">d ^S</CODE
> will delete the highlighted region.</P
><p class="para"><a class="indexterm" name="AUTOID-19989"></A
>In addition, rectangular regions can be indicated through the
use of marks.[<a class="footnote" href="#AUTOID-19991">4</A
>]
As you know, a mark can be used to refer to either a specific character (when<a class="indexterm" name="AUTOID-19993"></A
><a class="indexterm" name="AUTOID-19996"></A
><a class="indexterm" name="AUTOID-19999"></A
><a class="indexterm" name="AUTOID-20002"></A
><a class="indexterm" name="AUTOID-20005"></A
>
referred to with <code class="literal">`</CODE
>) or a specific line
(when referred to with <code class="literal">'</CODE
>).
In addition, referring to the mark (say a mark set with <code class="literal">mb</CODE
>)
with <code class="literal">`b</CODE
> instead of <code class="literal">'b</CODE
> can change the
nature of the operation being
done&nbsp;-- <code class="literal">d'b</CODE
> will delete a set of lines,
and <code class="literal">d`b</CODE
> will delete two
partial lines and the lines in between. Using the <code class="literal">`</CODE
>
form of mark
reference gives a more &quot;exact&quot; region than
the <code class="literal">'</CODE
> form of mark reference.</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="AUTOID-19991">[4]</A
> Thanks to Paul Fox for this explanation.</P
></DIV
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-20018"></A
><a class="indexterm" name="AUTOID-20021"></A
><kbd class="command">vile</KBD
> adds a third form of mark reference. The
<code class="literal">\</CODE
> command can be used as another way of referring to a mark.
By itself, it behaves just like <code class="literal">`</CODE
> and moves the cursor to the
character at which the mark was set. When combined with an
operator, however, the behavior is quite different. The mark
reference becomes &quot;rectangular,&quot; such that the
action <code class="literal">d\b</CODE
> will
delete the rectangle of characters whose corners are marked by the
cursor and the character which holds mark <code class="literal">b</CODE
>.</P
><table class="informaltable" border="1" cellpadding="3"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Keystrokes</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Results</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">ma</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><img class="graphic" src="figs/vi.1201.gif" webstripperlinkwas="figs/vi.1201.gif" alt="Graphic"><p class="para">Set mark <code class="literal">a</CODE
> at the <em class="emphasis">b</EM
>
in <em class="emphasis">book</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">3jfr</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><img class="graphic" src="figs/vi.1202.gif" webstripperlinkwas="figs/vi.1202.gif" alt="Graphic"><p class="para">Move the cursor to the <em class="emphasis">r</EM
> in
<em class="emphasis">number</EM
> to mark the opposite corner.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^A ~\a</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><img class="graphic" src="figs/vi.1203.gif" webstripperlinkwas="figs/vi.1203.gif" alt="Graphic"><p class="para">Toggle the case of rectangle bounded with mark <code class="literal">a</CODE
>.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">The commands which define arbitrary regions and operate upon
them are summarized in
<a class="xref" href="#VI6-CH-12-TAB-5">Table 12.5</A
>.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="VI6-CH-12-TAB-5">Table 12.5: vile Block Mode Operations</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Operation</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">q</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Start and end a quoted motion.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^A r</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Open up a rectangle.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">&gt;</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Shift text to the right.
Same as <code class="literal">^A r</CODE
> when the region is
rectangular.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">&lt;</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Shift text to the left.
Same as <code class="literal">d</CODE
> when the region is rectangular.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">y</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yank the whole region.
<kbd class="command">vile</KBD
> remembers that it was rectangular.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">c</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Change the region.
For a non-rectangular region, delete all the text between the
end points and enter insert mode. For a rectangular region,
prompt for the text to fill the lines.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^A u</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Change the case of the region
to all uppercase.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^A l</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Change the case of the region
to all lowercase.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^A ~</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Toggle the case of all
alphabetic characters in the region.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^A</CODE
> <kbd class="keycap">[SPACE]</KBD
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Fill the region with
spaces.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">p</CODE
>, <code class="literal">P</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Put the text back. <kbd class="command">vile</KBD
>
does a rectangular put if the original text was rectangular.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^A p</CODE
>, <code class="literal">^A P</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Force previously yanked text
to be put back as if it were rectangular. The width of the longest
yanked line is used for the rectangle's width.</P
></TD
></TR
></TBODY
></TABLE
></DIV
><a class="indexterm" name="AUTOID-20141"></A
><a class="indexterm" name="AUTOID-20142"></A
><a class="indexterm" name="AUTOID-20143"></A
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch12_07.htm" webstripperlinkwas="ch12_07.htm" title="12.7 Extended Regular Expressions"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 12.7 Extended Regular Expressions" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" title="Learning the vi Editor"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Learning the vi Editor" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch12_09.htm" webstripperlinkwas="ch12_09.htm" title="12.9 Programming Assistance"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 12.9 Programming Assistance" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">12.7 Extended Regular Expressions</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">12.9 Programming Assistance</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="../upt/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>

