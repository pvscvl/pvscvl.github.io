<html><head><title>[Chapter 11] 11.8 Improved Editing Facilities</TITLE
><meta name="DC.Creator" content="Linda Lamb &amp; Arnold Robbins"><meta name="DC.Date" content="1999-11-23T17:58:51Z"><meta name="DC.Format" content="text/html" scheme="MIME"><meta name="DC.Identifier" content="O'Reilly Unix CDROM-unknown"><meta name="DC.Language" content="en-US"><meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.Source" content="unknown" scheme="ISBN"><meta name="DC.Subject.Keyword" content="Unix, vi, text, editor, tool"><meta name="DC.Title" content="Learning the vi Editor"><meta name="DC.Type" content="Text.Monograph"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch11_01.htm" webstripperlinkwas="ch11_01.htm" title="11. vim&nbsp;-- vi Improved"><link rel="prev" href="ch11_07.htm" webstripperlinkwas="ch11_07.htm" title="11.7 Extended Regular Expressions"><link rel="next" href="ch11_09.htm" webstripperlinkwas="ch11_09.htm" title="11.9 Programming Assistance"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="Learning the vi Editor" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch11_07.htm" webstripperlinkwas="ch11_07.htm" title="11.7 Extended Regular Expressions"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 11.7 Extended Regular Expressions" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch11_01.htm" webstripperlinkwas="ch11_01.htm" title="11. vim&nbsp;-- vi Improved">Chapter 11<br>vim&nbsp;-- vi Improved</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch11_09.htm" webstripperlinkwas="ch11_09.htm" title="11.9 Programming Assistance"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 11.9 Programming Assistance" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="VI6-CH-11-SECT-8">11.8 Improved Editing Facilities</A
></H2
><p class="para"><a class="indexterm" name="CH11.FACIL1"></A
><a class="indexterm" name="CH11.FACIL2"></A
><a class="indexterm" name="CH11.FACIL3"></A
>This section describes the features of <kbd class="command">vim</KBD
>
that make simple text editing easier and more powerful.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-11-SECT-8.1">11.8.1 Command-Line History and Completion</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-16413"></A
><a class="indexterm" name="AUTOID-16417"></A
><a class="indexterm" name="AUTOID-16421"></A
><a class="indexterm" name="AUTOID-16424"></A
><a class="indexterm" name="AUTOID-16427"></A
><a class="indexterm" name="AUTOID-16430"></A
><kbd class="command">vim</KBD
> keeps a history of your <kbd class="command">ex</KBD
> commands,
search strings, and expressions in its extended command language.
These are three separate histories. The size of each is controlled<a class="indexterm" name="AUTOID-16435"></A
>
by the <code class="literal">history</CODE
> option; the default is 20.
You may wish to increase it in your <i class="filename">.vimrc</I
> file,
although <kbd class="command">vim</KBD
> does take steps to maintain only unique
commands.</P
><p class="para">To access the history, use the <img src="../chars/uarr.gif" webstripperlinkwas="../chars/uarr.gif" alt="-^"> cursor key on the colon command
line. This will move backwards through the saved commands (most recent
first). The <img src="../chars/darr.gif" webstripperlinkwas="../chars/darr.gif" alt="-v"> key will move forwards.
You can move around on the command line using the <img src="../chars/larr.gif" webstripperlinkwas="../chars/larr.gif" alt="&lt;-"> and <img src="../chars/rarr.gif" webstripperlinkwas="../chars/rarr.gif" alt="-&gt;">
keys. By default, text that you type is inserted into the
command line. You can use the <kbd class="keycap">[INS]</KBD
> (Insert) key
on your keyboard to toggle this mode, in which case what you
type will replace what's on the command line. The
<kbd class="keycap">[BACKSPACE]</KBD
> key will erase characters.</P
><p class="para">You can use the <kbd class="keycap">[SHIFT]</KBD
> or <kbd class="keycap">[CTRL]</KBD
>
key in combination with the <img src="../chars/larr.gif" webstripperlinkwas="../chars/larr.gif" alt="&lt;-"> and <img src="../chars/rarr.gif" webstripperlinkwas="../chars/rarr.gif" alt="-&gt;"> keys to move the
cursor left or right one word at time.
This may or may not work on all keyboards, though.
You can use <code class="literal">^B</CODE
> or <kbd class="keycap">[HOME]</KBD
> to
move the cursor to the beginning of the command line, and
<code class="literal">^E</CODE
> or <kbd class="keycap">[END]</KBD
> to move to the
end of the command line. The control key versions should always
work.</P
><p class="para">The behavior of the <kbd class="keycap">[ESC]</KBD
> character can vary.
If <kbd class="command">vim</KBD
> is in
<kbd class="command">vi</KBD
> compatibility mode, <kbd class="keycap">[ESC]</KBD
>
acts likes <kbd class="keycap">[RETURN]</KBD
> and executes the command.
When <kbd class="command">vi</KBD
>-compatibility is turned off,
<kbd class="keycap">[ESC]</KBD
> will exit the command line without executing
anything.</P
><p class="para"><kbd class="command">vim</KBD
> also provides completion facilities on the
<kbd class="command">ex</KBD
> command line.<a class="indexterm" name="AUTOID-16461"></A
>
The <code class="literal">wildchar</CODE
> option contains the character that
you type when you want <kbd class="command">vim</KBD
> to do a completion.
The default value is the tab character.
You can use completion for
all of the following:</P
><dl class="variablelist"><dt class="term">Command names</DT
><dd class="listitem"><p class="para">Available at the start of the command line.</P
></DD
><dt class="term">Tag values</DT
><dd class="listitem"><p class="para">After you've typed <code class="literal">:tag</CODE
>.</P
></DD
><dt class="term">Filenames</DT
><dd class="listitem"><p class="para">When typing a command that takes a filename argument.
When multiple files match a pattern during filename completion,<a class="indexterm" name="AUTOID-16479"></A
>
the value of the <code class="literal">suffixes</CODE
>
option sets a priority among them, in order
to pick the one <kbd class="command">vim</KBD
> will actually use.
(See <code class="literal">:help suffixes</CODE
> for the details.)</P
></DD
><dt class="term">Option values</DT
><dd class="listitem"><p class="para">When entering a <code class="literal">:set</CODE
> command.
This has two features: when typing the name of the
option itself, hitting <kbd class="keycap">[TAB]</KBD
> will complete the
option name.
You can then type the <code class="literal">=</CODE
> sign and hit
<kbd class="keycap">[TAB]</KBD
> again, and <kbd class="command">vim</KBD
> will fill
in the current value of the variable.</P
></DD
></DL
><p class="para">Besides just the <kbd class="keycap">[TAB]</KBD
> key to do an expansion,
a number of other control keys provide additional functionality.
<a class="xref" href="#VI6-CH-11-TAB-3">Table 11.3</A
>
describes the commands and what they do.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="VI6-CH-11-TAB-3">Table 11.3: vim Command-Line Completion Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^D</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Lists the names that match the pattern.
For filenames, directories will be highlighted.<a class="indexterm" name="AUTOID-16511"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Value of <code class="literal">wildchar</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">(Default: tab)
Performs a match, inserting the generated text.
For multiple matches, the first match is inserted.
Hitting <kbd class="keycap">[TAB]</KBD
> successively cycles among all the
matches.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^N</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Go to next of multiple <code class="literal">wildchar</CODE
> matches, if any;<a class="indexterm" name="AUTOID-16527"></A
>
otherwise, recall more recent history line.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^P</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Go to previous of multiple <code class="literal">wildchar</CODE
> matches, if any;
otherwise, recall older history line.<a class="indexterm" name="AUTOID-16536"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^A</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Insert all names that match the pattern.<a class="indexterm" name="AUTOID-16544"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^L</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">If there is exactly one match, insert it; otherwise,
expand to the longest common prefix of the multiple matches.<a class="indexterm" name="AUTOID-16552"></A
></P
></TD
></TR
></TBODY
></TABLE
><p class="para">The completion facilities are extensive; see <code class="literal">:help cmdline</CODE
>
for the full details. Besides command-line completion, <kbd class="command">vim</KBD
>
also provides insert mode completion.</P
><p class="para"><a class="indexterm" name="AUTOID-16559"></A
>When typing text, especially in programs, the same words appear quite often.
<kbd class="command">vim</KBD
> has
commands that search backwards or forwards for a match with a half-finished
word. For example, if you were typing this text and had
entered <em class="emphasis">ex</EM
>, giving
the <code class="literal">^P</CODE
> command would have completed
it to <em class="emphasis">example</EM
>.  This is a nice
way to reduce the number of typed characters and to avoid spelling mistakes.</P
><p class="para">Completion works not only with words in the text where you are typing,
you can also fetch words from much further away. 
<a class="xref" href="#VI6-CH-11-TAB-4">Table 11.4</A
> shows an overview of the relevant
commands.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="VI6-CH-11-TAB-4">Table 11.4: vim Insert Mode Completion Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^N</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Complete a word from the current buffer, searching<a class="indexterm" name="AUTOID-16583"></A
>
forward (mnemonic: next).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^P</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Complete a word from the current buffer, searching<a class="indexterm" name="AUTOID-16591"></A
>
backward (mnemonic: previous).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^X ^K</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Complete words from a dictionary.<a class="indexterm" name="AUTOID-16599"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^X ^I</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Complete words from included files.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^X ^D</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Complete a macro (defined word) from included files.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^X ^]</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Complete words from a tags file.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^X ^F</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Complete a filename.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^X ^L</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Complete a whole line from the current buffer.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">See <code class="literal">:help ins-completion</CODE
> for more details.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-11-SECT-8.2">11.8.2 Tag Stacks</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-16632"></A
><a class="indexterm" name="AUTOID-16635"></A
><a class="indexterm" name="AUTOID-16639"></A
><a class="indexterm" name="AUTOID-16642"></A
>Tag stacking is described in <a class="xref" href="ch08_05.htm" webstripperlinkwas="ch08_05.htm">Section 8.5.3, "Tag Stacks"</A
> in <a class="xref" href="ch08_01.htm" webstripperlinkwas="ch08_01.htm">Chapter 8</A
>.
<kbd class="command">vim</KBD
> provides the richest set of facilities for
working with tags. Besides just the ability to stack tags,
if there are multiple matching tags, you can choose among them.
You can also do a tag selection and window splitting operation
in one command. See <a class="xref" href="#VI6-CH-11-TAB-5">Table 11.5</A
> for a list of
<em class="emphasis">vim</EM
> tag commands.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="VI6-CH-11-TAB-5">Table 11.5: vim Tag Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">ta</CODE
>[<code class="literal">g</CODE
>][<code class="literal">!</CODE
>] [<code class="replaceable"><i>tagstring</I
></CODE
>]</TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Edit the file containing
<em class="emphasis">tagstring</EM
> as defined in the <i class="filename">tags</I
><a class="indexterm" name="AUTOID-16670"></A
>
file. The <code class="literal">!</CODE
> forces <kbd class="command">vim</KBD
> to
switch to the new file if the current buffer has been modified
but not saved. The file may or may not be written out depending
upon the setting of the <code class="literal">autowrite</CODE
> option.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">[<code class="replaceable"><i>count</I
></CODE
>]<code class="literal">ta</CODE
>[<code class="literal">g</CODE
>][<code class="literal">!</CODE
>]</TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Jump to the
<em class="emphasis">count</EM
>th
newer entry in the tag stack.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">[<code class="replaceable"><i>count</I
></CODE
>]<code class="literal">po</CODE
>[<code class="literal">p</CODE
>][<code class="literal">!</CODE
>]</TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Pops a cursor position off the stack,
restoring the cursor to its previous position.<a class="indexterm" name="AUTOID-16694"></A
>
If supplied, go to the <em class="emphasis">count</EM
>th
older entry.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">tags</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Display the contents<a class="indexterm" name="AUTOID-16703"></A
>
of the tag stack.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">ts</CODE
>[<code class="literal">elect</CODE
>][<code class="literal">!</CODE
>] [<code class="replaceable"><i>tagstring</I
></CODE
>]</TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>List the tags
that match <em class="emphasis">tagstring</EM
>, using the<a class="indexterm" name="AUTOID-16715"></A
>
information in the tags file(s).
If no <em class="emphasis">tagstring</EM
> is given,
the last tag name from the tag stack is used.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">sts</CODE
>[<code class="literal">elect</CODE
>][<code class="literal">!</CODE
>] [<code class="replaceable"><i>tagstring</I
></CODE
>]</TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Like <code class="literal">:tselect</CODE
>,<a class="indexterm" name="AUTOID-16728"></A
>
but splits the window for the selected tag.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">[<code class="replaceable"><i>count</I
></CODE
>]<code class="literal">tn</CODE
>[<code class="literal">ext</CODE
>][<code class="literal">!</CODE
>]</TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Jump to the<a class="indexterm" name="AUTOID-16739"></A
>
<em class="emphasis">count</EM
>th next matching
tag (default 1).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">[<code class="replaceable"><i>count</I
></CODE
>]<code class="literal">tp</CODE
>[<code class="literal">revious</CODE
>][<code class="literal">!</CODE
>]</TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Jump to the
<em class="emphasis">count</EM
>th previous matching<a class="indexterm" name="AUTOID-16752"></A
>
tag (default 1).</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">[<code class="replaceable"><i>count</I
></CODE
>]<code class="literal">tN</CODE
>[<code class="literal">ext</CODE
>][<code class="literal">!</CODE
>]<a class="indexterm" name="AUTOID-16760"></A
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">[<code class="replaceable"><i>count</I
></CODE
>]<code class="literal">tr</CODE
>[<code class="literal">ewind</CODE
>][<code class="literal">!</CODE
>]</TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Jump to the first<a class="indexterm" name="AUTOID-16771"></A
><a class="indexterm" name="AUTOID-16773"></A
>
matching tag. With <em class="emphasis">count</EM
>, jump to the
<em class="emphasis">count</EM
>th matching
tag.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">tl</CODE
>[<code class="literal">ast</CODE
>][<code class="literal">!</CODE
>]</TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Jump to the last
matching tag.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">Normally, <kbd class="command">vim</KBD
> shows you which matching tag, out
of how many, has been jumped to:</P
><blockquote class="screen"><pre class="screen">tag 1 of &gt;3</PRE
></BLOCKQUOTE
><p class="para">It uses a greater-than sign (<code class="literal">&gt;</CODE
>) to indicate that it has
not yet tried all the matches. You can use <code class="literal">:tnext</CODE
>
or <code class="literal">:tlast</CODE
> to try more matches. If this message is
not displayed because of some other message,
use <code class="literal">:0tn</CODE
> to see it.</P
><p class="para"><a class="indexterm" name="AUTOID-16794"></A
>The output of the <code class="literal">:tags</CODE
> command is shown below.
The current location is marked with a greater than sign
(<code class="literal">&gt;</CODE
>):</P
><blockquote class="screen"><pre class="screen">   # TO tag      FROM line in file
   1  1 main	         1  harddisk2:text/vim/test
 &gt; 2  2 FuncA	        58  -current-
   3  1 FuncC	       357  harddisk2:text/vim/src/amiga.c</PRE
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-16800"></A
>The <code class="literal">:tselect</CODE
> command lets you pick from
more than one matching tag. The &quot;priority&quot;
(<code class="literal">pri</CODE
> field) indicates the quality of the
match (global versus static, exact case versus case-independent, etc.);
this is described more fully in the <kbd class="command">vim</KBD
> documentation.</P
><blockquote class="screen"><pre class="screen"> nr pri kind tag	        file ~
   1 F   f    mch_delay          os_amiga.c
		mch_delay(msec, ignoreinput)
 &gt; 2 F   f    mch_delay          os_msdos.c
		mch_delay(msec, ignoreinput)
   3 F   f    mch_delay          os_unix.c
		mch_delay(msec, ignoreinput)
Enter nr of choice (&lt;CR&gt; to abort):</PRE
></BLOCKQUOTE
><p class="para">The <code class="literal">:tag</CODE
> and <code class="literal">:tselect</CODE
>
commands can be given an argument that starts with <code class="literal">/</CODE
>.
In that case, this argument is treated as a regular expression.
<kbd class="command">vim</KBD
> will find all the tags that match
the given regular expression.[<a class="footnote" href="#AUTOID-16811">2</A
>]
For example, <code class="literal">:tag /normal</CODE
> will find the
macro <code class="literal">NORMAL</CODE
>, the function <code class="literal">normal_cmd</CODE
>,
and so on. Use <code class="literal">:tselect /normal</CODE
> and enter the number
of the tag you want.</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="AUTOID-16811">[2]</A
> Prior to
Version 5.1, <kbd class="command">vim</KBD
> keyed its treatment
of the <code class="literal">:tag</CODE
> or <code class="literal">:tselect</CODE
> argument
as a regular expression based on the presence or absence of
special characters. The use of <code class="literal">/</CODE
> disambiguates
the process.</P
></DIV
></BLOCKQUOTE
><p class="para">The <kbd class="command">vi</KBD
> command mode commands are described in
<a class="xref" href="#VI6-CH-11-TAB-6">Table 11.6</A
>.
Besides using the keyboard, as in the other editors, you
can also use the mouse, if mouse support is enabled in your
version of <kbd class="command">vim</KBD
>.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="VI6-CH-11-TAB-6">Table 11.6: vim Command Mode Tag Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^]</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Look up the location of the identifier<a class="indexterm" name="AUTOID-16841"></A
>
under the cursor in the <i class="filename">tags</I
> file, and move to that
location. The current location is automatically pushed onto the
tag stack.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">&nbsp;<code class="literal">g &lt;LeftMouse&gt;</CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">&nbsp;<code class="literal">CTRL-&lt;LeftMouse&gt;</CODE
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^T</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Return to the previous location
in the tag stack, i.e., pop off one element.<a class="indexterm" name="AUTOID-16857"></A
>
A preceding count specifies how many elements to pop off
the stack.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">The <kbd class="command">vim</KBD
> options that affect tag searching
are described in
<a class="xref" href="#VI6-CH-11-TAB-7">Table 11.7</A
>.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="VI6-CH-11-TAB-7">Table 11.7: vim Options for Tag Management</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Option</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">taglength</CODE
>, <code class="literal">tl</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Controls the number of significant
characters in a tag<a class="indexterm" name="AUTOID-16880"></A
><a class="indexterm" name="AUTOID-16882"></A
>
that is to be looked up. The default value of zero indicates that all
characters are significant.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">tags</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>The value is a list of
filenames in which to look for tags.<a class="indexterm" name="AUTOID-16890"></A
>
As a special case, if a filename starts with <code class="literal">./</CODE
>,
the dot is replaced with the directory part of the current file's
pathname, making it possible to use <i class="filename">tags</I
> files
in a different directory.
The default value is <code class="literal">&quot;./tags,tags&quot;</CODE
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">tagrelative</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>When set to true (the default), and using<a class="indexterm" name="AUTOID-16901"></A
>
a <i class="filename">tags</I
> file in another directory, filenames in
that <i class="filename">tags</I
> file are considered to be relative to
the directory where the <i class="filename">tags</I
> file is.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">The <kbd class="command">vim</KBD
> 5.1 distribution comes with
Version 2.0.3 of the Exuberant <kbd class="command">ctags</KBD
> program.
As of this writing, this is the current version of
Exuberant <kbd class="command">ctags</KBD
>.</P
><p class="para"><kbd class="command">vim</KBD
> can use <kbd class="command">emacs</KBD
> style
<i class="filename">etags</I
> files, but this is only for
backwards compatibility; the format is not documented in the
<kbd class="command">vim</KBD
> documentation, nor is the use of
<i class="filename">etags</I
> files encouraged.</P
><p class="para">Finally, like <kbd class="command">elvis</KBD
>, <kbd class="command">vim</KBD
> also
looks up the entire word
containing the cursor, not just the part of the word from the
cursor location forward.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-11-SECT-8.3">11.8.3 Infinite Undo</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-16922"></A
><a class="indexterm" name="AUTOID-16925"></A
>In <kbd class="command">vim</KBD
>, being able to undo and redo multiple levels of changes
is controlled by the <code class="literal">undolevels</CODE
> option. This option is a number
indicating how many levels of<a class="indexterm" name="AUTOID-16931"></A
>
&quot;undo&quot; that <kbd class="command">vim</KBD
> should allow.
A negative value disallows <em class="emphasis">any</EM
> undoing (which is not
terribly useful).</P
><p class="para">When <code class="literal">undolevels</CODE
> is set to a non-zero
value, you enter text as normal. Then each successive <code class="literal">u</CODE
>
command undoes one change.
To redo (undo the undo), you use the
(rather mnemonic) <kbd class="keycap">[CTRL-R]</KBD
> command.</P
><p class="para"><kbd class="command">vim</KBD
> is different from <kbd class="command">elvis</KBD
>; it
starts out with a default value for <code class="literal">undolevels</CODE
> of 1,000,
which should be close enough to infinite for any given editing session.
Also, the option is global, and not per buffer.</P
><p class="para">Once <code class="literal">undolevels</CODE
> has been set, a count to either
the <code class="literal">u</CODE
> or <code class="literal">^R</CODE
> commands undoes or
redoes the given number of changes.</P
><p class="para"><a class="indexterm" name="AUTOID-16948"></A
><kbd class="command">vim</KBD
> actually implements undoing and redoing in two
different ways. When the <code class="literal">cpoptions</CODE
>
(compatibility options)
option
contains the letter <code class="literal">u</CODE
>, the <code class="literal">u</CODE
>
command works like in <kbd class="command">vi</KBD
>, and <code class="literal">^R</CODE
>
repeats the previous action (like <code class="literal">.</CODE
> in
<kbd class="command">nvi</KBD
>).
When <code class="literal">u</CODE
> is absent from <code class="literal">cpoptions</CODE
>,
<code class="literal">u</CODE
> undoes one step and <code class="literal">^R</CODE
>
redoes one step. This is easier to use, but not
<kbd class="command">vi</KBD
>-compatible.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-11-SECT-8.4">11.8.4 Arbitrary Length Lines and Binary Data</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-16966"></A
><a class="indexterm" name="AUTOID-16969"></A
><a class="indexterm" name="AUTOID-16973"></A
><a class="indexterm" name="AUTOID-16977"></A
><a class="indexterm" name="AUTOID-16981"></A
><kbd class="command">vim</KBD
>
does not have a limit on the number or lengths of lines.
When editing a binary file, you should either use the
<code class="literal">-b</CODE
> command-line option
or <code class="literal">:set binary</CODE
>.
These set several other <kbd class="command">vim</KBD
> options that make it
easier to edit binary files.
To enter 8-bit text, use <code class="literal">^V</CODE
> followed by
three decimal digits.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-11-SECT-8.5">11.8.5 Incremental Searching</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-16992"></A
><a class="indexterm" name="AUTOID-16995"></A
><a class="indexterm" name="AUTOID-16999"></A
><a class="indexterm" name="AUTOID-17003"></A
>As mentioned in <a class="xref" href="ch08_06.htm" webstripperlinkwas="ch08_06.htm#VI6-CH-8-SECT-6.4">Section 8.6.4, "Incremental Searching"</A
> in <a class="xref" href="ch08_01.htm" webstripperlinkwas="ch08_01.htm">Chapter 8</A
>,
you enable
incremental searching in <kbd class="command">vim</KBD
> using
<code class="literal">:set incsearch</CODE
>.</P
><p class="para">The cursor moves through the
file as you type.
<kbd class="command">vim</KBD
> highlights the text that matches what you've
typed so far.</P
><p class="para">You may wish to use this with the
<code class="literal">hlsearch</CODE
> option, which highlights all
matches of the most recent search pattern.
This option is particularly useful when looking for all uses
of a particular variable or function in program source code.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-11-SECT-8.6">11.8.6 Left-Right Scrolling</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-17015"></A
><a class="indexterm" name="AUTOID-17018"></A
><a class="indexterm" name="AUTOID-17021"></A
><a class="indexterm" name="AUTOID-17024"></A
><a class="indexterm" name="AUTOID-17028"></A
><a class="indexterm" name="AUTOID-17031"></A
>As mentioned in
<a class="xref" href="ch08_06.htm" webstripperlinkwas="ch08_06.htm#VI6-CH-8-SECT-6.5">Section 8.6.5, "Left-Right Scrolling"</A
> in <a class="xref" href="ch08_01.htm" webstripperlinkwas="ch08_01.htm">Chapter 8</A
>,
you enable
left-right scrolling in <kbd class="command">vim</KBD
> using<a class="indexterm" name="AUTOID-17036"></A
><a class="indexterm" name="AUTOID-17038"></A
>
<code class="literal">:set nowrap</CODE
>. The value of
<code class="literal">sidescroll</CODE
> controls the number of characters
by which <kbd class="command">vim</KBD
> shifts the screen when scrolling
left to right.
With <code class="literal">sidescroll</CODE
> set to zero, each scroll puts the
cursor in the middle of the screen. Otherwise, the screen scrolls by
the desired number of characters.</P
><p class="para"><kbd class="command">vim</KBD
> also has several commands that
scroll the window sideways, shown in <a class="xref" href="#VI6-CH-11-TAB-8">Table 11.8</A
>.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="VI6-CH-11-TAB-8">Table 11.8: vim Sideways Scrolling Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">zl</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Scroll the window left.<a class="indexterm" name="AUTOID-17062"></A
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">zh</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Scroll the window right.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">zs</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Scroll the window to put the cursor at the
left (start) of the screen.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">ze</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Scroll the window to put the cursor at the
right (end) of the screen.</P
></TD
></TR
></TBODY
></TABLE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="VI6-CH-11-SECT-8.7">11.8.7 Visual Mode</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-17082"></A
><a class="indexterm" name="AUTOID-17085"></A
><kbd class="command">vim</KBD
> allows you
to select regions one character at a time, one line at a time,
or rectangularly, using the commands shown in <a class="xref" href="#VI6-CH-11-TAB-9">Table 11.9</A
>.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="VI6-CH-11-TAB-9">Table 11.9: vim Block Mode Command Characters</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Function</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">v</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Start region selection,<a class="indexterm" name="AUTOID-17106"></A
>
character at a time mode.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">V</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Start region selection,
line at a time mode.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^V</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Start region selection,<a class="indexterm" name="AUTOID-17120"></A
>
rectangular mode.</P
></TD
></TR
></TBODY
></TABLE
><p class="para"><kbd class="command">vim</KBD
>
highlights (using reverse video) the text as you are selecting.
To make your selection, simply use the normal motion keys. If<a class="indexterm" name="AUTOID-17125"></A
>
<code class="literal">showmode</CODE
> is set, <kbd class="command">vim</KBD
> will
indicate the mode as one of <em class="emphasis">visual</EM
>,
<em class="emphasis">visual line</EM
>, or <em class="emphasis">visual block</EM
>.
If <kbd class="command">vim</KBD
> is running inside an <kbd class="command">xterm</KBD
>,
you can also use the mouse to select text (see
<code class="literal">:help mouse-using</CODE
>
for the details).
This also works in the GUI versions.
The screen below shows a rectangular region:</P
><blockquote class="screen"><pre class="screen">The 6th edition of &lt;citetitle&gt;Learning the vi Editor&lt;/citetitle&gt;
brings the <em class="emphasis">book into the late 19</EM
>90&amp;rsquo;s.
In particul<em class="emphasis">ar, besides the &amp;ldqu</EM
>o;original&amp;rdquo; version of
&lt;command&gt;vi<em class="emphasis">&lt;/command&gt; that comes</EM
> as a standard part of every UNIX
 
system, the<em class="emphasis">re are now a number o</EM
>f freely available &amp;ldquo;clones&amp;rdquo;
or work-alike editors.</PRE
></BLOCKQUOTE
><p class="para">After applying the <code class="literal">~</CODE
> operator,
the screen looks like this:</P
><blockquote class="screen"><pre class="screen">The 6th edition of &lt;citetitle&gt;Learning the vi Editor&lt;/citetitle&gt;
brings the BOOK INTO THE LATE 1990&amp;rsquo;s.
In particulAR, BESIDES THE &amp;LDQUo;original&amp;rdquo; version of
&lt;command&gt;vi&lt;/COMMAND&gt; THAT COMES as a standard part of every UNIX system,
there are nOW A NUMBER OF FREELY available &amp;ldquo;clones&amp;rdquo;
or work-alike editors.</PRE
></BLOCKQUOTE
><p class="para"><kbd class="command">vim</KBD
> permits many operations on the selected text.
Some operations work only on whole lines,
even if you've selected a region that does not contain whole
lines.</P
><p class="para"><kbd class="command">vim</KBD
> has special commands for
increasing the &quot;swept out&quot; area, and it
allows you to apply almost
any <kbd class="command">vi</KBD
> mode command to the highlighted text, as
well as some commands that are unique to visual mode.</P
><p class="para">When defining the area to be operated on, a number of commands
make it easy to treat words, sentences, or blocks of C/C++ code
as single objects.
These are described in
<a class="xref" href="#VI6-CH-11-TAB-10">Table 11.10</A
>.
These commands can be used by themselves to extend the region,
or they can be used in conjunction with an operator.
For example, <code class="literal">daB</CODE
> deletes a brace-enclosed
block of text, including the braces.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="VI6-CH-11-TAB-10">Table 11.10: vim Block Mode Object Selectors</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Selects</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">aw</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">A word (with whitespace)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">iw</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">An inner word
(without whitespace)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">aW</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">A WORD (with whitespace)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">iW</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">An inner WORD
(without whitespace)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">as</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">A sentence (with whitespace)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">is</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">An inner sentence
(without whitespace)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">ap</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">A paragraph (with whitespace)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">ip</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">An inner paragraph
(without whitespace)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">ab</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">A <code class="literal">(...)</CODE
>
block (includes parentheses)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">ib</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">An inner <code class="literal">(...)</CODE
>
block (not including the parentheses)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">aB</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">A <code class="literal">{...}</CODE
> block
(includes braces)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">iB</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">An inner <code class="literal">{...}</CODE
> block
(not including the braces)</P
></TD
></TR
></TBODY
></TABLE
><p class="para">The terms &quot;word&quot; and &quot;WORD&quot; have the
same meaning as for the <code class="literal">w</CODE
> and <code class="literal">W</CODE
>
motion commands.</P
><p class="para"><kbd class="command">vim</KBD
> allows you to use many operators on
highlighted text. The available operators are summarized in
<a class="xref" href="#VI6-CH-11-TAB-11">Table 11.11</A
>.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="VI6-CH-11-TAB-11">Table 11.11: vim Block Mode Operations</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Operation</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">~</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Flip the case of the
selected text.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">o</CODE
>, <code class="literal">O</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Move to the other end of the
highlighted text. <code class="literal">o</CODE
> moves from
the start of the highlighted area to end, and vice versa.
<code class="literal">O</CODE
> in block mode moves to the other end of the
text on the current line. You can continue sweeping out the
area from the new position.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">&lt;</CODE
>, <code class="literal">&gt;</CODE
>, <code class="literal">!</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Shift text left or right, filter
text.
These operate on the whole lines
containing the marked region.
In the future, for a block, only the block
will be shifted.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">=</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Filters text through the program
named by the <code class="literal">equalprg</CODE
> option. (Typically a simple text
formatter such as <kbd class="command">fmt</KBD
>.)
This operates on the whole lines
containing the marked region.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">gq</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Formats the lines containing the
marked region to be no longer that what's set in
<code class="literal">textwidth</CODE
>.
This operates on the whole lines
containing the marked region.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">:</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Start an <kbd class="command">ex</KBD
> command
for the highlighted lines. This operates on the whole lines
containing the marked region.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">c</CODE
>, <code class="literal">d</CODE
>, <code class="literal">y</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Change, delete, or yank text.
These work even on rectangular text, although the <code class="literal">c</CODE
>
command only enters text on the first line in the block.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">c</CODE
>, <code class="literal">r</CODE
>, <code class="literal">s</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Change the highlighted text.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">C</CODE
>, <code class="literal">S</CODE
>, <code class="literal">R</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>If using <kbd class="keycap">[CTRL-V]</KBD
>,
the rectangle is deleted and insert mode is entered in the first line.
Otherwise, whole lines are replaced.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">x</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Delete the highlighted text.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">X</CODE
>, <code class="literal">Y</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Delete or yank the whole
lines containing the highlighted area.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">D</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Delete to the end of the line.
When using <kbd class="keycap">[CTRL-V]</KBD
>, the highlighted block
and the rest of the text to end of each line is deleted.
If not using <kbd class="keycap">[CTRL-V]</KBD
>,
the whole line is deleted.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">J</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Join the highlighted lines.
This operates on the whole lines
containing the marked region.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">U</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Make uppercase.
This command is unique to visual mode.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">u</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Make lowercase.
This command is unique to visual mode.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">^]</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><em class="emphasis"></EM
>Use the highlighted text as
the tag to find in a tag search.</P
></TD
></TR
></TBODY
></TABLE
></DIV
><a class="indexterm" name="AUTOID-17357"></A
><a class="indexterm" name="AUTOID-17358"></A
><a class="indexterm" name="AUTOID-17359"></A
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch11_07.htm" webstripperlinkwas="ch11_07.htm" title="11.7 Extended Regular Expressions"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 11.7 Extended Regular Expressions" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" title="Learning the vi Editor"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Learning the vi Editor" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch11_09.htm" webstripperlinkwas="ch11_09.htm" title="11.9 Programming Assistance"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 11.9 Programming Assistance" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">11.7 Extended Regular Expressions</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">11.9 Programming Assistance</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="../upt/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>

