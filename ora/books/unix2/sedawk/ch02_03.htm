<html><head><title>[Chapter 2] 2.3 Using sed</TITLE
><meta name="DC.title" content="sed &amp; awk"><meta name="DC.creator" content="Dale Dougherty &amp; Arnold Robbins"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-03T20:49:57Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-225-5" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch02_01.htm" webstripperlinkwas="ch02_01.htm" title="2. Understanding Basic Operations"><link rel="prev" href="ch02_02.htm" webstripperlinkwas="ch02_02.htm" title="2.2 Command-Line Syntax"><link rel="next" href="ch02_04.htm" webstripperlinkwas="ch02_04.htm" title="2.4 Using awk"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="sed &amp; awk" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch02_02.htm" webstripperlinkwas="ch02_02.htm" title="2.2 Command-Line Syntax"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 2.2 Command-Line Syntax" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 2<br>Understanding Basic Operations</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch02_04.htm" webstripperlinkwas="ch02_04.htm" title="2.4 Using awk"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 2.4 Using awk" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="SEDAWK-CH-2-SECT-3">2.3 Using sed</A
></H2
><p class="para"><a class="indexterm" name="CH02.SED"></A
>There are two ways to invoke sed: either you specify your editing
instructions on the command line or you put them in a file and supply
the name of the file.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="SEDAWK-CH-2-SECT-3.1">2.3.1 Specifying Simple Instructions</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-898"></A
><a class="indexterm" name="AUTOID-900"></A
><a class="indexterm" name="AUTOID-904"></A
>You can specify simple editing commands on the command line.</P
><blockquote class="literallayout"><p class="literallayout"><code class="literal">sed</CODE
> [<code class="literal">-e</CODE
>] '<code class="replaceable"><i>instruction</I
></CODE
>' <code class="replaceable"><i>file</I
></CODE
> </P
></BLOCKQUOTE
><p class="para">The <i class="option">-e</I
> option is necessary only when you supply more
than one instruction on the command line.  It tells sed to interpret
the next argument as an instruction.  When there is a single
instruction, sed is able to make that determination on its own.  Let's
look at some examples.</P
><p class="para">Using the sample input file, <i class="filename">list</I
>, the following
example uses the <kbd class="command">s</KBD
> command for substitution to
replace &quot;MA&quot; with &quot;Massachusetts.&quot;</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>sed 's/MA/Massachusetts/' list</B
></CODE
>
John Daggett, 341 King Road, Plymouth Massachusetts
Alice Ford, 22 East Broadway, Richmond VA
Orville Thomas, 11345 Oak Bridge Road, Tulsa OK
Terry Kalkas, 402 Lans Road, Beaver Falls PA
Eric Adams, 20 Post Road, Sudbury Massachusetts
Hubert Sims, 328A Brook Road, Roanoke VA
Amy Wilde, 334 Bayshore Pkwy, Mountain View CA
Sal Carpenter, 73 6th Street, Boston Massachusetts</PRE
></BLOCKQUOTE
></P
><p class="para">Three lines are affected by the instruction but all lines are
displayed.</P
><p class="para"><a class="indexterm" name="AUTOID-922"></A
><a class="indexterm" name="AUTOID-924"></A
><a class="indexterm" name="AUTOID-926"></A
>Enclosing the instruction in single quotes is not required in all
cases but you should get in the habit of always doing it.  The
enclosing single quotes prevent the shell from interpreting special
characters or spaces found in the editing instruction.  (The
shell uses spaces to determine individual arguments submitted to a
program; characters that are special to the shell are expanded before
the command is invoked.)<a class="indexterm" name="AUTOID-928"></A
><a class="indexterm" name="AUTOID-930"></A
><a class="indexterm" name="AUTOID-933"></A
></P
><p class="para">For instance, the first example could have been entered without them
but in the next example they are required, since the substitution
command contains spaces:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>sed 's/ MA/, Massachusetts/' list</B
></CODE
>
John Daggett, 341 King Road, Plymouth, Massachusetts
Alice Ford, 22 East Broadway, Richmond VA
Orville Thomas, 11345 Oak Bridge Road, Tulsa OK
Terry Kalkas, 402 Lans Road, Beaver Falls PA
Eric Adams, 20 Post Road, Sudbury, Massachusetts
Hubert Sims, 328A Brook Road, Roanoke VA
Amy Wilde, 334 Bayshore Pkwy, Mountain View CA
Sal Carpenter, 73 6th Street, Boston, Massachusetts</PRE
></BLOCKQUOTE
></P
><p class="para">In order to place a comma between the city and state, the instruction
replaced the space before the two-letter abbreviation with a comma and
a space.</P
><p class="para">There are three ways to specify multiple instructions on the command
line: </P
><ol class="orderedlist"><li class="listitem"><p class="para">Separate instructions with a semicolon.<a class="indexterm" name="AUTOID-944"></A
><a class="indexterm" name="AUTOID-946"></A
></P
><p class="para"><blockquote class="screen"><pre class="screen">sed 's/ MA/, Massachusetts/; s/ PA/, Pennsylvania/' list</PRE
></BLOCKQUOTE
></P
></LI
><li class="listitem"><p class="para">Precede each instruction by <i class="option">-e</I
>. </P
><p class="para"><blockquote class="screen"><pre class="screen">sed -e 's/ MA/, Massachusetts/' -e 's/ PA/, Pennsylvania/' list</PRE
></BLOCKQUOTE
></P
></LI
><li class="listitem"><p class="para">Use the multiline entry capability of the Bourne shell.[1]
Press RETURN after entering a single quote and a
secondary prompt (&gt;) will be displayed for multiline input.</P
><blockquote class="footnote"><p class="para">[1] These days there are many shells that are compatible with the Bourne
shell, and work as described here: <kbd class="command">ksh</KBD
>,
<kbd class="command">bash</KBD
>, <kbd class="command">pdksh</KBD
>, and
<kbd class="command">zsh</KBD
>, to name a few.<a class="indexterm" name="AUTOID-963"></A
></P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>sed '</B
></CODE
> 
&gt; <code class="userinput"><b>s/ MA/, Massachusetts/</B
></CODE
>
&gt; <code class="userinput"><b>s/ PA/, Pennsylvania/</B
></CODE
>
&gt; <code class="userinput"><b>s/ CA/, California/' list </B
></CODE
>
John Daggett, 341 King Road, Plymouth, Massachusetts
Alice Ford, 22 East Broadway, Richmond VA
Orville Thomas, 11345 Oak Bridge Road, Tulsa OK
Terry Kalkas, 402 Lans Road, Beaver Falls, Pennsylvania
Eric Adams, 20 Post Road, Sudbury, Massachusetts
Hubert Sims, 328A Brook Road, Roanoke VA
Amy Wilde, 334 Bayshore Pkwy, Mountain View, California
Sal Carpenter, 73 6th Street, Boston, Massachusetts</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-973"></A
>This technique will not work in the C shell.  Instead, use semicolons
at the end of each instruction, and you can enter commands over
multiple lines by ending each line with a backslash.  (Or, you could
temporarily go into the Bourne shell by entering <kbd class="command">sh</KBD
>
and then type the command.)  </P
></LI
></OL
><p class="para">In the example above, changes were made to five lines and, of course,
all lines were displayed.  Remember that nothing has changed in the
input file.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="SEDAWK-CH-2-SECT-3.1.1">2.3.1.1 Command garbled</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-980"></A
><a class="indexterm" name="AUTOID-983"></A
><a class="indexterm" name="AUTOID-986"></A
><a class="indexterm" name="AUTOID-989"></A
>The syntax of a sed command can be detailed, and it's easy to make a
mistake or omit a required element.  Notice what happens when
incomplete syntax is entered:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>sed -e 's/MA/Massachusetts' list</B
></CODE
>
sed: command garbled: s/MA/Massachusetts</PRE
></BLOCKQUOTE
></P
><p class="para">Sed will usually display any line that it cannot
execute, but it does not tell you what is wrong with
the command.[2]
In this instance, a slash, which marks the search and replacement
portions of the command, is missing at the end of the substitute
command.</P
><blockquote class="footnote"><p class="para">[2] <a class="indexterm" name="AUTOID-997"></A
>Some vendors seem to have improved things. For instance, on SunOS 4.1.x,
sed reports
&quot;sed: Ending delimiter missing on substitution: s/MA/Massachusetts&quot;.</P
></BLOCKQUOTE
><p class="para">GNU sed is more helpful:<a class="indexterm" name="AUTOID-1000"></A
></P
><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>gsed -e 's/MA/Massachusetts' list</B
></CODE
>
gsed: Unterminated `s' command</PRE
></BLOCKQUOTE
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="SEDAWK-CH-2-SECT-3.2">2.3.2 Script Files</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-1007"></A
><a class="indexterm" name="AUTOID-1010"></A
>It is not practical to enter longer editing scripts on the command
line.  That is why it is usually best to create a script file that
contains the editing instructions.  The editing script is simply a
list of sed commands that are executed in the order in which they
appear.  This form, using the <i class="option">-f</I
> option, requires
that you specify the name of the script file on the command line.<a class="indexterm" name="AUTOID-1015"></A
></P
><blockquote class="literallayout"><p class="literallayout"><code class="literal">sed</CODE
> <code class="literal">-f</CODE
> <code class="replaceable"><i>scriptfile file</I
></CODE
></P
></BLOCKQUOTE
><p class="para">All the editing commands that we want executed are placed in a file.
We follow a convention of creating temporary script files named
<em class="emphasis">sedscr</EM
>.</P
><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>cat sedscr</B
></CODE
>
s/ MA/, Massachusetts/
s/ PA/, Pennsylvania/
s/ CA/, California/
s/ VA/, Virginia/
s/ OK/, Oklahoma/</PRE
></BLOCKQUOTE
><p class="para">The following command reads all of the substitution commands in
<em class="emphasis">sedscr</EM
> and applies them to each line in the input
file <em class="emphasis">list</EM
>:</P
><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>sed -f sedscr list</B
></CODE
>
John Daggett, 341 King Road, Plymouth, Massachusetts
Alice Ford, 22 East Broadway, Richmond, Virginia
Orville Thomas, 11345 Oak Bridge Road, Tulsa, Oklahoma
Terry Kalkas, 402 Lans Road, Beaver Falls, Pennsylvania
Eric Adams, 20 Post Road, Sudbury, Massachusetts
Hubert Sims, 328A Brook Road, Roanoke, Virginia
Amy Wilde, 334 Bayshore Pkwy, Mountain View, California
Sal Carpenter, 73 6th Street, Boston, Massachusetts</PRE
></BLOCKQUOTE
><p class="para">Once again, the result is ephemeral, displayed on the screen.  No
change is made to the input file.</P
><p class="para">If a sed script can be used again, you should rename the script and
save it.  Scripts of proven value can be maintained in a personal or
system-wide library.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="SEDAWK-CH-2-SECT-3.2.1">2.3.2.1 Saving output</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-1035"></A
><a class="indexterm" name="AUTOID-1038"></A
><a class="indexterm" name="AUTOID-1041"></A
><a class="indexterm" name="AUTOID-1043"></A
><a class="indexterm" name="AUTOID-1046"></A
><a class="indexterm" name="AUTOID-1049"></A
><a class="indexterm" name="AUTOID-1052"></A
>Unless you are redirecting the output of sed to another program, you
will want to capture the output in a file.  This is done by specifying
one of the shell's I/O redirection symbols followed by the name of a
file:</P
><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>sed -f sedscr list &gt; newlist</B
></CODE
></PRE
></BLOCKQUOTE
><p class="para">Do not redirect the output to the file you are editing or you will
clobber it.  (The &quot;&gt;&quot; redirection operator truncates the file
before the shell does anything else.)  If you want the output file to
replace the input file, you can do that as a separate step, using the
<kbd class="command">mv</KBD
> command.  But first make very sure your editing
script has worked properly!</P
><p class="para">In <a class="xref" href="ch04_01.htm" webstripperlinkwas="ch04_01.htm" title="Writing sed Scripts">Chapter 4, Writing sed Scripts</A
>, we will look at a shell script named
<kbd class="command">runsed</KBD
> that automates the process of creating a
temporary file and using <kbd class="command">mv</KBD
> to overwrite the
original file.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="SEDAWK-CH-2-SECT-3.2.2">2.3.2.2 Suppressing automatic display of input lines</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-1065"></A
><a class="indexterm" name="AUTOID-1067"></A
><a class="indexterm" name="AUTOID-1069"></A
>The default operation of sed is to output every input line.  The
<i class="option">-n</I
> option suppresses the automatic output.  When
specifying this option, each instruction intended to produce output
must contain a print command, <kbd class="command">p</KBD
>.  Look at the
following example.</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <code class="userinput"><b>sed -n -e 's/MA/Massachusetts/p' list</B
></CODE
>
John Daggett, 341 King Road, Plymouth Massachusetts
Eric Adams, 20 Post Road, Sudbury Massachusetts
Sal Carpenter, 73 6th Street, Boston Massachusetts</PRE
></BLOCKQUOTE
></P
><p class="para">Compare this output to the first example in this section.  Here, only
the lines that were affected by the command were printed.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="SEDAWK-CH-2-SECT-3.2.3">2.3.2.3 Mixing options (POSIX)</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-1081"></A
><a class="indexterm" name="AUTOID-1083"></A
><a class="indexterm" name="AUTOID-1085"></A
><a class="indexterm" name="AUTOID-1088"></A
>You can build up a script by combining both the <i class="option">-e</I
>
and <i class="option">-f</I
> options on the command line. The script is the
combination of all the commands in the order given.  This appears to
be supported in UNIX versions of sed, but this feature is not clearly
documented in the manpage.  The POSIX standard explicitly mandates
this behavior.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="SEDAWK-CH-2-SECT-3.2.4">2.3.2.4 Summary of options</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-1096"></A
><a class="indexterm" name="AUTOID-1099"></A
><a class="xref" href="#SEDAWK-CH-2-TAB-1" title="Command-Line Options for sed">Table 2.1</A
> summarizes the sed command-line options.</P
><table class="table"><caption class="table"><a class="title" name="SEDAWK-CH-2-TAB-1">Table 2.1: Command-Line Options for sed</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Option</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Description</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><i class="option">-e</I
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Editing instruction follows.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><i class="option">-f</I
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Filename of script follows.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><i class="option">-n</I
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Suppress automatic output of input lines.</P
></TD
></TR
></TBODY
></TABLE
></DIV
></DIV
><a class="indexterm" name="AUTOID-1126"></A
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch02_02.htm" webstripperlinkwas="ch02_02.htm" title="2.2 Command-Line Syntax"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 2.2 Command-Line Syntax" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" title="sed &amp; awk"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="sed &amp; awk" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch02_04.htm" webstripperlinkwas="ch02_04.htm" title="2.4 Using awk"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 2.4 Using awk" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">2.2 Command-Line Syntax</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">2.4 Using awk</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="../upt/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
