<html><head><title>[Chapter 8] 8.3 Other Statements That Affect Flow Control</TITLE
><meta name="DC.title" content="sed &amp; awk"><meta name="DC.creator" content="Dale Dougherty &amp; Arnold Robbins"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-03T20:58:50Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-225-5" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch08_01.htm" webstripperlinkwas="ch08_01.htm" title="8. Conditionals, Loops, and Arrays"><link rel="prev" href="ch08_02.htm" webstripperlinkwas="ch08_02.htm" title="8.2 Looping"><link rel="next" href="ch08_04.htm" webstripperlinkwas="ch08_04.htm" title="8.4 Arrays"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="sed &amp; awk" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_02.htm" webstripperlinkwas="ch08_02.htm" title="8.2 Looping"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 8.2 Looping" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 8<br>Conditionals, Loops, and Arrays</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_04.htm" webstripperlinkwas="ch08_04.htm" title="8.4 Arrays"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 8.4 Arrays" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="SEDAWK-CH-8-SECT-3">8.3 Other Statements That Affect Flow Control</A
></H2
><p class="para">The <kbd class="command">if</KBD
>, <kbd class="command">while</KBD
>,
<kbd class="command">for</KBD
>, and <kbd class="command">do</KBD
> statements allow you
to change the normal flow through a procedure.  In this section, we
look at several other statements that also affect a change in flow
control.</P
><p class="para"><a class="indexterm" name="AUTOID-6609"></A
><a class="indexterm" name="AUTOID-6611"></A
>There are two statements that affect the flow control of a loop,
<kbd class="command">break</KBD
> and <kbd class="command">continue</KBD
>.  The
<kbd class="command">break</KBD
> statement, as you'd expect, breaks out of the
loop, such that no more iterations of the loop are performed.  The
<kbd class="command">continue</KBD
> statement stops the current iteration
before reaching the bottom of the loop and starts a new iteration at
the top.</P
><p class="para">Consider what happens in the following program fragment:</P
><p class="para"><blockquote class="screen"><pre class="screen">for ( x = 1; x &lt;= NF; ++x )
	if ( y == $x ) {
		print x, $x
		break
	}
print</PRE
></BLOCKQUOTE
></P
><p class="para">A loop is set up to examine each field of the current input record.
Each time through the loop, the value of <kbd class="command">y</KBD
> is
compared to the value of a field referenced as <kbd class="command">$x</KBD
>.
If the result is true, we print the field number and its value and
then break from the loop.  The next statement to be executed is
<kbd class="command">print</KBD
>.  The use of <kbd class="command">break</KBD
> means
that we are interested only in the first match on a line and that we
don't want to loop through the rest of the fields.</P
><p class="para">Here's a similar example using the <kbd class="command">continue</KBD
> statement:</P
><p class="para"><blockquote class="screen"><pre class="screen">for ( x = 1; x &lt;= NF; ++x ) {
	if ( x == 3 ) 
		continue
	print x, $x
}</PRE
></BLOCKQUOTE
></P
><p class="para">This example loops through the fields of the current input record,
printing the field number and its value.  However (for some reason),
we want to avoid printing the third field.  The conditional statement
tests the counter variable and if it is equal to 3, the
<kbd class="command">continue</KBD
> statement is executed.  The
<kbd class="command">continue</KBD
> statement passes control back to the top
of the loop where the counter variable is incremented again.  It
avoids executing the <kbd class="command">print</KBD
> statement for that
iteration.  The same result could be achieved by simply re-writing the
conditional to execute <kbd class="command">print</KBD
> as long as
<kbd class="command">x</KBD
> is not equal to 3.  The point is that you can use
the <kbd class="command">continue</KBD
> statement to avoid hitting the bottom
of the loop on a particular iteration.</P
><p class="para"><a class="indexterm" name="AUTOID-6637"></A
><a class="indexterm" name="AUTOID-6639"></A
>There are two statements that affect the main input loop,
<kbd class="command">next</KBD
> and <kbd class="command">exit</KBD
>.  The
<kbd class="command">next</KBD
> statement causes the next line of input to be
read and then resumes execution at the top of the script.[1] 
This allows you to avoid applying other procedures on the current
input line.  A typical use of the <kbd class="command">next</KBD
> statement is
to continue reading input from a file, ignoring the other actions in
the script until that file is exhausted.  The system variable
<kbd class="command">FILENAME</KBD
> provides the name of the current input
file.  Thus, a pattern can be written:</P
><blockquote class="footnote"><p class="para">[1] Some awks don't allow you to use <b class="emphasis.bold">next</B
> from 
within a user-defined function; Caveat emptor.  </P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">FILENAME == &quot;acronyms&quot; {
	<i class="lineannotation">action</I
>
	next
}
{ print }</PRE
></BLOCKQUOTE
></P
><p class="para">This causes the action to be performed for each line in the file
<i class="filename">acronyms</I
>.  After the action is performed, the
next line of input is read.  Control does not pass to the
<kbd class="command">print</KBD
> statement until the input is taken from a
different source.</P
><p class="para">The <kbd class="command">exit</KBD
> statement exits the main input loop and
passes control to the <kbd class="command">END</KBD
> rule, if there is one.
If the <kbd class="command">END</KBD
> rule is not defined, or the
<kbd class="command">exit</KBD
> statement is used in the
<kbd class="command">END</KBD
> rule, then the script terminates.  We used the
<kbd class="command">exit</KBD
> statement earlier in the
<kbd class="command">factorial</KBD
> program to exit after reading one line of
input.</P
><p class="para">An <kbd class="command">exit</KBD
> statement can take an expression as an
argument.  The value of this expression will be returned as the exit
status of awk.  If the expression is not supplied, the exit status is
0.  If you supply a value to an initial <kbd class="command">exit</KBD
>
statement, and then call <kbd class="command">exit</KBD
> again from the
<kbd class="command">END</KBD
> rule without a value, the first value is
used. For example:</P
><p class="para"><blockquote class="screen"><pre class="screen">awk '{
	...
	exit 5
}
END { exit }'</PRE
></BLOCKQUOTE
></P
><p class="para">Here, the exit status from awk will be 5.</P
><p class="para">You will come across examples that use these flow-control statements
in upcoming sections.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch08_02.htm" webstripperlinkwas="ch08_02.htm" title="8.2 Looping"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 8.2 Looping" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" title="sed &amp; awk"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="sed &amp; awk" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_04.htm" webstripperlinkwas="ch08_04.htm" title="8.4 Arrays"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 8.4 Arrays" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">8.2 Looping</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">8.4 Arrays</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="../upt/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="../ksh/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
