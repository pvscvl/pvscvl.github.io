<html><head>
<title>[Chapter 1] 1.8 Background Jobs</TITLE>
<meta name="DC.title" content="Learning the Korn Shell"><meta name="DC.creator" content="Bill Rosenblatt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-03T20:52:20Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-054-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch01_01.htm" webstripperlinkwas="ch01_01.htm" title="1. Korn Shell Basics"><link rel="prev" href="ch01_07.htm" webstripperlinkwas="ch01_07.htm" title="1.7 Input and Output"><link rel="next" href="ch01_09.htm" webstripperlinkwas="ch01_09.htm" title="1.9 Special Characters and Quoting"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="Learning the Korn Shell" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,66" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch01_07.htm" webstripperlinkwas="ch01_07.htm" title="1.7 Input and Output"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 1.7 Input and Output" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 1<br>Korn Shell Basics</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch01_09.htm" webstripperlinkwas="ch01_09.htm" title="1.9 Special Characters and Quoting"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 1.9 Special Characters and Quoting" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="KSH-CH-1-SECT-8">1.8 Background Jobs</A
></H2
><p class="para">Pipes are actually a special case of a more general feature:
doing more than one thing at a time. This is a capability
that many other commercial operating systems don't have, because
of the rigid limits that they tend to impose upon users.  
UNIX, on the other hand,
was developed in a research lab and meant for internal use,
so it does relatively little to impose limits on the resources available
to users on a computer-as usual, leaning towards uncluttered simplicity
rather than overcomplexity.  </P
><p class="para">&quot;Doing more than one thing at a time&quot; means running more than
one program at the same time. You do this when you invoke a
pipeline; you can also do it by logging on to a UNIX system
as many times simultaneously as you wish.<a class="indexterm" name="AUTOID-1438"></A
>
(If you try that on an <span class="acronym">IBM</SPAN
> VM/CMS system, for example, you will get an
obnoxious &quot;already logged in&quot; message.)</P
><p class="para">The shell also lets you run more than one command at a time
during a single login session. Normally, when you type a command
and hit RETURN, the shell will let the command have control of your
terminal until it is done; you can't type in further commands until
the first one is done. But if you want to run a command that does
not require user input and you want to do other things while the
command is running, put an ampersand (<b class="emphasis.bold">&amp;</B
>) after the command.  <a class="indexterm" name="AUTOID-1443"></A
><a class="indexterm" name="AUTOID-1446"></A
><a class="indexterm" name="KSH-CH-1-IX-BACKGROUND-JOBS"></A
></P
><p class="para">This is called running the command in the background, and a command
that runs in this way is called a background job; for
contrast, a job run the normal way is called a foreground job.
When you start a background job, you get your shell prompt back
immediately, enabling you to enter other commands.</P
><p class="para"><a class="indexterm" name="AUTOID-1454"></A
><a class="indexterm" name="AUTOID-1456"></A
>The most obvious use for background jobs is programs that 
take a long time to run, such as <em class="emphasis">sort</EM
> or
<em class="emphasis">uncompress</EM
> on large files. For example, assume you
just got an enormous compressed file loaded into your directory
from magnetic tape.  <a class="indexterm" name="AUTOID-1460"></A
>
Compressed files are created by the <em class="emphasis">compress</EM
>
utility, which packs files into smaller amounts of space; they
have names of the form <em class="emphasis">filename.Z</EM
>, where <em class="emphasis">filename</EM
> is
the name of the original uncompressed file.
Let's say the file is <em class="emphasis">gcc.tar.Z</EM
>, which is a
compressed archive file that contains well over 10 MB of
source code files.  </P
><p class="para"><a class="indexterm" name="AUTOID-1467"></A
>Type <b class="emphasis.bold">uncompress gcc.tar &amp;</B
> (you
can omit the .Z), and the system will start a job in the
background that uncompresses the data &quot;in place&quot; and ends
up with the file <em class="emphasis">gcc.tar</EM
>.
Right 
after you type the command, you will see a line like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">[1]     4692</PRE
></BLOCKQUOTE
></P
><p class="para">followed by your shell prompt, meaning that you can enter
other commands. Those numbers give you
ways of referring to your background job; <a class="xref" href="ch08_01.htm" webstripperlinkwas="ch08_01.htm" title="Process Handling">Chapter 8</A
>
explains
them in detail.  </P
><p class="para"><a class="indexterm" name="AUTOID-1476"></A
>You can check on background jobs with the command <b class="emphasis.bold">jobs</B
>.
For each background job, <b class="emphasis.bold">jobs</B
> prints a line similar
to the above but with an indication of the job's status:</P
><p class="para"><blockquote class="screen"><pre class="screen">[1]  +  Running                 uncompress gcc.tar</PRE
></BLOCKQUOTE
></P
><p class="para">When the job finishes, you will see a message
like this right before your shell prompt:</P
><p class="para"><blockquote class="screen"><pre class="screen">[1] +  Done                     uncompress gcc.tar</PRE
></BLOCKQUOTE
></P
><p class="para">The message changes if your background job terminated with
an error; again, see <a class="xref" href="ch08_01.htm" webstripperlinkwas="ch08_01.htm" title="Process Handling">Chapter 8</A
> for details.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-1-SECT-8.1">1.8.1 Background I/O</A
></H3
><p class="para">Jobs you put in the
background should not do I/O to your terminal.
Just think about it for a moment and you'll understand why.</P
><p class="para">By definition, a background job doesn't have control over 
your terminal. Among other things, this means that only the
foreground process (or, if none, the shell itself) is &quot;listening&quot;
for input from your keyboard. If a background job needs keyboard
input, it will often just sit there doing nothing until you
do something about it (as described in <a class="xref" href="ch08_01.htm" webstripperlinkwas="ch08_01.htm" title="Process Handling">Chapter 8</A
>).</P
><p class="para">If a background job produces screen output, the output will just appear on your screen.
If you are running a job in the foreground that produces output
too, then the output from the two jobs will be randomly
(and often annoyingly) interspersed.</P
><p class="para">If you want to run a job in the background that expects standard
input or produces standard output, the obvious solution is
to redirect it so that it comes from or goes to a file. The only
exception is that some programs produce small, one-line messages
(warnings, &quot;done&quot; messages, etc.); you may not mind if these are
interspersed with whatever other output you are seeing at a
given time.</P
><p class="para"><a class="indexterm" name="KSH-CH-1-IX-DIFF"></A
>For example, the <em class="emphasis">diff</EM
> utility examines two files,
whose names are given as arguments, and prints a summary of
their differences on the standard output. If the files are
exactly the same, <em class="emphasis">diff</EM
> is silent. Usually, you invoke
<em class="emphasis">diff</EM
> expecting to see a few lines that are different.</P
><p class="para"><a class="indexterm" name="AUTOID-1502"></A
><a class="indexterm" name="AUTOID-1504"></A
><em class="emphasis">diff</EM
>, like <em class="emphasis">sort</EM
> and <em class="emphasis">compress</EM
>, can take a long
time to run if the input files are very large. Suppose you have
two large files that are called <em class="emphasis">warandpeace.wp</EM
> and <em class="emphasis">warandpeace.wp.old</EM
>.
The command <b class="emphasis.bold">diff warandpeace.wp warandpeace.wp.old</B
>
[9]
reveals that the author decided to change the name &quot;Ivan&quot;
to &quot;Aleksandr&quot; throughout the entire file-i.e., hundreds of
differences, resulting in large amounts of output.</P
><blockquote class="footnote"><p class="para">[9] You could use <b class="emphasis.bold">diff warandpeace</B
><code class="literal">*</CODE
> as a shorthand to save
typing-as long as there are no other files with names of that
form. Remember that <em class="emphasis">diff</EM
> doesn't see the arguments until
after the shell has expanded the wildcards. Many people
overlook this use of wildcards.</P
></BLOCKQUOTE
><p class="para">If you type <b class="emphasis.bold">diff warandpeace.wp warandpeace.wp.old &amp;</B
>,
then the system will spew lots and lots of output at you,
which it will be very difficult to stop-even with the techniques
explained in <a class="xref" href="ch07_01.htm" webstripperlinkwas="ch07_01.htm" title="Input/Output and Command-line Processing">Chapter 7</A
>.  However, if you type:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">diff warandpeace.wp warandpeace.wp.old &gt; wpdiff &amp;</B
></PRE
></BLOCKQUOTE
></P
><p class="para">then the differences will be saved in the file <em class="emphasis">wpdiff</EM
>
for you to examine later.<a class="indexterm" name="AUTOID-1525"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-1-SECT-8.2">1.8.2 Background Jobs and Priorities</A
></H3
><p class="para">Background jobs can save you a lot of thumb-twiddling time
(or can help you diet by eliminating excuses to run to the
candy machine). Just remember that such jobs
eat up lots of system resources like memory and the processor
(CPU). Just because you're running several jobs at once
doesn't mean 
that they will run faster than they
would if run sequentially-in fact, it's usually worse.</P
><p class="para"><a class="indexterm" name="KSH-CH-1-IX-PRIORITIES"></A
>Every job on the system is assigned a <em class="emphasis">priority</EM
>, a number
that tells the operating system how much priority to give the
job when it doles out resources (the higher the number, the lower
the priority). Foreground commands that you enter
from the shell usually have the same, standard priority.
But background jobs, by default, have lower priority.
[10]</P
><blockquote class="footnote"><p class="para">[10] This feature was borrowed from the C shell; it is not 
present in most Bourne shells.</P
></BLOCKQUOTE
><p class="para">You'll find out in <a class="xref" href="ch03_01.htm" webstripperlinkwas="ch03_01.htm" title="Customizing Your Environment">Chapter 3</A
> how you can override this priority assignment
so that background jobs run at the same priority as foreground
jobs. However,
if you're on a multiuser system, then running lots
of background jobs may eat up more than your fair
share of resources, and you should consider whether having 
your job run as fast as possible is really more important than
being a good citizen.<a class="indexterm" name="KSH-CH-1-IX-NICE"></A
></P
><div class="sect3"><h4 class="sect3"><a class="title" name="KSH-CH-1-SECT-8.2.1">1.8.2.1 nice</A
></H4
><p class="para">Speaking of good citizenship, there is also a shell command 
that lets you lower the priority of any job: the aptly-named
<em class="emphasis">nice</EM
>. If you type
<b class="emphasis.bold">nice</B
> <em class="emphasis">command</EM
>, where 
<em class="emphasis">command</EM
> can be a complex shell
command line with pipes, redirectors, etc., then the command
will run at a lower priority. You can control just how much lower
by giving <em class="emphasis">nice</EM
> a numerical argument; consult the man
page for details.  
[11]<a class="indexterm" name="AUTOID-1551"></A
><a class="indexterm" name="AUTOID-1552"></A
><a class="indexterm" name="AUTOID-1553"></A
></P
><blockquote class="footnote"><p class="para">[11] If you are a system administrator logged in as <b class="emphasis.bold">root</B
>, then
you can also use <em class="emphasis">nice</EM
> to raise a job's priority.</P
></BLOCKQUOTE
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch01_07.htm" webstripperlinkwas="ch01_07.htm" title="1.7 Input and Output"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 1.7 Input and Output" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" title="Learning the Korn Shell"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Learning the Korn Shell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch01_09.htm" webstripperlinkwas="ch01_09.htm" title="1.9 Special Characters and Quoting"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 1.9 Special Characters and Quoting" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">1.7 Input and Output</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">1.9 Special Characters and Quoting</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="../upt/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
