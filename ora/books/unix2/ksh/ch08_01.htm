<html><head>
<title>[Chapter 8] Process Handling</TITLE>
<meta name="DC.title" content="Learning the Korn Shell"><meta name="DC.creator" content="Bill Rosenblatt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-03T21:14:41Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-054-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" title="Learning the Korn Shell"><link rel="prev" href="ch07_03.htm" webstripperlinkwas="ch07_03.htm" title="7.3 Command-line Processing"><link rel="next" href="ch08_02.htm" webstripperlinkwas="ch08_02.htm" title="8.2 Job Control"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="Learning the Korn Shell" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,66" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_03.htm" webstripperlinkwas="ch07_03.htm" title="7.3 Command-line Processing"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 7.3 Command-line Processing" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 8</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_02.htm" webstripperlinkwas="ch08_02.htm" title="8.2 Job Control"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 8.2 Job Control" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="CHAPTER"><h1 class="chapter"><a class="title" name="KSH-CH8-PROCHAND">8. Process Handling</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="sect1" href="#KSH-CH-8-SECT-1" title="8.1 Process IDs and Job Numbers">Process IDs and Job Numbers</A
><br><a class="sect1" href="ch08_02.htm" webstripperlinkwas="ch08_02.htm" title="8.2 Job Control">Job Control</A
><br><a class="sect1" href="ch08_03.htm" webstripperlinkwas="ch08_03.htm" title="8.3 Signals">Signals</A
><br><a class="sect1" href="ch08_04.htm" webstripperlinkwas="ch08_04.htm" title="8.4 trap">trap</A
><br><a class="sect1" href="ch08_05.htm" webstripperlinkwas="ch08_05.htm" title="8.5 Coroutines">Coroutines</A
><br><a class="sect1" href="ch08_06.htm" webstripperlinkwas="ch08_06.htm" title="8.6 Subshells">Subshells</A
></P
><p></P
></DIV
><p class="para"><a class="indexterm" name="AUTOID-13195"></A
><a class="indexterm" name="AUTOID-13198"></A
>The UNIX operating system built its reputation on a small number of
concepts, all of which are simple yet powerful. We've seen most of 
them by now: standard input/output, pipes, text-filtering
utilities, the tree-structured file system, and so on. UNIX also
gained notoriety as the first small-computer operating system to 
give each user control over more than one process.  <a class="indexterm" name="KSH-CH-8-IX-USER-CONTROLLED-MULTITASKING"></A
>
We call this capability <em class="emphasis">user-controlled multitasking</EM
>.</P
><p class="para">If UNIX is the only operating system that you're familiar with,
you might be surprised to learn that several other major operating 
systems have been sadly lacking in this area.  <a class="indexterm" name="AUTOID-13205"></A
><a class="indexterm" name="AUTOID-13207"></A
><a class="indexterm" name="AUTOID-13209"></A
>
For example,
Microsoft's MS-DOS, for IBM PC compatibles, has no multitasking at all,
let alone user-controlled multitasking.
IBM's own VM/CMS system for large mainframes handles multiple
users but gives them only one process each.
DEC's VAX/VMS has user-controlled multitasking, 
but it is limited and difficult to use. <a class="indexterm" name="AUTOID-13211"></A
><a class="indexterm" name="AUTOID-13214"></A
><a class="indexterm" name="AUTOID-13216"></A
>
The latest generation of
small-computer operating systems, such as Apple's 
Macintosh OS System 7, IBM's
OS/2 Version 2, and Microsoft's Windows NT, finally include 
user-controlled multitasking at the operating system level.
[1]<a class="indexterm" name="AUTOID-13232"></A
></P
><blockquote class="footnote"><p class="para">[1] <a class="indexterm" name="AUTOID-13221"></A
><a class="indexterm" name="AUTOID-13224"></A
><a class="indexterm" name="AUTOID-13226"></A
><a class="indexterm" name="AUTOID-13229"></A
>Programs like Apple's Multifinder and Microsoft Windows work <em class="emphasis">on top 
of</EM
>
the operating system (Mac OS Version 6 and MS-DOS, respectively)
to give the user limited multitasking.</P
></BLOCKQUOTE
><p class="para">But if you've gotten this far in this book, you probably don't think
that multitasking is a big deal.  <a class="indexterm" name="AUTOID-13234"></A
>
You're probably used to the idea
of running a process in the background by putting an ampersand (<b class="emphasis.bold">&amp;</B
>) at the end
of the command line.  <a class="indexterm" name="AUTOID-13237"></A
>
You have also seen the idea of a <em class="emphasis">subshell</EM
>
in <a class="xref" href="ch04_01.htm" webstripperlinkwas="ch04_01.htm" title="Basic Shell Programming">Chapter 4, Basic Shell Programming</A
> when we showed how shell scripts run.</P
><p class="para">In this chapter, we will cover most of the Korn shell's features that
relate to multitasking and process handling in general. We say &quot;most&quot;
because some of these features are,
like the file descriptors we saw
in the previous chapter, of interest only to low-level systems 
programmers.  </P
><p class="para">We'll start out by looking at certain important primitives for 
identifying processes and for controlling them during login sessions and 
within shell scripts. Then we will move out to a higher-level 
perspective, looking at ways to get processes to communicate with each 
other.  <a class="indexterm" name="AUTOID-13243"></A
><a class="indexterm" name="AUTOID-13245"></A
>
The Korn shell's <em class="emphasis">coroutine</EM
> facility is the most 
sophisticated interprocess communication scheme that we'll examine; 
we'll also look in more detail at concepts we've already seen, like 
pipes and subshells.  </P
><p class="para">Don't worry about getting bogged down in low-level technical details 
about UNIX. We will provide only the technical information that is 
necessary to explain higher-level features, plus a few other tidbits 
designed to pique your curiosity. <a class="indexterm" name="AUTOID-13249"></A
>
If you are interested in finding out 
more about these areas, refer to your UNIX Programmer's Manual or
a book on UNIX internals that pertains to your version of UNIX.</P
><p class="para">We strongly recommend that you try out the examples in this chapter.
The behavior of code that involves multiple processes is not as easy
to understand on paper as most of the other examples in this book.</P
><div class="sect1"><h2 class="sect1"><a class="title" name="KSH-CH-8-SECT-1">8.1 Process IDs and Job Numbers</A
></H2
><p class="para"><a class="indexterm" name="KSH-CH-8-IX-PROCESS-IDS"></A
>UNIX gives all processes numbers, called <em class="emphasis">process IDs</EM
>, when they 
are created.  <a class="indexterm" name="AUTOID-13259"></A
>
You will notice that, when you run a command in the background
by appending &amp; to it, the shell responds with a line that looks like 
this:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fred &amp;</B
> 
[1]     2349</PRE
></BLOCKQUOTE
></P
><p class="para">In this example, 2349 is the process ID for the <b class="emphasis.bold">fred</B
> process.<a class="indexterm" name="KSH-CH-8-IX-JOB-NUMBERS"></A
>
The <b class="emphasis.bold">[1]</B
> is a <em class="emphasis">job number</EM
> assigned by the shell (not the 
operating system).  <a class="indexterm" name="AUTOID-13270"></A
><a class="indexterm" name="AUTOID-13273"></A
>
What's the difference? Job numbers refer to 
background processes that are currently running under your shell, 
while process IDs refer to all processes currently running on the 
entire system, for all users.  <a class="indexterm" name="AUTOID-13276"></A
>
The term <em class="emphasis">job</EM
> basically refers to a 
command line that was invoked from your login shell.</P
><p class="para">If you start up additional background jobs while the first one
is still running, the shell will number them 2, 3, etc. For example:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">bob &amp;</B
> 
[2]     2367
$ <b class="emphasis.bold">dave &amp;</B
> 
[3]     2382</PRE
></BLOCKQUOTE
></P
><p class="para">Clearly, 1, 2, and 3 are easier to remember than 2349, 2367, and 2382!<a class="indexterm" name="AUTOID-13286"></A
></P
><p class="para"><a class="indexterm" name="AUTOID-13288"></A
><a class="indexterm" name="AUTOID-13291"></A
>The shell includes job numbers in messages it prints when a 
background job completes, like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">[1] +  Done                     fred &amp;</PRE
></BLOCKQUOTE
></P
><p class="para">We'll explain what the plus sign means soon.<a class="indexterm" name="AUTOID-13297"></A
>
If the job exits with non-zero status (see <a class="xref" href="ch05_01.htm" webstripperlinkwas="ch05_01.htm" title="Flow Control">Chapter 5, Flow Control</A
>), the shell
will include the exit status in parentheses:</P
><p class="para"><blockquote class="screen"><pre class="screen">[1] +  Done(1)                  fred &amp;</PRE
></BLOCKQUOTE
></P
><p class="para">The shell prints other types of messages when certain abnormal things
happen to background jobs; we'll see these later in this chapter.</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch07_03.htm" webstripperlinkwas="ch07_03.htm" title="7.3 Command-line Processing"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 7.3 Command-line Processing" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" title="Learning the Korn Shell"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Learning the Korn Shell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch08_02.htm" webstripperlinkwas="ch08_02.htm" title="8.2 Job Control"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 8.2 Job Control" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.3 Command-line Processing</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">8.2 Job Control</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="../upt/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
