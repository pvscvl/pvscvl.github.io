<html><head>
<title>[Chapter 2] 2.4 Vi Editing Mode</TITLE>
<meta name="DC.title" content="Learning the Korn Shell"><meta name="DC.creator" content="Bill Rosenblatt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-03T20:57:01Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-054-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch02_01.htm" webstripperlinkwas="ch02_01.htm" title="2. Command-line Editing"><link rel="prev" href="ch02_03.htm" webstripperlinkwas="ch02_03.htm" title="2.3 Emacs Editing Mode"><link rel="next" href="ch02_05.htm" webstripperlinkwas="ch02_05.htm" title="2.5 The fc Command"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="Learning the Korn Shell" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,66" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch02_03.htm" webstripperlinkwas="ch02_03.htm" title="2.3 Emacs Editing Mode"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 2.3 Emacs Editing Mode" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 2<br>Command-line Editing</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch02_05.htm" webstripperlinkwas="ch02_05.htm" title="2.5 The fc Command"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 2.5 The fc Command" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="KSH-CH-2-SECT-3">2.4 Vi Editing Mode</A
></H2
><p class="para"><a class="indexterm" name="KSH-CH-2-IX-VI-MODE"></A
>Like emacs-mode, vi-mode essentially creates a one-line editing window
into the history file.  <a class="indexterm" name="AUTOID-2881"></A
>
Vi-mode is popular because <em class="emphasis">vi</EM
> is
the most standard UNIX editor. But the function for which <em class="emphasis">vi</EM
>
was designed, writing C programs, has different editing
requirements from those of command interpreters. As a result,
although it is possible to do complex things in <em class="emphasis">vi</EM
>
with relatively few keystrokes, the relatively simple things you
need to do in the Korn shell sometimes take too many keystrokes.</P
><p class="para"><a class="indexterm" name="KSH-CH-2-IX-VI-MODE-INPUT-MODE"></A
><a class="indexterm" name="AUTOID-2890"></A
>Like <em class="emphasis">vi</EM
>, vi-mode has two modes of its own: <em class="emphasis">input</EM
>
and <em class="emphasis">control</EM
> mode. The former is for typing commands (as in
normal Korn shell use); the latter is for moving around the command
line and the history file. When you are in input mode, you can
type commands in and hit <b class="emphasis.bold">RETURN</B
> to run them. In addition, you have
minimal editing capabilities via control characters, which are summarized
in 
<a class="xref" href="#KSH-CH-2-TAB-5" title="Editing Commands in vi Input Mode">Table 2.6</A
>.</P
><table class="table"><caption class="table"><a class="title" name="KSH-CH-2-TAB-5">Table 2.6: Editing Commands in vi Input Mode</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Description</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">DEL</TD
><td class="entry" rowspan="1" colspan="1">Delete previous character </TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><kbd class="keycap">[CTRL-W]</KBD
></TD
><td class="entry" rowspan="1" colspan="1">Erase previous word (i.e., erase until blank)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><kbd class="keycap">[CTRL-V]</KBD
></TD
><td class="entry" rowspan="1" colspan="1">&quot;Quote&quot; the next character</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">ESC</TD
><td class="entry" rowspan="1" colspan="1">Enter control mode (see below)</TD
></TR
></TBODY
></TABLE
><p class="para"><a class="indexterm" name="AUTOID-2921"></A
><a class="indexterm" name="AUTOID-2924"></A
><a class="indexterm" name="AUTOID-2928"></A
>Note that at least some of these-depending on which version
of UNIX you have-are the same as the editing commands provided
by UNIX through its terminal interface.
[9]
Vi-mode will use your &quot;erase&quot; character as the &quot;delete
previous character&quot; key; usually it is set to <span class="acronym">DEL</SPAN
> or <kbd class="keycap">[CTRL-H]</KBD
> (BACKSPACE).
<kbd class="keycap">[CTRL-V]</KBD
> will cause the next character you type to appear in the command
line as is; i.e., if it is an editing command (or an otherwise special
character like <kbd class="keycap">[CTRL-D]</KBD
>), it will be stripped of its special meaning.</P
><blockquote class="footnote"><p class="para">[9] In particular, versions
of UNIX derived from 4.x BSD have all of these commands built in.</P
></BLOCKQUOTE
><p class="para">Under normal circumstances, you just stay in input mode. But if you
want to go back and make changes to your command line, or if you
want to recall previous commands, you need to go into control mode.
To do this, hit <span class="acronym">ESC</SPAN
>.<a class="indexterm" name="AUTOID-2939"></A
></P
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-2-SECT-3.1">2.4.1 Simple Control Mode Commands</A
></H3
><p class="para"><a class="indexterm" name="KSH-CH-2-IX-VI-MODE-BASIC-CONTROL-MODE-CMNDS"></A
>A full range of <em class="emphasis">vi</EM
> editing commands are available to you in control
mode. The simplest of these move you around the command line
and are summarized in 
<a class="xref" href="#KSH-CH-2-TAB-6" title="Basic vi Control Mode Commands">Table 2.7</A
>.<a class="indexterm" name="AUTOID-2948"></A
>
Vi-mode contains two &quot;word&quot;
concepts. The simplest is any sequence of non-blank characters;
we'll call this a <em class="emphasis">non-blank word</EM
>. The other is any sequence of
only alphanumeric characters (letters and digits) or any
sequence of only non-alphanumeric characters; we'll
just call this a <em class="emphasis">word</EM
>.
[10]</P
><blockquote class="footnote"><p class="para">[10] Neither of these definitions is the same as the
definition of a word in emacs-mode.</P
></BLOCKQUOTE
><table class="table"><caption class="table"><a class="title" name="KSH-CH-2-TAB-6">Table 2.7: Basic vi Control Mode Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Description</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">h</TD
><td class="entry" rowspan="1" colspan="1">Move left one character</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">l</TD
><td class="entry" rowspan="1" colspan="1">Move right one character</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">w</TD
><td class="entry" rowspan="1" colspan="1">Move right one word</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">b</TD
><td class="entry" rowspan="1" colspan="1">Move left one word</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">W</TD
><td class="entry" rowspan="1" colspan="1">Move to beginning of next non-blank word</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">B</TD
><td class="entry" rowspan="1" colspan="1">Move to beginning of preceding non-blank word</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">e</TD
><td class="entry" rowspan="1" colspan="1">Move to end of current word</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">E</TD
><td class="entry" rowspan="1" colspan="1">Move to end of current non-blank word</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">0</TD
><td class="entry" rowspan="1" colspan="1">Move to beginning of line</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">^</TD
><td class="entry" rowspan="1" colspan="1">Move to first non-blank character in line</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">$</TD
><td class="entry" rowspan="1" colspan="1">Move to end of line</TD
></TR
></TBODY
></TABLE
><p class="para"><a class="indexterm" name="AUTOID-2997"></A
>All of these commands except the last three can be preceded by
a number that acts as a repeat count. The last two will be
familiar to users of UNIX utilities (such as <em class="emphasis">grep</EM
>) that
use regular expressions, as well as to <em class="emphasis">vi</EM
> users.</P
><p class="para">Time for a few examples. Let's say you type in this line
and, before you hit RETURN, decide you want to change it:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; ~pete/wk/names<u class="cursor"> </U
></B
></PRE
></BLOCKQUOTE
></P
><p class="para">As shown, your cursor is beyond the last character of the line.
First, type <b class="emphasis.bold">ESC</B
> to enter control mode; your cursor will move
back one space so that it is on the <b class="emphasis.bold">s</B
>. Then if you type <b class="emphasis.bold">h</B
>, your
cursor will move back to the <b class="emphasis.bold">e</B
>. If you type <b class="emphasis.bold">3h</B
> from the <b class="emphasis.bold">e</B
>,
you will end up at the <b class="emphasis.bold">n</B
>.</P
><p class="para">Now we will see the difference between the two &quot;word&quot; concepts.
Go back to the end of the line by typing <b class="emphasis.bold">$</B
>.
If you type <b class="emphasis.bold">b</B
>, the word in question is &quot;names&quot;, and the cursor
will end up on the <b class="emphasis.bold">n</B
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; ~pete/wk/<u class="cursor">n</U
>ames</B
></PRE
></BLOCKQUOTE
></P
><p class="para">If you type <b class="emphasis.bold">b</B
> again, the next word is the slash (it's a &quot;sequence&quot;
of non-alphanumeric characters), so the cursor ends up over it:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; ~pete/wk<u class="cursor">/</U
>names</B
></PRE
></BLOCKQUOTE
></P
><p class="para">However, if you typed <b class="emphasis.bold">B</B
> instead of <b class="emphasis.bold">b</B
>, the non-blank word
would be the entire pathname, and the cursor would end up at
the beginning of it-that is, over the tilde:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; <u class="cursor">~</U
>pete/wk/names</B
></PRE
></BLOCKQUOTE
></P
><p class="para">You would have had to type <b class="emphasis.bold">b</B
> four times-or just <b class="emphasis.bold">4b</B
>-to 
get the same effect, since there are four &quot;words&quot; in the
part of the pathname to the left of <em class="emphasis">/names</EM
>:
<em class="emphasis">wk</EM
>, slash, <em class="emphasis">pete</EM
>, and the leading tilde.</P
><p class="para">At this point, <b class="emphasis.bold">w</B
> and <b class="emphasis.bold">W</B
> do the opposite: typing <b class="emphasis.bold">w</B
> gets you over
the <b class="emphasis.bold">p</B
>, since the tilde is a &quot;word&quot;, while typing <b class="emphasis.bold">W</B
> brings you
to the end of the line. But whereas <b class="emphasis.bold">w</B
> and <b class="emphasis.bold">W</B
> take you to the
beginning of the next word, <b class="emphasis.bold">e</B
> and <b class="emphasis.bold">E</B
> take you to the end 
of the current word. Thus, if you type <b class="emphasis.bold">w</B
> with the cursor on the
tilde, you get to:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; ~<u class="cursor">p</U
>ete/wk/names</B
></PRE
></BLOCKQUOTE
></P
><p class="para">Then typing <b class="emphasis.bold">e</B
> gets you to</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; ~pet<u class="cursor">e</U
>/wk/names</B
></PRE
></BLOCKQUOTE
></P
><p class="para">And typing an additional <b class="emphasis.bold">w</B
> gets you to:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; ~pete<u class="cursor">/</U
>wk/names</B
></PRE
></BLOCKQUOTE
></P
><p class="para">On the other hand, <b class="emphasis.bold">E</B
> gets you to the end of the current
non-blank word-in this case, the end of the line. (If you find
these commands non-mnemonic, you're right. The only way
to assimilate them is through lots of practice.)<a class="indexterm" name="AUTOID-3071"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-2-SECT-3.2">2.4.2 Entering and Changing Text</A
></H3
><p class="para"><a class="indexterm" name="KSH-CH-2-IX-VI-MODE-ENTER-CHNG-TEXT"></A
>Now that you know how to enter control mode and
move around on the command line, you need to know how
to get back into input mode so you can make changes and
type in additional commands. A number of 
commands take you from control mode into input mode;
they are listed in 
<a class="xref" href="#KSH-CH-2-TAB-7" title="Commands for Entering vi Input Mode">Table 2.8</A
>
All
of them enter input mode a bit differently.<a class="indexterm" name="KSH-CH-2-IX-VI-MODE-ENTERING-INPUT-MODE"></A
></P
><table class="table"><caption class="table"><a class="title" name="KSH-CH-2-TAB-7">Table 2.8: Commands for Entering vi Input Mode</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Description</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">i</TD
><td class="entry" rowspan="1" colspan="1">Text inserted before current character (insert)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">a</TD
><td class="entry" rowspan="1" colspan="1">Text inserted after current character (append)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">I</TD
><td class="entry" rowspan="1" colspan="1">Text inserted at beginning of line</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">A</TD
><td class="entry" rowspan="1" colspan="1">Text inserted at end of line</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">R</TD
><td class="entry" rowspan="1" colspan="1">Text overwrites existing text</TD
></TR
></TBODY
></TABLE
><p class="para">Most likely, you will use either <b class="emphasis.bold">i</B
> or <b class="emphasis.bold">a</B
> consistently, and you
may use <b class="emphasis.bold">R</B
> occasionally. <b class="emphasis.bold">I</B
> and <b class="emphasis.bold">A</B
> are abbreviations for <b class="emphasis.bold">0i</B
> and
<b class="emphasis.bold">$a</B
> respectively. To illustrate the difference between <b class="emphasis.bold">i</B
>, <b class="emphasis.bold">a</B
>, and <b class="emphasis.bold">R</B
>,
say we start out with our example line:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; ~pete/wk<u class="cursor">/</U
>names</B
></PRE
></BLOCKQUOTE
></P
><p class="para">If you type <b class="emphasis.bold">i</B
> followed by <b class="emphasis.bold">end</B
>, you will get:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; ~pete/wkend<u class="cursor">/</U
>names</B
></PRE
></BLOCKQUOTE
></P
><p class="para">That is, the cursor will always appear to be under the / before <em class="emphasis">names</EM
>.
But if you type <b class="emphasis.bold">a</B
> instead of <b class="emphasis.bold">i</B
>, you will notice the cursor move one space to
the right. Then if you type <b class="emphasis.bold">nick</B
>, you will get:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; ~pete/wk/nick<u class="cursor">n</U
>ames</B
></PRE
></BLOCKQUOTE
></P
><p class="para">That is, the cursor will always be just after the last character you
typed, until you type <b class="emphasis.bold"><span class="acronym">ESC</SPAN
></B
> to end your input.<a class="indexterm" name="AUTOID-3139"></A
>
Finally, if you go back to the <b class="emphasis.bold">n</B
> in <em class="emphasis">names</EM
>,
type <b class="emphasis.bold">R</B
> instead, and then type <b class="emphasis.bold">task</B
>, you will see:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; ~pete/wk/task<u class="cursor">s</U
></B
></PRE
></BLOCKQUOTE
></P
><p class="para">In other words, you will be <em class="emphasis">replacing</EM
> (hence <em class="emphasis">R</EM
>) instead
of inserting text.</P
><p class="para">Why capital <b class="emphasis.bold">R</B
> instead of lowercase <b class="emphasis.bold">r</B
>? The latter is a slightly
different command, which replaces only one character and does not
enter input mode. With <b class="emphasis.bold">r</B
>, the next single character overwrites the
character under the cursor. So 
if we start with the original
command line and type <b class="emphasis.bold">r</B
> followed by a semicolon, we get:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; ~pete/wk<u class="cursor">;</U
>names</B
></PRE
></BLOCKQUOTE
></P
><p class="para">If you precede <b class="emphasis.bold">r</B
> with a number <em class="emphasis">N</EM
>, it will allow you to replace
the next <em class="emphasis">N</EM
> existing characters on the line-but still not enter input mode.
Lowercase <b class="emphasis.bold">r</B
> is effective for fixing erroneous option letters, I/O redirection characters, punctuation, etc.<a class="indexterm" name="AUTOID-3165"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-2-SECT-3.3">2.4.3 Deletion Commands</A
></H3
><p class="para"><a class="indexterm" name="KSH-CH-2-IX-VI-MODE-DELETION-CMNDS"></A
>Now that you know how to enter commands and move around the
line, you need to know how to delete.
The basic deletion command in vi-mode is <b class="emphasis.bold">d</B
> followed by one
other letter. This letter determines what the unit and direction 
of deletion is, and it corresponds to a motion command, as 
listed previously in 
<a class="xref" href="#KSH-CH-2-TAB-6" title="Basic vi Control Mode Commands">Table 2.7</A
>.
<a class="xref" href="#KSH-CH-2-TAB-8" title="Some vi-mode Deletion Commands">Table 2.9</A
>
shows some
commonly-used examples.</P
><table class="table"><caption class="table"><a class="title" name="KSH-CH-2-TAB-8">Table 2.9: Some vi-mode Deletion Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Description</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">dh</TD
><td class="entry" rowspan="1" colspan="1">Delete one character backwards</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">dl</TD
><td class="entry" rowspan="1" colspan="1">Delete one character forwards</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">db</TD
><td class="entry" rowspan="1" colspan="1">Delete one word backwards</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">dw</TD
><td class="entry" rowspan="1" colspan="1">Delete one word forwards</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">dB</TD
><td class="entry" rowspan="1" colspan="1">Delete one non-blank word backwards</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">dW</TD
><td class="entry" rowspan="1" colspan="1">Delete one non-blank word forwards</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">d$</TD
><td class="entry" rowspan="1" colspan="1">Delete to end of line</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">d0</TD
><td class="entry" rowspan="1" colspan="1">Delete to beginning of line</TD
></TR
></TBODY
></TABLE
><p class="para">These commands have a few variations and abbreviations.
If you use a <b class="emphasis.bold">c</B
> instead of <b class="emphasis.bold">d</B
>, you will enter input mode
after it does the deletion. You can supply a numeric 
repeat count 
either before or after the <b class="emphasis.bold">d</B
> (or <b class="emphasis.bold">c</B
>).  
<a class="xref" href="#KSH-CH-2-TAB-9" title="Abbreviations for vi-mode Delete Commands">Table 2.10</A
>
lists the available abbreviations.</P
><p class="para">Most people tend to use <b class="emphasis.bold">D</B
> to delete to end of line,
<b class="emphasis.bold">dd</B
> to delete an entire line, and <b class="emphasis.bold">x</B
> (as &quot;backspace&quot;)
to delete single characters. If you aren't a hardcore <em class="emphasis">vi</EM
>
user, you may find it difficult to get some of the more
esoteric deletion commands under your fingers.<a class="indexterm" name="AUTOID-3218"></A
><a class="indexterm" name="AUTOID-3219"></A
><a class="indexterm" name="KSH-CH-2-IX-VI-MODE-DELETION-CMNDS-ABBREVS"></A
></P
><table class="table"><caption class="table"><a class="title" name="KSH-CH-2-TAB-9">Table 2.10: Abbreviations for vi-mode Delete Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Description</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">D</TD
><td class="entry" rowspan="1" colspan="1">Equivalent to <em class="emphasis">d$</EM
> (delete to end of line)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">dd</TD
><td class="entry" rowspan="1" colspan="1">Equivalent to <em class="emphasis">0d$</EM
> (delete entire line)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">C</TD
><td class="entry" rowspan="1" colspan="1">Equivalent to <em class="emphasis">c$</EM
> (delete to end of line, enter input mode)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">cc</TD
><td class="entry" rowspan="1" colspan="1">Equivalent to <em class="emphasis">0c$</EM
> (delete entire line, enter input mode)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">X</TD
><td class="entry" rowspan="1" colspan="1">Equivalent to <em class="emphasis">dh</EM
> (delete character backwards)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">x</TD
><td class="entry" rowspan="1" colspan="1">Equivalent to <em class="emphasis">dl</EM
> (delete character forwards)</TD
></TR
></TBODY
></TABLE
><p class="para"><a class="indexterm" name="KSH-CH-2-IX-VI-MODE-UNDELETE-CMNDS"></A
><a class="indexterm" name="AUTOID-3260"></A
>Every good editor provides &quot;un-delete&quot; commands as well as
delete commands, and vi-mode is no exception. Vi-mode maintains
a <em class="emphasis">delete buffer</EM
> that stores all of the modifications to
text on the current line only (note that this is different
from the full <em class="emphasis">vi</EM
> editor). The command <b class="emphasis.bold">u</B
> undoes the last
text modification command only, while <b class="emphasis.bold">U</B
> undoes all such
commands on the current line. So if you make one change but
want to undo it, type <b class="emphasis.bold">u</B
>; but if you make lots of changes and find
that the original is closer to what you want, you can undo everything
by typing <b class="emphasis.bold">U</B
>. A related command is <code class="literal">.</CODE
> (dot), which redoes the
last text modification command.</P
><p class="para">There is also a way to save text in the delete buffer without
having deleted it in the first place: just type in a delete command
but use <b class="emphasis.bold">y</B
> (&quot;yank&quot;) instead of <b class="emphasis.bold">d</B
>. This does not modify anything,
but it allows you to retrieve the yanked text as many times as you
like later on. The command to retrieve yanked text is <b class="emphasis.bold">p</B
>, which 
inserts the text on the current line to the left of the cursor.
The <b class="emphasis.bold">y</B
> and <b class="emphasis.bold">p</B
> commands are powerful but far better suited to
&quot;real <em class="emphasis">vi</EM
>&quot; tasks like 
making global changes to documents or programs than to
shell commands, so we doubt you'll use them very often.<a class="indexterm" name="AUTOID-3277"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-2-SECT-3.4">2.4.4 Moving Around in the History File</A
></H3
><p class="para"><a class="indexterm" name="KSH-CH-2-IX-VI-MODE-MOVING-IN-HIST-FILE"></A
>The next group of vi control mode commands we will cover allows
you to move around in and search your history file. This is
the all-important functionality that lets you go back and fix
an erroneous command without retyping the entire line.
These commands are summarized in 
<a class="xref" href="#KSH-CH-2-TAB-10" title="Vi Control Mode Commands for Searching the History File">Table 2.11</A
>.</P
><table class="table"><caption class="table"><a class="title" name="KSH-CH-2-TAB-10">Table 2.11: Vi Control Mode Commands for Searching the History File</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Description</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">k</B
> or <b class="emphasis.bold">-</B
></TD
><td class="entry" rowspan="1" colspan="1">Move backward one line</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">j</B
> or <b class="emphasis.bold">+</B
></TD
><td class="entry" rowspan="1" colspan="1">Move forward one line</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">G</B
></TD
><td class="entry" rowspan="1" colspan="1">Move to line given by repeat count</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">?</B
><em class="emphasis">string</EM
></TD
><td class="entry" rowspan="1" colspan="1">Search backward for string</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">/</B
><em class="emphasis">string</EM
></TD
><td class="entry" rowspan="1" colspan="1">Search forward for string</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">n</B
></TD
><td class="entry" rowspan="1" colspan="1">Repeat search in same direction as previous</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><b class="emphasis.bold">N</B
></TD
><td class="entry" rowspan="1" colspan="1">Repeat search in opposite direction of previous</TD
></TR
></TBODY
></TABLE
><p class="para">The first three can be preceded by repeat counts (e.g., <b class="emphasis.bold">3k</B
> or 3- 
moves back three lines in the history file).</P
><p class="para">If you aren't familiar with <em class="emphasis">vi</EM
> and its cultural history, you
may be wondering at the wisdom of choosing such seemingly
poor mnemonics as <b class="emphasis.bold">h</B
>, <b class="emphasis.bold">j</B
>, <b class="emphasis.bold">k</B
>, and <b class="emphasis.bold">l</B
> for backward character, forward line,
backward line, and forward character, respectively. Well, there
actually is a rationale for the choices-other than that they
are all together on the standard keyboard.</P
><p class="para"><a class="indexterm" name="AUTOID-3334"></A
>Bill Joy originally developed <em class="emphasis">vi</EM
> to run on Lear-Siegler ADM-3a terminals,
which were the first popular models with addressable cursors
(meaning that a program could send an ADM-3a a command
to move the cursor to a specified location on the screen).
The ADM-3a's <b class="emphasis.bold">h</B
>, <b class="emphasis.bold">j</B
>, <b class="emphasis.bold">k</B
>, and <b class="emphasis.bold">l</B
> keys had little arrows on them, so Joy
decided to use those keys for appropriate commands in <em class="emphasis">vi</EM
>.</P
><p class="para">Another (partial) rationale for the command choices
is that <kbd class="keycap">[CTRL-H]</KBD
> is the traditional backspace key, and <kbd class="keycap">[CTRL-J]</KBD
> denotes linefeed.</P
><p class="para">Perhaps <code class="literal">+</CODE
> and <b class="emphasis.bold">-</B
> are better mnemonics than <b class="emphasis.bold">j</B
> and <b class="emphasis.bold">k</B
>, but the latter
have the advantage of being more easily accessible to touch
typists. In either case, these commands are the most basic ones
for moving around the history file. To see how they work,
let's take the same examples we used when discussing emacs-mode
above.</P
><p class="para">You enter the example command (RETURN works in both input and
control modes, as does LINEFEED or <kbd class="keycap">[CTRL-J]</KBD
>):</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; ~pete/wk/names</B
></PRE
></BLOCKQUOTE
></P
><p class="para">but you get an error message saying that your
option letter was wrong. You want to change it to <b class="emphasis.bold">-s</B
> without having
to retype the entire command. Assuming you are in control
mode (you may have to type <b class="emphasis.bold"><span class="acronym">ESC</SPAN
></B
> to put yourself in control mode), you
type <b class="emphasis.bold">k</B
> or <b class="emphasis.bold">-</B
> to get the command back. Your cursor
will be at the beginning of the line:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold"><u class="cursor">f</U
>grep -l Bob &lt; ~pete/wk/names</B
></PRE
></BLOCKQUOTE
></P
><p class="para">Type <b class="emphasis.bold">w</B
> to get to the <code class="literal">-</CODE
>, then <b class="emphasis.bold">l</B
> to get to the <b class="emphasis.bold">l</B
>. Now you can replace
it by typing <b class="emphasis.bold">rs</B
>; press <b class="emphasis.bold">RETURN</B
> to run the command.</P
><p class="para">Now let's say you get another error message, and you finally decide
to look at the manual page for the <em class="emphasis">fgrep</EM
> command. You remember having
done this a while ago today, so rather than typing in the entire
<em class="emphasis">man</EM
>(1) command, you search for the last one you used.  <a class="indexterm" name="KSH-CH-2-IX-VI-MODE-SEARCH-HIST-FILE"></A
>
To do this, type <b class="emphasis.bold"><span class="acronym">ESC</SPAN
></B
> to enter control mode (if you are already in
control mode, this will have no effect), then type <code class="literal">/</CODE
> followed
by <b class="emphasis.bold">man</B
> or <b class="emphasis.bold">ma</B
>. To be on the safe side, you can also type 
<b class="emphasis.bold">^ma</B
>; the <b class="emphasis.bold">^</B
> means match only lines that begin with <b class="emphasis.bold">ma</B
>.
[11]</P
><blockquote class="footnote"><p class="para">[11] Fans of <em class="emphasis">vi</EM
> and search utilities like <em class="emphasis">grep</EM
> should note 
that caret (<b class="emphasis.bold">^</B
>) for beginning-of-line is the only context operator 
vi-mode provides for search strings.</P
></BLOCKQUOTE
><p class="para">But typing <b class="emphasis.bold">/^</B
><b class="emphasis.bold">ma</B
> doesn't give you what you want: instead, the shell
gives you: </P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">make myprogram</B
></PRE
></BLOCKQUOTE
></P
><p class="para">To search for &quot;man&quot; again, you can type <b class="emphasis.bold">n</B
>, which does another backward
search using the last search string. Typing <code class="literal">/</CODE
> again without an
argument and hitting <b class="emphasis.bold">RETURN</B
> will accomplish the same thing.<a class="indexterm" name="AUTOID-3401"></A
></P
><p class="para">The <b class="emphasis.bold">G</B
> command retrieves the command whose number is
the same as the numeric prefix argument you supply. <b class="emphasis.bold">G</B
> depends on the
command numbering scheme described in <a class="xref" href="ch03_01.htm" webstripperlinkwas="ch03_01.htm" title="Customizing Your Environment">Chapter 3</A
>
in the section &quot;Prompting Variables.&quot; Without a
prefix argument,
it goes to command number 1. This may be useful to former C shell users
who still want to use command numbers.<a class="indexterm" name="AUTOID-3406"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-2-SECT-3.5">2.4.5 Character-finding Commands</A
></H3
><p class="para"><a class="indexterm" name="KSH-CH-2-IX-VI-MODE-CHARACTER-FIND-CMNDS"></A
>There are some additional motion commands in vi-mode, although
they are less useful than the ones we saw earlier in the chapter.
These commands allow you
to move to the position of a particular character in the line.
They are summarized in 
<a class="xref" href="#KSH-CH-2-TAB-11" title="Vi-mode Character-finding Commands">Table 2.12</A
>,
in which <em class="emphasis">x</EM
> denotes any 
character.</P
><p class="para">All of these commands can be preceded by a repeat count.</P
><table class="table"><caption class="table"><a class="title" name="KSH-CH-2-TAB-11">Table 2.12: Vi-mode Character-finding Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Description </TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">f<em class="emphasis">x</EM
></TD
><td class="entry" rowspan="1" colspan="1">Move right to next occurrence of <em class="emphasis">x</EM
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">F<em class="emphasis">x</EM
></TD
><td class="entry" rowspan="1" colspan="1">Move left to previous occurrence of <em class="emphasis">x</EM
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">t<em class="emphasis">x</EM
></TD
><td class="entry" rowspan="1" colspan="1">Move right to next occurrence of <em class="emphasis">x</EM
>, then back one space</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">T<em class="emphasis">x</EM
></TD
><td class="entry" rowspan="1" colspan="1">Move left to previous occurrence of <em class="emphasis">x</EM
>, then forward one space</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">;</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Redo last character-finding command</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">,</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Redo last character-finding command in opposite direction</TD
></TR
></TBODY
></TABLE
><p class="para">Starting with the previous example: let's say you want to change
<em class="emphasis">Bob</EM
> to <em class="emphasis">Rob</EM
>. Make sure that you're at the end of the line (or, in
any case, to the left of the <em class="emphasis">B</EM
> in <em class="emphasis">Bob</EM
>); then, if you type <b class="emphasis.bold">FB</B
>, your
cursor will move to the B:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l <u class="cursor">B</U
>ob &lt; ~pete/wk/names</B
></PRE
></BLOCKQUOTE
></P
><p class="para">At this point, you could type <b class="emphasis.bold">r</B
> to replace the <em class="emphasis">B</EM
> with <em class="emphasis">R</EM
>.
But let's say you wanted to change <em class="emphasis">Bob</EM
> to <em class="emphasis">Blob</EM
>. You would
need to move one space to the right of the <em class="emphasis">B</EM
>. Of course, you
could just type <b class="emphasis.bold">l</B
>. But, given that you're somewhere to the right of
<em class="emphasis">Bob</EM
>, the fastest way to move to the <em class="emphasis">o</EM
> would be to type
<b class="emphasis.bold">TB</B
> instead of <b class="emphasis.bold">FB</B
> followed by <b class="emphasis.bold">l</B
>.</P
><p class="para">As an example of how the repeat count can be used with 
character-finding commands, let's say you want to change the filename from
<em class="emphasis">names</EM
> to <em class="emphasis">namfile</EM
>.
In this case, assuming your cursor is still on the <em class="emphasis">B</EM
>, you need to get
to the third <em class="emphasis">e</EM
> to the right, so you can type <b class="emphasis.bold">3te</B
>, followed by
<b class="emphasis.bold">l</B
> to put the cursor back on the <b class="emphasis.bold">e</B
> in <em class="emphasis">names</EM
>.</P
><p class="para">The character-finding commands also have associated delete commands.
Read the command definitions in the previous table and mentally
substitute &quot;delete&quot; for move. You'll get what happens when you
precede the given character-finding command with a <b class="emphasis.bold">d</B
>. The deletion
includes the character given as argument.
For example, assume that your cursor is under the <b class="emphasis.bold">n</B
> in <em class="emphasis">names</EM
>:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">fgrep -l Bob &lt; ~pete/wk/<u class="cursor">n</U
>ames</B
></PRE
></BLOCKQUOTE
></P
><p class="para">If you want to change <em class="emphasis">names</EM
> to <em class="emphasis">aides</EM
>, one possibility is to type <b class="emphasis.bold">dfm</B
>.
This means &quot;delete right to next occurrence of m,&quot; i.e., delete &quot;nam.&quot;
Then you can type <b class="emphasis.bold">i</B
> (to enter input mode) and then &quot;aid&quot; to complete
the change.</P
><p class="para">One final command rounds out the vi control mode commands
for getting around on the current line: you can use the pipe character
(<b class="emphasis.bold">|</B
>) for moving to a specific column, whose number is given by
a numeric prefix argument. Column counts start at 1; 
count only your input, not the space taken up by the prompt string.
The default repeat count is 1, of course, which
means that typing <b class="emphasis.bold">|</B
> by itself is equivalent to 0
(see <a class="xref" href="#KSH-CH-2-TAB-6" title="Basic vi Control Mode Commands">Table 2.7</A
>).<a class="indexterm" name="AUTOID-3501"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-2-SECT-3.6">2.4.6 Filename Completion</A
></H3
><p class="para"><a class="indexterm" name="KSH-CH-2-IX-VI-MODE-FILENAME-COMPLETION"></A
>Although the character-finding commands and <b class="emphasis.bold">|</B
> are not particularly
useful, vi-mode provides one additional feature that we think
you will use quite often: filename completion.  <a class="indexterm" name="AUTOID-3509"></A
><a class="indexterm" name="AUTOID-3511"></A
>
This feature
is not part of the real <em class="emphasis">vi</EM
> editor, and it was undoubtedly
inspired by similar features in <em class="emphasis">emacs</EM
>
and, originally, in the <span class="acronym">TOPS-20</SPAN
> operating system for <span class="acronym">DEC</SPAN
> mainframes.</P
><p class="para">The rationale behind filename completion is simple: you should
have to type only as much of a filename as is necessary to 
distinguish
it from other filenames in the same directory. Backslash 
(<b class="emphasis.bold">\</B
>) is
the command that tells the Korn shell to do filename completion in vi-mode.
If you type in a word, type <span class="acronym">ESC</SPAN
> to enter control mode,
and then type <b class="emphasis.bold">\</B
>, one of four things will happen; they are
the same as for <span class="acronym">ESC ESC</SPAN
> in emacs-mode:</P
><ol class="orderedlist"><li class="listitem"><p class="para">If there is no file whose name begins with the word, the shell
will beep and nothing further will happen.</P
></LI
><li class="listitem"><p class="para">If there is exactly one way to complete the filename and the file
is a regular file, the shell will type the rest of the filename,
followed by a space in case you want to type in more command arguments.</P
></LI
><li class="listitem"><p class="para">If there is exactly one way to complete the filename and the file
is a directory, the shell will complete the filename, followed
by a slash.</P
></LI
><li class="listitem"><p class="para">If there is more than one way to complete the filename,
the shell will complete out to the longest common prefix among
the available choices.</P
></LI
></OL
><p class="para"><a class="indexterm" name="AUTOID-3533"></A
><a class="indexterm" name="AUTOID-3534"></A
>A related command is <code class="literal">*</CODE
>, which is the same as <span class="acronym">ESC</SPAN
> <code class="literal">*</CODE
> in emacs-mode
as described earlier in this chapter.
[12]
It behaves similarly to <span class="acronym">ESC</SPAN
> \, but
if there is more than one completion possibility (number four in the list
above), it lists all of them and allows you to type further.  
Thus, it resembles the <code class="literal">*</CODE
> shell wildcard character.</P
><blockquote class="footnote"><p class="para">[12] If you count the <span class="acronym">ESC</SPAN
> needed to get out of input mode, the vi-mode
command is identical to emacs-mode.</P
></BLOCKQUOTE
><p class="para">Less useful is the command <b class="emphasis.bold">=</B
>, which does the same kind of filename
expansion as the <code class="literal">*</CODE
> shell wildcard, but in a different way.
Instead of expanding the filenames onto the command line,
it prints them in a numbered list with one filename on each line.
Then it gives you your shell prompt back and retypes whatever was 
on your command line before you typed <b class="emphasis.bold">=</B
>.
For example, if the files in your directory include <em class="emphasis">program.c</EM
>
and <em class="emphasis">problem.c</EM
>,
and you type <b class="emphasis.bold">pro</B
> followed by <span class="acronym">ESC</SPAN
> and then <b class="emphasis.bold">=</B
>, you will see this:</P
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">cc pro</B
>
1) problem.c
2) program.c</PRE
></BLOCKQUOTE
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-2-SECT-3.7">2.4.7 Miscellaneous Commands</A
></H3
><p class="para">Several miscellaneous commands round out vi-mode;
some of them are quite esoteric. They are listed in 
<a class="xref" href="#KSH-CH-2-TAB-12" title="Miscellaneous vi-mode Commands">Table 2.13</A
>.</P
><table class="table"><caption class="table"><a class="title" name="KSH-CH-2-TAB-12">Table 2.13: Miscellaneous vi-mode Commands</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Command</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Description</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">~</TD
><td class="entry" rowspan="1" colspan="1">Invert (&quot;twiddle&quot;) case of current character(s).</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">_</TD
><td class="entry" rowspan="1" colspan="1">Append last word of previous command, enter input mode.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">v</TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Run the <b class="emphasis.bold">fc</B
> command on the current line
(actually, run the command <b class="emphasis.bold">fc -e ${VISUAL:-${EDITOR:-vi}}</B
>);
usually this means run the full <em class="emphasis">vi</EM
> on the current line.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">CTRL-L</TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Start a new line and redraw the current line on it;
good for when your screen becomes garbled.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">#</TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Prepend <b class="emphasis.bold">#</B
> (comment character) to the line and 
send it to the history file;[13]
useful for saving a command to be executed later without having to
retype it.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">@<em class="emphasis">x</EM
></TD
><td class="entry" rowspan="1" colspan="1">Insert expansion of alias _x (see below).</TD
></TR
></TBODY
></TABLE
><blockquote class="footnote"><p class="para">[13] The line is also &quot;executed&quot; by the shell. However, <b class="emphasis.bold">#</B
> is the shell's
comment character, so the shell ignores it.</P
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-3599"></A
>The first of these can be preceded by a repeat count.
A repeat count of <em class="emphasis">n</EM
> preceding the <b class="emphasis.bold">~</B
> changes the case of
the next <em class="emphasis">n</EM
> characters.
[14]
The cursor will advance accordingly.</P
><blockquote class="footnote"><p class="para">[14] This, in our opinion, is a design flaw in the <em class="emphasis">vi</EM
> editor
that the Korn shell authors might have corrected. Letting the user
append a motion command to <b class="emphasis.bold">~</B
> and having it behave analogously to d
or y would have been much more useful; that way, a word
could be case-twiddled with only two keystrokes.</P
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-3610"></A
>A repeat count preceding _ causes the <em class="emphasis">n</EM
>-th word in the previous
command to be inserted in the current line; without the count,
the last word is used. Omitting the repeat count is useful because a
filename is usually the last thing on a UNIX command line, and because
users often run several commands 
in a row on the same file. With this feature, you can type all of the
commands (except the first) followed by <span class="acronym">ESC</SPAN
> _, and the shell will
insert the filename.</P
><p class="para"><a class="indexterm" name="AUTOID-3616"></A
><a class="indexterm" name="AUTOID-3619"></A
>Finally, the command <b class="emphasis.bold">@</B
> allows you to create keyboard shortcuts
by interacting with the shell's alias facility (see <a class="xref" href="ch03_01.htm" webstripperlinkwas="ch03_01.htm" title="Customizing Your Environment">Chapter 3</A
>).
If you create an alias called
<b class="emphasis.bold">_x</B
>, where <b class="emphasis.bold">x</B
> is 
a letter, then the shell will expand the alias on the current line
(but not run it) if you type <b class="emphasis.bold">@</B
> followed by <b class="emphasis.bold">x</B
>. As with the similar
facility in emacs-mode, we don't find this particularly useful.<a class="indexterm" name="AUTOID-3627"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch02_03.htm" webstripperlinkwas="ch02_03.htm" title="2.3 Emacs Editing Mode"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 2.3 Emacs Editing Mode" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" title="Learning the Korn Shell"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Learning the Korn Shell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch02_05.htm" webstripperlinkwas="ch02_05.htm" title="2.5 The fc Command"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 2.5 The fc Command" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">2.3 Emacs Editing Mode</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">2.5 The fc Command</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="../upt/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
