<html><head>
<title>[Chapter 10] 10.3 System Security Features</TITLE>
<meta name="DC.title" content="Learning the Korn Shell"><meta name="DC.creator" content="Bill Rosenblatt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-03T21:17:14Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-054-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch10_01.htm" webstripperlinkwas="ch10_01.htm" title="10. Korn Shell Administration"><link rel="prev" href="ch10_02.htm" webstripperlinkwas="ch10_02.htm" title="10.2 Environment Customization"><link rel="next" href="appa_01.htm" webstripperlinkwas="appa_01.htm" title="A. Related Shells"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="Learning the Korn Shell" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,66" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_02.htm" webstripperlinkwas="ch10_02.htm" title="10.2 Environment Customization"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 10.2 Environment Customization" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 10<br>Korn Shell Administration</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="APPENDIX" href="appa_01.htm" webstripperlinkwas="appa_01.htm" title="A. Related Shells"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: A. Related Shells" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="KSH-CH-10-SECT-3">10.3 System Security Features</A
></H2
><p class="para"><a class="indexterm" name="KSH-CH-10-IX-SECURITY"></A
>UNIX security is a problem of legendary notoriety.
Just about every aspect of a UNIX system has some
security issue associated with it, and it's usually
the system administrator's job to worry about this
issue.</P
><p class="para"><a class="indexterm" name="AUTOID-16547"></A
>The Korn shell 
has three features that help solve this
problem: the <em class="emphasis">restricted shell</EM
>, which is intentionally
&quot;brain damaged,&quot; the <em class="emphasis">tracked alias</EM
> facility
that we saw in <a class="xref" href="ch03_01.htm" webstripperlinkwas="ch03_01.htm" title="Customizing Your Environment">Chapter 3, Customizing Your Environment</A
>,
and <em class="emphasis">privileged mode</EM
>, which is
used with shell scripts that run as if the user were
<b class="emphasis.bold">root</B
>.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-10-SECT-3.1">10.3.1 Restricted Shell</A
></H3
><p class="para"><a class="indexterm" name="KSH-CH-10-IX-RESTRICTED-SHELL"></A
><a class="indexterm" name="AUTOID-16560"></A
><a class="indexterm" name="AUTOID-16564"></A
>The restricted shell is designed to put the user into
an environment where his or her ability to move around
and write files is severely limited. It's usually used
for &quot;guest&quot; accounts.  <a class="indexterm" name="AUTOID-16567"></A
><a class="indexterm" name="AUTOID-16570"></A
>
You can make a user's login shell 
restricted by putting <b class="emphasis.bold">rksh</B
> or <b class="emphasis.bold">ksh -r</B
> in the
user's <em class="emphasis">/etc/passwd</EM
> entry.</P
><p class="para">The specific constraints imposed by the restricted shell
disallow the user from doing the following:<a class="indexterm" name="AUTOID-16576"></A
></P
><ul class="itemizedlist"><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-16582"></A
>Changing working directories: <b class="emphasis.bold">cd</B
> is
inoperative. If you try to use it, you will get the
error message &quot;ksh: cd: restricted&quot;.</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-16588"></A
>Redirecting output to a file: the redirectors
<b class="emphasis.bold">&gt;</B
>, <b class="emphasis.bold">&gt;|</B
>, <b class="emphasis.bold">&lt;&gt;</B
>, and <b class="emphasis.bold">&gt;&gt;</B
> are not allowed.</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-16598"></A
>Assigning a new value to the environment variables
<b class="emphasis.bold">SHELL</B
>, <b class="emphasis.bold">ENV</B
>, or <b class="emphasis.bold">PATH</B
>.</P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-16606"></A
>Specifying any pathnames with slashes (/) in them.
The shell will treat files outside of the current 
directory as &quot;not found.&quot;</P
></LI
></UL
><p class="para"><a class="indexterm" name="AUTOID-16610"></A
><a class="indexterm" name="AUTOID-16613"></A
>These restrictions go into effect after the
user's <em class="emphasis">.profile</EM
> and environment files are run.</P
><p class="para">This means that the restricted shell user's entire
environment is set up in <em class="emphasis">.profile</EM
>. Since the
user can't overwrite that file, this lets the system
administrator configure the environment as he or she
sees fit.  </P
><p class="para"><a class="indexterm" name="AUTOID-16620"></A
><a class="indexterm" name="AUTOID-16624"></A
>Two common ways of setting up such environments are 
to set up a directory of &quot;safe&quot; commands and have that
directory be the only one in <b class="emphasis.bold">PATH</B
>, and to set
up a command menu from which the user can't escape without
exiting the shell.<a class="indexterm" name="AUTOID-16628"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-10-SECT-3.2">10.3.2 A System Break-in Scenario</A
></H3
><p class="para">Before we explain the other security features, here is some 
background information on system security that should help you 
understand why they are necessary.</P
><p class="para"><a class="indexterm" name="AUTOID-16633"></A
><a class="indexterm" name="KSH-CH-10-IX-SUID-SHELL-SCRIPTS"></A
>Many problems with UNIX security hinge on a UNIX file
attribute called the <em class="emphasis">suid</EM
> (set user ID) bit.
This is like a permission bit (see <b class="emphasis.bold">umask</B
> above): 
when an executable file has it turned on, 
the file runs with an effective user ID equal
to the owner of the file, which is usually
<b class="emphasis.bold">root</B
>. The effective user ID is distinct from
the real user ID of the process.</P
><p class="para"><a class="indexterm" name="AUTOID-16644"></A
>This feature lets administrators write scripts
that do certain things that require <b class="emphasis.bold">root</B
> privilege
(e.g., configure printers) in a controlled way.  
To set a file's <em class="emphasis">suid</EM
> bit, the superuser can type
<b class="emphasis.bold">chmod 4755</B
> <code class="replaceable"><i>filename</I
></CODE
>; the <b class="emphasis.bold">4</B
> is the <em class="emphasis">suid</EM
> bit.</P
><p class="para"><a class="indexterm" name="KSH-CH-10-IX-SUID-SHELL-SCRIPTS-DANGERS-OF"></A
>Modern system administration wisdom says that creating
<em class="emphasis">suid</EM
> shell scripts is a very, very bad idea.
[5]<a class="indexterm" name="AUTOID-16661"></A
>
This has been especially true under 
the C shell, because its <em class="emphasis">.cshrc</EM
> environment file
introduces numerous opportunities for break-ins.  <a class="indexterm" name="AUTOID-16664"></A
><a class="indexterm" name="KSH-CH-10-IX-SECURITY-TROJAN-HORSE-SCHEMES"></A
>
The Korn 
shell's environment file feature creates similar security
holes, although the security features we'll see shortly 
make this problem less severe.</P
><blockquote class="footnote"><p class="para">[5] In fact, some versions of UNIX intentionally disable the <em class="emphasis">suid</EM
> 
feature for shell scripts.</P
></BLOCKQUOTE
><p class="para">We'll show why it's dangerous to set a script's <em class="emphasis">suid</EM
> bit.  <a class="indexterm" name="AUTOID-16672"></A
><a class="indexterm" name="AUTOID-16675"></A
><a class="indexterm" name="AUTOID-16678"></A
>
Recall that in <a class="xref" href="ch03_01.htm" webstripperlinkwas="ch03_01.htm" title="Customizing Your Environment">Chapter 3</A
> we mentioned that it's not a good
idea to put your personal <em class="emphasis">bin</EM
> directory at the 
front of your <b class="emphasis.bold">PATH</B
>. Here is a scenario that shows
how this combines with <em class="emphasis">suid</EM
> shell scripts to form
a security hole: a variation of the infamous &quot;Trojan horse&quot; scheme.</P
><p class="para">For this particular technique to work, the computer cracker 
has to find a user on the system with an <em class="emphasis">suid</EM
> shell script.
In addition, the user must have a <b class="emphasis.bold">PATH</B
> with his or
her personal <em class="emphasis">bin</EM
> directory
listed before the public <em class="emphasis">bin</EM
> directories,
and the cracker must have write permission on the user's
personal <em class="emphasis">bin</EM
> directory.</P
><p class="para">Once the cracker finds a user with these requirements, he
or she does the following:</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-16696"></A
>Looks at the <em class="emphasis">suid</EM
> script and finds a common 
utility that it calls. Let's say it's <em class="emphasis">grep</EM
>.</P
></LI
><li class="listitem"><p class="para">Creates the Trojan horse: a shell script called <em class="emphasis">grep</EM
>
in the user's personal <em class="emphasis">bin</EM
> directory that looks like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">cp /bin/ksh <em class="emphasis">filename</EM
>
chown root <em class="emphasis">filename</EM
>
chmod 4755 <em class="emphasis">filename</EM
>
/bin/grep &quot;$@&quot;
rm ~/bin/grep</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-16710"></A
><a class="indexterm" name="AUTOID-16712"></A
><em class="emphasis">filename</EM
> should be some unremarkable filename
in a directory with public read and execute permission,
such as <em class="emphasis">/bin</EM
> or <em class="emphasis">/usr/bin</EM
>.   <a class="indexterm" name="AUTOID-16717"></A
>
The file, when created,
will be that most heinous of security
holes: an <em class="emphasis">suid</EM
> interactive shell.  </P
></LI
><li class="listitem"><p class="para">Sits back and waits for the user to run the <em class="emphasis">suid</EM
>
shell script-which calls the Trojan horse, which in
turn creates the <em class="emphasis">suid</EM
> shell and then self-destructs.</P
></LI
><li class="listitem"><p class="para">Runs the <em class="emphasis">suid</EM
> shell and creates havoc.</P
></LI
></UL
><p class="para"><a class="indexterm" name="AUTOID-16729"></A
><a class="indexterm" name="AUTOID-16730"></A
><a class="indexterm" name="AUTOID-16731"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-10-SECT-3.3">10.3.3 Tracked Aliases</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-16735"></A
>The Korn shell protects against this type of scheme in two
ways. First, it defines tracked aliases 
(see <a class="xref" href="ch03_01.htm" webstripperlinkwas="ch03_01.htm" title="Customizing Your Environment">Chapter 3</A
>) for just about all commonly-used utilities:
<em class="emphasis">ls</EM
>, <em class="emphasis">mv</EM
>, <em class="emphasis">cp</EM
>, <em class="emphasis">who</EM
>, <em class="emphasis">grep</EM
>,
and many others. Since aliases take 
priority over executable files, the alias will always
run instead of the Trojan horse.</P
><p class="para"><a class="indexterm" name="AUTOID-16746"></A
>Furthermore, the shell won't let you know about these
if you type <b class="emphasis.bold">alias -t</B
> to see all tracked aliases.
[6]
You'll have trouble finding a command to use as your
Trojan horse if you want to break in. This is a very
clever-and 
undocumented-security feature.</P
><blockquote class="footnote"><p class="para">[6] <a class="indexterm" name="AUTOID-16753"></A
>Unless you type <b class="emphasis.bold">whence -v</B
> <em class="emphasis">command</EM
> or <b class="emphasis.bold">type</B
> 
<em class="emphasis">command</EM
>. If <em class="emphasis">command</EM
> has a tracked alias,
this will say so, and it will cause <b class="emphasis.bold">alias -t</B
>
to report it next time.</P
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-10-SECT-3.4">10.3.4 Privileged Mode</A
></H3
><p class="para"><a class="indexterm" name="KSH-CH-10-IX-PRIVILEGED-MODE"></A
><a class="indexterm" name="AUTOID-16768"></A
>The second type of protection against Trojan horses is <em class="emphasis">privileged mode</EM
>. 
This is a <b class="emphasis.bold">set -o</B
> option (<b class="emphasis.bold">set -o privileged</B
>
or <b class="emphasis.bold">set -p</B
>), but the shell enters it
automatically whenever it executes a script whose <em class="emphasis">suid</EM
>
bit is set.  </P
><p class="para"><a class="indexterm" name="KSH-CH-10-IX-SUID-SHELL-SCRIPTS-N"></A
>In privileged mode, when an <em class="emphasis">suid</EM
> Korn shell
script is invoked, the shell does not run the user's
environment file-i.e., it doesn't expand the user's
<b class="emphasis.bold">ENV</B
> environment variable.  <a class="indexterm" name="AUTOID-16781"></A
><a class="indexterm" name="AUTOID-16783"></A
><a class="indexterm" name="AUTOID-16786"></A
><a class="indexterm" name="AUTOID-16789"></A
><a class="indexterm" name="AUTOID-16792"></A
>
Instead, it runs the file <em class="emphasis">/etc/suid_profile</EM
>.  </P
><p class="para"><em class="emphasis">/etc/suid_profile</EM
> should be written so as to restrict
<em class="emphasis">suid</EM
> shell scripts in much the same way as the
restricted shell does.  <a class="indexterm" name="AUTOID-16800"></A
><a class="indexterm" name="AUTOID-16804"></A
><a class="indexterm" name="AUTOID-16806"></A
><a class="indexterm" name="AUTOID-16808"></A
>
At a minimum, it should make
<b class="emphasis.bold">PATH</B
> read-only (<b class="emphasis.bold">typeset -r PATH</B
> or
<b class="emphasis.bold">readonly PATH</B
>) and set it
to one or more &quot;safe&quot; directories. Once again,
this prevents any decoys from being invoked.</P
><p class="para"><a class="indexterm" name="AUTOID-16815"></A
>Since privileged mode is an option, it is possible to
turn it off with the command <b class="emphasis.bold">set +o privileged</B
>
(or <b class="emphasis.bold">set +p</B
>).  
But this doesn't help the potential
system cracker: the shell automatically changes its
effective user ID to be the same as the real user 
ID-i.e.,
if you turn off privileged mode, you also turn
off <em class="emphasis">suid</EM
>.</P
><p class="para"><a class="indexterm" name="AUTOID-16822"></A
>Privileged mode is an excellent security feature;
it solves a problem that originated when the environment
file idea first appeared in the C shell.<a class="indexterm" name="AUTOID-16824"></A
><a class="indexterm" name="AUTOID-16825"></A
>
Tracked aliases make protection against Trojan horses
even stronger.   </P
><p class="para"><a class="indexterm" name="AUTOID-16830"></A
>Furthermore, both features are strong arguments
for installing the Korn shell as <em class="emphasis">/bin/sh</EM
>. Your
system will be all the more impervious to break-ins if
your standard shell has these security features.</P
><p class="para">Nevertheless, we still recommend against creating
<em class="emphasis">suid</EM
> shell scripts. We have shown how the Korn
shell protects against break-ins in one particular situation,
but that certainly does not imply that the Korn shell
is &quot;safe&quot; in any absolute sense. If you really must have 
<em class="emphasis">suid</EM
> scripts, you should carefully consider all
relevant security issues.<a class="indexterm" name="AUTOID-16836"></A
></P
><p class="para">Finally, if you would like to learn more about UNIX security,
we recommend the O'Reilly &amp; Associates Nutshell Handbook,
<em class="emphasis">Practical UNIX Security</EM
>, by Gene Spafford and 
Simson Garfinkel.</P
><a class="indexterm" name="AUTOID-16839"></A
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch10_02.htm" webstripperlinkwas="ch10_02.htm" title="10.2 Environment Customization"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 10.2 Environment Customization" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" title="Learning the Korn Shell"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Learning the Korn Shell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="APPENDIX" href="appa_01.htm" webstripperlinkwas="appa_01.htm" title="A. Related Shells"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: A. Related Shells" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">10.2 Environment Customization</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">A. Related Shells</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="../upt/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
