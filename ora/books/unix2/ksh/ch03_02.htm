<html><head>
<title>[Chapter 3] 3.2 Aliases</TITLE>
<meta name="DC.title" content="Learning the Korn Shell"><meta name="DC.creator" content="Bill Rosenblatt"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1998-08-03T20:58:21Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-054-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_01.htm" webstripperlinkwas="ch03_01.htm" title="3. Customizing Your Environment"><link rel="prev" href="ch03_01.htm" webstripperlinkwas="ch03_01.htm" title="3.1 The .profile File"><link rel="next" href="ch03_03.htm" webstripperlinkwas="ch03_03.htm" title="3.3 Options"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" alt="Learning the Korn Shell" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,66" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="jobjects/fsearch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch03_01.htm" webstripperlinkwas="ch03_01.htm" title="3.1 The .profile File"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 3.1 The .profile File" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 3<br>Customizing Your Environment</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch03_03.htm" webstripperlinkwas="ch03_03.htm" title="3.3 Options"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 3.3 Options" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="KSH-CH-3-SECT-2">3.2 Aliases</A
></H2
><p class="para"><a class="indexterm" name="KSH-CH-3-IX-AKAS"></A
>Perhaps the easiest and most popular type of customization is
the <em class="emphasis">alias</EM
>, which is a synonym for a command or command string. <a class="indexterm" name="AUTOID-3905"></A
>
This is one of several Korn shell features that were appropriated from
the C shell.
[2]<a class="indexterm" name="AUTOID-3910"></A
>
You define an alias by entering (or adding to your <em class="emphasis">.profile</EM
>)
a line with the following form:</P
><blockquote class="footnote"><p class="para">[2] C shell users should note that 
the Korn shell's alias feature does not support arguments in alias
expansions, as C shell aliases do.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">alias <em class="emphasis">new</EM
>=<em class="emphasis">original</EM
></PRE
></BLOCKQUOTE
></P
><p class="para">(Notice that there are no spaces on either side of the equal sign
(<b class="emphasis.bold">=</B
>); this
is required syntax.) The alias command defines new to be an alias for
original, so that whenever you type <b class="emphasis.bold">new</B
>, the Korn shell
substitutes <em class="emphasis">original</EM
> internally.  </P
><p class="para"><a class="indexterm" name="KSH-CH-3-IX-AKAS-USING-MNEMONIC"></A
>There are a few basic ways to use an alias. The first, and simplest,
is as a more mnemonic name for an existing command.
Many commonly-used UNIX 
commands have names that are poor
mnemonics and therefore are excellent candidates for aliasing, but
the classic example is:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias search=grep</PRE
></BLOCKQUOTE
></P
><p class="para"><em class="emphasis">grep</EM
>, the UNIX file-searching utility, was named as an
acronym for something like &quot;Generalized Regular Expression Parser.&quot;
[3]
This acronym may mean something to a computer scientist, but not to the
office administrator who has to find <b class="emphasis.bold">Fred</B
> in a list of phone
numbers. If you have to find <b class="emphasis.bold">Fred</B
> and you have the word <em class="emphasis">search</EM
> defined as an alias for <em class="emphasis">grep</EM
>, 
you can type:</P
><blockquote class="footnote"><p class="para">[3] Another theory has it that <em class="emphasis">grep</EM
> stands for the command 
&quot;g/re/p&quot;, in the old <em class="emphasis">ed</EM
> text editor, which does essentially the
same thing as <em class="emphasis">grep</EM
>.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">$ <b class="emphasis.bold">search Fred phonelist</B
></PRE
></BLOCKQUOTE
></P
><p class="para">Another popular alias eschews <em class="emphasis">exit</EM
> in favor of a more
widely-used command for ending a login session:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias logout=exit</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-3948"></A
><a class="indexterm" name="AUTOID-3950"></A
>If you are a C shell user, you may be used to having a <em class="emphasis">.logout</EM
>
file of commands that the shell executes just before you log out.
The Korn shell doesn't have this feature as such, but you can mimic
it quite easily using an alias:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias logout='. ~/.ksh_logout; exit'</PRE
></BLOCKQUOTE
></P
><p class="para">This reads commands in from the file <em class="emphasis">.ksh_logout</EM
> in your home
directory and then logs you out.  <a class="indexterm" name="AUTOID-3957"></A
>
The semicolon acts as a 
statement separator, allowing you to have more than one
command on the same line.</P
><p class="para">You might want the file <em class="emphasis">.logout</EM
> to &quot;clean up&quot; your history files,
as we discussed in the last chapter. Recall that we created history
files with the filename <em class="emphasis">.hist$$</EM
>, which guarantees a unique name
for every shell. To remove these files when the shells exit, just put
this line in your <em class="emphasis">.logout</EM
> file:</P
><p class="para"><blockquote class="screen"><pre class="screen">rm ~/.hist$$</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-3967"></A
><a class="indexterm" name="AUTOID-3968"></A
>Some people who aren't particularly good typists like to use aliases
for typographical errors they make often. For example:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias emcas=emacs
alias mali=mail
alias gerp=grep</PRE
></BLOCKQUOTE
></P
><p class="para">This can be handy, but we feel you're probably better off suffering with
the error message and getting the correct spelling under your
fingers.<a class="indexterm" name="KSH-CH-3-IX-AKAS-USING-SHORTHAND"></A
>
Another common way to use an alias is as a shorthand for a longer
command string. For example, you may have a directory to which you
need to go often. It's buried deeply in your directory hierarchy, so
you want to set up an alias that will allow you to <b class="emphasis.bold">cd</B
> there
without typing (or even remembering) the entire pathname:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias cdcm='cd work/projects/devtools/windows/confman'</PRE
></BLOCKQUOTE
></P
><p class="para">Notice the quotes around the full <b class="emphasis.bold">cd</B
> command;
these are necessary if the string being aliased consists of
more than one word.
[4]</P
><blockquote class="footnote"><p class="para">[4] This contrasts with C shell aliases, in which the quotes aren't
required.</P
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-3987"></A
>As another example, a useful option to the <em class="emphasis">ls</EM
> command is <b class="emphasis.bold">-F</B
>:
it puts a slash (<b class="emphasis.bold">/</B
>) after directory files and an asterisk (<code class="literal">*</CODE
>) after
executable files. Since typing a dash followed by a capital letter
is inconvenient, many people like to define an alias like this:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias lf='ls -F'</PRE
></BLOCKQUOTE
></P
><p class="para">A few things about aliases are important to remember.
First, the Korn shell makes a textual
substitution of the alias for that which it is aliasing; it may help to imagine 
<em class="emphasis">ksh</EM
> passing your command through a text
editor or word processor and issuing a &quot;change&quot; or &quot;substitute&quot;
command before interpreting and executing it.</P
><p class="para"><a class="indexterm" name="AUTOID-3999"></A
>This, in turn, means that any special characters (such as wildcards like <code class="literal">*</CODE
> and <code class="literal">?</CODE
>) that result
when the alias is expanded are interpreted properly by the shell.
[5]
For example, to make it easier
to print all of the files in your directory, you could define
the alias:</P
><blockquote class="footnote"><p class="para">[5] An important corollary: wildcards and other special
characters cannot be used in the names of aliases, i.e., on the
left side of the equal sign.</P
></BLOCKQUOTE
><p class="para"><blockquote class="screen"><pre class="screen">alias printall='pr * | lpr'</PRE
></BLOCKQUOTE
></P
><p class="para"><a class="indexterm" name="AUTOID-4009"></A
><a class="indexterm" name="KSH-CH-3-IX-AKAS-RECURSIVE"></A
>Second, keep in mind that aliases are recursive,
which means that it is possible to alias an alias. A legitimate
objection to the previous example is that the alias, while mnemonic,
is too long and doesn't save enough typing. If we want to keep this
alias but add a shorter abbreviation, we could define:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias pa=printall</PRE
></BLOCKQUOTE
></P
><p class="para">Recursive aliasing makes it possible to set up an &quot;infinite loop&quot;
of definitions, wherein an alias ends up (perhaps after several
lookups) being defined as itself. For example, the command:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias ls='ls -l'</PRE
></BLOCKQUOTE
></P
><p class="para">sets up a possible infinite loop. Luckily, the shell has a mechanism
to guard against such dangers. The above command will work as
expected (typing <b class="emphasis.bold">ls</B
> produces a long list with permissions,
sizes, owners, etc.), while in more pathological situations such as:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias listfile=ls
alias ls=listfile</PRE
></BLOCKQUOTE
></P
><p class="para">the alias <b class="emphasis.bold">listfile</B
> is ignored.<a class="indexterm" name="AUTOID-4024"></A
></P
><p class="para">Aliases can only be used for
the beginning of a command string-albeit with certain
exceptions. In the <b class="emphasis.bold">cd</B
> 
example above, you might want to define an alias for the
directory name alone, not for the entire command.  
But if you define:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias cm=work/projects/devtools/windows/confman</PRE
></BLOCKQUOTE
></P
><p class="para">and then type <b class="emphasis.bold">cd cm</B
>, the Korn shell will probably print
a message like <b class="emphasis.bold">ksh: cm: not found</B
>.</P
><p class="para"><a class="indexterm" name="KSH-CH-3-IX-AKAS-ON-ARGS-COMMAND-LINE"></A
>An obscure, rather ugly feature of the Korn shell's alias facility-one 
not present in the analogous C shell feature-provides
a way around this problem. If the value of an alias
(the right side of the equal sign) ends in a blank, then the
Korn shell tries to do alias substitution on 
the next word on the command line. To make the value of
an alias end in a blank, you need to surround it with quotes.</P
><p class="para">Here is how you would use this capability to allow aliases
for directory names, at least for use with the <b class="emphasis.bold">cd</B
>
command. Just define:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias cd='cd '</PRE
></BLOCKQUOTE
></P
><p class="para">This causes the Korn shell to search for an alias for the 
directory name argument to <b class="emphasis.bold">cd</B
>, which in the previous example would enable it to expand the alias <b class="emphasis.bold">cm</B
> correctly. <a class="indexterm" name="AUTOID-4043"></A
></P
><div class="sect2"><h3 class="sect2"><a class="title" name="KSH-CH-3-SECT-2.1">3.2.1 Tracked Aliases</A
></H3
><p class="para"><a class="indexterm" name="KSH-CH-3-IX-AKAS-TRACKED"></A
>Another rather obscure feature of the alias facility is the <em class="emphasis">tracked</EM
>
alias, which can shorten the time it takes the shell to invoke commands.
If you specify this option (as shown under &quot;Options&quot; below), then for
all subsequent alias definitions, the shell
will internally substitute the full pathname of each command for
which an alias is defined. <a class="indexterm" name="AUTOID-4051"></A
><a class="indexterm" name="AUTOID-4055"></A
>
You can also define individual tracked aliases
with the option <b class="emphasis.bold">-t</B
> to the <b class="emphasis.bold">alias</B
> command, and you can list
all tracked aliases by typing <b class="emphasis.bold">alias -t</B
> by itself.</P
><p class="para">As you will see later in this chapter, a tracked alias
cuts down the number of steps the shell has to take to find
the command when you want to run it.  <a class="indexterm" name="AUTOID-4063"></A
><a class="indexterm" name="AUTOID-4067"></A
>
More important, however,
are its implications for system security; see 
<a class="xref" href="ch10_01.htm" webstripperlinkwas="ch10_01.htm" title="Korn Shell Administration">Chapter 10, Korn Shell Administration</A
>.</P
><p class="para">For example, assume that you have defined the alias <b class="emphasis.bold">em</B
> for
the <em class="emphasis">emacs</EM
> editor, which is kept in the executable file
<em class="emphasis">/usr/local/bin/emacs</EM
>. If you specify that you want aliases
tracked, then the first time you type <b class="emphasis.bold">em myfile</B
>, the shell
will substitute the full pathname, i.e., as if you had defined the alias as:</P
><p class="para"><blockquote class="screen"><pre class="screen">alias em=/usr/local/bin/emacs</PRE
></BLOCKQUOTE
></P
><p class="para">You'll see how this can save time when you read about the PATH
environment variable later on. <a class="indexterm" name="AUTOID-4078"></A
></P
><p class="para"><a class="indexterm" name="AUTOID-4080"></A
>Finally, there are a few useful adjuncts to the basic <b class="emphasis.bold">alias</B
> command.
If you type <b class="emphasis.bold">alias</B
> <em class="emphasis">name</EM
> without an equal sign (<b class="emphasis.bold">=</B
>) and
value, the shell will print the alias' value or <b class="emphasis.bold">alias</B
> <em class="emphasis">name</EM
><b class="emphasis.bold"> not found</B
> if it is undefined. If you type
<b class="emphasis.bold">alias</B
> without any arguments, you get
a list of all the aliases you have defined as
well as several that are built-in.  <a class="indexterm" name="AUTOID-4091"></A
><a class="indexterm" name="AUTOID-4093"></A
>
The command <b class="emphasis.bold">unalias</B
> <em class="emphasis">name</EM
> removes any alias definition
for its argument.</P
><p class="para">Aliases are very handy for creating a comfortable environment,
but they are really just kid stuff compared to more advanced
customization techniques like scripts and functions, which we
will see in the next chapter. These give you everything aliases do plus
much more, so if you become proficient at them, you may find that
you don't need aliases anymore. However, aliases are ideal for
novices who find UNIX to be a rather forbidding place, full of
terseness and devoid of good mnemonics.<a class="indexterm" name="AUTOID-4099"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch03_01.htm" webstripperlinkwas="ch03_01.htm" title="3.1 The .profile File"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous: 3.1 The .profile File" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" title="Learning the Korn Shell"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Learning the Korn Shell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch03_03.htm" webstripperlinkwas="ch03_03.htm" title="3.3 Options"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next: 3.3 Options" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.1 The .profile File</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" webstripperlinkwas="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.3 Options</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#map" border="0" alt="The UNIX CD Bookshelf Navigation"><map name="map"><area shape="RECT" coords="0,0,73,21" href="../index.html" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/index.html" alt="The UNIX CD Bookshelf"><area shape="RECT" coords="74,0,163,21" href="../upt/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/upt/index.htm" alt="UNIX Power Tools"><area shape="RECT" coords="164,0,257,21" href="../unixnut/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/unixnut/index.htm" alt="UNIX in a Nutshell"><area shape="RECT" coords="258,0,321,21" href="../vi/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/vi/index.htm" alt="Learning the vi Editor"><area shape="RECT" coords="322,0,378,21" href="../sedawk/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/sedawk/index.htm" alt="sed &amp; awk"><area shape="RECT" coords="379,0,438,21" href="index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/ksh/index.htm" alt="Learning the Korn Shell"><area shape="RECT" coords="439,0,514,21" href="../lrnunix/index.htm" webstripperlinkwas="http://www.ms.itb.ac.id/buku/unix-bookshelf/lrnunix/index.htm" alt="Learning the UNIX Operating System"></MAP
></DIV
></BODY
></HTML
>
