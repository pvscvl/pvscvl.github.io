<html><head>
<title>[Chapter 9] 9.4 Labeled Blocks</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:34:11Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch09_01.htm" title="9. Miscellaneous Control Structures"><link rel="prev" href="ch09_03.htm" title="9.3 The redo Statement"><link rel="next" href="ch09_05.htm" title="9.5 Expression Modifiers"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map name="srchmap"index.html><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch09_03.htm" title="9.3 The redo Statement"><img src="../gifs/txtpreva.gif" alt="Previous: 9.3 The redo Statement" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch09_01.htm" title="9. Miscellaneous Control Structures">Chapter 9<br>Miscellaneous Control Structures</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch09_05.htm" title="9.5 Expression Modifiers"><img src="../gifs/txtnexta.gif" alt="Next: 9.5 Expression Modifiers" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch09-24800">9.4 Labeled Blocks</A
></H2
><p class="para"><a class="indexterm" name="ch09-idx-903241-0"></A
>What if you want to jump out of the block that contains the innermost block&nbsp;- to exit from two nested blocks at once? In C, you'd resort to that much maligned <a class="indexterm" name="ch09-idx-903240-0"></A
><code class="literal">goto</CODE
> to get you out. No such <a class="indexterm" name="ch09-idx-903258-0"></A
>kludge is required in Perl. You can use <code class="literal">last</CODE
>, <code class="literal">next</CODE
>, and <code class="literal">redo</CODE
> on any enclosing block by giving the block a name with a <a class="indexterm" name="ch09-idx-903239-0"></A
><em class="emphasis">label</EM
>.</P
><p class="para">A label is yet another type of name from yet another namespace following the same rules as scalars, arrays, hashes, and subroutines. As we'll see, however, a label doesn't have a special prefix punctuation character (like <code class="literal">$</CODE
> for scalars, <code class="literal">&amp;</CODE
> for subroutines, and so on), so a label named <code class="literal">print</CODE
> conflicts with the reserved word <code class="literal">print</CODE
>, and would not be allowed. For this reason, you should choose labels that consist entirely of uppercase letters and digits, which will never be chosen for a reserved word in the future. Besides, using all uppercase makes an item stand out better within the text of a mostly lowercase program.</P
><p class="para">After you've chosen your label, place it immediately in front of the statement containing the block, and follow it with a <a class="indexterm" name="ch09-idx-903243-0"></A
>colon, like this:</P
><pre class="programlisting">SOMELABEL: while (<code class="replaceable"><i>condition</I
></CODE
>) {
        <code class="replaceable"><i>statement</I
></CODE
>;
        <code class="replaceable"><i>statement</I
></CODE
>;
        <code class="replaceable"><i>statement</I
></CODE
>;
        if (<code class="replaceable"><i>nuthercondition</I
></CODE
>) {
            last SOMELABEL;
        }
}</PRE
><p class="para">We added <code class="literal">SOMELABEL</CODE
> as a parameter to <code class="literal">last</CODE
>. This parameter tells Perl to exit the block named <code class="literal">SOMELABEL</CODE
>, rather than exiting just the innermost block. In this case, we don't have anything but the innermost block. But suppose we had <a class="indexterm" name="ch09-idx-588-0"></A
><a class="indexterm" name="ch09-idx-588-1"></A
>nested loops:</P
><pre class="programlisting">OUTER: <a class="indexterm" name="ch09-idx-903259-0"></A
>for ($i = 1; $i &lt;= 10; $i++) {
        INNER: for ($j = 1; $j &lt;= 10; $j++) {
            if ($i * $j == 63) {
                print &quot;$i times $j is 63!\n&quot;;
                last OUTER;
            }
            if ($j &gt;= $i) {
                next OUTER;
            }
        }
}</PRE
><p class="para">This set of statements tries all successive values of two small numbers multiplied together until it finds a pair whose <a class="indexterm" name="ch09-idx-903260-0"></A
>product is 63 (7 and 9). After the pair is found, there's no point in testing other numbers, so the first <code class="literal">if</CODE
> statement exits both <code class="literal">for</CODE
> loops using <code class="literal">last</CODE
> with a label. The second <code class="literal">if</CODE
> ensures that the bigger of the two numbers will always be the first number by skipping to the next iteration of the outer loop as soon as the condition would no longer hold. This means that the numbers will be tested with (<code class="literal">$i</CODE
>, <code class="literal">$j</CODE
>) being (<code class="literal">1</CODE
>,<code class="literal">1</CODE
>), (<code class="literal">2</CODE
>,<code class="literal">1</CODE
>), (<code class="literal">2</CODE
>,<code class="literal">2</CODE
>), (<code class="literal">3</CODE
>,<code class="literal">1</CODE
>), (<code class="literal">3</CODE
>,<code class="literal">2</CODE
>), (<code class="literal">3</CODE
>,<code class="literal">3</CODE
>), (<code class="literal">4</CODE
>,<code class="literal">1</CODE
>), and so on.</P
><p class="para">Even if the innermost block is labeled, the <code class="literal">last</CODE
>, <code class="literal">next</CODE
>, and <code class="literal">redo</CODE
> statements without the optional parameter (the label) still operate with respect to that innermost block. Also, you can't use labels to jump into a block&nbsp;- just out of a block. The <code class="literal">last</CODE
>, <code class="literal">next</CODE
>, or <code class="literal">redo</CODE
> has to be within the block.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch09_03.htm" title="9.3 The redo Statement"><img src="../gifs/txtpreva.gif" alt="Previous: 9.3 The redo Statement" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch09_05.htm" title="9.5 Expression Modifiers"><img src="../gifs/txtnexta.gif" alt="Next: 9.5 Expression Modifiers" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">9.3 The redo Statement</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">9.5 Expression Modifiers</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
