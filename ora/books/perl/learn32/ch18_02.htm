<html><head>
<title>[Chapter 18] 18.2 Your CGI Program in Context</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:36:46Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch18_01.htm" title="18. CGI Programming"><link rel="prev" href="ch18_01.htm" title="18.1 The CGI.pm Module"><link rel="next" href="ch18_03.htm" title="18.3 Simplest CGI Program"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map name="srchmap"index.html><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch18_01.htm" title="18.1 The CGI.pm Module"><img src="../gifs/txtpreva.gif" alt="Previous: 18.1 The CGI.pm Module" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch18_01.htm" title="18. CGI Programming">Chapter 18<br><a class="indexterm" name="ch18-idx-87413-0"></A
>CGI Programming</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch18_03.htm" title="18.3 Simplest CGI Program"><img src="../gifs/txtnexta.gif" alt="Next: 18.3 Simplest CGI Program" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch18-23672">18.2 Your CGI Program in Context</A
></H2
><p class="para"><a class="xref" href="#ch18-pgfId-87314" title="CGI application flow">Figure 18.1</A
> shows the relationships between a web browser, web server, and CGI program. When you click on a link while using your browser, there is a URL associated with the link. This URL specifies a web server and a resource accessible through that server. So the browser communicates with the server, requesting the given resource. If, say, the resource is an HTML fill-out form, the web server responds by downloading the form to the browser, which then displays the form for you to fill out. </P
><h4 class="figure"><a class="title" name="ch18-pgfId-87314">Figure 18.1: CGI application flow</A
></H4
><img class="graphic" src="figs/lp_1801.gif" alt="Figure 18.1"><p class="para">Each text-input field on the form has a name (given in the form's HTML code), and an associated value, which is whatever you type into the field. The form itself is associated (via the HTML <code class="literal">&lt;FORM&gt;</CODE
> tag) with a CGI program that processes the form input. When you fill out the form and click on <em class="emphasis">Submit</EM
>, the browser accesses the URL of the CGI program. But first it tacks onto the end of the URL a <em class="emphasis">query string</EM
> consisting of one or more <code class="literal">name=value</CODE
> pairs; each name is the name of a text input field, and each value is the corresponding input you provided. So the URL to which the browser submits your form input looks something like this (where the query string is everything after the question mark): </P
><pre class="programlisting">http://www.SOMEWHERE.org/cgi-bin/some_cgi_prog?flavor=vanilla&amp;size=double</PRE
><p class="para">In this case, there are two <code class="literal">name=value</CODE
> pairs. Such pairs are separated by an ampersand (&amp;): a detail you won't have to worry about when you use the <em class="emphasis">CGI.pm</EM
> module. The part of the URL that reads <em class="emphasis">/cgi-bin/some_cgi_prog/</EM
> will receive further explanation later; at the moment, you need only note that this part provides a path to the CGI program that will process the HTML form input. </P
><p class="para">When the web server (<em class="emphasis">www.SOMEWHERE.org</EM
> in this case) receives the URL from your browser, it invokes the CGI program, passing the <code class="literal">name=value</CODE
> pairs to the program as arguments. The program then does whatever it does, and (usually) returns HTML code to the server, which in turn downloads the code to the browser for display to you. </P
><p class="para">The conversation between the browser and the server, and also between the server and the CGI program, follows the protocol known as HTTP. You needn't worry much about this when writing your CGI program, because <em class="emphasis">CGI.pm</EM
> takes care of the protocol requirements for you. </P
><p class="para">The way in which the CGI program expects to receive its arguments (and other information) from the browser via the server is governed by the CGI specification. Again, you don't need to worry too much about this; as you will see, <em class="emphasis">CGI.pm</EM
> automatically unpacks the arguments for you. </P
><p class="para">Finally, you should know that CGI programs can work with any HTML document, not just forms. For example, you could write the HTML code: </P
><pre class="programlisting">Click &lt;a href=&quot;http://www.SOMEWHERE.org/cgi-bin/fortune.cgi&quot;&gt;here&lt;/a&gt;
to receive your fortune.</PRE
><p class="para">In this case, there wouldn't be any argument supplied to the CGI program with the URL. Or the HTML document could give two links for the user to click on&nbsp;- one to receive a fortune, and one to receive the current date. Both links could point to the same program, in one case with the argument <code class="literal">fortune</CODE
> following the question mark in the URL, and in the other case with the argument <code class="literal">date</CODE
>. The HTML links would look like this: </P
><pre class="programlisting">&lt;a href=&quot;http://www.SOMEWHERE.org/cgi-bin/fortune_or_date?fortune&gt;
&lt;a href=&quot;http://www.SOMEWHERE.org/cgi-bin/fortune_or_date?date&gt;</PRE
><p class="para">The CGI program (<em class="emphasis">fortune_or_date</EM
> in this case) would then see which of the two possible arguments it received and execute either the <em class="emphasis">fortune</EM
> or <em class="emphasis">date</EM
> program accordingly. </P
><p class="para">So you see that arguments do not have to be of the <code class="literal">name=date</CODE
> variety characteristic of fill-out forms. You can write a CGI program to do most anything you please, and you can pass it most any arguments you please. </P
><p class="para">In this chapter, we will primarily illustrate HTML fill-out forms. And we will assume that you understand basic HTML code already.[<a class="footnote" href="#ch18-pgfId-87334">3</A
>] </P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch18-pgfId-87334">[3]</A
> For the full story about HTML, see<em class="emphasis"> HTML: The Definitive Guide</EM
>, <em class="emphasis">Second  Edition</EM
>, O'Reilly &amp; Associates. </P
></DIV
></BLOCKQUOTE
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch18_01.htm" title="18.1 The CGI.pm Module"><img src="../gifs/txtpreva.gif" alt="Previous: 18.1 The CGI.pm Module" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch18_03.htm" title="18.3 Simplest CGI Program"><img src="../gifs/txtnexta.gif" alt="Next: 18.3 Simplest CGI Program" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">18.1 The CGI.pm Module</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">18.3 Simplest CGI Program</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
