<html><head>
<title>[Chapter 5] 5.3 Literal Representation of a Hash</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:33:16Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch05_01.htm" title="5. Hashes"><link rel="prev" href="ch05_02.htm" title="5.2 Hash Variables"><link rel="next" href="ch05_04.htm#ch05-pgfId-188700" title="5.4 Hash Functions"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch05_02.htm" title="5.2 Hash Variables"><img src="../gifs/txtpreva.gif" alt="Previous: 5.2 Hash Variables" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch05_01.htm" title="5. Hashes">Chapter 5<br>Hashes</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch05_04.htm#ch05-pgfId-188700" title="5.4 Hash Functions"><img src="../gifs/txtnexta.gif" alt="Next: 5.4 Hash Functions" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch05-14735">5.3 Literal Representation of a Hash</A
></H2
><p class="para">You may wish to access the hash as a whole, either to initialize it, or to copy it to another hash. Perl doesn't really have a <a class="indexterm" name="ch05-idx-529077-0"></A
><a class="indexterm" name="ch05-idx-529077-1"></A
>literal representation for a hash, so instead it unwinds the hash as a list. Each pair of elements in the list (which should always have an even number of elements) defines a key and its corresponding value. This unwound representation can be assigned into another hash, which will then recreate the same hash. In other words:</P
><pre class="programlisting">@fred_list = %fred;   # @fred_list gets (&quot;aaa&quot;,&quot;bbb&quot;,&quot;234.5&quot;,456.7)
%barney = @fred_list; # create %barney like %fred
%barney = %fred;      # a faster way to do the same
%smooth = (&quot;aaa&quot;,&quot;bbb&quot;,&quot;234.5&quot;,456.7);
                      # create %smooth like %fred, from literal values</PRE
><p class="para">The order of the key-value pairs is arbitrary in this unwound representation and cannot be controlled. Even if you swap some of the values around and create the hash as a whole, the returned unwound list is still in whatever order Perl has created for efficient access to the individual elements. You should never rely on any particular ordering.</P
><p class="para">One quick use of this winding and unwinding is to copy a hash value to another hash variable:</P
><pre class="programlisting">%copy = %original; # copy from %original to %copy</PRE
><p class="para">And you can construct a hash with keys and values swapped using the <code class="literal">reverse</CODE
> operator, which works magically well here:</P
><pre class="programlisting">%backwards = reverse %normal;</PRE
><p class="para">Of course, if <code class="literal">%normal</CODE
> has two identical values, those will end up as only a single element in <code class="literal">%backwards</CODE
>, so this swap is best performed only on hashes with unique keys and values.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch05_02.htm" title="5.2 Hash Variables"><img src="../gifs/txtpreva.gif" alt="Previous: 5.2 Hash Variables" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch05_04.htm#ch05-pgfId-188700" title="5.4 Hash Functions"><img src="../gifs/txtnexta.gif" alt="Next: 5.4 Hash Functions" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">5.2 Hash Variables</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">5.4 Hash Functions</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
