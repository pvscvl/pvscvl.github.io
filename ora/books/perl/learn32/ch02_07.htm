<html><head>
<title>[Chapter 2] 2.7 &lt;STDIN&gt; as a Scalar Value</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:32:23Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch02_01.htm" title="2. Scalar Data"><link rel="prev" href="ch02_06.htm#ch02-pgfId-768739" title="2.6 Scalar Operators and Functions"><link rel="next" href="ch02_08.htm" title="2.8 Output with print"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map name="srchmap"index.html><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_06.htm#ch02-pgfId-768739" title="2.6 Scalar Operators and Functions"><img src="../gifs/txtpreva.gif" alt="Previous: 2.6 Scalar Operators and Functions" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch02_01.htm" title="2. Scalar Data">Chapter 2<br>Scalar Data</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch02_08.htm" title="2.8 Output with print"><img src="../gifs/txtnexta.gif" alt="Next: 2.8 Output with print" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch02-16349">2.7 &lt;STDIN&gt; as a Scalar Value</A
></H2
><p class="para"><a class="indexterm" name="ch02-idx-768635-0"></A
>At this point, if you're a typical code hacker, you're probably wondering how to get a value into a Perl program. Here's the simplest way. Each time you use <code class="literal">&lt;STDIN&gt;</CODE
> in a place where a scalar value is expected, Perl reads the next complete text line from <a class="indexterm" name="ch02-idx-768636-0"></A
><em class="emphasis">standard input</EM
> (up to the first newline), and uses that string as the value of <code class="literal">&lt;STDIN&gt;</CODE
>. Standard input can mean many things, but unless you do something odd, it means the command console that invoked your program. If there's nothing waiting to be read (typically the case, unless you type ahead a complete line), the Perl program will stop and wait for you to enter some characters followed by a newline (return).</P
><p class="para">The string value of <code class="literal">&lt;STDIN&gt;</CODE
> typically has a <a class="indexterm" name="ch02-idx-768637-0"></A
>newline on the end of it. Most often, you'll want to get rid of that newline right away (there's a big difference between <code class="literal">hello</CODE
> and <code class="literal">hello\n</CODE
>). It is at this point that our friend, the <code class="literal">chomp()</CODE
> function, comes to the rescue. A typical input sequence goes something like this:</P
><pre class="programlisting">$a = &lt;STDIN&gt;; # get the text
<a class="indexterm" name="ch02-idx-1583-0"></A
>chomp($a);    # get rid of that pesky newline</PRE
><p class="para">A common abbreviation for these two lines is:</P
><pre class="programlisting">chomp($a = &lt;STDIN&gt;);</PRE
><p class="para">The assignment inside the parentheses continues to refer to <code class="literal">$a</CODE
>, even after it has been given a value with <code class="literal">&lt;STDIN&gt;</CODE
>. Thus, the <code class="literal">chomp()</CODE
> function is working on <code class="literal">$a</CODE
>. (This is true in general about the assignment operator&nbsp;- an assignment expression can be used wherever a variable is needed, and the actions refer to the variable on the left side of the equal sign.)</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_06.htm#ch02-pgfId-768739" title="2.6 Scalar Operators and Functions"><img src="../gifs/txtpreva.gif" alt="Previous: 2.6 Scalar Operators and Functions" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch02_08.htm" title="2.8 Output with print"><img src="../gifs/txtnexta.gif" alt="Next: 2.8 Output with print" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">2.6 Scalar Operators and Functions</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">2.8 Output with print</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
