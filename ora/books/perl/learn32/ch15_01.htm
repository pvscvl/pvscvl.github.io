<html><head>
<title>[Chapter 15] Other Data Transformation</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:35:53Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="index.htm" title="Learning Perl on Win32 Systems"><link rel="prev" href="ch14_06.htm" title="14.6 Exercises"><link rel="next" href="ch15_02.htm" title="15.2 Extracting and Replacing a Substring"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map name="sindex.htmlrchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch14_06.htm" title="14.6 Exercises"><img src="../gifs/txtpreva.gif" alt="Previous: 14.6 Exercises" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 15</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch15_02.htm" title="15.2 Extracting and Replacing a Substring"><img src="../gifs/txtnexta.gif" alt="Next: 15.2 Extracting and Replacing a Substring" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="chapter"><h1 class="chapter"><a class="title" name="ch15-18216">15. Other Data Transformation</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="sect1" href="#ch15-26471" title="15.1 Finding a Substring">Finding a Substring</A
><br><a class="sect1" href="ch15_02.htm" title="15.2 Extracting and Replacing a Substring">Extracting and Replacing a Substring</A
><br><a class="sect1" href="ch15_03.htm" title="15.3 Formatting Data with sprintf( )">Formatting Data with sprintf( )</A
><br><a class="sect1" href="ch15_04.htm" title="15.4 Advanced Sorting">Advanced Sorting</A
><br><a class="sect1" href="ch15_05.htm" title="15.5 Transliteration">Transliteration</A
><br><a class="sect1" href="ch15_06.htm" title="15.6 Exercises">Exercises</A
></P
><p></P
></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch15-26471">15.1 Finding a Substring</A
></H2
><p class="para"><a class="indexterm" name="ch15-idx-403319-0"></A
><a class="indexterm" name="ch15-idx-403319-1"></A
>Finding a substring depends on where you have lost it. If you happen to have lost it within a bigger string, you're in luck, because <a class="indexterm" name="ch15-idx-403320-0"></A
><code class="literal">index</CODE
> can help you out. Here's how <code class="literal">index</CODE
> looks:</P
><pre class="programlisting">$x = index(<code class="replaceable"><i>$string</I
></CODE
>,<code class="replaceable"><i>$substring</I
></CODE
>);</PRE
><p class="para">Perl locates the first occurrence of <code class="replaceable"><i>substring</I
></CODE
> within <code class="replaceable"><i>string</I
></CODE
>, returning an integer location of the first character. The index value returned is zero-based; if the <code class="replaceable"><i>substring</I
></CODE
> is found at the beginning of the <code class="replaceable"><i>string</I
></CODE
>, you get a zero. If it's one character later, you get a one, and so on. If the <code class="replaceable"><i>substring</I
></CODE
> can't be found in <code class="replaceable"><i>string</I
></CODE
>, you get negative one.</P
><p class="para">Take a look at these:</P
><pre class="programlisting">$where   = index(&quot;hello&quot;,&quot;e&quot;);                 # $where gets 1
$person  = &quot;barney&quot;;
$where   = index(&quot;fred barney&quot;,$person);       # $where gets 5
@rockers = (&quot;fred&quot;,&quot;barney&quot;);
$where   = index(join(&quot; &quot;,@rockers),$person);  # same thing</PRE
><p class="para">Notice that both the string being searched and the string being searched for can each be a literal string, a scalar variable containing a string, or even an expression that has a string value. Here are some more examples:</P
><pre class="programlisting">$which = index(&quot;a very long string&quot;,&quot;long&quot;); # $which gets 7
$which = index(&quot;a very long string&quot;,&quot;lame&quot;); # $which gets -1</PRE
><p class="para">If the string contains the substring at more than one location, the <code class="literal">index</CODE
> function returns the leftmost location. To find later locations, you can give <code class="literal">index</CODE
> a third parameter. This parameter is the minimum value that will be returned by <code class="literal">index</CODE
>, allowing you to look for the next occurrence of the substring that follows a selected position. This <code class="literal">index</CODE
> looks like this:</P
><pre class="programlisting">$x = index(<code class="replaceable"><i>$bigstring</I
></CODE
>,<code class="replaceable"><i>$littlestring</I
></CODE
>,<code class="replaceable"><i>$skip</I
></CODE
>);</PRE
><p class="para">Here are some examples of how this third parameter works:</P
><pre class="programlisting">$where = index(&quot;hello world&quot;,&quot;l&quot;);   # returns 2 (first l)
$where = index(&quot;hello world&quot;,&quot;l&quot;,0); # same thing
$where = index(&quot;hello world&quot;,&quot;l&quot;,1); # still same
$where = index(&quot;hello world&quot;,&quot;l&quot;,3); # now returns 3
# (3 is the first place greater than or equal to 3)
$where = index(&quot;hello world&quot;,&quot;o&quot;,5); # returns 7 (second o)
$where = index(&quot;hello world&quot;,&quot;o&quot;,8); # returns -1 (none after 8)</PRE
><p class="para">Going the other way, you can <a class="indexterm" name="ch15-idx-403323-0"></A
>scan from the right to get the rightmost occurrence using <a class="indexterm" name="ch15-idx-403322-0"></A
><a class="indexterm" name="ch15-idx-403322-1"></A
><a class="indexterm" name="ch15-idx-403322-2"></A
><code class="literal">rindex</CODE
>. The return value is still the number of characters between the left end of the string and the start of the substring, as before, but you'll get the rightmost occurrence instead of the leftmost occurrence if there are more than one. The <code class="literal">rindex</CODE
> function also takes a third parameter like <code class="literal">index</CODE
> does, so that you can get an occurrence that is less than or equal to a selected position. Here are some examples of what you get:</P
><pre class="programlisting">$w = rindex(&quot;hello world&quot;,&quot;he&quot;);  # $w gets 0
$w = rindex(&quot;hello world&quot;,&quot;l&quot;);   # $w gets 9 (rightmost l)
$w = rindex(&quot;hello world&quot;,&quot;o&quot;);   # $w gets 7
$w = rindex(&quot;hello world&quot;,&quot;o &quot;);  # now $w gets 4
$w = rindex(&quot;hello world&quot;,&quot;xx&quot;);  # $w gets -1 (not found)
$w = rindex(&quot;hello world&quot;,&quot;o&quot;,6); # $w gets 4 (first before 6)
$w = rindex(&quot;hello world&quot;,&quot;o&quot;,3); # $w gets -1 (not found before 3)</PRE
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch14_06.htm" title="14.6 Exercises"><img src="../gifs/txtpreva.gif" alt="Previous: 14.6 Exercises" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch15_02.htm" title="15.2 Extracting and Replacing a Substring"><img src="../gifs/txtnexta.gif" alt="Next: 15.2 Extracting and Replacing a Substring" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">14.6 Exercises</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">15.2 Extracting and Replacing a Substring</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
