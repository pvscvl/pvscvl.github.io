<html><head>
<title>[Chapter 4] 4.6 The foreach Statement</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:33:11Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch04_01.htm" title="4. Control Structures"><link rel="prev" href="ch04_05.htm" title="4.5 The for Statement"><link rel="next" href="ch04_07.htm" title="4.7 Exercises"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch04_05.htm" title="4.5 The for Statement"><img src="../gifs/txtpreva.gif" alt="Previous: 4.5 The for Statement" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch04_01.htm" title="4. Control Structures">Chapter 4<br>Control Structures</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch04_07.htm" title="4.7 Exercises"><img src="../gifs/txtnexta.gif" alt="Next: 4.7 Exercises" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch04-29786">4.6 The foreach Statement</A
></H2
><p class="para">Yet another iteration construct is the <a class="indexterm" name="ch04-idx-437544-0"></A
><code class="literal">foreach</CODE
> statement. This statement takes a list of values and assigns them one at a time to a scalar variable, executing a block of code with each successive assignment. It looks like this:</P
><pre class="programlisting">foreach <code class="replaceable"><i>$i</I
></CODE
> (<code class="replaceable"><i>@some_list</I
></CODE
>) {
        <code class="replaceable"><i>statement_1</I
></CODE
>;
        <code class="replaceable"><i>statement_2</I
></CODE
>;
        <code class="replaceable"><i>statement_3</I
></CODE
>;
}</PRE
><p class="para">The original value of the scalar variable is automatically restored when the loop exits; another way to say this is that the <a class="indexterm" name="ch04-idx-437545-0"></A
>scalar variable is <em class="emphasis">local</EM
> to the loop.</P
><p class="para">Here's an example of a <code class="literal">foreach</CODE
>:</P
><pre class="programlisting">@a = (1,2,3,4,5);
foreach $b (reverse @a) {
        print $b;
}</PRE
><p class="para">This program snippet prints <code class="literal">54321</CODE
>. Note that the list used by the <code class="literal">foreach</CODE
> can be an arbitrary <a class="indexterm" name="ch04-idx-437547-0"></A
>list expression, not just an <a class="indexterm" name="ch04-idx-437546-0"></A
>array variable. (This flexibility is typical of all Perl constructs that require a list.)</P
><p class="para">You can omit the name of the scalar variable, in which case Perl pretends you have specified the <a class="indexterm" name="ch04-idx-437548-0"></A
><code class="literal">$_</CODE
> variable name instead. You'll find that the <code class="literal">$_</CODE
> variable is used as a default for many of Perl's operations, so you can think of it as a scratch area.[<a class="footnote" href="#ch04-pgfId-621">4</A
>] (All operations that use <code class="literal">$_</CODE
> by default can also use a normal scalar variable as well.) For example, the <a class="indexterm" name="ch04-idx-437549-0"></A
><code class="literal">print</CODE
> function prints the value of <code class="literal">$_</CODE
> if no other value is specified, so the following example works like the previous one:</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch04-pgfId-621">[4]</A
> Which means you'd better localize it in functions when we learn about them.</P
></DIV
></BLOCKQUOTE
><pre class="programlisting">@a = (1,2,3,4,5);
foreach (reverse @a) {
        print;
}</PRE
><p class="para">See how using the implied <code class="literal">$_</CODE
> variable makes it easier? After you've learned more functions and operators that default to <code class="literal">$_</CODE
>, this construct will become even more useful. This is one case where the shorter construct is more legible than the longer one. </P
><p class="para">If the list you are iterating over is made of real variables rather than some function returning a list value, then the variable being used for iteration is in fact an alias for each variable in the list instead of being merely a copy of the values. Consequently, if you change the scalar variable, you are also changing that particular element in the list that the variable is standing in for. For example:</P
><pre class="programlisting">@a = (3,5,7,9);
foreach $one (@a) {
        $one *= 3;
    $x = 17;
    @a = (3,5,7,9);
    @b = (10,20,30);
    foreach $one (@a, @b, $x) {
    $one *= 3;
    }
    # $x is now 51
    # @a is now (9,15,21,27)
    # @b is now (30,60,90);
}
# @a is now (9,15,21,27)</PRE
><p class="para">Notice how altering <code class="literal">$one</CODE
> in fact altered each element of <code class="literal">@a</CODE
>.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch04_05.htm" title="4.5 The for Statement"><img src="../gifs/txtpreva.gif" alt="Previous: 4.5 The for Statement" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch04_07.htm" title="4.7 Exercises"><img src="../gifs/txtnexta.gif" alt="Next: 4.7 Exercises" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">4.5 The for Statement</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">4.7 Exercises</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
