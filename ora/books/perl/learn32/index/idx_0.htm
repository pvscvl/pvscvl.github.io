<html>
<head>
<title>Index</TITLE>
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">
<p><a href="../index.htm"><img src="../gifs/smbanns.gif" alt="Book Home" border=0></A>

<p><font size="-1"><a href="../../search/wsrch.htm">Search</A> |
Symbols
| <a href="idx_a.htm">A</A>
| <a href="idx_b.htm">B</A>
| <a href="idx_c.htm">C</A>
| <a href="idx_d.htm">D</A>
| <a href="idx_e.htm">E</A>
| <a href="idx_f.htm">F</A>
| <a href="idx_g.htm">G</A>
| <a href="idx_h.htm">H</A>
| <a href="idx_i.htm">I</A>
| <a href="idx_j.htm">J</A>
| <a href="idx_k.htm">K</A>
| <a href="idx_l.htm">L</A>
| <a href="idx_m.htm">M</A>
| <a href="idx_n.htm">N</A>
| <a href="idx_o.htm">O</A>
| <a href="idx_p.htm">P</A>
| <a href="idx_q.htm">Q</A>
| <a href="idx_r.htm">R</A>
| <a href="idx_s.htm">S</A>
| <a href="idx_t.htm">T</A>
| <a href="idx_u.htm">U</A>
| <a href="idx_v.htm">V</A>
| <a href="idx_w.htm">W</A>
| <a href="idx_x.htm">X</A>
| <a href="idx_z.htm">Z</A></FONT>

<h1>Index: Symbols and Numbers</H1>

<dl>
<dt><a name=".5c.31-and-.24.31-variables">\1 and $1 variables</A>
<dd><dl>
  <dt><a href="../ch07_03.htm#ch07-pgfId-307940">7.3.2.3. Parentheses as memory</A>
  <dt><a href="../ch07_04.htm#ch07-pgfId-765">7.4.5. Special Read-Only Variables</A>
</DL>
<dt><a name=".38.2e.33-filename-format">8.3 filename format</A>
: <a href="../ch10_03.htm">10.3. Using Pathnames and Filenames</A>
<dt><a name=".26.26-operator-as-control-structure">&amp;&amp; operator as control structure</A>
: <a href="../ch09_06.htm">9.6. &amp;&amp;, ||, and ?: as Control Structures</A>
<dt><a name=".2a.2a.3d-operator">**= operator</A>
: <a href="../ch02_06.htm#ch02-pgfId-768739">2.6.1. Binary Assignment Operators</A>
<dt><a name=".2a">* (asterisk)</A>
<dd><dl>
  <dt>** (exponentiation) operator
: <a href="../ch02_04.htm#ch02-15504">2.4.1. Operators for Numbers</A>
  <dt>as prefix
: <a href="../appd_07.htm">D.7. Symbol Table Manipulation With *FRED</A>
  <dt>in pack format string
: <a href="../ch16_02.htm">16.2. Packing and Unpacking Binary Data</A>
  <dt>in regular expressions
: <a href="../ch07_03.htm#ch07-pgfId-307940">7.3.2.2. Multipliers</A>
</DL>
<dt><a name=".40">@ (at sign)</A>
<dd><dl>
  <dt>@_ array
  <dd><dl>
    <dt><a href="../ch01_06.htm#ch01-pgfId-869121">1.6.9. Making It a Bit More Modular</A>
    <dt><a href="../ch08_04.htm">8.4. Arguments</A>
  </DL>
  <dt>as array name prefix
: <a href="../ch01_06.htm#ch01-pgfId-869121">1.6.5. More than One Secret Word</A>
  <dt>as format field delimiter
: <a href="../ch11_04.htm#ch11-pgfId-948499">11.4.1. Text Fields</A>
  <dt>as prefix for array variables
: <a href="../ch03_03.htm">3.3. Variables</A>
</DL>
<dt><a name="at-sign">at sign</A>
<dd><dl>
  <dt>@*, in formats
: <a href="../ch11_04.htm#ch11-pgfId-948499">11.4.3. Multiline Fields</A>
</DL>
<dt><a name=".60">` (backquotes) as command invocation</A>
: <a href="../ch14_02.htm">14.2. Using Backquotes</A>
<dt><a name=".5c">\ (backslash)</A>
: <a href="../ch10_03.htm">10.3. Using Pathnames and Filenames</A>
<dd><dl>
  <dt>escape character
: <a href="../ch02_03.htm#ch02-pgfId-768730">2.3.1. Single-Quoted Strings</A>
  <dt>escapes
: <a href="../ch02_03.htm#ch02-pgfId-768730">2.3.2. Double-Quoted Strings</A>
  <dt>in regular expressions
: <a href="../ch07_03.htm#ch07-pgfId-307940">7.3.1. Single-Character Patterns</A>
</DL>
<dt><a name=".21">! (bang)</A>
<dd><dl>
  <dt>!= operator
: <a href="../ch02_04.htm#ch02-15504">2.4.2. Operators for Strings</A>
  <dt>logical not operator
: <a href="../ch01_06.htm#ch01-pgfId-869121">1.6.9. Making It a Bit More Modular</A>
</DL>
<dt><a name=".5b">[ (left bracket) in double-quoted strings</A>
: <a href="../ch03_07.htm">3.7. Variable Interpolation of Arrays</A>
<dt><a name=".5e">^ (caret)</A>
<dd><dl>
  <dt>as anchor in regular expressions
: <a href="../ch07_03.htm#ch07-pgfId-307940">7.3.3. Anchoring Patterns</A>
  <dt>as filled-field in formats
: <a href="../ch11_04.htm#ch11-pgfId-948499">11.4.4. Filled Fields</A>
</DL>
<dt><a name=".3a">: (colon)</A>
<dd><dl>
  <dt>label suffix
: <a href="../ch09_04.htm">9.4. Labeled Blocks</A>
  <dt>matching with split( )
: <a href="../ch07_06.htm#ch07-pgfId-308058">7.6.1. The split Function</A>
</DL>
<dt><a name=".2c">, (comma)</A>
<dd><dl>
  <dt>array literal character
: <a href="../ch03_02.htm">3.2. Literal Representation</A>
  <dt>operator
: <a href="../appd_04.htm">D.4. Other Operators</A>
</DL>
<dt><a name=".7b.7d">{} (curly braces)</A>
<dd><dl>
  <dt>in double-quoted strings
: <a href="../ch02_06.htm#ch02-pgfId-768739">2.6.4. Interpolation of Scalars into Strings</A>
  <dt>in regular expressions
: <a href="../ch07_03.htm#ch07-pgfId-307940">7.3.2.2. Multipliers</A>
  <dt>required in if statements
: <a href="../ch04_02.htm">4.2. The if/unless Statement</A>
</DL>
<dt><a name=".24">$ (dollar sign)</A>
<dd><dl>
  <dt>$1 as regular expression memory access
: <a href="../ch07_04.htm#ch07-pgfId-765">7.4.5. Special Read-Only Variables</A>
  <dt>$&amp; (match string)
: <a href="../ch07_04.htm#ch07-pgfId-765">7.4.5. Special Read-Only Variables</A>
  <dt>$` (before-match string)
: <a href="../ch07_04.htm#ch07-pgfId-765">7.4.5. Special Read-Only Variables</A>
  <dt>$^ variable
: <a href="../ch11_06.htm#ch11-pgfId-948465">11.6.3. Changing the Top-of-Page Format Name</A>
  <dt>$^I variable
: <a href="../ch17_05.htm">17.5. Variable-Length ( Text) Databases</A>
  <dt>$^T variable
: <a href="../ch10_06.htm">10.6. The -x File Tests</A>
  <dt>$: variable
: <a href="../ch11_04.htm#ch11-pgfId-948499">11.4.4. Filled Fields</A>
  <dt>$= variable
: <a href="../ch11_06.htm#ch11-pgfId-948465">11.6.5. Changing the Position on the Page</A>
  <dt>$- variable
: <a href="../ch11_06.htm#ch11-pgfId-948465">11.6.5. Changing the Position on the Page</A>
  <dt>$% (special variable), example of
: <a href="../ch01_06.htm#ch01-pgfId-869121">1.6.14. Listing the Secret Words</A>
  <dt>$#fred (index of last element of @fred)
: <a href="../ch03_04.htm#ch03-pgfId-685561">3.4.2. Array Element Access</A>
  <dt>$' (after-match string)
: <a href="../ch07_04.htm#ch07-pgfId-765">7.4.5. Special Read-Only Variables</A>
  <dt>$/ variable
: <a href="../ch06_01.htm">6.1. Input from STDIN</A>
  <dt>$~ variable
: <a href="../ch11_06.htm#ch11-pgfId-948465">11.6.2. Changing the Format Name</A>
  <dt>$_ variable
  <dd><dl>
    <dt>default for file tests
: <a href="../ch10_06.htm">10.6. The -x File Tests</A>
    <dt>default for stat( ), lstat( )
: <a href="../ch10_07.htm">10.7. The stat Function</A>
    <dt>foreach statement and
: <a href="../ch04_06.htm">4.6. The foreach Statement</A>
    <dt>implicit assignment to when reading
: <a href="../ch06_01.htm">6.1. Input from STDIN</A>
    <dt>regular expression matching default
: <a href="../ch07_02.htm">7.2. Simple Uses of Regular Expressions</A>
    <dt>selecting other than with =~ operator
: <a href="../ch07_04.htm#ch07-pgfId-765">7.4.1. Selecting a Different Target (the =~ Operator)</A>
    <dt>split( ) default
: <a href="../ch07_06.htm#ch07-pgfId-308058">7.6.1. The split Function</A>
    <dt>tr( ) default target
: <a href="../ch15_05.htm">15.5. Transliteration</A>
    <dt>unlink( ) default
: <a href="../ch13_01.htm">13.1. Removing a File</A>
  </DL>
  <dt>$a variable, as special in sort comparison routine
: <a href="../ch15_04.htm">15.4. Advanced Sorting</A>
  <dt>$b variable, as special in sort comparison routine
: <a href="../ch15_04.htm">15.4. Advanced Sorting</A>
  <dt>$_[0], distinct from $_
: <a href="../ch08_04.htm">8.4. Arguments</A>
  <dt>removing significance in strings
: <a href="../ch02_06.htm#ch02-pgfId-768739">2.6.4. Interpolation of Scalars into Strings</A>
  <dt>scalar variable prefix
: <a href="../ch02_05.htm">2.5. Scalar Variables</A>
</DL>
<dt><a name=".2e">. (dot)</A>
<dd><dl>
  <dt>.. list construction operator
: <a href="../ch03_02.htm">3.2. Literal Representation</A>
  <dt>.= operator
: <a href="../ch02_06.htm#ch02-pgfId-768739">2.6.1. Binary Assignment Operators</A>
  <dt>in regular expressions
: <a href="../ch07_03.htm#ch07-pgfId-307940">7.3.1. Single-Character Patterns</A>
</DL>
<dt><a name=".3d">= (equal sign)</A>
<dd><dl>
  <dt>== operator
: <a href="../ch02_04.htm#ch02-15504">2.4.2. Operators for Strings</A>
  <dt>=&gt; operator (CGI)
: <a href="../ch18_04.htm">18.4.5. Fancier Calling Sequences</A>
  <dt>=~ operator
: <a href="../ch07_04.htm#ch07-pgfId-765">7.4.1. Selecting a Different Target (the =~ Operator)</A>
  <dd><dl>
    <dt>substitution and
: <a href="../ch07_05.htm">7.5. Substitutions</A>
  </DL>
  <dt>array assignment operator
: <a href="../ch03_04.htm#ch03-pgfId-685561">3.4.1. Assignment</A>
  <dt>assignment operator
: <a href="../ch02_06.htm#ch02-pgfId-768739">2.6. Scalar Operators and Functions</A>
</DL>
<dt><a name=".3d.7e-operator">=~ operator</A>
<dd><dl>
  <dt>example of
: <a href="../ch01_06.htm#ch01-pgfId-869121">1.6.8. Making It Fair for the Rest</A>
  <dt>tr( ) and
: <a href="../ch15_05.htm">15.5. Transliteration</A>
</DL>
<dt><a name=".3e">&gt; (greater than)</A>
<dd><dl>
  <dt>&gt;= (greater than or equal to) operator
: <a href="../ch02_04.htm#ch02-15504">2.4.2. Operators for Strings</A>
  <dt>greater than operator
: <a href="../ch02_04.htm#ch02-15504">2.4.2. Operators for Strings</A>
</DL>
<dt><a name=".2d">- (hyphen)</A>
<dd><dl>
  <dt>-= operator
: <a href="../ch11_04.htm#ch11-pgfId-948499">11.4.2. Numeric Fields</A>
  <dt>-- operator
: <a href="../ch02_06.htm#ch02-pgfId-768739">2.6.2. Autoincrement and Autodecrement</A>
  <dt>in regular expression ranges
: <a href="../ch07_03.htm#ch07-pgfId-307940">7.3.1. Single-Character Patterns</A>
</DL>
<dt><a name=".3c">&lt; (less than)</A>
<dd><dl>
  <dt>&lt;=&gt;
: (see <a href="idx_s.htm">spaceship (<=>) operator</A>)
  <dt>&lt;&gt;
: (see <a href="idx_d.htm">diamond operator</A>)
  <dt>&lt;= (less than or equal to) operator
: <a href="../ch02_04.htm#ch02-15504">2.4.2. Operators for Strings</A>
  <dt>format field character
: <a href="../ch11_04.htm#ch11-pgfId-948499">11.4.1. Text Fields</A>
  <dt>less than operator
: <a href="../ch02_04.htm#ch02-15504">2.4.2. Operators for Strings</A>
</DL>
<dt><a name=".28.a0.29">( ) (parentheses)</A>
<dd><dl>
  <dt>array literals and
: <a href="../ch03_02.htm">3.2. Literal Representation</A>
  <dt>as memory in regular expressions
: <a href="../ch07_03.htm#ch07-pgfId-307940">7.3.4. Precedence</A>
  <dt>chdir( ) and
: <a href="../ch12_01.htm">12.1. Moving Around the Directory Tree</A>
  <dt>forcing array context with
: <a href="../ch03_04.htm#ch03-pgfId-685561">3.4.1. Assignment</A>
  <dt>keys( ) and
: <a href="../ch05_04.htm#ch05-pgfId-188700">5.4.1. The keys Function</A>
  <dt>memory in regular expressions
: <a href="../ch07_03.htm#ch07-pgfId-307940">7.3.2.3. Parentheses as memory</A>
  <dt>print( ) and
: <a href="../ch06_03.htm#ch06-pgfId-560917">6.3.1. Using print for Normal Output</A>
  <dt>in regular expressions
: <a href="../ch07_03.htm#ch07-pgfId-307940">7.3.4. Precedence</A>
  <dt>values( ) and
: <a href="../ch05_04.htm#ch05-pgfId-188700">5.4.2. The values Function</A>
</DL>
<dt><a name=".25">% (percent sign)</A>
<dd><dl>
  <dt>associative array prefix
  <dd><dl>
    <dt><a href="../ch01_06.htm#ch01-pgfId-869121">1.6.6. Giving Each Person a Different Secret Word</A>
    <dt><a href="../ch05_02.htm">5.2. Hash Variables</A>
  </DL>
  <dt>modulus operator
: <a href="../ch02_04.htm#ch02-15504">2.4.1. Operators for Numbers</A>
</DL>
<dt><a name=".2b">+ (plus sign)</A>
<dd><dl>
  <dt>+= operator
  <dd><dl>
    <dt><a href="../appa_03.htm">A.3. Chapter 4, Control Structures</A>
    <dt><a href="../ch02_06.htm#ch02-pgfId-768739">2.6.1. Binary Assignment Operators</A>
  </DL>
  <dt>++ operator
  <dd><dl>
    <dt><a href="../ch02_06.htm#ch02-pgfId-768739">2.6.2. Autoincrement and Autodecrement</A>
    <dt><a href="../ch14_01.htm">14.1. Using system and exec</A>
  </DL>
  <dt>open( ) and
: <a href="../ch17_04.htm">17.4. Fixed-Length Random-Access Databases</A>
  <dt>in regular expressions
: <a href="../ch07_03.htm#ch07-pgfId-307940">7.3.2.2. Multipliers</A>
</DL>
<dt><a name=".23"># (pound sign)</A>
<dd><dl>
  <dt>comment character
: <a href="../ch01_05.htm">1.5. Basic Concepts</A>
  <dt>format field characters
: <a href="../ch11_04.htm#ch11-pgfId-948499">11.4.2. Numeric Fields</A>
</DL>
<dt><a name=".3f">? (question mark) in regular expressions</A>
: <a href="../ch07_03.htm#ch07-pgfId-307940">7.3.2.2. Multipliers</A>
<dt><a name=".3f.3a-operator">?: operator, as control structure</A>
: <a href="../ch09_06.htm">9.6. &amp;&amp;, ||, and ?: as Control Structures</A>
<dt><a name=".23.21.2fusr.2fbin.2fperl-line">#!/usr/bin/perl line</A>
: <a href="../ch01_05.htm">1.5. Basic Concepts</A>
<dt><a name=".2f">/ (slash)</A>
<dd><dl>
  <dt>changing regular expressions
: <a href="../ch07_04.htm#ch07-pgfId-765">7.4.3. Using a Different Delimiter</A>
  <dt>choosing alternate to, in substitution
: <a href="../ch07_05.htm">7.5. Substitutions</A>
  <dt>regular expression delimiter
: <a href="../ch07_02.htm">7.2. Simple Uses of Regular Expressions</A>
</DL>
<dt><a name=".7e">~ (tilde) in formats</A>
: <a href="../ch11_04.htm#ch11-pgfId-948499">11.4.4. Filled Fields</A>
<dt><a name=".7c">| (vertical bar), open( ) and</A>
<dd><dl>
  <dt><a href="../ch01_06.htm#ch01-pgfId-869121">1.6.12. Warning Someone When Things Go Astray</A>
  <dt><a href="../ch14_03.htm">14.3. Using Processes as Filehandles</A>
</DL>
<dt><a name=".7c">| (vertical bar)</A>
<dd><dl>
  <dt>format field characters
: <a href="../ch11_04.htm#ch11-pgfId-948499">11.4.1. Text Fields</A>
  <dt>in regular expressions
: <a href="../ch07_03.htm#ch07-pgfId-307940">7.3.2.4. Alternation</A>
</DL>
<dt><a name=".7c.7c">|| (logical-or) operator</A>
<dd><dl>
  <dt>as control structure
: <a href="../ch09_06.htm">9.6. &amp;&amp;, ||, and ?: as Control Structures</A>
  <dt>die( ) and
: <a href="../ch10_04.htm">10.4. A Slight Diversion: die</A>
  <dt>example of
  <dd><dl>
    <dt><a href="../appa_07.htm">A.7. Chapter 8, Functions</A>
    <dt><a href="../ch15_04.htm">15.4. Advanced Sorting</A>
  </DL>
  <dt>introduced
: <a href="../ch01_06.htm#ch01-pgfId-869121">1.6.9. Making It a Bit More Modular</A>
</DL>
</DL>

<p>
<hr width="515" align="LEFT">

<p><font size="-1"><a href="../../search/wsrch.htm">Search</A> |
Symbols
| <a href="idx_a.htm">A</A>
| <a href="idx_b.htm">B</A>
| <a href="idx_c.htm">C</A>
| <a href="idx_d.htm">D</A>
| <a href="idx_e.htm">E</A>
| <a href="idx_f.htm">F</A>
| <a href="idx_g.htm">G</A>
| <a href="idx_h.htm">H</A>
| <a href="idx_i.htm">I</A>
| <a href="idx_j.htm">J</A>
| <a href="idx_k.htm">K</A>
| <a href="idx_l.htm">L</A>
| <a href="idx_m.htm">M</A>
| <a href="idx_n.htm">N</A>
| <a href="idx_o.htm">O</A>
| <a href="idx_p.htm">P</A>
| <a href="idx_q.htm">Q</A>
| <a href="idx_r.htm">R</A>
| <a href="idx_s.htm">S</A>
| <a href="idx_t.htm">T</A>
| <a href="idx_u.htm">U</A>
| <a href="idx_v.htm">V</A>
| <a href="idx_w.htm">W</A>
| <a href="idx_x.htm">X</A>
| <a href="idx_z.htm">Z</A></FONT>

<p><a href="../../copyrght.htm">Copyright</A> &copy; 1999
 <a href="../../../../../../../../www.oreilly.com/">O'Reilly &amp; Associates, Inc.</A>
All Rights Reserved.
<p class="nav"><font size="-1">[ <a href="../../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
>
</BODY>
</HTML>
