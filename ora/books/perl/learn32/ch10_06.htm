<html><head>
<title>[Chapter 10] 10.6 The -x File Tests</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:34:33Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch10_01.htm" title="10. Filehandles and File Tests"><link rel="prev" href="ch10_05.htm" title="10.5 Using Filehandles"><link rel="next" href="ch10_07.htm" title="10.7 The stat Function"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch10_05.htm" title="10.5 Using Filehandles"><img src="../gifs/txtpreva.gif" alt="Previous: 10.5 Using Filehandles" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch10_01.htm" title="10. Filehandles and File Tests">Chapter 10<br>Filehandles and File Tests</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch10_07.htm" title="10.7 The stat Function"><img src="../gifs/txtnexta.gif" alt="Next: 10.7 The stat Function" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch10-19653">10.6 The -x File Tests</A
></H2
><p class="para">Now you know how to open a filehandle for output, overwriting any existing file with the same name. Suppose you wanted to make sure that there wasn't a file by that name (to keep you from accidentally blowing away your spreadsheet data or that important birthday calendar). <a class="indexterm" name="ch10-idx-778373-0"></A
>Perl uses <a class="indexterm" name="ch10-idx-778374-0"></A
><code class="literal">-e </CODE
><code class="replaceable"><i>$filevar</I
></CODE
> to test for the existence of the file named by the scalar value in <code class="replaceable"><i>$filevar</I
></CODE
>. If this file exists, the result is true; otherwise it is false. For example:</P
><pre class="programlisting">$name = &quot;index.html&quot;;
if (-e $name) {
    print &quot;I see you already have a file named $name\n&quot;;
} else {
    print &quot;Perhaps you'd like to make a file called $name\n&quot;;
} </PRE
><p class="para">The operand of the <code class="literal">-e</CODE
> operator is really just any scalar expression that evaluates to some string, including a string literal. Here's an example that checks to see whether both <em class="emphasis">index.html</EM
> and <em class="emphasis">index.cgi</EM
> exist in the current directory:</P
><pre class="programlisting">if (-e &quot;index.html&quot; &amp;&amp; -e &quot;index.cgi&quot;) {
    print &quot;You have both styles of index files here.\n&quot;;
}</PRE
><p class="para">Other operators are defined as well. For example, <a class="indexterm" name="ch10-idx-367891-0"></A
><code class="literal">-r</CODE
> <code class="replaceable"><i>$filevar</I
></CODE
> returns true if the file named in <code class="replaceable"><i>$filevar</I
></CODE
> exists and is readable. Similarly, <code class="literal">-w </CODE
><a class="indexterm" name="ch10-idx-367892-0"></A
><code class="replaceable"><i>$filevar</I
></CODE
> tests whether it is writable. Here's an example that tests a user-specified filename for both readability and writability:</P
><pre class="programlisting">print &quot;where? &quot;;
$filename = &lt;STDIN&gt;;
chomp $filename; # toss pesky newline
if (-r $filename &amp;&amp; -w $filename) {
        # file exists, and I can read and write it
        ...
}</PRE
><p class="para">Many more file tests are available, some of which are not applicable to Perl for Win32. <a class="xref" href="#ch10-37548" title="File Tests and Their Meanings">Table 10.1</A
> lists some file tests and their meanings; for the whole list, see the <em class="emphasis">perlfunc</EM
> documentation.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="ch10-37548">Table 10.1: File Tests and Their Meanings</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">File Test</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Meaning</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-368315-0"></A
>-r</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">File or directory is readable</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-368320-0"></A
>-w</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">File or directory is writable</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-368355-0"></A
>-e</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">File or directory exists</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-778842-0"></A
>-x</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">File is executable</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-368360-0"></A
>-z</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">File exists and has zero size (directories are never empty)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-368365-0"></A
>-s</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">File or directory exists and has nonzero size (the value is the size in bytes)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-368371-0"></A
>-f</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Entry is a plain file</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-368376-0"></A
>-d</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Entry is a directory</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-368421-0"></A
>-t</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">isatty</CODE
> on the filehandle is true (that is, the filehandle is a character device)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-368426-0"></A
>-T</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">File is text</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-368431-0"></A
>-B</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">File is binary</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-368436-0"></A
>-M</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Modification age in days (C lang. time_t value)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-368441-0"></A
>-A</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Access age in days (C lang. time_t value)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><a class="indexterm" name="ch10-idx-368446-0"></A
>-C</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Inode-modification age in days (C lang. time_t value)</P
></TD
></TR
></TBODY
></TABLE
><p class="para">Most of these tests return a simple true-false condition. A few don't, so let's talk about them.</P
><p class="para">The <a class="indexterm" name="ch10-idx-367920-0"></A
><code class="literal">-s</CODE
> operator does return true if the file is nonempty, but it's a particular kind of true. It's the length in bytes of the file, which evaluates as true for a nonzero number.</P
><p class="para">The age operators <a class="indexterm" name="ch10-idx-367921-0"></A
><code class="literal">-M</CODE
>, <a class="indexterm" name="ch10-idx-367922-0"></A
><code class="literal">-A</CODE
>, and <a class="indexterm" name="ch10-idx-367923-0"></A
><code class="literal">-C</CODE
> (yes, they're uppercase) return the number of days since the file was last modified, accessed, or had its information changed.[<a class="footnote" href="#ch10-pgfId-779948">8</A
>] This age value is fractional with a resolution of one second: 36 hours is returned as 1.5 days. If you compare the age with a whole number (say three), you'll get only the files that were changed exactly that many days ago, not one second more or less. This means that you'll probably want a range comparison rather than an exact comparison to get files that are between three and four days old.[<a class="footnote" href="#ch10-pgfId-780006">9</A
>]</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch10-pgfId-779948">[8]</A
> The age is measured relative to the time the program started, as captured in C-library time into the <a class="indexterm" name="ch10-idx-779947-0"></A
><code class="literal">$^T</CODE
> variable. You can get negative numbers for these ages if the queried value refers to an event that happened after the program began.</P
></DIV
><div class="footnote"><p class="para"><a class="footnote" name="ch10-pgfId-780006">[9]</A
> Or, you might want to use the <a class="indexterm" name="ch10-idx-780005-0"></A
><code class="literal">int</CODE
> function.</P
></DIV
></BLOCKQUOTE
><p class="para">These operators can operate on filehandles as well as filenames. Giving a filehandle for the operand is all it takes. So to test whether the file opened as <code class="literal">SOMEFILE</CODE
> is executable, you can use:</P
><pre class="programlisting">if (-x SOMEFILE) {
        # file open on SOMEFILE is executable
}</PRE
><p class="para">If you leave the filename or filehandle parameter off (that is, if you specify just <code class="literal">-r</CODE
> or <code class="literal">-s</CODE
>), the default operand is the file named in the <a class="indexterm" name="ch10-idx-367925-0"></A
><code class="literal">$_</CODE
> variable (there it is again!). So, to test a list of filenames to see which ones are readable, it's as simple as:</P
><pre class="programlisting">foreach (@some_list_of_filenames) {
        print &quot;$_ is readable\n&quot; if -r; # same as -r $_
}</PRE
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch10_05.htm" title="10.5 Using Filehandles"><img src="../gifs/txtpreva.gif" alt="Previous: 10.5 Using Filehandles" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch10_07.htm" title="10.7 The stat Function"><img src="../gifs/txtnexta.gif" alt="Next: 10.7 The stat Function" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">10.5 Using Filehandles</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10.7 The stat Function</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
