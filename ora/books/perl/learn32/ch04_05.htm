<html><head>
<title>[Chapter 4] 4.5 The for Statement</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:33:10Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch04_01.htm" title="4. Control Structures"><link rel="prev" href="ch04_04.htm" title="4.4 The do {} while/until Statement"><link rel="next" href="ch04_06.htm" title="4.6 The foreach Statement"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map namindex.htmle="srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch04_04.htm" title="4.4 The do {} while/until Statement"><img src="../gifs/txtpreva.gif" alt="Previous: 4.4 The do {} while/until Statement" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch04_01.htm" title="4. Control Structures">Chapter 4<br>Control Structures</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch04_06.htm" title="4.6 The foreach Statement"><img src="../gifs/txtnexta.gif" alt="Next: 4.6 The foreach Statement" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch04-30377">4.5 The for Statement</A
></H2
><p class="para">Another Perl iteration construct is the <a class="indexterm" name="ch04-idx-437542-0"></A
><code class="literal">for</CODE
> statement, which looks suspiciously like C's or Java's <code class="literal">for</CODE
> statement, and works roughly the same way. Here it is:</P
><pre class="programlisting">for ( <code class="replaceable"><i>initial_exp</I
></CODE
>; <code class="replaceable"><i>test_exp</I
></CODE
>; <code class="replaceable"><i>re-init_exp</I
></CODE
> ) {
        <code class="replaceable"><i>statement_1</I
></CODE
>;
        <code class="replaceable"><i>statement_2</I
></CODE
>;
        <code class="replaceable"><i>statement_3</I
></CODE
>;
}</PRE
><p class="para">Unraveled into forms we've seen before, this construct turns out as:</P
><pre class="programlisting"><code class="replaceable"><i>initial_exp</I
></CODE
>;
while (<code class="replaceable"><i>test_exp</I
></CODE
>) {
        <code class="replaceable"><i>statement_1</I
></CODE
>;
        <code class="replaceable"><i>statement_2</I
></CODE
>;
        <code class="replaceable"><i>statement_3</I
></CODE
>;
        <code class="replaceable"><i>re-init_exp</I
></CODE
>;
}</PRE
><p class="para">In either case, the <code class="replaceable"><i>initial_exp</I
></CODE
> expression is evaluated first. This expression typically assigns an initial value to an iterator variable, but there are no restrictions on what it can contain; in fact, it may even be empty (doing nothing). Then the <code class="replaceable"><i>test_exp</I
></CODE
> expression is evaluated for truth or falsehood. If the value is true, the body is executed, followed by the <code class="replaceable"><i>re-init_exp</I
></CODE
> (typically, but not solely, used to increment the iterator). Perl then reevaluates the <code class="replaceable"><i>test_exp</I
></CODE
>, repeating as necessary.</P
><p class="para">This example prints the numbers 1 through 10, each followed by a space:</P
><pre class="programlisting">for ($i = 1; $i &lt;= 10; $i++) {
        print &quot;$i &quot;;
}</PRE
><p class="para">Initially, the variable <code class="literal">$i</CODE
> is set to 1. Then, this variable is compared with 10, which it is indeed less than or equal to. The body of the loop (the single <code class="literal">print</CODE
> statement) is executed, and then the re-init expression (the <a class="indexterm" name="ch04-idx-437543-0"></A
>autoincrement expression <code class="literal">$i++</CODE
>) is executed, changing the value in <code class="literal">$i</CODE
> to 2. Because this value is still less than or equal to 10, we repeat the process until the last iteration in which the value of 10 in <code class="literal">$i</CODE
> gets changed to 11. The value is then no longer less than or equal to 10, so the loop exits (with <code class="literal">$i</CODE
> having a value of 11).</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch04_04.htm" title="4.4 The do {} while/until Statement"><img src="../gifs/txtpreva.gif" alt="Previous: 4.4 The do {} while/until Statement" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch04_06.htm" title="4.6 The foreach Statement"><img src="../gifs/txtnexta.gif" alt="Next: 4.6 The foreach Statement" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">4.4 The do {} while/until Statement</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">4.6 The foreach Statement</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
