<html><head>
<title>[Chapter 10] 10.3 Using Pathnames and Filenames</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:34:25Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch10_01.htm" title="10. Filehandles and File Tests"><link rel="prev" href="ch10_02.htm" title="10.2 Opening and Closing a Filehandle"><link rel="next" href="ch10_04.htm" title="10.4 A Slight Diversion: die"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch10_02.htm" title="10.2 Opening and Closing a Filehandle"><img src="../gifs/txtpreva.gif" alt="Previous: 10.2 Opening and Closing a Filehandle" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch10_01.htm" title="10. Filehandles and File Tests">Chapter 10<br>Filehandles and File Tests</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch10_04.htm" title="10.4 A Slight Diversion: die"><img src="../gifs/txtnexta.gif" alt="Next: 10.4 A Slight Diversion: die" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch10-15715">10.3 Using Pathnames and Filenames</A
></H2
><p class="para"><a class="indexterm" name="ch10-idx-780032-0"></A
><a class="indexterm" name="ch10-idx-780032-1"></A
>When working with files and pathnames, you're faced with an interesting choice: what's the best way of specifying pathnames? Perl accepts either a slash or a backslash as a <a class="indexterm" name="ch10-idx-778832-0"></A
>path delimiter.[<a class="footnote" href="#ch10-pgfId-778849">1</A
>] The slash is typically used by UNIX systems to delimit paths while the backslash is the traditional MS-DOS path delimiter. The slash is also used as a path delimiter when specifying URLs. The following statements all evaluate to the same thing, as far as Perl is concerned:[<a class="footnote" href="#ch10-pgfId-778820">2</A
>]</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch10-pgfId-778849">[1]</A
> Acutally, pathnames are just passed to the operating system, which accepts either a slash or a backslash.</P
></DIV
><div class="footnote"><p class="para"><a class="footnote" name="ch10-pgfId-778820">[2]</A
> The only portable delimiter is the slash.  Of course, if you're using drive letters, your script isn't really portable anyway.</P
></DIV
></BLOCKQUOTE
><pre class="programlisting">&quot;c:\\temp&quot;    # backslash (escaped for double quoted string)
'c:\temp'     # backslash (single quoted string)
&quot;c:/temp&quot;     # slash - no escape needed </PRE
><p class="para">There are a couple of tradeoffs associated with either approach. First we look at the <a class="indexterm" name="ch10-idx-778830-0"></A
>backslash: if you use the backslash to delimit paths, you have compatibilty problems with scripts that need to run on UNIX systems. You also need to remember to escape the backslash inside of double-quoted strings (or use single-quoted strings, because they are not interpolated). Finally, you need to remember to use a slash if you're outputting URL paths.</P
><p class="para">If you decide to use a <a class="indexterm" name="ch10-idx-778831-0"></A
>slash, you need to consider the following issues: although some Windows NT programs and utilities accept slashes as a delimiter, many do not. Traditionally, the slash is used to specify command-line options to MS-DOS programs, so many programs interpret slashes as command switches. Generally speaking, if your script is self contained, you won't run into any difficulties using slashes. However, if you need to pass pathnames to external programs, you'll probably need to use backslashes (unless you know that the program you're using accepts slashes).</P
><p class="para">Our practice is to use slashes unless we're passing a path to an external program, in which case we use backslashes. If you're using one style of delimiter, you could easily switch to the other style by doing a simple substitution. You must exercise caution if you're writing code that parses a path to extract components; make sure that your code either regularizes paths to use the same delimiter, or that it handles both delimiters when extracting components.[<a class="footnote" href="#ch10-pgfId-778825">3</A
>]</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch10-pgfId-778825">[3]</A
> Or consider using <code class="literal">File::Basename</CODE
><a class="indexterm" name="ch10-idx-778827-0"></A
>, which does portable parsing of path components.</P
></DIV
></BLOCKQUOTE
><p class="para">Another issue to consider is the use of long filenames versus the traditional MS-DOS <a class="indexterm" name="ch10-idx-778829-0"></A
>8.3 filename (a maximum of eight characters, followed by an optional extension of up to three characters). You'll find that some programs do not handle long filenames gracefully (particularly those with embedded spaces in them). In fact, if you're communicating with 16-bit programs (of either the Windows 3.x or DOS variety), the odds are very high that they won't understand long filenames.</P
><p class="para">To convert a long filename to an 8.3 filename, use the <code class="literal">Win32::GetShortPathName</CODE
><a class="indexterm" name="ch10-idx-778828-0"></A
><a class="indexterm" name="ch10-idx-778828-1"></A
>[<a class="footnote" href="#ch10-pgfId-778948">4</A
>] function:</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch10-pgfId-778948">[4]</A
> For a discussion of the Win32 extensions, see <a class="xref" href="appb_01.htm" title="Libraries and Modules">Appendix B, <cite class="appendix">Libraries and Modules</CITE
></A
>.</P
></DIV
></BLOCKQUOTE
><pre class="programlisting">use Win32;
$longname = 'words.secret';
$shortname = Win32::GetShortPathName($longname);
   # $shortname has WORDS~1.SEC</PRE
><p class="para">Perl can also be used to open files using UNC (Universal Naming Convention) pathnames. A <a class="indexterm" name="ch10-idx-778884-0"></A
>UNC path consists of two backslashes (or slashes) followed by a machine name and a share. The following example opens a file using a UNC pathname:</P
><pre class="programlisting">open(F, '//someserver/share/somefile') ||
  die &quot;open: $!&quot;;
$cnt = 0;
while(&lt;F&gt;) {$cnt++;} # count the number of lines
close(F) || die &quot;close: $!&quot;;
print &quot;$cnt lines\n&quot;;</PRE
><p class="para">If you use backslashes, make sure that they're properly escaped:</P
><pre class="programlisting">open(F, &quot;\\\\someserver\\share\\somefile&quot;) ||
  die &quot;open: $!&quot;;
$cnt = 0;
while(&lt;F&gt;) {$cnt++;} # count the number of lines
close(F) || die &quot;close: $!&quot;;
print &quot;$cnt lines\n&quot;;<a class="indexterm" name="ch10-idx-780034-0"></A
><a class="indexterm" name="ch10-idx-780034-1"></A
></PRE
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch10_02.htm" title="10.2 Opening and Closing a Filehandle"><img src="../gifs/txtpreva.gif" alt="Previous: 10.2 Opening and Closing a Filehandle" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch10_04.htm" title="10.4 A Slight Diversion: die"><img src="../gifs/txtnexta.gif" alt="Next: 10.4 A Slight Diversion: die" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">10.2 Opening and Closing a Filehandle</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10.4 A Slight Diversion: die</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
