<html><head>
<title>[Appendix A] A.6 Chapter 7, Regular Expressions</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:37:32Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="appa_01.htm" title="A. Exercise Answers"><link rel="prev" href="appa_05.htm" title="A.5 Chapter 6, Basic I/O"><link rel="next" href="appa_07.htm" title="A.7 Chapter 8, Functions"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map namindex.htmle="srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="appa_05.htm" title="A.5 Chapter 6, Basic I/O"><img src="../gifs/txtpreva.gif" alt="Previous: A.5 Chapter 6, Basic I/O" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="appendix" rel="up" href="appa_01.htm" title="A. Exercise Answers">Appendix A<br>Exercise Answers</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="appa_07.htm" title="A.7 Chapter 8, Functions"><img src="../gifs/txtnexta.gif" alt="Next: A.7 Chapter 8, Functions" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="appa-23983">A.6 <a class="xref" href="ch07_01.htm" title="Regular Expressions">Chapter 7, Regular Expressions</A
></A
></H2
><ol class="orderedlist"><li class="listitem"><p class="para"><a class="listitem" name="appa-pgfId-179370"></A
>Here are some possible answers:</P
><ol class="orderedlist" type="a"><li class="listitem"><p class="para"><a class="listitem" name="appa-pgfId-178963"></A
><code class="literal">/a+b*/</CODE
> </P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="appa-pgfId-179374"></A
><code class="literal">/\\*\**/</CODE
> (Remember that the backslash cancels the meaning of the special character following.)</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="appa-pgfId-179375"></A
><code class="literal">/($whatever){3}/</CODE
> (You must have the parentheses, or else the multiplier applies only to the last character of <code class="literal">$whatever</CODE
>; this solution also fails if <code class="literal">$whatever</CODE
> has special characters.)</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="appa-pgfId-179376"></A
><code class="literal">/[\000-\377]{5}/</CODE
> or <code class="literal">/(.|\n){5}/</CODE
> (You can't use dot alone here, because dot doesn't match newline.)</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="appa-pgfId-179377"></A
><code class="literal">/(^|\s)(\S+)(\s+\2)+(\s|$)/</CODE
> (<code class="literal">\S</CODE
> is non-whitespace, and <code class="literal">\2</CODE
> is a reference to whatever the "word" is; the caret or whitespace alternative ensures that the <code class="literal">\S+</CODE
> begins at a whitespace boundary.)</P
></LI
></OL
></LI
><li class="listitem"><ol class="orderedlist" type="a"><li class="listitem"><p class="para"><a class="listitem" name="appa-pgfId-179373"></A
>One way to do this is:</P
><pre class="programlisting">     while (&lt;STDIN&gt;) {
       if (/a/i &amp;&amp; /e/i &amp;&amp; /i/i &amp;&amp; /o/i &amp;&amp; /u/i) {
         print;
       }
     }</PRE
><p class="para">Here, we have an expression consisting of five match operators. These operators are all looking at the contents of the <code class="literal">$_</CODE
> variable, which is where the control expression of the <code class="literal">while</CODE
> loop is putting each line. The match operator expression will be true only when all five vowels are found.</P
><p class="para">Note that as soon as any of the five vowels are not found, the remainder of the expression is skipped, because the <code class="literal">&amp;&amp;</CODE
> operator doesn't evaluate its right argument if the left argument is false. For more information on using the <code class="literal">&amp;&amp;</CODE
> operator as a control structure, please refer to the section, <a class="xref" href="ch09_06.htm" title="&amp;&amp;, ||, and ?: as Control Structures">"&amp;&amp;, ||, and ?: as Control Structures"</A
>.</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="appa-pgfId-179378"></A
>Another way to do this is:</P
><pre class="programlisting">     while (&lt;STDIN&gt;) {
       if (/a.*e.*i.*o.*u/i) {
         print;
       }
     }</PRE
><p class="para">This answer turns out to be easier than the other part of this exercise. Here we have a simple regular expression, that looks for the five vowels in sequence, separated by any number of characters.</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="appa-pgfId-1589"></A
>A third way to do this is:</P
><pre class="programlisting">     while (&lt;STDIN&gt;) {
       if (/^[eiou]*a[^iou]*e[^aou]*i[^aeu]*o[^aei]*u[^aeio]*$/i) {
         print;
       }
     }</PRE
><p class="para">This solution is ugly, but it works. To construct this solution, just think "What can go between the beginning of the line, and the first a?" Then, think "What can go between the first a and the first e?" Eventually, everything works out, with a little assistance from you.</P
></LI
></OL
></LI
></OL
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="appa_05.htm" title="A.5 Chapter 6, Basic I/O"><img src="../gifs/txtpreva.gif" alt="Previous: A.5 Chapter 6, Basic I/O" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="appa_07.htm" title="A.7 Chapter 8, Functions"><img src="../gifs/txtnexta.gif" alt="Next: A.7 Chapter 8, Functions" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">A.5 Chapter 6, Basic I/O</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">A.7 Chapter 8, Functions</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
