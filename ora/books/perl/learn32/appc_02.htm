<html><head>
<title>[Appendix C] C.2 A Webget Client</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:38:18Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="appc_01.htm" title="C. Networking Clients"><link rel="prev" href="appc_01.htm" title="C.1 A Simple Client"><link rel="next" href="appd_01.htm" title="D. Topics We Didn't Mention"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="appc_01.htm" title="C.1 A Simple Client"><img src="../gifs/txtpreva.gif" alt="Previous: C.1 A Simple Client" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="appendix" rel="up" href="appc_01.htm" title="C. Networking Clients">Appendix C<br>Networking Clients</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="appendix" href="appd_01.htm" title="D. Topics We Didn't Mention"><img src="../gifs/txtnexta.gif" alt="Next: D. Topics We Didn't Mention" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="appc-pgfId-82">C.2 A Webget Client</A
></H2
><p class="para"><a class="indexterm" name="appc-idx-1000003051-0"></A
>Here's a simple client that contacts a remote server and fetches a list of documents from it. This is a more interesting client than the previous one because it sends a line of data to the server before fetching that server's response. </P
><pre class="programlisting">use IO::Socket;
unless (@ARGV &gt; 1) { die &quot;usage: $0 host document ...&quot; }
$host = shift(@ARGV);
foreach $document ( @ARGV ) {
 $remote = IO::Socket::INET-&gt;new( Proto =&gt; &quot;tcp&quot;,
 PeerAddr =&gt; $host,
 PeerPort =&gt; &quot;http(80)&quot;,
 );
 unless ($remote) { die &quot;cannot connect to http daemon on $host&quot; }
 $remote-&gt;autoflush(1);
 print $remote &quot;GET $document HTTP/1.0\n\n&quot;;
 while ( &lt;$remote&gt; ) { print }
 close $remote;
}</PRE
><p class="para">The web server handling the <em class="emphasis">http</EM
> service is assumed to be at its standard port, number 80. If the server you're trying to connect to is at a different port (say, 8080), you should give <code class="literal">PeerPort =&gt; 8080</CODE
> as the third argument to <code class="literal">new()</CODE
>. The <code class="literal">autoflush</CODE
> method is used on the socket because otherwise the system would buffer up the output we sent. </P
><p class="para">Connecting to the server is only the first part of the process: after you have the connection, you have to use the server's language. Each server on the network has its own little command language that it expects as input. The string that we send to the server starting with GET is in HTTP syntax. In this case, we simply request each specified document. Yes, we really are making a new connection for each document, even though it's the same host. That's the way it works with HTTP. (Recent versions of web browsers may request that the remote server leave the connection open a little while, but the server doesn't have to honor such a request.) </P
><p class="para">We'll call our program <em class="emphasis">webget.plx</EM
>. Here's how it might execute: </P
><pre class="programlisting"><b class="emphasis.bold">command_prompt&gt; perl webget.plx www.perl.com /guanaco.html</B
>
HTTP/1.1 404 File Not Found
Date: Thu, 08 May 1997 18:02:32 GMT
Server: Apache/1.2b6
Connection: close
Content-type: text/html
&lt;HEAD&gt;&lt;TITLE&gt;404 File Not Found&lt;/TITLE&gt;&lt;/HEAD&gt;
&lt;BODY&gt;&lt;H1&gt;File Not Found&lt;/H1&gt;
The requested URL /guanaco.html was not found on this server.&lt;P&gt;
&lt;/BODY&gt;</PRE
><p class="para">OK, so the program is not very interesting, because it didn't find that particular document. But a long response wouldn't have fit on this page. </P
><p class="para">For a more full-featured version of this program, you should look for the <em class="emphasis">lwp-request</EM
> program included with the LWP modules from CPAN.</P
><p class="para">You might also want to investigate the <code class="literal">Win32::Internet</CODE
> extension module that provides easy access to the <code class="literal">HTTP</CODE
> and <code class="literal">FTP</CODE
> protocols. <code class="literal">Win32::Internet</CODE
> is bundled with <em class="emphasis">libwin32</EM
>, or is available separately for those using the ActiveState distribution.<a class="indexterm" name="appc-idx-1000003037-0"></A
><a class="indexterm" name="appc-idx-1000003037-1"></A
><a class="indexterm" name="appc-idx-1000003037-2"></A
><a class="indexterm" name="appc-idx-1000003037-3"></A
></P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="appc_01.htm" title="C.1 A Simple Client"><img src="../gifs/txtpreva.gif" alt="Previous: C.1 A Simple Client" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="appendix" href="appd_01.htm" title="D. Topics We Didn't Mention"><img src="../gifs/txtnexta.gif" alt="Next: D. Topics We Didn't Mention" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">C.1 A Simple Client</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">D. Topics We Didn't Mention</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
