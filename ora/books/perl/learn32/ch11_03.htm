<html><head>
<title>[Chapter 11] 11.3 Invoking a Format</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:34:43Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch11_01.htm" title="11. Formats"><link rel="prev" href="ch11_02.htm" title="11.2 Defining a Format"><link rel="next" href="ch11_04.htm#ch11-pgfId-948499" title="11.4 More About the Fieldholders"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch11_02.htm" title="11.2 Defining a Format"><img src="../gifs/txtpreva.gif" alt="Previous: 11.2 Defining a Format" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch11_01.htm" title="11. Formats">Chapter 11<br>Formats</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch11_04.htm#ch11-pgfId-948499" title="11.4 More About the Fieldholders"><img src="../gifs/txtnexta.gif" alt="Next: 11.4 More About the Fieldholders" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch11-29140">11.3 Invoking a Format</A
></H2
><p class="para"><a class="indexterm" name="ch11-idx-948276-0"></A
><a class="indexterm" name="ch11-idx-948276-1"></A
>You invoke a format with the <a class="indexterm" name="ch11-idx-948277-0"></A
><code class="literal">write</CODE
> function. This operator takes the name of a <a class="indexterm" name="ch11-idx-948278-0"></A
>filehandle and generates text for that filehandle using the current format for that filehandle. By default, the current format for a filehandle is a format with the same name (so for the <code class="literal">STDOUT</CODE
> filehandle, the <code class="literal">STDOUT</CODE
> format is used), but we'll soon see that you can change it.</P
><p class="para">Let's take another look at that address label format, and create a file full of address labels. Here's a program segment:</P
><pre class="programlisting"><a class="indexterm" name="ch11-idx-948281-0"></A
>format ADDRESSLABEL =
===============================
| @&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; |
$name
| @&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; |
$address
| @&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;, @&lt; @&lt;&lt;&lt;&lt; |
$city,          $state, $zip
===============================
.

<a class="indexterm" name="ch11-idx-949853-0"></A
>open(ADDRESSLABEL,&quot;&gt;labels-to-print&quot;) || die &quot;can't create&quot;;
open(ADDRESSES,&quot;addresses&quot;) || die &quot;cannot open addresses&quot;;
while (&lt;ADDRESSES&gt;) {
        chomp; # remove newline
        ($name,$address,$city,$state,$zip) = <a class="indexterm" name="ch11-idx-948317-0"></A
>split(/:/);
            # load up the global variables
        <a class="indexterm" name="ch11-idx-948318-0"></A
>write (ADDRESSLABEL); # send the output
}</PRE
><p class="para">Here we see our previous format definition, but now we also have some executable code. First, we open a filehandle onto an output file called <code class="literal">labels-to-print</CODE
>. Note that the filehandle name (<code class="literal">ADDRESSLABEL</CODE
>) is the same as the name of the format. This fact is important. Next, we open a filehandle on an address list. The format of the address list is presumed to be something like:</P
><pre class="programlisting">Stonehenge:4470 SW Hall Suite 107:Beaverton:OR:97005
Fred Flintstone:3737 Hard Rock Lane:Bedrock:OZ:999bc</PRE
><p class="para">In other words, the format is five colon-separated fields, which our code parses as described below.</P
><p class="para">The <code class="literal">while</CODE
> loop in the program reads each line of the address file, gets rid of the newline, and then splits the remainder into five variables. Note that the variable names are the same names as the ones we used when we defined the format. This fact, too, is important.</P
><p class="para">After we have all of the variables loaded up (so that the values used by the format are correct), the <code class="literal">write</CODE
> function invokes the format. Note that the parameter to <code class="literal">write</CODE
> is the filehandle to be written to, and by default, the format of the same name is also used.</P
><p class="para">Each field in the format is replaced with the corresponding value from the next line of the format. After the two sample records given above are processed, the file <code class="literal">labels-to-print</CODE
> contains:</P
><pre class="programlisting">===============================
| Stonehenge                  |
| 4470 SW Hall Suite 107      |
| Beaverton        , OR 97005 |
===============================
===============================
| Fred Flintstone             |
| 3737 Hard Rock Lane         |
| Bedrock          , OZ 999bc |
===============================</PRE
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch11_02.htm" title="11.2 Defining a Format"><img src="../gifs/txtpreva.gif" alt="Previous: 11.2 Defining a Format" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch11_04.htm#ch11-pgfId-948499" title="11.4 More About the Fieldholders"><img src="../gifs/txtnexta.gif" alt="Next: 11.4 More About the Fieldholders" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">11.2 Defining a Format</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">11.4 More About the Fieldholders</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
