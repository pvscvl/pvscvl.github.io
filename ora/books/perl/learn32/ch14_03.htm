<html><head>
<title>[Chapter 14] 14.3 Using Processes as Filehandles</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:35:44Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch14_01.htm" title="14. Process Management"><link rel="prev" href="ch14_02.htm" title="14.2 Using Backquotes"><link rel="next" href="ch14_04.htm" title="14.4 Summary of Process Operations"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map namindex.htmle="srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch14_02.htm" title="14.2 Using Backquotes"><img src="../gifs/txtpreva.gif" alt="Previous: 14.2 Using Backquotes" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch14_01.htm" title="14. Process Management">Chapter 14<br>Process Management</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch14_04.htm" title="14.4 Summary of Process Operations"><img src="../gifs/txtnexta.gif" alt="Next: 14.4 Summary of Process Operations" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch14-11078">14.3 Using Processes as Filehandles</A
></H2
><p class="para">Yet another way to launch a process is to create a process that looks like a <a class="indexterm" name="ch14-idx-744337-0"></A
><a class="indexterm" name="ch14-idx-744337-1"></A
>filehandle (similar to the <a class="indexterm" name="ch14-idx-744336-0"></A
><code class="literal">popen</CODE
> C library routine, if you're familiar with that). We can create a process filehandle that either captures the output from or provides input to the process.[<a class="footnote" href="#ch14-pgfId-744800">2</A
>] Here's an example of creating a filehandle out of a <em class="emphasis">netstat</EM
><a class="indexterm" name="ch14-idx-745624-0"></A
> process. Because the process is generating output that we want to read, we make a filehandle that is open for reading, like so:</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch14-pgfId-744800">[2]</A
> But not both at once. See <a class="olink" href="../prog/ch06_01.htm">Chapter 6</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
> for examples of bidirectional communication.</P
></DIV
></BLOCKQUOTE
><pre class="programlisting">open(NETPROC, &quot;netstat|&quot;); # open netstat for reading</PRE
><p class="para">Note the <a class="indexterm" name="ch14-idx-746629-0"></A
><a class="indexterm" name="ch14-idx-746629-2"></A
>vertical bar on the right side of <code class="literal">netstat</CODE
>. That bar tells Perl that this <code class="literal">open</CODE
> is not about a filename, but rather, is about a command to be started. Because the bar is on the right of the command, the filehandle is opened for reading, and the standard output of <em class="emphasis">netstat</EM
> is going to be captured. (The standard input and standard error remain shared with the Perl process.) To the rest of the program, the <code class="literal">NETPROC</CODE
> handle is merely a filehandle that is open for reading, and all normal file I/O operators apply. Here's a way to <a class="indexterm" name="ch14-idx-744339-0"></A
>read data from the <em class="emphasis">netstat</EM
> command into an array:</P
><pre class="programlisting">@netstat = &lt;NETPROC&gt;;</PRE
><p class="para">Similarly, to open a command that expects input, we can open a process filehandle for writing by putting the vertical bar on the left of the command, like so:</P
><pre class="programlisting">open(FIND,&quot;|<a class="indexterm" name="ch14-idx-744344-0"></A
>find $pattern&quot;);
print FIND @filedata;
close(FIND);</PRE
><p class="para">In this case, after opening <code class="literal">FIND</CODE
>, we wrote some data to it and then closed it. Opening a process with a process filehandle allows the command to execute in parallel with the Perl program. Saying <a class="indexterm" name="ch14-idx-744340-0"></A
><code class="literal">close</CODE
> on the filehandle forces the Perl program to wait until the process exits. If you don't close the filehandle, the process can continue to run even beyond the execution of the Perl program.</P
><p class="para">You don't have to open just one command at a time. You can open an entire pipeline. For example, the following line starts up a <em class="emphasis">dir</EM
> process, which pipes its output into a <em class="emphasis">sort</EM
> process, which finally sends its output along to the DIRPR filehandle:</P
><pre class="programlisting">open(DIRPR, &quot;dir | sort |&quot;);</PRE
><p class="para">The <a class="indexterm" name="ch14-idx-745361-0"></A
><code class="literal">exit</CODE
> function causes an immediate exit from the current Perl process. You'd use this to abort a Perl program from somewhere in the middle. The <code class="literal">exit</CODE
> function takes an optional parameter, which serves as the numeric <a class="indexterm" name="ch14-idx-745355-0"></A
><a class="indexterm" name="ch14-idx-745355-1"></A
>exit value that can be noticed by the parent process. The default is to exit with a zero value, indicating that everything went OK.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch14_02.htm" title="14.2 Using Backquotes"><img src="../gifs/txtpreva.gif" alt="Previous: 14.2 Using Backquotes" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch14_04.htm" title="14.4 Summary of Process Operations"><img src="../gifs/txtnexta.gif" alt="Next: 14.4 Summary of Process Operations" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">14.2 Using Backquotes</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">14.4 Summary of Process Operations</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
