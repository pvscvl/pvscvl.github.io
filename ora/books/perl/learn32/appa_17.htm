<html><head>
<title>[Appendix A] A.17 Chapter 18, CGI Programming</TITLE>
<meta name="DC.title" content="Learning Perl on Win32 Systems"><meta name="DC.creator" content="Randal L. Schwartz, Erik Olson &amp; Tom Christiansen"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:37:53Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-324-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="appa_01.htm" title="A. Exercise Answers"><link rel="prev" href="appa_16.htm" title="A.16 Chapter 17, Database Manipulation"><link rel="next" href="appa_18.htm" title="A.18 Chapter 19, OLE Automation"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl on Win32 Systems" usemap="#srchmap" border="0"></H1
><map name="srchmap"index.html><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl on Win32 Systems"><area shape="RECT" coords="467,0,514,18" href="../search/wsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="appa_16.htm" title="A.16 Chapter 17, Database Manipulation"><img src="../gifs/txtpreva.gif" alt="Previous: A.16 Chapter 17, Database Manipulation" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="appendix" rel="up" href="appa_01.htm" title="A. Exercise Answers">Appendix A<br>Exercise Answers</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="appa_18.htm" title="A.18 Chapter 19, OLE Automation"><img src="../gifs/txtnexta.gif" alt="Next: A.18 Chapter 19, OLE Automation" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="appa-pgfId-179164">A.17 <a class="xref" href="ch18_01.htm" title="CGI Programming">Chapter 18, CGI Programming</A
></A
></H2
><ol class="orderedlist"><li class="listitem"><p class="para"><a class="listitem" name="appa-pgfId-179165"></A
>Here's one way to do it:</P
><pre class="programlisting">use strict;
use CGI qw(:standard);
print header(), start_html(&quot;Add Me&quot;);
print h1(&quot;Add Me&quot;);
if(param()) {
  my $n1 = param('field1');
  my $n2 = param('field2');
  my $n3 = $n2 + $n1;
  print p(&quot;$n1 + $n2 = &lt;strong&gt;$n3&lt;/strong&gt;\n&quot;);
} else {
  print hr(), start_form();
  print p(&quot;First Number:&quot;, textfield(&quot;field1&quot;));
  print p(&quot;Second Number:&quot;, textfield(&quot;field2&quot;));
  print p(submit(&quot;add&quot;), reset(&quot;clear&quot;));
  print end_form(), hr();
}
print end_html();</PRE
><p class="para">We simply generate a form if there's no input with two textfields (using the <code class="literal">textfield()</CODE
> method). If there is input, we simply add the two fields together and print the result.</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="appa-pgfId-1934"></A
>Here's one way to do it</P
><pre class="programlisting">use strict;
use CGI qw(:standard);
print header(), start_html(&quot;Browser Detective&quot;);
print h1(&quot;Browser Detective&quot;), hr();
my $browser = $ENV{'HTTP_USER_AGENT'};
$_ = $browser;
if (/msie/) {
  msie($_);
} elsif (/mozilla/i) {
  netscape($_);
} elsif (/lynx/i) {
  lynx($_);
} else {
  default($_);
}

print end_html();
sub msie{ 
  print p(&quot;Internet Explorer: @_.  Good Choice\n&quot;);
}
sub netscape {
  print p(&quot;Netscape: @_.  Good Choice\n&quot;);
}
sub lynx {
  print p(&quot;Lynx: @_.  Shudder...&quot;);
}
sub default {
  print p(&quot;What the heck is a @_?&quot;);
}</PRE
><p class="para">The key here is checking the environment for the HTTP_USER_AGENT variable (line 5). Although this step isn't implemented by every server, many of them do set the variable. This method is a good way to generate content geared at the features of a particular browser. Note that we're just doing some basic string matching (case insensitive) to see what they're using (nothing too fancy). Experienced Perl programmers would probably prefer to write the string-matching section more along these lines:</P
><pre class="programlisting">BROWSER:{
  /msie/i    and do { msie($_), last BROWSER; };
  /mozilla/i and do { netscape($_), last BROWSER; };
  /lynx/i    and do { lynx($_), last BROWSER; };
  default($_);
}</PRE
><p class="para">However we haven't talked about this construct in this book. If you're interested, see <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
> for several other ways to emulate a switch construct.</P
></LI
></OL
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="appa_16.htm" title="A.16 Chapter 17, Database Manipulation"><img src="../gifs/txtpreva.gif" alt="Previous: A.16 Chapter 17, Database Manipulation" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl on Win32 Systems"><img src="../gifs/txthome.gif" alt="Learning Perl on Win32 Systems" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="appa_18.htm" title="A.18 Chapter 19, OLE Automation"><img src="../gifs/txtnexta.gif" alt="Next: A.18 Chapter 19, OLE Automation" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">A.16 Chapter 17, Database Manipulation</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">A.18 Chapter 19, OLE Automation</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
