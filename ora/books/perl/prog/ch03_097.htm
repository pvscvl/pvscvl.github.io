<html><head>
<title>[Chapter 3] 3.2.97 my</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:51:31Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_02.htm" title="3.2 Perl Functions in Alphabetical Order"><link rel="prev" href="ch03_096.htm#PERL2-CMD-MSGSND" title="3.2.96 msgsnd"><link rel="next" href="ch03_098.htm#PERL2-CMD-NEW" title="3.2.98 new"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_096.htm#PERL2-CMD-MSGSND" title="3.2.96 msgsnd"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.96 msgsnd" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch03_01.htm" title="3. Functions">Chapter 3<br>Functions</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_098.htm#PERL2-CMD-NEW" title="3.2.98 new"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.98 new" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="PERL2-CMD-MY">3.2.97 my</A
></H3
><pre class="programlisting">my <code class="replaceable"><i>EXPR</I
></CODE
></PRE
><p class="para"><a class="indexterm" name="AUTOID-11311"></A
><a class="indexterm" name="AUTOID-11313"></A
><a class="indexterm" name="AUTOID-11317"></A
>This operator declares
one or more private variables to exist only within the innermost enclosing
block, subroutine, <a class="xref" href="ch03_032.htm#PERL2-CMD-EVAL" title="eval"><b class="xref.cmd">eval</B
></A
>, or file.  If more
than one variable is listed, the list must be placed in parentheses, because the
operator binds more tightly than comma.  Only simple scalars or complete arrays
and hashes may be declared this way.  The variable name may not be package
qualified, because package variables are all global, and private variables are
not related to any package.  Unlike <a class="xref" href="ch03_087.htm#PERL2-CMD-LOCAL" title="local"><b class="xref.cmd">local</B
></A
>,
this operator has nothing to do with global variables, other than hiding any
other variable of the same name from view within its scope.  (A global variable
can always be accessed through its package-qualified form, however.)  A private
variable is not visible until the statement <em class="emphasis">after</EM
> its
declaration.  Subroutines 
called from within the scope of such a private variable cannot see the private
variable unless the subroutine is also textually declared within the scope of
the variable.  The technical term for this is &quot;lexical scoping&quot;, so we often
call these &quot;lexical variables&quot;.  In C culture they're called &quot;auto&quot; variables,
since they're automatically allocated and deallocated at scope entry and exit.</P
><p class="para">The <code class="replaceable"><i>EXPR</I
></CODE
> may be assigned to if desired, which allows you to initialize
your lexical variables.  (If no initializer is given, all scalars are
initialized to the undefined value and all arrays and hashes
to empty arrays.)  As with ordinary assignment, if you
use parentheses around the variables on the left (or if the variable is
an array or hash), the expression on
the right is evaluated in list context.  Otherwise the expression
on the right is evaluated in scalar context.  You can name your formal
subroutine parameters with a list assignment, like this:</P
><pre class="programlisting">my ($friends, $romans, $countrymen) = @_;</PRE
><p class="para">Be careful not to omit the parentheses indicating list assignment, like this:</P
><pre class="programlisting">my $country = @_;  # right or wrong?</PRE
><p class="para">This assigns the length of the array (that is, the number of the
subroutine's arguments)
to the variable, since the array is being evaluated in scalar context.
You can profitably use scalar assignment for a formal parameter though,
as long as you use the <a class="xref" href="ch03_143.htm#PERL2-CMD-SHIFT" title="shift"><b class="xref.cmd">shift</B
></A
> operator.  In fact, since object methods
are passed the object as the first argument, many such method subroutines
start off like this:</P
><pre class="programlisting">sub simple_as {
    my $self = shift;   # scalar assignment
    my ($a,$b,$c) = @_; # list assignment
    ...
}</PRE
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_096.htm#PERL2-CMD-MSGSND" title="3.2.96 msgsnd"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.96 msgsnd" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_098.htm#PERL2-CMD-NEW" title="3.2.98 new"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.98 new" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.2.96 msgsnd</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.2.98 new</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
