<html><head>
<title>[Chapter 3] 3.2.24 dbmopen</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:48:14Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_02.htm" title="3.2 Perl Functions in Alphabetical Order"><link rel="prev" href="ch03_023.htm#PERL2-CMD-DBMCLOSE" title="3.2.23 dbmclose"><link rel="next" href="ch03_025.htm#PERL2-CMD-DEFINED" title="3.2.25 defined"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_023.htm#PERL2-CMD-DBMCLOSE" title="3.2.23 dbmclose"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.23 dbmclose" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch03_01.htm" title="3. Functions">Chapter 3<br>Functions</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_025.htm#PERL2-CMD-DEFINED" title="3.2.25 defined"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.25 defined" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="PERL2-CMD-DBMOPEN">3.2.24 dbmopen</A
></H3
><pre class="programlisting">dbmopen <code class="replaceable"><i>HASH</I
></CODE
>, <code class="replaceable"><i>DBNAME</I
></CODE
>, <code class="replaceable"><i>MODE</I
></CODE
></PRE
><p class="para"><a class="indexterm" name="AUTOID-9472"></A
><a class="indexterm" name="AUTOID-9474"></A
><a class="indexterm" name="AUTOID-9477"></A
>This binds a DBM file to a hash (that is, an associative array).
(DBM stands for Data Base Management, and consists of a set of C library
routines that allow random access to records via a hashing algorithm.)
<code class="replaceable"><i>HASH</I
></CODE
> is the name of the hash (with a <code class="literal">%</CODE
>).  <code class="replaceable"><i>DBNAME</I
></CODE
>
is the name of the database (without the <code class="literal">.dir</CODE
> or <code class="literal">.pag</CODE
>
extension).  If the database does not exist, and a valid <code class="replaceable"><i>MODE</I
></CODE
> is
specified, the database is created with the protection specified by
<code class="replaceable"><i>MODE</I
></CODE
> (as modified by the umask).  To prevent creation of the database
if it doesn't exist, you may specify a <code class="replaceable"><i>MODE</I
></CODE
> of <a class="xref" href="ch03_180.htm#PERL2-CMD-UNDEF" title="undef"><b class="xref.cmd">undef</B
></A
>, and the
function will return a false value if it can't find an existing
database.  If your system supports only the older DBM functions, you
may have only one <a class="xref" href="ch03_024.htm#PERL2-CMD-DBMOPEN" title="dbmopen"><b class="xref.cmd">dbmopen</B
></A
> in your program.</P
><p class="para">Values assigned to the hash prior to the
<a class="xref" href="ch03_024.htm#PERL2-CMD-DBMOPEN" title="dbmopen"><b class="xref.cmd">dbmopen</B
></A
>
are not accessible.</P
><p class="para">If you don't have write access to the DBM file, you can only read the
hash variables, not set them.
If you want to test whether you can write, either use file tests or
try setting a dummy array entry inside an <a class="xref" href="ch03_032.htm#PERL2-CMD-EVAL" title="eval"><b class="xref.cmd">eval</B
></A
>, which will trap
the error.</P
><p class="para">Note that functions such as <a class="xref" href="ch03_079.htm#PERL2-CMD-KEYS" title="keys"><b class="xref.cmd">keys</B
></A
> and <a class="xref" href="ch03_187.htm#PERL2-CMD-VALUES" title="values"><b class="xref.cmd">values</B
></A
> may
return huge list values when used on large DBM files.
You may prefer to use the <a class="xref" href="ch03_030.htm#PERL2-CMD-EACH" title="each"><b class="xref.cmd">each</B
></A
> function to iterate over
large DBM files.
This example prints out the mail aliases on a system using <em class="emphasis">sendmail</EM
>:</P
><pre class="programlisting">dbmopen %ALIASES, &quot;/etc/aliases&quot;, 0666
    or die &quot;Can't open aliases: $!\n&quot;;

while (($key,$val) = each %ALIASES) {
    print $key, ' = ', $val, &quot;\n&quot;;
}
dbmclose %ALIASES;</PRE
><p class="para">Hashes bound to DBM files have the same limitations as DBM
files, in particular the restrictions on how much you can put into a
bucket.  If you stick to short keys and values, it's rarely a problem.
Another thing you should bear in mind is that many existing DBM
databases contain null-terminated keys and values because they were
set up with C programs in mind.  The B News history file
and the old <em class="emphasis">sendmail</EM
> aliases file are examples.  Just use
<code class="literal">&quot;$key\0&quot;</CODE
> instead of <code class="literal">$key</CODE
>.</P
><p class="para"><a class="indexterm" name="AUTOID-9505"></A
><a class="indexterm" name="AUTOID-9507"></A
><a class="indexterm" name="AUTOID-9510"></A
>There is currently no built-in way to lock generic DBM files.  Some would
consider this a bug.  The DB_File module does provide locking at the
granularity of the entire file, however.  See the documentation on that
module in <a class="xref" href="ch07_01.htm" title="The Standard Perl Library">Chapter 7</A
> for details.</P
><p class="para">This function is actually just a call to <a class="xref" href="ch03_171.htm#PERL2-CMD-TIE" title="tie"><b class="xref.cmd">tie</B
></A
> with the proper
arguments, but is provided for backward compatibility with older
versions of Perl.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_023.htm#PERL2-CMD-DBMCLOSE" title="3.2.23 dbmclose"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.23 dbmclose" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_025.htm#PERL2-CMD-DEFINED" title="3.2.25 defined"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.25 defined" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.2.23 dbmclose</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.2.25 defined</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
