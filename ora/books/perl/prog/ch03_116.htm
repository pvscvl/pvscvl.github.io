<html><head>
<title>[Chapter 3] 3.2.116 read</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:52:45Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_02.htm" title="3.2 Perl Functions in Alphabetical Order"><link rel="prev" href="ch03_115.htm#PERL2-CMD-RAND" title="3.2.115 rand"><link rel="next" href="ch03_117.htm#PERL2-CMD-READDIR" title="3.2.117 readdir"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_115.htm#PERL2-CMD-RAND" title="3.2.115 rand"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.115 rand" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch03_01.htm" title="3. Functions">Chapter 3<br>Functions</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_117.htm#PERL2-CMD-READDIR" title="3.2.117 readdir"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.117 readdir" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="PERL2-CMD-READ">3.2.116 read</A
></H3
><pre class="programlisting">read <code class="replaceable"><i>FILEHANDLE</I
></CODE
>, <code class="replaceable"><i>SCALAR</I
></CODE
>, <code class="replaceable"><i>LENGTH</I
></CODE
>, <code class="replaceable"><i>OFFSET</I
></CODE
>
read <code class="replaceable"><i>FILEHANDLE</I
></CODE
>, <code class="replaceable"><i>SCALAR</I
></CODE
>, <code class="replaceable"><i>LENGTH</I
></CODE
></PRE
><p class="para"><a class="indexterm" name="AUTOID-12076"></A
><a class="indexterm" name="AUTOID-12078"></A
><a class="indexterm" name="AUTOID-12081"></A
><a class="indexterm" name="AUTOID-12084"></A
>This function attempts to read <code class="replaceable"><i>LENGTH</I
></CODE
> bytes of data into variable
<code class="replaceable"><i>SCALAR</I
></CODE
> from the specified <code class="replaceable"><i>FILEHANDLE</I
></CODE
>.
The function returns the number
of bytes actually read, 0 at end-of-file.  It returns the undefined
value on error.  <code class="replaceable"><i>SCALAR</I
></CODE
> will be grown or shrunk to the length actually
read.  The <code class="replaceable"><i>OFFSET</I
></CODE
>, if specified, says where in the variable to start
putting bytes, so that you can do a read into the middle of a string.</P
><p class="para">To copy data from filehandle <code class="literal">FROM</CODE
> into filehandle <code class="literal">TO</CODE
>, you could
say:</P
><pre class="programlisting">while (read FROM, $buf, 16384) {
    print TO $buf;
}</PRE
><p class="para">Note that the opposite of <a class="xref" href="ch03_116.htm#PERL2-CMD-READ" title="read"><b class="xref.cmd">read</B
></A
> is simply a
<a class="xref" href="ch03_110.htm#PERL2-CMD-PRINT" title="print"><b class="xref.cmd">print</B
></A
>, which already knows the length of the
string you want to write, and can write a string of any length.</P
><p class="para">Perl's <a class="xref" href="ch03_116.htm#PERL2-CMD-READ" title="read"><b class="xref.cmd">read</B
></A
> function is actually implemented
in terms of standard I/O's <em class="emphasis">fread</EM
>(3) function, so
the actual <em class="emphasis">read</EM
>(2) system call may read more than
<code class="replaceable"><i>LENGTH</I
></CODE
> bytes to fill the input buffer, and
<em class="emphasis">fread</EM
>(3) may do more than one system
<em class="emphasis">read</EM
>(2) in order to fill the buffer.  To gain
greater control, specify the real system call using <a class="xref" href="ch03_166.htm#PERL2-CMD-SYSREAD" title="sysread"><b class="xref.cmd">sysread</B
></A
>.  Calls to <a class="xref" href="ch03_116.htm#PERL2-CMD-READ" title="read"><b class="xref.cmd">read</B
></A
>
and <a class="xref" href="ch03_166.htm#PERL2-CMD-SYSREAD" title="sysread"><b class="xref.cmd">sysread</B
></A
> should not be intermixed unless
you are into heavy wizardry (or pain).</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_115.htm#PERL2-CMD-RAND" title="3.2.115 rand"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.115 rand" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_117.htm#PERL2-CMD-READDIR" title="3.2.117 readdir"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.117 readdir" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.2.115 rand</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.2.117 readdir</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
