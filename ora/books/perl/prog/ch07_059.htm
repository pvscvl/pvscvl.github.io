<html><head>
<title>[Chapter 7] 7.2.59 strict&nbsp;- Restrict Unsafe Constructs</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T02:04:05Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_02.htm" title="7.2 Library Modules"><link rel="prev" href="ch07_058.htm#AUTOID-26647" title="7.2.58 Socket&nbsp;- Load the C socket.h Defines and Structure Manipulators"><link rel="next" href="ch07_060.htm#AUTOID-26849" title="7.2.60 subs&nbsp;- Predeclare Subroutine Names"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_058.htm#AUTOID-26647" title="7.2.58 Socket&nbsp;- Load the C socket.h Defines and Structure Manipulators"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.58 Socket&nbsp;- Load the C socket.h Defines and Structure Manipulators" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch07_01.htm" title="7. The Standard Perl Library">Chapter 7<br>The Standard Perl Library</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_060.htm#AUTOID-26849" title="7.2.60 subs&nbsp;- Predeclare Subroutine Names"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.60 subs&nbsp;- Predeclare Subroutine Names" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="AUTOID-26791">7.2.59 strict&nbsp;- Restrict Unsafe Constructs</A
></H3
><pre class="programlisting">use strict;        # apply all possible restrictions

use strict 'vars'; # restrict unsafe use of variables for rest of block
use strict 'refs'; # restrict unsafe use of references for rest of block
use strict 'subs'; # restrict unsafe use of barewords for rest of block

no strict 'vars';  # relax restrictions on variables for rest of block
no strict 'refs';  # relax restrictions on references for rest of block
no strict 'subs';  # relax restrictions on barewords for rest of block</PRE
><p class="para"><a class="indexterm" name="AUTOID-26795"></A
>If no import list is given to <code class="literal">use strict</CODE
>, all possible restrictions
upon unsafe Perl constructs are imposed.  (This is the safest mode to
operate in, but is sometimes too
strict for casual programming.)  Currently, there are three possible things
to be strict about:  <code class="literal">refs</CODE
>, <code class="literal">vars</CODE
>, and <code class="literal">subs</CODE
>.</P
><p class="para">In all cases the restrictions apply only until the end of the immediately
enclosing block.</P
><dl class="variablelist"><dt class="term"><code class="literal">strict 'refs'</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-26808"></A
>This generates a run-time error if you
use symbolic references.</P
><pre class="programlisting">use strict 'refs';
$ref = \$foo;
print $$ref;        # ok
$ref = &quot;foo&quot;;
print $$ref;        # run-time error; normally ok</PRE
></DD
><dt class="term"><code class="literal">strict 'vars'</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-26817"></A
>This generates a compile-time error if you access a variable that wasn't
declared via <a class="xref" href="ch03_097.htm#PERL2-CMD-MY" title="my"><b class="xref.cmd">my</B
></A
>, or fully qualified, or imported.</P
><pre class="programlisting">use strict 'vars';
use vars '$foe';
$SomePack::fee = 1;  # ok, fully qualified
my $fie = 10;        # ok, my() var
$foe = 7;            # ok, pseudo-imported by 'use vars'
$foo = 9;            # blows up--did you mistype $foe maybe?</PRE
><p class="para">The last line generates a compile-time error because you're touching a
global name without fully qualifying it.  Since the purpose of this
pragma is to encourage use of <a class="xref" href="ch03_097.htm#PERL2-CMD-MY" title="my"><b class="xref.cmd">my</B
></A
> variables, using <a class="xref" href="ch03_087.htm#PERL2-CMD-LOCAL" title="local"><b class="xref.cmd">local</B
></A
> on a
variable isn't good enough to declare it.  You can, however, use
<a class="xref" href="ch03_087.htm#PERL2-CMD-LOCAL" title="local"><b class="xref.cmd">local</B
></A
> on a variable that you declared with <code class="literal">use vars</CODE
>.</P
></DD
><dt class="term"><code class="literal">strict 'subs'</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-26832"></A
>This generates a compile-time error if
you try to use a bareword identifier that's not a predeclared subroutine.</P
><pre class="programlisting">use strict 'subs';

$SIG{PIPE} = Plumber;     # blows up (assuming Plumber sub not declared yet)
$SIG{PIPE} = &quot;Plumber&quot;;   # okay, means &quot;main::Plumber&quot; really
$SIG{PIPE} = \&amp;Plumber;   # preferred form</PRE
></DD
></DL
><p class="para">The <code class="literal">no strict 'vars'</CODE
> statement negates any preceding <code class="literal">use strict
vars</CODE
> for the remainder of the innermost enclosing block.  Likewise,
<code class="literal">no strict 'refs'</CODE
> negates any preceding invocation of <code class="literal">use strict
refs</CODE
>, and <code class="literal">no strict 'subs'</CODE
> negates <code class="literal">use strict 'subs'</CODE
>.</P
><p class="para">The arguments to <code class="literal">use strict</CODE
> are sometimes given as barewords&nbsp;- that is,
without surrounding quotes.  Be aware, however, that the following
sequence will not work:</P
><pre class="programlisting">use strict;      # or just:  use strict subs;
...
no strict subs;  # WRONG!  Should be:  no strict 'subs';
...</PRE
><p class="para">The problem here is that giving <code class="literal">subs</CODE
> as a bareword is no longer allowed
after the <code class="literal">use strict</CODE
> statement.  <code class="literal">:-)</CODE
></P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_058.htm#AUTOID-26647" title="7.2.58 Socket&nbsp;- Load the C socket.h Defines and Structure Manipulators"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.58 Socket&nbsp;- Load the C socket.h Defines and Structure Manipulators" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_060.htm#AUTOID-26849" title="7.2.60 subs&nbsp;- Predeclare Subroutine Names"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.60 subs&nbsp;- Predeclare Subroutine Names" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.2.58 Socket&nbsp;- Load the C socket.h Defines and Structure Manipulators</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.2.60 subs&nbsp;- Predeclare Subroutine Names</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
