<html><head>
<title>[Chapter 7] 7.2.42 Math::BigFloat&nbsp;- Arbitrary-Length, Floating-Point Math Package</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T02:02:53Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_02.htm" title="7.2 Library Modules"><link rel="prev" href="ch07_041.htm#AUTOID-23299" title="7.2.41 lib&nbsp;- Manipulate @INC at Compile-Time"><link rel="next" href="ch07_043.htm#AUTOID-23446" title="7.2.43 Math::BigInt&nbsp;- Arbitrary-Length Integer Math Package"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_041.htm#AUTOID-23299" title="7.2.41 lib&nbsp;- Manipulate @INC at Compile-Time"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.41 lib&nbsp;- Manipulate @INC at Compile-Time" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch07_01.htm" title="7. The Standard Perl Library">Chapter 7<br>The Standard Perl Library</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_043.htm#AUTOID-23446" title="7.2.43 Math::BigInt&nbsp;- Arbitrary-Length Integer Math Package"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.43 Math::BigInt&nbsp;- Arbitrary-Length Integer Math Package" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="AUTOID-23392">7.2.42 Math::BigFloat&nbsp;- Arbitrary-Length, Floating-Point Math Package</A
></H3
><a class="indexterm" name="AUTOID-23394"></A
><a class="indexterm" name="AUTOID-23396"></A
><a class="indexterm" name="AUTOID-23398"></A
><a class="indexterm" name="AUTOID-23401"></A
><pre class="programlisting">use Math::BigFloat;

$f = Math::BigFloat-&gt;new($string);

# <code class="replaceable"><i>NSTR</I
></CODE
> is a number string; <code class="replaceable"><i>SCALE</I
></CODE
> is an integer value.
# In all following cases $f remains unchanged.
# All methods except fcmp() return a number string.
$f-&gt;fadd(<code class="replaceable"><i>NSTR</I
></CODE
>);          # return sum of <code class="replaceable"><i>NSTR</I
></CODE
> and $f
$f-&gt;fsub(<code class="replaceable"><i>NSTR</I
></CODE
>);          # return $f minus <code class="replaceable"><i>NSTR</I
></CODE
>
$f-&gt;fmul(<code class="replaceable"><i>NSTR</I
></CODE
>);          # return $f multiplied by <code class="replaceable"><i>NSTR</I
></CODE
>
$f-&gt;fdiv(<code class="replaceable"><i>NSTR</I
></CODE
>[,<code class="replaceable"><i>SCALE</I
></CODE
>]);  # return $f divided by <code class="replaceable"><i>NSTR</I
></CODE
> to <code class="replaceable"><i>SCALE</I
></CODE
> places
$f-&gt;fneg();              # return negative of $f
$f-&gt;fabs();              # return absolute value of $f
$f-&gt;fcmp(<code class="replaceable"><i>NSTR</I
></CODE
>);          # compare $f to <code class="replaceable"><i>NSTR</I
></CODE
>; see below for return value
$f-&gt;fround(<code class="replaceable"><i>SCALE</I
></CODE
>);       # return rounded value of $f to <code class="replaceable"><i>SCALE</I
></CODE
> digits
$f-&gt;ffround(<code class="replaceable"><i>SCALE</I
></CODE
>);      # return rounded value of $f at <code class="replaceable"><i>SCALEth</I
></CODE
> place
$f-&gt;fnorm();             # return normalization of $f
$f-&gt;fsqrt([<code class="replaceable"><i>SCALE</I
></CODE
>]);      # return sqrt of $f to <code class="replaceable"><i>SCALE</I
></CODE
> places</PRE
><p class="para">This module allows you to use floating-point numbers of arbitrary length.
For example:</P
><pre class="programlisting">$float = new Math::BigFloat &quot;2.123123123123123123123123123123123&quot;;</PRE
><p class="para">Number strings (<code class="replaceable"><i>NSTR</I
></CODE
>s) have the form, <code class="literal">/[+-]\d*\.?\d*E[+-]\d+/</CODE
>.
Embedded white space is ignored, so that the number strings used in the
following two lines are identical:</P
><pre class="programlisting">$f = Math::BigFloat-&gt;new(&quot;-20.0    0732&quot;);
$g = $f-&gt;fmul(&quot;-20.00732&quot;);</PRE
><p class="para">The return value <code class="literal">NaN</CODE
> indicates either that an input parameter was &quot;Not
a Number&quot;, or else that you tried to divide by zero or take the square
root of a negative number.  The <code class="literal">fcmp()</CODE
> method returns <code class="literal">-1</CODE
>,
<code class="literal">0</CODE
>, or <code class="literal">1</CODE
> depending on whether <code class="literal">$f</CODE
> is less than,
equal to, or greater than the number string given as an argument.  If
the number string is undefined or null, the undefined value is returned.</P
><p class="para">If <code class="replaceable"><i>SCALE</I
></CODE
> is unspecified,
division is computed to the number of digits given by:</P
><pre class="programlisting">max($div_scale, length(dividend)+length(divisor))</PRE
><p class="para">A similar default scale value is computed for square roots.</P
><p class="para">When you use this module, Perl's basic math operations are overloaded
with routines from Math::BigFloat.  Therefore, you don't have to employ the
methods shown above to multiply, divide, and so on.  You can rely instead
on the usual operators.  Given this code:</P
><pre class="programlisting">$f = Math::BigFloat-&gt;new(&quot;20.00732&quot;);
$g = Math::BigFloat-&gt;new(&quot;1.7&quot;);</PRE
><p class="para">the following six lines all yield the corresponding values for <code class="literal">$h</CODE
>:</P
><pre class="programlisting">$h = 20.00732 * 1.7;    # 34.012444 (ordinary math--$h is not an object)
$h = $f * $g;           # &quot;34.012444&quot; ($h is now a BigFloat object)
$h = $f * 1.7;          # &quot;34.012444&quot; ($h is now a BigFloat object)
$h = 20.00732 * $g;     # &quot;34.012444&quot; ($h is now a BigFloat object)
$h = $f-&gt;fmul($g);      # &quot;+34012444E-6&quot; ($h is now a BigFloat object)
$h = $f-&gt;fmul(1.7);     # &quot;+34012444E-6&quot; ($h is now a BigFloat object)</PRE
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_041.htm#AUTOID-23299" title="7.2.41 lib&nbsp;- Manipulate @INC at Compile-Time"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.41 lib&nbsp;- Manipulate @INC at Compile-Time" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_043.htm#AUTOID-23446" title="7.2.43 Math::BigInt&nbsp;- Arbitrary-Length Integer Math Package"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.43 Math::BigInt&nbsp;- Arbitrary-Length Integer Math Package" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.2.41 lib&nbsp;- Manipulate @INC at Compile-Time</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.2.43 Math::BigInt&nbsp;- Arbitrary-Length Integer Math Package</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
