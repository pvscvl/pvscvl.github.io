<html><head>
<title>[Chapter 3] 3.2.135 select (ready file descriptors)</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:53:45Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_02.htm" title="3.2 Perl Functions in Alphabetical Order"><link rel="prev" href="ch03_134.htm#PERL2-CMD-SELECT-OUT" title="3.2.134 select (output filehandle)"><link rel="next" href="ch03_136.htm#PERL2-CMD-SEMCTL" title="3.2.136 semctl"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name="srchmap"index.html><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_134.htm#PERL2-CMD-SELECT-OUT" title="3.2.134 select (output filehandle)"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.134 select (output filehandle)" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch03_01.htm" title="3. Functions">Chapter 3<br>Functions</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_136.htm#PERL2-CMD-SEMCTL" title="3.2.136 semctl"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.136 semctl" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="PERL2-CMD-SELECT">3.2.135 select (ready file descriptors)</A
></H3
><pre class="programlisting">select <code class="replaceable"><i>RBITS</I
></CODE
>, <code class="replaceable"><i>WBITS</I
></CODE
>, <code class="replaceable"><i>EBITS</I
></CODE
>, <code class="replaceable"><i>TIMEOUT</I
></CODE
></PRE
><p class="para"><a class="indexterm" name="AUTOID-12566"></A
><a class="indexterm" name="AUTOID-12568"></A
><a class="indexterm" name="AUTOID-12571"></A
><a class="indexterm" name="AUTOID-12574"></A
><a class="indexterm" name="AUTOID-12576"></A
><a class="indexterm" name="AUTOID-12578"></A
>The four-argument <b class="emphasis.bold">select</B
> operator is totally unrelated to the
previously described operator.  This operator is for discovering which
(if any) of your file descriptors are ready to do input or output, or to
report an exceptional condition.  (This helps you avoid having to do
polling.)  It calls the <em class="emphasis">select</EM
>(2) system call with the bitmasks
you've specified, which you can construct using <a class="xref" href="ch03_038.htm#PERL2-CMD-FILENO" title="fileno"><b class="xref.cmd">fileno</B
></A
> and
<a class="xref" href="ch03_188.htm#PERL2-CMD-VEC" title="vec"><b class="xref.cmd">vec</B
></A
>, like this:</P
><pre class="programlisting">$rin = $win = $ein = &quot;&quot;;
vec($rin, fileno(STDIN), 1) = 1;
vec($win, fileno(STDOUT), 1) = 1;
$ein = $rin | $win;</PRE
><p class="para">If you want to <b class="emphasis.bold">select</B
> on many filehandles you
might wish to write a subroutine:</P
><pre class="programlisting">sub fhbits {
    my @fhlist = @_;
    my $bits;
    for (@fhlist) {
        vec($bits, fileno($_), 1) = 1;
    }
    return $bits;
}
$rin = fhbits(qw(STDIN TTY MYSOCK));</PRE
><p class="para">If you wish to use the same bitmasks repeatedly (and it's more efficient
if you do), the usual idiom is:</P
><pre class="programlisting">($nfound, $timeleft) =
    select($rout=$rin, $wout=$win, $eout=$ein, $timeout);</PRE
><p class="para">Or to block until any file descriptor becomes ready:</P
><pre class="programlisting">$nfound = select($rout=$rin, $wout=$win, $eout=$ein, undef);</PRE
><p class="para">The <code class="literal">$wout=$win</CODE
> trick works because the value of an assignment is
its left side, so <code class="literal">$wout</CODE
> gets clobbered first by the assignment,
and then by the <b class="emphasis.bold">select</B
>, while <code class="literal">$win</CODE
> remains unchanged.</P
><p class="para">Any of the bitmasks can also be <a class="xref" href="ch03_180.htm#PERL2-CMD-UNDEF" title="undef"><b class="xref.cmd">undef</B
></A
>.  The
timeout, if specified, is in seconds, which may be fractional.  (A timeout of
<code class="literal">0</CODE
> effects a poll.)  Not many implementations are capable of
returning the <code class="literal">$timeleft</CODE
>.  If not, they always return
<code class="literal">$timeleft</CODE
> equal to the supplied <code class="literal">$timeout</CODE
>.</P
><p class="para"><a class="indexterm" name="AUTOID-12604"></A
>One use for <b class="emphasis.bold">select</B
> is to sleep with a finer
resolution than <a class="xref" href="ch03_150.htm#PERL2-CMD-SLEEP" title="sleep"><b class="xref.cmd">sleep</B
></A
> allows.  To do this,
specify <a class="xref" href="ch03_180.htm#PERL2-CMD-UNDEF" title="undef"><b class="xref.cmd">undef</B
></A
> for all the bitmasks. So, to sleep for (at least) 4.75 seconds, use:</P
><pre class="programlisting">select undef, undef, undef, 4.75;</PRE
><p class="para">(On some non-UNIX systems this may not work, and you may need to fake up
at least one bitmask for a valid descriptor that won't ever be ready.)</P
><p class="para">Mixing buffered I/O (like <a class="xref" href="ch03_116.htm#PERL2-CMD-READ" title="read"><b class="xref.cmd">read</B
></A
> or
<code class="literal">&lt;HANDLE&gt;</CODE
>) with four-argument <b class="emphasis.bold">select</B
> is asking for trouble.  Use <a class="xref" href="ch03_166.htm#PERL2-CMD-SYSREAD" title="sysread"><b class="xref.cmd">sysread</B
></A
> instead.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_134.htm#PERL2-CMD-SELECT-OUT" title="3.2.134 select (output filehandle)"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.134 select (output filehandle)" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_136.htm#PERL2-CMD-SEMCTL" title="3.2.136 semctl"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.136 semctl" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.2.134 select (output filehandle)</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.2.136 semctl</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
