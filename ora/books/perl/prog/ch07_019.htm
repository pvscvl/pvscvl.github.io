<html><head>
<title>[Chapter 7] 7.2.19 ExtUtils::Manifest&nbsp;- Utilities to Write and Check a MANIFEST File</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T02:02:10Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_02.htm" title="7.2 Library Modules"><link rel="prev" href="ch07_018.htm#PERL2-CH-7-SECT-1.19" title="7.2.18 ExtUtils::MakeMaker&nbsp;- Create a Makefile for a Perl Extension"><link rel="next" href="ch07_020.htm#AUTOID-21783" title="7.2.20 ExtUtils::Miniperl&nbsp;- Write the C Code for perlmain.c"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_018.htm#PERL2-CH-7-SECT-1.19" title="7.2.18 ExtUtils::MakeMaker&nbsp;- Create a Makefile for a Perl Extension"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.18 ExtUtils::MakeMaker&nbsp;- Create a Makefile for a Perl Extension" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch07_01.htm" title="7. The Standard Perl Library">Chapter 7<br>The Standard Perl Library</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_020.htm#AUTOID-21783" title="7.2.20 ExtUtils::Miniperl&nbsp;- Write the C Code for perlmain.c"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.20 ExtUtils::Miniperl&nbsp;- Write the C Code for perlmain.c" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="AUTOID-21636">7.2.19 ExtUtils::Manifest&nbsp;- Utilities to Write and Check a
MANIFEST File</A
></H3
><pre class="programlisting">require ExtUtils::Manifest;

ExtUtils::Manifest::mkmanifest();
ExtUtils::Manifest::manicheck();
ExtUtils::Manifest::filecheck();
ExtUtils::Manifest::fullcheck();
ExtUtils::Manifest::skipcheck();
ExtUtild::Manifest::manifind();
ExtUtils::Manifest::maniread($file);
ExtUtils::Manifest::manicopy($read, $target, $how);</PRE
><p class="para"><a class="indexterm" name="CH07.MANIF1"></A
><a class="indexterm" name="CH07.MANIF2"></A
><a class="indexterm" name="CH07.MANIF3"></A
><a class="indexterm" name="CH07.MANIF4"></A
>These routines automate the maintenance and use of a <em class="emphasis">MANIFEST</EM
>
file.  A <em class="emphasis">MANIFEST</EM
> file is essentially just a list of filenames,
one per line, with an optional comment on each line, separated by
whitespace (usually one or more tabs).  The idea is simply that you can
extract the filenames by saying:</P
><pre class="programlisting">awk '{print $1}' MANIFEST</PRE
><p class="para"><a class="indexterm" name="AUTOID-21654"></A
><code class="literal">mkmanifest()</CODE
> writes the names of all files in and below the
current directory to a file named in the global variable
<code class="literal">$ExtUtils::Manifest::MANIFEST</CODE
> (which defaults to <em class="emphasis">MANIFEST</EM
>)
in the current directory.  As the counterpart to the <em class="emphasis">awk</EM
> command
above, it works much like:</P
><pre class="programlisting">find . -type f -print &gt; MANIFEST</PRE
><p class="para">except that it also checks the existing <em class="emphasis">MANIFEST</EM
> file (if any) and
copies over any comments that are found there.
Also, all filenames that match any regular expression in a file
<em class="emphasis">MANIFEST.SKIP</EM
> (if such a file exists) are ignored.</P
><p class="para"><a class="indexterm" name="AUTOID-21665"></A
><code class="literal">manicheck()</CODE
> checks whether all files listed in a <em class="emphasis">MANIFEST</EM
>
file in the current directory really do exist.</P
><p class="para"><a class="indexterm" name="AUTOID-21670"></A
><code class="literal">filecheck()</CODE
> finds files below the current directory that are not
mentioned in the <em class="emphasis">MANIFEST</EM
> file.  An optional <em class="emphasis">MANIFEST.SKIP</EM
>
file will be consulted, and any filename matching a regular expression
in such a file will not be reported as missing in the <em class="emphasis">MANIFEST</EM
> file.</P
><p class="para"><a class="indexterm" name="AUTOID-21677"></A
><code class="literal">fullcheck()</CODE
> does both a <code class="literal">manicheck()</CODE
> and a <code class="literal">filecheck()</CODE
>.</P
><p class="para"><a class="indexterm" name="AUTOID-21683"></A
><code class="literal">skipcheck()</CODE
> lists all files that are skipped due to your
<em class="emphasis">MANIFEST.SKIP</EM
> file.</P
><p class="para"><a class="indexterm" name="AUTOID-21688"></A
><code class="literal">manifind()</CODE
> returns a hash reference.  The keys of the hash are the
files found below the current directory.  The values are null strings,
representing all the <em class="emphasis">MANIFEST</EM
> comments that aren't there.</P
><p class="para"><a class="indexterm" name="AUTOID-21693"></A
><code class="literal">maniread($file)</CODE
> reads a named <em class="emphasis">MANIFEST</EM
> file (defaults to
<em class="emphasis">MANIFEST</EM
> in the current directory) and returns a hash reference,
the keys of which are the filenames, and the values of which are the
comments that <em class="emphasis">are</EM
> there.  Er, which may be null if the
comments aren't there....</P
><p class="para"><a class="indexterm" name="AUTOID-21700"></A
><code class="literal">manicopy($read, $target, $how)</CODE
> copies the files that are the
keys in the hash <code class="literal">%$read</CODE
> to the named target directory.  The
hash reference <code class="literal">$read</CODE
> is typically returned by the
<code class="literal">maniread()</CODE
> function.  <code class="literal">manicopy()</CODE
> is useful
for producing a directory tree identical to the intended distribution tree.  The
third parameter <code class="literal">$how</CODE
> can be used to specify a different
method of &quot;copying&quot;.  Valid values are &quot;<code class="literal">cp</CODE
>&quot;,
which actually copies the files, &quot;<code class="literal">ln</CODE
>&quot;, which
creates hard links, and &quot;<code class="literal">best</CODE
>&quot;, which mostly
links the files but copies any symbolic link to make a tree without any symbolic
link.  &quot;<code class="literal">best</CODE
>&quot; is the default, though it may not
be the best default.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="PERL2-CH-7-SECT-1.30">7.2.19.1 Ignoring files</A
></H4
><p class="para">The <em class="emphasis">MANIFEST.SKIP</EM
> file may contain regular expressions of
files that should be ignored by <code class="literal">mkmanifest()</CODE
> and
<code class="literal">filecheck()</CODE
>.  The regular expressions should appear one on
each line.  A typical example:</P
><pre class="programlisting">\bRCS\b
^MANIFEST\.
(?i)^makefile$
~$
\.html$
\.old$
^blib/
^MakeMaker-\d</PRE
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PERL2-CH-7-SECT-1.31">7.2.19.2 Exportability</A
></H4
><p class="para"><code class="literal">mkmanifest()</CODE
>, <code class="literal">manicheck()</CODE
>, <code class="literal">filecheck()</CODE
>, <code class="literal">fullcheck()</CODE
>,
<code class="literal">maniread()</CODE
>, and <code class="literal">manicopy()</CODE
> are exportable.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PERL2-CH-7-SECT-1.32">7.2.19.3 Global variables</A
></H4
><p class="para"><code class="literal">$ExtUtils::Manifest::MANIFEST</CODE
> defaults to <code class="literal">MANIFEST</CODE
>.  Changing it
results in both a different <em class="emphasis">MANIFEST</EM
> and a different
<em class="emphasis">MANIFEST.SKIP</EM
> file.  This is useful if you want to maintain
different distributions for different audiences (say a user version
and a developer version including RCS).</P
><p class="para"><code class="literal">$ExtUtils::Manifest::Quiet</CODE
> defaults to 0.  You can set it to a true
value to get all the functions to shutup already.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PERL2-CH-7-SECT-1.33">7.2.19.4 Diagnostics</A
></H4
><p class="para">All diagnostic output is sent to <code class="literal">STDERR</CODE
>.</P
><dl class="variablelist"><dt class="term"><code class="literal">Not in MANIFEST:</CODE
> <code class="replaceable"><i>file</I
></CODE
></DT
><dd class="listitem"><p class="para">A file excluded by a regular expression in <em class="emphasis">MANIFEST.SKIP</EM
> was
missing from the <em class="emphasis">MANIFEST</EM
> file.</P
></DD
><dt class="term"><code class="literal">No such file:</CODE
> <code class="replaceable"><i>file</I
></CODE
></DT
><dd class="listitem"><p class="para">A file mentioned in a <em class="emphasis">MANIFEST</EM
> file does not
exist.</P
></DD
><dt class="term"><code class="literal">MANIFEST:</CODE
> <em class="emphasis">$!</EM
></DT
><dd class="listitem"><p class="para">The <em class="emphasis">MANIFEST</EM
> file could not be opened.</P
></DD
><dt class="term"><code class="literal">Added to MANIFEST:</CODE
> <code class="replaceable"><i>file</I
></CODE
></DT
><dd class="listitem"><p class="para">Reported by <code class="literal">mkmanifest()</CODE
> if <code class="literal">$Verbose</CODE
> is set and a file is added
to <em class="emphasis">MANIFEST</EM
>. <code class="literal">$Verbose</CODE
> is set to 1 by default.</P
></DD
></DL
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PERL2-CH-7-SECT-1.34">7.2.19.5 See also</A
></H4
><p class="para">The <em class="emphasis">ExtUtils::MakeMaker</EM
> library module generates a <em class="emphasis">Makefile</EM
> with
handy targets for most of this functionality.</P
><a class="indexterm" name="AUTOID-21779"></A
><a class="indexterm" name="AUTOID-21780"></A
><a class="indexterm" name="AUTOID-21781"></A
><a class="indexterm" name="AUTOID-21782"></A
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_018.htm#PERL2-CH-7-SECT-1.19" title="7.2.18 ExtUtils::MakeMaker&nbsp;- Create a Makefile for a Perl Extension"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.18 ExtUtils::MakeMaker&nbsp;- Create a Makefile for a Perl Extension" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_020.htm#AUTOID-21783" title="7.2.20 ExtUtils::Miniperl&nbsp;- Write the C Code for perlmain.c"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.20 ExtUtils::Miniperl&nbsp;- Write the C Code for perlmain.c" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.2.18 ExtUtils::MakeMaker&nbsp;- Create a Makefile for a Perl Extension</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.2.20 ExtUtils::Miniperl&nbsp;- Write the C Code for perlmain.c</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
