<html><head>
<title>[Chapter 7] 7.2.61 Symbol&nbsp;- Generate Anonymous Globs; Qualify Variable Names</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T02:04:11Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_02.htm" title="7.2 Library Modules"><link rel="prev" href="ch07_060.htm#AUTOID-26849" title="7.2.60 subs&nbsp;- Predeclare Subroutine Names"><link rel="next" href="ch07_062.htm#AUTOID-26896" title="7.2.62 Sys::Hostname&nbsp;- Try Every Conceivable Way to Get Hostname"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_060.htm#AUTOID-26849" title="7.2.60 subs&nbsp;- Predeclare Subroutine Names"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.60 subs&nbsp;- Predeclare Subroutine Names" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch07_01.htm" title="7. The Standard Perl Library">Chapter 7<br>The Standard Perl Library</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_062.htm#AUTOID-26896" title="7.2.62 Sys::Hostname&nbsp;- Try Every Conceivable Way to Get Hostname"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.62 Sys::Hostname&nbsp;- Try Every Conceivable Way to Get Hostname" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="AUTOID-26864">7.2.61 Symbol&nbsp;- Generate Anonymous Globs; Qualify Variable Names</A
></H3
><pre class="programlisting">use Symbol;

$sym = gensym;
open($sym, &quot;<code class="replaceable"><i>filename</I
></CODE
>&quot;);
$_ = &lt;$sym&gt;;

ungensym $sym;      # no effect

print qualify(&quot;x&quot;);              # &quot;main::x&quot;
print qualify(&quot;x&quot;, &quot;FOO&quot;);       # &quot;FOO::x&quot;
print qualify(&quot;BAR::x&quot;);         # &quot;BAR::x&quot;
print qualify(&quot;BAR::x&quot;, &quot;FOO&quot;);  # &quot;BAR::x&quot;
print qualify(&quot;STDOUT&quot;, &quot;FOO&quot;);  # &quot;main::STDOUT&quot; (global)
print qualify(\*x);              # \*x--for example: GLOB(0x99530)
print qualify(\*x, &quot;FOO&quot;);       # \*x--for example: GLOB(0x99530)</PRE
><p class="para"><a class="indexterm" name="AUTOID-26869"></A
><a class="indexterm" name="AUTOID-26871"></A
><a class="indexterm" name="AUTOID-26873"></A
><a class="indexterm" name="AUTOID-26875"></A
><a class="indexterm" name="AUTOID-26878"></A
><code class="literal">gensym()</CODE
> creates an anonymous glob and returns a reference
to it.  Such a glob reference can be used as a filehandle or directory
handle.</P
><p class="para">For backward compatibility with older implementations that didn't
support anonymous globs, <code class="literal">ungensym()</CODE
> is also provided.
But it doesn't do anything.</P
><p class="para"><a class="indexterm" name="AUTOID-26885"></A
><code class="literal">qualify()</CODE
> turns unqualified symbol names into qualified
variable names (for example, <code class="literal">myvar</CODE
> becomes
<code class="literal">MyPackage::myvar</CODE
>).  If it is given a second parameter,
<code class="literal">qualify()</CODE
> uses it as the default package; otherwise, it uses
the package of its caller.  Regardless, global variable names (for example,
<code class="literal">STDOUT</CODE
>, <code class="literal">%ENV</CODE
>, <code class="literal">%SIG</CODE
>) are
always qualified with <code class="literal">main::</CODE
>.</P
><p class="para">Qualification applies only to symbol names (strings).  References are
left unchanged under the assumption that they are glob references,
which are qualified by their nature.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_060.htm#AUTOID-26849" title="7.2.60 subs&nbsp;- Predeclare Subroutine Names"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.60 subs&nbsp;- Predeclare Subroutine Names" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_062.htm#AUTOID-26896" title="7.2.62 Sys::Hostname&nbsp;- Try Every Conceivable Way to Get Hostname"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.62 Sys::Hostname&nbsp;- Try Every Conceivable Way to Get Hostname" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.2.60 subs&nbsp;- Predeclare Subroutine Names</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.2.62 Sys::Hostname&nbsp;- Try Every Conceivable Way to Get Hostname</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
