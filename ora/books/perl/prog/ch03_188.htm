<html><head>
<title>[Chapter 3] 3.2.188 vec</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:56:31Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_02.htm" title="3.2 Perl Functions in Alphabetical Order"><link rel="prev" href="ch03_187.htm#PERL2-CMD-VALUES" title="3.2.187 values"><link rel="next" href="ch03_189.htm#PERL2-CMD-WAIT" title="3.2.189 wait"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_187.htm#PERL2-CMD-VALUES" title="3.2.187 values"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.187 values" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch03_01.htm" title="3. Functions">Chapter 3<br>Functions</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_189.htm#PERL2-CMD-WAIT" title="3.2.189 wait"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.189 wait" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="PERL2-CMD-VEC">3.2.188 vec</A
></H3
><pre class="programlisting">vec <code class="replaceable"><i>EXPR</I
></CODE
>, <code class="replaceable"><i>OFFSET</I
></CODE
>, <code class="replaceable"><i>BITS</I
></CODE
></PRE
><p class="para"><a class="indexterm" name="AUTOID-14210"></A
><a class="indexterm" name="AUTOID-14212"></A
><a class="indexterm" name="AUTOID-14214"></A
><a class="indexterm" name="AUTOID-14217"></A
>This function treats a string (the value of <code class="replaceable"><i>EXPR</I
></CODE
>) as a vector of
unsigned integers, and returns the value of the element specified by
<code class="replaceable"><i>OFFSET</I
></CODE
> and <code class="replaceable"><i>BITS</I
></CODE
>.
The function may also be assigned to, which causes the element to be
modified.
The purpose of the function is to provide very compact storage of lists of
small integers.  The integers may be very small&nbsp;- vectors can hold
numbers that are as small as one bit, resulting in a bitstring.</P
><p class="para">The <code class="replaceable"><i>OFFSET</I
></CODE
> specifies how many elements to skip over to find the one you
want.  <code class="replaceable"><i>BITS</I
></CODE
> is the number of bits per element in the vector, so each
element can contain an unsigned integer in the range
<code class="literal">0..(2**</CODE
><code class="replaceable"><i>BITS</I
></CODE
>)<code class="literal">-1</CODE
>.
<code class="replaceable"><i>BITS</I
></CODE
> must be one of <code class="literal">1</CODE
>, <code class="literal">2</CODE
>, <code class="literal">4</CODE
>, <code class="literal">8</CODE
>,
<code class="literal">16</CODE
>, or
<code class="literal">32</CODE
>.  As many elements as possible are packed into each byte, and
the ordering is such that <code class="literal">vec($vectorstring,0,1)</CODE
> is guaranteed
to go into the lowest bit of the first byte of the string.  To find
out the position of the byte in which an element is going to be put,
you have to multiply the <code class="replaceable"><i>OFFSET</I
></CODE
> by the number of elements per
byte.  When <code class="replaceable"><i>BITS</I
></CODE
> is 1, there are eight elements per byte.  When
<code class="replaceable"><i>BITS</I
></CODE
> is 2,
there are four elements per byte.  When <code class="replaceable"><i>BITS</I
></CODE
>
is 4, there are two elements (called nybbles)
per byte.  And so on.</P
><p class="para">Regardless of whether your machine is big-endian or little-endian,
<code class="literal">vec($foo, 0, 8)</CODE
> always refers to the first byte of string
<code class="literal">$foo</CODE
>.  See <b class="emphasis.bold">select</B
> for
examples of bitmaps generated with <a class="xref" href="ch03_188.htm#PERL2-CMD-VEC" title="vec"><b class="xref.cmd">vec</B
></A
>.</P
><p class="para">Vectors created with <a class="xref" href="ch03_188.htm#PERL2-CMD-VEC" title="vec"><b class="xref.cmd">vec</B
></A
> can also be
manipulated with the logical operators <code class="literal">|</CODE
>,
<code class="literal">&amp;</CODE
>, <code class="literal">^</CODE
>, and <code class="literal">~</CODE
>, which
will assume a bit vector operation is desired when the operands are strings.</P
><p class="para">A bit vector (<code class="replaceable"><i>BITS == 1</I
></CODE
>) can be translated to or from
a string of 1s and 0s by supplying a <code class="literal">b*</CODE
> template to <a class="xref" href="ch03_182.htm#PERL2-CMD-UNPACK" title="unpack"><b class="xref.cmd">unpack</B
></A
> or <a class="xref" href="ch03_105.htm#PERL2-CMD-PACK" title="pack"><b class="xref.cmd">pack</B
></A
>.  Similarly, a vector of nybbles (<code class="replaceable"><i>BITS ==
4</I
></CODE
>) can be translated with an <code class="literal">h*</CODE
> template.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_187.htm#PERL2-CMD-VALUES" title="3.2.187 values"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.187 values" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_189.htm#PERL2-CMD-WAIT" title="3.2.189 wait"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.189 wait" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.2.187 values</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.2.189 wait</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
