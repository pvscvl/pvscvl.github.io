<html><head>
<title>[Chapter 3] 3.2.167 system</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:55:16Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_02.htm" title="3.2 Perl Functions in Alphabetical Order"><link rel="prev" href="ch03_166.htm#PERL2-CMD-SYSREAD" title="3.2.166 sysread"><link rel="next" href="ch03_168.htm#PERL2-CMD-SYSWRITE" title="3.2.168 syswrite"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_166.htm#PERL2-CMD-SYSREAD" title="3.2.166 sysread"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.166 sysread" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch03_01.htm" title="3. Functions">Chapter 3<br>Functions</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_168.htm#PERL2-CMD-SYSWRITE" title="3.2.168 syswrite"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.168 syswrite" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="PERL2-CMD-SYSTEM">3.2.167 system</A
></H3
><pre class="programlisting">system <code class="replaceable"><i>LIST</I
></CODE
></PRE
><p class="para"><a class="indexterm" name="AUTOID-13715"></A
><a class="indexterm" name="AUTOID-13717"></A
><a class="indexterm" name="AUTOID-13720"></A
><a class="indexterm" name="AUTOID-13723"></A
>This function executes any program on the system for you.  It does exactly the
same thing as <code class="literal">exec</CODE
> <code class="replaceable"><i>LIST</I
></CODE
> except
that it does a <a class="xref" href="ch03_040.htm#PERL2-CMD-FORK" title="fork"><b class="xref.cmd">fork</B
></A
> first, and then, after
the exec, it waits for the exec'd program to complete.  That is (in non-UNIX
terms), it runs the program for you, and returns when it's done, unlike <a class="xref" href="ch03_033.htm#PERL2-CMD-EXEC" title="exec"><b class="xref.cmd">exec</B
></A
>, which never returns (if it succeeds).  Note
that argument processing varies depending on the number of arguments, as
described for <a class="xref" href="ch03_033.htm#PERL2-CMD-EXEC" title="exec"><b class="xref.cmd">exec</B
></A
>.  The return value is the
exit status of the program as returned by the
<em class="emphasis">wait</EM
>(2) call.  To get the actual exit value, divide
by 256.  (The lower 8 bits are set if the process died from a signal.)  See
<a class="xref" href="ch03_033.htm#PERL2-CMD-EXEC" title="exec"><b class="xref.cmd">exec</B
></A
>.</P
><p class="para">Because <a class="xref" href="ch03_167.htm#PERL2-CMD-SYSTEM" title="system"><b class="xref.cmd">system</B
></A
> and backticks block
<code class="literal">SIGINT</CODE
> and <code class="literal">SIGQUIT</CODE
>, killing the program
they're running with one of those signals doesn't actually interrupt your
program.</P
><pre class="programlisting">@args = (&quot;command&quot;, &quot;arg1&quot;, &quot;arg2&quot;);
system(@args) == 0 
     or die &quot;system @args failed: $?&quot;</PRE
><p class="para">Here's a more elaborate example of analyzing the return value from <a class="xref" href="ch03_167.htm#PERL2-CMD-SYSTEM" title="system"><b class="xref.cmd">system</B
></A
> on a UNIX system to check for all
possibilities, including for signals and coredumps.</P
><pre class="programlisting">$rc = 0xffff &amp; system @args;
printf &quot;system(%s) returned %#04x: &quot;, &quot;@args&quot;, $rc;
if ($rc == 0) {
    print &quot;ran with normal exit\n&quot;;
} 
elsif ($rc == 0xff00) {
    print &quot;command failed: $!\n&quot;;
} 
elsif (($rc &amp; 0xff) == 0) {
    $rc &gt;&gt;= 8;
    print &quot;ran with non-zero exit status $rc\n&quot;;
} 
else {
    print &quot;ran with &quot;;
    if ($rc &amp;   0x80) {
        $rc &amp;= ~0x80;
        print &quot;coredump from &quot;;
    } 
    print &quot;signal $rc\n&quot;
} 
$ok = ($rc == 0);</PRE
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_166.htm#PERL2-CMD-SYSREAD" title="3.2.166 sysread"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.166 sysread" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_168.htm#PERL2-CMD-SYSWRITE" title="3.2.168 syswrite"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.168 syswrite" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.2.166 sysread</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.2.168 syswrite</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
