<html><head>
<title>[Chapter 3] 3.2.110 print</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:52:28Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_02.htm" title="3.2 Perl Functions in Alphabetical Order"><link rel="prev" href="ch03_109.htm#PERL2-CMD-POS" title="3.2.109 pos"><link rel="next" href="ch03_111.htm#PERL2-CMD-PRINTF" title="3.2.111 printf"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_109.htm#PERL2-CMD-POS" title="3.2.109 pos"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.109 pos" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch03_01.htm" title="3. Functions">Chapter 3<br>Functions</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_111.htm#PERL2-CMD-PRINTF" title="3.2.111 printf"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.111 printf" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="PERL2-CMD-PRINT">3.2.110 print</A
></H3
><pre class="programlisting">print <code class="replaceable"><i>FILEHANDLE</I
></CODE
> <code class="replaceable"><i>LIST</I
></CODE
>
print <code class="replaceable"><i>LIST</I
></CODE
>
print</PRE
><p class="para"><a class="indexterm" name="AUTOID-11914"></A
><a class="indexterm" name="AUTOID-11917"></A
><a class="indexterm" name="AUTOID-11919"></A
><a class="indexterm" name="AUTOID-11922"></A
>This function prints a string or a comma-separated list of strings.
The function returns 1 if successful, 0 otherwise.  <code class="replaceable"><i>FILEHANDLE</I
></CODE
> may be
a scalar variable name (unsubscripted), in which case the variable
contains either the name of the actual filehandle or a reference to
a filehandle object from one of the object-oriented filehandle packages.
<code class="replaceable"><i>FILEHANDLE</I
></CODE
> may also be a block that returns either kind of value:</P
><pre class="programlisting">print { $OK ? &quot;STDOUT&quot; : &quot;STDERR&quot; } &quot;stuff\n&quot;;
print { $iohandle[$i] } &quot;stuff\n&quot;;</PRE
><p class="para">Note that if <code class="replaceable"><i>FILEHANDLE</I
></CODE
> is a variable and the next
token is a term, it may be misinterpreted as an operator unless you
interpose a <b class="emphasis.bold">+</B
> or put parentheses around the arguments.
For example:</P
><pre class="programlisting">print $a - 2;   # prints $a - 2 to default filehandle (usually STDOUT)
print $a (- 2); # prints -2 to filehandle specified in $a
print $a -2;    # ditto (weird parsing rules :-)</PRE
><p class="para"><a class="indexterm" name="AUTOID-11933"></A
>If <code class="replaceable"><i>FILEHANDLE</I
></CODE
> is omitted, the function prints to the currently
selected output filehandle, initially <code class="literal">STDOUT</CODE
>.
To set the default output filehandle to something other than
<code class="literal">STDOUT</CODE
> use the <code class="literal">select</CODE
>(<code class="replaceable"><i>FILEHANDLE</I
></CODE
>) operation.[<a class="footnote" href="#AUTOID-11940">7</A
>]
If <code class="replaceable"><i>LIST</I
></CODE
> is also omitted, prints <b class="emphasis.bold">$_</B
>.  Note that, because
<a class="xref" href="ch03_110.htm#PERL2-CMD-PRINT" title="print"><b class="xref.cmd">print</B
></A
> takes a <code class="replaceable"><i>LIST</I
></CODE
>, anything in the <code class="replaceable"><i>LIST</I
></CODE
>
is evaluated in
list context, and any subroutine that you call will likely have one or more
of its own internal expressions evaluated in list context.
Thus, when you say:</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="AUTOID-11940">[7]</A
> Thus, <code class="literal">STDOUT</CODE
> isn't really the default filehandle for
<a class="xref" href="ch03_110.htm#PERL2-CMD-PRINT" title="print"><b class="xref.cmd">print</B
></A
>.  It's merely the default default filehandle.</P
></DIV
></BLOCKQUOTE
><pre class="programlisting">print OUT &lt;STDIN&gt;;</PRE
><p class="para">it is not going to print out the next line from standard input, but all the rest
of the lines from standard input up to end-of-file, since that's what
<code class="literal">&lt;STDIN&gt;</CODE
> returns in list context.  Also, remembering the
if-it-looks-like-a-function-it-is-a-function rule, be careful not to follow the
<a class="xref" href="ch03_110.htm#PERL2-CMD-PRINT" title="print"><b class="xref.cmd">print</B
></A
> keyword with a left parenthesis unless
you want the corresponding right parenthesis to terminate the arguments to the
<a class="xref" href="ch03_110.htm#PERL2-CMD-PRINT" title="print"><b class="xref.cmd">print</B
></A
>&nbsp;- interpose a <b class="emphasis.bold">+</B
> or put parens around all the arguments:</P
><pre class="programlisting">print (1+2)*3, &quot;\n&quot;;            # WRONG
print +(1+2)*3, &quot;\n&quot;;           # ok
print ((1+2)*3, &quot;\n&quot;);          # ok</PRE
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_109.htm#PERL2-CMD-POS" title="3.2.109 pos"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.109 pos" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_111.htm#PERL2-CMD-PRINTF" title="3.2.111 printf"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.111 printf" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.2.109 pos</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.2.111 printf</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
