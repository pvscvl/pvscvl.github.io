<html><head>
<title>[Chapter 3] 3.2.134 select (output filehandle)</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:53:43Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_02.htm" title="3.2 Perl Functions in Alphabetical Order"><link rel="prev" href="ch03_133.htm#PERL2-CMD-SEEKDIR" title="3.2.133 seekdir"><link rel="next" href="ch03_135.htm#PERL2-CMD-SELECT" title="3.2.135 select (ready file descriptors)"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name="srchmap"index.html><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_133.htm#PERL2-CMD-SEEKDIR" title="3.2.133 seekdir"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.133 seekdir" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch03_01.htm" title="3. Functions">Chapter 3<br>Functions</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_135.htm#PERL2-CMD-SELECT" title="3.2.135 select (ready file descriptors)"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.135 select (ready file descriptors)" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="PERL2-CMD-SELECT-OUT">3.2.134 select (output filehandle)</A
></H3
><pre class="programlisting">select <code class="replaceable"><i>FILEHANDLE</I
></CODE
>
select</PRE
><p class="para"><a class="indexterm" name="AUTOID-12521"></A
><a class="indexterm" name="AUTOID-12523"></A
><a class="indexterm" name="AUTOID-12526"></A
>For historical reasons, there are two <b class="emphasis.bold">select</B
>
operators that are totally unrelated to each other.  See the next section for
the other one.  This <b class="emphasis.bold">select</B
> operator returns
the currently selected output filehandle, and if
<code class="replaceable"><i>FILEHANDLE</I
></CODE
> is supplied, sets the current default
filehandle for output.  This has two effects: first, a <a class="xref" href="ch03_193.htm#PERL2-CMD-WRITE" title="write"><b class="xref.cmd">write</B
></A
> or a <a class="xref" href="ch03_110.htm#PERL2-CMD-PRINT" title="print"><b class="xref.cmd">print</B
></A
>
without a filehandle will default to this <code class="replaceable"><i>FILEHANDLE</I
></CODE
>.
Second, special variables related to output will refer to this output
filehandle.  For example, if you have to set the same top-of-form format for
more than one output filehandle, you might do the following:<a class="indexterm" name="AUTOID-12535"></A
></P
><pre class="programlisting">select REPORT1;
$^ = 'MyTop';
select REPORT2;
$^ = 'MyTop';</PRE
><p class="para">But note that this leaves <code class="literal">REPORT2</CODE
> as the currently selected
filehandle.  This could be construed as antisocial, since it could really foul
up some other routine's <a class="xref" href="ch03_110.htm#PERL2-CMD-PRINT" title="print"><b class="xref.cmd">print</B
></A
> or <a class="xref" href="ch03_193.htm#PERL2-CMD-WRITE" title="write"><b class="xref.cmd">write</B
></A
> statements.  Properly written library
routines leave the currently selected filehandle the same on exit as it was upon
entry. To support this, <code class="replaceable"><i>FILEHANDLE</I
></CODE
> may be an
expression whose value gives the name of the actual filehandle.  Thus, you can
save and restore the currently selected filehandle:</P
><pre class="programlisting">my $oldfh = select STDERR; $| = 1; select $oldfh;</PRE
><p class="para">or (being bizarre and obscure):</P
><pre class="programlisting">select((select(STDERR), $| = 1)[0])</PRE
><p class="para">This example works by building a list consisting of the returned value from
<code class="literal">select(STDERR)</CODE
> (which selects <code class="literal">STDERR</CODE
> as a
side effect) and <code class="literal">$| = 1</CODE
> (which is always 1), but sets
autoflushing on the now-selected <code class="literal">STDERR</CODE
> as a side effect.
The first element of that list (the previously selected filehandle) is now used
as an argument to the outer <b class="emphasis.bold">select</B
>.
Bizarre, right?  That's what you get for knowing just enough Lisp to be
dangerous.</P
><p class="para">However, now that we've explained all that, we should point out that you rarely
need to use this form of <b class="emphasis.bold">select</B
> nowadays,
because most of the special variables you would want to set have object-oriented
wrapper methods to do it for you.  So instead of setting <code class="literal">$|</CODE
>
directly, you might say:</P
><pre class="programlisting">use FileHandle;
STDOUT-&gt;autoflush(1);</PRE
><p class="para">And the earlier format example might be coded as:</P
><pre class="programlisting">use FileHandle;
REPORT1-&gt;format_top_name(&quot;MyTop&quot;);
REPORT2-&gt;format_top_name(&quot;MyTop&quot;);</PRE
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_133.htm#PERL2-CMD-SEEKDIR" title="3.2.133 seekdir"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.133 seekdir" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_135.htm#PERL2-CMD-SELECT" title="3.2.135 select (ready file descriptors)"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.135 select (ready file descriptors)" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.2.133 seekdir</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.2.135 select (ready file descriptors)</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
