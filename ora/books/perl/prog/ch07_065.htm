<html><head>
<title>[Chapter 7] 7.2.65 Term::Complete&nbsp;- Word Completion Module</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T02:04:23Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_02.htm" title="7.2 Library Modules"><link rel="prev" href="ch07_064.htm#AUTOID-26970" title="7.2.64 Term::Cap&nbsp;- Terminal Capabilities Interface"><link rel="next" href="ch07_066.htm#AUTOID-27138" title="7.2.66 Test::Harness&nbsp;- Run Perl Standard Test Scripts with Statistics"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_064.htm#AUTOID-26970" title="7.2.64 Term::Cap&nbsp;- Terminal Capabilities Interface"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.64 Term::Cap&nbsp;- Terminal Capabilities Interface" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch07_01.htm" title="7. The Standard Perl Library">Chapter 7<br>The Standard Perl Library</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_066.htm#AUTOID-27138" title="7.2.66 Test::Harness&nbsp;- Run Perl Standard Test Scripts with Statistics"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.66 Test::Harness&nbsp;- Run Perl Standard Test Scripts with Statistics" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="AUTOID-27083">7.2.65 Term::Complete&nbsp;- Word Completion Module</A
></H3
><pre class="programlisting">use Term::Complete;

$input = Complete('prompt_string', \@completion_list);
$input = Complete('prompt_string', @completion_list);</PRE
><p class="para"><a class="indexterm" name="AUTOID-27087"></A
><a class="indexterm" name="AUTOID-27089"></A
><a class="indexterm" name="AUTOID-27091"></A
>The <code class="literal">Complete()</CODE
> routine sends the indicated prompt
string to the currently selected filehandle, reads the user's response,
and places the response in <code class="literal">$input</CODE
>.  What the user types is read
one character at a time, and certain characters result in special
processing as follows:</P
><dl class="variablelist"><dt class="term">TAB</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-27100"></A
>The tab character causes <code class="literal">Complete()</CODE
> to match what the user has
typed so far against the list of strings in <code class="literal">@completion_list</CODE
>.  If
the user's partial input uniquely matches one of these strings, then the
rest of the matched string is output.  However, input is still not finished
until the user presses the return key.  If the user's partial input does not
uniquely match one string in <code class="literal">@completion_list</CODE
> when the tab
character is pressed, then the partial input remains unchanged and the
bell character is output.</P
></DD
><dt class="term">CTRL-D</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-27110"></A
>If the user types CTRL-D, the current matches between the user's partial
input string and the completion list are printed out.  If the partial input
string is null, then the entire completion list is printed.  In any case,
the prompt string is then reissued, along with the partial input.

You can substitute a different character for CTRL-D by defining
<code class="literal">$Term::Complete::complete</CODE
>.  For example:</P
><pre class="programlisting">$Term::Complete::complete = &quot;\001&quot;;  # use ctrl-a instead of ctrl-d</PRE
></DD
><dt class="term">CTRL-U</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-27118"></A
>Typing CTRL-U erases any partial input.  You can substitute a different
character for CTRL-U by defining <code class="literal">$Term::Complete::kill</CODE
>.</P
></DD
><dt class="term">DEL, BS</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-27125"></A
><a class="indexterm" name="AUTOID-27128"></A
>The delete and backspace characters both erase one character from the
partial input string.  You can redefine them by assigning a different
character value to <code class="literal">$Term::Complete::erase1</CODE
> and
<code class="literal">$Term::Complete::erase2</CODE
>.</P
></DD
></DL
><p class="para">The user is not prevented from providing input that differs from all
strings in the completion list, or from adding to input that has been
completed from the list.  The final input (determined when the user
presses the return key) is the string returned by <code class="literal">Complete()</CODE
>.</P
><p class="para">The TTY driver is put into raw mode using the system command
<code class="literal">stty raw -echo</CODE
> and restored using <code class="literal">stty -raw echo</CODE
>.
When <code class="literal">Complete()</CODE
> is called multiple times, it offers
the user's immediately previous response as the default response to each prompt.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_064.htm#AUTOID-26970" title="7.2.64 Term::Cap&nbsp;- Terminal Capabilities Interface"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.64 Term::Cap&nbsp;- Terminal Capabilities Interface" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_066.htm#AUTOID-27138" title="7.2.66 Test::Harness&nbsp;- Run Perl Standard Test Scripts with Statistics"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.66 Test::Harness&nbsp;- Run Perl Standard Test Scripts with Statistics" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.2.64 Term::Cap&nbsp;- Terminal Capabilities Interface</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.2.66 Test::Harness&nbsp;- Run Perl Standard Test Scripts with Statistics</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
