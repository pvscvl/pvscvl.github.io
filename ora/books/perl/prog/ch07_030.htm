<html><head>
<title>[Chapter 7] 7.2.30 File::Find&nbsp;- Traverse a File Tree</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T02:02:27Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_02.htm" title="7.2 Library Modules"><link rel="prev" href="ch07_029.htm#AUTOID-22378" title="7.2.29 File::Copy&nbsp;- Copy Files or Filehandles"><link rel="next" href="ch07_031.htm#AUTOID-22456" title="7.2.31 File::Path&nbsp;- Create or Remove a Series of Directories"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_029.htm#AUTOID-22378" title="7.2.29 File::Copy&nbsp;- Copy Files or Filehandles"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.29 File::Copy&nbsp;- Copy Files or Filehandles" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch07_01.htm" title="7. The Standard Perl Library">Chapter 7<br>The Standard Perl Library</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_031.htm#AUTOID-22456" title="7.2.31 File::Path&nbsp;- Create or Remove a Series of Directories"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.31 File::Path&nbsp;- Create or Remove a Series of Directories" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="AUTOID-22408">7.2.30 File::Find&nbsp;- Traverse a File Tree</A
></H3
><pre class="programlisting">use File::Find;
find(\&amp;wanted, '<code class="replaceable"><i>dir1</I
></CODE
>', '<code class="replaceable"><i>dir2</I
></CODE
>'...);
sub wanted { ... }

use File::Find;
finddepth(\&amp;wanted, '<code class="replaceable"><i>dir1</I
></CODE
>', '<code class="replaceable"><i>dir2</I
></CODE
>'...);  # traverse depth-first
sub wanted { ... }</PRE
><p class="para"><a class="indexterm" name="AUTOID-22416"></A
><a class="indexterm" name="AUTOID-22418"></A
><a class="indexterm" name="AUTOID-22420"></A
><code class="literal">find()</CODE
> is similar to the UNIX
<em class="emphasis">find</EM
>(1) command in that it traverses the specified
directories, performing whatever tests or other actions you request.  However,
these actions are given in the subroutine, <code class="literal">wanted()</CODE
>, which
you must define (but see <em class="emphasis">find2perl</EM
> below).  For example, to
print out the names of all executable files, you could define
<code class="literal">wanted()</CODE
> this way:</P
><pre class="programlisting">sub wanted {
    print &quot;$File::Find::name\n&quot; if -x;
}</PRE
><p class="para"><code class="literal">$File::Find::dir</CODE
> contains the current directory name, and
<b class="emphasis.bold">$_</B
> the current filename within that directory.
<code class="literal">$File::Find::name</CODE
> contains
<code class="literal">&quot;$File::Find::dir/$_&quot;</CODE
>.  You are <a class="xref" href="ch03_011.htm#PERL2-CMD-CHDIR" title="chdir"><b class="xref.cmd">chdir</B
></A
>ed to <code class="literal">$File::Find::dir</CODE
> when
<code class="literal">find()</CODE
> is called.  You can set
<code class="literal">$File::Find::prune</CODE
> to true in <code class="literal">wanted()</CODE
> in
order to prune the tree; that is, <code class="literal">find()</CODE
> will not descend
into any directory when <code class="literal">$File::Find::prune</CODE
> is set.</P
><p class="para">This library is primarily for use with the <em class="emphasis">find2perl</EM
>(1) command,
which is supplied with the standard Perl distribution and converts a
<em class="emphasis">find</EM
>(1) invocation to an appropriate <code class="literal">wanted()</CODE
> subroutine.
The command:</P
><pre class="programlisting">find2perl / -name .nfs\* -mtime +7 \
             -exec rm -f {} \; -o -fstype nfs -prune</PRE
><p class="para">produces something like:</P
><pre class="programlisting">sub wanted {
    /^\.nfs.*$/ &amp;&amp;
    (($dev, $ino, $mode, $nlink, $uid, $gid) = lstat($_)) &amp;&amp;
    int(-M _) &gt; 7 &amp;&amp;
    unlink($_)
    ||
    ($nlink || (($dev, $ino, $mode, $nlink, $uid, $gid) = lstat($_))) &amp;&amp;
    $dev &lt; 0 &amp;&amp;
    ($File::Find::prune = 1);
}</PRE
><p class="para">Set the variable <code class="literal">$File::Find::dont_use_nlink</CODE
> if
you're using the AFS.</P
><p class="para"><code class="literal">finddepth()</CODE
> is just like <code class="literal">find()</CODE
>, except that it does a
depth-first search.</P
><p class="para">Here's another interesting <code class="literal">wanted()</CODE
> function.  It will find all
symbolic links that don't resolve:</P
><pre class="programlisting">sub wanted {
    -l and not -e and print &quot;bogus link: $File::Find::name\n&quot;;
}</PRE
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_029.htm#AUTOID-22378" title="7.2.29 File::Copy&nbsp;- Copy Files or Filehandles"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.29 File::Copy&nbsp;- Copy Files or Filehandles" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_031.htm#AUTOID-22456" title="7.2.31 File::Path&nbsp;- Create or Remove a Series of Directories"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.31 File::Path&nbsp;- Create or Remove a Series of Directories" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.2.29 File::Copy&nbsp;- Copy Files or Filehandles</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.2.31 File::Path&nbsp;- Create or Remove a Series of Directories</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
