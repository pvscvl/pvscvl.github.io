<html><head>
<title>[Chapter 3] 3.2.131 scalar</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:53:38Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_02.htm" title="3.2 Perl Functions in Alphabetical Order"><link rel="prev" href="ch03_130.htm" title="3.2.130 s///"><link rel="next" href="ch03_132.htm#PERL2-CMD-SEEK" title="3.2.132 seek"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_130.htm" title="3.2.130 s///"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.130 s///" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch03_01.htm" title="3. Functions">Chapter 3<br>Functions</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_132.htm#PERL2-CMD-SEEK" title="3.2.132 seek"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.132 seek" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="PERL2-CMD-SCALAR">3.2.131 scalar</A
></H3
><pre class="programlisting">scalar <code class="replaceable"><i>EXPR</I
></CODE
></PRE
><p class="para"><a class="indexterm" name="AUTOID-12436"></A
><a class="indexterm" name="AUTOID-12438"></A
><a class="indexterm" name="AUTOID-12441"></A
>This pseudo-function may be used within a <code class="replaceable"><i>LIST</I
></CODE
> to force <code class="replaceable"><i>EXPR</I
></CODE
>
to be
evaluated in scalar context when evaluation in list context
would produce a different result.</P
><p class="para">For example:</P
><pre class="programlisting">local($nextvar) = scalar &lt;STDIN&gt;;</PRE
><p class="para">prevents <code class="literal">&lt;STDIN&gt;</CODE
> from reading all the lines from
standard input before doing the assignment, since assignment to a <b class="emphasis.bold">local</B
> list provides a list context.  (Without the use of
<a class="xref" href="ch03_131.htm#PERL2-CMD-SCALAR" title="scalar"><b class="xref.cmd">scalar</B
></A
> in this example, the first line from
<code class="literal">&lt;STDIN&gt;</CODE
> would still be assigned to
<code class="literal">$nextvar</CODE
>, but the subsequent lines would be read and thrown
away.  This is because the assignment is being made to a list&nbsp;- one that
happens to be able to receive only a single, scalar value.)</P
><p class="para">Of course, a simpler way with less typing would be to simply leave the
parentheses off, thereby changing the list context to a scalar one:</P
><pre class="programlisting">local $nextvar = &lt;STDIN&gt;;</PRE
><p class="para">Since a <a class="xref" href="ch03_110.htm#PERL2-CMD-PRINT" title="print"><b class="xref.cmd">print</B
></A
> function is a
<code class="replaceable"><i>LIST</I
></CODE
> operator, you have to say:</P
><pre class="programlisting">print &quot;Length is &quot;, scalar(@ARRAY), &quot;\n&quot;;</PRE
><p class="para">if you want the length of <code class="literal">@ARRAY</CODE
> to be printed out.</P
><p class="para">One never needs to force evaluation in a list context, because any operation
that wants a list already provides a list context to its list arguments for
free.  So there's no <b class="emphasis.bold">list</B
> function corresponding
to <a class="xref" href="ch03_131.htm#PERL2-CMD-SCALAR" title="scalar"><b class="xref.cmd">scalar</B
></A
>.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch03_130.htm" title="3.2.130 s///"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2.130 s///" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch03_132.htm#PERL2-CMD-SEEK" title="3.2.132 seek"><img src="../gifs/txtnexta.gif" alt="Next: 3.2.132 seek" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.2.130 s///</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.2.132 seek</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
