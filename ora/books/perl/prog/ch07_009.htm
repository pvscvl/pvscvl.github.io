<html><head>
<title>[Chapter 7] 7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T02:01:40Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_02.htm" title="7.2 Library Modules"><link rel="prev" href="ch07_008.htm#PERL2-CH-7-SECT-1.10" title="7.2.8 DB_File&nbsp;- Access to Berkeley DB"><link rel="next" href="ch07_010.htm#AUTOID-19607" title="7.2.10 diagnostics&nbsp;- Force Verbose Warning Diagnostics"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_008.htm#PERL2-CH-7-SECT-1.10" title="7.2.8 DB_File&nbsp;- Access to Berkeley DB"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.8 DB_File&nbsp;- Access to Berkeley DB" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch07_01.htm" title="7. The Standard Perl Library">Chapter 7<br>The Standard Perl Library</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_010.htm#AUTOID-19607" title="7.2.10 diagnostics&nbsp;- Force Verbose Warning Diagnostics"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.10 diagnostics&nbsp;- Force Verbose Warning Diagnostics" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="AUTOID-19560">7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module</A
></H3
><pre class="programlisting">use Devel::SelfStubber;

$modulename = &quot;Mystuff::Grok&quot;;  # no .pm suffix or slashes
$lib_dir = &quot;&quot;;                  # defaults to current directory
Devel::SelfStubber-&gt;stub($modulename, $lib_dir);   # stubs only

# to generate the whole module with stubs inserted correctly
use Devel::SelfStubber;
$Devel::SelfStubber::JUST_STUBS = 0;
Devel::SelfStubber-&gt;stub($modulename, $lib_dir);</PRE
><p class="para"><a class="indexterm" name="AUTOID-19564"></A
><a class="indexterm" name="AUTOID-19566"></A
><a class="indexterm" name="AUTOID-19568"></A
><a class="indexterm" name="AUTOID-19570"></A
><a class="indexterm" name="AUTOID-19572"></A
><a class="indexterm" name="AUTOID-19575"></A
>Devel::SelfStubber supports inherited, autoloaded methods by printing the stubs
you need to put in your module before the
<code class="literal">__DATA__</CODE
> token.  A subroutine stub looks like
this:</P
><pre class="programlisting">sub moo;</PRE
><p class="para">The stub ensures that if a method is called, it will get loaded.
This is best explained using the following example:</P
><p class="para">Assume four classes, A, B, C, and D.
A is the root class, B is a subclass of A, C is a subclass of B,
and D is another subclass of A.</P
><p class="para"><blockquote class="screen"><pre class="screen">                    A
                   / \
                  B   D
                 /
                C</PRE
></BLOCKQUOTE
></P
><p class="para">If D calls an autoloaded method <code class="literal">moo()</CODE
> which is defined in class A,
then the method is loaded into class A, and executed.  If C then calls
method <code class="literal">moo()</CODE
>, and that method was reimplemented in class B, but
set to be autoloaded, then the lookup mechanism never gets to the
<code class="literal">AUTOLOAD</CODE
> mechanism in B because it first finds the <code class="literal">moo()</CODE
>
method already loaded in A, and so erroneously uses that.  If the method
<code class="literal">moo()</CODE
> had been stubbed in B, then the lookup mechanism would have
found the stub, and correctly loaded and used the subroutine from B.</P
><p class="para">So, to get autoloading to work right with classes and subclasses,
you need to make sure the stubs are loaded.</P
><p class="para"><a class="indexterm" name="AUTOID-19592"></A
>The SelfLoader can load stubs automatically at module initialization
with:</P
><pre class="programlisting">SelfLoader-&gt;load_stubs();</PRE
><p class="para">But you may wish to avoid having the stub-loading overhead associated
with your initialization.[<a class="footnote" href="#AUTOID-19596">8</A
>]
In this case, you can put the subroutine stubs before the
<code class="literal">__DATA__</CODE
> token.  This can be done manually, by inserting the
output of the first call to the <code class="literal">stub()</CODE
> method above.  But the module
also allows automatic insertion of the stubs.
By default the <code class="literal">stub()</CODE
> method just prints the stubs, but you can set the
global <code class="literal">$Devel::SelfStubber::JUST_STUBS</CODE
> to <code class="literal">0</CODE
> and it will
print out the entire module with the stubs positioned correctly, as in
the second call to <code class="literal">stub()</CODE
>.</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="AUTOID-19596">[8]</A
> Although note that the <code class="literal">load_stubs()</CODE
> method will be called sooner
or later, at latest when the first subroutine is being autoloaded&nbsp;- which
may be too late, if you're trying to <code class="literal">moo()</CODE
>.</P
></DIV
></BLOCKQUOTE
><p class="para">At the very least, this module is useful for seeing what the SelfLoader
thinks are stubs; in order to ensure that future versions of the
SelfStubber remain in step with the SelfLoader, the
SelfStubber actually uses the SelfLoader to determine which
stubs are needed.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_008.htm#PERL2-CH-7-SECT-1.10" title="7.2.8 DB_File&nbsp;- Access to Berkeley DB"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.8 DB_File&nbsp;- Access to Berkeley DB" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_010.htm#AUTOID-19607" title="7.2.10 diagnostics&nbsp;- Force Verbose Warning Diagnostics"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.10 diagnostics&nbsp;- Force Verbose Warning Diagnostics" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.2.8 DB_File&nbsp;- Access to Berkeley DB</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.2.10 diagnostics&nbsp;- Force Verbose Warning Diagnostics</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
