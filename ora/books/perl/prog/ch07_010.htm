<html><head>
<title>[Chapter 7] 7.2.10 diagnostics&nbsp;- Force Verbose Warning Diagnostics</TITLE>
<meta name="DC.title" content="Programming Perl"><meta name="DC.creator" content="Larry Wall, Tom Christiansen &amp; Randal L. Schwartz"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T02:01:41Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-149-6" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_02.htm" title="7.2 Library Modules"><link rel="prev" href="ch07_009.htm#AUTOID-19560" title="7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module"><link rel="next" href="ch07_011.htm#AUTOID-19686" title="7.2.11 DirHandle&nbsp;- Supply Object Methods for Directory Handles"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Programming Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Programming Perl"><area shape="RECT" coords="467,0,514,18" href="../search/psrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_009.htm#AUTOID-19560" title="7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch07_01.htm" title="7. The Standard Perl Library">Chapter 7<br>The Standard Perl Library</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_011.htm#AUTOID-19686" title="7.2.11 DirHandle&nbsp;- Supply Object Methods for Directory Handles"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.11 DirHandle&nbsp;- Supply Object Methods for Directory Handles" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT2"><h3 class="sect2"><a class="title" name="AUTOID-19607">7.2.10 diagnostics&nbsp;- Force Verbose Warning Diagnostics</A
></H3
><pre class="programlisting"># As a pragma:
use diagnostics;
use diagnostics -verbose;

enable  diagnostics;
disable diagnostics;

# As a program:
$ perl program 2&gt;diag.out
$ splain [-v] [-p] diag.out</PRE
><p class="para"><a class="indexterm" name="CH07.DIAG1"></A
><a class="indexterm" name="CH07.DIAG2"></A
><a class="indexterm" name="CH07.DIAG3"></A
><a class="indexterm" name="CH07.DIAG4"></A
><a class="indexterm" name="CH07.DIAG5"></A
>The diagnostics module extends the terse diagnostics normally emitted by
both the Perl compiler and the Perl interpreter, augmenting them with the more
explicative and endearing descriptions found in <a class="xref" href="ch09_01.htm" title="Diagnostic Messages">Chapter 9, <cite class="chapter">Diagnostic Messages</CITE
></A
>.
It affects the compilation phase of your program rather than merely the
execution phase.</P
><p class="para">To use in your program as a pragma, merely say:</P
><pre class="programlisting">use diagnostics;</PRE
><p class="para">at the start (or near the start) of your program.  (Note
that this enables Perl's <b class="emphasis.bold">-w</B
> flag.)  Your whole
compilation will then be subject to the enhanced diagnostics.
These are still issued to <code class="literal">STDERR</CODE
>.</P
><p class="para"><a class="indexterm" name="AUTOID-19631"></A
><a class="indexterm" name="AUTOID-19634"></A
>Due to the interaction between run-time and compile-time issues,
and because it's probably not a very good idea anyway,
you may <em class="emphasis">not</EM
> use:</P
><pre class="programlisting">no diagnostics</PRE
><p class="para">to turn diagnostics off at compile time.  However, you can turn diagnostics on or
off at run-time by invoking <code class="literal">diagnostics::enable()</CODE
> and
<code class="literal">diagnostics::disable()</CODE
>, respectively.</P
><p class="para">The <code class="literal">-verbose</CODE
> argument first prints out the <em class="emphasis">perldiag</EM
>(1) manpage
introduction before any other diagnostics.  The <code class="literal">$diagnostics::PRETTY</CODE
>
variable, if set in a <code class="literal">BEGIN</CODE
> block, results in nicer escape sequences
for pagers:</P
><pre class="programlisting">BEGIN { $diagnostics::PRETTY = 1 }</PRE
><div class="sect3"><h4 class="sect3"><a class="title" name="PERL2-CH-7-SECT-1.12">7.2.10.1 The standalone program</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-19651"></A
>While apparently a whole other program, <em class="emphasis">splain</EM
> is actually nothing
more than a link to the (executable) <em class="emphasis">diagnostics.pm</EM
> module.
It acts upon the standard error output of a Perl program, which you may
have treasured up in a file, or piped directly to <em class="emphasis">splain</EM
>.</P
><p class="para">The <b class="emphasis.bold">-v</B
> flag has the same effect as:</P
><pre class="programlisting">use diagnostics -verbose</PRE
><p class="para">The <b class="emphasis.bold">-p</B
> flag sets
<code class="literal">$diagnostics::PRETTY</CODE
> to true.  Since you're post-processing
with <em class="emphasis">splain</EM
>, there's no sense in being able to
<code class="literal">enable()</CODE
> or <code class="literal">disable()</CODE
> diagnostics.</P
><p class="para">Output from <em class="emphasis">splain</EM
> (unlike the pragma) is directed to <code class="literal">STDOUT</CODE
>.</P
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PERL2-CH-7-SECT-1.13">7.2.10.2 Examples</A
></H4
><p class="para">The following file is certain to trigger a few errors at both
run-time and compile-time:</P
><pre class="programlisting">use diagnostics;
print NOWHERE &quot;nothing\n&quot;;
print STDERR &quot;\n\tThis message should be unadorned.\n&quot;;
warn &quot;\tThis is a user warning&quot;;
print &quot;\nDIAGNOSTIC TESTER: Please enter a &lt;CR&gt; here: &quot;;
my $a, $b = scalar &lt;STDIN&gt;;
print &quot;\n&quot;;
print $x/$y;</PRE
><p class="para">If you prefer to run your program first and look at its problems
afterward, do this while talking to a Bourne-like shell:</P
><pre class="programlisting">perl -w test.pl 2&gt;test.out
./splain &lt; test.out</PRE
><p class="para">If you don't want to modify your source code, but still want on-the-fly
warnings, do this:</P
><pre class="programlisting">perl -w -Mdiagnostics test.pl</PRE
><p class="para">If you want to control warnings on the fly, do something like this.
(Make sure the <a class="xref" href="ch03_185.htm#PERL2-CMD-USE" title="use"><b class="xref.cmd">use</B
></A
> comes first, 
or you won't be able to get at the <code class="literal">enable()</CODE
> or 
<code class="literal">disable()</CODE
> methods.)</P
><pre class="programlisting">use diagnostics; # checks entire compilation phase
print &quot;\ntime for 1st bogus diags: SQUAWKINGS\n&quot;;
print BOGUS1 'nada';
print &quot;done with 1st bogus\n&quot;;

disable diagnostics; # only turns off run-time warnings
print &quot;\ntime for 2nd bogus: (squelched)\n&quot;;
print BOGUS2 'nada';
print &quot;done with 2nd bogus\n&quot;;

enable diagnostics; # turns back on run-time warnings
print &quot;\ntime for 3rd bogus: SQUAWKINGS\n&quot;;
print BOGUS3 'nada';
print &quot;done with 3rd bogus\n&quot;;

disable diagnostics;
print &quot;\ntime for 4th bogus: (squelched)\n&quot;;
print BOGUS4 'nada';
print &quot;done with 4th bogus\n&quot;;</PRE
><a class="indexterm" name="AUTOID-19681"></A
><a class="indexterm" name="AUTOID-19682"></A
><a class="indexterm" name="AUTOID-19683"></A
><a class="indexterm" name="AUTOID-19684"></A
><a class="indexterm" name="AUTOID-19685"></A
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT2" href="ch07_009.htm#AUTOID-19560" title="7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Programming Perl"><img src="../gifs/txthome.gif" alt="Programming Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT2" href="ch07_011.htm#AUTOID-19686" title="7.2.11 DirHandle&nbsp;- Supply Object Methods for Directory Handles"><img src="../gifs/txtnexta.gif" alt="Next: 7.2.11 DirHandle&nbsp;- Supply Object Methods for Directory Handles" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.2.9 Devel::SelfStubber&nbsp;- Generate Stubs for a SelfLoading Module</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.2.11 DirHandle&nbsp;- Supply Object Methods for Directory Handles</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
