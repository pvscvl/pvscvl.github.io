<html><head>
<title>[Chapter 2] 2.4 Pass the Envelope</TITLE>
<meta name="DC.title" content="Advanced Perl Programming"><meta name="DC.creator" content="Sriram Srinivasan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:30:55Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-220-4" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch02_01.htm" title="2. Implementing Complex Data Structures"><link rel="prev" href="ch02_03.htm#ch02-pgfId-943836" title="2.3 Professors, Students, Courses"><link rel="next" href="ch02_05.htm" title="2.5 Pretty-Printing"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Advanced Perl Programming" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Advanced Perl Programming"><area shape="RECT" coords="467,0,514,18" href="../search/asrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_03.htm#ch02-pgfId-943836" title="2.3 Professors, Students, Courses"><img src="../gifs/txtpreva.gif" alt="Previous: 2.3 Professors, Students, Courses" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch02_01.htm" title="2. Implementing Complex Data Structures">Chapter 2<br>Implementing Complex Data Structures</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch02_05.htm" title="2.5 Pretty-Printing"><img src="../gifs/txtnexta.gif" alt="Next: 2.5 Pretty-Printing" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch02-23435">2.4 Pass the Envelope</A
></H2
><p class="para"><a class="indexterm" name="ch02-idx-949554-0"></A
><a class="indexterm" name="ch02-idx-949554-1"></A
>Let us say we are given a text file containing Academy Award (Oscar) winners by year and category, formatted as follows:</P
><pre class="programlisting">1995:Actor:Nicholas Cage
1995:Picture:Braveheart
1995:Supporting Actor:Kevin Spacey
1994:Actor:Tom Hanks
1994:Picture:Forrest Gump
1928:Picture:WINGS</PRE
><p class="para">We would like to provide the following services:[<a class="footnote" href="#ch02-pgfId-946543">2</A
>]<ul class="itemizedlist"><li class="listitem"><p class="para"><a class="listitem" name="ch02-pgfId-944142"></A
>Given a year and category, print the corresponding entry.</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch02-pgfId-944143"></A
>Given a year, print all entries for that year.</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch02-pgfId-944144"></A
>Given a category, print the year and title of all entries for that category.</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch02-pgfId-944145"></A
>Print all entries sorted by category or by year.</P
></LI
></UL
></P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch02-pgfId-946543">[2]</A
> To see real historical databases for the Oscars, look at <a class="systemitem.url" href="../../../../../../../oscars.guide.com/">http://oscars.guide.com/</A
>. (Illustra, an object-oriented database from Informix, is used for the grunge work.)</P
></DIV
></BLOCKQUOTE
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-945658">2.4.1 Data Representation</A
></H3
><p class="para">Since we would like to retrieve entries by category or by year, we use a <a class="indexterm" name="ch02-idx-949560-0"></A
>double indexing scheme, as shown in <a class="xref" href="#ch02-41974" title="Data structure to represent Oscar winners">Figure 2.2</A
>.</P
><h4 class="figure"><a class="title" name="ch02-41974">Figure 2.2: Data structure to represent Oscar winners</A
></H4
><img class="graphic" src="figs/wpa_0202.gif" alt="Figure 2.2"><p class="para">Each entry includes a category, a year, and the name of the corresponding winner. We choose to keep this information in an anonymous array (an anonymous hash would do just as well). The two indices <kbd class="command">%year_index</KBD
> and <kbd class="command">%category_index</KBD
> map the year and category to anonymous arrays containing references to the entries. Here is one way to build this structure:</P
><pre class="programlisting">open (F, &quot;oscar.txt&quot;) || die &quot;Could not open database: $:&quot;;
%category_index = (); %year_index = ();
while ($line = &lt;F&gt;) {
    chomp $line;
    ($year, $category, $name) = split (/:/, $line);
    create_entry($year, $category, $name) if $name;
}

sub create_entry {             # create_entry (year, category, name)
    my($year, $category, $name) = @_;
    # Create an anonymous array for each entry
    $rlEntry = [$year, $category, $name];
    # Add this to the two indices
    push (@{$year_index {$year}}, $rlEntry);         # By Year
    push (@{$category_index{$category}}, $rlEntry);  # By Category
}  </PRE
><p class="para">Notice that each <kbd class="command">push</KBD
> statement does a fair bit of work. It creates an entry in the index (if required), hangs an anonymous array off that entry (if required), and pushes the reference to the entry into that array.</P
><p class="para">Another important thing to notice is how braces have been used to specify the correct precedence in the expression <code class="literal">@{$year_index{$year}}</CODE
>. If we had omitted the braces, the expression <kbd class="command">@$year_index</KBD
> would be evaluated first and then indexed as a hash, according to the rules explained in the section <a class="xref" href="ch01_01.htm" title="Confusion About Precedence">"Confusion About Precedence"</A
> in <a class="xref" href="ch01_01.htm" title="Data References and Anonymous Storage">Chapter 1</A
>.<a class="indexterm" name="ch02-idx-949562-0"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-944223">2.4.2 Print All Entries for a Given Year</A
></H3
><p class="para">This is a simple matter of traversing the <kbd class="command">%year_index</KBD
> hash:</P
><pre class="programlisting">sub print_entries_for_year {
    my($year) = @_;
    print (&quot;Year : $year \n&quot;);
    foreach $rlEntry (@{$year_index{$year}}) {
        print (&quot;\t&quot;,$rlEntry-&gt;[1], &quot;  : &quot;,$rlEntry-&gt;[2], &quot;\n&quot;);
    }
}</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-944233">2.4.3 Print All Entries Sorted by Year</A
></H3
><p class="para">We already know how to print entries for a given year. Find out all years for which we have data, sort them, and call <kbd class="command">print_entries_for_year </KBD
>for each year: </P
><pre class="programlisting">sub print_all_entries_for_year {
    foreach $year (sort keys %year_index) {
        print_entries_for_year($year);
    }
}</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-944240">2.4.4 Print a Specific Entry, Given a Year and Category</A
></H3
><p class="para">We can traverse either index, and we choose to traverse the <kbd class="command">%year_index</KBD
> index, since there are substantially fewer categories per year than the number of years for which a category is valid:</P
><pre class="programlisting">sub print_entry {
    my($year, $category) = @_;
    foreach $rlEntry (@{$year_index{$year}}) {
        if ($rlEntry-&gt;[1] eq $category) {
            print &quot;$category ($year), &quot;, $rlEntry-&gt;[2], &quot;\n&quot;;
            return;
        }
    }
    print &quot;No entry for $category ($year) \n&quot;;<a class="indexterm" name="ch02-idx-949557-0"></A
><a class="indexterm" name="ch02-idx-949557-1"></A
>
}</PRE
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_03.htm#ch02-pgfId-943836" title="2.3 Professors, Students, Courses"><img src="../gifs/txtpreva.gif" alt="Previous: 2.3 Professors, Students, Courses" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Advanced Perl Programming"><img src="../gifs/txthome.gif" alt="Advanced Perl Programming" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch02_05.htm" title="2.5 Pretty-Printing"><img src="../gifs/txtnexta.gif" alt="Next: 2.5 Pretty-Printing" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">2.3 Professors, Students, Courses</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">2.5 Pretty-Printing</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
