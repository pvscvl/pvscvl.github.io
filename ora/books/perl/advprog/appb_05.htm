<html><head>
<title>[Appendix B] B.5 Objects</TITLE>
<meta name="DC.title" content="Advanced Perl Programming"><meta name="DC.creator" content="Sriram Srinivasan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:43:19Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-220-4" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="appb_01.htm" title="B. Syntax Summary"><link rel="prev" href="appb_04.htm" title="B.4 Modules"><link rel="next" href="appb_06.htm" title="B.6 Dynamic Behavior"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Advanced Perl Programming" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Advanced Perl Programming"><area shape="RECT" coords="467,0,514,18" href="../search/asrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="appb_04.htm" title="B.4 Modules"><img src="../gifs/txtpreva.gif" alt="Previous: B.4 Modules" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="appendix" rel="up" href="appb_01.htm" title="B. Syntax Summary">Appendix B<br>Syntax Summary</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="appb_06.htm" title="B.6 Dynamic Behavior"><img src="../gifs/txtnexta.gif" alt="Next: B.6 Dynamic Behavior" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="appb-16132">B.5 Objects</A
></H2
><p class="para"><a class="indexterm" name="appb-idx-951415-0"></A
>Salient points: </P
><ul class="itemizedlist"><li class="listitem"><p class="para"><a class="listitem" name="appb-pgfId-948330"></A
>A class is a package. There's no keyword such as <code class="literal">struct</CODE
> or <code class="literal">class</CODE
> to define layout of object.</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="appb-pgfId-949317"></A
>You choose object representation&nbsp;- object layout is not dictated by you.</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="appb-pgfId-948335"></A
>No special syntax for constructor. You choose the name of the subroutine that is going to allocate the object and return a blessed or typed reference to that object.</P
></LI
></UL
><ol class="orderedlist" start="17"><li class="listitem"><p class="para"><a class="listitem" name="appb-15191"></A
>Creating an OO package&nbsp;- Method 1 (see also #<a class="xref" href="#appb-25966" title="">19</A
>).</P
><p class="para">The C++ class:</P
><pre class="programlisting">class Employee {
    String _name; int _age; double _salary;
    create (String n, int age) : _name(n), _age(age), _salary(0) {}
    ~Employee {printf (&quot;Ahh ... %s is dying\n&quot;, _name)}
    set_salary (double new_salary) { this-&gt;_salary = new_salary}
};</PRE
><p class="para">becomes:</P
><pre class="programlisting">package Employee;
sub create {                # Allocator and Initializer 
     my ($pkg, $name, $age) = @_;
     # Allocate anon hash, bless it, return it.
     return (bless {name =&gt; $name, age=&gt; $age, salary=&gt;0}, $pkg);
}
sub DESTROY {               # destructor (like Java's finalize)
    my $obj = shift;
    print &quot;Ahh ... &quot;, $obj-&gt;{name}, &quot; is dying\n&quot;;
}
sub set_salary {
    my ($obj, $new_salary) = @_;
    $obj-&gt;{salary} = $new_salary; # Remember: $obj is ref-to-hash
    return $new_salary;
}</PRE
></LI
><li class="listitem"><p class="para"><a class="listitem" name="appb-28940"></A
>Using object package:</P
><pre class="programlisting">use Employee;
$emp = Employee-&gt;new(&quot;Ada&quot;, 35);
$emp-&gt;set_salary(1000);</PRE
></LI
><li class="listitem"><p class="para"><a class="listitem" name="appb-25966"></A
>Creating OO package&nbsp;- Method 2 (see also #<a class="xref" href="#appb-15191" title="">17</A
>). Inherit from ObjectTemplate, use the attributes method to declare attribute names, and obtain the constructor <kbd class="command">new </KBD
>and attribute accessor functions for free:</P
><pre class="programlisting">package Employee;
use ObjectTemplate;
@ISA = (&quot;ObjectTemplate&quot;);
attributes(&quot;name&quot;, &quot;age&quot;, &quot;salary&quot;);
sub DESTROY {
   my $obj = shift;
   print &quot;Ahh ... &quot;, $obj-&gt;name(), &quot; is dying\n&quot;;
}
sub set_salary {
    my ($obj, $new_salary) = @_;
    $obj-&gt;salary($new_salary); 
} </PRE
></LI
><li class="listitem"><p class="para"><a class="listitem" name="appb-26382"></A
>Class methods:</P
><pre class="programlisting">Employee-&gt;print();    # 1. &quot;Arrow notation&quot; used for class method
new Employee ();      # 2. Class method using &quot;Indirect notation&quot;. </PRE
><p class="para">These two class methods must expect the package name as the first parameter, followed by the rest of the arguments.</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="appb-35325"></A
>Instance methods. There are two ways of invoking methods on an object:</P
><pre class="programlisting">$emp-&gt;promote();
promote $obj;<a class="indexterm" name="appb-idx-951417-0"></A
></PRE
></LI
></OL
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="appb_04.htm" title="B.4 Modules"><img src="../gifs/txtpreva.gif" alt="Previous: B.4 Modules" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Advanced Perl Programming"><img src="../gifs/txthome.gif" alt="Advanced Perl Programming" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="appb_06.htm" title="B.6 Dynamic Behavior"><img src="../gifs/txtnexta.gif" alt="Next: B.6 Dynamic Behavior" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">B.4 Modules</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">B.6 Dynamic Behavior</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
