<html><head>
<title>[Chapter 5] 5.3 Watch Your Quotes</TITLE>
<meta name="DC.title" content="Advanced Perl Programming"><meta name="DC.creator" content="Sriram Srinivasan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:32:37Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-220-4" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch05_01.htm" title="5. Eval"><link rel="prev" href="ch05_02.htm" title="5.2 The Block Form: Exception Handling"><link rel="next" href="ch05_04.htm#ch05-pgfId-947223" title="5.4 Using Eval for Expression Evaluation"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Advanced Perl Programming" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Advanced Perl Programming"><area shape="RECT" coords="467,0,514,18" href="../search/asrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch05_02.htm" title="5.2 The Block Form: Exception Handling"><img src="../gifs/txtpreva.gif" alt="Previous: 5.2 The Block Form: Exception Handling" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch05_01.htm" title="5. Eval">Chapter 5<br>Eval</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch05_04.htm#ch05-pgfId-947223" title="5.4 Using Eval for Expression Evaluation"><img src="../gifs/txtnexta.gif" alt="Next: 5.4 Using Eval for Expression Evaluation" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch05-21695">5.3 Watch Your Quotes</A
></H2
><p class="para"><a class="indexterm" name="ch05-idx-951232-0"></A
><a class="indexterm" name="ch05-idx-951232-1"></A
><a class="indexterm" name="ch05-idx-951232-2"></A
><a class="indexterm" name="ch05-idx-951232-3"></A
>There are some subtleties associated with the way quotes or blocks are interpreted by Perl. Consider the differences between the following statements: </P
><pre class="programlisting">$str = '$c = 10';
#
eval  $str;     # 1 
eval  &quot;$str&quot;;   # 2
eval  '$str';   # 3
eval  { $str }; # 4</PRE
><p class="para">Cases 1 and 2 have identical results, and cases 3 and 4 behave identically. Can you see why? The trick is to know what the interpreter does <em class="emphasis">before</EM
> handing it over to <kbd class="command">eval</KBD
>.</P
><p class="para">In case 1, Perl gives the <em class="emphasis">contents</EM
> of <kbd class="command">$str</KBD
> to <kbd class="command">eval</KBD
>, just as it would for any other function. Hence <kbd class="command">eval</KBD
> sees the string <code class="literal">'$c</CODE
><kbd class="command"> = </KBD
><code class="literal">10'</CODE
>, treats it like a little program, and executes it.</P
><p class="para">In case 2, Perl does variable interpolation on the double-quoted string before handing it over to <kbd class="command">eval</KBD
>. Again, <kbd class="command">eval</KBD
> sees the contents of <kbd class="command">$str</KBD
>, compiles it, and executes it, assigning 10 to <kbd class="command">$c</KBD
>.</P
><p class="para">In case 3, the argument to <kbd class="command">eval</KBD
> is a single-quoted string, which is not expanded during the variable interpolation stage. For this reason, <kbd class="command">eval</KBD
> sees a hardcoded string (with the characters "$", "s", "t", "r") and treats it like a little program as before. As a standalone program, it is quite useless, of course. Since <kbd class="command">eval</KBD
> returns the result of the last expression, it returns the value of <kbd class="command">$str</KBD
> (the string <kbd class="command">$c</KBD
> <kbd class="command">=</KBD
> <kbd class="command">10</KBD
>). That is, if you say, </P
><pre class="programlisting">$s = eval '$str';</PRE
><p class="para"><kbd class="command">$s</KBD
> will contain <kbd class="command">$c</KBD
> <kbd class="command">=</KBD
> <kbd class="command">10</KBD
>.</P
><p class="para">Case 4 is identical to case 3, except that the code inside the block is checked for syntax errors at compile-time (at the same time as the rest of the script).</P
><p class="para">That's all there is to know about <kbd class="command">eval</KBD
>. Now, let us see how to use it for expression evaluation, exception handling, and efficiency.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch05_02.htm" title="5.2 The Block Form: Exception Handling"><img src="../gifs/txtpreva.gif" alt="Previous: 5.2 The Block Form: Exception Handling" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Advanced Perl Programming"><img src="../gifs/txthome.gif" alt="Advanced Perl Programming" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch05_04.htm#ch05-pgfId-947223" title="5.4 Using Eval for Expression Evaluation"><img src="../gifs/txtnexta.gif" alt="Next: 5.4 Using Eval for Expression Evaluation" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">5.2 The Block Form: Exception Handling</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">5.4 Using Eval for Expression Evaluation</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
