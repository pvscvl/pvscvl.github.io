<html><head>
<title>[Chapter 6] 6.7 Autoloading</TITLE>
<meta name="DC.title" content="Advanced Perl Programming"><meta name="DC.creator" content="Sriram Srinivasan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:33:22Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-220-4" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch06_01.htm" title="6. Modules"><link rel="prev" href="ch06_06.htm" title="6.6 Nesting Packages"><link rel="next" href="ch06_08.htm" title="6.8 Accessing the Symbol Table"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Advanced Perl Programming" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Advanced Perl Programming"><area shape="RECT" coords="467,0,514,18" href="../search/asrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch06_06.htm" title="6.6 Nesting Packages"><img src="../gifs/txtpreva.gif" alt="Previous: 6.6 Nesting Packages" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch06_01.htm" title="6. Modules">Chapter 6<br>Modules</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch06_08.htm" title="6.8 Accessing the Symbol Table"><img src="../gifs/txtnexta.gif" alt="Next: 6.8 Accessing the Symbol Table" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch06-41106">6.7 Autoloading</A
></H2
><p class="para"><a class="indexterm" name="ch06-idx-960847-0"></A
><a class="indexterm" name="ch06-idx-960847-1"></A
><a class="indexterm" name="ch06-idx-960847-2"></A
>If you invoke a function called <kbd class="command">Test::func()</KBD
>, for example, and if <kbd class="command">func()</KBD
> has not been defined in module Test, Perl automatically looks for a subroutine called <kbd class="command">Test::AUTOLOAD()</KBD
><a class="indexterm" name="ch06-idx-960851-0"></A
>. If such a subroutine exists, Perl calls it with the arguments that were passed to <kbd class="command">func()</KBD
>. In addition, a variable called <kbd class="command">$AUTOLOAD</KBD
> is set to the full name of the function that was called (&quot;<kbd class="command">Test::func</KBD
>&quot;). Objective-C programmers will recognize this as being similar to the ":forward" declaration, in which an object uses this statement to trap all procedure calls it doesn't handle, in order to forward it to a "delegate."</P
><p class="para">The <kbd class="command">AUTOLOAD</KBD
> subroutine can do just about anything it wants. For example, it can do one of the following:</P
><ul class="itemizedlist"><li class="listitem"><p class="para"><a class="listitem" name="ch06-pgfId-959006"></A
>Handle the call itself. The caller of Test::func does not know that <kbd class="command">AUTOLOAD</KBD
> really handled the call.</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch06-pgfId-959007"></A
>Automatically create a subroutine on the fly (using <kbd class="command">eval</KBD
>) to do the right thing, and then call that new subroutine. In fact, instead of <em class="emphasis">calling</EM
> that subroutine, you can simply go to it, like this:</P
><pre class="programlisting">    sub AUTOLOAD {
        ... create subroutine ...
        goto &amp;$AUTOLOAD;  # jump to it
    }</PRE
><p class="para">This is a special form of <kbd class="command">goto</KBD
> that erases the stack-frame of the <kbd class="command">AUTOLOAD</KBD
> routine so that Test::func will not know it has been being called from <kbd class="command">AUTOLOAD</KBD
>.</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch06-pgfId-959013"></A
>Dynamically load an object file (or a DLL in Microsoft Windows), using the standard Dynaloader module, and then execute the appropriate call. This is one of the more popular uses of <kbd class="command">AUTOLOAD</KBD
>.</P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch06-pgfId-959014"></A
>Use the <kbd class="command">system</KBD
> function to launch another program by the same name. <em class="emphasis">Shell.pm</EM
> in your Perl library is the really fancy version of this facility. Here is a simplified version:</P
><pre class="programlisting">#------------------------------------------------------------------
package Shell;
#------------------------------------------------------------------
sub AUTOLOAD {
    my($program) = $AUTOLOAD;
    # We are just interested in the command name, not in 
    # the package name
    $program =~ s/^.*:://; 
    system (&quot;$program @_&quot;);
}
#------------------------------------------------------------------
use Shell;
ls ('-lR'); # Triggers a call to AUTOLOAD since sub ls() doesn't exist
mail ('-s &quot;This is a test&quot; joe@foo.com &lt; letter.txt');</PRE
></LI
></UL
><p class="para">Autoloading can also be used to delay the loading of subroutines until they are absolutely necessary. A module called <a class="indexterm" name="ch06-idx-960852-0"></A
><a class="indexterm" name="ch06-idx-960852-1"></A
>Autosplit (in the standard distribution) is used to split a module into multiple modules, each with one subroutine from the original, and the Autoloader module can subsequently be used to subsequently load only the file corresponding to the called subroutine.<a class="indexterm" name="ch06-idx-960849-0"></A
><a class="indexterm" name="ch06-idx-960849-1"></A
><a class="indexterm" name="ch06-idx-960849-2"></A
></P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch06_06.htm" title="6.6 Nesting Packages"><img src="../gifs/txtpreva.gif" alt="Previous: 6.6 Nesting Packages" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Advanced Perl Programming"><img src="../gifs/txthome.gif" alt="Advanced Perl Programming" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch06_08.htm" title="6.8 Accessing the Symbol Table"><img src="../gifs/txtnexta.gif" alt="Next: 6.8 Accessing the Symbol Table" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">6.6 Nesting Packages</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">6.8 Accessing the Symbol Table</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
