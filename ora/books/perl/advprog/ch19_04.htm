<html><head>
<title>[Chapter 19] 19.4 Adding Extensions</TITLE>
<meta name="DC.title" content="Advanced Perl Programming"><meta name="DC.creator" content="Sriram Srinivasan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:40:40Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-220-4" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch19_01.htm" title="19. Embedding Perl:The Easy Way"><link rel="prev" href="ch19_03.htm" title="19.3 Examples"><link rel="next" href="ch19_05.htm" title="19.5 Resources"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Advanced Perl Programming" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Advanced Perl Programming"><area shape="RECT" coords="467,0,514,18" href="../search/asrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch19_03.htm" title="19.3 Examples"><img src="../gifs/txtpreva.gif" alt="Previous: 19.3 Examples" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch19_01.htm" title="19. Embedding Perl:The Easy Way">Chapter 19<br>Embedding Perl:The Easy Way</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch19_05.htm" title="19.5 Resources"><img src="../gifs/txtnexta.gif" alt="Next: 19.5 Resources" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch19-37391">19.4 Adding Extensions</A
></H2
><p class="para"><a class="indexterm" name="ch19-idx-969765-0"></A
><a class="indexterm" name="ch19-idx-969765-1"></A
>In the preceding pages, we created C applications that made calls to the Perl library, parsed scripts, and sent data between Perl and C space. In the meantime, we studiously avoided the issue of extensions, if you recall, by passing <kbd class="command">NULL</KBD
> to <kbd class="command">perl_parse</KBD
> instead of the address of an initialization subroutine. This means that we could not make use of any C-based extensions in the scripts, even common ones such as Socket and SDBM&nbsp;- clearly an unacceptable solution for real applications.</P
><p class="para">In this section, we learn a simple way of making standard and custom extensions accessible to the embedded Perl interpreter.</P
><p class="para">The initialization subroutine, which we will refer to as <kbd class="command">xs_init</KBD
>, is responsible for calling the initialization routines for all <em class="emphasis">statically linked</EM
><a class="indexterm" name="ch19-idx-969767-0"></A
> extensions. If you prefer dynamic loading, <kbd class="command">xs_init</KBD
> simply needs to initialize the built-in dynamic loader.</P
><p class="para">Instead of handcoding <kbd class="command">xs_init</KBD
>, we rely on a very convenient module called <a class="indexterm" name="ch19-idx-969786-0"></A
><a class="indexterm" name="ch19-idx-969786-1"></A
>ExtUtils::Embed to produce it for us. This module is packaged with the Perl distribution, and is used like this:</P
><pre class="programlisting">perl -MExtUtils::Embed -e xsinit -- -o xsinit.c -std IO::Socket DBI</PRE
><p class="para">The <kbd class="command">-M</KBD
><a class="indexterm" name="ch19-idx-969766-0"></A
> option is identical to saying "<kbd class="command">use</KBD
> <kbd class="command">ExtUtils::Embed;</KBD
>". This invocation produces a file called <i class="filename">xsinit.c</I
> with a publicly available function called <kbd class="command">xs_init</KBD
>, which in turn contains the code to initialize all the standard modules (thanks to the <kbd class="command">-std</KBD
> argument), and the two custom modules, IO::Socket and DBI. </P
><p class="para">How does this module know what is standard or whether we want these packages linked statically or dynamically? Well, when Perl is compiled and installed, it keeps an inventory of all statically linked extensions (if any) and the parameters supplied to the <kbd class="command">configure</KBD
> script, such as compilation and linking options, location of the Perl installation, and so on. This inventory is kept in a module called Config.pm. The Embed module taps this information to produce the right set of initializations. In addition, Embed can be asked to print out the compilation and linking options, and we can leverage it on the command line as follows:</P
><pre class="programlisting">%<b class="emphasis.bold"> cc -c xsinit.c         `perl -MExtUtils::Embed -e ccopts`</B
>
%<b class="emphasis.bold"> cc -c ex.c             `perl -MExtUtils::Embed -e ccopts`</B
>
%<b class="emphasis.bold"> cc -o ex ex.o xsinit.o `perl -MExtUtils::Embed -e ldopts`</B
></PRE
><p class="para">In addition to sparing us the bother of hand-writing the initialization code, and filling in the appropriate compiler and linker command-line options, this module makes it simple to drop in other extensions in the future. Of course, if the embedded interpreter is set up for dynamic loading, there is no need to recreate <i class="filename">xsinit.c</I
>, because it only contains one call to initialize the dynamic loader.<a class="indexterm" name="ch19-idx-969742-0"></A
><a class="indexterm" name="ch19-idx-969742-1"></A
></P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch19_03.htm" title="19.3 Examples"><img src="../gifs/txtpreva.gif" alt="Previous: 19.3 Examples" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Advanced Perl Programming"><img src="../gifs/txthome.gif" alt="Advanced Perl Programming" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch19_05.htm" title="19.5 Resources"><img src="../gifs/txtnexta.gif" alt="Next: 19.5 Resources" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">19.3 Examples</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">19.5 Resources</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
