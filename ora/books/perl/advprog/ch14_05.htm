<html><head>
<title>[Chapter 14] 14.5 Timers</TITLE>
<meta name="DC.title" content="Advanced Perl Programming"><meta name="DC.creator" content="Sriram Srinivasan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:39:06Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-220-4" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch14_01.htm" title="14. User Interfaces with Tk"><link rel="prev" href="ch14_04.htm" title="14.4 Geometry Management"><link rel="next" href="ch14_06.htm" title="14.6 Event Bindings"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Advanced Perl Programming" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Advanced Perl Programming"><area shape="RECT" coords="467,0,514,18" href="../search/asrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch14_04.htm" title="14.4 Geometry Management"><img src="../gifs/txtpreva.gif" alt="Previous: 14.4 Geometry Management" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch14_01.htm" title="14. User Interfaces with Tk">Chapter 14<br>User Interfaces with Tk</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch14_06.htm" title="14.6 Event Bindings"><img src="../gifs/txtnexta.gif" alt="Next: 14.6 Event Bindings" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch14-15487">14.5 Timers</A
></H2
><p class="para"><a class="indexterm" name="ch14-idx-1000878-0"></A
><a class="indexterm" name="ch14-idx-1000878-1"></A
><a class="indexterm" name="ch14-idx-1000878-2"></A
>Tk provides a lightweight timer mechanism that can call back a procedure after a specified delay (specified in milliseconds). To create one-shot timers, use the <kbd class="command">after</KBD
><a class="indexterm" name="ch14-idx-1000879-0"></A
> method on any widget; for repeating timers, use <kbd class="command">repeat</KBD
><a class="indexterm" name="ch14-idx-1000880-0"></A
>. In the following example, the button changes its label when pressed and resets its label after 300 milliseconds:</P
><pre class="programlisting">$button-&gt;configure (text =&gt; 'hello',
                    command =&gt; \&amp;change_title));
sub change_title {
    my ($old_title) = $button-&gt;cget('text');
    $button-&gt;configure (text =&gt; 'Ouch'); 
    $button-&gt;after (300, 
                    sub {$button-&gt;configure(text =&gt; $old_title)});
}</PRE
><p class="para">We will use <kbd class="command">after</KBD
> extensively in <a class="xref" href="ch15_01.htm" title="GUI Example: Tetris">Chapter 15</A
> for animation.</P
><p class="para">Both <kbd class="command">after</KBD
> and <kbd class="command">repeat</KBD
> return timer objects. Because these mechanisms are quite efficient and lightweight (unlike using <kbd class="command">alarm()</KBD
><a class="indexterm" name="ch14-idx-1000882-0"></A
> and <kbd class="command">SIGALRM</KBD
>), you can have a large number of timers. To cancel a timer, use <kbd class="command">cancel</KBD
>:</P
><pre class="programlisting">$timer = $button-&gt;after(100, sub {print &quot;foo&quot;});
$timer-&gt;cancel();</PRE
><p class="para">Tk's time-out facility, unlike <kbd class="command">SIGALRM</KBD
><a class="indexterm" name="ch14-idx-1000881-0"></A
><a class="indexterm" name="ch14-idx-1000881-1"></A
>, is not preemptive. It requires that control return to the event loop before it can check if it is time for the next timer to fire. A long subroutine can delay the timed event.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch14_04.htm" title="14.4 Geometry Management"><img src="../gifs/txtpreva.gif" alt="Previous: 14.4 Geometry Management" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Advanced Perl Programming"><img src="../gifs/txthome.gif" alt="Advanced Perl Programming" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch14_06.htm" title="14.6 Event Bindings"><img src="../gifs/txtnexta.gif" alt="Next: 14.6 Event Bindings" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">14.4 Geometry Management</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">14.6 Event Bindings</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
