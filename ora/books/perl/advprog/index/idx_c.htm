<html>
<head>
<title>Index</TITLE>
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">
<p><a href="../index.htm"><img src="../gifs/smbanns.gif" alt="Book Home" border=0></A>

<p><font size="-1"><a href="../../search/asrch.htm">Search</A> |
<a href="idx_0.htm">Symbols</A>
| <a href="idx_a.htm">A</A>
| <a href="idx_b.htm">B</A>
| C
| <a href="idx_d.htm">D</A>
| <a href="idx_e.htm">E</A>
| <a href="idx_f.htm">F</A>
| <a href="idx_g.htm">G</A>
| <a href="idx_h.htm">H</A>
| <a href="idx_i.htm">I</A>
| <a href="idx_j.htm">J</A>
| <a href="idx_k.htm">K</A>
| <a href="idx_l.htm">L</A>
| <a href="idx_m.htm">M</A>
| <a href="idx_n.htm">N</A>
| <a href="idx_o.htm">O</A>
| <a href="idx_p.htm">P</A>
| <a href="idx_q.htm">Q</A>
| <a href="idx_r.htm">R</A>
| <a href="idx_s.htm">S</A>
| <a href="idx_t.htm">T</A>
| <a href="idx_u.htm">U</A>
| <a href="idx_v.htm">V</A>
| <a href="idx_w.htm">W</A>
| <a href="idx_x.htm">X</A>
| <a href="idx_y.htm">Y</A>
| <a href="idx_z.htm">Z</A></FONT>

<h1>Index: C</H1>

<dl>
<dt><a name="c.2fc.2b.2b-languages">C/C++ languages</A>
<dd><dl>
  <dt>classes of, SWIG and
: <a href="../ch18_03.htm">18.3. SWIG Features</A>
  <dt>data structures in
: <a href="../ch02_01.htm">2.1. User-Defined Structures</A>
  <dt>dynamic tracing
: <a href="../ch09_06.htm#ch09-pgfId-949110">9.6.3. C++</A>
  <dt>exception handling
: <a href="../ch05_02.htm">5.2. The Block Form: Exception Handling</A>
  <dt>header files
: <a href="../ch18_01.htm">18.1.1. The Extension Process</A>
  <dt>modular programming in
: <a href="../ch06_09.htm#ch06-pgfId-951254">6.9.3. C/C++</A>
  <dt>object orientation
: <a href="../ch07_05.htm#ch07-pgfId-969836">7.5.3. C++ and Java</A>
  <dt>references in
: <a href="../ch01_07.htm#ch01-pgfId-937717">1.7.3. C/C++</A>
  <dt>run-time evaluation and error handling
: <a href="../ch05_07.htm#ch05-pgfId-943598">5.7.3. C / C++</A>
  <dt>subroutines in
: <a href="../ch04_05.htm#ch04-pgfId-946252">4.5.3. C++</A>
  <dt>using with Perl
: <a href="../ch18_01.htm">18. Extending Perl:A First Course</A>
  <dd><dl>
    <dt>Mandelbrot code example
: <a href="../ch18_02.htm">18.2. Example: Fractals with Perl</A>
  </DL>
  <dt>XS and C++
  <dd><dl>
    <dt><a href="../ch18_04.htm#ch18-pgfId-968095">18.4.5. C++ Code</A>
    <dt><a href="../ch20_05.htm#ch20-pgfId-965850">20.5.5. C++ Objects and XS Typemaps</A>
  </DL>
</DL>
<dt><a name="calculator">calculator, eval for (example)</A>
: <a href="../ch05_04.htm#ch05-pgfId-947223">5.4. Using Eval for Expression Evaluation</A>
<dt><a name="callbacks">callbacks</A>
<dd><dl>
  <dt><a href="../ch04_02.htm#ch04-pgfId-939241">4.2. Using Subroutine References</A>
  <dt><a href="../ch13_01.htm">13.1.1.1. Msg: Send-side routines</A>
  <dt>associating with button clicks
: <a href="../ch14_03.htm#ch14-pgfId-998468">14.3.2. Labels and Buttons</A>
  <dt>closures for
: <a href="../ch04_04.htm#ch04-pgfId-945067">4.4.1. Using Closures as "Smart" Callbacks</A>
  <dt>objects as
: <a href="../ch04_04.htm#ch04-pgfId-945067">4.4.3. Closures Versus Objects</A>
  <dt>widgets and
: <a href="../ch14_06.htm">14.6. Event Bindings</A>
</DL>
<dt><a name="caller-function">caller function</A>
: <a href="../appb_08.htm">B.8. Meta-Information</A>
<dt><a name="can-function">can function</A>
: <a href="../ch07_03.htm">7.3. UNIVERSAL</A>
<dt><a name="canvas-widgets">Canvas widgets</A>
<dd><dl>
  <dt><a href="../appa_02.htm">A.2. Canvas</A>
  <dt><a href="../ch14_03.htm#ch14-pgfId-998468">14.3.4. Canvas</A>
  <dt>Tetris GUI (example)
: <a href="../ch15_01.htm">15. GUI Example: Tetris</A>
</DL>
<dt><a name="case-tools">CASE tools</A>
: <a href="../ch17_01.htm">17.1. On Code Generation</A>
<dt><a name="cget-function">cget function</A>
: <a href="../ch14_03.htm#ch14-pgfId-998468">14.3.2. Labels and Buttons</A>
<dt><a name="checkbuttons">checkbuttons</A>
<dd><dl>
  <dt><a href="../appa_01.htm">A.1.2. Checkbutton</A>
  <dt><a href="../ch14_03.htm#ch14-pgfId-998468">14.3.3. Radiobuttons and Checkbuttons</A>
</DL>
<dt><a name="child-processes">child processes</A>
: <a href="../ch12_03.htm#ch12-pgfId-973651">12.3.1. Multiple Threads of Execution</A>
<dt><a name="chld-signal">CHLD signal</A>
: <a href="../ch12_03.htm#ch12-pgfId-973651">12.3.1. Multiple Threads of Execution</A>
<dt><a name="christiansen">Christiansen, Tom</A>
<dd><dl>
  <dt><a href="../ch02_01.htm">2. Implementing Complex Data Structures</A>
  <dt><a href="../ch02_06.htm">2.6. Resources</A>
  <dt><a href="../ch04_04.htm#ch04-pgfId-945067">4.4.3. Closures Versus Objects</A>
  <dt><a href="../ch05_06.htm">5.6. Using Eval for Time-Outs</A>
</DL>
<dt><a name="circular-references">circular references</A>
: <a href="../ch01_06.htm#ch01-pgfId-945311">1.6.1. Reference Counts</A>
<dt><a name="class">class (static) methods</A>
: <a href="../ch07_02.htm#ch07-16028">7.2.5. Class Methods and Attributes</A>
<dt><a name="class-attributes">class attributes</A>
: <a href="../ch07_02.htm#ch07-16028">7.2.5. Class Methods and Attributes</A>
<dt><a name="classes">classes</A>
<dd><dl>
  <dt>in Java
: <a href="../ch06_09.htm#ch06-pgfId-951254">6.9.4. Java</A>
  <dt>overriding
: <a href="../ch07_02.htm#ch07-16028">7.2.6.1. Overriding base classes</A>
  <dt>superclasses (base classes)
: <a href="../ch07_02.htm#ch07-16028">7.2.6. The Need for Inheritance</A>
</DL>
<dt><a name="clients">clients</A>
<dd><dl>
  <dt>handling multiple
: <a href="../ch12_03.htm#ch12-pgfId-973651">12.3. Handling Multiple Clients</A>
  <dt>prebuilt modules for
: <a href="../ch12_06.htm">12.6. Prebuilt Client Modules</A>
</DL>
<dt><a name="closures">closures</A>
<dd><dl>
  <dt><a href="../ch04_03.htm#ch04-pgfId-944893">4.3. Closures</A>
  <dt><a href="../ch20_03.htm#ch20-pgfId-948426">20.3.5.3. Closures</A>
  <dt>objects versus
: <a href="../ch04_04.htm#ch04-pgfId-945067">4.4.3. Closures Versus Objects</A>
  <dt>syntax
: <a href="../appb_03.htm">B.3. Closures</A>
</DL>
<dt><a name="cobol-language">COBOL language</A>
: <a href="../ch01_01.htm">1. Data References and Anonymous Storage</A>
<dt><a name="code">code</A>
<dd><dl>
  <dt>code values (CVs)
: <a href="../ch20_03.htm#ch20-pgfId-948426">20.3.5. Code Values</A>
  <dt>hand-coding XSUBs
: <a href="../ch20_04.htm#ch20-20585">20.4.2. The Called Side: Hand-Coding an XSUB</A>
</DL>
<dt><a name="code-directive">CODE directive (XS)</A>
: <a href="../ch18_04.htm#ch18-pgfId-968095">18.4.4. Special Code</A>
<dt><a name="code-generation">code generation</A>
: <a href="../ch17_01.htm">17.1. On Code Generation</A>
<dd><dl>
  <dt>input specification parser
  <dd><dl>
    <dt><a href="../ch17_02.htm">17.2. Jeeves Example</A>
    <dt><a href="../ch17_03.htm">17.3.1. Advantages of This Architecture</A>
    <dt>example of
: <a href="../ch17_05.htm">17.5. Sample Specification Parser</A>
  </DL>
  <dt>Jeeves framework
  <dd><dl>
    <dt><a href="../ch17_02.htm">17.2. Jeeves Example</A>
    <dt><a href="../ch17_03.htm">17.3. Jeeves Overview</A>
  </DL>
  <dt>stages of
: <a href="../ch20_02.htm#ch20-pgfId-972182">20.2.2.2. Compilation and code generation stages</A>
</DL>
<dt><a name="collision-chaining">collision chaining</A>
: <a href="../ch20_03.htm#ch20-pgfId-948426">20.3.3.1. Inside HVs</A>
<dt><a name="colors">colors, widgets and</A>
: <a href="../ch14_03.htm#ch14-pgfId-998468">14.3.1.3. Colors</A>
<dt><a name="columns">columns, extracting from files (example)</A>
: <a href="../ch05_05.htm#ch05-pgfId-943315">5.5.2. Extracting Columns from a File</A>
<dt><a name="command-lines">command lines, aliasing on</A>
: <a href="../ch03_02.htm#ch03-pgfId-952904">3.2.2.2. Aliasing on command lines</A>
<dt><a name="command-property">command property</A>
: (see <a href="idx_w.htm">widgets</A>)
<dt><a name="commit.5ftransaction-function">commit_transaction function</A>
: <a href="../ch11_01.htm">11.1. Adaptor: An Introduction</A>
<dt><a name="communications-endpoints">communications endpoints</A>
: (see <a href="idx_s.htm">sockets</A>)
<dt><a name="compiling">compiling</A>
: <a href="../ch20_07.htm">20.7. A Peek into the Future</A>
<dd><dl>
  <dt>modules/packages
: <a href="../ch06_03.htm">6.3. Package Initialization and Destruction</A>
  <dt>with yacc
: <a href="../ch20_02.htm#ch20-pgfId-972182">20.2.2.2. Compilation and code generation stages</A>
</DL>
<dt><a name="component.2dbased-programming">component-based programming</A>
: <a href="../prf1_01.htm">The Case for Scripting</A>
<dt><a name="composition">composition</A>
: <a href="../ch08_03.htm#ch08-pgfId-963783">8.3.4. Using Composition Instead</A>
<dt><a name="concurrency">concurrency</A>
: <a href="../ch10_01.htm">10.1. Persistence Issues</A>
<dt><a name="connect-function">connect function</A>
: <a href="../ch13_01.htm">13.1. Msg: Messaging Toolkit</A>
<dt><a name="connection.2doriented-communication">connection-oriented communication</A>
: <a href="../ch12_01.htm">12.1. Networking Primer</A>
<dt><a name="connectionless-communication">connectionless communication</A>
: <a href="../ch12_01.htm">12.1. Networking Primer</A>
<dt><a name="constant-folding">constant folding</A>
: <a href="../ch20_02.htm#ch20-pgfId-972182">20.2.2.2. Compilation and code generation stages</A>
<dt><a name="constants">constants</A>
: <a href="../ch03_03.htm#ch03-pgfId-950681">3.3.2. Constants</A>
<dd><dl>
  <dt>references to
: <a href="../ch01_01.htm">1.1. Referring to Existing Variables</A>
</DL>
<dt><a name="context-propagation">context propagation</A>
: <a href="../ch20_02.htm#ch20-pgfId-972182">20.2.2.2. Compilation and code generation stages</A>
<dt><a name="context-stack">context stack</A>
: <a href="../ch20_04.htm#ch20-20585">20.4.3. Inside Other Stacks</A>
<dt><a name="ctrl.2dc-signal">Ctrl-C signal</A>
: <a href="../ch04_02.htm#ch04-pgfId-939241">4.2.2. Signal Handlers</A>
<dt><a name="cvs">CVs (code values)</A>
: <a href="../ch20_03.htm#ch20-pgfId-948426">20.3.5. Code Values</A>
<dt><a name="cxstack">cxstack</A>
: <a href="../ch20_04.htm#ch20-20585">20.4.3. Inside Other Stacks</A>
</DL>

<p>
<hr width="515" align="LEFT">

<p><font size="-1"><a href="../../search/asrch.htm">Search</A> |
<a href="idx_0.htm">Symbols</A>
| <a href="idx_a.htm">A</A>
| <a href="idx_b.htm">B</A>
| C
| <a href="idx_d.htm">D</A>
| <a href="idx_e.htm">E</A>
| <a href="idx_f.htm">F</A>
| <a href="idx_g.htm">G</A>
| <a href="idx_h.htm">H</A>
| <a href="idx_i.htm">I</A>
| <a href="idx_j.htm">J</A>
| <a href="idx_k.htm">K</A>
| <a href="idx_l.htm">L</A>
| <a href="idx_m.htm">M</A>
| <a href="idx_n.htm">N</A>
| <a href="idx_o.htm">O</A>
| <a href="idx_p.htm">P</A>
| <a href="idx_q.htm">Q</A>
| <a href="idx_r.htm">R</A>
| <a href="idx_s.htm">S</A>
| <a href="idx_t.htm">T</A>
| <a href="idx_u.htm">U</A>
| <a href="idx_v.htm">V</A>
| <a href="idx_w.htm">W</A>
| <a href="idx_x.htm">X</A>
| <a href="idx_y.htm">Y</A>
| <a href="idx_z.htm">Z</A></FONT>

<p><a href="../../copyrght.htm">Copyright</A> &copy; 1999
 <a href="../../../../../../../../www.oreilly.com/">O'Reilly &amp; Associates, Inc.</A>
All Rights Reserved.
<p class="nav"><font size="-1">[ <a href="../../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
>
</BODY>
</HTML>
