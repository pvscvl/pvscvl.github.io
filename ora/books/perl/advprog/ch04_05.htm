<html><head>
<title>[Chapter 4] 4.5 Comparisons to Other Languages</TITLE>
<meta name="DC.title" content="Advanced Perl Programming"><meta name="DC.creator" content="Sriram Srinivasan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:32:11Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-220-4" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch04_01.htm" title="4. Subroutine References and Closures"><link rel="prev" href="ch04_04.htm#ch04-pgfId-945067" title="4.4 Using Closures"><link rel="next" href="ch04_06.htm" title="4.6 Resources"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Advanced Perl Programming" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Advanced Perl Programming"><area shape="RECT" coords="467,0,514,18" href="../search/asrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch04_04.htm#ch04-pgfId-945067" title="4.4 Using Closures"><img src="../gifs/txtpreva.gif" alt="Previous: 4.4 Using Closures" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch04_01.htm" title="4. Subroutine References and Closures">Chapter 4<br>Subroutine References and Closures</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch04_06.htm" title="4.6 Resources"><img src="../gifs/txtnexta.gif" alt="Next: 4.6 Resources" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch04-21839">4.5 Comparisons to Other Languages</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch04-pgfId-946250">4.5.1 Tcl</A
></H3
><p class="para"><a class="indexterm" name="ch04-idx-950859-0"></A
>Tcl programmers rely heavily on dynamic evaluation (using <code class="literal">eval</CODE
>) to pass around bits and pieces of code. While you can do this in Perl also, Perl's anonymous subroutines are packets of precompiled code, which definitely work faster than dynamic evaluation. Perl closures give you other advantages that are not available in Tcl: the ability to share private variables between different closures (in Tcl, they have to be <em class="emphasis">global</EM
> variables for them to be sharable) and not worry about variable interpolation rules (in Tcl, you have to take care to completely expand all the variables yourself using interpolation before you pass a piece of code along to somebody else).</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch04-pgfId-946251">4.5.2 Python</A
></H3
><p class="para"><a class="indexterm" name="ch04-idx-950860-0"></A
><a class="indexterm" name="ch04-idx-950860-1"></A
><a class="indexterm" name="ch04-idx-950860-2"></A
>Python offers a weak form of closures: a subroutine can pick up variables only from its immediate containing environment. This is called "shallow binding," while Perl offers "deep binding." Mark Lutz's <em class="emphasis">Programming Python</EM
> (O'Reilly, 1996) shows a workaround  to achieve deep binding, by setting default arguments to values in the immediately enclosing scope. </P
><p class="para">I prefer the environment to handle this stuff automatically for me, as Perl does.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch04-pgfId-946252">4.5.3 C++</A
></H3
><p class="para"><a class="indexterm" name="ch04-idx-950861-0"></A
>C++ supports pointers to subroutines but does not support closures. You have to use the callback object idiom wherever a callback subroutine needs some contextual data to operate. If you don't want a separate callback object, you can inherit your object from a standard callback class and override a method called, say, "execute," so that the caller can simply say <kbd class="command">callback_object-&gt;execute()</KBD
>.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch04-pgfId-946253">4.5.4 Java</A
></H3
><p class="para"><a class="indexterm" name="ch04-idx-950862-0"></A
>Java offers neither closures nor pointers to subroutines (methods). Interfaces can be used to provide a standardized callback interface so that the caller doesn't have to care about the specific class of the object (as long as it implements that interface).</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch04_04.htm#ch04-pgfId-945067" title="4.4 Using Closures"><img src="../gifs/txtpreva.gif" alt="Previous: 4.4 Using Closures" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Advanced Perl Programming"><img src="../gifs/txthome.gif" alt="Advanced Perl Programming" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch04_06.htm" title="4.6 Resources"><img src="../gifs/txtnexta.gif" alt="Next: 4.6 Resources" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">4.4 Using Closures</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">4.6 Resources</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
