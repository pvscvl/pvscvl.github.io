<html><head>
<title>[Chapter 6] 6.3 Package Initialization and Destruction</TITLE>
<meta name="DC.title" content="Advanced Perl Programming"><meta name="DC.creator" content="Sriram Srinivasan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:33:04Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-220-4" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch06_01.htm" title="6. Modules"><link rel="prev" href="ch06_02.htm#ch06-pgfId-955483" title="6.2 Packages and Files"><link rel="next" href="ch06_04.htm" title="6.4 Privacy"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Advanced Perl Programming" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Advanced Perl Programming"><area shape="RECT" coords="467,0,514,18" href="../search/asrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch06_02.htm#ch06-pgfId-955483" title="6.2 Packages and Files"><img src="../gifs/txtpreva.gif" alt="Previous: 6.2 Packages and Files" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch06_01.htm" title="6. Modules">Chapter 6<br>Modules</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch06_04.htm" title="6.4 Privacy"><img src="../gifs/txtnexta.gif" alt="Next: 6.4 Privacy" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch06-15759">6.3 Package Initialization and Destruction</A
></H2
><p class="para"><a class="indexterm" name="ch06-idx-960818-0"></A
><a class="indexterm" name="ch06-idx-960818-1"></A
><a class="indexterm" name="ch06-idx-960818-2"></A
><a class="indexterm" name="ch06-idx-960818-3"></A
>There are times when you want to do some initialization before any other code is executed. Perl goes further: it gives you a chance to execute code while it is still in the <em class="emphasis">compilation</EM
> stage. </P
><p class="para"><a class="indexterm" name="ch06-idx-960822-0"></A
>Normally, while parsing a file, Perl compiles the entire code, and when this process is successfully completed, it starts executing from the first global statement onward. However, if it encounters a subroutine or a block called <kbd class="command">BEGIN</KBD
><a class="indexterm" name="ch06-idx-960823-0"></A
><a class="indexterm" name="ch06-idx-960823-1"></A
> while parsing, it not only compiles it, but also <em class="emphasis">executes</EM
> it right away, before resuming the compilation of the rest of the file. A small experiment underscores this point:</P
><pre class="programlisting">sub BEGIN {   # can also just say BEGIN { }; the word &quot;sub&quot; is optional
    print &quot;Washington was here \n&quot;;
}
foo***  ;     # Intentional error</PRE
><p class="para">This prints the following:</P
><pre class="programlisting">Washington was here 
syntax error at x.pl line 4, near &quot;**  ;&quot;
Execution of x.pl aborted due to compilation errors.</PRE
><p class="para">Whereas a program with a syntax error normally does not get executed at all, a <kbd class="command">BEGIN</KBD
> subroutine occurring before the error will be executed.</P
><p class="para">Because a <kbd class="command">BEGIN</KBD
> block gets executed even before the compilation phase is over, it can influence the rest of the compilation. If you want to hardcode an include path in your program, here is how to do it:</P
><pre class="programlisting">BEGIN {
    unshift (@INC, &quot;../include&quot;);
}
use Foo;  # Looks for Foo.pm in &quot;../include&quot; first</PRE
><p class="para">An easier approach is to use the <kbd class="command">lib</KBD
> module that is packaged with the Perl distribution:</P
><pre class="programlisting">use lib qw(../include); # prepends the directory to @INC</PRE
><p class="para">Just as you want to do initialization before any other code executes, there are times when you want to do some clean-up <em class="emphasis">after</EM
> all the code has executed. The <kbd class="command">END</KBD
><a class="indexterm" name="ch06-idx-960824-0"></A
> block is called just before the program is due to exit, independent of whether it was a successful exit or not. That is, even if the program dies because of, say, an arithmetic exception, the <kbd class="command">END</KBD
> block is called anyway. The block is not invoked if the program dies because of an uncaught signal.</P
><p class="para"><kbd class="command">BEGIN</KBD
> and <kbd class="command">END</KBD
> are borrowed from <em class="emphasis">awk</EM
>. And as in <em class="emphasis">awk</EM
>, Perl supports multiple <kbd class="command">BEGIN</KBD
> and <kbd class="command">END</KBD
> statements. <kbd class="command">BEGIN</KBD
> statements are executed in the order in which they are seen, while <kbd class="command">END</KBD
> statements are executed in<em class="emphasis"> reverse</EM
> order of appearance (last in, first out). If there are multiple packages with many <kbd class="command">BEGIN</KBD
> or <kbd class="command">END</KBD
> blocks, the order in which the packages were loaded is taken into account.<a class="indexterm" name="ch06-idx-960820-0"></A
><a class="indexterm" name="ch06-idx-960820-1"></A
><a class="indexterm" name="ch06-idx-960820-2"></A
><a class="indexterm" name="ch06-idx-960820-3"></A
></P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch06_02.htm#ch06-pgfId-955483" title="6.2 Packages and Files"><img src="../gifs/txtpreva.gif" alt="Previous: 6.2 Packages and Files" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Advanced Perl Programming"><img src="../gifs/txthome.gif" alt="Advanced Perl Programming" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch06_04.htm" title="6.4 Privacy"><img src="../gifs/txtnexta.gif" alt="Next: 6.4 Privacy" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">6.2 Packages and Files</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">6.4 Privacy</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
