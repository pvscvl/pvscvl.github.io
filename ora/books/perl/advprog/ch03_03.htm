<html><head>
<title>[Chapter 3] 3.3 Typeglobs and References</TITLE>
<meta name="DC.title" content="Advanced Perl Programming"><meta name="DC.creator" content="Sriram Srinivasan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:31:31Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-220-4" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_01.htm" title="3. Typeglobs and Symbol Tables"><link rel="prev" href="ch03_02.htm#ch03-pgfId-952904" title="3.2 Typeglobs"><link rel="next" href="ch03_04.htm#ch03-pgfId-951085" title="3.4 Filehandles, Directory Handles, and Formats"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Advanced Perl Programming" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Advanced Perl Programming"><area shape="RECT" coords="467,0,514,18" href="../search/asrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch03_02.htm#ch03-pgfId-952904" title="3.2 Typeglobs"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2 Typeglobs" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch03_01.htm" title="3. Typeglobs and Symbol Tables">Chapter 3<br>Typeglobs and Symbol Tables</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch03_04.htm#ch03-pgfId-951085" title="3.4 Filehandles, Directory Handles, and Formats"><img src="../gifs/txtnexta.gif" alt="Next: 3.4 Filehandles, Directory Handles, and Formats" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch03-19676">3.3 Typeglobs and References</A
></H2
><p class="para">You might have noticed that both typeglobs and references point to <em class="emphasis">values</EM
>. A variable <kbd class="command">$a</KBD
> can be seen simply as a dereference of a typeglob <kbd class="command">${*a}</KBD
>. For this reason, Perl makes the two expressions <kbd class="command">${\$a}</KBD
> and <kbd class="command">${*a}</KBD
> refer to the same scalar value. This equivalence of typeglobs and ordinary references has some interesting properties and results in three useful idioms, described here.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="ch03-pgfId-950671">3.3.1 Selective Aliasing</A
></H3
><p class="para">Earlier, we saw how a statement like <kbd class="command">*b</KBD
> <kbd class="command">=</KBD
> <kbd class="command">*a</KBD
> makes everything named "<code class="literal">a</CODE
>" be referred to as "<code class="literal">b</CODE
>" also. There is a way to create <a class="indexterm" name="ch03-idx-954070-0"></A
><a class="indexterm" name="ch03-idx-954070-1"></A
><a class="indexterm" name="ch03-idx-954070-2"></A
>selective aliases, using the reference syntax:</P
><pre class="programlisting">*b = \$a;     # Assigning a scalar reference to a typeglob</PRE
><p class="para">Perl arranges it such that <kbd class="command">$b</KBD
> and <kbd class="command">$a</KBD
> are aliases, but <kbd class="command">@b</KBD
> and <kbd class="command">@a</KBD
> (or <kbd class="command">&amp;b</KBD
> and <kbd class="command">&amp;a</KBD
>, and so on) are not.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch03-pgfId-950675">3.3.2 Constants</A
></H3
><p class="para"><a class="indexterm" name="ch03-idx-954071-0"></A
><a class="indexterm" name="ch03-idx-954071-1"></A
><a class="indexterm" name="ch03-idx-954071-2"></A
><a class="indexterm" name="ch03-idx-954071-3"></A
>We get read-only variables by creating references to constants, like this:</P
><pre class="programlisting">*PI = \3.1415927;
# Now try to modify it.
$PI = 10;  </PRE
><p class="para">Perl complains: "Modification of a read-only value attempted at try.pl line 3."</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch03-pgfId-950681">3.3.3 Naming Anonymous Subroutines</A
></H3
><p class="para"><a class="indexterm" name="ch03-idx-954076-0"></A
><a class="indexterm" name="ch03-idx-954076-1"></A
><a class="indexterm" name="ch03-idx-954076-2"></A
>We will cover anonymous subroutines in the next chapter, so you might want to come back to this example later.</P
><p class="para">If you find it painful to call a subroutine indirectly through a reference (<kbd class="command">&amp;$rs()</KBD
>), you can assign a name to it for convenience:</P
><pre class="programlisting">sub generate_greeting {
     my ($greeting) = @_;
        sub { print &quot;$greeting world\n&quot;;}
}
$rs = generate_greeting(&quot;hello&quot;);
# Instead of invoking it as $&amp;rs(), give it your own name.
*greet = $rs;
greet();    # Equivalent to calling $&amp;rs(). Prints &quot;hello world\n&quot;</PRE
><p class="para">Of course, you can also similarly give a name to other types of references.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch03-pgfId-950692">3.3.4 References to Typeglobs</A
></H3
><p class="para"><a class="indexterm" name="ch03-idx-954085-0"></A
><a class="indexterm" name="ch03-idx-954085-1"></A
>We have seen how references and typeglobs are equivalent (in the sense that references can be assigned to typeglobs). Perl also allows you to take references <em class="emphasis">to</EM
> typeglobs by prefixing it with a backslash as usual:</P
><pre class="programlisting">$ra = \*a;</PRE
><p class="para">References to typeglobs are not used much in practice, because it is very efficient to pass typeglobs around directly. This is similar to the case of ordinary scalars, which don't need references to pass them around for efficiency.</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch03_02.htm#ch03-pgfId-952904" title="3.2 Typeglobs"><img src="../gifs/txtpreva.gif" alt="Previous: 3.2 Typeglobs" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Advanced Perl Programming"><img src="../gifs/txthome.gif" alt="Advanced Perl Programming" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch03_04.htm#ch03-pgfId-951085" title="3.4 Filehandles, Directory Handles, and Formats"><img src="../gifs/txtnexta.gif" alt="Next: 3.4 Filehandles, Directory Handles, and Formats" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.2 Typeglobs</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.4 Filehandles, Directory Handles, and Formats</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
