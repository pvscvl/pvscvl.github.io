<html><head>
<title>[Chapter 12] 12.6 Prebuilt Client Modules</TITLE>
<meta name="DC.title" content="Advanced Perl Programming"><meta name="DC.creator" content="Sriram Srinivasan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:37:09Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-220-4" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch12_01.htm" title="12. Networking with Sockets"><link rel="prev" href="ch12_05.htm" title="12.5 IO Objects and Filehandles"><link rel="next" href="ch12_07.htm" title="12.7 Resources"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Advanced Perl Programming" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Advanced Perl Programming"><area shape="RECT" coords="467,0,514,18" href="../search/asrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch12_05.htm" title="12.5 IO Objects and Filehandles"><img src="../gifs/txtpreva.gif" alt="Previous: 12.5 IO Objects and Filehandles" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch12_01.htm" title="12. Networking with Sockets">Chapter 12<br>Networking with Sockets</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch12_07.htm" title="12.7 Resources"><img src="../gifs/txtnexta.gif" alt="Next: 12.7 Resources" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch12-18221">12.6 Prebuilt Client Modules</A
></H2
><p class="para"><a class="indexterm" name="ch12-idx-978628-0"></A
><a class="indexterm" name="ch12-idx-978628-1"></A
>Applications such as mail clients, FTP, web browsers, telnet, and Usenet news-readers are built to use TCP/IP and sockets. Several libraries available on CPAN give you the client-side libraries to roll your own FTP or mail reader, for example, without having to worry about the application protocol. (Note that there are no libraries to write your own servers to handle these protocols.) In this section, we will take a brief look at a couple of interesting client modules packaged under the Net hierarchy and available as <i class="filename">libnet</I
> from CPAN. These packages were also written by Graham Barr.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="ch12-pgfId-975644">12.6.1 Net::FTP</A
></H3
><p class="para">This <a class="indexterm" name="ch12-idx-978629-0"></A
><a class="indexterm" name="ch12-idx-978629-1"></A
>module implements the client side of the File Transfer Protocol and is used like this:</P
><pre class="programlisting">use Net::FTP;
$ftp = Net::FTP-&gt;new(&quot;ftp.digital.com&quot;);
die &quot;Could not connect: $!&quot; unless $ftp;
$ftp-&gt;login('anonymous', 'me@foo.com');  # Guest User; email as passwd
$ftp-&gt;cwd('/pub/plan/perl/CPAN');        # cwd:Change Working Directory
$ftp-&gt;get('index');
$ftp-&gt;quit();</PRE
><p class="para">This module supports all the commands that you can issue from a standard FTP program.</P
><p class="para">As currently implemented, the <kbd class="command">get</KBD
> call blocks until the entire file is transmitted, so while it is very useful for a batch application (such as mirroring an FTP site nightly), you cannot use it to write a graphical FTP client. </P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch12-pgfId-974016">12.6.2 Net::POP3</A
></H3
><p class="para"><a class="indexterm" name="ch12-idx-978630-0"></A
><a class="indexterm" name="ch12-idx-978630-1"></A
>This library gives an interface to programmatically access a POP (Post Office Protocol) server, used, for example, on dial-up connections. The POP server stores incoming email until the mail reader comes and "visits the post office." Let us study a small example based on Net::POP3.</P
><p class="para">The trouble with most PC-based mail readers is that they don't give you a preview of the messages and don't wait for you to decide whether you really want to download any of them. People take the Internet's bandwidth for granted all the time, and you might find yourself helplessly waiting as an email containing the latest photograph of Madonna's baby trickles slowly through your dial-up connection. The Perl-based POP client shown below provides a preview of the messages sitting on the POP server: it simply lists the first three lines of all available messages:</P
><pre class="programlisting">use Net::POP3;
$m = Net::POP3-&gt;new('pop.myhost.com'); # Name of POP server
die &quot;Could not open account&quot; unless $m;
$n = $m-&gt;login('sriram', 'foofoo');    # Login, passwd
print &quot;Number of msgs received: $n\n&quot;;
$r_msgs = $m-&gt;list();                  # Returns a ref-to-hash mapping 
                                       # msg_id to msg_size
foreach $msg_id (keys %$r_msgs) {
    print &quot;Msg $msg_id (&quot;, $r_msgs-&gt;{$msg_id}, &quot;):\n&quot;;
    print &quot;-----------------\n&quot;;
    $rl_msg = $m-&gt;top($msg_id, 3);  # Get top three lines from message
    $, = &quot;\n&quot;;
    print @$rl_msg;
}
$m-&gt;quit();</PRE
><p class="para">I use a slightly beefier version of this script to optionally delete messages and then fire up my regular mail reader to download what's left. <a class="indexterm" name="ch12-idx-978632-0"></A
><a class="indexterm" name="ch12-idx-978632-1"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch12_05.htm" title="12.5 IO Objects and Filehandles"><img src="../gifs/txtpreva.gif" alt="Previous: 12.5 IO Objects and Filehandles" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Advanced Perl Programming"><img src="../gifs/txthome.gif" alt="Advanced Perl Programming" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch12_07.htm" title="12.7 Resources"><img src="../gifs/txtnexta.gif" alt="Next: 12.7 Resources" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">12.5 IO Objects and Filehandles</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">12.7 Resources</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
