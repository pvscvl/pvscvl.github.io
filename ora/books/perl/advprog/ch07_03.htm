<html><head>
<title>[Chapter 7] 7.3 UNIVERSAL</TITLE>
<meta name="DC.title" content="Advanced Perl Programming"><meta name="DC.creator" content="Sriram Srinivasan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:34:10Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-220-4" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_01.htm" title="7. Object-Oriented Programming"><link rel="prev" href="ch07_02.htm#ch07-16028" title="7.2 Objects in Perl"><link rel="next" href="ch07_04.htm" title="7.4 Recap of Conventions"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Advanced Perl Programming" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Advanced Perl Programming"><area shape="RECT" coords="467,0,514,18" href="../search/asrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch07_02.htm#ch07-16028" title="7.2 Objects in Perl"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2 Objects in Perl" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch07_01.htm" title="7. Object-Oriented Programming">Chapter 7<br>Object-Oriented Programming</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch07_04.htm" title="7.4 Recap of Conventions"><img src="../gifs/txtnexta.gif" alt="Next: 7.4 Recap of Conventions" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch07-15411">7.3 UNIVERSAL</A
></H2
><p class="para">All modules implicitly inherit from a built-in module called <a class="indexterm" name="ch07-idx-969794-0"></A
>UNIVERSAL and inherit the following three methods:</P
><dl class="variablelist"><dt class="term"><kbd class="command">isa (</KBD
><em class="emphasis">package name</EM
><kbd class="command">)</KBD
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="ch07-idx-969795-0"></A
>For example, <kbd class="command">Rectangle-&gt;isa('Shape')</KBD
> returns true if the Rectangle module inherits (however indirectly) from the Shape module. </P
></DD
><dt class="term"><kbd class="command">can (</KBD
><em class="emphasis">function name</EM
>)</DT
><dd class="listitem"><p class="para"><kbd class="command">Rectangle-&gt;can('draw')</KBD
><a class="indexterm" name="ch07-idx-969796-0"></A
> returns true if the Rectangle or any of its base packages contain a function called <kbd class="command">draw</KBD
>. </P
></DD
><dt class="term"><kbd class="command">VERSION</KBD
> (<em class="emphasis">need version</EM
><kbd class="command">)</KBD
><a class="indexterm" name="ch07-idx-969797-0"></A
></DT
><dd class="listitem"><p class="para">If you say, </P
><pre class="programlisting">    package Bank;
    $VERSION = 5.1;</PRE
><p class="para">and the user of this module says,</P
><pre class="programlisting">    use Bank 5.2;</PRE
><p class="para">Perl automatically calls <kbd class="command">Bank-&gt;VERSION(5.2)</KBD
>, which can, for instance, make sure that all libraries required for version 5.2 are loaded. The default <code class="literal">VERSION</CODE
> method provided by UNIVERSAL simply dies if the <kbd class="command">Bank</KBD
>'s <kbd class="command">$VERSION</KBD
> variable has a lower value than that needed by the user of the module.</P
></DD
></DL
><p class="para">Because Perl allows a package to shamelessly trample on other namespaces, some packages use the UNIVERSAL module as a holding area for some global subroutines that they wish to export to everyone. I recommend that you do not use this "feature" yourself (or at least not in those that you contribute to CPAN!).</P
><div class="sect2"><h3 class="sect2"><a class="title" name="ch07-pgfId-967854">7.3.1 Searching for Methods</A
></H3
><p class="para"><a class="indexterm" name="ch07-idx-969804-0"></A
><a class="indexterm" name="ch07-idx-969804-1"></A
>We have mentioned two places that Perl searches when it cannot find a method in the target module: the <a class="indexterm" name="ch07-idx-969799-0"></A
>inheritance hierarchy (<kbd class="command">@ISA</KBD
>) and <kbd class="command">AUTOLOAD</KBD
>. While checking the inheritance hierarchy, Perl checks the base classes' <kbd class="command">@ISA</KBD
> arrays too: a depth-first search is conducted, and the first available one is used. Let us examine the precise order in which all these subroutines are searched. Given:</P
><pre class="programlisting">package Man;
@ISA = qw(Mammal Social_Animal);</PRE
><p class="para">a call to <kbd class="command">Man-&gt;schmooze</KBD
> results in the following search sequence. First the normal inheritance hierarchy is checked:</P
><ol class="orderedlist"><li class="listitem"><p class="para"><a class="listitem" name="ch07-pgfId-968281"></A
><kbd class="command">Man::schmooze</KBD
></P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch07-pgfId-968282"></A
><kbd class="command">Mammal::schmooze</KBD
></P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch07-pgfId-968204"></A
>(<kbd class="command">Mammal</KBD
>'s base classes, recursively)<kbd class="command">::schmooze</KBD
></P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch07-pgfId-968205"></A
><kbd class="command">Social_Animal::schmooze</KBD
></P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch07-pgfId-968206"></A
>(<kbd class="command">Social_Animal</KBD
>'s base classes, recursively)<kbd class="command">::schmooze</KBD
></P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch07-pgfId-968207"></A
><kbd class="command">UNIVERSAL::schmooze</KBD
> (because UNIVERSAL is implicitly at the end of every module's <kbd class="command">@ISA</KBD
> array)</P
></LI
></OL
><p class="para">Then <kbd class="command">AUTOLOAD</KBD
> is looked up in the same order:</P
><ol class="orderedlist" start="7"><li class="listitem"><p class="para"><a class="listitem" name="ch07-pgfId-968286"></A
><kbd class="command">Man::AUTOLOAD</KBD
></P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch07-pgfId-968289"></A
><kbd class="command">Mammal::AUTOLOAD</KBD
></P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch07-pgfId-968290"></A
>(<kbd class="command">Mammal</KBD
>'s base classes, recursively)::<kbd class="command">AUTOLOAD</KBD
></P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch07-pgfId-968291"></A
><kbd class="command">Social_Animal::AUTOLOAD</KBD
></P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch07-pgfId-968292"></A
>(<kbd class="command">Social_Animal</KBD
>'s base classes, recursively)<kbd class="command">::AUTOLOAD</KBD
></P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch07-pgfId-968293"></A
><kbd class="command">UNIVERSAL::AUTOLOAD</KBD
></P
></LI
></OL
><p class="para">The first available subroutine is given the control and the search is stopped. If all fails, Perl throws a run-time exception.<a class="indexterm" name="ch07-idx-969801-0"></A
><a class="indexterm" name="ch07-idx-969801-1"></A
><a class="indexterm" name="ch07-idx-969801-2"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch07_02.htm#ch07-16028" title="7.2 Objects in Perl"><img src="../gifs/txtpreva.gif" alt="Previous: 7.2 Objects in Perl" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Advanced Perl Programming"><img src="../gifs/txthome.gif" alt="Advanced Perl Programming" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch07_04.htm" title="7.4 Recap of Conventions"><img src="../gifs/txtnexta.gif" alt="Next: 7.4 Recap of Conventions" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.2 Objects in Perl</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.4 Recap of Conventions</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
