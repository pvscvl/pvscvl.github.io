<html><head>
<title>Recipe 5.6. Retrieving from a Hash in Insertion Order</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:32:37Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch05_01.htm" title="5. Hashes"><link rel="prev" href="ch05_06.htm" title="5.5. Printing a Hash"><link rel="next" href="ch05_08.htm" title="5.7. Hashes with Multiple Values Per Key"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch05_06.htm" title="5.5. Printing a Hash"><img src="../gifs/txtpreva.gif" alt="Previous: 5.5. Printing a Hash" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch05_01.htm" title="5. Hashes">Chapter 5<br>Hashes</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch05_08.htm" title="5.7. Hashes with Multiple Values Per Key"><img src="../gifs/txtnexta.gif" alt="Next: 5.7. Hashes with Multiple Values Per Key" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch05-11275">5.6. Retrieving from a Hash in Insertion Order</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-592">Problem</A
></H3
><p class="para"><a class="indexterm" name="ch05-idx-1000006466-0"></A
><a class="indexterm" name="ch05-idx-1000006466-1"></A
>The <code class="literal">keys</CODE
> and <code class="literal">each</CODE
> functions give you the hash elements in a strange order, and you want them in the order in which you inserted them.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-598">Solution</A
></H3
><p class="para">Use the <a class="indexterm" name="ch05-idx-1000006467-0"></A
>Tie::IxHash module.</P
><pre class="programlisting">use Tie::IxHash;
tie %HASH, &quot;Tie::IxHash&quot;;
# manipulate %HASH
@keys = keys %HASH;         # @keys is in insertion order</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-612">Discussion</A
></H3
><p class="para">Tie::IxHash makes <code class="literal">keys</CODE
>, <code class="literal">each</CODE
>, and <code class="literal">values</CODE
> return the hash elements in the order they were added. This often removes the need to preprocess the hash keys with a complex <code class="literal">sort</CODE
> comparison or maintain a distinct array containing the keys in the order they were inserted into the hash.</P
><p class="para">Tie::IxHash also provides an object-oriented interface to <code class="literal">splice</CODE
>, <code class="literal">push</CODE
><a class="indexterm" name="ch05-idx-1000006469-0"></A
> , <code class="literal">pop</CODE
>, <code class="literal">shift</CODE
>, <code class="literal">unshift</CODE
>, <code class="literal">keys</CODE
>, <code class="literal">values</CODE
>, and <code class="literal">delete</CODE
>, among others. <a class="indexterm" name="ch05-idx-1000006468-0"></A
><a class="indexterm" name="ch05-idx-1000006468-1"></A
><a class="indexterm" name="ch05-idx-1000006468-2"></A
><a class="indexterm" name="ch05-idx-1000006468-3"></A
><a class="indexterm" name="ch05-idx-1000006468-4"></A
><a class="indexterm" name="ch05-idx-1000006468-5"></A
><a class="indexterm" name="ch05-idx-1000006468-6"></A
></P
><p class="para">Here's an example, showing both <code class="literal">keys</CODE
> and <code class="literal">each</CODE
>:</P
><pre class="programlisting"># initialize
use Tie::IxHash;

tie %food_color, &quot;Tie::IxHash&quot;;
$food_color{Banana} = &quot;Yellow&quot;;
$food_color{Apple}  = &quot;Green&quot;;
$food_color{Lemon}  = &quot;Yellow&quot;;

print &quot;In insertion order, the foods are:\n&quot;;
foreach $food (keys %food_color) {
    print &quot;  $food\n&quot;;
}

print &quot;Still in insertion order, the foods' colors are:\n&quot;;
while (( $food, $color ) = each %food_color ) {
    print &quot;$food is colored $color.\n&quot;;
}

<code class="userinput"><b><code class="replaceable"><i>In insertion order, the foods are:</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>  Banana</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>  Apple</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>  Lemon</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>Still in insertion order, the foods' colors are:</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>Banana is colored Yellow.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>Apple is colored Green.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>Lemon is colored Yellow.</I
></CODE
></B
></CODE
></PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-674">See Also</A
></H3
><p class="para">The documentation for the CPAN module Tie::IxHash; <a class="xref" href="ch13_16.htm" title="Creating Magic Variables with tie">Recipe 13.15</A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch05_06.htm" title="5.5. Printing a Hash"><img src="../gifs/txtpreva.gif" alt="Previous: 5.5. Printing a Hash" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch05_08.htm" title="5.7. Hashes with Multiple Values Per Key"><img src="../gifs/txtnexta.gif" alt="Next: 5.7. Hashes with Multiple Values Per Key" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">5.5. Printing a Hash</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">5.7. Hashes with Multiple Values Per Key</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
