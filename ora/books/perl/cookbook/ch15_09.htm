<html><head>
<title>Recipe 15.8. Using POSIX termios</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:43:21Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch15_01.htm" title="15. User Interfaces"><link rel="prev" href="ch15_08.htm" title="15.7. Ringing the Terminal Bell"><link rel="next" href="ch15_10.htm" title="15.9. Checking for Waiting Input"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch15_08.htm" title="15.7. Ringing the Terminal Bell"><img src="../gifs/txtpreva.gif" alt="Previous: 15.7. Ringing the Terminal Bell" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch15_01.htm" title="15. User Interfaces">Chapter 15<br>User Interfaces</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch15_10.htm" title="15.9. Checking for Waiting Input"><img src="../gifs/txtnexta.gif" alt="Next: 15.9. Checking for Waiting Input" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch15-30095">15.8. Using POSIX termios</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch15-pgfId-705">Problem<a class="indexterm" name="ch15-idx-1000005102-0"></A
><a class="indexterm" name="ch15-idx-1000005102-1"></A
><a class="indexterm" name="ch15-idx-1000005102-2"></A
><a class="indexterm" name="ch15-idx-1000005102-3"></A
></A
></H3
><p class="para">You'd like to manipulate your terminal characteristics directly.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch15-pgfId-711">Solution</A
></H3
><p class="para">Use the POSIX <code class="literal">termios</CODE
> interface.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch15-pgfId-1000004681">Description</A
></H3
><p class="para">Think of everything you can do with the <em class="emphasis">stty</EM
> command &nbsp;-  you can set everything from special characters to flow control and carriage-return mapping. The standard POSIX module provides direct access to the low-level terminal interface to implement <em class="emphasis">stty</EM
>-like capabilities in your program.</P
><p class="para"><a class="xref" href="#ch15-23903" title="demo POSIX termios">Example 15.2</A
> finds what your tty's erase and kill characters are (probably backspace and Ctrl-U). Then it sets them back to their original values out of antiquity, <code class="literal">#</CODE
> and <code class="literal">@</CODE
>, and has you type something. It restores them when done.</P
><div class="example"><h4 class="example"><a class="title" name="ch15-23903">Example 15.2: demo POSIX termios</A
></H4
><pre class="programlisting">#!/usr/bin/perl -w
# demo POSIX termios

use POSIX qw(:termios_h);

$term = POSIX::Termios-&gt;new;
$term-&gt;getattr(fileno(STDIN));

$erase = $term-&gt;getcc(VERASE);
$kill = $term-&gt;getcc(VKILL);
printf &quot;Erase is character %d, %s\n&quot;, $erase, uncontrol(chr($erase));
printf &quot;Kill is character %d, %s\n&quot;, $kill, uncontrol(chr($kill));

$term-&gt;setcc(VERASE, ord('#'));
$term-&gt;setcc(VKILL, ord('@'));
$term-&gt;setattr(1, TCSANOW);

print(&quot;erase is #, kill is @; type something: &quot;);
$line = &lt;STDIN&gt;;
print &quot;You typed: $line&quot;;

$term-&gt;setcc(VERASE, $erase);
$term-&gt;setcc(VKILL, $kill);
$term-&gt;setattr(1, TCSANOW);

sub uncontrol {<a class="indexterm" name="ch15-idx-1000005866-0"></A
>
    local $_ = shift;
    s/([\200-\377])/sprintf(&quot;M-%c&quot;,ord($1) &amp; 0177)/eg;
    s/([\0-\37\177])/sprintf(&quot;^%c&quot;,ord($1) ^ 0100)/eg;
    return $_;
} </PRE
></DIV
><p class="para">Here's a module called <a class="indexterm" name="ch15-idx-1000005113-0"></A
>HotKey that implements a <code class="literal">readkey</CODE
> function in pure Perl. It doesn't provide any benefit over Term::ReadKey, but it shows POSIX termios in action:</P
><pre class="programlisting"># HotKey.pm
package HotKey;

@ISA = qw(Exporter);
@EXPORT = qw(cbreak cooked readkey);

use strict;
use POSIX qw(:termios_h);
my ($term, $oterm, $echo, $noecho, $fd_stdin);

$fd_stdin = fileno(STDIN);
$term     = POSIX::Termios-&gt;new();
$term-&gt;getattr($fd_stdin);
$oterm     = $term-&gt;getlflag();

$echo     = ECHO | ECHOK | ICANON;
$noecho   = $oterm &amp; ~$echo;

sub cbreak {
    $term-&gt;setlflag($noecho);  # ok, so i don't want echo either
    $term-&gt;setcc(VTIME, 1);
    $term-&gt;setattr($fd_stdin, TCSANOW);
}

sub cooked {
    $term-&gt;setlflag($oterm);
    $term-&gt;setcc(VTIME, 0);
    $term-&gt;setattr($fd_stdin, TCSANOW);
}

sub readkey {
    my $key = '';
    cbreak();
    sysread(STDIN, $key, 1);
    cooked();
    return $key;
}

END { cooked() }

1;<a class="indexterm" name="ch15-idx-1000005104-0"></A
><a class="indexterm" name="ch15-idx-1000005104-1"></A
><a class="indexterm" name="ch15-idx-1000005104-2"></A
></PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch15-pgfId-871">See Also</A
></H3
><p class="para"><cite class="citetitle">POSIX Programmer's Guide</CITE
>, by Donald Lewine; O'Reilly &amp; Associates (1991); the documentation for the standard POSIX module, also in <a class="olink" href="../prog/ch07_01.htm">Chapter 7</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; <a class="xref" href="ch15_07.htm" title="Reading from the Keyboard">Recipe 15.6</A
>; <a class="xref" href="ch15_10.htm" title="Checking for Waiting Input">Recipe 15.9</A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch15_08.htm" title="15.7. Ringing the Terminal Bell"><img src="../gifs/txtpreva.gif" alt="Previous: 15.7. Ringing the Terminal Bell" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch15_10.htm" title="15.9. Checking for Waiting Input"><img src="../gifs/txtnexta.gif" alt="Next: 15.9. Checking for Waiting Input" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">15.7. Ringing the Terminal Bell</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">15.9. Checking for Waiting Input</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
