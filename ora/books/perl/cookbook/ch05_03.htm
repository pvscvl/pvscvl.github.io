<html><head>
<title>Recipe 5.2. Testing for the Presence of a Key in a Hash</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:32:29Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch05_01.htm" title="5. Hashes"><link rel="prev" href="ch05_02.htm" title="5.1. Adding an Element to a Hash"><link rel="next" href="ch05_04.htm" title="5.3. Deleting from a Hash"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch05_02.htm" title="5.1. Adding an Element to a Hash"><img src="../gifs/txtpreva.gif" alt="Previous: 5.1. Adding an Element to a Hash" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch05_01.htm" title="5. Hashes">Chapter 5<br>Hashes</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch05_04.htm" title="5.3. Deleting from a Hash"><img src="../gifs/txtnexta.gif" alt="Next: 5.3. Deleting from a Hash" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch05-24827">5.2. Testing for the Presence of a Key in a Hash</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-130">Problem<a class="indexterm" name="ch05-idx-1000006426-0"></A
></A
></H3
><p class="para">You need to know whether a hash has a particular key, regardless of any possible associated value.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-136">Solution</A
></H3
><p class="para">Use the <code class="literal">exists</CODE
> function.</P
><pre class="programlisting"># does %HASH have a value for $KEY ?
if (exists($HASH{$KEY})) {
    # it exists
} else {
    # it doesn't
}</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-154">Discussion</A
></H3
><p class="para">This code uses <code class="literal">exists</CODE
> to check whether a key is in the <code class="literal">%food_color</CODE
> hash:</P
><pre class="programlisting"># %food_color per the introduction
foreach $name (&quot;Banana&quot;, &quot;Martini&quot;) {
    if (exists $food_color{$name}) {
        print &quot;$name is a food.\n&quot;;
    } else {
        print &quot;$name is a drink.\n&quot;;
    }
}

<code class="userinput"><b><code class="replaceable"><i>Banana is a food.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>Martini is a drink.</I
></CODE
></B
></CODE
></PRE
><p class="para">The <code class="literal">exists</CODE
> function tests whether a key is in the hash. It doesn't test whether the value corresponding to that key is defined, nor whether the value is true or false. We may be splitting hairs, but problems caused by confusing existence, definedness, and truth can multiply like rabbits. Take this code:</P
><pre class="programlisting">%age = ();
$age{&quot;Toddler&quot;} = 3;
$age{&quot;Unborn&quot;} = 0;
$age{&quot;Phantasm&quot;} = undef;

foreach $thing (&quot;Toddler&quot;, &quot;Unborn&quot;, &quot;Phantasm&quot;, &quot;Relic&quot;) {
    print &quot;$thing: &quot;;
    print &quot;Exists &quot; if exists $age{$thing};
    print &quot;Defined &quot; if defined $age{$thing};
    print &quot;True &quot; if $age{$thing};
    print &quot;\n&quot;;
}

<code class="userinput"><b><code class="replaceable"><i>Toddler: Exists Defined True </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>Unborn: Exists Defined </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>Phantasm: Exists </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>Relic: </I
></CODE
></B
></CODE
></PRE
><p class="para"><code class="literal">$age{&quot;Toddler&quot;}</CODE
> passes the existence, definedness, and truth tests. It exists because we gave <code class="literal">&quot;Toddler&quot;</CODE
> a value in the hash, it's defined because that value isn't <code class="literal">undef</CODE
>, and it's true because the value isn't one of Perl's false values.</P
><p class="para"><code class="literal">$age{&quot;Unborn&quot;}</CODE
> passes only the existence and definedness tests. It exists because we gave <code class="literal">&quot;Unborn&quot;</CODE
> a value in the hash, and it's defined because that value isn't <code class="literal">undef</CODE
>. It isn't <em class="emphasis">true</EM
>, however, because <code class="literal">0</CODE
> is one of Perl's false values.</P
><p class="para"><code class="literal">$age{&quot;Phantasm&quot;}</CODE
> passes only the existence test. It exists because we gave <code class="literal">&quot;Phantasm&quot;</CODE
> a value in the hash. Because that value was <code class="literal">undef</CODE
>, it doesn't pass the definedness test. Because <code class="literal">undef</CODE
> is also one of Perl's false values, it doesn't pass the truth test either.</P
><p class="para"><code class="literal">$age{&quot;Relic&quot;}</CODE
> passes none of the tests. We didn't put a value for <code class="literal">&quot;Relic&quot;</CODE
> into the hash, so the existence test fails. Because we didn't put a value in, <code class="literal">$age{&quot;Relic&quot;}</CODE
> is <code class="literal">undef</CODE
> whenever we try to access it. We know from <code class="literal">&quot;Phantasm&quot;</CODE
> that <code class="literal">undef</CODE
> fails the definedness and truth tests.</P
><p class="para">Sometimes it's useful to store <code class="literal">undef</CODE
> in a hash. This indicates "I've seen this key, but it didn't have a meaningful value associated with it." Take, for instance, a program to look up file sizes given a list of files as input. This version tries to skip files we've seen before, but it doesn't skip zero-length files, and it doesn't skip files that we've seen before but don't exist.</P
><pre class="programlisting">%size = ();
while (&lt;&gt;) {
    chomp;
    next if $size{$_};              # WRONG attempt to skip
    $size{$_} = -s $_;
}</PRE
><p class="para">If we change the incorrect line to call <code class="literal">exists</CODE
>, we also skip files that couldn't be <code class="literal">stat</CODE
>ted, instead of repeatedly trying (and failing) to look them up:</P
><pre class="programlisting">    next if exists $size{$_};</PRE
><p class="para">The food and drink code above assumes that which is not food must be a drink. This is a dangerous assumption to make in the real world.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-250">See Also</A
></H3
><p class="para">The <code class="literal">exists</CODE
> and <code class="literal">defined</CODE
> functions in <i class="filename">perlfunc </I
>(1) and <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; the discussion of truth in the "Scalar Values" section of <i class="filename">perldata </I
>(1), and the <a class="olink" href="../prog/ch02_03.htm#PERL2-CH-2-SECT-3.1">"Boolean Context"</A
> section of <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>.<a class="indexterm" name="ch05-idx-1000006425-0"></A
><a class="indexterm" name="ch05-idx-1000006425-1"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch05_02.htm" title="5.1. Adding an Element to a Hash"><img src="../gifs/txtpreva.gif" alt="Previous: 5.1. Adding an Element to a Hash" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch05_04.htm" title="5.3. Deleting from a Hash"><img src="../gifs/txtnexta.gif" alt="Next: 5.3. Deleting from a Hash" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">5.1. Adding an Element to a Hash</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">5.3. Deleting from a Hash</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
