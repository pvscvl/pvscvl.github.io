<html><head>
<title>Recipe 14.10. Executing an SQL Command Using DBI and DBD</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:43:00Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch14_01.htm" title="14. Database Access"><link rel="prev" href="ch14_10.htm" title="14.9. Persistent Data"><link rel="next" href="ch14_12.htm" title="14.11. Program: ggh&nbsp- Grep Netscape Global History"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch14_10.htm" title="14.9. Persistent Data"><img src="../gifs/txtpreva.gif" alt="Previous: 14.9. Persistent Data" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch14_01.htm" title="14. Database Access">Chapter 14<br>Database Access</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch14_12.htm" title="14.11. Program: ggh&nbsp- Grep Netscape Global History"><img src="../gifs/txtnexta.gif" alt="Next: 14.11. Program: ggh&nbsp- Grep Netscape Global History" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch14-77835">14.10. Executing an SQL Command Using DBI and DBD</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch14-pgfId-1262">Problem<a class="indexterm" name="ch14-idx-1000005007-0"></A
><a class="indexterm" name="ch14-idx-1000005007-1"></A
><a class="indexterm" name="ch14-idx-1000005007-2"></A
><a class="indexterm" name="ch14-idx-1000005007-3"></A
></A
></H3
><p class="para">You want to send SQL queries to a database system such as Oracle, Sybase, mSQL, or MySQL, and process their results.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch14-pgfId-1268">Solution</A
></H3
><p class="para">Use the DBI (DataBase Interface) and DBD (DataBase Driver) modules available from CPAN:</P
><pre class="programlisting"><code class="literal">use DBI;</CODE
>

<code class="literal">$dbh = DBI-&gt;connect('DBI:driver:database', 'username', 'auth',</CODE
>
<code class="literal">            { RaiseError =&gt; 1, AutoCommit =&gt; 1});</CODE
>
<code class="literal">$dbh-&gt;do($SQL);</CODE
>
<code class="literal">$sth = $dbh-&gt;prepare($SQL);</CODE
>
<code class="literal">$sth-&gt;execute();</CODE
>
<code class="literal">while (@row = $sth-&gt;fetchrow_array) {</CODE
>
<code class="literal">    # ...</CODE
>
<code class="literal">}</CODE
>
<code class="literal">$sth-&gt;finish();</CODE
>
<code class="literal">$dbh-&gt;disconnect();</CODE
></PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch14-pgfId-1306">Discussion</A
></H3
><p class="para">DBI acts as an intermediary between your program and any number of DBMS-specific drivers. For most actions you need a database handle (<code class="literal">$dbh</CODE
> in the example). This is attached to a specific database and driver using the <code class="literal">DBI-&gt;connect</CODE
> call.</P
><p class="para">The first argument to <code class="literal">DBI-&gt;connect</CODE
> is a single string with three colon-separated fields. It represents the <em class="emphasis">data source </EM
>&nbsp;-  the DBMS you're connecting to. The first field is always <code class="literal">DBI</CODE
>, and the second is the name of the driver you're going to use (<code class="literal">Oracle</CODE
>, <code class="literal">mysql</CODE
>, etc.). The rest of the string is passed by the DBI module to the requested driver module (DBD::mysql, for example) where it identifies the database.</P
><p class="para">The second and third arguments authenticate the user.</P
><p class="para">The fourth argument is an optional hash reference defining attributes of the connection. Setting PrintError to true makes DBI warn whenever a DBI method fails. Setting RaiseError is like PrintError except that <code class="literal">die</CODE
> is used instead of <code class="literal">warn</CODE
>. AutoCommit says that you don't want to deal with transactions (smaller DBMSs don't support them, and if you're using a larger DBMS then you can read about transactions in the DBMS documentation).</P
><p class="para">You can execute simple SQL statements (those that don't return rows of data) with a database handle's <code class="literal">do</CODE
> method. This returns Boolean true or false. SQL statements that return rows of data (like <code class="literal">SELECT</CODE
>) require that you first use the database handle's <code class="literal">prepare</CODE
> method to create a statement handle. Then call the <code class="literal">execute</CODE
> method on the statement handle to perform the query, and retrieve rows with a fetch method like <code class="literal">fetchrow_array</CODE
> or <code class="literal">fetchrow_hashref</CODE
> (which returns a reference to a hash mapping column name to value).</P
><p class="para">Statement handles and database handles often correspond to underlying connections to the database, so some care must be taken with them. A connection is automatically cleaned up when its handle goes out of scope. If a database handle goes out of scope while there are active statement handles for that database, though, you will get a warning like this:</P
><pre class="programlisting">disconnect(DBI::db=HASH(0x9df84)) invalidates 1 active cursor(s) 
    at -e line 1.</PRE
><p class="para">The <code class="literal">finish</CODE
> method ensures the statement handle is inactive (some old drivers need this). The <code class="literal">disconnect</CODE
> method, er, disconnects from the database.</P
><p class="para">The DBI module comes with a FAQ (<code class="literal">perldoc</CODE
> <code class="literal">DBI::FAQ</CODE
>) and regular documentation (<code class="literal">perldoc</CODE
> <code class="literal">DBI</CODE
>). The driver for your DBMS also has documentation (<code class="literal">perldoc</CODE
> <code class="literal">DBD::mysql</CODE
>, for instance). The DBI API is larger than the simple subset we've shown here; it provides diverse ways of fetching results, and it hooks into DBMS-specific features like stored procedures. Consult the driver module's documentation to learn about these.</P
><p class="para">The program in <a class="xref" href="#ch14-35497" title="dbusers">Example 14.7</A
> creates, populates, and searches a MySQL table of users. It uses the RaiseError attribute so it doesn't have to check the return status of every method call.</P
><div class="example"><h4 class="example"><a class="title" name="ch14-35497">Example 14.7: dbusers</A
></H4
><pre class="programlisting">#!/usr/bin/perl -w
# <a class="indexterm" name="ch14-idx-1000005013-0"></A
>dbusers - manage MySQL user table
use DBI;
use User::pwent;

$dbh = DBI-&gt;connect('DBI:mysql:dbname:mysqlserver.domain.com:3306',
                    'user', 'password',
                    { RaiseError =&gt; 1, AutoCommit =&gt; 1 })

$dbh-&gt;do(&quot;CREATE TABLE users (uid INT, login CHAR(8))&quot;);

$sql_fmt = &quot;INSERT INTO users VALUES( %d, %s )&quot;;
while ($user = getpwent) {
    $sql = sprintf($sql_fmt, $user-&gt;uid, $dbh-&gt;quote($user-&gt;name));
    $dbh-&gt;do($sql);
}

$sth = $dbh-&gt;prepare(&quot;SELECT * FROM users WHERE uid &lt; 50&quot;);
$sth-&gt;execute;

while ((@row) = $sth-&gt;fetchrow_array) {
    print join(&quot;, &quot;, map {defined $_ ? $_ : &quot;(null)&quot;} @row), &quot;\n&quot;;
}
$sth-&gt;finish;
    
$dbh-&gt;do(&quot;DROP TABLE users&quot;);

$dbh-&gt;disconnect;<a class="indexterm" name="ch14-idx-1000005009-0"></A
><a class="indexterm" name="ch14-idx-1000005009-1"></A
><a class="indexterm" name="ch14-idx-1000005009-2"></A
><a class="indexterm" name="ch14-idx-1000005009-3"></A
></PRE
></DIV
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch14-pgfId-1386">See Also</A
></H3
><p class="para">The documentation for the DBI and relevant DBD modules from CPAN; <a class="systemitem.url" href="../../../../../../../www.hermetica.com/technologia/perl/DBI/">http://www.hermetica.com/technologia/perl/DBI/</A
> and <a class="systemitem.url" href="../../../../../../../www.perl.com/CPAN/modules/ by-category/07_Database_Interfaces/">http://www.perl.com/CPAN/modules/ by-category/07_Database_Interfaces/</A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch14_10.htm" title="14.9. Persistent Data"><img src="../gifs/txtpreva.gif" alt="Previous: 14.9. Persistent Data" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch14_12.htm" title="14.11. Program: ggh&nbsp- Grep Netscape Global History"><img src="../gifs/txtnexta.gif" alt="Next: 14.11. Program: ggh&nbsp- Grep Netscape Global History" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">14.9. Persistent Data</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">14.11. Program: ggh&nbsp- Grep Netscape Global History</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
