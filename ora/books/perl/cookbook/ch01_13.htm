<html><head>
<title>Recipe 1.12. Reformatting Paragraphs</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:29:15Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch01_01.htm" title="1. Strings"><link rel="prev" href="ch01_12.htm" title="1.11. Indenting Here Documents"><link rel="next" href="ch01_14.htm" title="1.13. Escaping Characters"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch01_12.htm" title="1.11. Indenting Here Documents"><img src="../gifs/txtpreva.gif" alt="Previous: 1.11. Indenting Here Documents" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch01_01.htm" title="1. Strings">Chapter 1<br>Strings</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch01_14.htm" title="1.13. Escaping Characters"><img src="../gifs/txtnexta.gif" alt="Next: 1.13. Escaping Characters" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch01-chap01_reformatting_0">1.12. Reformatting Paragraphs</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch01-pgfId-1417">Problem <a class="indexterm" name="ch01-idx-1000010298-0"></A
><a class="indexterm" name="ch01-idx-1000010298-1"></A
><a class="indexterm" name="ch01-idx-1000010298-2"></A
><a class="indexterm" name="ch01-idx-1000010298-3"></A
><a class="indexterm" name="ch01-idx-1000010298-4"></A
></A
></H3
><p class="para">Your string is too big to fit the screen, and you want to break it up into lines of words, without splitting a word between lines. For instance, a style correction script might read a text file a paragraph at a time, replacing bad phrases with good ones. Replacing a phrase like <em class="emphasis">utilizes the inherent functionality of</EM
> with <em class="emphasis">uses</EM
> will change the length of lines, so it must somehow reformat the paragraphs when they're output.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch01-pgfId-1423">Solution</A
></H3
><p class="para">Use the standard Text::Wrap module to put line breaks at the right place.</P
><pre class="programlisting">use Text::Wrap;
@OUTPUT = wrap($LEADTAB, $NEXTTAB, @PARA);</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch01-pgfId-1433">Discussion</A
></H3
><p class="para">The Text::Wrap module provides the <code class="literal">wrap</CODE
> function, shown in <a class="xref" href="#ch01-10808" title="wrapdemo">Example 1.3</A
>, which takes a list of lines and reformats them into a paragraph having no line more than<a class="indexterm" name="ch01-idx-1000010299-0"></A
> <code class="literal">$Text::Wrap::columns</CODE
> characters long. We set <code class="literal">$columns</CODE
> to 20, ensuring that no line will be longer than 20 characters. We pass <code class="literal">wrap</CODE
> two arguments before the list of lines: the first is the indent for the first line of output, the second the indent for every subsequent line.</P
><div class="example"><h4 class="example"><a class="title" name="ch01-10808">Example 1.3: wrapdemo</A
></H4
><pre class="programlisting">#!/usr/bin/perl -w
# <a class="indexterm" name="ch01-idx-1000010671-0"></A
>wrapdemo - show how Text::Wrap works

@input = (&quot;Folding and splicing is the work of an editor,&quot;,
          &quot;not a mere collection of silicon&quot;,
          &quot;and&quot;,
          &quot;mobile electrons!&quot;);

use Text::Wrap qw($columns &amp;wrap);

$columns = 20;
print &quot;0123456789&quot; x 2, &quot;\n&quot;;
print wrap(&quot;    &quot;, &quot;  &quot;, @input), &quot;\n&quot;;</PRE
></DIV
><p class="para">The result of this program is:</P
><pre class="programlisting"><code class="userinput"><b><code class="replaceable"><i>01234567890123456789</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>    Folding and</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>  splicing is the</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>  work of an</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>  editor, not a</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>  mere collection</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>  of silicon and</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>  mobile electrons!</I
></CODE
></B
></CODE
></PRE
><p class="para">We get back a single string, with newlines ending each line but the last:</P
><pre class="programlisting"># merge multiple lines into one, then wrap one long line
use Text::Wrap;
undef $/;
print wrap('', '', split(/\s*\n\s*/, &lt;&gt;));</PRE
><p class="para">If you have the <a class="indexterm" name="ch01-idx-1000010305-0"></A
>Term::ReadKey module (available from CPAN) on your system, you can use it to determine your window size so you can wrap lines to fit the current screen size. If you don't have the module, sometimes the screen size can be found in <code class="literal">$ENV{COLUMNS}</CODE
> or by parsing the output of the <em class="emphasis">stty</EM
> command.</P
><p class="para">The following program tries to reformat both short and long lines within a paragraph, similar to the <em class="emphasis">fmt</EM
><a class="indexterm" name="ch01-idx-1000011513-0"></A
> program, by setting the input record separator <code class="literal">$/</CODE
> to the empty string (causing &lt; &gt; to read paragraphs) and the output record separator <code class="literal">$\</CODE
> to two newlines. Then the paragraph is converted into one long line by changing all newlines (and any surrounding whitespace) to single spaces. Finally, we call the <code class="literal">wrap</CODE
> function with both leading and subsequent tab strings set to the empty string so we can have block paragraphs.</P
><pre class="programlisting">use Text::Wrap      qw(&amp;wrap $columns);
use Term::ReadKey   qw(GetTerminalSize);
($columns) = GetTerminalSize();
($/, $\)  = ('', &quot;\n\n&quot;);   # read by paragraph, output 2 newlines
while (&lt;&gt;) {                # grab a full paragraph
    s/\s*\n\s*/ /g;         # convert intervening newlines to spaces
    print wrap('', '', $_); # and format
}</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch01-pgfId-1513">See Also</A
></H3
><p class="para">The <code class="literal">split</CODE
> and <code class="literal">join</CODE
> functions in <em class="emphasis">perlfunc </EM
>(1) and <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; the manpage for the standard Text::Wrap module, also in <a class="olink" href="../prog/ch07_01.htm">Chapter 7</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; the CPAN module Term::ReadKey, and its use in <a class="xref" href="ch15_07.htm" title="Reading from the Keyboard">Recipe 15.6</A
> <a class="indexterm" name="ch01-idx-1000010311-0"></A
><a class="indexterm" name="ch01-idx-1000010311-1"></A
><a class="indexterm" name="ch01-idx-1000010311-2"></A
><a class="indexterm" name="ch01-idx-1000010311-3"></A
><a class="indexterm" name="ch01-idx-1000010311-4"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch01_12.htm" title="1.11. Indenting Here Documents"><img src="../gifs/txtpreva.gif" alt="Previous: 1.11. Indenting Here Documents" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch01_14.htm" title="1.13. Escaping Characters"><img src="../gifs/txtnexta.gif" alt="Next: 1.13. Escaping Characters" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">1.11. Indenting Here Documents</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">1.13. Escaping Characters</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
