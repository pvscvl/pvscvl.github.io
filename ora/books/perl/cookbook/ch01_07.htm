<html><head>
<title>Recipe 1.6. Reversing a String by Word or Character</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:28:52Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch01_01.htm" title="1. Strings"><link rel="prev" href="ch01_06.htm" title="1.5. Processing a String One Character at a Time"><link rel="next" href="ch01_08.htm" title="1.7. Expanding and Compressing Tabs"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch01_06.htm" title="1.5. Processing a String One Character at a Time"><img src="../gifs/txtpreva.gif" alt="Previous: 1.5. Processing a String One Character at a Time" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch01_01.htm" title="1. Strings">Chapter 1<br>Strings</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch01_08.htm" title="1.7. Expanding and Compressing Tabs"><img src="../gifs/txtnexta.gif" alt="Next: 1.7. Expanding and Compressing Tabs" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch01-51812">1.6. Reversing a String by Word or Character</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch01-pgfId-669">Problem <a class="indexterm" name="ch01-idx-1000010224-0"></A
><a class="indexterm" name="ch01-idx-1000010224-1"></A
><a class="indexterm" name="ch01-idx-1000010224-2"></A
><a class="indexterm" name="ch01-idx-1000010224-3"></A
></A
></H3
><p class="para">You want to reverse the characters or words of a string.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch01-pgfId-675">Solution</A
></H3
><p class="para">Use the <code class="literal">reverse</CODE
><a class="indexterm" name="ch01-idx-1000010241-0"></A
> function in scalar context for flipping bytes.</P
><pre class="programlisting">$revbytes = reverse($string);</PRE
><p class="para">To flip words, use <code class="literal">reverse</CODE
> in list context with <code class="literal">split</CODE
> and <code class="literal">join</CODE
>:</P
><pre class="programlisting">$revwords = join(&quot; &quot;, reverse split(&quot; &quot;, $string));</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch01-pgfId-687">Discussion</A
></H3
><p class="para">The <code class="literal">reverse</CODE
> function is two different functions in one. When called in scalar context, it joins together its arguments and returns that string in reverse order. When called in list context, it returns its arguments in the opposite order. When using <code class="literal">reverse</CODE
> for its byte-flipping behavior, use <code class="literal">scalar</CODE
> to force scalar context unless it's entirely obvious.</P
><pre class="programlisting">$gnirts   = reverse($string);       # reverse letters in $string

@sdrow    = reverse(@words);        # reverse elements in @words

$confused = reverse(@words);        # reverse letters in join(&quot;&quot;, @words)</PRE
><p class="para">Here's an example of reversing words in a string. Using a single space, &quot; &quot;, as the pattern to <code class="literal">split</CODE
> is a special case. It causes <code class="literal">split</CODE
> to use contiguous whitespace as the separator and also discard any leading null fields, just like <em class="emphasis">awk</EM
>. Normally, <code class="literal">split</CODE
> discards only trailing null fields.</P
><pre class="programlisting"># reverse word order
$string = 'Yoda said, &quot;can you see this?&quot;';
@allwords    = split(&quot; &quot;, $string);
$revwords    = join(&quot; &quot;, reverse @allwords);
print $revwords, &quot;\n&quot;;
<code class="userinput"><b><code class="replaceable"><i>this?&quot; see you &quot;can said, Yoda</I
></CODE
></B
></CODE
></PRE
><p class="para">We could remove the temporary array <code class="literal">@allwords</CODE
> and do it on one line:</P
><pre class="programlisting">$revwords = join(&quot; &quot;, reverse split(&quot; &quot;, $string));</PRE
><p class="para">Multiple whitespace in <code class="literal">$string</CODE
> becomes a single space in <code class="literal">$revwords</CODE
>. If you want to preserve whitespace, use this:</P
><pre class="programlisting">$revwords = join(&quot;&quot;, reverse split(/(\s+)/, $string));</PRE
><p class="para">One use of <code class="literal">reverse</CODE
> is to test whether a word is a palindrome (a word that reads the same backward or forward):</P
><pre class="programlisting">$word = &quot;reviver&quot;;
$is_palindrome = ($word eq reverse($word));</PRE
><p class="para">We can turn this into a one-liner that finds big palindromes in <em class="emphasis">/usr/dict/words</EM
>.</P
><pre class="programlisting">% perl -nle 'print if $_ eq reverse &amp;&amp; length &gt; 5' /usr/dict/words
<code class="userinput"><b><code class="replaceable"><i>deedeed</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>degged</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>deified</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>denned</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>hallah</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>kakkak</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>murdrum</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>redder</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>repaper</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>retter</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>reviver</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>rotator</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>sooloos</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>tebbet</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>terret</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>tut-tut</I
></CODE
></B
></CODE
></PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch01-pgfId-735">See Also</A
></H3
><p class="para">The <code class="literal">split</CODE
>, <code class="literal">reverse</CODE
>, and <code class="literal">scalar</CODE
> functions in <em class="emphasis">perlfunc </EM
>(1) and <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; the "Switches" section of <em class="emphasis">perlrun </EM
>(1) and <a class="olink" href="../prog/ch06_01.htm">Chapter 6</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
><a class="indexterm" name="ch01-idx-1000010233-0"></A
><a class="indexterm" name="ch01-idx-1000010233-1"></A
><a class="indexterm" name="ch01-idx-1000010233-2"></A
><a class="indexterm" name="ch01-idx-1000010233-3"></A
><a class="indexterm" name="ch01-idx-1000010233-4"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch01_06.htm" title="1.5. Processing a String One Character at a Time"><img src="../gifs/txtpreva.gif" alt="Previous: 1.5. Processing a String One Character at a Time" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch01_08.htm" title="1.7. Expanding and Compressing Tabs"><img src="../gifs/txtnexta.gif" alt="Next: 1.7. Expanding and Compressing Tabs" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">1.5. Processing a String One Character at a Time</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">1.7. Expanding and Compressing Tabs</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
