<html><head>
<title>Recipe 5.5. Printing a Hash</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:32:36Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch05_01.htm" title="5. Hashes"><link rel="prev" href="ch05_05.htm" title="5.4. Traversing a Hash"><link rel="next" href="ch05_07.htm" title="5.6. Retrieving from a Hash in Insertion Order"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch05_05.htm" title="5.4. Traversing a Hash"><img src="../gifs/txtpreva.gif" alt="Previous: 5.4. Traversing a Hash" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch05_01.htm" title="5. Hashes">Chapter 5<br>Hashes</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch05_07.htm" title="5.6. Retrieving from a Hash in Insertion Order"><img src="../gifs/txtnexta.gif" alt="Next: 5.6. Retrieving from a Hash in Insertion Order" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch05-chap05_printing_0">5.5. Printing a Hash</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-528">Problem <a class="indexterm" name="ch05-idx-1000006456-0"></A
><a class="indexterm" name="ch05-idx-1000006456-1"></A
></A
></H3
><p class="para">You want to print a hash, but neither <code class="literal">print</CODE
> <code class="literal">&quot;%hash&quot;</CODE
> nor <code class="literal">print</CODE
> <code class="literal">%hash</CODE
> works.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-534">Solution</A
></H3
><p class="para">One of several approaches is to iterate over every key-value pair in the hash using <a class="xref" href="ch05_05.htm" title="Traversing a Hash">Recipe 5.4</A
>, and print them:</P
><pre class="programlisting">while ( ($k,$v) = each %hash ) {
    print &quot;$k =&gt; $v\n&quot;;
}</PRE
><p class="para">Or use <code class="literal">map</CODE
> to generate a list of strings:</P
><pre class="programlisting">print map { &quot;$_ =&gt; $hash{$_}\n&quot; } keys %hash;</PRE
><p class="para">Or use the interpolation trick from <a class="xref" href="ch01_11.htm" title="Interpolating Functions and Expressions Within Strings">Recipe 1.10</A
> to interpolate the hash as a list:</P
><pre class="programlisting">print &quot;@{[ %hash ]}\n&quot;;</PRE
><p class="para">Or use a temporary array variable to hold the hash, and print that:</P
><pre class="programlisting">{
    my @temp = %hash;
    print &quot;@temp&quot;;
}</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-564">Discussion</A
></H3
><p class="para">The methods differ in the degree that their output is customizable in order and formatting and in their efficiency.</P
><p class="para">The first method, iterating over the hash, is very flexible and space-efficient. You can format the output as you like it, and it only requires two scalar variables: the current key and value. You can print the hash in key order (at the cost of building a list of sorted keys) if you use a <code class="literal">foreach</CODE
> loop.</P
><pre class="programlisting">foreach $k (sort keys %hash) {
    print &quot;$k =&gt; $hash{$k}\n&quot;;
}</PRE
><p class="para">The <code class="literal">map</CODE
> function is just as flexible. You can still process the list in any order by sorting the keys. You can customize the output to your heart's content. But it builds up a list of strings like <code class="literal">&quot;KEY</CODE
> <code class="literal">=&gt;VALUE\n&quot;</CODE
> to pass to <code class="literal">print</CODE
>.</P
><p class="para">The last two methods are interpolation tricks. By treating the hash as an list, you can't predict or control the output order of the key-value pairs. Furthermore, the output will consist of a list of keys and values, each separated by whatever <code class="literal">$&quot;</CODE
> happens to hold. You can't put newlines between pairs or <code class="literal">&quot;=&gt;&quot;</CODE
> within them, as we could with the other methods.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-582">See Also</A
></H3
><p class="para">The <code class="literal">$&quot;</CODE
> variable in <em class="emphasis">perlvar  </EM
>(1) and in the <a class="olink" href="../prog/ch02_09.htm#PERL2-CH-2-SECT-9.4">"Global Special Variables"</A
> section of <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; the <code class="literal">foreach</CODE
>, <code class="literal">map</CODE
>, <code class="literal">keys</CODE
>, <code class="literal">sort</CODE
>, and <code class="literal">each</CODE
> functions in <i class="filename">perlfunc </I
>(1) and <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; we give a technique for interpolating into strings in <a class="xref" href="ch01_11.htm" title="Interpolating Functions and Expressions Within Strings">Recipe 1.10</A
>; we discuss the techniques for hash traversal in <a class="xref" href="ch05_05.htm" title="Traversing a Hash">Recipe 5.4</A
><a class="indexterm" name="ch05-idx-1000006458-0"></A
><a class="indexterm" name="ch05-idx-1000006458-1"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch05_05.htm" title="5.4. Traversing a Hash"><img src="../gifs/txtpreva.gif" alt="Previous: 5.4. Traversing a Hash" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch05_07.htm" title="5.6. Retrieving from a Hash in Insertion Order"><img src="../gifs/txtnexta.gif" alt="Next: 5.6. Retrieving from a Hash in Insertion Order" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">5.4. Traversing a Hash</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">5.6. Retrieving from a Hash in Insertion Order</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
