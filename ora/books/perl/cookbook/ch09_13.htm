<html><head>
<title>Recipe 9.12. Program: lst</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:39:23Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch09_01.htm" title="9. Directories"><link rel="prev" href="ch09_12.htm" title="9.11. Program: symirror"><link rel="next" href="ch10_01.htm" title="10. Subroutines"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch09_12.htm" title="9.11. Program: symirror"><img src="../gifs/txtpreva.gif" alt="Previous: 9.11. Program: symirror" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch09_01.htm" title="9. Directories">Chapter 9<br>Directories</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="chapter" href="ch10_01.htm" title="10. Subroutines"><img src="../gifs/txtnexta.gif" alt="Next: 10. Subroutines" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch09-chap09_program_1">9.12. Program: lst</A
></H2
><p class="para"><a class="indexterm" name="ch09-idx-1000004453-0"></A
><a class="indexterm" name="ch09-idx-1000004453-1"></A
><a class="indexterm" name="ch09-idx-1000004453-2"></A
><a class="indexterm" name="ch09-idx-1000004453-3"></A
>Have you ever wondered what the newest or biggest files within a directory are? The standard <em class="emphasis">ls</EM
> program has options for listing out directories sorted in time order (the <b class="emphasis.bold">-t</B
> flag) and for recursing into subdirectories (the <b class="emphasis.bold">-R</B
> flag). However, it pauses at each directory to display the sorted contents of just that directory. It doesn't descend through all the subdirectories first and then sort everything it finds.</P
><p class="para">The following <em class="emphasis">lst</EM
> program does that. Here's an example using its <b class="emphasis.bold">-l</B
> flag to get a long listing:</P
><pre class="programlisting">% lst -l /etc
<code class="userinput"><b><code class="replaceable"><i>12695 0600      1     root    wheel      512 Fri May 29 10:42:41 1998 </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>    /etc/ssh_random_seed</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>12640 0644      1     root    wheel    10104 Mon May 25  7:39:19 1998 </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>    /etc/ld.so.cache</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>12626 0664      1     root    wheel    12288 Sun May 24 19:23:08 1998 </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>    /etc/psdevtab</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>12304 0644      1     root     root      237 Sun May 24 13:59:33 1998 </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>    /etc/exports</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>12309 0644      1     root     root     3386 Sun May 24 13:24:33 1998 </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>    /etc/inetd.conf</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>12399 0644      1     root     root    30205 Sun May 24 10:08:37 1998 </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>    /etc/sendmail.cf</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>18774 0644      1     gnat  perldoc     2199 Sun May 24  9:35:57 1998 </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>    /etc/X11/XMetroconfig</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>12636 0644      1     root    wheel      290 Sun May 24  9:05:40 1998 </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>    /etc/mtab</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>12627 0640      1     root     root        0 Sun May 24  8:24:31 1998 </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>    /etc/wtmplock</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>12310 0644      1     root  tchrist       65 Sun May 24  8:23:04 1998 </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>    /etc/issue</I
></CODE
></B
></CODE
>
....</PRE
><p class="para"><em class="emphasis">/etc/X11/XMetroconfig</EM
> showed up in the middle of the listing for <em class="emphasis">/etc</EM
> because it wasn't just for <em class="emphasis">/etc</EM
>, but for everything within that directory, recursively.</P
><p class="para">Other supported options include sorting on read time instead of write time using <b class="emphasis.bold">-u</B
> and sorting on size rather than time with <b class="emphasis.bold">-s</B
>. The <b class="emphasis.bold">-i</B
> flag takes the list of filenames from standard input instead of recursing with <code class="literal">find</CODE
>. That way, if you already had a list of filenames, you could feed them to <em class="emphasis">lst</EM
> for sorting.</P
><p class="para">The program is shown in <a class="xref" href="#ch09-16966" title="lst">Example 9.7</A
>.</P
><div class="example"><h4 class="example"><a class="title" name="ch09-16966">Example 9.7: lst</A
></H4
><pre class="programlisting">#!/usr/bin/perl
# lst - list sorted directory contents (depth first)

use Getopt::Std;
use File::Find;
use File::stat;
use User::pwent;
use User::grent;

getopts('lusrcmi')    or die &lt;&lt;DEATH;
Usage: $0 [-mucsril] [dirs ...]
 or    $0 -i [-mucsrl] &lt; filelist

Input format:
    -i  read pathnames from stdin
Output format:
    -l  long listing
Sort on:
    -m  use mtime (modify time) [DEFAULT]
    -u  use atime (access time)
    -c  use ctime (inode change time)
    -s  use size for sorting
Ordering:
    -r  reverse sort
NB: You may only use select one sorting option at a time.
DEATH
    
unless ($opt_i || @ARGV) { @ARGV = ('.') }

if ($opt_c + $opt_u + $opt_s + $opt_m &gt; 1) {
    die &quot;can only sort on one time or size&quot;;
}

$IDX = 'mtime';
$IDX = 'atime' if $opt_u;
$IDX = 'ctime' if $opt_c;
$IDX = 'size'  if $opt_s;

$TIME_IDX = $opt_s ? 'mtime' : $IDX;

*name = *File::Find::name;  # forcibly import that variable

# the $opt_i flag tricks wanted into taking
# its filenames from ARGV instead of being
# called from find.

if ($opt_i) {
     *name = *_;  # $name now alias for $_
     while (&lt;&gt;) { chomp; &amp;wanted; }   # ok, not stdin really
}  else {
    find(\&amp;wanted, @ARGV);
}

# sort the files by their cached times, youngest first
@skeys = sort { $time{$b} &lt;=&gt; $time{$a} } keys %time;

# but flip the order if -r was supplied on command line
@skeys = reverse @skeys if $opt_r;

for (@skeys) {
    unless ($opt_l) {  # emulate ls -l, except for permissions
        print &quot;$_\n&quot;;
        next;
    }
    $now = localtime $stat{$_}-&gt;$TIME_IDX();
    printf &quot;%6d %04o %6d %8s %8s %8d %s %s\n&quot;,
        $stat{$_}-&gt;ino(),
        $stat{$_}-&gt;mode() &amp; 07777,
        $stat{$_}-&gt;nlink(),
        user($stat{$_}-&gt;uid()),
        group($stat{$_}-&gt;gid()),
        $stat{$_}-&gt;size(),
        $now, $_;
}

# get stat info on the file, saving the desired
# sort criterion (mtime, atime, ctime, or size)
# in the %time hash indexed by filename.
# if they want a long list, we have to save the
# entire stat object in %stat.  yes, this is a
# hash of objects
sub wanted {
    my $sb = stat($_);  # XXX: should be stat or lstat?
    return unless $sb;
    $time{$name} = $sb-&gt;$IDX();  # indirect method call
    $stat{$name} = $sb if $opt_l;
}

# cache user number to name conversions
sub user {
    my $uid = shift;
    $user{$uid} = getpwuid($uid)-&gt;name || &quot;#$uid&quot;
        unless defined $user{$uid};
    return $user{$uid};
}

# cache group number to name conversions
sub group {
    my $gid = shift;
    $group{$gid} = getgrgid($gid)-&gt;name || &quot;#$gid&quot;
        unless defined $group{$gid};
    return $group{$gid};<a class="indexterm" name="ch09-idx-1000004455-0"></A
><a class="indexterm" name="ch09-idx-1000004455-1"></A
><a class="indexterm" name="ch09-idx-1000004455-2"></A
><a class="indexterm" name="ch09-idx-1000004455-3"></A
>
}<a class="indexterm" name="ch09-idx-1000004337-0"></A
></PRE
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch09_12.htm" title="9.11. Program: symirror"><img src="../gifs/txtpreva.gif" alt="Previous: 9.11. Program: symirror" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="chapter" href="ch10_01.htm" title="10. Subroutines"><img src="../gifs/txtnexta.gif" alt="Next: 10. Subroutines" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">9.11. Program: symirror</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10. Subroutines</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
