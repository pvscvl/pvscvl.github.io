<html><head>
<title>Recipe 4.17. Randomizing an Array</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:32:14Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch04_01.htm" title="4. Arrays"><link rel="prev" href="ch04_17.htm" title="4.16. Implementing a Circular List"><link rel="next" href="ch04_19.htm" title="4.18. Program: words"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch04_17.htm" title="4.16. Implementing a Circular List"><img src="../gifs/txtpreva.gif" alt="Previous: 4.16. Implementing a Circular List" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch04_01.htm" title="4. Arrays">Chapter 4<br>Arrays</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch04_19.htm" title="4.18. Program: words"><img src="../gifs/txtnexta.gif" alt="Next: 4.18. Program: words" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch04-56163">4.17. Randomizing an Array</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch04-pgfId-1643">Problem <a class="indexterm" name="ch04-idx-1000006777-0"></A
><a class="indexterm" name="ch04-idx-1000006777-1"></A
><a class="indexterm" name="ch04-idx-1000006777-2"></A
><a class="indexterm" name="ch04-idx-1000006777-3"></A
><a class="indexterm" name="ch04-idx-1000006777-4"></A
></A
></H3
><p class="para">You want to shuffle the elements of an array randomly. The obvious application is writing a card game, where you must shuffle a deck of cards, but it is equally applicable to any situation where you want to deal with elements of an array in a random order.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch04-pgfId-1649">Solution</A
></H3
><p class="para">Swap each element in the array with another randomly selected, element:</P
><pre class="programlisting"># <a class="indexterm" name="ch04-idx-1000006787-0"></A
>fisher_yates_shuffle( \@array ) : generate a random permutation
# of @array in place
sub fisher_yates_shuffle {
    my $array = shift;
    my $i;
    for ($i = @$array; --$i; ) {
        my $j = int rand ($i+1);
        next if $i == $j;
        @$array[$i,$j] = @$array[$j,$i];
    }
}

fisher_yates_shuffle( \@array );    # permutes @array in place</PRE
><p class="para">Or, pick a random permutation using the code in <a class="xref" href="ch04_20.htm" title="mjd-permute">Example 4.4</A
>:</P
><pre class="programlisting">$permutations = factorial( scalar @array );
@shuffle = @array [ n2perm( 1+int(rand $permutations), $#array ) ];</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch04-pgfId-1687">Discussion</A
></H3
><p class="para">Shuffling is a surprisingly tricky process. It's easy to write a bad shuffle:</P
><pre class="programlisting">sub naive_shuffle {                             # don't do this
    for (my $i = 0; $i &lt; @_; $i++) {
        my $j = int rand @_;                    # pick random element
        ($_[$i], $_[$j]) = ($_[$j], $_[$i]);    # swap 'em
    }
}</PRE
><p class="para">This algorithm is biased; the list's possible permutations don't all have the same probability of being generated. The proof of this is simple: take the case where we're passed a 3-element list. We generate three random numbers, each of which can have three possible values, yielding 27 possible outcomes here. There are only 6 permutations of the 3-element list, though. Because 27 isn't evenly divisible by 6, some outcomes are more likely than others.</P
><p class="para">The Fisher-Yates shuffle avoids this bias by changing the range of the random numbers it selects.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch04-pgfId-1709">See Also</A
></H3
><p class="para">The <code class="literal">rand</CODE
> function in <i class="filename">perlfunc </I
>(1) and <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; for more on random numbers, see Recipes <a class="xref" href="ch02_08.htm" title="Generating Random Numbers">Recipe 2.7</A
>, <a class="xref" href="ch02_09.htm" title="Generating Different Random Numbers">Recipe 2.8</A
>, and <a class="xref" href="ch02_10.htm" title="Making Numbers Even More Random">Recipe 2.9</A
>; <a class="xref" href="ch04_20.htm" title="Program: permute">Recipe 4.19</A
> provides another way to select a random permutation <a class="indexterm" name="ch04-idx-1000006779-0"></A
><a class="indexterm" name="ch04-idx-1000006779-1"></A
><a class="indexterm" name="ch04-idx-1000006779-2"></A
><a class="indexterm" name="ch04-idx-1000006779-3"></A
><a class="indexterm" name="ch04-idx-1000006779-4"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch04_17.htm" title="4.16. Implementing a Circular List"><img src="../gifs/txtpreva.gif" alt="Previous: 4.16. Implementing a Circular List" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch04_19.htm" title="4.18. Program: words"><img src="../gifs/txtnexta.gif" alt="Next: 4.18. Program: words" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">4.16. Implementing a Circular List</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">4.18. Program: words</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
