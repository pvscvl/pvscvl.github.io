<html><head>
<title>Recipe 10.15. Trapping Undefined Function Calls with AUTOLOAD</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:40:07Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch10_01.htm" title="10. Subroutines"><link rel="prev" href="ch10_15.htm" title="10.14. Redefining a Function"><link rel="next" href="ch10_17.htm" title="10.16. Nesting Subroutines"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch10_15.htm" title="10.14. Redefining a Function"><img src="../gifs/txtpreva.gif" alt="Previous: 10.14. Redefining a Function" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch10_01.htm" title="10. Subroutines">Chapter 10<br>Subroutines</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch10_17.htm" title="10.16. Nesting Subroutines"><img src="../gifs/txtnexta.gif" alt="Next: 10.16. Nesting Subroutines" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch10-42363">10.15. Trapping Undefined Function Calls with AUTOLOAD</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch10-pgfId-1158">Problem</A
></H3
><p class="para"><a class="indexterm" name="ch10-idx-1000004745-0"></A
><a class="indexterm" name="ch10-idx-1000004745-1"></A
><a class="indexterm" name="ch10-idx-1000004745-2"></A
><a class="indexterm" name="ch10-idx-1000004745-3"></A
><a class="indexterm" name="ch10-idx-1000004745-4"></A
>You want to intercept calls to undefined functions so you can handle them gracefully.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch10-pgfId-1164">Solution</A
></H3
><p class="para">Declare a function called <code class="literal">AUTOLOAD</CODE
> for the package whose undefined function calls you'd like to trap. While running, that package's <code class="literal">$AUTOLOAD</CODE
> variable contains the name of the undefined function being called.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch10-pgfId-1170">Discussion</A
></H3
><p class="para">Another strategy for creating similar functions is to use a proxy function. If you call an undefined function, instead of automatically raising an exception, you can trap the call. If the function's package has a function named <code class="literal">AUTOLOAD</CODE
>, then this function is called in its place, with the special package global <code class="literal">$AUTOLOAD</CODE
> set to the fully qualified function name. The <code class="literal">AUTOLOAD</CODE
> subroutine can then do whatever that function would do.</P
><pre class="programlisting">sub AUTOLOAD {
    use vars qw($AUTOLOAD);
    my $color = $AUTOLOAD;
    $color =~ s/.*:://;
    return &quot;&lt;FONT COLOR='$color'&gt;@_&lt;/FONT&gt;&quot;;
} 
#note: sub chartreuse isn't defined.
print chartreuse(&quot;stuff&quot;);</PRE
><p class="para">When the nonexistent <code class="literal">main::chartreuse</CODE
> function is called, rather than raising an exception, <code class="literal">main::AUTOLOAD</CODE
> is called with the same arguments as you passed <code class="literal">chartreuse </CODE
>. The package variable <code class="literal">$AUTOLOAD</CODE
> would contain the string <code class="literal">main::chartreuse</CODE
> because that's the function it's proxying.</P
><p class="para">The technique using typeglob assignments shown in <a class="xref" href="ch10_15.htm" title="Redefining a Function">Recipe 10.14</A
> is faster and more flexible than using <code class="literal">AUTOLOAD</CODE
>. It's faster because you don't have to run the copy and substitute. It's more flexible because it lets you do this:</P
><pre class="programlisting">{
    local *yellow = \&amp;violet;  
    local (*red, *green) = (\&amp;green, \&amp;red);
    print_stuff();
} </PRE
><p class="para">While <code class="literal">print_stuff()</CODE
> is running, or while in any functions it calls, anything printed in yellow will come out violet, and the red and green texts will exchange colors.</P
><p class="para">Aliasing subroutines like this won't handle calls to undefined subroutines. <code class="literal">AUTOLOAD</CODE
> does.<a class="indexterm" name="ch10-idx-1000004747-0"></A
><a class="indexterm" name="ch10-idx-1000004747-1"></A
><a class="indexterm" name="ch10-idx-1000004747-2"></A
><a class="indexterm" name="ch10-idx-1000004747-3"></A
><a class="indexterm" name="ch10-idx-1000004747-4"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch10-pgfId-1210">See Also</A
></H3
><p class="para">The section on <a class="olink" href="../prog/ch05_01.htm">"Autoloading"</A
> in <a class="olink" href="../prog/ch05_01.htm">Chapter 5</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
> and in <i class="filename">perlsub </I
>(1); the documentation for the standard modules AutoLoader and AutoSplit, also in <a class="olink" href="../prog/ch07_01.htm">Chapter 7</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; <a class="xref" href="ch10_13.htm" title="Handling Exceptions">Recipe 10.12</A
>; <a class="xref" href="ch12_11.htm" title="Speeding Up Module Loading with Autoloader">Recipe 12.10</A
>, <a class="xref" href="ch13_12.htm" title="Generating Attribute Methods Using AUTOLOAD">Recipe 13.11</A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch10_15.htm" title="10.14. Redefining a Function"><img src="../gifs/txtpreva.gif" alt="Previous: 10.14. Redefining a Function" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch10_17.htm" title="10.16. Nesting Subroutines"><img src="../gifs/txtnexta.gif" alt="Next: 10.16. Nesting Subroutines" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">10.14. Redefining a Function</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10.16. Nesting Subroutines</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
