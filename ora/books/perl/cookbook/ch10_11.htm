<html><head>
<title>Recipe 10.10. Returning Failure</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:39:58Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch10_01.htm" title="10. Subroutines"><link rel="prev" href="ch10_10.htm" title="10.9. Returning More Than One Array or Hash"><link rel="next" href="ch10_12.htm" title="10.11. Prototyping Functions"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch10_10.htm" title="10.9. Returning More Than One Array or Hash"><img src="../gifs/txtpreva.gif" alt="Previous: 10.9. Returning More Than One Array or Hash" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch10_01.htm" title="10. Subroutines">Chapter 10<br>Subroutines</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch10_12.htm" title="10.11. Prototyping Functions"><img src="../gifs/txtnexta.gif" alt="Next: 10.11. Prototyping Functions" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch10-32225">10.10. Returning Failure</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch10-pgfId-760">Problem<a class="indexterm" name="ch10-idx-1000004702-0"></A
><a class="indexterm" name="ch10-idx-1000004702-1"></A
><a class="indexterm" name="ch10-idx-1000004702-2"></A
><a class="indexterm" name="ch10-idx-1000004702-3"></A
></A
></H3
><p class="para">You want to return a value indicating that your function failed.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch10-pgfId-766">Solution</A
></H3
><p class="para">Use a bare <code class="literal">return</CODE
><a class="indexterm" name="ch10-idx-1000004706-0"></A
> statement without any argument, which returns <code class="literal">undef</CODE
> in scalar context and the empty list <code class="literal">()</CODE
> in list context.</P
><pre class="programlisting">return;</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch10-pgfId-774">Discussion</A
></H3
><p class="para">A <code class="literal">return</CODE
> without an argument means:</P
><pre class="programlisting">sub empty_retval {
    return ( wantarray ? () : undef );
}</PRE
><p class="para">You can't use just <code class="literal">return</CODE
> <code class="literal">undef</CODE
> because in list context you will get a list of one value: <code class="literal">undef</CODE
>. If your caller says:</P
><pre class="programlisting">if (@a = yourfunc()) { ... }</PRE
><p class="para">Then the "error" condition will be perceived as true, because <code class="literal">@a</CODE
> will be assigned (<code class="literal">undef</CODE
>) and then evaluated in scalar context. This yields <code class="literal">1</CODE
>, the number of elements in <code class="literal">@a</CODE
>, which is true. You could use the <code class="literal">wantarray</CODE
> function to see what context you were called in, but a bare <code class="literal">return</CODE
> is a clear and tidy solution that always works:</P
><pre class="programlisting">unless ($a = sfunc()) { die &quot;sfunc failed&quot; }
unless (@a = afunc()) { die &quot;afunc failed&quot; }
unless (%a = hfunc()) { die &quot;hfunc failed&quot; }</PRE
><p class="para">Some of Perl's built-in functions have a peculiar return value. Both <code class="literal">fcntl</CODE
><a class="indexterm" name="ch10-idx-1000004707-0"></A
><a class="indexterm" name="ch10-idx-1000004707-1"></A
> and <code class="literal">ioctl</CODE
> have the curious habit of returning the string <a class="indexterm" name="ch10-idx-1000006361-0"></A
><code class="literal">&quot;0</CODE
> <code class="literal">but</CODE
> <code class="literal">true&quot;</CODE
> in some circumstances. (This magic string is conveniently exempt from the <b class="emphasis.bold">-w</B
> flag's incessant numerical conversion warnings.) This has the advantage of letting you write code like this:</P
><pre class="programlisting">ioctl(....) or die &quot;can't ioctl: $!&quot;;</PRE
><p class="para">That way, code doesn't have to check for a defined zero as distinct from the undefined value, as it would for the <code class="literal">read</CODE
> or <code class="literal">glob</CODE
> functions. <code class="literal">&quot;0</CODE
> <code class="literal">but</CODE
> <code class="literal">true&quot;</CODE
> is zero when used numerically. It's rare that this kind of return value is needed. A more common (and spectacular) way to indicate failure in a function is to raise an exception, as described in <a class="xref" href="ch10_13.htm" title="Handling Exceptions">Recipe 10.12</A
>.<a class="indexterm" name="ch10-idx-1000004709-0"></A
><a class="indexterm" name="ch10-idx-1000004709-1"></A
><a class="indexterm" name="ch10-idx-1000004709-2"></A
><a class="indexterm" name="ch10-idx-1000004709-3"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch10-pgfId-802">See Also</A
></H3
><p class="para">The <a class="olink" href="../prog/ch03_180.htm#PERL2-CMD-UNDEF"><code class="literal">undef</CODE
></A
>, <a class="olink" href="../prog/ch03_191.htm#PERL2-CMD-WANTARRAY"><code class="literal">wantarray</CODE
></A
>, and <a class="olink" href="../prog/ch03_125.htm#PERL2-CMD-RETURN"><code class="literal">return</CODE
></A
> functions in <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
> and <i class="filename">perlfunc </I
>(1); <a class="xref" href="ch10_13.htm" title="Handling Exceptions">Recipe 10.12</A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch10_10.htm" title="10.9. Returning More Than One Array or Hash"><img src="../gifs/txtpreva.gif" alt="Previous: 10.9. Returning More Than One Array or Hash" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch10_12.htm" title="10.11. Prototyping Functions"><img src="../gifs/txtnexta.gif" alt="Next: 10.11. Prototyping Functions" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">10.9. Returning More Than One Array or Hash</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10.11. Prototyping Functions</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
