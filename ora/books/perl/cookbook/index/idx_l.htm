<html>
<head>
<title>Index</TITLE>
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">
<p><a href="../index.htm"><img src="../gifs/smbanns.gif" alt="Book Home" border=0></A>

<p><font size="-1"><a href="../../search/csrch.htm">Search</A> |
<a href="idx_0.htm">Symbols</A>
| <a href="idx_a.htm">A</A>
| <a href="idx_b.htm">B</A>
| <a href="idx_c.htm">C</A>
| <a href="idx_d.htm">D</A>
| <a href="idx_e.htm">E</A>
| <a href="idx_f.htm">F</A>
| <a href="idx_g.htm">G</A>
| <a href="idx_h.htm">H</A>
| <a href="idx_i.htm">I</A>
| <a href="idx_j.htm">J</A>
| <a href="idx_k.htm">K</A>
| L
| <a href="idx_m.htm">M</A>
| <a href="idx_n.htm">N</A>
| <a href="idx_o.htm">O</A>
| <a href="idx_p.htm">P</A>
| <a href="idx_q.htm">Q</A>
| <a href="idx_r.htm">R</A>
| <a href="idx_s.htm">S</A>
| <a href="idx_t.htm">T</A>
| <a href="idx_u.htm">U</A>
| <a href="idx_v.htm">V</A>
| <a href="idx_w.htm">W</A>
| <a href="idx_x.htm">X</A>
| <a href="idx_y.htm">Y</A>
| <a href="idx_z.htm">Z</A></FONT>

<h1>Index: L</H1>

<dl>
<dt><a name=".5cl-string-escape">\L string escape</A>
: <a href="../ch01_10.htm">1.9. Controlling Case</A>
<dt><a name=".5cl-string-escape">\l string escape</A>
: <a href="../ch01_10.htm">1.9. Controlling Case</A>
<dt><a name="labels">labels, menu</A>
: <a href="../ch15_15.htm">15.14. Creating Menus with Tk</A>
<dt><a name="last">last( )</A>
: <a href="../ch04_13.htm">4.12. Finding the First List Element That Passes a Test</A>
<dt><a name="laston-program">laston program</A>
: <a href="../ch08_21.htm">8.20. Program: laston</A>
<dt><a name="lc">lc( )</A>
: <a href="../ch01_10.htm">1.9. Controlling Case</A>
<dt><a name="lcfirst">lcfirst( )</A>
: <a href="../ch01_10.htm">1.9. Controlling Case</A>
<dt><a name="leading-whitespace">leading whitespace, removing</A>
: <a href="../ch01_15.htm">1.14. Trimming Blanks from the Ends of a String</A>
<dt><a name="lexical-scope">lexical scope</A>
<dd><dl>
  <dt><a href="../ch10_03.htm">10.2. Making Variables Private to a Function</A>
  <dt><a href="../ch10_14.htm">10.13. Saving Global Values</A>
</DL>
<dt><a name="libraries">libraries</A>
: <a href="../ch12_01.htm">12.0. Introduction</A>
<dt><a name="libwww.2dperl-modules">libwww-perl modules</A>
: <a href="../ch20_01.htm">20.0. Introduction</A>
<dt><a name="line-breaks">line breaks</A>
<dd><dl>
  <dt>(see also <a href="idx_w.htm">whitespace</A>)
  <dt><a href="../ch06_07.htm">6.6. Matching Multiple Lines</A>
  <dt>counting lines in files
: <a href="../ch08_03.htm">8.2. Counting Lines (or Paragraphs or Records) in a File</A>
  <dt>defining lines
: <a href="../ch08_12.htm">8.11. Processing Binary Files</A>
  <dt>deleting last file line
: <a href="../ch08_11.htm">8.10. Removing the Last Line of a File</A>
  <dt>extracting ranges of lines
: <a href="../ch06_09.htm">6.8. Extracting a Range of Lines</A>
  <dt>matching across multiple lines
: <a href="../ch06_07.htm">6.6. Matching Multiple Lines</A>
  <dt>random lines from files
: <a href="../ch08_07.htm">8.6. Picking a Random Line from a File</A>
  <dt>randomizing file line order
: <a href="../ch08_08.htm">8.7. Randomizing All Lines</A>
  <dt>reading files backwards
: <a href="../ch08_05.htm">8.4. Reading a File Backwards by Line or Paragraph</A>
  <dt>reading with continuation characters
: <a href="../ch08_02.htm">8.1. Reading Lines with Continuation Characters</A>
</DL>
<dt><a name="line-mode-interfaces">line mode interfaces</A>
: <a href="../ch15_01.htm">15.0. Introduction</A>
<dt><a name=".5f.5fline.5f.5f-symbol">__LINE__ symbol</A>
: <a href="../ch10_05.htm">10.4. Determining Current Function Name</A>
<dt><a name="line.3a">LINE: (implicit loop label)</A>
: <a href="../ch07_08.htm">7.7. Writing a Filter</A>
<dt><a name="lingua.3a.3aen.3a.3ainflect-module">Lingua::EN::Inflect module</A>
: <a href="../ch02_19.htm">2.18. Printing Correct Plurals</A>
<dt><a name="links">links</A>
: (see <a href="idx_h.htm">hyperlinks</A>)
<dd><dl>
  <dt>extracting from HTML
: <a href="../ch20_04.htm">20.3. Extracting URLs</A>
</DL>
<dt><a name="list-assignment">list assignment</A>
: <a href="../ch01_04.htm">1.3. Exchanging Values Without Using Temporary Variables</A>
<dt><a name="list-context">list context, detecting</A>
: <a href="../ch10_07.htm">10.6. Detecting Return Context</A>
<dt><a name="listen">listen( )</A>
: <a href="../ch17_01.htm">17.0. Introduction</A>
<dt><a name="lists">lists</A>
: <a href="../ch04_01.htm">4.0. Introduction</A>
<dd><dl>
  <dt>arrays vs.
: <a href="../ch04_01.htm">4.0. Introduction</A>
  <dt>circular
: <a href="../ch04_17.htm">4.16. Implementing a Circular List</A>
  <dt>extracting particular elements
: <a href="../ch04_07.htm">4.6. Extracting Unique Elements from a List</A>
  <dt>extracting particular subsets
: <a href="../ch04_14.htm">4.13. Finding All Elements in an Array Matching Certain Criteria</A>
  <dt>flattened
: <a href="../ch04_01.htm">4.0. Introduction</A>
  <dt>initializing
: <a href="../ch04_02.htm">4.1. Specifying a List In Your Program</A>
  <dt>iterating through all elements
  <dd><dl>
    <dt><a href="../ch04_05.htm">4.4. Doing Something with Every Element in a List</A>
    <dt><a href="../ch04_13.htm">4.12. Finding the First List Element That Passes a Test</A>
  </DL>
  <dt>permute programs
: <a href="../ch04_20.htm">4.19. Program: permute</A>
  <dt>printing with commas
: <a href="../ch04_03.htm">4.2. Printing a List with Commas</A>
  <dt>processing multiple elements
: <a href="../ch04_12.htm">4.11. Processing Multiple Elements of an Array</A>
  <dt>randomizing element order
: <a href="../ch04_18.htm">4.17. Randomizing an Array</A>
  <dt>reversing elements of
: <a href="../ch04_11.htm">4.10. Reversing an Array</A>
  <dt>unions, intersections, differences
: <a href="../ch04_08.htm">4.7. Finding Elements in One Array but Not Another</A>
  <dt>words program (example)
: <a href="../ch04_19.htm">4.18. Program: words</A>
</DL>
<dt><a name="loader-program">loader program (example)</A>
: <a href="../ch15_18.htm">15.17. Removing the DOS Shell Window with Windows Perl/Tk</A>
<dt><a name="loading-modules">loading modules</A>
: (see <a href="idx_m.htm">modules</A>)
<dt><a name="local">local( )</A>
<dd><dl>
  <dt><a href="../ch10_14.htm">10.13. Saving Global Values</A>
  <dt><a href="../ch10_15.htm">10.14. Redefining a Function</A>
  <dt><a href="../ch16_17.htm">16.16. Temporarily Overriding a Signal Handler</A>
</DL>
<dt><a name="locale-settings">locale settings</A>
: <a href="../ch06_13.htm">6.12. Honoring Locale Settings in Regular Expressions</A>
<dt><a name="localizing-functions">localizing functions</A>
: <a href="../ch10_15.htm">10.14. Redefining a Function</A>
<dt><a name="localtime">localtime( )</A>
<dd><dl>
  <dt><a href="../ch03_01.htm">3.0. Introduction</A>
  <dt><a href="../ch03_09.htm">3.8. Printing a Date</A>
</DL>
<dt><a name="lockarea-program">lockarea program</A>
: <a href="../ch07_23.htm">7.22. Program: lockarea</A>
<dt><a name="locking">locking</A>
<dd><dl>
  <dt>blocking signals
: <a href="../ch16_21.htm">16.20. Blocking Signals</A>
  <dt>DBK files
: <a href="../ch14_06.htm">14.5. Locking DBM Files</A>
  <dt>files
  <dd><dl>
    <dt><a href="../ch07_12.htm">7.11. Locking a File</A>
    <dt><a href="../ch07_22.htm">7.21. Program: netlock</A>
  </DL>
  <dt>region-specific locks
: <a href="../ch07_23.htm">7.22. Program: lockarea</A>
</DL>
<dt><a name="log-files">log files (web server)</A>
<dd><dl>
  <dt><a href="../ch19_01.htm">19.0. Introduction</A>
  <dt><a href="../ch20_13.htm">20.12. Parsing a Web Server Log File</A>
  <dt>processing
: <a href="../ch20_14.htm">20.13. Processing Server Logs</A>
</DL>
<dt><a name="log">log( )</A>
: <a href="../ch02_14.htm">2.13. Taking Logarithms</A>
<dt><a name="log.31.30">log10( )</A>
: <a href="../ch02_14.htm">2.13. Taking Logarithms</A>
<dt><a name="log.5fbase">log_base( ) (example)</A>
: <a href="../ch02_14.htm">2.13. Taking Logarithms</A>
<dt><a name="logarithms">logarithms</A>
: <a href="../ch02_14.htm">2.13. Taking Logarithms</A>
<dt><a name="logfile.3a.3aapache">Logfile::Apache</A>
: <a href="../ch20_14.htm">20.13. Processing Server Logs</A>
<dt><a name="logical-functionality-in-patterns">logical functionality in patterns</A>
: <a href="../ch06_18.htm">6.17. Expressing AND, OR, and NOT in a Single Pattern</A>
<dt><a name="login-sessions">login sessions</A>
: <a href="../ch15_01.htm">15.0. Introduction</A>
<dt><a name="logn">logn( ) (Math::Complex)</A>
: <a href="../ch02_14.htm">2.13. Taking Logarithms</A>
<dt><a name="loop-variables">loop variables</A>
: <a href="../ch04_05.htm">4.4. Doing Something with Every Element in a List</A>
<dt><a name="lowercase-program">lowercase program (example)</A>
: <a href="../ch07_08.htm">7.7. Writing a Filter</A>
<dt><a name="lowercase">lowercase, converting to uppercase</A>
: <a href="../ch01_10.htm">1.9. Controlling Case</A>
<dt><a name="lst-program">lst program</A>
: <a href="../ch09_13.htm">9.12. Program: lst</A>
<dt><a name="lvaluable-functions">lvaluable functions</A>
: <a href="../ch01_02.htm">1.1. Accessing Substrings</A>
<dt><a name="lwp-modules">LWP modules</A>
: <a href="../ch20_01.htm">20.0. Introduction</A>
<dd><dl>
  <dt>extracting HTML tags
: <a href="../ch20_07.htm">20.6. Extracting or Removing HTML Tags</A>
  <dt>LWP::Heuristic module
: <a href="../ch20_02.htm">20.1. Fetching a URL from a Perl Script</A>
  <dt>LWP::Request module
: <a href="../ch20_02.htm">20.1. Fetching a URL from a Perl Script</A>
  <dt>LWP::Response module
: <a href="../ch20_02.htm">20.1. Fetching a URL from a Perl Script</A>
  <dt>LWP::RobotUA module
: <a href="../ch20_12.htm">20.11. Creating a Robot</A>
  <dt>LWP::Simple module
: <a href="../ch20_02.htm">20.1. Fetching a URL from a Perl Script</A>
  <dd><dl>
    <dt>mirroring web pages
: <a href="../ch20_11.htm">20.10. Mirroring Web Pages</A>
  </DL>
  <dt>LWP::UserAgent module
: <a href="../ch20_02.htm">20.1. Fetching a URL from a Perl Script</A>
</DL>
</DL>

<p>
<hr width="515" align="LEFT">

<p><font size="-1"><a href="../../search/csrch.htm">Search</A> |
<a href="idx_0.htm">Symbols</A>
| <a href="idx_a.htm">A</A>
| <a href="idx_b.htm">B</A>
| <a href="idx_c.htm">C</A>
| <a href="idx_d.htm">D</A>
| <a href="idx_e.htm">E</A>
| <a href="idx_f.htm">F</A>
| <a href="idx_g.htm">G</A>
| <a href="idx_h.htm">H</A>
| <a href="idx_i.htm">I</A>
| <a href="idx_j.htm">J</A>
| <a href="idx_k.htm">K</A>
| L
| <a href="idx_m.htm">M</A>
| <a href="idx_n.htm">N</A>
| <a href="idx_o.htm">O</A>
| <a href="idx_p.htm">P</A>
| <a href="idx_q.htm">Q</A>
| <a href="idx_r.htm">R</A>
| <a href="idx_s.htm">S</A>
| <a href="idx_t.htm">T</A>
| <a href="idx_u.htm">U</A>
| <a href="idx_v.htm">V</A>
| <a href="idx_w.htm">W</A>
| <a href="idx_x.htm">X</A>
| <a href="idx_y.htm">Y</A>
| <a href="idx_z.htm">Z</A></FONT>

<p><a href="../../copyrght.htm">Copyright</A> &copy; 1999
 <a href="../../../../../../../../www.oreilly.com/">O'Reilly &amp; Associates, Inc.</A>
All Rights Reserved.
<p class="nav"><font size="-1">[ <a href="../../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
>
</BODY>
</HTML>
