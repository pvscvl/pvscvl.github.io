<html>
<head>
<title>Index</TITLE>
</HEAD>
<body bgcolor="#FFFFFF" text="#000000">
<p><a href="../index.htm"><img src="../gifs/smbanns.gif" alt="Book Home" border=0></A>

<p><font size="-1"><a href="../../search/csrch.htm">Search</A> |
<a href="idx_0.htm">Symbols</A>
| <a href="idx_a.htm">A</A>
| <a href="idx_b.htm">B</A>
| <a href="idx_c.htm">C</A>
| <a href="idx_d.htm">D</A>
| <a href="idx_e.htm">E</A>
| <a href="idx_f.htm">F</A>
| <a href="idx_g.htm">G</A>
| <a href="idx_h.htm">H</A>
| <a href="idx_i.htm">I</A>
| <a href="idx_j.htm">J</A>
| <a href="idx_k.htm">K</A>
| <a href="idx_l.htm">L</A>
| <a href="idx_m.htm">M</A>
| <a href="idx_n.htm">N</A>
| <a href="idx_o.htm">O</A>
| <a href="idx_p.htm">P</A>
| <a href="idx_q.htm">Q</A>
| <a href="idx_r.htm">R</A>
| S
| <a href="idx_t.htm">T</A>
| <a href="idx_u.htm">U</A>
| <a href="idx_v.htm">V</A>
| <a href="idx_w.htm">W</A>
| <a href="idx_x.htm">X</A>
| <a href="idx_y.htm">Y</A>
| <a href="idx_z.htm">Z</A></FONT>

<h1>Index: S</H1>

<dl>
<dt><a name=".2fs-pattern.2dmatching-modifier">/s pattern-matching modifier</A>
: <a href="../ch06_01.htm">6.0. Introduction</A>
<dd><dl>
  <dt>matching multiple lines
: <a href="../ch06_07.htm">6.6. Matching Multiple Lines</A>
</DL>
<dt><a name=".5cs-substitution-modifier">\s substitution modifier</A>
: <a href="../ch01_12.htm">1.11. Indenting Here Documents</A>
<dt><a name="s.2f.2f.2f-operator">s/// operator</A>
<dd><dl>
  <dt>~ operator with
: <a href="../ch01_02.htm">1.1. Accessing Substrings</A>
  <dt>stripping whitespace with
: <a href="../ch01_12.htm">1.11. Indenting Here Documents</A>
</DL>
<dt><a name="sascii-program">sascii program (example)</A>
: <a href="../ch15_07.htm">15.6. Reading from the Keyboard</A>
<dt><a name="save.5fparameters">save_parameters( )</A>
: <a href="../ch19_14.htm">19.13. Saving a Form to a File or Mail Pipe</A>
<dt><a name="scalars">scalars</A>
: <a href="../ch01_01.htm">1.0. Introduction</A>
<dd><dl>
  <dt>arrays of scalar references
: <a href="../ch11_07.htm">11.6. Creating Arrays of Scalar References</A>
  <dt>detecting scalar context
: <a href="../ch10_07.htm">10.6. Detecting Return Context</A>
  <dt>exchanging values between
: <a href="../ch01_04.htm">1.3. Exchanging Values Without Using Temporary Variables</A>
  <dt>references to
: <a href="../ch11_06.htm">11.5. Taking References to Scalars</A>
</DL>
<dt><a name="schemes">schemes (URLs)</A>
: <a href="../ch19_01.htm">19.0. Introduction</A>
<dt><a name="schwartz">Schwartz, Randal</A>
: <a href="../ch04_16.htm">4.15. Sorting a List by Computable Field</A>
<dt><a name="scope-of-subroutine-variables">scope of subroutine variables</A>
: <a href="../ch10_03.htm">10.2. Making Variables Private to a Function</A>
<dt><a name="screen">screen</A>
: (see <a href="idx_u.htm">user interfaces</A>)
<dt><a name="scripts">scripts, CGI</A>
: (see <a href="idx_c.htm">CGI programming</A>)
<dt><a name="sdbm-library">SDBM library</A>
: <a href="../ch14_01.htm">14.0. Introduction</A>
<dt><a name="searching-for-patterns">searching for patterns</A>
: (see <a href="idx_p.htm">pattern matching</A>; <a href="idx_r.htm">regular expressions</A>)
<dt><a name="seconds">seconds</A>
: (see <a href="idx_d.htm">date and time</A>)
<dt><a name="security">security</A>
<dd><dl>
  <dt>CGI scripts
  <dd><dl>
    <dt><a href="../ch19_01.htm">19.0. Introduction</A>
    <dt><a href="../ch19_05.htm">19.4. Writing a Safe CGI Program</A>
    <dt>executing user commands
: <a href="../ch19_07.htm">19.6. Executing Commands Without Shell Escapes</A>
  </DL>
  <dt>connecting through firewalls
: <a href="../ch17_19.htm">17.18. Program: fwdport</A>
  <dt>reading passwords without echo
: <a href="../ch15_11.htm">15.10. Reading Passwords</A>
  <dt>testing files for trustworthiness
: <a href="../ch08_18.htm">8.17. Testing a File for Trustworthiness</A>
</DL>
<dt><a name="seek">seek( )</A>
<dd><dl>
  <dt><a href="../ch08_01.htm">8.0. Introduction</A>
  <dt><a href="../ch08_06.htm">8.5. Trailing a Growing File</A>
</DL>
<dt><a name="seekdir">seekdir( )</A>
: <a href="../ch09_06.htm">9.5. Processing All Files in a Directory</A>
<dt><a name="seeme-program">seeme program (example)</A>
: <a href="../ch07_13.htm">7.12. Flushing Output</A>
<dt><a name="select">select( )</A>
<dd><dl>
  <dt><a href="../ch03_11.htm">3.10. Short Sleeps</A>
  <dt><a href="../ch17_04.htm">17.3. Communicating over TCP</A>
  <dt>changing STDOUT
: <a href="../ch07_01.htm">7.0. Introduction</A>
  <dt>reading from multiple filehandles
  <dd><dl>
    <dt><a href="../ch07_14.htm">7.13. Reading from Many Filehandles Without Blocking</A>
    <dt><a href="../ch17_04.htm">17.3. Communicating over TCP</A>
  </DL>
</DL>
<dt><a name="self.2dreferential-data-structures">self-referential data structures</A>
: <a href="../ch13_14.htm">13.13. Coping with Circular Data Structures</A>
<dt><a name="selfloader-module">SelfLoader module</A>
: <a href="../ch12_10.htm">12.9. Speeding Module Loading with SelfLoader</A>
<dt><a name="separators">separators, menu</A>
: <a href="../ch15_15.htm">15.14. Creating Menus with Tk</A>
<dt><a name="servers">servers</A>
<dd><dl>
  <dt>daemon servers
: <a href="../ch17_16.htm">17.15. Making a Daemon Server</A>
  <dt>forking
: <a href="../ch17_12.htm">17.11. Forking Servers</A>
  <dt>multi-homed
: <a href="../ch17_15.htm">17.14. Writing a Multi-Homed Server</A>
  <dt>non-forking
: <a href="../ch17_14.htm">17.13. Non-Forking Servers</A>
  <dt>POP3
: <a href="../ch18_06.htm">18.5. Reading Mail with POP3</A>
  <dt>pre-forking
: <a href="../ch17_13.htm">17.12. Pre-Forking Servers</A>
  <dt>restarting on demand
: <a href="../ch17_17.htm">17.16. Restarting a Server on Demand</A>
  <dt>TCP
: <a href="../ch17_03.htm">17.2. Writing a TCP Server</A>
  <dt>UDP
: <a href="../ch17_06.htm">17.5. Setting Up a UDP Server</A>
</DL>
<dt><a name="set-theory">set theory</A>
: <a href="../ch04_08.htm">4.7. Finding Elements in One Array but Not Another</A>
<dt><a name="setsockopt">setsockopt( )</A>
: <a href="../ch17_14.htm">17.13. Non-Forking Servers</A>
<dt><a name="setting-up">setting up</A>
: (see <a href="idx_i.htm">initializing</A>)
<dt><a name="shallow-copies">shallow copies</A>
: <a href="../ch11_13.htm">11.12. Copying Data Structures</A>
<dt><a name="shared-locks">shared locks</A>
: <a href="../ch07_12.htm">7.11. Locking a File</A>
<dt><a name="sharetest-program">sharetest program (example)</A>
: <a href="../ch16_13.htm">16.12. Sharing Variables in Different Processes</A>
<dt><a name="sharing-variables-among-processes">sharing variables among processes</A>
: <a href="../ch16_13.htm">16.12. Sharing Variables in Different Processes</A>
<dt><a name="shell-escapes">shell escapes, executing commands without</A>
: <a href="../ch19_07.htm">19.6. Executing Commands Without Shell Escapes</A>
<dt><a name="shell-wildcards-for-regexp-matching">shell wildcards for regexp matching</A>
: <a href="../ch06_10.htm">6.9. Matching Shell Globs as Regular Expressions</A>
<dt><a name="shift">shift( )</A>
<dd><dl>
  <dt>circular lists
: <a href="../ch04_17.htm">4.16. Implementing a Circular List</A>
  <dt>on multiple array elements
: <a href="../ch04_12.htm">4.11. Processing Multiple Elements of an Array</A>
  <dt>Tie::IxHash module and
: <a href="../ch05_07.htm">5.6. Retrieving from a Hash in Insertion Order</A>
</DL>
<dt><a name="shopping-cart">shopping cart</A>
: <a href="../ch19_13.htm">19.12. Writing a Multiscreen CGI Script</A>
<dt><a name="shuffling">shuffling</A>
<dd><dl>
  <dt>(see also <a href="idx_r.htm">random</A>)
  <dt><a href="../ch08_08.htm">8.7. Randomizing All Lines</A>
  <dt>array elements
: <a href="../ch04_18.htm">4.17. Randomizing an Array</A>
  <dt>file line order
: <a href="../ch08_08.htm">8.7. Randomizing All Lines</A>
</DL>
<dt><a name="shutdown">shutdown( )</A>
: <a href="../ch17_10.htm">17.9. Closing a Socket After Forking</A>
<dt><a name=".25sig-hash">%SIG hash</A>
: <a href="../ch16_16.htm">16.15. Installing a Signal Handler</A>
<dt><a name="sigalrm-signal">SIGALRM signal</A>
<dd><dl>
  <dt><a href="../ch16_01.htm">16.0. Introduction</A>
  <dt><a href="../ch16_22.htm">16.21. Timing Out an Operation</A>
</DL>
<dt><a name="sigchld-signal">SIGCHLD signal</A>
<dd><dl>
  <dt><a href="../ch16_01.htm">16.0. Introduction</A>
  <dt><a href="../ch16_20.htm">16.19. Avoiding Zombie Processes</A>
</DL>
<dt><a name="sighup-signal">SIGHUP signal</A>
<dd><dl>
  <dt><a href="../ch16_01.htm">16.0. Introduction</A>
  <dt><a href="../ch17_17.htm">17.16. Restarting a Server on Demand</A>
</DL>
<dt><a name="sigint-signal">SIGINT signal</A>
<dd><dl>
  <dt><a href="../ch16_01.htm">16.0. Introduction</A>
  <dt><a href="../ch16_19.htm">16.18. Catching Ctrl-C</A>
</DL>
<dt><a name="signals">signals</A>
: <a href="../ch16_01.htm">16.0. Introduction</A>
<dd><dl>
  <dt>blocking
: <a href="../ch16_21.htm">16.20. Blocking Signals</A>
  <dt>handlers for
: <a href="../ch16_16.htm">16.15. Installing a Signal Handler</A>
  <dt>listing available
: <a href="../ch16_14.htm">16.13. Listing Available Signals</A>
  <dt>process groups
  <dd><dl>
    <dt><a href="../ch07_23.htm">7.22. Program: lockarea</A>
    <dt><a href="../ch16_15.htm">16.14. Sending a Signal</A>
  </DL>
  <dt>sending
: <a href="../ch16_15.htm">16.14. Sending a Signal</A>
</DL>
<dt><a name="signatures">signatures, randomized</A>
: <a href="../ch16_23.htm">16.22. Program: sigrand</A>
<dt><a name="sigpipe-signal">SIGPIPE signal</A>
<dd><dl>
  <dt><a href="../ch16_01.htm">16.0. Introduction</A>
  <dt><a href="../ch16_05.htm">16.4. Reading or Writing to Another Program</A>
</DL>
<dt><a name="sigprocmask-system-call">sigprocmask system call</A>
: <a href="../ch16_21.htm">16.20. Blocking Signals</A>
<dt><a name="sigquit-signal">SIGQUIT signal</A>
: <a href="../ch16_01.htm">16.0. Introduction</A>
<dt><a name="sigrand-program">sigrand program (example)</A>
: <a href="../ch16_23.htm">16.22. Program: sigrand</A>
<dt><a name="sigterm-signal">SIGTERM signal</A>
: <a href="../ch16_01.htm">16.0. Introduction</A>
<dt><a name="sigusr.31">SIGUSR1, SIGUSR2 signals</A>
: <a href="../ch16_01.htm">16.0. Introduction</A>
<dt><a name="sin">sin( )</A>
: <a href="../ch02_13.htm">2.12. Calculating More Trigonometric Functions</A>
<dt><a name="single-inheritance">single inheritance</A>
: <a href="../ch13_01.htm">13.0. Introduction</A>
<dt><a name="single-quotes">single quotes (')</A>
: <a href="../ch01_01.htm">1.0. Introduction</A>
<dd><dl>
  <dt>q( )
: <a href="../ch04_02.htm">4.1. Specifying a List In Your Program</A>
</DL>
<dt><a name="size">size</A>
<dd><dl>
  <dt>arrays, changing
: <a href="../ch04_04.htm">4.3. Changing Array Size</A>
  <dt>hashes, preallocating for
: <a href="../ch05_14.htm">5.13. Presizing a Hash</A>
  <dt>Tk window resize events
: <a href="../ch15_17.htm">15.16. Responding to Tk Resize Events</A>
  <dt>window/terminal, determining
: <a href="../ch15_05.htm">15.4. Determining Terminal or Window Size</A>
</DL>
<dt><a name="sleeps">sleeps</A>
: <a href="../ch03_11.htm">3.10. Short Sleeps</A>
<dt><a name="slowcat-program">slowcat program (example)</A>
: <a href="../ch01_06.htm">1.5. Processing a String One Character at a Time</A>
<dt><a name="sock.5f-constants">SOCK_ constants</A>
: <a href="../ch17_01.htm">17.0. Introduction</A>
<dt><a name="sockaddr.5fin">sockaddr_in( )</A>
<dd><dl>
  <dt><a href="../ch17_01.htm">17.0. Introduction</A>
  <dt><a href="../ch17_05.htm">17.4. Setting Up a UDP Client</A>
</DL>
<dt><a name="sockaddr.5fun">sockaddr_un( )</A>
: <a href="../ch17_01.htm">17.0. Introduction</A>
<dt><a name="socket">socket( )</A>
: <a href="../ch17_01.htm">17.0. Introduction</A>
<dt><a name="sockets">sockets</A>
: <a href="../ch17_01.htm">17.0. Introduction</A>
<dd><dl>
  <dt>bidirectional clients
: <a href="../ch17_11.htm">17.10. Writing Bidirectional Clients</A>
  <dt>closing after forking
: <a href="../ch17_10.htm">17.9. Closing a Socket After Forking</A>
  <dt>connecting through firewalls
: <a href="../ch17_19.htm">17.18. Program: fwdport</A>
  <dt>daemon servers
: <a href="../ch17_16.htm">17.15. Making a Daemon Server</A>
  <dt>finding own name/address
: <a href="../ch17_09.htm">17.8. Finding Your Own Name and Address</A>
  <dt>forking servers
: <a href="../ch17_12.htm">17.11. Forking Servers</A>
  <dt>identifying machine at end
: <a href="../ch17_08.htm">17.7. Identifying the Other End of a Socket</A>
  <dt>logging port connection attempts
: <a href="../ch17_18.htm">17.17. Program: backsniff</A>
  <dt>multi-homed servers
: <a href="../ch17_15.htm">17.14. Writing a Multi-Homed Server</A>
  <dt>non-blocking
: <a href="../ch17_03.htm">17.2. Writing a TCP Server</A>
  <dt>non-forking servers
: <a href="../ch17_14.htm">17.13. Non-Forking Servers</A>
  <dt>pre-forking servers
: <a href="../ch17_13.htm">17.12. Pre-Forking Servers</A>
  <dt>restarting servers on demand
: <a href="../ch17_17.htm">17.16. Restarting a Server on Demand</A>
  <dt>TCP protocol
  <dd><dl>
    <dt>communicating over
: <a href="../ch17_04.htm">17.3. Communicating over TCP</A>
    <dt>writing clients
: <a href="../ch17_02.htm">17.1. Writing a TCP Client</A>
    <dt>writing servers
: <a href="../ch17_03.htm">17.2. Writing a TCP Server</A>
  </DL>
  <dt>UDP protocol
  <dd><dl>
    <dt>writing clients
: <a href="../ch17_05.htm">17.4. Setting Up a UDP Client</A>
    <dt>writing servers
: <a href="../ch17_06.htm">17.5. Setting Up a UDP Server</A>
  </DL>
  <dt>Unix domain
  <dd><dl>
    <dt><a href="../ch17_01.htm">17.0. Introduction</A>
    <dt><a href="../ch17_07.htm">17.6. Using UNIX Domain Sockets</A>
  </DL>
</DL>
<dt><a name="soft-links">soft links</A>
: (see <a href="#symbolic-links">symbolic links</A>)
<dt><a name="sort">sort( )</A>
<dd><dl>
  <dt><a href="../ch04_15.htm">4.14. Sorting an Array Numerically</A>
  <dt><a href="../ch05_10.htm">5.9. Sorting a Hash</A>
</DL>
<dt><a name="sortdemo-program">sortdemo program (example)</A>
: <a href="../ch14_07.htm">14.6. Sorting Large DBM Files</A>
<dt><a name="sorting">sorting</A>
<dd><dl>
  <dt>array elements
: <a href="../ch04_15.htm">4.14. Sorting an Array Numerically</A>
  <dt>DBM files
: <a href="../ch14_07.htm">14.6. Sorting Large DBM Files</A>
  <dt>directory contents
  <dd><dl>
    <dt><a href="../ch09_01.htm">9.0. Introduction</A>
    <dt><a href="../ch09_13.htm">9.12. Program: lst</A>
  </DL>
  <dt>du command output
: <a href="../ch05_17.htm">5.16. Program: dutree</A>
  <dt>hash elements
: <a href="../ch05_10.htm">5.9. Sorting a Hash</A>
  <dt>mail (example subroutine)
: <a href="../ch10_18.htm">10.17. Program: Sorting Your Mail</A>
  <dt>pod =head1 sections
: <a href="../ch15_20.htm">15.19. Program: tkshufflepod</A>
  <dt>randomizing array element order
: <a href="../ch04_18.htm">4.17. Randomizing an Array</A>
  <dt>randomizing file line order
: <a href="../ch08_08.htm">8.7. Randomizing All Lines</A>
  <dt>text into columns
: <a href="../ch04_19.htm">4.18. Program: words</A>
</DL>
<dt><a name="soundex-matching">Soundex matching</A>
: <a href="../ch01_17.htm">1.16. Soundex Matching</A>
<dt><a name="spaces">spaces</A>
: (see <a href="idx_w.htm">whitespace</A>)
<dt><a name="specific-classes">specific classes</A>
: <a href="../ch13_01.htm">13.0. Introduction</A>
<dt><a name="spider">spider (robot)</A>
: <a href="../ch20_12.htm">20.11. Creating a Robot</A>
<dt><a name="splice">splice( )</A>
: <a href="../ch04_12.htm">4.11. Processing Multiple Elements of an Array</A>
<dd><dl>
  <dt>Tie::IxHash module and
: <a href="../ch05_07.htm">5.6. Retrieving from a Hash in Insertion Order</A>
</DL>
<dt><a name="split">split( )</A>
<dd><dl>
  <dt><a href="../ch01_06.htm">1.5. Processing a String One Character at a Time</A>
  <dt><a href="../ch08_04.htm">8.3. Processing Every Word in a File</A>
  <dt><a href="../ch08_10.htm">8.9. Processing Variable-Length Text Fields</A>
  <dt>reading records with pattern separators
: <a href="../ch06_08.htm">6.7. Reading Records with a Pattern Separator</A>
</DL>
<dt><a name="sprintf">sprintf( )</A>
<dd><dl>
  <dt>%c format
: <a href="../ch01_05.htm">1.4. Converting Between ASCII Characters and Values</A>
  <dt>comparing floating-point numbers
: <a href="../ch02_03.htm">2.2. Comparing Floating-Point Numbers</A>
  <dt>rounding floating-point numbers
: <a href="../ch02_04.htm">2.3. Rounding Floating-Point Numbers</A>
</DL>
<dt><a name="sql-database">SQL database</A>
: <a href="../ch20_10.htm">20.9. Creating HTML Templates</A>
<dt><a name="sql-queries">SQL queries</A>
<dd><dl>
  <dt><a href="../ch14_11.htm">14.10. Executing an SQL Command Using DBI and DBD</A>
  <dt><a href="../ch19_08.htm">19.7. Formatting Lists and Tables with HTML Shortcuts</A>
</DL>
<dt><a name="srand">srand( )</A>
: <a href="../ch02_09.htm">2.8. Generating Different Random Numbers</A>
<dt><a name="stale-hyperlinks">stale hyperlinks, finding</A>
: <a href="../ch20_08.htm">20.7. Finding Stale Links</A>
<dt><a name="standard-filehandles">standard filehandles</A>
: <a href="../ch07_01.htm">7.0. Introduction</A>
<dt><a name="stat">stat( )</A>
<dd><dl>
  <dt><a href="../ch08_18.htm">8.17. Testing a File for Trustworthiness</A>
  <dt><a href="../ch09_01.htm">9.0. Introduction</A>
  <dt><a href="../ch09_02.htm">9.1. Getting and Setting Timestamps</A>
</DL>
<dt><a name="static-data-members">static data members</A>
<dd><dl>
  <dt><a href="../ch13_01.htm">13.0. Introduction</A>
  <dt><a href="../ch13_05.htm">13.4. Managing Class Data</A>
</DL>
<dt><a name="static-scoping">static scoping</A>
: <a href="../ch10_14.htm">10.13. Saving Global Values</A>
<dt><a name="stderr-filehandle">STDERR filehandle</A>
: <a href="../ch07_01.htm">7.0. Introduction</A>
<dd><dl>
  <dt>controlling for other programs
: <a href="../ch16_10.htm">16.9. Controlling the Input, Output, and Error of Another Program</A>
  <dt>reading from programs
: <a href="../ch16_08.htm">16.7. Reading STDERR from a Program</A>
</DL>
<dt><a name="stdin-filehandle">STDIN filehandle</A>
: <a href="../ch07_01.htm">7.0. Introduction</A>
<dd><dl>
  <dt>preprocessing input
: <a href="../ch16_07.htm">16.6. Preprocessing Input</A>
  <dt>testing for interactivity
: <a href="../ch15_03.htm">15.2. Testing Whether a Program Is Running Interactively</A>
</DL>
<dt><a name="stdio-library">stdio library</A>
: <a href="../ch07_01.htm">7.0. Introduction</A>
<dt><a name="stdout-filehandle">STDOUT filehandle</A>
: <a href="../ch07_01.htm">7.0. Introduction</A>
<dd><dl>
  <dt>filtering output
: <a href="../ch16_06.htm">16.5. Filtering Your Own Output</A>
  <dt>testing for interactivity
: <a href="../ch15_03.htm">15.2. Testing Whether a Program Is Running Interactively</A>
</DL>
<dt><a name="sticky-widgets">sticky widgets</A>
: <a href="../ch19_12.htm">19.11. Creating Sticky Widgets</A>
<dt><a name="stingy-matching">stingy matching</A>
: (see <a href="idx_n.htm">non-greedy pattern matching</A>)
<dt><a name="storable-module">Storable module</A>
: <a href="../ch11_13.htm">11.12. Copying Data Structures</A>
<dt><a name="store">STORE( )</A>
: <a href="../ch13_16.htm">13.15. Creating Magic Variables with tie</A>
<dt><a name="store">store( ) (Storable module)</A>
: <a href="../ch11_14.htm">11.13. Storing Data Structures to Disk</A>
<dt><a name="stream-sockets">stream sockets</A>
<dd><dl>
  <dt><a href="../ch17_01.htm">17.0. Introduction</A>
  <dt><a href="../ch17_12.htm">17.11. Forking Servers</A>
</DL>
<dt><a name="strftime">strftime( )</A>
: <a href="../ch03_09.htm">3.8. Printing a Date</A>
<dt><a name="string.3a.3aapprox-module">String::Approx module</A>
: <a href="../ch06_14.htm">6.13. Approximate Matching</A>
<dt><a name="strings">strings</A>
<dd><dl>
  <dt>(see also <a href="idx_v.htm">variables</A>)
  <dt><a href="../ch01_01.htm">1.0. Introduction</A>
  <dt><a href="../ch01_09.htm">1.8. Expanding Variables in User Input</A>
  <dt>accessing substrings
: <a href="../ch01_02.htm">1.1. Accessing Substrings</A>
  <dt>checking if valid numbers
: <a href="../ch02_02.htm">2.1. Checking Whether a String Is a Valid Number</A>
  <dt>converting ASCII and values
: <a href="../ch01_05.htm">1.4. Converting Between ASCII Characters and Values</A>
  <dt>converting ASCII to/from HTML
: <a href="../ch20_05.htm">20.4. Converting ASCII to HTML</A>
  <dt>converting case
: <a href="../ch01_10.htm">1.9. Controlling Case</A>
  <dt>copying and substituting
: <a href="../ch06_02.htm">6.1. Copying and Substituting Simultaneously</A>
  <dt>default values for
: <a href="../ch01_03.htm">1.2. Establishing a Default Value</A>
  <dt>duplicate words, finding
: <a href="../ch06_17.htm">6.16. Detecting Duplicate Words</A>
  <dt>escaping characters
: <a href="../ch01_14.htm">1.13. Escaping Characters</A>
  <dt>hash element indices
: <a href="../ch05_01.htm">5.0. Introduction</A>
  <dt>HTML text substitutions
: <a href="../ch20_15.htm">20.14. Program: htmlsub</A>
  <dt>interpolating functions/expression within
: <a href="../ch01_11.htm">1.10. Interpolating Functions and Expressions Within Strings</A>
  <dt>matching letters
: <a href="../ch06_03.htm">6.2. Matching Letters</A>
  <dt>matching words
: <a href="../ch06_04.htm">6.3. Matching Words</A>
  <dt>numeric operators with
: <a href="../ch13_15.htm">13.14. Overloading Operators</A>
  <dt>parsing datetime information in
: <a href="../ch03_08.htm">3.7. Parsing Dates and Times from Strings</A>
  <dt>plurals based on numbers
: <a href="../ch02_19.htm">2.18. Printing Correct Plurals</A>
  <dt>processing characters individually
: <a href="../ch01_06.htm">1.5. Processing a String One Character at a Time</A>
  <dt>psgrep program (example)
: <a href="../ch01_19.htm">1.18. Program: psgrep</A>
  <dt>reading from binary files
: <a href="../ch08_15.htm">8.14. Reading a String from a Binary File</A>
  <dt>reformatting paragraphs
: <a href="../ch01_13.htm">1.12. Reformatting Paragraphs</A>
  <dt>removing leading/trailing spaces
: <a href="../ch01_15.htm">1.14. Trimming Blanks from the Ends of a String</A>
  <dt>removing/extracting HTML tags
: <a href="../ch20_07.htm">20.6. Extracting or Removing HTML Tags</A>
  <dt>reversing elements of
: <a href="../ch01_07.htm">1.6. Reversing a String by Word or Character</A>
  <dt>substituting specific words
: <a href="../ch01_18.htm">1.17. Program: fixstyle</A>
  <dt>text color, changing
: <a href="../ch15_06.htm">15.5. Changing Text Color</A>
</DL>
<dt><a name="strings-program">strings program (example)</A>
: <a href="../ch08_15.htm">8.14. Reading a String from a Binary File</A>
<dt><a name="stripping-whitespace">stripping whitespace</A>
: <a href="../ch01_15.htm">1.14. Trimming Blanks from the Ends of a String</A>
<dt><a name="strnum-class">StrNum class (example)</A>
: <a href="../ch13_15.htm">13.14. Overloading Operators</A>
<dt><a name="struct">struct( ) (Class::Struct)</A>
: <a href="../ch13_06.htm">13.5. Using Classes as Structs</A>
<dt><a name="struct.5fflock">struct_flock( ) (lockarea)</A>
: <a href="../ch07_23.htm">7.22. Program: lockarea</A>
<dt><a name="structs">structs, classes as</A>
: <a href="../ch13_06.htm">13.5. Using Classes as Structs</A>
<dt><a name="sub-keyword">sub keyword</A>
: <a href="../ch10_01.htm">10.0. Introduction</A>
<dt><a name="subclasses">subclasses</A>
: <a href="../ch13_01.htm">13.0. Introduction</A>
<dd><dl>
  <dt>determining membership
: <a href="../ch13_09.htm">13.8. Determining Subclass Membership</A>
  <dt>inheritance and
: <a href="../ch13_13.htm">13.12. Solving the Data Inheritance Problem</A>
</DL>
<dt><a name="subject">subject, sorting mail by (example)</A>
: <a href="../ch10_18.htm">10.17. Program: Sorting Your Mail</A>
<dt><a name="submitting-html-forms">submitting HTML forms</A>
: <a href="../ch20_03.htm">20.2. Automating Form Submission</A>
<dt><a name="subroutines">subroutines</A>
: <a href="../ch10_01.htm">10.0. Introduction</A>
<dd><dl>
  <dt>access arguments of
: <a href="../ch10_02.htm">10.1. Accessing Subroutine Arguments</A>
  <dt>built-in, overriding
: <a href="../ch12_12.htm">12.11. Overriding Built-In Functions</A>
  <dt>currently running, name of
: <a href="../ch10_05.htm">10.4. Determining Current Function Name</A>
  <dt>email sorter (example)
: <a href="../ch10_18.htm">10.17. Program: Sorting Your Mail</A>
  <dt>exception handling
: <a href="../ch10_13.htm">10.12. Handling Exceptions</A>
  <dt>localizing
: <a href="../ch10_15.htm">10.14. Redefining a Function</A>
  <dt>nesting
: <a href="../ch10_17.htm">10.16. Nesting Subroutines</A>
  <dt>passing by named parameter
: <a href="../ch10_08.htm">10.7. Passing by Named Parameter</A>
  <dt>passing by reference
: <a href="../ch10_06.htm">10.5. Passing Arrays and Hashes by Reference</A>
  <dt>private for modules
: <a href="../ch12_05.htm">12.4. Making Variables Private to a Module</A>
  <dt>private variables
: <a href="../ch10_03.htm">10.2. Making Variables Private to a Function</A>
  <dt>prototypes for functions
: <a href="../ch10_12.htm">10.11. Prototyping Functions</A>
  <dt>return context, detecting
: <a href="../ch10_07.htm">10.6. Detecting Return Context</A>
  <dt>return values
  <dd><dl>
    <dt>returning by reference
: <a href="../ch10_10.htm">10.9. Returning More Than One Array or Hash</A>
    <dt>returning failure
: <a href="../ch10_11.htm">10.10. Returning Failure</A>
    <dt>skipping selected
: <a href="../ch10_09.htm">10.8. Skipping Selected Return Values</A>
  </DL>
  <dt>saving global values
: <a href="../ch10_14.htm">10.13. Saving Global Values</A>
  <dt>trapping undefined function calls
: <a href="../ch10_16.htm">10.15. Trapping Undefined Function Calls with AUTOLOAD</A>
</DL>
<dt><a name="substituting-within-strings">substituting within strings</A>
: <a href="../ch06_02.htm">6.1. Copying and Substituting Simultaneously</A>
<dt><a name="substr">substr( )</A>
: <a href="../ch01_02.htm">1.1. Accessing Substrings</A>
<dt><a name="substrings">substrings</A>
: <a href="../ch01_02.htm">1.1. Accessing Substrings</A>
<dt><a name="super-class">SUPER class</A>
: <a href="../ch13_11.htm">13.10. Accessing Overridden Methods</A>
<dt><a name="superclasses">superclasses</A>
: <a href="../ch13_01.htm">13.0. Introduction</A>
<dd><dl>
  <dt>accessing overridden methods
: <a href="../ch13_11.htm">13.10. Accessing Overridden Methods</A>
  <dt>inheritance and
: <a href="../ch13_13.htm">13.12. Solving the Data Inheritance Problem</A>
</DL>
<dt><a name="surface-copies">surface copies</A>
: <a href="../ch11_13.htm">11.12. Copying Data Structures</A>
<dt><a name="surl-script">surl script</A>
: <a href="../ch20_09.htm">20.8. Finding Fresh Links</A>
<dt><a name="switch-statement">switch statement</A>
<dd><dl>
  <dt><a href="../ch19_09.htm">19.8. Redirecting to a Different Location</A>
  <dt><a href="../ch19_13.htm">19.12. Writing a Multiscreen CGI Script</A>
</DL>
<dt><a name="symbol.3a.3aqualify">Symbol::qualify( )</A>
: <a href="../ch12_06.htm">12.5. Determining the Caller's Package</A>
<dt><a name="symbolic-links">symbolic links</A>
: <a href="../ch09_01.htm">9.0. Introduction</A>
<dd><dl>
  <dt>duplicating directory trees
: <a href="../ch09_12.htm">9.11. Program: symirror</A>
  <dt>to packages
: <a href="../ch12_14.htm">12.13. Referring to Packages Indirectly</A>
</DL>
<dt><a name="symirror-program">symirror program (example)</A>
: <a href="../ch09_12.htm">9.11. Program: symirror</A>
<dt><a name="symmetric-differences-of-lists">symmetric differences of lists</A>
: <a href="../ch04_09.htm">4.8. Computing Union, Intersection, or Difference of Unique Lists</A>
<dt><a name="sys.3a.3ahostname-module">Sys::Hostname module</A>
: <a href="../ch17_09.htm">17.8. Finding Your Own Name and Address</A>
<dt><a name="sys.3a.3asyslog-module">Sys::Syslog module</A>
: <a href="../ch17_18.htm">17.17. Program: backsniff</A>
<dt><a name="syscall">syscall( )</A>
: <a href="../ch03_10.htm">3.9. High-Resolution Timers</A>
<dt><a name="sysopen">sysopen( )</A>
: <a href="../ch07_02.htm">7.1. Opening a File</A>
<dd><dl>
  <dt>strange filenames with
: <a href="../ch07_03.htm">7.2. Opening Files with Unusual Filenames</A>
</DL>
<dt><a name="sysread">sysread( )</A>
<dd><dl>
  <dt><a href="../ch08_01.htm">8.0. Introduction</A>
  <dt><a href="../ch17_01.htm">17.0. Introduction</A>
</DL>
<dt><a name="sysseek">sysseek( )</A>
: <a href="../ch08_01.htm">8.0. Introduction</A>
<dt><a name="system">system( )</A>
<dd><dl>
  <dt><a href="../ch16_03.htm">16.2. Running Another Program</A>
  <dt><a href="../ch19_07.htm">19.6. Executing Commands Without Shell Escapes</A>
</DL>
<dt><a name="sysv-ipc">SysV IPC</A>
: <a href="../ch16_13.htm">16.12. Sharing Variables in Different Processes</A>
<dt><a name="syswrite">syswrite( )</A>
<dd><dl>
  <dt><a href="../ch08_01.htm">8.0. Introduction</A>
  <dt><a href="../ch17_01.htm">17.0. Introduction</A>
</DL>
</DL>

<p>
<hr width="515" align="LEFT">

<p><font size="-1"><a href="../../search/csrch.htm">Search</A> |
<a href="idx_0.htm">Symbols</A>
| <a href="idx_a.htm">A</A>
| <a href="idx_b.htm">B</A>
| <a href="idx_c.htm">C</A>
| <a href="idx_d.htm">D</A>
| <a href="idx_e.htm">E</A>
| <a href="idx_f.htm">F</A>
| <a href="idx_g.htm">G</A>
| <a href="idx_h.htm">H</A>
| <a href="idx_i.htm">I</A>
| <a href="idx_j.htm">J</A>
| <a href="idx_k.htm">K</A>
| <a href="idx_l.htm">L</A>
| <a href="idx_m.htm">M</A>
| <a href="idx_n.htm">N</A>
| <a href="idx_o.htm">O</A>
| <a href="idx_p.htm">P</A>
| <a href="idx_q.htm">Q</A>
| <a href="idx_r.htm">R</A>
| S
| <a href="idx_t.htm">T</A>
| <a href="idx_u.htm">U</A>
| <a href="idx_v.htm">V</A>
| <a href="idx_w.htm">W</A>
| <a href="idx_x.htm">X</A>
| <a href="idx_y.htm">Y</A>
| <a href="idx_z.htm">Z</A></FONT>

<p><a href="../../copyrght.htm">Copyright</A> &copy; 1999
 <a href="../../../../../../../../www.oreilly.com/">O'Reilly &amp; Associates, Inc.</A>
All Rights Reserved.
<p class="nav"><font size="-1">[ <a href="../../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
>
</BODY>
</HTML>
