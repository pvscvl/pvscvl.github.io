<html><head>
<title>Recipe 2.1. Checking Whether a String Is a Valid Number</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:30:01Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch02_01.htm" title="2. Numbers"><link rel="prev" href="ch02_01.htm" title="2.0. Introduction"><link rel="next" href="ch02_03.htm" title="2.2. Comparing Floating-Point Numbers"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_01.htm" title="2.0. Introduction"><img src="../gifs/txtpreva.gif" alt="Previous: 2.0. Introduction" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch02_01.htm" title="2. Numbers">Chapter 2<br>Numbers</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch02_03.htm" title="2.2. Comparing Floating-Point Numbers"><img src="../gifs/txtnexta.gif" alt="Next: 2.2. Comparing Floating-Point Numbers" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch02-36504">2.1. Checking Whether a String Is a Valid Number</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-69">Problem <a class="indexterm" name="ch02-idx-1000007977-0"></A
><a class="indexterm" name="ch02-idx-1000007977-1"></A
></A
></H3
><p class="para">You want to check whether a string represents a valid number. This is a common problem when validating input, as in a CGI script.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-75">Solution</A
></H3
><p class="para"><a class="indexterm" name="ch02-idx-1000007987-0"></A
>Compare it against a regular expression that matches the kinds of numbers you're interested in.</P
><pre class="programlisting">if ($string =~ /PATTERN/) {
    # is a number
} else {
    # is not
}</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-91">Discussion</A
></H3
><p class="para">This problem gets to the heart of what we mean by a number. Even things that sound simple, like <em class="emphasis">integer</EM
>, make you think hard about what you will accept ("Is a leading + for positive numbers optional, mandatory, or forbidden?"). The many ways that floating-point numbers can be represented could overheat your brain.</P
><p class="para">You must decide what you will and will not accept. Then, construct a regular expression to match those things alone. Here are some precooked solutions (the cookbook's equivalent of just-add-water meals) for most common cases.</P
><pre class="programlisting">warn &quot;has nondigits&quot;        if     /\D/;
warn &quot;not a natural number&quot; unless /^\d+$/;             # rejects -3
warn &quot;not an integer&quot;       unless /^-?\d+$/;           # rejects +3
warn &quot;not an integer&quot;       unless /^[+-]?\d+$/;
warn &quot;not a decimal number&quot; unless /^-?\d+\.?\d*$/;     # rejects .2
warn &quot;not a decimal number&quot; unless /^-?(?:\d+(?:\.\d*)?|\.\d+)$/;
warn &quot;not a C float&quot;
       unless /^([+-]?)(?=\d|\.\d)\d*(\.\d*)?([Ee]([+-]?\d+))?$/;</PRE
><p class="para">These lines do not catch the IEEE notations of "Infinity" and "NaN", but unless you're worried that IEEE committee members will stop by your workplace and beat you over the head with copies of the relevant standards documents, you can probably forget about these strange numbers.</P
><p class="para">If your number has leading or trailing whitespace, those patterns won't work. Either add the appropriate logic directly, or call the <code class="literal">trim</CODE
> function from <a class="xref" href="ch01_15.htm" title="Trimming Blanks from the Ends of a String">Recipe 1.14</A
>.</P
><p class="para">If you're on a POSIX system, Perl supports the <code class="literal">POSIX::strtod</CODE
> function. Its semantics are cumbersome, so here's a <code class="literal">getnum</CODE
> wrapper function for more convenient access. This function takes a string and returns the number it found or <code class="literal">undef</CODE
> for input that isn't a C float. The <code class="literal">is_numeric</CODE
> function is a front end to <code class="literal">getnum</CODE
> for when you just want to say "Is this a float?"</P
><pre class="programlisting">sub getnum {
    use POSIX qw(strtod);
    my $str = shift;
    $str =~ s/^\s+//;
    $str =~ s/\s+$//;
    $! = 0;
    my($num, $unparsed) = strtod($str);
    if (($str eq '') || ($unparsed != 0) || $!) {
        return;
    } else {
        return $num;
    } 
} 

sub is_numeric { defined scalar &amp;getnum } </PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-151">See Also</A
></H3
><p class="para">The regular expression syntax in <em class="emphasis">perlre </EM
>(1) and <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; your system's <i class="filename">strtod</I
> (3) manpage; the documentation for the standard POSIX module (also in <a class="olink" href="../prog/ch07_01.htm">Chapter 7</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>) <a class="indexterm" name="ch02-idx-1000007979-0"></A
><a class="indexterm" name="ch02-idx-1000007979-1"></A
><a class="indexterm" name="ch02-idx-1000007979-2"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_01.htm" title="2.0. Introduction"><img src="../gifs/txtpreva.gif" alt="Previous: 2.0. Introduction" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch02_03.htm" title="2.2. Comparing Floating-Point Numbers"><img src="../gifs/txtnexta.gif" alt="Next: 2.2. Comparing Floating-Point Numbers" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">2.0. Introduction</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">2.2. Comparing Floating-Point Numbers</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
