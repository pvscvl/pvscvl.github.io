<html><head>
<title>Recipe 2.18. Printing Correct Plurals</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:30:25Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch02_01.htm" title="2. Numbers"><link rel="prev" href="ch02_18.htm" title="2.17. Putting Commas in Numbers"><link rel="next" href="ch02_20.htm" title="2.19. Program: Calculating Prime Factors"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_18.htm" title="2.17. Putting Commas in Numbers"><img src="../gifs/txtpreva.gif" alt="Previous: 2.17. Putting Commas in Numbers" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch02_01.htm" title="2. Numbers">Chapter 2<br>Numbers</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch02_20.htm" title="2.19. Program: Calculating Prime Factors"><img src="../gifs/txtnexta.gif" alt="Next: 2.19. Program: Calculating Prime Factors" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch02-chap02_printing_0">2.18. Printing Correct Plurals</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-1349">Problem <a class="indexterm" name="ch02-idx-1000008154-0"></A
><a class="indexterm" name="ch02-idx-1000008154-1"></A
><a class="indexterm" name="ch02-idx-1000008154-2"></A
><a class="indexterm" name="ch02-idx-1000008154-3"></A
></A
></H3
><p class="para">You're printing something like &quot;<code class="literal">It</CODE
> <code class="literal">took</CODE
> <code class="literal">$time</CODE
> <code class="literal">hours</CODE
>&quot;, but &quot;<code class="literal">It</CODE
> <code class="literal">took</CODE
> <code class="literal">1</CODE
> <code class="literal">hours</CODE
>&quot; is ungrammatical. You would like to get it right.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-1355">Solution</A
></H3
><p class="para">Use <code class="literal">printf</CODE
> and a ternary conditional (<code class="literal">X</CODE
> <code class="literal">?</CODE
> <code class="literal">Y</CODE
> <code class="literal">:</CODE
> <code class="literal">Z</CODE
>) to alter the noun or verb:</P
><pre class="programlisting">printf &quot;It took %d hour%s\n&quot;, $time, $time == 1 ? &quot;&quot; : &quot;s&quot;;

printf &quot;%d hour%s %s enough.\n&quot;, $time, 
        $time == 1 ? &quot;&quot;   : &quot;s&quot;,
        $time == 1 ? &quot;is&quot; : &quot;are&quot;;</PRE
><p class="para">Or, use the <a class="indexterm" name="ch02-idx-1000008155-0"></A
>Lingua::EN::Inflect module from CPAN as described in the Discussion.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-1373">Discussion</A
></H3
><p class="para">The only reason inane messages like &quot;<code class="literal">1</CODE
> <code class="literal">file(s)</CODE
> <code class="literal">updated</CODE
>&quot; appear is because their authors are too lazy to bother checking whether the count is 1 or not.</P
><p class="para">If your noun changes by more than an <code class="literal">&quot;-s&quot;</CODE
>, you'll need to change the <code class="literal">printf</CODE
> accordingly:</P
><pre class="programlisting">printf &quot;It took %d centur%s&quot;, $time, $time == 1 ? &quot;y&quot; : &quot;ies&quot;;</PRE
><p class="para">This is good for simple cases, but you'll get tired of writing it. This leads you to write funny functions like this:</P
><pre class="programlisting">sub noun_plural {
    local $_ = shift;
    # order really matters here!
    s/ss$/sses/                             ||
    s/([psc]h)$/${1}es/                     ||
    s/z$/zes/                               ||
    s/ff$/ffs/                              ||
    s/f$/ves/                               ||
    s/ey$/eys/                              ||
    s/y$/ies/                               ||
    s/ix$/ices/                             ||
    s/([sx])$/$1es/                         ||
    s/$/s/                                  ||
                die &quot;can't get here&quot;;
    return $_;
}
*verb_singular = \&amp;noun_plural;   # make function alias</PRE
><p class="para">As you find more exceptions, your function will become increasingly convoluted. When you need to handle such morphological changes, turn to the flexible solution provided by the Lingua::EN::Inflect module from CPAN.</P
><pre class="programlisting">use Lingua::EN::Inflect qw(PL classical);
classical(1);               # why isn't this the default?
while (&lt;DATA&gt;) {            # each line in the data
    for (split) {           # each word on the line
        print &quot;One $_, two &quot;, PL($_), &quot;.\n&quot;;
    }
} 
# plus one more
$_ = 'secretary general';
print &quot;One $_, two &quot;, PL($_), &quot;.\n&quot;;

__END__
fish fly ox 
species genus phylum 
cherub radius jockey 
index matrix mythos
phenomenon formula </PRE
><p class="para">That produces the following:</P
><pre class="programlisting"><code class="userinput"><b><code class="replaceable"><i>One fish, two fish.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One fly, two flies.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One ox, two oxen.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One species, two species.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One genus, two genera.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One phylum, two phyla.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One cherub, two cherubim.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One radius, two radii.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One jockey, two jockeys.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One index, two indices.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One matrix, two matrices.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One mythos, two mythoi.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One phenomenon, two phenomena.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One formula, two formulae.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>One secretary general, two secretaries general.</I
></CODE
></B
></CODE
></PRE
><p class="para">This is one of the many things the module can do. It also handles inflections or conjugations for other parts of speech, provides number-insensitive comparison functions, figures out whether to use <i class="firstterm">a</I
> or <i class="firstterm">an</I
>, and plenty more.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-1489">See Also</A
></H3
><p class="para">The ternary ("hook-colon") operator discussed in <em class="emphasis">perlop </EM
>(1) and in the <a class="olink" href="../prog/ch02_05.htm#PERL2-CH-2-SECT-5.10">"Conditional Operator"</A
> section of <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; the documentation with the CPAN module Lingua::EN::Inflect<a class="indexterm" name="ch02-idx-1000008156-0"></A
> <a class="indexterm" name="ch02-idx-1000008158-0"></A
><a class="indexterm" name="ch02-idx-1000008158-1"></A
><a class="indexterm" name="ch02-idx-1000008158-2"></A
><a class="indexterm" name="ch02-idx-1000008158-3"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_18.htm" title="2.17. Putting Commas in Numbers"><img src="../gifs/txtpreva.gif" alt="Previous: 2.17. Putting Commas in Numbers" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch02_20.htm" title="2.19. Program: Calculating Prime Factors"><img src="../gifs/txtnexta.gif" alt="Next: 2.19. Program: Calculating Prime Factors" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">2.17. Putting Commas in Numbers</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">2.19. Program: Calculating Prime Factors</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
