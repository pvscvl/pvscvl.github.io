<html><head>
<title>Recipe 6.9. Matching Shell Globs as Regular Expressions</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:34:21Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch06_01.htm" title="6. Pattern Matching"><link rel="prev" href="ch06_09.htm" title="6.8. Extracting a Range of Lines"><link rel="next" href="ch06_11.htm" title="6.10. Speeding Up Interpolated Matches"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch06_09.htm" title="6.8. Extracting a Range of Lines"><img src="../gifs/txtpreva.gif" alt="Previous: 6.8. Extracting a Range of Lines" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch06_01.htm" title="6. Pattern Matching">Chapter 6<br>Pattern Matching</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch06_11.htm" title="6.10. Speeding Up Interpolated Matches"><img src="../gifs/txtnexta.gif" alt="Next: 6.10. Speeding Up Interpolated Matches" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch06-97251">6.9. Matching Shell Globs as Regular Expressions<a class="indexterm" name="ch06-idx-1000007611-0"></A
><a class="indexterm" name="ch06-idx-1000007611-1"></A
><a class="indexterm" name="ch06-idx-1000007611-2"></A
><a class="indexterm" name="ch06-idx-1000007611-3"></A
></A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch06-pgfId-1069">Problem</A
></H3
><p class="para">You want to allow users to specify matches using traditional shell wildcards, not full Perl regular expressions. Wildcards are easier to type than full regular expressions for simple cases.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch06-pgfId-1075">Solution</A
></H3
><p class="para">Use the following subroutine to convert four shell wildcard characters into their equivalent regular expression; all other characters will be quoted to render them literals.</P
><pre class="programlisting">sub glob2pat {
    my $globstr = shift;
    my %patmap = (
        '*' =&gt; '.*',
        '?' =&gt; '.',
        '[' =&gt; '[',
        ']' =&gt; ']',
    );
    $globstr =~ s{(.)} { $patmap{$1} || &quot;\Q$1&quot; }ge;
    return '^' . $globstr . '$';
}</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch06-pgfId-1103">Discussion</A
></H3
><p class="para">A Perl pattern is not the same as a shell wildcard pattern. The shell's <code class="literal">*.*</CODE
> is not a valid regular expression. Its meaning as a pattern would be <code class="literal">/^.*\..*$/</CODE
>, which is admittedly much less fun to type.</P
><p class="para">The function given in the Solution makes these conversions for you, following the standard wildcard rules used by the <code class="literal">glob</CODE
> built-in.</P
><table class="informaltable" border="1" cellpadding="3"><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><b class="emphasis.bold">Shell</B
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><b class="emphasis.bold">Perl</B
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">list.?</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">^list\..$</CODE
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">project.*</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">^project\..*$</CODE
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">*old</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">^.*old$</CODE
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">type*.[ch]</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">^type.*\.[ch]$</CODE
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">*.*</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">^.*\..*$</CODE
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">*</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">^.*$</CODE
></P
></TD
></TR
></TBODY
></TABLE
><p class="para">In the shell, the rules are different. The entire pattern is implicitly anchored at the ends. A question mark maps into any character, an asterisk is any amount of anything, and brackets are character ranges. Everything else is normal.</P
><p class="para">Most shells do more than simple one-directory globbing. For instance, you can say <code class="literal">*/*</CODE
> to mean "all the files in all the subdirectories of the current directory." Furthermore, most shells don't list files whose names begin with a period, unless you explicitly put that leading period into your glob pattern. Our <code class="literal">glob2pat</CODE
> function doesn't do these things &nbsp;-  if you need them, use the File::KGlob module from CPAN.<a class="indexterm" name="ch06-idx-1000007613-0"></A
><a class="indexterm" name="ch06-idx-1000007613-1"></A
><a class="indexterm" name="ch06-idx-1000007613-2"></A
><a class="indexterm" name="ch06-idx-1000007613-3"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch06-pgfId-1129">See Also</A
></H3
><p class="para">Your system's <i class="filename">csh</I
> (1) and <i class="filename">ksh </I
>(1) manpages; the <code class="literal">glob</CODE
> function in <i class="filename">perlfunc </I
>(1) and <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; the documentation for the CPAN module Glob::DosGlob; the "I/O Operators" section of <i class="filename">perlop </I
>(1) and the <a class="olink" href="../prog/ch02_03.htm#PERL2-CH-2-SECT-3.1">"Filename globbing operator"</A
> section of <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; we talk more about globbing in <a class="xref" href="ch09_07.htm" title="Globbing, or Getting a List of Filenames Matching a Pattern">Recipe 9.6</A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch06_09.htm" title="6.8. Extracting a Range of Lines"><img src="../gifs/txtpreva.gif" alt="Previous: 6.8. Extracting a Range of Lines" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch06_11.htm" title="6.10. Speeding Up Interpolated Matches"><img src="../gifs/txtnexta.gif" alt="Next: 6.10. Speeding Up Interpolated Matches" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">6.8. Extracting a Range of Lines</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">6.10. Speeding Up Interpolated Matches</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
