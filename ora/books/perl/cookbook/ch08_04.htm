<html><head>
<title>Recipe 8.3. Processing Every Word in a File</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:38:39Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch08_01.htm" title="8. File Contents"><link rel="prev" href="ch08_03.htm" title="8.2. Counting Lines (or Paragraphs or Records) in a File"><link rel="next" href="ch08_05.htm" title="8.4. Reading a File Backwards by Line or Paragraph"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><index.htmlmap name="srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch08_03.htm" title="8.2. Counting Lines (or Paragraphs or Records) in a File"><img src="../gifs/txtpreva.gif" alt="Previous: 8.2. Counting Lines (or Paragraphs or Records) in a File" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch08_01.htm" title="8. File Contents">Chapter 8<br>File Contents</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch08_05.htm" title="8.4. Reading a File Backwards by Line or Paragraph"><img src="../gifs/txtnexta.gif" alt="Next: 8.4. Reading a File Backwards by Line or Paragraph" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch08-chap08_processing_0">8.3. Processing Every Word in a File</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch08-pgfId-324">Problem<a class="indexterm" name="ch08-idx-1000004629-0"></A
><a class="indexterm" name="ch08-idx-1000004629-1"></A
></A
></H3
><p class="para">You need to do something to every word in a file, similar to the <code class="literal">foreach</CODE
> function of <em class="emphasis">csh</EM
>.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch08-pgfId-330">Solution</A
></H3
><p class="para">Either <code class="literal">split</CODE
><a class="indexterm" name="ch08-idx-1000004635-0"></A
> each line on whitespace:</P
><pre class="programlisting">while (&lt;&gt;) {
    for $chunk (split) {
        # do something with $chunk
    }
}</PRE
><p class="para">Or use the <code class="literal">m//g</CODE
> operator to pull out one chunk at a time:</P
><pre class="programlisting">while (&lt;&gt;) {
    while ( /(\w[\w'-]*)/g ) {
        # do something with $1
    }
}</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch08-pgfId-358">Discussion</A
></H3
><p class="para">Decide what you mean by "word." Sometimes you want anything but whitespace, sometimes you only want program identifiers, and sometimes you want English words. Your definition governs which regular expression to use.</P
><p class="para">The preceding two approaches work differently. Patterns are used in the first approach to decide what is <em class="emphasis">not</EM
> a word. In the second, they're used to decide what <em class="emphasis">is</EM
> a word.</P
><p class="para">With these techniques, it's easy to make a word frequency counter. Use a hash to store how many times each word has been seen:</P
><pre class="programlisting"># Make a word frequency count
%seen = ();
while (&lt;&gt;) {
    while ( /(\w['\w-]*)/g ) {
        $seen{lc $1}++;
    }
}

# output hash in a descending numeric sort of its values
foreach $word ( sort { $seen{$b} &lt;=&gt; $seen{$a} } keys %seen) {
    printf &quot;%5d %s\n&quot;, $seen{$word}, $word;
}</PRE
><p class="para">To make the example program count line frequency instead of word frequency, omit the second <code class="literal">while</CODE
> loop and do <code class="literal">$seen{lc</CODE
> <code class="literal">$_}++</CODE
> instead:</P
><pre class="programlisting"># Line frequency count
%seen = ();
while (&lt;&gt;) {
    $seen{lc $_}++;
}
foreach $line ( sort { $seen{$b} &lt;=&gt; $seen{$a} } keys %seen ) {
    printf &quot;%5d %s&quot;, $seen{$line}, $line;
}</PRE
><p class="para">Odd things that may need to be considered as words include "M.I.T.", "Micro$oft", "o'clock", "49ers", "street-wise", "and/or", "&amp;", "c/o", "St.", "TschÿÒ", and "Ni”o". Bear this in mind when you choosing a pattern to match. The last two require you to place a <code class="literal">use</CODE
> <code class="literal">locale</CODE
> in your program and then employ <code class="literal">\w</CODE
> for a word character in the current locale.<a class="indexterm" name="ch08-idx-1000004631-0"></A
><a class="indexterm" name="ch08-idx-1000004631-1"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch08-pgfId-414">See Also</A
></H3
><p class="para">The <code class="literal">split</CODE
> function in <i class="filename">perlfunc </I
>(1) and in <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; <a class="xref" href="ch06_04.htm" title="Matching Words">Recipe 6.3</A
>; <a class="xref" href="ch06_24.htm" title="Regular Expression Grabbag">Recipe 6.23</A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch08_03.htm" title="8.2. Counting Lines (or Paragraphs or Records) in a File"><img src="../gifs/txtpreva.gif" alt="Previous: 8.2. Counting Lines (or Paragraphs or Records) in a File" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch08_05.htm" title="8.4. Reading a File Backwards by Line or Paragraph"><img src="../gifs/txtnexta.gif" alt="Next: 8.4. Reading a File Backwards by Line or Paragraph" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">8.2. Counting Lines (or Paragraphs or Records) in a File</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">8.4. Reading a File Backwards by Line or Paragraph</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
