<html><head>
<title>Recipe 11.2. Making Hashes of Arrays</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:40:32Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch11_01.htm" title="11. References and Records"><link rel="prev" href="ch11_02.htm" title="11.1. Taking References to Arrays"><link rel="next" href="ch11_04.htm" title="11.3. Taking References to Hashes"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch11_02.htm" title="11.1. Taking References to Arrays"><img src="../gifs/txtpreva.gif" alt="Previous: 11.1. Taking References to Arrays" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch11_01.htm" title="11. References and Records">Chapter 11<br>References and Records</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch11_04.htm" title="11.3. Taking References to Hashes"><img src="../gifs/txtnexta.gif" alt="Next: 11.3. Taking References to Hashes" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch11-chap11_making_0">11.2. Making Hashes of Arrays</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch11-pgfId-332">Problem<a class="indexterm" name="ch11-idx-1000004802-0"></A
><a class="indexterm" name="ch11-idx-1000004802-1"></A
><a class="indexterm" name="ch11-idx-1000004802-2"></A
></A
></H3
><p class="para">For each key in a hash, only one scalar value is allowed, but you'd like to use one key to store and retrieve multiple values. That is, you'd like the value to be a list.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch11-pgfId-338">Solution</A
></H3
><p class="para">Use references to arrays as the hash values. Use <code class="literal">push</CODE
> to append:</P
><pre class="programlisting">push(@{ $hash{&quot;KEYNAME&quot;} }, &quot;new value&quot;);</PRE
><p class="para">Then, dereference the value as an array reference when printing out the hash:</P
><pre class="programlisting">foreach $string (keys %hash) {
    print &quot;$string: @{$hash{$string}}\n&quot;; 
} </PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch11-pgfId-354">Discussion</A
></H3
><p class="para">You can only store scalar values in a hash. References, however, are scalars. This solves the problem of storing multiple values for one key by making <code class="literal">$hash{$key}</CODE
> a reference to an array containing the values for <code class="literal">$key</CODE
>. The normal hash operations (insertion, deletion, iteration, and testing for existence) can now be written in terms of array operations like <code class="literal">push</CODE
>, <code class="literal">splice</CODE
>, and <code class="literal">foreach</CODE
>.</P
><p class="para">Here's how to give a key many values:</P
><pre class="programlisting">$hash{&quot;a key&quot;} = [ 3, 4, 5 ];       # anonymous array</PRE
><p class="para">Once you have a key with many values, here's how to use them:</P
><pre class="programlisting">@values = @{ $hash{&quot;a key&quot;} };</PRE
><p class="para">To append a new value to the array of values associated with a particular key, use <code class="literal">push</CODE
><a class="indexterm" name="ch11-idx-1000004808-0"></A
>:</P
><pre class="programlisting">push @{ $hash{&quot;a key&quot;} }, $value;</PRE
><p class="para">The classic application of these data structures is inverting a hash that has many keys with the same associated value. When inverted, you end up with a hash that has many values for the same key. This is addressed in <a class="xref" href="ch05_09.htm" title="Inverting a Hash">Recipe 5.8</A
>.</P
><p class="para">Be warned that this:</P
><pre class="programlisting">@residents = @{ $phone2name{$number} };</PRE
><p class="para">causes a runtime exception under <code class="literal">use</CODE
> <code class="literal">strict</CODE
> because you're dereferencing an undefined reference where autovivification won't occur. You must do this instead:</P
><pre class="programlisting">@residents = exists( $phone2name{$number} )
                ? @{ $phone2name{$number} }
                : ();</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch11-pgfId-390">See Also</A
></H3
><p class="para">The section on <a class="olink" href="../prog/ch04_07.htm#PERL2-CH-4-SECT-7.2">"Hashs of Arrays"</A
> in <a class="olink" href="../prog/ch04_01.htm">Chapter 4</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
> and in <i class="filename">perldsc </I
>(1); <a class="xref" href="ch05_09.htm" title="Inverting a Hash">Recipe 5.8</A
>; the example "Tie Example: Make a Hash That Always Appends" in <a class="xref" href="ch13_16.htm" title="Creating Magic Variables with tie">Recipe 13.15</A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch11_02.htm" title="11.1. Taking References to Arrays"><img src="../gifs/txtpreva.gif" alt="Previous: 11.1. Taking References to Arrays" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch11_04.htm" title="11.3. Taking References to Hashes"><img src="../gifs/txtnexta.gif" alt="Next: 11.3. Taking References to Hashes" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">11.1. Taking References to Arrays</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">11.3. Taking References to Hashes</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
