<html><head>
<title>Recipe 9.5. Processing All Files in a Directory</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:39:11Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch09_01.htm" title="9. Directories"><link rel="prev" href="ch09_05.htm" title="9.4. Recognizing Two Names for the Same File"><link rel="next" href="ch09_07.htm" title="9.6. Globbing, or Getting a List of Filenames Matching a Pattern"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map namindex.htmle="srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch09_05.htm" title="9.4. Recognizing Two Names for the Same File"><img src="../gifs/txtpreva.gif" alt="Previous: 9.4. Recognizing Two Names for the Same File" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch09_01.htm" title="9. Directories">Chapter 9<br>Directories</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch09_07.htm" title="9.6. Globbing, or Getting a List of Filenames Matching a Pattern"><img src="../gifs/txtnexta.gif" alt="Next: 9.6. Globbing, or Getting a List of Filenames Matching a Pattern" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch09-chap09_processing_0">9.5. Processing All Files in a Directory</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch09-pgfId-1000005078">Problem<a class="indexterm" name="ch09-idx-1000005077-0"></A
><a class="indexterm" name="ch09-idx-1000005077-1"></A
></A
></H3
><p class="para">You want to do something to each file in a particular directory.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch09-pgfId-544">Solution</A
></H3
><p class="para">Use <code class="literal">opendir</CODE
><a class="indexterm" name="ch09-idx-1000004383-0"></A
><a class="indexterm" name="ch09-idx-1000004383-1"></A
> to open the directory and then <code class="literal">readdir</CODE
> to retrieve every filename:</P
><pre class="programlisting">opendir(DIR, $dirname) or die &quot;can't opendir $dirname: $!&quot;;
while (defined($file = readdir(DIR))) {
    # do something with &quot;$dirname/$file&quot;
}
closedir(DIR);</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch09-pgfId-560">Discussion</A
></H3
><p class="para">The <code class="literal">opendir</CODE
>, <code class="literal">readdir</CODE
>, and <code class="literal">closedir</CODE
> functions operate on directories as <code class="literal">open</CODE
>, &lt; &gt;, and <code class="literal">close</CODE
> operate on files. Both use handles, but the directory handles used by <code class="literal">opendir</CODE
> and friends are different from the file handles used by <code class="literal">open</CODE
> and friends. In particular, you can't use &lt; &gt; on a directory handle.</P
><p class="para">In scalar context, <code class="literal">readdir</CODE
> returns the next filename in the directory until it reaches the end of the directory when it returns <code class="literal">undef</CODE
>. In list context it returns the rest of the filenames in the directory or an empty list if there were no files left. As explained in the Introduction, the filenames returned by <code class="literal">readdir</CODE
> do not include the directory name. When you work with the filenames returned by <code class="literal">readdir</CODE
>, you must either move to the right directory first or prepend the directory to the filename.</P
><p class="para">This shows one way of prepending:</P
><pre class="programlisting">$dir = &quot;/usr/local/bin&quot;;
print &quot;Text files in $dir are:\n&quot;;
opendir(BIN, $dir) or die &quot;Can't open $dir: $!&quot;;
while( defined ($file = readdir BIN) ) {
    print &quot;$file\n&quot; if -T &quot;$dir/$file&quot;;
}
closedir(BIN);</PRE
><p class="para">We test <code class="literal">$file</CODE
> with <code class="literal">defined</CODE
> because simply saying <code class="literal">while</CODE
> <code class="literal">($file</CODE
> <code class="literal">=</CODE
> <code class="literal">readdir</CODE
> <code class="literal">BIN)</CODE
> would only be testing truth and not definedness. Although the loop would end when <code class="literal">readdir</CODE
> ran out of files to return, it would also end prematurely if a file had the name &quot;<code class="literal">0&quot;</CODE
>.</P
><p class="para">The <code class="literal">readdir</CODE
> function will return the special directories <code class="literal">&quot;.&quot;</CODE
> (the directory itself) and <code class="literal">&quot;..&quot;</CODE
> (the parent of the directory). Most people skip the files with code like:</P
><pre class="programlisting">while ( defined ($file = readdir BIN) ) {
    next if $file =~ /^\.\.?$/;     # skip . and ..
    # ...
}</PRE
><p class="para">Like filehandles, directory handles are per-package constructs. Further, you have two ways of getting a local <a class="indexterm" name="ch09-idx-1000006155-0"></A
>directory handle: use <code class="literal">local</CODE
> <code class="literal">*DIRHANDLE</CODE
> or use an object module (see <a class="xref" href="ch07_17.htm" title="Storing Filehandles in Variables">Recipe 7.16</A
>). The appropriate module in this case is <code class="literal">DirHandle</CODE
>. The following code uses DirHandle and produces a sorted list of plain files that aren't dotfiles (that is, whose names don't begin with a <code class="literal">&quot;.&quot;</CODE
>):</P
><pre class="programlisting">use DirHandle;

sub plainfiles {
   my $dir = shift;
   my $dh = DirHandle-&gt;new($dir)   or die &quot;can't opendir $dir: $!&quot;;
   return sort                     # sort pathnames
          grep {    -f     }       # choose only &quot;plain&quot; files
          map  { &quot;$dir/$_&quot; }       # create full paths
          grep {  !/^\./   }       # filter out dot files
          $dh-&gt;<code class="literal">read()</CODE
>;             # read all entries
}</PRE
><p class="para">DirHandle's <code class="literal">read</CODE
> method behaves just like <code class="literal">readdir</CODE
>, returning the rest of the filenames. The bottom <code class="literal">grep</CODE
> only returns those that don't begin with a period. The <code class="literal">map</CODE
> turns the filenames returned by <code class="literal">read</CODE
> into fully qualified filenames, and the top <code class="literal">grep</CODE
> filters out directories, links, etc. The resulting list is then <code class="literal">sort</CODE
>ed and returned.</P
><p class="para">In addition to <code class="literal">readdir</CODE
>, there's also <code class="literal">rewinddir</CODE
><a class="indexterm" name="ch09-idx-1000004389-0"></A
><a class="indexterm" name="ch09-idx-1000004389-1"></A
> (to move the directory handle back to the start of the filename list), <code class="literal">seekdir</CODE
> (to move to a specific offset in the list), and <code class="literal">telldir</CODE
> (to find out how far from the start of the list you are).<a class="indexterm" name="ch09-idx-1000004385-0"></A
><a class="indexterm" name="ch09-idx-1000004385-1"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch09-pgfId-624">See Also</A
></H3
><p class="para">The <code class="literal">closedir</CODE
>, <code class="literal">opendir</CODE
>, <code class="literal">readdir</CODE
>, <code class="literal">rewinddir</CODE
>, <code class="literal">seekdir</CODE
>, and <code class="literal">telldir</CODE
> functions in <i class="filename">perlfunc </I
>(1) and in <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; documentation for the standard DirHandle module (also in <a class="olink" href="../prog/ch07_01.htm">Chapter 7</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>)</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch09_05.htm" title="9.4. Recognizing Two Names for the Same File"><img src="../gifs/txtpreva.gif" alt="Previous: 9.4. Recognizing Two Names for the Same File" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch09_07.htm" title="9.6. Globbing, or Getting a List of Filenames Matching a Pattern"><img src="../gifs/txtnexta.gif" alt="Next: 9.6. Globbing, or Getting a List of Filenames Matching a Pattern" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">9.4. Recognizing Two Names for the Same File</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">9.6. Globbing, or Getting a List of Filenames Matching a Pattern</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
