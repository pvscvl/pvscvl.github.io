<html><head>
<title>Recipe 7.15. Determining the Number of Bytes to Read</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:37:19Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_01.htm" title="7. File Access"><link rel="prev" href="ch07_15.htm" title="7.14. Doing Non-Blocking I/O"><link rel="next" href="ch07_17.htm" title="7.16. Storing Filehandles in Variables"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch07_15.htm" title="7.14. Doing Non-Blocking I/O"><img src="../gifs/txtpreva.gif" alt="Previous: 7.14. Doing Non-Blocking I/O" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch07_01.htm" title="7. File Access">Chapter 7<br>File Access</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch07_17.htm" title="7.16. Storing Filehandles in Variables"><img src="../gifs/txtnexta.gif" alt="Next: 7.16. Storing Filehandles in Variables" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch07-16091">7.15. Determining the Number of Bytes to Read</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch07-pgfId-1500">Problem<a class="indexterm" name="ch07-idx-1000009725-0"></A
><a class="indexterm" name="ch07-idx-1000009725-1"></A
><a class="indexterm" name="ch07-idx-1000009725-2"></A
></A
></H3
><p class="para">You want to know how many bytes to read from a filehandle with <code class="literal">read</CODE
> or <code class="literal">sysread</CODE
>.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch07-pgfId-1506">Solution</A
></H3
><p class="para">Use the FIONREAD ioctl call:</P
><pre class="programlisting">$size = pack(&quot;L&quot;, 0);
ioctl(FH, $FIONREAD, $size)     or die &quot;Couldn't call ioctl: $!\n&quot;;
$size = unpack(&quot;L&quot;, $size);

# $size bytes can be read</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch07-pgfId-1522">Discussion</A
></H3
><p class="para">The Perl <code class="literal">ioctl</CODE
> function is a direct interface to the operating system's <em class="emphasis">ioctl (2)</EM
> system call. If your system doesn't have the FIONREAD request or the <em class="emphasis">ioctl (2)</EM
> call, you can't use this recipe. FIONREAD and the other <em class="emphasis">ioctl</EM
> (2) requests are numeric values normally found lurking C include files.</P
><p class="para">Perl's <em class="emphasis">h2ph</EM
> tool tries to convert C include files to Perl code, which can be <code class="literal">require</CODE
>d. FIONREAD ends up defined as a function in the <em class="emphasis">sys/ioctl.ph</EM
> file:</P
><pre class="programlisting">require 'sys/ioctl.ph';

$size = pack(&quot;L&quot;, 0);
ioctl(FH, FIONREAD(), $size)    or die &quot;Couldn't call ioctl: $!\n&quot;;
$size = unpack(&quot;L&quot;, $size);</PRE
><p class="para">If <em class="emphasis">h2ph</EM
> wasn't installed or doesn't work for you, you can manually <em class="emphasis">grep</EM
> the include files:</P
><pre class="programlisting">% grep FIONREAD /usr/include/*/*
<code class="userinput"><b><code class="replaceable"><i>/usr/include/asm/ioctls.h:#define FIONREAD      0x541B</I
></CODE
></B
></CODE
></PRE
><p class="para">Or write a small C program using the editor of champions:</P
><pre class="programlisting">% cat &gt; fionread.c
#include &lt;sys/ioctl.h&gt;
<code class="literal">main() {</CODE
>
    printf(&quot;%#08x\n&quot;, FIONREAD);
}
^D
% cc -o fionread fionread
% ./fionread
<code class="userinput"><b><code class="replaceable"><i>0x4004667f</I
></CODE
></B
></CODE
></PRE
><p class="para">Then hard-code it, leaving porting as an exercise to your successor.</P
><pre class="programlisting">$FIONREAD = 0x4004667f;         # XXX: opsys dependent

$size = pack(&quot;L&quot;, 0);
ioctl(FH, $FIONREAD, $size)     or die &quot;Couldn't call ioctl: $!\n&quot;;
$size = unpack(&quot;L&quot;, $size);</PRE
><p class="para">FIONREAD requires a filehandle connected to a stream, which means sockets, pipes, and tty devices work, but files don't.</P
><p class="para">If this is too much system programming for you, try to think outside the problem. Read from the filehandle in non-blocking mode (see <a class="xref" href="ch07_15.htm" title="Doing Non-Blocking I/O">Recipe 7.14</A
>). If you manage to read something, then that's how much was waiting to be read. If you couldn't read anything, there was nothing to be read. <a class="indexterm" name="ch07-idx-1000009727-0"></A
><a class="indexterm" name="ch07-idx-1000009727-1"></A
><a class="indexterm" name="ch07-idx-1000009727-2"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch07-pgfId-1582">See Also</A
></H3
><p class="para"><a class="xref" href="ch07_15.htm" title="Doing Non-Blocking I/O">Recipe 7.14</A
>; your system's <i class="filename">ioctl</I
> (2) manpage; the <code class="literal">ioctl</CODE
> function in <i class="filename">perlfunc</I
> (1)  and in <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch07_15.htm" title="7.14. Doing Non-Blocking I/O"><img src="../gifs/txtpreva.gif" alt="Previous: 7.14. Doing Non-Blocking I/O" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch07_17.htm" title="7.16. Storing Filehandles in Variables"><img src="../gifs/txtnexta.gif" alt="Next: 7.16. Storing Filehandles in Variables" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.14. Doing Non-Blocking I/O</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.16. Storing Filehandles in Variables</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
