<html><head>
<title>Recipe 6.23. Regular Expression Grabbag</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:35:12Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch06_01.htm" title="6. Pattern Matching"><link rel="prev" href="ch06_23.htm" title="6.22. Program: tcgrep"><link rel="next" href="ch07_01.htm" title="7. File Access"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch06_23.htm" title="6.22. Program: tcgrep"><img src="../gifs/txtpreva.gif" alt="Previous: 6.22. Program: tcgrep" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch06_01.htm" title="6. Pattern Matching">Chapter 6<br>Pattern Matching</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="chapter" href="ch07_01.htm" title="7. File Access"><img src="../gifs/txtnexta.gif" alt="Next: 7. File Access" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch06-33146">6.23. Regular Expression Grabbag</A
></H2
><p class="para">We have found these <a class="indexterm" name="ch06-idx-1000007741-0"></A
><a class="indexterm" name="ch06-idx-1000007741-1"></A
>regular expressions useful or interesting.</P
><dl class="variablelist"><dt class="term">Roman numbers </DT
><dd class="listitem"><pre class="programlisting">m/^m*(d?c{0,3}|c[dm])(l?x{0,3}|x[lc])(v?i{0,3}|i[vx])$/i</PRE
></DD
><dt class="term">Swap first two words </DT
><dd class="listitem"><pre class="programlisting">s/(\S+)(\s+)(\S+)/$3$2$1/</PRE
></DD
><dt class="term">Keyword = Value </DT
><dd class="listitem"><pre class="programlisting">m/(\w+)\s*=\s*(.*)\s*$/             # keyword is $1, value is $2</PRE
></DD
><dt class="term">Line of at least 80 characters </DT
><dd class="listitem"><pre class="programlisting">m/.{80,}/</PRE
></DD
><dt class="term">MM/DD/YY HH:MM:SS </DT
><dd class="listitem"><pre class="programlisting">m|(\d+)/(\d+)/(\d+) (\d+):(\d+):(\d+)|</PRE
></DD
><dt class="term">Changing directories </DT
><dd class="listitem"><pre class="programlisting">s(/usr/bin)(/usr/local/bin)g</PRE
></DD
><dt class="term">Expanding %7E (hex) escapes </DT
><dd class="listitem"><pre class="programlisting">s/%([0-9A-Fa-f][0-9A-Fa-f])/chr hex $1/ge</PRE
></DD
><dt class="term">Deleting C comments (imperfectly) </DT
><dd class="listitem"><pre class="programlisting">s{
    /\*                    # Match the opening delimiter
    .*?                    # Match a minimal number of characters
    \*/                    # Match the closing delimiter
} []gsx;</PRE
></DD
><dt class="term">Removing leading and trailing whitespace </DT
><dd class="listitem"><pre class="programlisting">s/^\s+//;
s/\s+$//;</PRE
></DD
><dt class="term">Turning \ followed by n into a real newline </DT
><dd class="listitem"><pre class="programlisting">s/\\n/\n/g;</PRE
></DD
><dt class="term">Removing package portion of fully qualified symbols </DT
><dd class="listitem"><pre class="programlisting">s/^.*:://</PRE
></DD
><dt class="term">IP address </DT
><dd class="listitem"><pre class="programlisting">m/^([01]?\d\d|2[0-4]\d|25[0-5])\.([01]?\d\d|2[0-4]\d|25[0-5])\.
   ([01]?\d\d|2[0-4]\d|25[0-5])\.([01]?\d\d|2[0-4]\d|25[0-5])$/;</PRE
></DD
><dt class="term">Removing leading path from filename </DT
><dd class="listitem"><pre class="programlisting">s(^.*/)()</PRE
></DD
><dt class="term">Extracting columns setting from TERMCAP </DT
><dd class="listitem"><pre class="programlisting">$cols = ( ($ENV{TERMCAP} || &quot; &quot;) =~ m/:co#(\d+):/ ) ? $1 : 80;</PRE
></DD
><dt class="term">Removing directory components from program name and arguments </DT
><dd class="listitem"><pre class="programlisting">($name = &quot; $0 @ARGV&quot;) =~ s,  /\S+/,  ,g;</PRE
></DD
><dt class="term">Checking your operating system </DT
><dd class="listitem"><pre class="programlisting">die &quot;This isn't Linux&quot; unless $^O =~ m/linux/i;</PRE
></DD
><dt class="term">Joining continuation lines in multiline string </DT
><dd class="listitem"><pre class="programlisting">s/\n\s+/ /g</PRE
></DD
><dt class="term">Extracting all numbers from a string </DT
><dd class="listitem"><pre class="programlisting">@nums = m/(\d+\.?\d*|\.\d+)/g;</PRE
></DD
><dt class="term">Finding all-caps words </DT
><dd class="listitem"><pre class="programlisting">@capwords = m/(\b[^\Wa-z0-9_]+\b)/g;</PRE
></DD
><dt class="term">Finding all-lowercase words </DT
><dd class="listitem"><pre class="programlisting">@lowords = m/(\b[^\WA-Z0-9_]+\b)/g;</PRE
></DD
><dt class="term">Finding initial-caps word </DT
><dd class="listitem"><pre class="programlisting">@icwords = m/(\b[^\Wa-z0-9_][^\WA-Z0-9_]*\b)/;</PRE
></DD
><dt class="term">Finding links in simple HTML </DT
><dd class="listitem"><pre class="programlisting">@links = m/&lt;A[^&gt;]+?HREF\s*=\s*[&quot;']?([^'&quot; &gt;]+?)[ '&quot;]?&gt;/sig;</PRE
></DD
><dt class="term">Finding middle initial in $_ </DT
><dd class="listitem"><pre class="programlisting">($initial) = m/^\S+\s+(\S)\S*\s+\S/ ? $1 : &quot;&quot;;</PRE
></DD
><dt class="term">Changing inch marks to quotes </DT
><dd class="listitem"><pre class="programlisting">s/&quot;([^&quot;]*)&quot;/``$1''/g</PRE
></DD
><dt class="term">Extracting sentences (two spaces required) </DT
><dd class="listitem"><pre class="programlisting">{ local $/ = &quot;&quot;;
  while (&lt;&gt;) {
    s/\n/ /g;
    s/ {3,}/  /g;
    push @sentences, m/(\S.*?[!?.])(?=  |\Z)/g;
  }
}</PRE
></DD
><dt class="term">YYYY-MM-DD </DT
><dd class="listitem"><pre class="programlisting">m/(\d{4})-(\d\d)-(\d\d)/            # YYYY in $1, MM in $2, DD in $3</PRE
></DD
><dt class="term">North American telephone numbers </DT
><dd class="listitem"><pre class="programlisting">m/ ^
      (?:
       1 \s (?: \d\d\d \s)?            # 1, or 1 and area code
       |                               # ... or ...
       \(\d\d\d\) \s                   # area code with parens
       |                               # ... or ...
       (?: \+\d\d?\d? \s)?             # optional +country code
       \d\d\d ([\s\-])                 # and area code
      )
      \d\d\d (\s|\1)                   # prefix (and area code separator)
      \d\d\d\d                         # exchange
        $
 /x</PRE
></DD
><dt class="term">Exclamations </DT
><dd class="listitem"><pre class="programlisting">m/\boh\s+my\s+gh?o(d(dess(es)?|s?)|odness|sh)\b/i</PRE
></DD
><dt class="term">Extracting lines regardless of line terminator </DT
><dd class="listitem"><pre class="programlisting">push(@lines, $1)
    while ($input =~ s/^([^\012\015]*)(\012\015?|\015\012?)//);<a class="indexterm" name="ch06-idx-1000007753-0"></A
><a class="indexterm" name="ch06-idx-1000007753-1"></A
><a class="indexterm" name="ch06-idx-1000007753-2"></A
></PRE
></DD
></DL
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch06_23.htm" title="6.22. Program: tcgrep"><img src="../gifs/txtpreva.gif" alt="Previous: 6.22. Program: tcgrep" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="chapter" href="ch07_01.htm" title="7. File Access"><img src="../gifs/txtnexta.gif" alt="Next: 7. File Access" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">6.22. Program: tcgrep</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7. File Access</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
