<html><head>
<title>Recipe 10.5. Passing Arrays and Hashes by Reference</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:39:38Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch10_01.htm" title="10. Subroutines"><link rel="prev" href="ch10_05.htm" title="10.4. Determining Current Function Name"><link rel="next" href="ch10_07.htm" title="10.6. Detecting Return Context"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch10_05.htm" title="10.4. Determining Current Function Name"><img src="../gifs/txtpreva.gif" alt="Previous: 10.4. Determining Current Function Name" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch10_01.htm" title="10. Subroutines">Chapter 10<br>Subroutines</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch10_07.htm" title="10.6. Detecting Return Context"><img src="../gifs/txtnexta.gif" alt="Next: 10.6. Detecting Return Context" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch10-33402">10.5. Passing Arrays and Hashes by Reference</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch10-pgfId-428">Problem<a class="indexterm" name="ch10-idx-1000004676-0"></A
><a class="indexterm" name="ch10-idx-1000004676-1"></A
><a class="indexterm" name="ch10-idx-1000004676-2"></A
><a class="indexterm" name="ch10-idx-1000004676-3"></A
><a class="indexterm" name="ch10-idx-1000004676-4"></A
><a class="indexterm" name="ch10-idx-1000004676-5"></A
></A
></H3
><p class="para">You want to pass a function more than one array or hash and have each remain distinct. For example, you want to put the "Find elements in one array but not in another" algorithm from <a class="xref" href="ch04_08.htm" title="Finding Elements in One Array but Not Another">Recipe 4.7</A
> in a subroutine. This subroutine must then be called with two arrays that remain distinct.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch10-pgfId-434">Solution</A
></H3
><p class="para">Pass arrays and hashes by reference, using the backslash operator:</P
><pre class="programlisting">array_diff( \@array1, \@array2 );</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch10-pgfId-442">Discussion</A
></H3
><p class="para">See <a class="xref" href="ch11_01.htm" title="References and Records">Chapter 11, <cite class="chapter">References and Records</CITE
></A
>, for more about manipulation of references. Here's a subroutine that takes array references and a subroutine call that generates them:</P
><pre class="programlisting">@a = (1, 2);
@b = (5, 8);
@c = add_vecpair( \@a, \@b );
print &quot;@c\n&quot;;
<code class="userinput"><b><code class="replaceable"><i>6 10</I
></CODE
></B
></CODE
> 

sub add_vecpair {       # assumes both vectors the same length
    my ($x, $y) = @_;   # copy in the array references
    my @result;

    for (my $i=0; $i &lt; @$x; $i++) {
      $result[$i] = $x-&gt;[$i] + $y-&gt;[$i];
    }

    return @result;
}</PRE
><p class="para">A potential difficulty with this function is that it doesn't check to make sure it got exactly two arguments that were both array references. You could check explicitly this way:</P
><pre class="programlisting">unless (@_ == 2 &amp;&amp; ref($x) eq 'ARRAY' &amp;&amp; ref($y) eq 'ARRAY') {
    die &quot;usage: add_vecpair ARRAYREF1 ARRAYREF2&quot;;
}</PRE
><p class="para">If all you plan to do is <code class="literal">die</CODE
> on error (see <a class="xref" href="ch10_13.htm" title="Handling Exceptions">Recipe 10.12</A
>), you can usually omit this check, since dereferencing the wrong kind of reference triggers an exception anyway.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch10-pgfId-484">See Also</A
></H3
><p class="para">The section on <a class="olink" href="../prog/ch02_07.htm#PERL2-CH-2-SECT-7.3">"Passing References"</A
> in <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
> and on "Pass by Reference" in <i class="filename">perlsub </I
>(1); the section on <a class="olink" href="../prog/ch02_07.htm#PERL2-CH-2-SECT-7.3">"Prototypes"</A
> in <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
> or in <i class="filename">perlsub </I
>(1); <a class="xref" href="ch10_12.htm" title="Prototyping Functions">Recipe 10.11</A
>; <a class="xref" href="ch11_01.htm" title="References and Records">Chapter 11</A
>; <a class="olink" href="../prog/ch04_01.htm">Chapter 4</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>.</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch10_05.htm" title="10.4. Determining Current Function Name"><img src="../gifs/txtpreva.gif" alt="Previous: 10.4. Determining Current Function Name" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch10_07.htm" title="10.6. Detecting Return Context"><img src="../gifs/txtnexta.gif" alt="Next: 10.6. Detecting Return Context" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">10.4. Determining Current Function Name</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10.6. Detecting Return Context</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
