<html><head>
<title>Recipe 6.7. Reading Records with a Pattern Separator</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:34:06Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch06_01.htm" title="6. Pattern Matching"><link rel="prev" href="ch06_07.htm" title="6.6. Matching Multiple Lines"><link rel="next" href="ch06_09.htm" title="6.8. Extracting a Range of Lines"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch06_07.htm" title="6.6. Matching Multiple Lines"><img src="../gifs/txtpreva.gif" alt="Previous: 6.6. Matching Multiple Lines" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch06_01.htm" title="6. Pattern Matching">Chapter 6<br>Pattern Matching</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch06_09.htm" title="6.8. Extracting a Range of Lines"><img src="../gifs/txtnexta.gif" alt="Next: 6.8. Extracting a Range of Lines" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch06-chap06_reading_0">6.7. Reading Records with a Pattern Separator</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch06-pgfId-865">Problem <a class="indexterm" name="ch06-idx-1000007592-0"></A
><a class="indexterm" name="ch06-idx-1000007592-1"></A
><a class="indexterm" name="ch06-idx-1000007592-2"></A
><a class="indexterm" name="ch06-idx-1000007592-3"></A
><a class="indexterm" name="ch06-idx-1000007592-4"></A
></A
></H3
><p class="para">You want to read in records separated by a pattern, but Perl doesn't allow its input record separator variable to be a regular expression.</P
><p class="para">Many problems, most obviously those involving the parsing of complex file formats, become a lot simpler when you are easily able to extract records that might be separated by a number of different strings.<a class="indexterm" name="ch06-idx-1000007766-0"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch06-pgfId-873">Solution</A
></H3
><p class="para">Read the whole file and use <code class="literal">split</CODE
>: <a class="indexterm" name="ch06-idx-1000007598-0"></A
></P
><pre class="programlisting">undef $/;
@chunks = split(/pattern/, &lt;FILEHANDLE&gt;);</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch06-pgfId-883">Discussion</A
></H3
><p class="para">Perl's record separator must be a fixed string, not a pattern. (After all, <em class="emphasis">awk</EM
> has to be better at <em class="emphasis">something</EM
>.) To sidestep this limitation, undefine the input record separator entirely so that the next line-read operation gets the rest of the file. This is sometimes called <i class="firstterm">slurp</I
> mode, because it slurps in the whole file as one big string. Then <code class="literal">split</CODE
> that huge string using the record separating pattern as the first argument.</P
><p class="para">Here's an example, where the input stream is a text file that includes lines consisting of <code class="literal">&quot;.Se&quot;</CODE
>, <code class="literal">&quot;.Ch&quot;</CODE
>, and <code class="literal">&quot;.Ss&quot;</CODE
>, which are special codes in the <em class="emphasis">troff</EM
> macro set that this book was developed under. These lines are the separators, and we want to find text that falls between them.</P
><pre class="programlisting"># .Ch, .Se and .Ss divide chunks of STDIN
{
    local $/ = undef;
    @chunks = split(/^\.(Ch|Se|Ss)$/m, &lt;&gt;);
}
print &quot;I read &quot;, scalar(@chunks), &quot; chunks.\n&quot;;</PRE
><p class="para">We create a localized version of <code class="literal">$/</CODE
> so its previous value gets restored after the block finishes. By using <code class="literal">split</CODE
> with parentheses in the pattern, captured separators are also returned. This way the data elements in the return list alternate with elements containing <code class="literal">&quot;Se&quot;</CODE
>, <code class="literal">&quot;Ch&quot;</CODE
>, or <code class="literal">&quot;Ss&quot;</CODE
>.</P
><p class="para">If you didn't want delimiters returned but still needed parentheses, you could use non-capturing parentheses in the pattern: <code class="literal">/^\.(?:Ch|Se|Ss)$/m </CODE
>.</P
><p class="para">If you just want to split <em class="emphasis">before</EM
> a pattern but include the pattern in the return, use a look-ahead assertion: <code class="literal">/^(?=\.(?:Ch|Se|Ss))/m </CODE
>. That way each chunk starts with the pattern.</P
><p class="para">Be aware that this uses a lot of memory if the file is large. However, with today's machines and your typical text files, this is less often an issue now than it once was. Just don't try it on a 200-MB logfile unless you have plenty of virtual memory to use to swap out to disk with! Even if you do have enough swap space, you'll likely end up thrashing.<a class="indexterm" name="ch06-idx-1000007594-0"></A
><a class="indexterm" name="ch06-idx-1000007594-1"></A
><a class="indexterm" name="ch06-idx-1000007594-2"></A
><a class="indexterm" name="ch06-idx-1000007594-3"></A
><a class="indexterm" name="ch06-idx-1000007594-4"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch06-pgfId-911">See Also</A
></H3
><p class="para">The <code class="literal">$/</CODE
> variable in <i class="filename">perlvar  </I
>(1) and in the <a class="olink" href="../prog/ch02_09.htm#PERL2-CH-2-SECT-9.4">"Special Variables"</A
> section of <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; the <code class="literal">split</CODE
> function in <i class="filename">perlfunc </I
>(1) and <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; we talk more about the special variable <code class="literal">$/</CODE
> in <a class="xref" href="ch08_01.htm" title="File Contents">Chapter 8</A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch06_07.htm" title="6.6. Matching Multiple Lines"><img src="../gifs/txtpreva.gif" alt="Previous: 6.6. Matching Multiple Lines" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch06_09.htm" title="6.8. Extracting a Range of Lines"><img src="../gifs/txtnexta.gif" alt="Next: 6.8. Extracting a Range of Lines" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">6.6. Matching Multiple Lines</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">6.8. Extracting a Range of Lines</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
