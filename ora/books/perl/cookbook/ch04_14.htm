<html><head>
<title>Recipe 4.13. Finding All Elements in an Array Matching Certain Criteria</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:32:01Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch04_01.htm" title="4. Arrays"><link rel="prev" href="ch04_13.htm" title="4.12. Finding the First List Element That Passes a Test"><link rel="next" href="ch04_15.htm" title="4.14. Sorting an Array Numerically"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><index.htmlmap name="srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch04_13.htm" title="4.12. Finding the First List Element That Passes a Test"><img src="../gifs/txtpreva.gif" alt="Previous: 4.12. Finding the First List Element That Passes a Test" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch04_01.htm" title="4. Arrays">Chapter 4<br>Arrays</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch04_15.htm" title="4.14. Sorting an Array Numerically"><img src="../gifs/txtnexta.gif" alt="Next: 4.14. Sorting an Array Numerically" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch04-26761">4.13. Finding All Elements in an Array Matching Certain Criteria</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch04-pgfId-1131">Problem <a class="indexterm" name="ch04-idx-1000006732-0"></A
><a class="indexterm" name="ch04-idx-1000006732-1"></A
><a class="indexterm" name="ch04-idx-1000006732-2"></A
></A
></H3
><p class="para">From a list, you want only the elements that match certain criteria.</P
><p class="para">This notion of extracting a subset of a larger list is common. It's how you find all engineers in a list of employees, all users in the "staff  " group, and all the filenames you're interested in.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch04-pgfId-1139">Solution</A
></H3
><p class="para">Use <code class="literal">grep</CODE
><a class="indexterm" name="ch04-idx-1000006738-0"></A
> to apply a condition to all elements in the list and return only those for which the condition was true:</P
><pre class="programlisting">@MATCHING = grep { TEST ($_) } @LIST;</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch04-pgfId-1147">Discussion</A
></H3
><p class="para">This could also be accomplished with a <code class="literal">foreach</CODE
> loop:</P
><pre class="programlisting">@matching = ();
foreach (@list) {
    push(@matching, $_) if TEST ($_);
}</PRE
><p class="para">The Perl <code class="literal">grep</CODE
> function is shorthand for all that looping and mucking about. It's not really like the Unix <code class="literal">grep</CODE
> command; it doesn't have options to return line numbers or to negate the test, and it isn't limited to regular-expression tests. For example, to filter out just the large numbers from an array or to find out which keys in a hash have very large values:</P
><pre class="programlisting">@bigs = grep { $_ &gt; 1_000_000 } @nums;
@pigs = grep { $users{$_} &gt; 1e7 } keys %users;</PRE
><p class="para">Here's something that sets <code class="literal">@matching</CODE
> to lines from the <em class="emphasis">who</EM
> command that start with <code class="literal">&quot;gnat</CODE
> <code class="literal">&quot;</CODE
>:</P
><pre class="programlisting">@matching = grep { /^gnat / } `who`;</PRE
><p class="para">Here's another example:</P
><pre class="programlisting">@engineers = grep { $_-&gt;position() eq 'Engineer' } @employees;</PRE
><p class="para">It extracts only those objects from the array <code class="literal">@employees</CODE
> whose <code class="literal">position()</CODE
> method returns the string <code class="literal">Engineer</CODE
>.</P
><p class="para">You could have even more complex tests in a <code class="literal">grep</CODE
>:</P
><pre class="programlisting">@secondary_assistance = grep { $_-&gt;income &gt;= 26_000 &amp;&amp;
                               $_-&gt;income &lt;  30_000 }
                        @applicants;</PRE
><p class="para">But at that point you may decide it would be more legible to write a proper loop instead.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch04-pgfId-1187">See Also</A
></H3
><p class="para">The "For Loops," "Foreach Loops," and "Loop Control" sections of <i class="filename">perlsyn </I
>(1) and <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; the <code class="literal">grep</CODE
> function in <i class="filename">perlfunc </I
>(1) and <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; your system's <i class="filename">who </I
>(1) manpage, if it exists; <a class="xref" href="ch04_13.htm" title="Finding the First List Element That Passes a Test">Recipe 4.12</A
> <a class="indexterm" name="ch04-idx-1000006734-0"></A
><a class="indexterm" name="ch04-idx-1000006734-1"></A
><a class="indexterm" name="ch04-idx-1000006734-2"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch04_13.htm" title="4.12. Finding the First List Element That Passes a Test"><img src="../gifs/txtpreva.gif" alt="Previous: 4.12. Finding the First List Element That Passes a Test" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch04_15.htm" title="4.14. Sorting an Array Numerically"><img src="../gifs/txtnexta.gif" alt="Next: 4.14. Sorting an Array Numerically" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">4.12. Finding the First List Element That Passes a Test</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">4.14. Sorting an Array Numerically</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
