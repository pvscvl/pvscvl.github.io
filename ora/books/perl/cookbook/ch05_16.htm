<html><head>
<title>Recipe 5.15. Representing Relationships Between Data</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:32:57Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch05_01.htm" title="5. Hashes"><link rel="prev" href="ch05_15.htm" title="5.14. Finding the Most Common Anything"><link rel="next" href="ch05_17.htm" title="5.16. Program: dutree"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch05_15.htm" title="5.14. Finding the Most Common Anything"><img src="../gifs/txtpreva.gif" alt="Previous: 5.14. Finding the Most Common Anything" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch05_01.htm" title="5. Hashes">Chapter 5<br>Hashes</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch05_17.htm" title="5.16. Program: dutree"><img src="../gifs/txtnexta.gif" alt="Next: 5.16. Program: dutree" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch05-chap05_representing_0">5.15. Representing Relationships Between Data</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-1306">Problem<a class="indexterm" name="ch05-idx-1000006531-0"></A
><a class="indexterm" name="ch05-idx-1000006531-1"></A
><a class="indexterm" name="ch05-idx-1000006531-2"></A
></A
></H3
><p class="para">You want to represent relationships between elements of data&nbsp;- for instance, the <em class="emphasis">mother of</EM
> relationship in a family tree or<em class="emphasis"> parent process</EM
> for a process table. This is closely related to representing tables in relational databases (tables represent relationships between information) and to representing computer science graph structures (edges represent relationships between nodes).</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-1312">Solution</A
></H3
><p class="para">Use a hash to represent the relationship.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-1318">Discussion</A
></H3
><p class="para">Here's part of the family tree from the Bible:</P
><pre class="programlisting">%father = ( 'Cain'      =&gt; 'Adam',
            'Abel'      =&gt; 'Adam',
            'Seth'      =&gt; 'Adam',
            'Enoch'     =&gt; 'Cain',
            'Irad'      =&gt; 'Enoch',
            'Mehujael'  =&gt; 'Irad',
            'Methusael' =&gt; 'Mehujael',
            'Lamech'    =&gt; 'Methusael',
            'Jabal'     =&gt; 'Lamech',
            'Jubal'     =&gt; 'Lamech',
            'Tubalcain' =&gt; 'Lamech',
            'Enos'      =&gt; 'Seth' );</PRE
><p class="para">This lets us, for instance, easily trace a person's lineage:</P
><pre class="programlisting">while (&lt;&gt;) {
    chomp;
    do {
        print &quot;$_ &quot;;        # print the current name
        $_ = $father{$_};   # set $_ to $_'s father
    } while defined;        # until we run out of fathers
    print &quot;\n&quot;;
}</PRE
><p class="para">We can already ask questions like "Who begat Seth?" by checking the <code class="literal">%father</CODE
> hash. By inverting this hash, we invert the relationship. This lets us use <a class="xref" href="ch05_09.htm" title="Inverting a Hash">Recipe 5.8</A
> to answer questions like "Whom did Lamech beget?"</P
><pre class="programlisting">while ( ($k,$v) = each %father ) {
    push( @{ $children{$v} }, $k );
}

$&quot; = ', ';                  # separate output with commas
while (&lt;&gt;) {
    chomp;
    if ($children{$_}) {
        @children = @{$children{$_}};
    } else {
        @children = &quot;nobody&quot;;
    }
    print &quot;$_ begat @children.\n&quot;;
}</PRE
><p class="para">Hashes can also represent relationships such as the C language <code class="literal">#include</CODE
>s. A includes B if A contains <code class="literal">#include</CODE
> <code class="literal">B</CODE
>. This code builds the hash (it doesn't look for files in <code class="literal">/usr/include</CODE
> as it should, but that is a minor change):</P
><pre class="programlisting">foreach $file (@files) {
    local *F;               # just in case we want a local FH
    unless (open (F, &quot;&lt;$file&quot;)) {
        warn &quot;Couldn't read $file: $!; skipping.\n&quot;;
        next;
    }
    
    while (&lt;F&gt;) {
        next unless /^\s*#\s*include\s*&lt;([^&gt;]+)&gt;/;
        push(@{$includes{$1}}, $file);
    }
    close F;
}</PRE
><p class="para">This shows which files don't include any others:</P
><pre class="programlisting">@include_free = ();                 # list of files that don't include others
@uniq{map { @$_ } values %includes} = undef;
foreach $file (sort keys %uniq) {
        push( @include_free , $file ) unless $includes{$file};
}</PRE
><p class="para">The values of <code class="literal">%includes</CODE
> are anonymous arrays because a single file can (and often does) include more than one other file. We use <code class="literal">map</CODE
> to build up a big list of all the included files and remove duplicates by using a hash.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch05-pgfId-1438">See Also <a class="indexterm" name="ch05-idx-1000006533-0"></A
><a class="indexterm" name="ch05-idx-1000006533-1"></A
></A
></H3
><p class="para"><a class="xref" href="ch04_07.htm" title="Extracting Unique Elements from a List">Recipe 4.6</A
>; the more complex data structures in <a class="xref" href="ch11_10.htm" title="Constructing Records">Recipe 11.9</A
> through <a class="xref" href="ch11_15.htm" title="Transparently Persistent Data Structures">Recipe 11.14</A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch05_15.htm" title="5.14. Finding the Most Common Anything"><img src="../gifs/txtpreva.gif" alt="Previous: 5.14. Finding the Most Common Anything" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch05_17.htm" title="5.16. Program: dutree"><img src="../gifs/txtnexta.gif" alt="Next: 5.16. Program: dutree" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">5.14. Finding the Most Common Anything</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">5.16. Program: dutree</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
