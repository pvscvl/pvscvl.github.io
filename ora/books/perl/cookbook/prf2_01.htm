<html><head>
<title>Preface</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:27:41Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="index.htm" title="Perl Cookbook"><link rel="prev" href="prf1_01.htm" title="Foreword"><link rel="next" href="prf2_02.htm" title="Platform Notes"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="preface" href="prf1_01.htm" title="Foreword"><img src="../gifs/txtpreva.gif" alt="Previous: Foreword" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Preface</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="prf2_02.htm" title="Platform Notes"><img src="../gifs/txtnexta.gif" alt="Next: Platform Notes" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="preface"><h1 class="preface"><a class="title" name="ch00-chap00_preface_0">Preface</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="sect1" href="#ch00-pgfId-1000002024" title="What's in This Book">What's in This Book</A
><br><a class="sect1" href="prf2_02.htm" title="Platform Notes">Platform Notes</A
><br><a class="sect1" href="prf2_03.htm" title="Other Books">Other Books</A
><br><a class="sect1" href="prf2_04.htm" title="Conventions Used in This Book">Conventions Used in This Book</A
><br><a class="sect1" href="prf2_05.htm" title="We'd Like to Hear from You">We'd Like to Hear from You</A
><br><a class="sect1" href="prf2_06.htm" title="Acknowledgments">Acknowledgments</A
></P
><p></P
></DIV
><blockquote class="blockquote"><p class="para">The investment group eyed the entrepreneur with caution, their expressions flickering from scepticism to intrigue and back again.</P
><p class="para">"Your bold plan holds promise," their spokesman conceded. "But it is very costly and entirely speculative. Our mathematicians mistrust your figures. Why should we entrust our money into your hands? What do you know that we do not?"</P
><p class="para">"For one thing," he replied, "I know how to balance an egg on its point without outside support. Do you?" And with that, the entrepreneur reached into his satchel and delicately withdrew a fresh hen's egg. He handed over the egg to the financial tycoons, who passed it amongst themselves trying to carry out the simple task. At last they gave up. In exasperation they declared, "What you ask is impossible! No man can balance an egg on its point."</P
><p class="para">So the entrepreneur took back the egg from the annoyed businessmen and placed it upon the fine oak table, holding it so that its point faced down. Lightly but firmly, he pushed down on the egg with just enough force to crush in its bottom about half an inch. When he took his hand away, the egg stood there on its own, somewhat messy, but definitely balanced. "Was that impossible?" he asked.</P
><p class="para">"It's just a trick," cried the businessmen. "Once you know how, anyone can do it."</P
><p class="para">"True enough," came the retort. "But the same can be said for anything. Before you know how, it seems an impossibility. Once the way is revealed, it's so simple that you wonder why you never thought of it that way before. Let me show you that easy way, so others may easily follow. Will you trust me?"</P
><p class="para">Eventually convinced that this entrepreneur might possibly have something to show them, the skeptical venture capitalists funded his project. From the tiny Andalusian port of Palos de Moguer set forth the <cite class="citetitle">Ni”a</CITE
>, the <cite class="citetitle">Pinta</CITE
>, and the <cite class="citetitle">Santa MarŒa</CITE
>, led by an entrepreneur with a slightly broken egg and his own ideas: Christopher Columbus.</P
><p class="para">Many have since followed.</P
></BLOCKQUOTE
><p class="para">Approaching a programming problem can be like balancing Columbus's egg. If no one shows you how, you may sit forever perplexed, watching the egg&nbsp;- and your program&nbsp;- fall over again and again, no closer to the Indies than when you began. This is especially true in a language as idiomatic as Perl.</P
><p class="para">This book had its genesis in two chapters of the first edition of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>. Chapters 5 and 6 covered "Common Tasks in Perl" and "Real Perl Programs." Those chapters were highly valued by readers because they showed real applications of the language&nbsp;- how to solve day-to-day tasks using Perl. While revising the Camel, we realized that there was no way to do proper justice to those chapters without publishing the new edition on onionskin paper or in multiple volumes. The book you hold in your hands, published two years after the revised Camel, tries to do proper justice to those chapters. We trust it has been worth the wait.</P
><p class="para">This book isn't meant to be a complete reference book for Perl, although we do describe some parts of Perl previously undocumented. Having a copy of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
> handy will allow you to look up the exact definition of an operator, keyword, or function. Alternatively, every Perl installation comes with over 1,000 pages of searchable, online reference materials. If those aren't where you can get at them, see your system administrator.</P
><p class="para">Neither is this book meant to be a bare-bones introduction for programmers who've never seen Perl before. That's what <a class="citetitle" href="../learn/index.htm" title="Learning Perl"><cite class="citetitle">Learning Perl</CITE
></A
>, a kinder and gentler introduction to Perl, is designed for. (If you're on a Microsoft system, you'll probably prefer the <a class="citetitle" href="../learn32/index.htm" title="Learning Perl on Win32 Systems"><cite class="citetitle">Learning Perl on Win32 Systems</CITE
></A
> version.)</P
><p class="para">Instead, this is a book for learning <em class="emphasis">more</EM
> Perl. Neither a reference book nor a tutorial book, the <a class="citetitle" href="index.htm" title="Perl Cookbook"><cite class="citetitle">Perl Cookbook</CITE
></A
> serves as a companion book to both. It's for people who already know the basics but are wondering how to mix all those ingredients together into a complete program. Spread across 20 chapters and more than 300 focused topic areas affectionately called recipes, this book contains thousands of solutions to everyday challenges encountered by novice and journeyman alike.</P
><p class="para">We tried hard to make this book useful for both random and sequential access. Each recipe is self-contained, but has a list of references at the end should you need further information on the topic. We've tried to put the simpler, more common recipes toward the front of each chapter and the simpler chapters toward the front of the book. Perl novices should find that these recipes about Perl's basic data types and operators are just what they're looking for. We gradually work our way through topic areas and solutions more geared toward the journeyman Perl programmer. Every now and then we include material that should inspire even the master Perl programmer.</P
><p class="para">Each chapter begins with an overview of that chapter's topic. This introduction is followed by the main body of each chapter, its recipes. In the spirit of the Perl slogan of TMTOWTDI, "There's more than one way to do it," most recipes show several different techniques for solving the same or closely related problems. These recipes range from short-but-sweet solutions to in-depth mini-tutorials. Where more than one technique is given, we often show costs and benefits of each approach.</P
><p class="para">As with a traditional cookbook, we expect you to access this book more or less at random. When you want to learn how to do something, you'll look up its recipe. Even if the exact solutions presented don't fit your problem exactly, they'll give you ideas about possible approaches.</P
><p class="para">Each chapter concludes with one or more complete programs. Although some recipes already include small programs, these longer applications highlight the chapter's principal focus and combine techniques from other chapters, just as any real-world program would. All are useful, and many are used on a daily basis. Some even helped us put this book together.</P
><div class="sect1"><h2 class="sect1"><a class="title" name="ch00-pgfId-1000002024">What's in This Book</A
></H2
><p class="para">The first quarter of the book addresses Perl's basic data types, spread over five chapters. <a class="xref" href="ch01_01.htm" title="Strings">Chapter 1, <cite class="chapter">Strings</CITE
></A
>, covers matters like accessing substrings, expanding function calls in strings, and parsing comma-separated data. <a class="xref" href="ch02_01.htm" title="Numbers">Chapter 2, <cite class="chapter">Numbers</CITE
></A
>, tackles oddities of floating point representation, placing commas in numbers, and pseudo-random numbers. <a class="xref" href="ch03_01.htm" title="Dates and Times">Chapter 3, <cite class="chapter">Dates and Times</CITE
></A
>, demonstrates conversions between numeric and string date formats and using timers. <a class="xref" href="ch04_01.htm" title="Arrays">Chapter 4, <cite class="chapter">Arrays</CITE
></A
>, covers everything relating to list and array manipulation, including finding unique elements in a list, efficiently sorting lists, and randomizing them. <a class="xref" href="ch05_01.htm" title="Hashes">Chapter 5, <cite class="chapter">Hashes</CITE
></A
>, concludes the basics with a demonstration of the most useful data type, the associative array. The chapter shows how to access a hash in insertion order, how to sort a hash by value, and how to have multiple values per key.</P
><p class="para"><a class="xref" href="ch06_01.htm" title="Pattern Matching">Chapter 6, <cite class="chapter">Pattern Matching</CITE
></A
>, is by far the largest chapter. Recipes include converting a shell wildcard into a pattern, matching letters or words, matching multiple lines, avoiding greediness, and matching strings that are close to but not exactly what you're looking for. Although this chapter is the longest in the book, it could easily have been longer still&nbsp;- every chapter contains uses of regular expressions. It's part of what makes Perl Perl.</P
><p class="para">The next three chapters cover the filesystem. <a class="xref" href="ch07_01.htm" title="File Access">Chapter 7, <cite class="chapter">File Access</CITE
></A
>, shows opening files, locking them for concurrent access, modifying them in place, and storing filehandles in variables. <a class="xref" href="ch08_01.htm" title="File Contents">Chapter 8, <cite class="chapter">File Contents</CITE
></A
>, discusses watching the end of a growing file, reading a particular line from a file, and random access binary I/O. Finally, in <a class="xref" href="ch09_01.htm" title="Directories">Chapter 9, <cite class="chapter">Directories</CITE
></A
>, we show techniques to copy, move, or delete a file, manipulate a file's timestamps, and recursively process all files in a directory.</P
><p class="para">Chapters 10 through 13 focus on making your program flexible and powerful. <a class="xref" href="ch10_01.htm" title="Subroutines">Chapter 10, <cite class="chapter">Subroutines</CITE
></A
>, includes recipes on creating persistent local variables, passing parameters by reference, calling functions indirectly, and handling exceptions. <a class="xref" href="ch11_01.htm" title="References and Records">Chapter 11, <cite class="chapter">References and Records</CITE
></A
>, is about data structures; basic manipulation of references to data and functions are demonstrated. Later recipes show how to create record-like data structures and how to save and restore these structures from permanent storage. <a class="xref" href="ch12_01.htm" title="Packages, Libraries, and Modules">Chapter 12, <cite class="chapter">Packages, Libraries, and Modules</CITE
></A
>, concerns breaking up your program into separate files; we discuss how to make variables and functions private to a module, replace built-ins, trap calls to missing modules, and use the <em class="emphasis">h2ph</EM
> and <em class="emphasis">h2xs</EM
> tools to interact with C and C++ code. Lastly, <a class="xref" href="ch13_01.htm" title="Classes, Objects, and Ties">Chapter 13, <cite class="chapter">Classes, Objects, and Ties</CITE
></A
>, covers the fundamentals of building your own object-based module to create user-defined types, complete with constructors, destructors, and inheritance. Other recipes show examples of circular data structures, operator overloading, and tied data types.</P
><p class="para">The next two chapters are about interfaces: one to databases, the other to display devices. <a class="xref" href="ch14_01.htm" title="Database Access">Chapter 14, <cite class="chapter">Database Access</CITE
></A
>, includes techniques for manipulating indexed text files, locking DBM files and storing data in them, and a demonstration of Perl's SQL interface. <a class="xref" href="ch15_01.htm" title="User Interfaces">Chapter 15, <cite class="chapter">User Interfaces</CITE
></A
>, covers topics such as clearing the screen, processing command-line switches, single-character input, moving the cursor using <em class="emphasis">termcap</EM
> and <em class="emphasis">curses</EM
>, and platform independent graphical programming using Tk.</P
><p class="para">The last quarter of the book is devoted to interacting with other programs and services. <a class="xref" href="ch16_01.htm" title="Process Management and Communication">Chapter 16, <cite class="chapter">Process Management and Communication</CITE
></A
>, is about running other programs and collecting their output, handling zombie processes, named pipes, signal management, and sharing variables between running programs. <a class="xref" href="ch17_01.htm" title="Sockets">Chapter 17, <cite class="chapter">Sockets</CITE
></A
>, shows how to establish stream connections or use datagrams to create low-level networking applications for client-server programming. <a class="xref" href="ch18_01.htm" title="Internet Services">Chapter 18, <cite class="chapter">Internet Services</CITE
></A
>, is about higher-level protocols such as mail, FTP, Usenet news, and Telnet. <a class="xref" href="ch19_01.htm" title="CGI Programming">Chapter 19, <cite class="chapter">CGI Programming</CITE
></A
>, contains recipes for processing web forms, trapping their errors, avoiding shell escapes for security, managing cookies, shopping cart techniques, and saving forms to files or pipes. The final chapter of the book, <a class="xref" href="ch20_01.htm" title="Web Automation">Chapter 20, <cite class="chapter">Web Automation</CITE
></A
><em class="emphasis">,</EM
> covers non-interactive uses of the Web. Recipes include fetching a URL, automating form submissions in a script, extracting URLs from a web page, removing HTML tags, finding fresh or stale links, and processing server log files.</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="preface" href="prf1_01.htm" title="Foreword"><img src="../gifs/txtpreva.gif" alt="Previous: Foreword" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="prf2_02.htm" title="Platform Notes"><img src="../gifs/txtnexta.gif" alt="Next: Platform Notes" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">Foreword</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">Platform Notes</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
