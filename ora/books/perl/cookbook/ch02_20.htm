<html><head>
<title>Recipe 2.19. Program: Calculating Prime Factors</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:30:26Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch02_01.htm" title="2. Numbers"><link rel="prev" href="ch02_19.htm" title="2.18. Printing Correct Plurals"><link rel="next" href="ch03_01.htm" title="3. Dates and Times"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_19.htm" title="2.18. Printing Correct Plurals"><img src="../gifs/txtpreva.gif" alt="Previous: 2.18. Printing Correct Plurals" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch02_01.htm" title="2. Numbers">Chapter 2<br>Numbers</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="chapter" href="ch03_01.htm" title="3. Dates and Times"><img src="../gifs/txtnexta.gif" alt="Next: 3. Dates and Times" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch02-chap02_program_0">2.19. Program: Calculating Prime Factors</A
></H2
><p class="para"><a class="indexterm" name="ch02-idx-1000008162-0"></A
><a class="indexterm" name="ch02-idx-1000008162-1"></A
><a class="indexterm" name="ch02-idx-1000008162-2"></A
>The following program takes one or more integer arguments and determines the prime factors. It uses Perl's native numeric representation unless those numbers use floating-point representation and thus lose accuracy. Otherwise (or if the program's <b class="emphasis.bold">-b</B
> switch is used), it uses the standard Math::BigInt library, thus allowing for huge numbers. However, it only loads this library if necessary. That's why we use <code class="literal">require</CODE
> and <code class="literal">import</CODE
> instead of <code class="literal">use</CODE
>, which would unconditionally load the library at compile time instead of conditionally at run time.</P
><p class="para">This is not an efficient way to crack the huge integers used for cryptographic purposes.</P
><p class="para">Call the program with a list of numbers, and it will show you the prime factors of those numbers:</P
><pre class="programlisting">% bigfact 8 9 96 2178
<code class="userinput"><b><code class="replaceable"><i>8          2**3</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>9          3**2</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>96         2**5 3</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>2178       2 3**2 11**2</I
></CODE
></B
></CODE
></PRE
><p class="para">You can give it very large numbers:</P
><pre class="programlisting">% bigfact 239322000000000000000000
<code class="userinput"><b><code class="replaceable"><i>+239322000000000000000000 2**19 3 5**18 +39887 </I
></CODE
></B
></CODE
>

% bigfact 25000000000000000000000000
<code class="userinput"><b><code class="replaceable"><i>+25000000000000000000000000 2**24 5**26</I
></CODE
></B
></CODE
></PRE
><p class="para">The program is shown in <a class="xref" href="#ch02-24723" title="bigfact">Example 2.1</A
>.</P
><div class="example"><h4 class="example"><a class="title" name="ch02-24723">Example 2.1: bigfact</A
></H4
><pre class="programlisting">#!/usr/bin/perl
# <a class="indexterm" name="ch02-idx-1000008363-0"></A
>bigfact - calculate prime factors
use strict;
use integer;

use vars qw{ $opt_b $opt_d };
use Getopt::Std;

@ARGV &amp;&amp; getopts('bd')        or die &quot;usage: $0 [-b] number ...&quot;;

load_biglib() if $opt_b;

ARG: foreach my $orig ( @ARGV ) {
    my ($n, %factors, $factor);
    $n = $opt_b ? Math::BigInt-&gt;new($orig) : $orig;
    if ($n + 0 ne $n) { # don't use -w for this
        printf STDERR &quot;bigfact: %s would become %s\n&quot;, $n, $n+0 if $opt_d;
        load_biglib();
        $n = Math::BigInt-&gt;new($orig);
    }
    printf &quot;%-10s &quot;, $n;

    # Here $sqi will be the square of $i. We will take advantage
    # of the fact that ($i + 1) ** 2 == $i ** 2 + 2 * $i + 1.
    for (my ($i, $sqi) = (2, 4); $sqi &lt;= $n; $sqi += 2 * $i ++ + 1) {
        while ($n % $i == 0) {
            $n /= $i;
            print STDERR &quot;&lt;$i&gt;&quot; if $opt_d;
            $factors {$i} ++;
        }
    }

    if ($n != 1 &amp;&amp; $n != $orig) { $factors{$n}++ }
    if (! %factors) {
        print &quot;PRIME\n&quot;;
        next ARG;
    }
    for $factor ( sort { $a &lt;=&gt; $b } keys %factors ) {
        print &quot;$factor&quot;;
        if ($factors{$factor} &gt; 1) {
            print &quot;**$factors{$factor}&quot;;
        }
        print &quot; &quot;;
    }
    print &quot;\n&quot;;
}

# this simulates a use, but at run time
sub load_biglib {
    require Math::BigInt;
    Math::BigInt-&gt;import();          #immaterial?
}<a class="indexterm" name="ch02-idx-1000008164-0"></A
><a class="indexterm" name="ch02-idx-1000008164-1"></A
><a class="indexterm" name="ch02-idx-1000008164-2"></A
></PRE
></DIV
><pre class="programlisting"><a class="indexterm" name="ch02-idx-1000007973-0"></A
></PRE
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_19.htm" title="2.18. Printing Correct Plurals"><img src="../gifs/txtpreva.gif" alt="Previous: 2.18. Printing Correct Plurals" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="chapter" href="ch03_01.htm" title="3. Dates and Times"><img src="../gifs/txtnexta.gif" alt="Next: 3. Dates and Times" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">2.18. Printing Correct Plurals</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3. Dates and Times</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
