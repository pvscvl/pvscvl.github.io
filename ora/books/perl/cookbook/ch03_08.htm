<html><head>
<title>Recipe 3.7. Parsing Dates and Times from Strings</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:30:41Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_01.htm" title="3. Dates and Times"><link rel="prev" href="ch03_07.htm" title="3.6. Day in a Week/Month/Year or Week Number"><link rel="next" href="ch03_09.htm" title="3.8. Printing a Date"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch03_07.htm" title="3.6. Day in a Week/Month/Year or Week Number"><img src="../gifs/txtpreva.gif" alt="Previous: 3.6. Day in a Week/Month/Year or Week Number" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch03_01.htm" title="3. Dates and Times">Chapter 3<br>Dates and Times</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch03_09.htm" title="3.8. Printing a Date"><img src="../gifs/txtnexta.gif" alt="Next: 3.8. Printing a Date" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch03-30416">3.7. Parsing Dates and Times from Strings</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch03-pgfId-578">Problem <a class="indexterm" name="ch03-idx-1000006333-0"></A
><a class="indexterm" name="ch03-idx-1000006333-1"></A
><a class="indexterm" name="ch03-idx-1000006333-2"></A
></A
></H3
><p class="para">You read in a date or time specification in an arbitrary format but need to convert that string into distinct year, month, etc. values.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch03-pgfId-584">Solution</A
></H3
><p class="para">If your date is already numeric, or in a rigid and easily parsed format, use a regular expression (and possibly a hash mapping month names to numbers) to extract individual day, month, and year values, and then use the standard Time::Local module's <code class="literal">timelocal</CODE
> and <code class="literal">timegm</CODE
> functions to turn that into an Epoch seconds value.</P
><pre class="programlisting">use Time::Local;
# $date is &quot;1998-06-03&quot; (YYYY-MM-DD form).
($yyyy, $mm, $dd) = ($date =~ /(\d+)-(\d+)-(\d+)/;
# calculate epoch seconds at midnight on that day in this timezone
$epoch_seconds = timelocal(0, 0, 0, $dd, $mm, $yyyy);</PRE
><p class="para">For a more flexible solution, use the <code class="literal">ParseDate</CODE
><a class="indexterm" name="ch03-idx-1000006585-0"></A
><a class="indexterm" name="ch03-idx-1000006585-1"></A
> function provided by the CPAN module Date::Manip, and then use <code class="literal">UnixDate</CODE
><a class="indexterm" name="ch03-idx-1000006587-0"></A
> to extract the individual values.</P
><pre class="programlisting">use Date::Manip qw(ParseDate UnixDate);
$date = ParseDate($STRING);
if (!$date) {
    # bad date
} else {
    @VALUES = UnixDate($date, @FORMATS);
}</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch03-pgfId-604">Discussion</A
></H3
><p class="para">The flexible <code class="literal">ParseDate</CODE
> function accepts many formats. It even converts strings like "today", "2 weeks ago Friday", and "2nd Sunday in 1996", and understands the date and time format used in mail and news headers. It returns the decoded date in its own format: a string of the form "YYYYMMDDHH:MM:SS". You can compare two such strings to compare the dates they represent, but arithmetic is difficult. For this reason, we use the <code class="literal">UnixDate</CODE
> function to extract the year, month, and day values in a preferred format.</P
><p class="para"><code class="literal">UnixDate</CODE
> takes a date in the string form returned by <code class="literal">ParseDate</CODE
> and a list of formats. It applies each format to the string and returns the result. A format is a string describing one or more elements of the date and time and the way that the elements are to be formatted. For example, <code class="literal">%Y</CODE
> is the format for the year in four-digit form. Here's an example:</P
><pre class="programlisting">use Date::Manip qw(ParseDate UnixDate);

while (&lt;&gt;) {
    $date = ParseDate($_);
    if (!$date) {
        warn &quot;Bad date string: $_\n&quot;;
        next;
    } else {
        ($year, $month, $day) = UnixDate($date, &quot;%Y&quot;, &quot;%m&quot;, &quot;%d&quot;);
        print &quot;Date was $month/$day/$year\n&quot;;
    }
}</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch03-pgfId-636">See Also</A
></H3
><p class="para">The documentation for the CPAN module Date::Manip; we use this in <a class="xref" href="ch03_12.htm" title="Program: hopdelta">Recipe 3.11</A
> <a class="indexterm" name="ch03-idx-1000006335-0"></A
><a class="indexterm" name="ch03-idx-1000006335-1"></A
><a class="indexterm" name="ch03-idx-1000006335-2"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch03_07.htm" title="3.6. Day in a Week/Month/Year or Week Number"><img src="../gifs/txtpreva.gif" alt="Previous: 3.6. Day in a Week/Month/Year or Week Number" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch03_09.htm" title="3.8. Printing a Date"><img src="../gifs/txtnexta.gif" alt="Next: 3.8. Printing a Date" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.6. Day in a Week/Month/Year or Week Number</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.8. Printing a Date</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
