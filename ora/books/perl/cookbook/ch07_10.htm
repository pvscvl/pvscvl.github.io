<html><head>
<title>Recipe 7.9. Modifying a File in Place with -i Switch</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:36:32Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_01.htm" title="7. File Access"><link rel="prev" href="ch07_09.htm" title="7.8. Modifying a File in Place with Temporary File"><link rel="next" href="ch07_11.htm" title="7.10. Modifying a File in Place Without a Temporary File"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name="srchmap"index.html><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch07_09.htm" title="7.8. Modifying a File in Place with Temporary File"><img src="../gifs/txtpreva.gif" alt="Previous: 7.8. Modifying a File in Place with Temporary File" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch07_01.htm" title="7. File Access">Chapter 7<br>File Access</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch07_11.htm" title="7.10. Modifying a File in Place Without a Temporary File"><img src="../gifs/txtnexta.gif" alt="Next: 7.10. Modifying a File in Place Without a Temporary File" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch07-31788">7.9. Modifying a File in Place with -i Switch</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch07-pgfId-1000011060">Problem<a class="indexterm" name="ch07-idx-1000011059-0"></A
><a class="indexterm" name="ch07-idx-1000011059-1"></A
><a class="indexterm" name="ch07-idx-1000011059-2"></A
></A
></H3
><p class="para">You need to modify a file in place from the command line, and you're too lazy[<a class="footnote" href="#ch07-pgfId-1000001159">5</A
>] for the file manipulation of <a class="xref" href="ch07_09.htm" title="Modifying a File in Place with Temporary File">Recipe 7.8</A
>.</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch07-pgfId-1000001159">[5]</A
> Lazy-as-virtue, not lazy-as-sin.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch07-pgfId-874">Solution</A
></H3
><p class="para">Use the <b class="emphasis.bold">-i</B
> and <b class="emphasis.bold">-p</B
> switches to Perl. Write your program on the command line:</P
><pre class="programlisting">% perl -i.orig -p -e 'FILTER COMMAND' file1 file2 file3 ...</PRE
><p class="para">Or use the switches in programs:</P
><pre class="programlisting">#!/usr/bin/perl -i.orig -p
# filter commands go here</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch07-pgfId-888">Discussion</A
></H3
><p class="para">The <b class="emphasis.bold">-i</B
> command-line switch modifies each file in place. It creates a temporary file as in the previous recipe, but Perl takes care of the tedious file manipulation for you. Use it with <b class="emphasis.bold">-p</B
> (explained in <a class="xref" href="ch07_08.htm" title="Writing a Filter">Recipe 7.7</A
>) to turn:</P
><pre class="programlisting">% perl -pi.orig -e 's/DATE/localtime/e'</PRE
><p class="para">into:</P
><pre class="programlisting">while (&lt;&gt;) {
    if ($ARGV ne $oldargv) {           # are we at the next file?
        rename($ARGV, $ARGV . '.orig');
        open(ARGVOUT, &quot;&gt;$ARGV&quot;);       # plus error check
        select(ARGVOUT);
        $oldargv = $ARGV;
    }
    s/DATE/localtime/e;
}
continue{
    print;
}
select (STDOUT);                      # restore default output</PRE
><p class="para">The <b class="emphasis.bold">-i</B
> switch takes care of making a backup (say <code class="literal">-i</CODE
> instead of <code class="literal">-i.orig</CODE
> to discard the original file contents instead of backing them up), and <b class="emphasis.bold">-p</B
> makes Perl loop over filenames given on the command line (or STDIN if no files were given).</P
><p class="para">The preceding one-liner would turn a file containing the following:</P
><pre class="programlisting">Dear Sir/Madam/Ravenous Beast,
    As of DATE, our records show your account
is overdue.  Please settle by the end of the month.
Yours in cheerful usury,
    --A. Moneylender</PRE
><p class="para">into:</P
><pre class="programlisting">Dear Sir/Madam/Ravenous Beast,
    As of Sat Apr 25 12:28:33 1998, our records show your account
is overdue.  Please settle by the end of the month.
Yours in cheerful usury,
    --A. Moneylender</PRE
><p class="para">This switch makes in-place translators a lot easier to write and to read. For instance, this changes isolated instances of <code class="literal">&quot;hisvar&quot;</CODE
> to <code class="literal">&quot;hervar&quot;</CODE
> in all C, C++, and <em class="emphasis">yacc</EM
> files:</P
><pre class="programlisting">% perl -i.old -pe 's{\bhisvar\b}{hervar}g' *.[Cchy]</PRE
><p class="para">Turn on and off the <b class="emphasis.bold">-i</B
> behavior with the special variable <code class="literal">$^I</CODE
>. Set <code class="literal">@ARGV</CODE
>, and then use &lt;&gt; as you would with <b class="emphasis.bold">-i</B
> on the command line:</P
><pre class="programlisting"># set up to iterate over the *.c files in the current directory,
# editing in place and saving the old file with a .orig extension
local $^I   = '.orig';              # emulate  -i.orig
local @ARGV = glob(&quot;*.c&quot;);          # initialize list of files
while (&lt;&gt;) {
    if ($. == 1) {
        print &quot;This line should appear at the top of each file\n&quot;;
    }
    s/\b(p)earl\b/${1}erl/ig;       # Correct typos, preserving case
    print;
} continue {close ARGV if eof} </PRE
><p class="para">Beware that creating a backup file under a particular name when that name already exists clobbers the previously backed up version.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch07-pgfId-1000009274">See Also</A
></H3
><p class="para"><i class="filename">perlrun</I
> (1), and the <a class="olink" href="../prog/ch06_01.htm">"Switches"</A
> section of <a class="olink" href="../prog/ch06_01.htm">Chapter 6</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; the <code class="literal">$^I</CODE
> and <code class="literal">$.</CODE
> variables in <i class="filename">perlvar  </I
>(1), and in the <a class="olink" href="../prog/ch02_09.htm#PERL2-CH-2-SECT-9.4">"Special Variables"</A
> section of <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>; the <code class="literal">..</CODE
> operator in the "Range Operator" sections of <i class="filename">perlop</I
> (1) and <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch07_09.htm" title="7.8. Modifying a File in Place with Temporary File"><img src="../gifs/txtpreva.gif" alt="Previous: 7.8. Modifying a File in Place with Temporary File" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch07_11.htm" title="7.10. Modifying a File in Place Without a Temporary File"><img src="../gifs/txtnexta.gif" alt="Next: 7.10. Modifying a File in Place Without a Temporary File" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.8. Modifying a File in Place with Temporary File</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.10. Modifying a File in Place Without a Temporary File</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
