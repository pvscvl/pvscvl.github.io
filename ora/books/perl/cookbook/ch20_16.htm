<html><head>
<title>Recipe 20.15. Program: hrefsub</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:46:04Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch20_01.htm" title="20. Web Automation"><link rel="prev" href="ch20_15.htm" title="20.14. Program: htmlsub"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch20_15.htm" title="20.14. Program: htmlsub"><img src="../gifs/txtpreva.gif" alt="Previous: 20.14. Program: htmlsub" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch20_01.htm" title="20. Web Automation">Chapter 20<br>Web Automation</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172">&nbsp;</TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch20-chap20_program_1">20.15. Program: hrefsub</A
></H2
><p class="para"><a class="indexterm" name="ch20-idx-1000002703-0"></A
><a class="indexterm" name="ch20-idx-1000002703-1"></A
>hrefsub makes substitutions in HTML files, so that the changes only apply to the text in HREF fields of &lt;<code class="literal">A</CODE
> <code class="literal">HREF=&quot;...&quot;</CODE
>&gt; tags. For instance, if you had the scooby.html file from the previous example, and you've moved shergold.html to be cards.html, you need simply say:</P
><pre class="programlisting">% hrefsub shergold.html cards.html scooby.html
<code class="userinput"><b><code class="replaceable"><i>&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt;Hi!&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;BODY&gt;</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>&lt;H1&gt;Welcome to Scooby World!&lt;/H1&gt;</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>I have &lt;A HREF=&quot;pictures.html&quot;&gt;pictures&lt;/A&gt; of the crazy dog</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>himself.  Here's one!&lt;P&gt;</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>&lt;IMG SRC=&quot;scooby.jpg&quot; ALT=&quot;Good doggy!&quot;&gt;&lt;P&gt;</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>&lt;BLINK&gt;He's my hero!&lt;/BLINK&gt;  I would like to meet him some day,</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>and get my picture taken with him.&lt;P&gt;</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>P.S. I am deathly ill.  &lt;a href=&quot;cards.html&quot;&gt;Please send</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>cards&lt;/A&gt;.</I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>&lt;/BODY&gt;&lt;/HTML&gt;</I
></CODE
></B
></CODE
></PRE
><p class="para">The HTML::Filter manual page has a BUGS section that says:</P
><blockquote class="blockquote"><p class="para">Comments in declarations are removed from the declarations and then inserted as separate comments after the declaration. If you turn on <code class="literal">strict_comment()</CODE
>, then comments with embedded <code class="literal">&quot;-\|-&quot;</CODE
> are split into multiple comments.</P
></BLOCKQUOTE
><p class="para">This version of hrefsub will always lowercase the <code class="literal">&lt;a&gt;</CODE
> and the attribute names within this tag when substitution occurs. If <code class="literal">$foo</CODE
> is a multiword string, then the text given to <code class="literal">MyFilter-&gt;text</CODE
> may be broken such that these words do not come together; i.e., the substitution does not work. There should probably be a new option to HTML::Parser to make it not return text until the whole segment has been seen. Also, some people may not be happy with having their 8-bit Latin-1 characters replaced by ugly entities, so htmlsub does that,<code class="literal"></CODE
><a class="indexterm" name="ch20-idx-1000004280-0"></A
><a class="indexterm" name="ch20-idx-1000004280-1"></A
><a class="indexterm" name="ch20-idx-1000004280-2"></A
><a class="indexterm" name="ch20-idx-1000004280-3"></A
><a class="indexterm" name="ch20-idx-1000004280-4"></A
> too.</P
><div class="example"><h4 class="example"><a class="title" name="ch20-pgfId-1000004374">Example 20.12: hrefsub</A
></H4
><pre class="programlisting">#!/usr/bin/perl -w
# hrefsub - make substitutions in &lt;A HREF=&quot;...&quot;&gt; fields of HTML files
# from Gisle Aas &lt;gisle@aas.no&gt;

sub usage { die &quot;Usage: $0 &lt;from&gt; &lt;to&gt; &lt;file&gt;...\n&quot; }

my $from = shift or usage;
my $to   = shift or usage;
usage unless @ARGV;

# The HTML::Filter subclass to do the substitution.

package MyFilter;
require HTML::Filter;
@ISA=qw(HTML::Filter);
use HTML::Entities qw(encode_entities);

sub start {
   my($self, $tag, $attr, $attrseq, $orig) = @_;
   if ($tag eq 'a' &amp;&amp; exists $attr-&gt;{href}) {
           if ($attr-&gt;{href} =~ s/\Q$from/$to/g) {
               # must reconstruct the start tag based on $tag and $attr.
               # wish we instead were told the extent of the 'href' value
               # in $orig.
               my $tmp = &quot;&lt;$tag&quot;;
               for (@$attrseq) {
                   my $encoded = encode_entities($attr-&gt;{$_});
                   $tmp .= qq( $_=&quot;$encoded &quot;);
               }
               $tmp .= &quot;&gt;&quot;;
               $self-&gt;output($tmp);
               return;
           }
   }
   $self-&gt;output($orig);
}

# Now use the class.

package main;
foreach (@ARGV) {
        MyFilter-&gt;new-&gt;parse_file($_);
}</PRE
></DIV
><p class="para"></P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch20_15.htm" title="20.14. Program: htmlsub"><img src="../gifs/txtpreva.gif" alt="Previous: 20.14. Program: htmlsub" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">&nbsp;</TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">20.14. Program: htmlsub</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">&nbsp;</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
