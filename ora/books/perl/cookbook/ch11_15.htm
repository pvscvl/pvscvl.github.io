<html><head>
<title>Recipe 11.14. Transparently Persistent Data Structures</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:40:54Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch11_01.htm" title="11. References and Records"><link rel="prev" href="ch11_14.htm" title="11.13. Storing Data Structures to Disk"><link rel="next" href="ch11_16.htm" title="11.15. Program: Binary Trees"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch11_14.htm" title="11.13. Storing Data Structures to Disk"><img src="../gifs/txtpreva.gif" alt="Previous: 11.13. Storing Data Structures to Disk" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch11_01.htm" title="11. References and Records">Chapter 11<br>References and Records</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch11_16.htm" title="11.15. Program: Binary Trees"><img src="../gifs/txtnexta.gif" alt="Next: 11.15. Program: Binary Trees" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch11-11536">11.14. Transparently Persistent Data Structures</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch11-pgfId-1440">Problem<a class="indexterm" name="ch11-idx-1000004879-0"></A
><a class="indexterm" name="ch11-idx-1000004879-1"></A
><a class="indexterm" name="ch11-idx-1000004879-2"></A
><a class="indexterm" name="ch11-idx-1000004879-3"></A
><a class="indexterm" name="ch11-idx-1000004879-4"></A
><a class="indexterm" name="ch11-idx-1000004879-5"></A
></A
></H3
><p class="para">You have a complex data structure that you want to persist outside your program.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch11-pgfId-1446">Solution</A
></H3
><p class="para">Use MLDBM and either (preferably) DB_File, or else GDBM_File:</P
><pre class="programlisting">use MLDBM qw(DB_File);
use Fcntl;                            

tie(%hash, 'MLDBM', 'testfile.db', O_CREAT|O_RDWR, 0666)
    or die &quot;can't open tie to testfile.db: $!&quot;;

# ... act on %hash

untie %hash;</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch11-pgfId-1470">Discussion</A
></H3
><p class="para">A hash with 100,000 items in it would undoubtably take considerable time to build. Storing this to disk, either slowly by hand or quickly with Storable, is still an expensive operation in memory and computation.</P
><p class="para">The DBM modules solve this by tying hashes to disk database files. Rather than reading the whole structure in at once, they only pull in what they need, when they need it. To the user, it looks like a hash that persists across program invocations.</P
><p class="para">Unfortunately, the values in this persistent hash must be plain strings. You cannot readily use a database file as a backing store for a hash of hashes, a hash of arrays, and so on, just for a hash of strings.</P
><p class="para">However, the MLDBM module from CPAN allows you to store references in a database. It uses Data::Dumper to stringify these references for external storage:</P
><pre class="programlisting">use MLDBM qw(DB_File);
use Fcntl;                            
tie(%hash, 'MLDBM', 'testfile.db', O_CREAT|O_RDWR, 0666)
    or die &quot;can't open tie to testfile.db: $!&quot;;</PRE
><p class="para">Now you can use <code class="literal">%hash</CODE
> to fetch or store complex records from disk. The only drawback is that you can't access the references piecemeal. You have to pull in the reference from the database, work with it, and then store it back.</P
><pre class="programlisting"># this doesn't work!
$hash{&quot;some key&quot;}[4] = &quot;fred&quot;;

# RIGHT
$aref = $hash{&quot;some key&quot;};
$aref-&gt;[4] = &quot;fred&quot;;
$hash{&quot;some key&quot;} = $aref;<a class="indexterm" name="ch11-idx-1000004881-0"></A
><a class="indexterm" name="ch11-idx-1000004881-1"></A
><a class="indexterm" name="ch11-idx-1000004881-2"></A
><a class="indexterm" name="ch11-idx-1000004881-3"></A
><a class="indexterm" name="ch11-idx-1000004881-4"></A
><a class="indexterm" name="ch11-idx-1000004881-5"></A
></PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch11-pgfId-1506">See Also</A
></H3
><p class="para">The documentation for the CPAN module MLDBM; <a class="xref" href="ch14_02.htm" title="Making and Using a DBM File">Recipe 14.1</A
>; <a class="xref" href="ch14_08.htm" title="Treating a Text File as a Database Array">Recipe 14.7</A
>; <a class="xref" href="ch14_12.htm" title="Program: ggh&nbsp- Grep Netscape Global History">Recipe 14.11</A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch11_14.htm" title="11.13. Storing Data Structures to Disk"><img src="../gifs/txtpreva.gif" alt="Previous: 11.13. Storing Data Structures to Disk" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch11_16.htm" title="11.15. Program: Binary Trees"><img src="../gifs/txtnexta.gif" alt="Next: 11.15. Program: Binary Trees" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">11.13. Storing Data Structures to Disk</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">11.15. Program: Binary Trees</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
