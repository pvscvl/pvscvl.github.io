<html><head>
<title>Recipe 12.2. Trapping Errors in require or use</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:41:23Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch12_01.htm" title="12. Packages, Libraries, and Modules"><link rel="prev" href="ch12_02.htm" title="12.1. Defining a Module's Interface"><link rel="next" href="ch12_04.htm" title="12.3. Delaying use Until Run Time"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch12_02.htm" title="12.1. Defining a Module's Interface"><img src="../gifs/txtpreva.gif" alt="Previous: 12.1. Defining a Module's Interface" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch12_01.htm" title="12. Packages, Libraries, and Modules">Chapter 12<br>Packages, Libraries, and Modules</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch12_04.htm" title="12.3. Delaying use Until Run Time"><img src="../gifs/txtnexta.gif" alt="Next: 12.3. Delaying use Until Run Time" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch12-25543">12.2. Trapping Errors in require or use</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch12-pgfId-412">Problem<a class="indexterm" name="ch12-idx-1000005178-0"></A
><a class="indexterm" name="ch12-idx-1000005178-1"></A
><a class="indexterm" name="ch12-idx-1000005178-2"></A
><a class="indexterm" name="ch12-idx-1000005178-3"></A
></A
></H3
><p class="para">You need to load in a module that might not be present on your system. This normally results in a fatal exception. You want to detect and trap these failures.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch12-pgfId-418">Solution</A
></H3
><p class="para">Wrap the <code class="literal">require</CODE
> or <code class="literal">use</CODE
> in an <code class="literal">eval</CODE
><a class="indexterm" name="ch12-idx-1000005179-0"></A
>, and wrap the <code class="literal">eval</CODE
> in a BEGIN block:</P
><pre class="programlisting"># no import
BEGIN {
    unless (eval &quot;require $mod&quot;) {
        warn &quot;couldn't load $mod: $@&quot;;
    }
}

# imports into current package
BEGIN {
    unless (eval &quot;use $mod&quot;) {
        warn &quot;couldn't load $mod: $@&quot;;
    }
}</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch12-pgfId-450">Discussion</A
></H3
><p class="para">You usually want a program to fail if it tries to load a module that is missing or doesn't compile. Sometimes, though, you'd like to recover from that error, perhaps trying an alternative module instead. As with any other exception, you insulate yourself from compilation errors with an <code class="literal">eval</CODE
>.</P
><p class="para">You don't want to use <code class="literal">eval</CODE
> <code class="literal">{</CODE
> <code class="literal">BLOCK</CODE
> <code class="literal">}</CODE
>, because this only traps run-time exceptions and <code class="literal">use</CODE
> is a compile-time event. Instead, you must use <code class="literal">eval</CODE
> <code class="literal">&quot;string&quot;</CODE
>, to catch compile-time problems as well. Remember, <code class="literal">require</CODE
> on a bareword has a slightly different meaning than <code class="literal">require</CODE
> on a variable. It adds a <code class="literal">&quot;.pm&quot;</CODE
> and translates double-colons into your operating system's path separators, canonically <code class="literal">/</CODE
> (as in URLs), but sometimes <code class="literal">\</CODE
>, <code class="literal">:</CODE
>, or even <code class="literal">.</CODE
> on some systems.</P
><p class="para">If you need to try several modules in succession, stopping at the first one that works, you could do something like this:</P
><pre class="programlisting">BEGIN {
    my($found, @DBs, $mod);
    $found = 0;
    @DBs = qw(Giant::Eenie Giant::Meanie Mouse::Mynie Moe);
    for $mod (@DBs) {
        if (eval &quot;require $mod&quot;) {
            $mod-&gt;<code class="literal">import</CODE
>();         # if needed
            $found = 1;
            last;
        }
    }
    die &quot;None of @DBs loaded&quot; unless $found;
}</PRE
><p class="para">We wrap the <code class="literal">eval</CODE
> in a BEGIN block to ensure the module-loading happens at compile time instead of run time.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch12-pgfId-1000005607">See Also</A
></H3
><p class="para">The <a class="olink" href="../prog/ch03_032.htm#PERL2-CMD-EVAL"><code class="literal">eval</CODE
></A
>, <a class="olink" href="../prog/ch03_027.htm#PERL2-CMD-DIE"><code class="literal">die</CODE
></A
>, <a class="olink" href="../prog/ch03_185.htm#PERL2-CMD-USE"><code class="literal">use</CODE
></A
>, and <a class="olink" href="../prog/ch03_123.htm#PERL2-CMD-REQUIRE"><code class="literal">require</CODE
></A
> functions in <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
> and in <i class="filename">perlfunc</I
> (1); <a class="xref" href="ch10_13.htm" title="Handling Exceptions">Recipe 10.12</A
>; <a class="xref" href="ch12_04.htm" title="Delaying use Until Run Time">Recipe 12.3</A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch12_02.htm" title="12.1. Defining a Module's Interface"><img src="../gifs/txtpreva.gif" alt="Previous: 12.1. Defining a Module's Interface" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch12_04.htm" title="12.3. Delaying use Until Run Time"><img src="../gifs/txtnexta.gif" alt="Next: 12.3. Delaying use Until Run Time" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">12.1. Defining a Module's Interface</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">12.3. Delaying use Until Run Time</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
