<html><head>
<title>Recipe 2.5. Operating on a Series of Integers</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:30:07Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch02_01.htm" title="2. Numbers"><link rel="prev" href="ch02_05.htm" title="2.4. Converting Between Binary and Decimal"><link rel="next" href="ch02_07.htm" title="2.6. Working with Roman Numerals"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_05.htm" title="2.4. Converting Between Binary and Decimal"><img src="../gifs/txtpreva.gif" alt="Previous: 2.4. Converting Between Binary and Decimal" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch02_01.htm" title="2. Numbers">Chapter 2<br>Numbers</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch02_07.htm" title="2.6. Working with Roman Numerals"><img src="../gifs/txtnexta.gif" alt="Next: 2.6. Working with Roman Numerals" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch02-28282">2.5. Operating on a Series of Integers</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-371">Problem <a class="indexterm" name="ch02-idx-1000008016-0"></A
><a class="indexterm" name="ch02-idx-1000008016-1"></A
></A
></H3
><p class="para">You want to perform an operation on all integers between X and Y, such as when you're working on a contiguous section of an array or in any situations where you want to process all numbers[<a class="footnote" href="#ch02-pgfId-1000005950">2</A
>] within a range.</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch02-pgfId-1000005950">[2]</A
> Okay, integers. It's hard to find all the reals. Just ask Cantor.</P
></DIV
></BLOCKQUOTE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-1000005952">Solution</A
></H3
><p class="para">Use a <code class="literal">for</CODE
> loop, or <code class="literal">..</CODE
> in conjunction with a <code class="literal">foreach</CODE
> loop:</P
><pre class="programlisting">foreach ($X .. $Y) {
    # $_ is set to every integer from X to Y, inclusive
}

foreach $i ($X .. $Y) {
    # $i is set to every integer from X to Y, inclusive
    }

for ($i = $X; $i &lt;= $Y; $i++) {
    # $i is set to every integer from X to Y, inclusive
}

for ($i = $X; $i &lt;= $Y; $i += 7) {
    # $i is set to every integer from X to Y, stepsize = 7
}</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-413">Discussion</A
></H3
><p class="para">The first two methods use the <code class="literal">$X .. $Y</CODE
> construct, which creates a list of integers between <code class="literal">$X</CODE
> and <code class="literal">$Y</CODE
>. This uses a lot of memory when <code class="literal">$X</CODE
> and <code class="literal">$Y</CODE
> are far apart. (This is fixed in the 5.005 release.) When iterating over consecutive integers, the explicit <code class="literal">for</CODE
> loop in the third method is more memory efficient.</P
><p class="para">The following code shows each technique. Here we only print the numbers we generate:</P
><pre class="programlisting">print &quot;Infancy is: &quot;;
foreach (0 .. 2) {
    print &quot;$_ &quot;;
}
print &quot;\n&quot;;

print &quot;Toddling is: &quot;;
foreach $i (3 .. 4) {
    print &quot;$i &quot;;
}
print &quot;\n&quot;;

print &quot;Childhood is: &quot;;
for ($i = 5; $i &lt;= 12; $i++) {
    print &quot;$i &quot;;
}
print &quot;\n&quot;;

<code class="userinput"><b><code class="replaceable"><i>Infancy is: 0 1 2 </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>Toddling is: 3 4 </I
></CODE
></B
></CODE
>
<code class="userinput"><b><code class="replaceable"><i>Childhood is: 5 6 7 8 9 10 11 12 </I
></CODE
></B
></CODE
></PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-1000007965">See Also</A
></H3
><p class="para">The <code class="literal">for</CODE
> and <code class="literal">foreach</CODE
> operators in <em class="emphasis">perlsyn </EM
>(1) and the <a class="olink" href="../prog/ch02_06.htm#PERL2-CH-2-SECT-6.5">"For Loops"</A
> and  <a class="olink" href="../prog/ch02_06.htm#PERL2-CH-2-SECT-6.5">"Foreach Loops"</A
> sections of <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
><a class="indexterm" name="ch02-idx-1000008019-0"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_05.htm" title="2.4. Converting Between Binary and Decimal"><img src="../gifs/txtpreva.gif" alt="Previous: 2.4. Converting Between Binary and Decimal" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch02_07.htm" title="2.6. Working with Roman Numerals"><img src="../gifs/txtnexta.gif" alt="Next: 2.6. Working with Roman Numerals" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">2.4. Converting Between Binary and Decimal</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">2.6. Working with Roman Numerals</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
