<html><head>
<title>Recipe 19.5. Making CGI Scripts Efficient</TITLE>
<meta name="DC.title" content="Perl Cookbook"><meta name="DC.creator" content="Tom Christiansen &amp; Nathan Torkington"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:45:34Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-243-3" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch19_01.htm" title="19. CGI Programming"><link rel="prev" href="ch19_05.htm" title="19.4. Writing a Safe CGI Program"><link rel="next" href="ch19_07.htm" title="19.6. Executing Commands Without Shell Escapes"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl Cookbook" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,65" href="index.htm" alt="Perl Cookbook"><area shape="RECT" coords="467,0,514,18" href="../search/csrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch19_05.htm" title="19.4. Writing a Safe CGI Program"><img src="../gifs/txtpreva.gif" alt="Previous: 19.4. Writing a Safe CGI Program" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch19_01.htm" title="19. CGI Programming">Chapter 19<br>CGI Programming</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch19_07.htm" title="19.6. Executing Commands Without Shell Escapes"><img src="../gifs/txtnexta.gif" alt="Next: 19.6. Executing Commands Without Shell Escapes" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch19-40762">19.5. Making CGI Scripts Efficient</A
></H2
><div class="sect2"><h3 class="sect2"><a class="title" name="ch19-pgfId-442">Problem<a class="indexterm" name="ch19-idx-1000005441-0"></A
></A
></H3
><p class="para">Your CGI script is called often, and the web server is suffering as a result. You'd like to lessen the load your CGI script causes.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch19-pgfId-448">Solution</A
></H3
><p class="para">Use <code class="literal">mod_perl</CODE
><a class="indexterm" name="ch19-idx-1000005442-0"></A
><a class="indexterm" name="ch19-idx-1000005442-1"></A
> in the Apache web server along with the following section in your <em class="emphasis">httpd.conf</EM
> file:</P
><pre class="programlisting">Alias /perl/ /real/path/to/perl/scripts/

&lt;Location /perl&gt;
SetHandler  perl-script
PerlHandler Apache::Registry
Options ExecCGI
&lt;/Location&gt;

PerlModule Apache::Registry
PerlModule CGI
PerlSendHeader On</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch19-pgfId-476">Discussion</A
></H3
><p class="para">Using the <code class="literal">mod_perl</CODE
> Apache web server module, you can write Perl code that will step in at any part of a request's processing. You can write your own logging and authentication routines, define virtual hosts and their configuration, and write your own handlers for certain types of request.</P
><p class="para">The snippet above says that requests with URLs starting in <em class="emphasis">/perl/</EM
> are actually in <em class="emphasis">/real/path/to/perl/scripts/</EM
> and that they should be handled by Apache::Registry. This runs them in a CGI environment. <code class="literal">PerlModule</CODE
> <code class="literal">CGI</CODE
> preloads the CGI module, and <code class="literal">PerlSendHeader</CODE
> <code class="literal">On</CODE
> makes most of your CGI scripts work out of the box with <code class="literal">mod_perl</CODE
>.</P
><p class="para"><em class="emphasis">/perl/</EM
> works analogously to <em class="emphasis">/cgi-bin/</EM
>. To make the suffix <em class="emphasis">.perl</EM
> indicate <code class="literal">mod_perl</CODE
> CGI scripts just as the suffix <i class="filename">.cgi</I
> indicates regular CGI scripts, use the following in your Apache configuration file:</P
><pre class="programlisting">&lt;Files *.perl&gt;
SetHandler  perl-script
PerlHandler Apache::Registry
Options ExecCGI
&lt;/Files&gt;</PRE
><p class="para">Because the Perl interpreter that runs your CGI script doesn't shut down when your script is done (as normally happens when the web server runs your script as a separate program), you cannot rely on your global variables being undefined when the program starts. <b class="emphasis.bold">-w</B
> and <code class="literal">use</CODE
> <code class="literal">strict</CODE
> check for many bad habits in these kinds of scripts. There are other gotchas, too &nbsp;-  see the <em class="emphasis">mod_perl_traps</EM
> manpage.</P
><p class="para">Don't worry about how big your web server processes appear to grow from pre-loading all these scripts. They need to find their way into memory eventually, and it's better to happen before Apache forks off kids. That way each script has to be in memory only once, because forked children have shared memory pages (under all modern operating systems). In other words, it only appears to take up more memory this way. It actually takes less!</P
><p class="para">An interface to Netscape's server is also available at <em class="emphasis">http://www.perl.com/CPAN-local/modules/by-module/Netscape/nsapi_perl-0.24.tar.gz</EM
> that effects a similar performance gain by avoiding forking. <a class="indexterm" name="ch19-idx-1000005444-0"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch19-pgfId-502">See Also</A
></H3
><p class="para">The documentation for Bundle::Apache, Apache, Apache::Registry, from CPAN; <a class="systemitem.url" href="../../../../../../../perl.apache.org/">http://perl.apache.org</A
>/, mod_perl FAQ at <a class="systemitem.url" href="../../../../../../../perl.apache.org/faqa/">http://perl.apache.org/faqa/</A
>, the <i class="filename">mod_perl </I
>(3) and<i class="filename"> cgi_to_mod_perl </I
>(1) manpages (if you have them)</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch19_05.htm" title="19.4. Writing a Safe CGI Program"><img src="../gifs/txtpreva.gif" alt="Previous: 19.4. Writing a Safe CGI Program" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl Cookbook"><img src="../gifs/txthome.gif" alt="Perl Cookbook" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch19_07.htm" title="19.6. Executing Commands Without Shell Escapes"><img src="../gifs/txtnexta.gif" alt="Next: 19.6. Executing Commands Without Shell Escapes" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">19.4. Writing a Safe CGI Program</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">19.6. Executing Commands Without Shell Escapes</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
