<html><head>
<title>[Chapter 20] PerlScript</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T02:00:46Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="part08.htm" title="VIII. Win32"><link rel="prev" href="ch19_18.htm#PNUT-CH-19-SECT-18.4" title="19.18 OLE Automation"><link rel="next" href="ch20_02.htm" title="20.2 Server-Side PerlScript"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch19_18.htm#PNUT-CH-19-SECT-18.4" title="19.18 OLE Automation"><img src="../gifs/txtpreva.gif" alt="Previous: 19.18 OLE Automation" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 20</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch20_02.htm" title="20.2 Server-Side PerlScript"><img src="../gifs/txtnexta.gif" alt="Next: 20.2 Server-Side PerlScript" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="CHAPTER"><h1 class="chapter"><a class="title" name="PNUT-CH-20">20. PerlScript</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="SECT1" href="#PNUT-CH-20-SECT-1" title="20.1 Client-Side PerlScript">Client-Side PerlScript</A
><br><a class="SECT1" href="ch20_02.htm" title="20.2 Server-Side PerlScript">Server-Side PerlScript</A
></P
><p></P
></DIV
><p class="para"></P
><p class="para">PerlScript is an ActiveX scripting engine that allows you to incorporate 
Perl within any ActiveX scripting host. PerlScript can be used on <a class="indexterm" name="AUTOID-45113"></A
><a class="indexterm" name="AUTOID-45115"></A
>
the client side (Internet Explorer 4.0) or in Active Server Pages (ASP) generated by
web servers like IIS or WebSite Pro. To use PerlScript with these applications,
you must have Active State's ActivePerl with PerlScript installed on the local machine
(or you can use a network-based installation of each).<a class="indexterm" name="PNUT-CH-20-IX-PERLSCRIPT"></A
></P
><p class="para"><a class="indexterm" name="AUTOID-45120"></A
>Since a local Perl and PerlScript installation is required, it is not practical
to deploy applications that use client-side PerlScript across the Internet.
Nevertheless, in situations where you have control over the desktop configurations,
as in an Intranet environment, client-side PerlScript offers tremendous opportunities
for browser-based application development.</P
><p class="para"><a class="indexterm" name="AUTOID-45123"></A
>Server-side PerlScript does not have this limitation. To use PerlScript on your
web server, you don't need to worry about how the end user's desktop is configured.
As long as you are running a web server that can use ASP, you
can use PerlScript on your web server.</P
><p class="para">With the free distribution of Netscape Navigator source code, the availability
of PerlScript is likely to broaden significantly. This is an area of development
that you should keep an eye on if you like the idea of extending Perl's
power to web authoring.</P
><p class="para">PerlScript is implemented into HTML pages or ASP pages via the Document Object
Model used by the ActiveX scripting engine. Scripts are virtually the same as
any other Perl script. They use Perl's object-oriented features on an object
hierarchy defined by the script engine. The object model is different for clients
and servers, but the same scheme is used throughout:
top-level objects with sub-objects, each containing
their own properties and methods.</P
><p class="para">Properties of objects, like the name of a frame or the background color
of a window, are available as hash elements from a referenced object. For example:


<blockquote class="screen"><pre class="screen">$object-&gt;subobject{'property'} = &quot;value&quot;;
$val = $object-&gt;subobject-&gt;{'property'};</PRE
></BLOCKQUOTE
>


Thus, properties can be set or retrieved.</P
><p class="para">Objects have a predefined set of methods available to them as well.
Methods define actions such as writing to a document or performing
actions on a mouse click. Methods are accessible in the usual way:


<blockquote class="screen"><pre class="screen">$object-&gt;method(args);</PRE
></BLOCKQUOTE
>


This chapter provides information on the parts of 
the object model that you will use most often. A complete
reference for the object models for both ASP and ActiveX scripting
clients is beyond the scope of this book. For more detailed information,
consult the documentation for your server, or the Microsoft web site,
which has complete client and server information.</P
><div class="sect1"><h2 class="sect1"><a class="title" name="PNUT-CH-20-SECT-1">20.1 Client-Side PerlScript</A
></H2
><p class="para"><a class="indexterm" name="PNUT-CH-20-IX-CLIENT-SIDE-PERLSCRIPT"></A
><a class="indexterm" name="PNUT-CH-20-IX-PERLSCRIPT-CLIENT-SIDE-PERLSCRIPT"></A
><a class="indexterm" name="AUTOID-45139"></A
>All PerlScript code must be contained within a <code class="literal">&lt;SCRIPT LANGUAGE=&quot;PerlScript&quot;&gt;&lt;/SCRIPT&gt;</CODE
> 
element. You may include any number of these elements in your program, so it is
possible to intersperse Perl and HTML freely. For example:


<blockquote class="screen"><pre class="screen">&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Hello, World&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;H1&gt;Hello, from the Old Edition!&lt;/H1&gt;

&lt;SCRIPT LANGUAGE=&quot;PerlScript&quot;&gt;

    my @one_hit = ('Bel', 'Biv', 'DeVoe');

    foreach (@one_hit) {
       $window-&gt;document-&gt;write(qq[$_ says &quot;Hello&quot;!&lt;BR&gt;]);
       }
    
    $window-&gt;document-&gt;write(qq[&lt;P&gt;&lt;I&gt;&quot;That girl is Poison!&quot;&lt;/I&gt;&lt;/P&gt;]);

&lt;/SCRIPT&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;</PRE
></BLOCKQUOTE
>

<a class="indexterm" name="AUTOID-45143"></A
>
The <code class="literal">write</CODE
> method is used on the document object to &quot;write&quot; HTML and text
to the document displayed in the window.</P
><p class="para">The top-level object is the window. This is the default object that contains
the script. (Even though the script is contained in the HTML file, the script object
is a level below the window, just like the document object.)</P
><p class="para">Every window contains the following objects:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">Frame</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-45155"></A
>This object contains an array of frames in the window. Each frame object
is accessible via the index, i.e., <code class="literal">$window-&gt;frame[2]</CODE
> is the third frame
object. Each frame object is a container that acts like its own window object.</P
></DD
><dt class="term"><em class="emphasis">History</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-45163"></A
>This object stores the browser history&nbsp;- all the sites a client has been
to in its current session.</P
></DD
><dt class="term"><em class="emphasis">Navigator</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-45170"></A
>This object contains information about the client application, like the
UserAgent header it provides.</P
></DD
><dt class="term"><em class="emphasis">Location</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-45177"></A
>This object contains information about the current URL for the window.</P
></DD
><dt class="term"><em class="emphasis">Script</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-45184"></A
>This object contains any script elements in the current window scope.</P
></DD
><dt class="term"><em class="emphasis">Document</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="PNUT-CH-20-IX-DOCUMENT-OBJECT-PERLSCRIPT"></A
>This object contains all of the displayed content in a window: the HTML,
text, forms, objects, etc.</P
></DD
></DL
><p class="para">The most important object in this hierarchy is the document object. The
following section explains the objects it contains, their properties, and 
their methods.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="PNUT-CH-20-SECT-1.1">20.1.1 The Document Object</A
></H3
><p class="para">The document object represents what is displayed within the client window. In the
example above, we showed that the <code class="literal">write</CODE
> method tells the client to show
the given HTML and text. The document object contains a number of methods and properties
that can be manipulated within a script. It also is a container for other objects
that hold information about the document:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">Anchor</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-45204"></A
>An array of anchors (<code class="literal">&lt;a name=&quot;<code class="replaceable"><i>string</I
></CODE
>&quot;&gt; &lt;/a&gt;</CODE
> tags) in the document.</P
></DD
><dt class="term"><em class="emphasis">Form</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-45213"></A
>An array of forms contained in the document.</P
></DD
><dt class="term"><em class="emphasis">Link</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-45220"></A
>An array of hyperlinks (<code class="literal">&lt;a href=&quot;<code class="replaceable"><i>url</I
></CODE
>&quot;&gt; &lt;/a&gt;</CODE
> in the document.</P
></DD
></DL
><p class="para">The anchor and link objects both provide arrays. Each element in the
array is a string with the name of the anchor or location of the hyperlink.
The elements in the link array are read-only. Anchor names can be
manipulated by the script.</P
><p class="para">The form object provides access to the elements of the forms within your
document. Each form is an indexed element of the form object array and
can be accessed like this:


<blockquote class="screen"><pre class="screen">$obj = $window-&gt;document-&gt;form[1];</PRE
></BLOCKQUOTE
>


This would be the second form in the document. Under this form
object are objects representing the various parameters of the form
and input tags. They are accessible by the names of the attributes
used in the HTML tags.</P
><div class="sect3"><h4 class="sect3"><a class="title" name="PNUT-CH-20-SECT-1.1.1">20.1.1.1 Document methods</A
></H4
><p class="para">The following methods can be used on the document object.
They are accessed using the usual object-method syntax: <code class="literal">$obj-&gt;method(args)</CODE
>.</P
><dl class="variablelist"><dt class="term"><code class="literal">write</CODE
> (<code class="replaceable"><i>string</I
></CODE
>)</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-45238"></A
>Places the given <code class="replaceable"><i>string</I
></CODE
> into the document at the current position. The
string can contain HTML tags and text that will be interpreted by the browser
or other HTML-capable client.</P
></DD
><dt class="term"><code class="literal">writeLn (</CODE
><code class="replaceable"><i>string</I
></CODE
>)</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-45248"></A
>Same as the <code class="literal">write</CODE
> method, except that it places a new line after
the given <code class="replaceable"><i>string</I
></CODE
>.</P
></DD
><dt class="term"><code class="literal">open</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-45257"></A
>Opens a document object for writing. The current document is already open
for writing. This method may be used on another document object from another
frame or window to send output to. After <code class="literal">open</CODE
> is
called, output to a document is not displayed immediately; it displays only after a <code class="literal">close</CODE
> call is
used on the document.</P
></DD
><dt class="term"><code class="literal">close</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-45267"></A
>Closes a document and writes all output to it.</P
></DD
><dt class="term"><code class="literal">clear</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-45275"></A
>Clears an output stream on a document.</P
></DD
></DL
></DIV
><div class="sect3"><h4 class="sect3"><a class="title" name="PNUT-CH-20-SECT-1.1.2">20.1.1.2 Document properties</A
></H4
><p class="para"><a class="indexterm" name="AUTOID-45280"></A
>The document object contains a set of properties described below.
Properties can be set or retrieved, and are accessed as hash variables
under the document object. They are accessible via the following
syntax:


<blockquote class="screen"><pre class="screen">$val = $window-&gt;document-&gt;{property};</PRE
></BLOCKQUOTE
>
&#13;</P
><dl class="variablelist"><dt class="term"><code class="literal">linkColor</CODE
></DT
><dd class="listitem"><p class="para">The color of hyperlinks in the document, given by an RGB-color value.</P
></DD
><dt class="term"><code class="literal">vLinkColor</CODE
></DT
><dd class="listitem"><p class="para">The color of visited hyperlinks in the document, given by an RGB-color value.</P
></DD
><dt class="term"><code class="literal">bgColor</CODE
></DT
><dd class="listitem"><p class="para">The background color of a document, given by an RGB-color value.</P
></DD
><dt class="term"><code class="literal">fgColor</CODE
></DT
><dd class="listitem"><p class="para">The foreground color of a document, given by an RGB-color value.</P
></DD
><dt class="term"><code class="literal">location</CODE
></DT
><dd class="listitem"><p class="para">The URL of the current document.</P
></DD
><dt class="term"><code class="literal">lastModified</CODE
></DT
><dd class="listitem"><p class="para">The timestamp for the last modification of the document.</P
></DD
><dt class="term"><code class="literal">title</CODE
></DT
><dd class="listitem"><p class="para">The title of the document as given by the <code class="literal">&lt;TITLE&gt;</CODE
> tag.</P
></DD
><dt class="term"><code class="literal">cookie</CODE
></DT
><dd class="listitem"><p class="para">The string value of the cookie for the document, if there is one.</P
></DD
></DL
><a class="indexterm" name="AUTOID-45325"></A
><a class="indexterm" name="AUTOID-45326"></A
><a class="indexterm" name="AUTOID-45327"></A
></DIV
></DIV
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch19_18.htm#PNUT-CH-19-SECT-18.4" title="19.18 OLE Automation"><img src="../gifs/txtpreva.gif" alt="Previous: 19.18 OLE Automation" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch20_02.htm" title="20.2 Server-Side PerlScript"><img src="../gifs/txtnexta.gif" alt="Next: 20.2 Server-Side PerlScript" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">19.18 OLE Automation</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">20.2 Server-Side PerlScript</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
