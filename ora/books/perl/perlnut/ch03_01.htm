<html><head>
<title>[Chapter 3] The Perl Interpreter</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:29:22Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="part02.htm" title="II. Language Basics"><link rel="prev" href="part02.htm" title="II. Language Basics"><link rel="next" href="ch03_02.htm" title="3.2 Command-Line Options"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name="srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="PART" href="part02.htm" title="II. Language Basics"><img src="../gifs/txtpreva.gif" alt="Previous: II. Language Basics" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 3</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch03_02.htm" title="3.2 Command-Line Options"><img src="../gifs/txtnexta.gif" alt="Next: 3.2 Command-Line Options" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="CHAPTER"><h1 class="chapter"><a class="title" name="PNUT-CH-3">3. The Perl Interpreter</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="SECT1" href="#PNUT-CH-3-SECT-1" title="3.1 Command Processing">Command Processing</A
><br><a class="SECT1" href="ch03_02.htm" title="3.2 Command-Line Options">Command-Line Options</A
><br><a class="SECT1" href="ch03_03.htm" title="3.3 Environment Variables">Environment Variables</A
><br><a class="SECT1" href="ch03_04.htm" title="3.4 The Perl Compiler">The Perl Compiler</A
><br><a class="SECT1" href="ch03_05.htm" title="3.5 Threads">Threads</A
></P
><p></P
></DIV
><p class="para">The <em class="emphasis">perl</EM
> executable, normally installed in <em class="emphasis">/usr/bin</EM
> or 
<em class="emphasis">/usr/local/bin</EM
> on your machine, is also called the <em class="emphasis">perl 
interpreter</EM
>. Every Perl program must be passed through the 
Perl interpreter in order to execute.<a class="indexterm" name="PNUT-CH-3-IX-INTERPRETER-PERL"></A
><a class="indexterm" name="PNUT-CH-3-IX-PERL-PERL-INTERPRETER"></A
>
The first line in many Perl programs is something like:

<blockquote class="screen"><pre class="screen">#!/usr/bin/perl</PRE
></BLOCKQUOTE
>&#13;</P
><p class="para"><a class="indexterm" name="AUTOID-1470"></A
><a class="indexterm" name="AUTOID-1473"></A
><a class="indexterm" name="AUTOID-1476"></A
><a class="indexterm" name="AUTOID-1479"></A
>For Unix systems, this <code class="literal">#!</CODE
> (hash-bang or shebang) line 
tells the shell to look for the
<em class="emphasis">/usr/bin/perl</EM
> program and pass the rest of the file
to that program for execution.  Sometimes you'll see different 
pathnames to the Perl executable, such as <em class="emphasis">/usr/local/bin/perl</EM
>.
You might see <em class="emphasis">perl5</EM
> instead of <em class="emphasis">perl</EM
> on sites that still depend
on older versions of Perl.
Or you'll see command-line options tacked on the end, such as
the notorious <em class="emphasis">-w</EM
> switch, which produces warning messages.  
But almost all Perl programs 
on Unix start with some variation of this line.</P
><p class="para">If you get a mysterious 
&quot;Command not found&quot; error on a Perl program, it's 
often because the path to the Perl executable is wrong.  
When you download Perl programs off the Internet, copy them
from one machine to another, or copy
them out of a book (like this one!), the first thing you
should do is make sure that the <code class="literal">#!</CODE
> line points to the
location of the Perl interpreter on your system.</P
><p class="para">So what does the Perl interpreter do?  It compiles the program
internally into a parse tree and then executes it immediately.
Perl is commonly known as an interpreted language, but this is
not strictly true.  Since the interpreter actually does convert
the program into byte code before executing it, it is sometimes
called an <em class="emphasis">interpreter/compiler</EM
>, if anything at all.
[<a class="footnote" href="#AUTOID-1492">1</A
>]
Although the compiled form is not stored as
a file, release 5.005 of Perl includes a working version of a standalone Perl compiler.</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="AUTOID-1492">[1]</A
> So do you call something a Perl &quot;script&quot; or a Perl &quot;program&quot;?
Typically, the word &quot;program&quot; is used to describe something that
needs to be compiled into assembler or byte code before executing,
as in the C language, and the word &quot;script&quot; is used to describe something that 
runs through an interpreter, as in the Bourne shell.  For Perl,
you can use either phrase and not worry about offending anyone.</P
></DIV
></BLOCKQUOTE
><p class="para">What does all this brouhaha mean for you?  When you write a Perl program, 
you can just give it a correct <code class="literal">#!</CODE
> line at the top of
the script, make it executable with <code class="literal">chmod +x</CODE
>, and run it.
For 95% of Perl programmers in this world, that's all you'll
care about.</P
><div class="sect1"><h2 class="sect1"><a class="title" name="PNUT-CH-3-SECT-1">3.1 Command Processing</A
></H2
><p class="para"><a class="indexterm" name="PNUT-CH-3-IX-INTERPRETER-PERL-COMMAND-PROCESSING"></A
><a class="indexterm" name="PNUT-CH-3-IX-PERL-PERL-INTERPRETER-COMMAND-PROCESSING"></A
><a class="indexterm" name="AUTOID-1506"></A
>In addition to specifying a <code class="literal">#!</CODE
> line, you can also 
specify a short script directly on the command line.
Here are some of the possible ways to run Perl:</P
><ul class="itemizedlist"><li class="listitem"><p class="para">Issue the <em class="emphasis">perl</EM
> command, writing your script
line by line via <em class="emphasis">-e</EM
> switches on the command line:

<blockquote class="screen"><pre class="screen">perl -e 'print &quot;Hello, world\n&quot;'    #Unix
perl -e &quot;print \&quot;Hello, world\n\&quot;&quot;  #Win32</PRE
></BLOCKQUOTE
>&#13;</P
><p class="para"></P
></LI
><li class="listitem"><p class="para">Issue the <em class="emphasis">perl</EM
> command, passing Perl the name of your script as the
first parameter (after any switches):

<blockquote class="screen"><pre class="screen">perl testpgm</PRE
></BLOCKQUOTE
>&#13;</P
><p class="para"></P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-1523"></A
>On Unix systems that support the <code class="literal">#!</CODE
> notation, specify
the Perl command on the <code class="literal">#!</CODE
> line, make your
script executable, and invoke it from the shell
(as described above).</P
></LI
><li class="listitem"><p class="para">Pass your script to Perl via standard input. For example,
under Unix:

<blockquote class="screen"><pre class="screen">echo &quot;print 'Hello, world'&quot; | perl -</PRE
></BLOCKQUOTE
>&#13;</P
><p class="para">or (unless <code class="literal">ignoreeof</CODE
> is set):

<blockquote class="screen"><pre class="screen">% perl
print &quot;Hello, world\n&quot;;
^D</PRE
></BLOCKQUOTE
>&#13;</P
><p class="para"></P
></LI
><li class="listitem"><p class="para"><a class="indexterm" name="AUTOID-1537"></A
>On Win32 systems, you can associate an extension (e.g., <em class="emphasis">.plx</EM
>)
with a file type and
double-click on the icon for a Perl script with that file type. 
If you are using the ActiveState version of Win32 Perl,
the installation script normally prompts you to create the association.</P
></LI
><li class="listitem"><p class="para">On Win32 systems, if you double-click on the icon for the Perl executable,
you'll find yourself in a command-prompt window, with a blinking cursor.
You can enter your Perl commands, indicating the end of your input with
CTRL-Z, and Perl will compile and execute your script.</P
></LI
></UL
><p class="para">Perl parses the input file from the
beginning, unless you've specified the <em class="emphasis">-x</EM
> switch (see the section
&quot;Command-Line Options&quot; below).
If there is a <code class="literal">#!</CODE
> line, it is always examined for
switches as the line is being parsed.  Thus, 
switches behave consistently regardless of how Perl was invoked.</P
><p class="para">After locating your script, Perl compiles the entire script into an
internal form.  If there are any compilation errors, execution of the
script is not attempted. If the script is syntactically correct, 
it is executed.  If the script
runs off the end without hitting an <code class="literal">exit</CODE
> or <code class="literal">die</CODE
>
operator, an implicit
<code class="literal">exit(0)</CODE
> is provided to indicate successful completion.<a class="indexterm" name="AUTOID-1550"></A
><a class="indexterm" name="AUTOID-1551"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="PART" href="part02.htm" title="II. Language Basics"><img src="../gifs/txtpreva.gif" alt="Previous: II. Language Basics" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch03_02.htm" title="3.2 Command-Line Options"><img src="../gifs/txtnexta.gif" alt="Next: 3.2 Command-Line Options" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">II. Language Basics</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.2 Command-Line Options</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
