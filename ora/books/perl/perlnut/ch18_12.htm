<html><head>
<title>[Chapter 18] 18.12 The Canvas Widget</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:58:58Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch18_01.htm" title="18. Perl/Tk"><link rel="prev" href="ch18_11.htm#PNUT-CH-18-SECT-11.2" title="18.11 The Text Widget"><link rel="next" href="ch18_13.htm" title="18.13 The Scale Widget"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch18_11.htm#PNUT-CH-18-SECT-11.2" title="18.11 The Text Widget"><img src="../gifs/txtpreva.gif" alt="Previous: 18.11 The Text Widget" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch18_01.htm" title="18. Perl/Tk">Chapter 18<br>Perl/Tk</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch18_13.htm" title="18.13 The Scale Widget"><img src="../gifs/txtnexta.gif" alt="Next: 18.13 The Scale Widget" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PNUT-CH-18-SECT-12">18.12 The Canvas Widget</A
></H2
><p class="para"><a class="indexterm" name="PNUT-CH-18-IX-CANVAS-WIDGET-PERL-TK"></A
><a class="indexterm" name="PNUT-CH-18-IX-TK-EXTENSION-TO-PERL-WIDGETS-CANVAS-WIDGET"></A
><a class="indexterm" name="PNUT-CH-18-IX-PERL-TK-WIDGETS-CANVAS-WIDGET"></A
>Create a canvas for drawing with the <code class="literal">Canvas</CODE
> method.  
The Canvas widget uses
a coordinate system with the x coordinate increasing 
as you move right, and the y coordinate increasing
as you move <em class="emphasis">down</EM
> (i.e., the y coordinate is 
mathematically upside-down).  The x and y coordinates
are specified in pixels by default.


<blockquote class="screen"><pre class="screen">$parentwidget-&gt;Canvas ( <em class="emphasis">options</EM
>)</PRE
></BLOCKQUOTE
>


The standard configuration options that apply to <code class="literal">Canvas</CODE
> are:
<code class="literal">-background</CODE
>,
<code class="literal">-borderwidth</CODE
>,
<code class="literal">-cursor</CODE
>,
<code class="literal">-height</CODE
>,
<code class="literal">-highlightbackground</CODE
>,
<code class="literal">-highlightcolor</CODE
>,
<code class="literal">-highlightthickness</CODE
>,
<code class="literal">-insertbackground</CODE
>,
<code class="literal">-insertborderwidth</CODE
>,
<code class="literal">-insertofftime</CODE
>,
<code class="literal">-insertontime</CODE
>,
<code class="literal">-insertwidth</CODE
>,
<code class="literal">-relief</CODE
>,
<code class="literal">-selectbackground</CODE
>,
<code class="literal">-selectborderwidth</CODE
>,
<code class="literal">-selectforeground</CODE
>,
<code class="literal">-takefocus</CODE
>,
<code class="literal">-width</CODE
>,
<code class="literal">-xscrollcommand</CODE
>,
and
<code class="literal">-yscrollcommand</CODE
>.</P
><p class="para">Other options are:</P
><dl class="variablelist"><dt class="term"><code class="literal">-closeenough =&gt;</CODE
> <code class="replaceable"><i>amount</I
></CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-38745"></A
>The distance considered &quot;close enough&quot; to an item to be
judged to be within it.  Default is 1 pixel.</P
></DD
><dt class="term"><code class="literal">-confine =&gt;</CODE
> <code class="replaceable"><i>boolean</I
></CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-38753"></A
>Whether to limit the canvas to the scroll region.
Default is 1.</P
></DD
><dt class="term"><code class="literal">-scrollregion =&gt;</CODE
> [ <code class="replaceable"><i>x, y, w, h</I
></CODE
> ]</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-38761"></A
>Sets the region that the user is allowed to scroll.  The option
is a list reference that conveniently corresponds to the return
value of the <code class="literal">bbox</CODE
> method.  </P
></DD
><dt class="term"><code class="literal">-xscrollincrement =&gt;</CODE
> <code class="replaceable"><i>amount</I
></CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-38770"></A
>The distance to use for scrolling in the x direction.  </P
></DD
><dt class="term"><code class="literal">-yscrollincrement =&gt;</CODE
> <code class="replaceable"><i>amount</I
></CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-38778"></A
>The distance to use for scrolling in the y direction.  </P
></DD
></DL
><div class="sect2"><h3 class="sect2"><a class="title" name="PNUT-CH-18-SECT-12.1">18.12.1 Canvas Creation Methods</A
></H3
><p class="para">To place graphic elements in a canvas, there are several
item creation commands:</P
><dl class="variablelist"><dt class="term"><code class="literal">createArc</CODE
> </DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-38789"></A
>Creates an arc contained within the given bounding box.  For example,
to create an oval bounded by the box from 
(0,0) to (40,100):


<blockquote class="screen"><pre class="screen">$canvas-&gt;createArc(0,0,40,100, -extent =&gt; 360);</PRE
></BLOCKQUOTE
>


The <code class="literal">-extent</CODE
> option gives a number between 0 and 360 defining
the length of the arc.  The default <code class="literal">-extent</CODE
> is 90, or 1/4 of
an oval; an extent of 360 gives you a full oval.  
The complete list
of options to <code class="literal">createArc</CODE
> is:

<dl class="variablelist"><dt class="term"><code class="literal">-extent =&gt;</CODE
> <code class="replaceable"><i>degrees</I
></CODE
></DT
><dd class="listitem"><p class="para">Creates an arc of the specified extent.  <code class="replaceable"><i>degrees</I
></CODE
> can be any
number between 0 and 360, as described above.</P
></DD
><dt class="term"><code class="literal">-fill =&gt;</CODE
> <code class="replaceable"><i>color</I
></CODE
></DT
><dd class="listitem"><p class="para">Fills the arc with the specified color.</P
></DD
><dt class="term"><code class="literal">-outline =&gt;</CODE
> <code class="replaceable"><i>color</I
></CODE
></DT
><dd class="listitem"><p class="para">Draws the arc with the specified color (default = black).</P
></DD
><dt class="term"><code class="literal">-outlinestipple =&gt;</CODE
> <code class="replaceable"><i>bitmap</I
></CODE
></DT
><dd class="listitem"><p class="para">Draws the outline with the specified bitmap pattern.  </P
></DD
><dt class="term"><code class="literal">-start =&gt;</CODE
> <code class="replaceable"><i>degrees</I
></CODE
></DT
><dd class="listitem"><p class="para">Starts drawing the arc from the specified position, where the
position is represented by a number from 0 to 360.
The default is 0, which means to start drawing at the 3 o'clock
position.  </P
></DD
><dt class="term"><code class="literal">-stipple =&gt;</CODE
> <code class="replaceable"><i>bitmap</I
></CODE
></DT
><dd class="listitem"><p class="para">Uses the specified bitmap to fill the arc (if <code class="literal">-fill</CODE
>
is also specified).</P
></DD
><dt class="term"><code class="literal">-style =&gt;</CODE
> <code class="replaceable"><i>type</I
></CODE
></DT
><dd class="listitem"><p class="para">Draws the arc as specified.  Values are:</P
></DD
><dt class="term"><code class="literal">'pieslice'</CODE
></DT
><dd class="listitem"><p class="para">Draws lines from the center to the ends of the arc (the default).</P
></DD
><dt class="term"><code class="literal">'chord'</CODE
></DT
><dd class="listitem"><p class="para">Draws a line connecting the two ends of the arc.</P
></DD
><dt class="term"><code class="literal">'arc'</CODE
></DT
><dd class="listitem"><p class="para">Draws the arc with no other lines.</P
></DD
><dt class="term"><code class="literal">-tags =&gt;</CODE
> <code class="replaceable"><i>tagnames</I
></CODE
></DT
><dd class="listitem"><p class="para">Associates the arc with the specified tag(s).  Multiple tag names
can be supplied as an anonymous list.  </P
></DD
><dt class="term"><code class="literal">-width =&gt;</CODE
> <code class="replaceable"><i>amount</I
></CODE
></DT
><dd class="listitem"><p class="para">The width of the outline.  Default is 1.</P
></DD
></DL
>&#13;</P
></DD
><dt class="term"><code class="literal">createBitmap</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-38872"></A
>Inserts a bitmap.  For example, to place the <code class="literal">&quot;calculator&quot;</CODE
> bitmap
at the (0,0) coordinates:


<blockquote class="screen"><pre class="screen">$canvas -&gt; createBitmap(0, 0, -bitmap =&gt; 'calculator');</PRE
></BLOCKQUOTE
>


Options are:

<dl class="variablelist"><dt class="term"><code class="literal">-anchor =&gt;</CODE
> <code class="replaceable"><i>position</I
></CODE
></DT
><dd class="listitem"><p class="para">Anchors the bitmap at the specified position.  Values are <code class="literal">&quot;center&quot;</CODE
> (default), <code class="literal">&quot;n&quot;</CODE
>, <code class="literal">&quot;e&quot;</CODE
>, <code class="literal">&quot;s&quot;</CODE
>, <code class="literal">&quot;w&quot;</CODE
>, <code class="literal">&quot;ne&quot;</CODE
>, <code class="literal">&quot;nw&quot;</CODE
>, <code class="literal">&quot;se&quot;</CODE
>, and <code class="literal">&quot;sw&quot;</CODE
>.</P
></DD
><dt class="term"><code class="literal">-background =&gt;</CODE
> <code class="replaceable"><i>color</I
></CODE
></DT
><dd class="listitem"><p class="para">Specifies the color to use for the &quot;0&quot; pixels in the bitmap
(default is to be transparent).</P
></DD
><dt class="term"><code class="literal">-bitmap =&gt;</CODE
> <code class="replaceable"><i>bitmap</I
></CODE
></DT
><dd class="listitem"><p class="para">Specifies the bitmap name.  For a built-in bitmap, just specify
the name; for a local bitmap file, specify the name with an &quot;@&quot;
symbol preceding it.</P
></DD
><dt class="term"><code class="literal">-foreground =&gt;</CODE
> <code class="replaceable"><i>color</I
></CODE
></DT
><dd class="listitem"><p class="para">Specifies the color to use for the &quot;1&quot; pixels in the bitmap
(default is black).</P
></DD
><dt class="term"><code class="literal">-tags =&gt;</CODE
> <code class="replaceable"><i>tagnames</I
></CODE
></DT
><dd class="listitem"><p class="para">Associates the bitmap with the specified tag(s).  Multiple tag names
can be supplied as an anonymous list.  </P
></DD
></DL
>&#13;</P
></DD
><dt class="term"><code class="literal">createImage</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-38921"></A
>Creates an image.  For example, to place an image at (0,0):


<blockquote class="screen"><pre class="screen">$canvas-&gt;createImage(0,0, -image =&gt; $imgptr);</PRE
></BLOCKQUOTE
>


Options are:

<dl class="variablelist"><dt class="term"><code class="literal">-anchor =&gt;</CODE
> <code class="replaceable"><i>position</I
></CODE
></DT
><dd class="listitem"><p class="para">Anchors the image at the specified position.  Values are <code class="literal">&quot;center&quot;</CODE
>
(default), <code class="literal">&quot;n&quot;</CODE
>, <code class="literal">&quot;e&quot;</CODE
>, <code class="literal">&quot;s&quot;</CODE
>, <code class="literal">&quot;w&quot;</CODE
>, <code class="literal">&quot;ne&quot;</CODE
>, <code class="literal">&quot;nw&quot;</CODE
>, <code class="literal">&quot;se&quot;</CODE
>, and <code class="literal">&quot;sw&quot;</CODE
>.</P
></DD
><dt class="term"><code class="literal">-image =&gt;</CODE
> <code class="replaceable"><i>$imgptr</I
></CODE
></DT
><dd class="listitem"><p class="para"><code class="replaceable"><i>$imgptr</I
></CODE
> is a pointer to a Photo or Image object 
made using a GIF or PPM file.  For example:


<blockquote class="screen"><pre class="screen">$imgptr = $mainwindow-&gt;Photo(-file =&gt; &quot;doggie.gif&quot;);</PRE
></BLOCKQUOTE
>
&#13;</P
></DD
><dt class="term"><code class="literal">-tags =&gt;</CODE
> <code class="replaceable"><i>tagnames</I
></CODE
></DT
><dd class="listitem"><p class="para">Associate the image with the specified tag(s).  Multiple tag names
can be supplied as an anonymous list.  </P
></DD
></DL
>&#13;</P
></DD
><dt class="term"><code class="literal">createLine</CODE
> </DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-38959"></A
>Creates a line or several adjoining lines.  For example, to 
create a line from (0,0) to (100, 100) and then back to (100, 0):


<blockquote class="screen"><pre class="screen">$canvas-&gt;createLine (0,0,100,100,100,0);</PRE
></BLOCKQUOTE
>


The first four coordinates are required.  Any additional coordinates
are taken to represent a continuation of that line.  Options are:

<dl class="variablelist"><dt class="term"><code class="literal">-arrow =&gt;</CODE
> <code class="replaceable"><i>position</I
></CODE
></DT
><dd class="listitem"><p class="para">Specifies where to place arrowheads.  Values are <code class="literal">'none'</CODE
> (default), <code class="literal">'first'</CODE
>, <code class="literal">'last'</CODE
>, and <code class="literal">'both'</CODE
>.  </P
></DD
><dt class="term"><code class="literal">-arrowshape =&gt;</CODE
> [ <code class="replaceable"><i>head</I
></CODE
>, <code class="replaceable"><i>length</I
></CODE
>, <code class="replaceable"><i>flare</I
></CODE
> ]</DT
><dd class="listitem"><p class="para">Specifies the dimensions of the arrow as a three-element anonymous list,
describing (in order) the distance from the base to the &quot;head&quot; of 
the arrow, the distance from the rear point(s) to the head of the
arrow, and the distance from the rear point(s) to the line.</P
></DD
><dt class="term"><code class="literal">-capstyle =&gt;</CODE
> <code class="replaceable"><i>type</I
></CODE
></DT
><dd class="listitem"><p class="para">Defines the type of arrowhead.  Values are <code class="literal">&quot;butt&quot;</CODE
> (the default), <code class="literal">&quot;projecting&quot;</CODE
>, and <code class="literal">&quot;round&quot;</CODE
>.</P
></DD
><dt class="term"><code class="literal">-fill =&gt;</CODE
> <code class="replaceable"><i>color</I
></CODE
></DT
><dd class="listitem"><p class="para">The color to use to draw the line.</P
></DD
><dt class="term"><code class="literal">-joinstyle =&gt;</CODE
> <code class="replaceable"><i>type</I
></CODE
></DT
><dd class="listitem"><p class="para">Defines how multiple lines are joined.  Values are <code class="literal">&quot;miter&quot;</CODE
> (default),
<code class="literal">&quot;bevel&quot;</CODE
>, and <code class="literal">&quot;round&quot;</CODE
>.  </P
></DD
><dt class="term"><code class="literal">-smooth =&gt;</CODE
> <code class="replaceable"><i>boolean</I
></CODE
></DT
><dd class="listitem"><p class="para">Determines whether the lines are drawn with a Bezier spine.  
Default is 0.</P
></DD
><dt class="term"><code class="literal">-splinesteps =&gt;</CODE
> <code class="replaceable"><i>n</I
></CODE
></DT
><dd class="listitem"><p class="para">Determines how smooth the Bezier curve is.</P
></DD
><dt class="term"><code class="literal">-stipple =&gt;</CODE
> <code class="replaceable"><i>bitmap</I
></CODE
></DT
><dd class="listitem"><p class="para">Draws the line with the specified bitmap pattern.</P
></DD
><dt class="term"><code class="literal">-tags =&gt;</CODE
> <code class="replaceable"><i>tagnames</I
></CODE
></DT
><dd class="listitem"><p class="para">Associates the line with the specified tag(s).  Multiple tag names
can be supplied as an anonymous list.  </P
></DD
><dt class="term"><code class="literal">-width =&gt;</CODE
> <code class="replaceable"><i>amount</I
></CODE
></DT
><dd class="listitem"><p class="para">The width of the line (default = 1 pixel).  </P
></DD
></DL
>&#13;</P
></DD
><dt class="term"><code class="literal">createOval</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39040"></A
>Creates an oval.  For example, to create a circle bounded by the
box from (50,50) to (150,150):


<blockquote class="screen"><pre class="screen">$canvas-&gt;createOval(50,50,150,150);</PRE
></BLOCKQUOTE
>


Options are:

<dl class="variablelist"><dt class="term"><code class="literal">-fill =&gt;</CODE
> <code class="replaceable"><i>color</I
></CODE
></DT
><dd class="listitem"><p class="para">Fills the arc with the specified color.</P
></DD
><dt class="term"><code class="literal">-outline =&gt;</CODE
> <code class="replaceable"><i>color</I
></CODE
></DT
><dd class="listitem"><p class="para">Specifies the color for the outline (default = black).</P
></DD
><dt class="term"><code class="literal">-stipple =&gt;</CODE
> <code class="replaceable"><i>bitmap</I
></CODE
></DT
><dd class="listitem"><p class="para">Specifies a bitmap to fill the oval with.  </P
></DD
><dt class="term"><code class="literal">-tags =&gt;</CODE
> <code class="replaceable"><i>tagnames</I
></CODE
></DT
><dd class="listitem"><p class="para">Associates the oval with the specified tag(s).  Multiple tag names
can be supplied as an anonymous list.  </P
></DD
><dt class="term"><code class="literal">-width =&gt;</CODE
> <code class="replaceable"><i>amount</I
></CODE
></DT
><dd class="listitem"><p class="para">The width of the outline (default = 1 pixel).  </P
></DD
></DL
>&#13;</P
></DD
><dt class="term"><code class="literal">createPolygon</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39079"></A
>Creates a polygon.  At least three sets of coordinates are required;
the first point is automatically connected to the last point to 
complete the polygon.

<blockquote class="screen"><pre class="screen">$canvas -&gt; createPolygon(0,0,130, 20, 90, -35);</PRE
></BLOCKQUOTE
>

Options are:

<dl class="variablelist"><dt class="term"><code class="literal">-fill =&gt;</CODE
> <code class="replaceable"><i>color</I
></CODE
></DT
><dd class="listitem"><p class="para">The color to use to fill the polygon.</P
></DD
><dt class="term"><code class="literal">-outline =&gt;</CODE
> <code class="replaceable"><i>color</I
></CODE
></DT
><dd class="listitem"><p class="para">Specifies the color for the outline (default = black).</P
></DD
><dt class="term"><code class="literal">-smooth =&gt;</CODE
> <code class="replaceable"><i>boolean</I
></CODE
></DT
><dd class="listitem"><p class="para">Determines whether the outline is drawn with a Bezier spine.  
Default is 0.</P
></DD
><dt class="term"><code class="literal">-splinesteps =&gt;</CODE
> <code class="replaceable"><i>n</I
></CODE
></DT
><dd class="listitem"><p class="para">Determines how smooth the Bezier curve is.</P
></DD
><dt class="term"><code class="literal">-stipple =&gt;</CODE
> <code class="replaceable"><i>bitmap</I
></CODE
></DT
><dd class="listitem"><p class="para">Fills the polygon with the specified bitmap pattern.</P
></DD
><dt class="term"><code class="literal">-tags =&gt;</CODE
> <code class="replaceable"><i>tagnames</I
></CODE
></DT
><dd class="listitem"><p class="para">Associates the polygon with the specified tag(s).  Multiple tag names
can be supplied as an anonymous list.  </P
></DD
><dt class="term"><code class="literal">-width =&gt;</CODE
> <code class="replaceable"><i>amount</I
></CODE
></DT
><dd class="listitem"><p class="para">The width of the outline (default = 1 pixel).  </P
></DD
></DL
>&#13;</P
></DD
><dt class="term"><code class="literal">createRectangle</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39130"></A
>Creates a rectangle.  For example, to create a square with one
corner at (0,0) and another at (100,100):


<blockquote class="screen"><pre class="screen">$canvas-&gt;createRectangle(0,0,100,100);</PRE
></BLOCKQUOTE
>


Options are:

<dl class="variablelist"><dt class="term"><code class="literal">-fill =&gt;</CODE
> <code class="replaceable"><i>color</I
></CODE
></DT
><dd class="listitem"><p class="para">The color to use to fill the rectangle.</P
></DD
><dt class="term"><code class="literal">-outline =&gt;</CODE
> <code class="replaceable"><i>color</I
></CODE
></DT
><dd class="listitem"><p class="para">Specifies the color for the outline (default = black).</P
></DD
><dt class="term"><code class="literal">-stipple =&gt;</CODE
> <code class="replaceable"><i>bitmap</I
></CODE
></DT
><dd class="listitem"><p class="para">Fills the rectangle with the specified bitmap pattern.</P
></DD
><dt class="term"><code class="literal">-tags =&gt;</CODE
> <code class="replaceable"><i>tagnames</I
></CODE
></DT
><dd class="listitem"><p class="para">Associates the rectangle with the specified tag(s).  Multiple tag names
can be supplied as an anonymous list.  </P
></DD
><dt class="term"><code class="literal">-width =&gt;</CODE
> <code class="replaceable"><i>amount</I
></CODE
></DT
><dd class="listitem"><p class="para">The width of the outline (default = 1 pixel).  </P
></DD
></DL
>&#13;</P
></DD
><dt class="term"><code class="literal">createText</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39169"></A
>Places text in a canvas widget.  For example, to write &quot;Broadway&quot; 
centered at the position (130,-40):


<blockquote class="screen"><pre class="screen">$canvas-&gt;createText(130,-40, -text =&gt; &quot;Broadway&quot;);</PRE
></BLOCKQUOTE
>


Options are:

<dl class="variablelist"><dt class="term"><code class="literal">-anchor =&gt;</CODE
> <code class="replaceable"><i>position</I
></CODE
></DT
><dd class="listitem"><p class="para">Anchors the text at the specified position.  Values are <code class="literal">&quot;center&quot;</CODE
> (default), <code class="literal">&quot;n&quot;</CODE
>, <code class="literal">&quot;e&quot;</CODE
>, <code class="literal">&quot;s&quot;</CODE
>, <code class="literal">&quot;w&quot;</CODE
>, <code class="literal">&quot;ne&quot;</CODE
>, <code class="literal">&quot;nw&quot;</CODE
>, <code class="literal">&quot;se&quot;</CODE
>, and <code class="literal">&quot;sw&quot;</CODE
>.</P
></DD
><dt class="term"><code class="literal">-fill =&gt;</CODE
> <code class="replaceable"><i>color</I
></CODE
></DT
><dd class="listitem"><p class="para">The color to use for the text.</P
></DD
><dt class="term"><code class="literal">-font =&gt;</CODE
> <code class="replaceable"><i>fontname</I
></CODE
></DT
><dd class="listitem"><p class="para">The font for the text.</P
></DD
><dt class="term"><code class="literal">-justify =&gt;</CODE
> <code class="replaceable"><i>position</I
></CODE
></DT
><dd class="listitem"><p class="para">The justification of the text (any of <code class="literal">'left'</CODE
>, <code class="literal">'right'</CODE
>, and <code class="literal">'center'</CODE
>).  The default is <code class="literal">'left'</CODE
>.</P
></DD
><dt class="term"><code class="literal">-stipple =&gt;</CODE
> <code class="replaceable"><i>bitmap</I
></CODE
></DT
><dd class="listitem"><p class="para">Fills the text with the specified bitmap pattern.</P
></DD
><dt class="term"><code class="literal">-tags =&gt;</CODE
> <code class="replaceable"><i>tagnames</I
></CODE
></DT
><dd class="listitem"><p class="para">Associates the text with the specified tag(s).  Multiple tag names
can be supplied as an anonymous list.  </P
></DD
><dt class="term"><code class="literal">-text =&gt;</CODE
> <code class="replaceable"><i>string</I
></CODE
></DT
><dd class="listitem"><p class="para">Specifies the text to display.</P
></DD
><dt class="term"><code class="literal">-width =&gt;</CODE
> <code class="replaceable"><i>amount</I
></CODE
></DT
><dd class="listitem"><p class="para">The maximum length of each line of text.  Default is 0, which
means that lines are only broken at explicit newline characters.</P
></DD
></DL
>&#13;</P
><p class="para">There is a set of methods for manipulating text items within
a Canvas widget.  For each of these methods, the first argument
is the tag name or tag ID, and subsequent arguments use
text indexes as described for the Text widget.

<dl class="variablelist"><dt class="term"><code class="literal">dchars</CODE
></DT
><dd class="listitem"><p class="para">Deletes characters from a text item, given the tag name or ID, 
and indexes of the first and last characters to delete.</P
></DD
><dt class="term"><code class="literal">icursor</CODE
></DT
><dd class="listitem"><p class="para">Places the insert cursor at the specified index.</P
></DD
><dt class="term"><code class="literal">index</CODE
></DT
><dd class="listitem"><p class="para">Gets a numerical index from a named one.</P
></DD
><dt class="term"><code class="literal">insert</CODE
></DT
><dd class="listitem"><p class="para">Adds a string to the text item.</P
></DD
></DL
>&#13;</P
></DD
><dt class="term"><code class="literal">createWindow</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39261"></A
>Embeds another widget inside of a canvas.  The widget must have
been already created as a child of the canvas or of the canvas's parent.
Options are:

<dl class="variablelist"><dt class="term"><code class="literal">-anchor =&gt;</CODE
> <code class="replaceable"><i>position</I
></CODE
></DT
><dd class="listitem"><p class="para">Anchors the widget at the specified position.  Values are <code class="literal">&quot;center&quot;</CODE
> (default), <code class="literal">&quot;n&quot;</CODE
>, <code class="literal">&quot;e&quot;</CODE
>, <code class="literal">&quot;s&quot;</CODE
>, <code class="literal">&quot;w&quot;</CODE
>, <code class="literal">&quot;ne&quot;</CODE
>, <code class="literal">&quot;nw&quot;</CODE
>, <code class="literal">&quot;se&quot;</CODE
>, and <code class="literal">&quot;sw&quot;</CODE
>.</P
></DD
><dt class="term"><code class="literal">-height =&gt;</CODE
> <code class="replaceable"><i>amount</I
></CODE
></DT
><dd class="listitem"><p class="para">Specifies the height of the widget.  </P
></DD
><dt class="term"><code class="literal">-tags =&gt;</CODE
> <code class="replaceable"><i>tagnames</I
></CODE
></DT
><dd class="listitem"><p class="para">Associates the widget with the specified tag(s).  Multiple tag names
can be supplied as an anonymous list.  </P
></DD
><dt class="term"><code class="literal">-width =&gt;</CODE
> <code class="replaceable"><i>amount</I
></CODE
></DT
><dd class="listitem"><p class="para">The width of the widget.  </P
></DD
><dt class="term"><code class="literal">-window =&gt;</CODE
> <code class="replaceable"><i>$widget</I
></CODE
></DT
><dd class="listitem"><p class="para">Specifies the widget to embed.  </P
></DD
></DL
>
&#13;</P
></DD
></DL
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PNUT-CH-18-SECT-12.2">18.12.2 Item Tags and IDs</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-39306"></A
>Each item in a Canvas Widget is given a unique ID when it is created.  This ID is
returned from the canvas creation command.  In addition, each
item can have a tag associated with it, either when created 
or with the <code class="literal">addtag</CODE
> method.  You can use either the ID 
or the tag to refer to an item in the canvas.  Unlike IDs, 
tags do not have to be unique, which makes it possible to configure
several items as a group.</P
><p class="para">Two special tags are created automatically.  The &quot;all&quot; tag 
refers to all items in the canvas.  The &quot;current&quot; tag refers to the 
item that the cursor is currently over, if any.</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PNUT-CH-18-SECT-12.3">18.12.3 Canvas Methods</A
></H3
><p class="para">In addition to <code class="literal">configure</CODE
> and <code class="literal">cget</CODE
>, the following
methods are supported by the Canvas widget.  </P
><dl class="variablelist"><dt class="term"><code class="literal">addtag</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39321"></A
>Defines a tag for an already-created canvas item.  
For example, to assign a tag
called <code class="literal">&quot;everything&quot;</CODE
> to all items in a canvas:


<blockquote class="screen"><pre class="screen">$canvas-&gt;addtag(&quot;everything&quot;, &quot;all&quot;);</PRE
></BLOCKQUOTE
>


To change the tag for an item from <code class="literal">&quot;tmp&quot;</CODE
> to <code class="literal">&quot;circle&quot;</CODE
>:


<blockquote class="screen"><pre class="screen">$canvas-&gt;addtag(&quot;circle&quot;, &quot;withtag&quot;, &quot;tmp&quot;);</PRE
></BLOCKQUOTE
>


To assign the tag <code class="literal">&quot;origin&quot;</CODE
> to the item closest to the coordinates
(0,0):


<blockquote class="screen"><pre class="screen">$canvas-&gt;addtag(&quot;origin&quot;, &quot;closest&quot;, 0, 0);</PRE
></BLOCKQUOTE
>


The full list of identifiers is:

<dl class="variablelist"><dt class="term"><code class="literal">above</CODE
></DT
><dd class="listitem"><p class="para">Assigns the tag to the item above the specified item in the display
list.</P
></DD
><dt class="term"><code class="literal">all</CODE
></DT
><dd class="listitem"><p class="para">Assigns the tag to all items in the canvas.</P
></DD
><dt class="term"><code class="literal">below</CODE
></DT
><dd class="listitem"><p class="para">Assigns the tag to the item below the specified item in 
the display list.</P
></DD
><dt class="term"><code class="literal">closest</CODE
></DT
><dd class="listitem"><p class="para">Assigns the tag to the item closest to the specified x,y coordinate.</P
></DD
><dt class="term"><code class="literal">enclosed</CODE
></DT
><dd class="listitem"><p class="para">Assigns the tag to all items that are completely enclosed within the
specified bounding box.</P
></DD
><dt class="term"><code class="literal">overlapping</CODE
></DT
><dd class="listitem"><p class="para">Assigns the tag to all items that are even partially inside the
specified bounding box.</P
></DD
><dt class="term"><code class="literal">withtag</CODE
></DT
><dd class="listitem"><p class="para">Assigns the tag to all items with the specified tag.</P
></DD
></DL
>&#13;</P
></DD
><dt class="term"><code class="literal">bind</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39371"></A
>Binds a callback to an item.  (To bind a callback to the canvas widget
itself, you must specify Tk::bind.)</P
></DD
><dt class="term"><code class="literal">bbox</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39379"></A
>Returns the bounding box of an item.  For example, to get
the bounding box for all items in the canvas:


<blockquote class="screen"><pre class="screen">$canvas-&gt;bbox(&quot;all&quot;);</PRE
></BLOCKQUOTE
>
&#13;</P
></DD
><dt class="term"><code class="literal">itemconfigure</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39388"></A
>Configures one of the items within the canvas.  
Works just like
the <code class="literal">configure</CODE
> method for widgets, but the first argument is the
tag name or ID for the canvas item.</P
></DD
><dt class="term"><code class="literal">itemcget</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39396"></A
>Gets configuration information for one of the items within the canvas.
Works just like
the <code class="literal">cget</CODE
> method for widgets, but the first argument is the
tag name or ID for the canvas item.</P
></DD
><dt class="term"><code class="literal">move</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39404"></A
>Moves an item on the canvas by adding the specified x and y 
distances to it.


<blockquote class="screen"><pre class="screen">$canvas-&gt;move(&quot;circle1&quot;, 100, 100);</PRE
></BLOCKQUOTE
>
&#13;</P
></DD
><dt class="term"><code class="literal">coords</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39412"></A
>Gets the current x,y coordinates for an item, or
moves an item to an explicit x,y coordinate.</P
></DD
><dt class="term"><code class="literal">lower</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39420"></A
>Sets the priority for the item in the display list to be 
lower than the item identified by the specified tag or ID.</P
></DD
><dt class="term"><code class="literal">raise</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39427"></A
>Sets the priority for the item in the display list to be 
higher than the item identified by the specified tag or ID.</P
></DD
><dt class="term"><code class="literal">delete</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39434"></A
>Removes an item from the canvas.  You can specify as many
tags or IDs in the argument list as you want.</P
></DD
><dt class="term"><code class="literal">find</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39442"></A
>Finds the specified items.  The first argument can be any of:

<dl class="variablelist"><dt class="term"><code class="literal">above</CODE
></DT
><dd class="listitem"><p class="para">Finds the item above the specified item in the display
list.</P
></DD
><dt class="term"><code class="literal">all</CODE
></DT
><dd class="listitem"><p class="para">Finds all items in the canvas.</P
></DD
><dt class="term"><code class="literal">below</CODE
></DT
><dd class="listitem"><p class="para">Finds the item below the specified item in 
the display list.</P
></DD
><dt class="term"><code class="literal">closest</CODE
></DT
><dd class="listitem"><p class="para">Finds the item closest to the specified x,y coordinate.</P
></DD
><dt class="term"><code class="literal">enclosed</CODE
></DT
><dd class="listitem"><p class="para">Finds all items that are completely enclosed within the
specified bounding box.</P
></DD
><dt class="term"><code class="literal">overlapping</CODE
></DT
><dd class="listitem"><p class="para">Finds all items that are even partially inside the
specified bounding box.</P
></DD
><dt class="term"><code class="literal">withtag</CODE
></DT
><dd class="listitem"><p class="para">Finds all items with the specified tag.</P
></DD
></DL
>&#13;</P
></DD
><dt class="term"><code class="literal">gettags</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39485"></A
>Retrieves a list of all tags associated with an item.</P
></DD
><dt class="term"><code class="literal">type</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39492"></A
>Determines the type of the specified item.</P
></DD
><dt class="term"><code class="literal">focus</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39500"></A
>Assigns the keyboard focus to the specified item. </P
></DD
><dt class="term"><code class="literal">postscript</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39507"></A
>Renders the canvas as PostScript.  Options are:

<dl class="variablelist"><dt class="term"><code class="literal">-colormap =&gt;</CODE
> \@<code class="replaceable"><i>colorcommand</I
></CODE
></DT
><dd class="listitem"><p class="para">Specifies a PostScript command for setting color values.</P
></DD
><dt class="term"><code class="literal">-colormode =&gt;</CODE
> <code class="replaceable"><i>mode</I
></CODE
></DT
><dd class="listitem"><p class="para">Sets the mode to <code class="literal">&quot;color&quot;</CODE
> (full color), <code class="literal">&quot;gray&quot;</CODE
> (grayscale), or <code class="literal">&quot;mono&quot;</CODE
> (black and white).</P
></DD
><dt class="term"><code class="literal">-file =&gt;</CODE
> <code class="replaceable"><i>filename</I
></CODE
></DT
><dd class="listitem"><p class="para">The name of the file to store the PostScript output.</P
></DD
><dt class="term"><code class="literal">-fontmap =&gt;</CODE
> \@<code class="replaceable"><i>fontspec</I
></CODE
></DT
><dd class="listitem"><p class="para">Specifies a font name and point size.</P
></DD
><dt class="term"><code class="literal">-height =&gt;</CODE
> <code class="replaceable"><i>size</I
></CODE
></DT
><dd class="listitem"><p class="para">The height of the area to print.</P
></DD
><dt class="term"><code class="literal">-pageanchor =&gt;</CODE
> <code class="replaceable"><i>position</I
></CODE
></DT
><dd class="listitem"><p class="para">The anchor position of the page.  Values are <code class="literal">&quot;center&quot;</CODE
> (default), <code class="literal">&quot;n&quot;</CODE
>, <code class="literal">&quot;e&quot;</CODE
>, <code class="literal">&quot;s&quot;</CODE
>, and <code class="literal">&quot;w&quot;</CODE
>.</P
></DD
><dt class="term"><code class="literal">-pageheight =&gt;</CODE
> <code class="replaceable"><i>height</I
></CODE
></DT
><dd class="listitem"><p class="para">The height of the printed page.</P
></DD
><dt class="term"><code class="literal">-pagewidth =&gt;</CODE
> <code class="replaceable"><i>width</I
></CODE
></DT
><dd class="listitem"><p class="para">The width of the printed page.</P
></DD
><dt class="term"><code class="literal">-pagex =&gt;</CODE
> <code class="replaceable"><i>x</I
></CODE
></DT
><dd class="listitem"><p class="para">The x positioning point.</P
></DD
><dt class="term"><code class="literal">-pagey =&gt;</CODE
> <code class="replaceable"><i>y</I
></CODE
></DT
><dd class="listitem"><p class="para">The y positioning point.</P
></DD
><dt class="term"><code class="literal">-rotate =&gt;</CODE
> <code class="replaceable"><i>boolean</I
></CODE
></DT
><dd class="listitem"><p class="para">Whether to rotate to landscape orientation.  Default is 0.</P
></DD
><dt class="term"><code class="literal">-width =&gt;</CODE
> <code class="replaceable"><i>size</I
></CODE
></DT
><dd class="listitem"><p class="para">The width of the area to print.</P
></DD
><dt class="term"><code class="literal">-x =&gt;</CODE
> <code class="replaceable"><i>x</I
></CODE
></DT
><dd class="listitem"><p class="para">The left edge of the canvas.</P
></DD
><dt class="term"><code class="literal">-y =&gt;</CODE
> <code class="replaceable"><i>y</I
></CODE
></DT
><dd class="listitem"><p class="para">The top edge of the canvas.</P
></DD
></DL
>&#13;</P
></DD
><dt class="term"><code class="literal">scale</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39607"></A
>Changes the scaling of the canvas or any individual items.  
For example, to scale the entire canvas to half its dimensions:


<blockquote class="screen"><pre class="screen">$canvas-&gt;scale(&quot;all&quot;, 0, 0, .5, .5);</PRE
></BLOCKQUOTE
>
&#13;</P
></DD
><dt class="term"><code class="literal">xview</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39615"></A
>Manipulates the canvas area in view.  With no arguments, returns a
list of two numbers between 0 and 1, defining what portion of the
canvas is currently hidden on the left and right sides,
respectively.  With arguments, the function of <code class="literal">xview</CODE
>
changes:

<dl class="variablelist"><dt class="term"><code class="literal">moveto</CODE
></DT
><dd class="listitem"><p class="para">Moves the specified fraction of the text to the left
of the visible portion.  </P
></DD
><dt class="term"><code class="literal">scroll</CODE
></DT
><dd class="listitem"><p class="para">Scrolls the canvas left or right by the specified number of
units or pages.
Used primarily as a callback to a scrollbar; pressing on
an arrow would move by units (characters), and pressing on the
trough would move by pages.
The number is either 1 or -1, to move forwards or backwards,
respectively.</P
></DD
></DL
>&#13;</P
></DD
><dt class="term"><code class="literal">yview</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-39635"></A
>Manipulates the canvas in view.  With no arguments, returns a
list of two numbers between 0 and 1, defining what portion of the
canvas is currently hidden on the top and bottom,
respectively.  With arguments, its function changes:

<dl class="variablelist"><dt class="term"><code class="literal">moveto</CODE
></DT
><dd class="listitem"><p class="para">Moves the specified fraction of the canvas area to the top
of the visible portion.  </P
></DD
><dt class="term"><code class="literal">scroll</CODE
></DT
><dd class="listitem"><p class="para">Scrolls the canvas up or down by the specified number of
units or pages.  
Used primarily as a callback to a scrollbar; pressing on
an arrow would move by units (lines), and pressing on the
trough would move by pages.
The number is either 1 or -1, to move forwards or backwards,
respectively.</P
></DD
></DL
>&#13;</P
></DD
></DL
><a class="indexterm" name="AUTOID-39649"></A
><a class="indexterm" name="AUTOID-39650"></A
><a class="indexterm" name="AUTOID-39651"></A
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch18_11.htm#PNUT-CH-18-SECT-11.2" title="18.11 The Text Widget"><img src="../gifs/txtpreva.gif" alt="Previous: 18.11 The Text Widget" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch18_13.htm" title="18.13 The Scale Widget"><img src="../gifs/txtnexta.gif" alt="Next: 18.13 The Scale Widget" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">18.11 The Text Widget</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">18.13 The Scale Widget</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
