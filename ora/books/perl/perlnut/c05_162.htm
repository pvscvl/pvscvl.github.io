<html><head>
<title>Reference: sort</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:38:10Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch05_02.htm" title="5.2 Perl Functions in Alphabetical Order"><link rel="prev" href="c05_161.htm" title="Reference: socketpair"><link rel="next" href="c05_163.htm" title="Reference: splice"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="NUTENTRY" href="c05_161.htm" title="Reference: socketpair"><img src="../gifs/txtpreva.gif" alt="Previous: Reference: socketpair" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch05_01.htm" title="5. Function Reference">Chapter 5<br>Function Reference</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="NUTENTRY" href="c05_163.htm" title="Reference: splice"><img src="../gifs/txtnexta.gif" alt="Next: Reference: splice" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="NUTENTRY"><h2 class="nutentry"><a class="term" name="AUTOID-10189">sort</A
></H2
><pre class="nutsynopsis">sort [<em class="emphasis">code</EM
>] <em class="emphasis">list</EM
></PRE
><dl class="nutentrybody"><p class="para"><a class="indexterm" name="AUTOID-10196"></A
>Sorts a <em class="emphasis">list</EM
> and returns the sorted
list value. By default (without a <em class="emphasis">code</EM
> argument), 
it sorts in standard string comparison order (undefined
values sorting before defined null strings, which sort before everything else).
<em class="emphasis">code</EM
>, if given, may be the name of a subroutine or a code block
(anonymous subroutine) that defines its own comparison mechanism for sorting
elements of <em class="emphasis">list</EM
>. The routine must return to the <code class="literal">sort</CODE
> function
an integer less than, equal to, or greater than 0, depending on how the
elements of the list are to be ordered. (The handy <code class="literal">&lt;=&gt;</CODE
>
and <code class="literal">cmp</CODE
> operators can be used to perform three-way numeric
and string comparisons.)</P
><p class="para">The normal calling
code for subroutines is bypassed, with the following effects: the subroutine may
not be a recursive subroutine, and the two elements to be compared are passed
into the subroutine as <code class="literal">$a</CODE
> and <code class="literal">$b</CODE
>,
not via <code class="literal">@_</CODE
>.
The variables <code class="literal">$a</CODE
> and <code class="literal">$b</CODE
> are passed by reference, 
so don't modify them in the
subroutine.</P
><p class="para">Do not declare <code class="literal">$a</CODE
> and <code class="literal">$b</CODE
> as lexical
variables (with <code class="literal">my</CODE
>). They are package
globals (though theyre exempt from the usual restrictions on globals when
you're using <code class="literal">use strict</CODE
>). You do need to make sure your <code class="literal">sort</CODE
>
routine is in the same package though, or else you must qualify <code class="literal">$a</CODE
> and
<code class="literal">$b</CODE
> with the package name of the caller.</P
><p class="para">In versions preceding 5.005,
Perl's <code class="literal">sort</CODE
> is
implemented in terms of C's <code class="literal">qsort(3)</CODE
> function.
Some <code class="literal">qsort(3)</CODE
> versions will dump core if your
sort subroutine provides inconsistent ordering of values.
As of 5.005, however, this is no longer true.</P
></DL
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="NUTENTRY" href="c05_161.htm" title="Reference: socketpair"><img src="../gifs/txtpreva.gif" alt="Previous: Reference: socketpair" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="NUTENTRY" href="c05_163.htm" title="Reference: splice"><img src="../gifs/txtnexta.gif" alt="Next: Reference: splice" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">Reference: socketpair</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">Reference: splice</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
