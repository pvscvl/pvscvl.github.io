<html><head>
<title>Reference: use</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:39:09Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch05_02.htm" title="5.2 Perl Functions in Alphabetical Order"><link rel="prev" href="c05_193.htm" title="Reference: untie"><link rel="next" href="c05_195.htm" title="Reference: utime"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="NUTENTRY" href="c05_193.htm" title="Reference: untie"><img src="../gifs/txtpreva.gif" alt="Previous: Reference: untie" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch05_01.htm" title="5. Function Reference">Chapter 5<br>Function Reference</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="NUTENTRY" href="c05_195.htm" title="Reference: utime"><img src="../gifs/txtnexta.gif" alt="Next: Reference: utime" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="NUTENTRY"><h2 class="nutentry"><a class="term" name="AUTOID-10856">use</A
></H2
><pre class="nutsynopsis">use <em class="emphasis">Module</EM
> <em class="emphasis">list</EM
>
use <em class="emphasis">version</EM
>
use <em class="emphasis">Module</EM
> <em class="emphasis">version</EM
> <em class="emphasis">list</EM
></PRE
><dl class="nutentrybody"><p class="para"><a class="indexterm" name="AUTOID-10867"></A
>If the first argument is a number, it is treated as a version number. If
the version of Perl is less than <em class="emphasis">version</EM
>, an error message is
printed and Perl exits.  This provides a way to check the Perl version
at compilation time, instead of waiting for runtime.</P
><p class="para">If <em class="emphasis">version</EM
> appears between <em class="emphasis">Module</EM
> and <em class="emphasis">list</EM
>, then <code class="literal">use</CODE
>
calls the <code class="literal">version</CODE
> method in class <em class="emphasis">Module</EM
> with 
<em class="emphasis">version</EM
> as an argument.</P
><p class="para">Otherwise, <code class="literal">use</CODE
> imports some semantics into
the current package
from the named <em class="emphasis">Module</EM
>, generally by aliasing certain subroutine or
variable names into your package. It is exactly equivalent to the following:


<blockquote class="screen"><pre class="screen">BEGIN { require <em class="emphasis">Module</EM
>; import <em class="emphasis">Module</EM
> <em class="emphasis">list</EM
>; }</PRE
></BLOCKQUOTE
>


The <code class="literal">BEGIN</CODE
> forces the <code class="literal">require</CODE
> and <code class="literal">import</CODE
> to
happen at compile time. The <code class="literal">require</CODE
> makes
sure that the module is loaded into memory if it hasn't been yet.
The <code class="literal">import</CODE
> is not a built-in function&nbsp;- it's just an ordinary static
method call into the package named by <em class="emphasis">Module</EM
> to tell
the module to import the list of features back into the current package. The
module can implement its import method any way it likes, though most modules
just choose to derive their import method via inheritance from the Exporter
class that is defined in the Exporter module.</P
><p class="para">If you don't want your namespace altered, explicitly supply an empty list:


<blockquote class="screen"><pre class="screen">use <em class="emphasis">Module</EM
> ();</PRE
></BLOCKQUOTE
>


That is exactly equivalent to the following:


<blockquote class="screen"><pre class="screen">BEGIN { require <em class="emphasis">Module</EM
>; }</PRE
></BLOCKQUOTE
>


Because this is a wide-open interface, pragmas (compiler directives)
are also implemented this way. See <a class="xref" href="ch08_01.htm" title="Standard Modules">Chapter 8</A
> for descriptions
of the currently implemented pragmas.
These pseudomodules typically import semantics into the current block scope, unlike
ordinary modules, which import symbols into the current package. (The
latter are
effective through the end of the file.)</P
><p class="para">There's a corresponding declaration, <code class="literal">no</CODE
>,
that &quot;unimports&quot; any meanings
originally imported by <code class="literal">use</CODE
>, but that have since become less important:


<blockquote class="screen"><pre class="screen">no integer;
no strict 'refs';</PRE
></BLOCKQUOTE
>
&#13;</P
></DL
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="NUTENTRY" href="c05_193.htm" title="Reference: untie"><img src="../gifs/txtpreva.gif" alt="Previous: Reference: untie" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="NUTENTRY" href="c05_195.htm" title="Reference: utime"><img src="../gifs/txtnexta.gif" alt="Next: Reference: utime" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">Reference: untie</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">Reference: utime</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
