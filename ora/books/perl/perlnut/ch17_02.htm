<html><head>
<title>[Chapter 17] 17.2 The LWP Modules</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:57:46Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch17_01.htm" title="17. The LWP Library"><link rel="prev" href="ch17_01.htm" title="17.1 LWP Overview"><link rel="next" href="ch17_03.htm#PNUT-CH-17-SECT-3.7" title="17.3 The HTTP Modules"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch17_01.htm" title="17.1 LWP Overview"><img src="../gifs/txtpreva.gif" alt="Previous: 17.1 LWP Overview" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch17_01.htm" title="17. The LWP Library">Chapter 17<br>The LWP Library</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch17_03.htm#PNUT-CH-17-SECT-3.7" title="17.3 The HTTP Modules"><img src="../gifs/txtnexta.gif" alt="Next: 17.3 The HTTP Modules" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PNUT-CH-17-SECT-2">17.2 The LWP Modules</A
></H2
><p class="para">The LWP modules provide the core of functionality for web programming in Perl. It
contains the foundations for networking applications, protocol implementations,
media type definitions, and debugging ability.</P
><p class="para"><a class="indexterm" name="AUTOID-33278"></A
><a class="indexterm" name="AUTOID-33281"></A
><a class="indexterm" name="AUTOID-33283"></A
><a class="indexterm" name="AUTOID-33287"></A
><a class="indexterm" name="AUTOID-33291"></A
>The modules LWP::Simple and LWP::UserAgent define client applications that implement network
connections, send requests, and receive response data from servers. LWP::RobotUA
is another client application that is used to build automated web searchers
following a specified set of guidelines.</P
><p class="para">LWP::UserAgent is the primary module used in applications built with LWP.
With it, you can build your own robust web client. It is also
the base class for the
Simple and RobotUA modules. 
These two modules provide a specialized set of
functions for creating clients.</P
><p class="para">Additional LWP modules provide the building blocks required for
web communications, but you often don't need to use them directly<a class="indexterm" name="AUTOID-33297"></A
>
in your applications. LWP::Protocol implements the actual socket connections
with the appropriate protocol. The most common protocol is HTTP, but mail protocols (like SMTP), 
FTP for file transfers, and others can be used across networks.</P
><p class="para"><a class="indexterm" name="AUTOID-33302"></A
><a class="indexterm" name="AUTOID-33306"></A
>LWP::MediaTypes implements the MIME definitions for media type identification and
mapping to file extensions. The LWP::Debug module provides functions to help you
debug your LWP applications.</P
><p class="para">The following sections describe the RobotUA, Simple, and UserAgent modules of LWP.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="PNUT-CH-17-SECT-2.1">17.2.1 LWP::RobotUA sections</A
></H3
><p class="para"><a class="indexterm" name="PNUT-CH-17-IX-LWP-LIBRARY-LWPROBOTUA-MODULE"></A
><a class="indexterm" name="PNUT-CH-17-IX-ROBOT-USER-AGENT"></A
>The Robot User Agent (LWP::RobotUA) is a subclass of LWP::UserAgent, and is used to create
robot client applications. A robot 
application requests resources in an automated fashion. Robots perform such activities as 
searching, mirroring, and surveying. Some robots collect statistics, while others wander the Web 
and summarize their findings for a search engine.</P
><p class="para">The LWP::RobotUA module defines methods to help program robot applications and
observes the Robot Exclusion Standards, which web server administrators can 
define on their web site to keep robots away from certain (or all) areas of the site.</P
><p class="para"><a class="indexterm" name="AUTOID-33322"></A
>The constructor for an LWP::RobotUA object looks like this:


<blockquote class="screen"><pre class="screen">$rob = LWP::RobotUA-&gt;new(<em class="emphasis">agent_name</EM
>, <em class="emphasis">email</EM
>, [$<em class="emphasis">rules</EM
>]);</PRE
></BLOCKQUOTE
>


The first parameter, <code class="replaceable"><i>agent_name</I
></CODE
>, is the user agent identifier 
that is used for the value of the User-Agent header 
in the request. The second parameter is the email address of the person using the robot, and the 
optional third parameter is a reference to a WWW::RobotRules object, which is used to store
the robot rules for a server. 
If you omit the third 
parameter, the LWP::RobotUA module requests the <em class="emphasis">robots.txt</EM
> file from every server it contacts, 
and then generates its own WWW::RobotRules object.</P
><p class="para">Since LWP::RobotUA is a subclass of LWP::UserAgent, the LWP::UserAgent
methods are used to perform the basic client activities. 
The following methods are defined by LWP::RobotUA for robot-related
functionality:
<ul class="nutlist"><li class="term"><a class="nutentry" href="c17_001.htm" title="Reference: as_string">as_string</A
></LI
><li class="term"><a class="nutentry" href="c17_002.htm" title="Reference: delay">delay</A
></LI
><li class="term"><a class="nutentry" href="c17_003.htm" title="Reference: host_wait">host_wait</A
></LI
><li class="term"><a class="nutentry" href="c17_004.htm" title="Reference: no_visits">no_visits</A
></LI
><li class="term"><a class="nutentry" href="c17_005.htm" title="Reference: rules">rules</A
></LI
></UL
><a class="indexterm" name="AUTOID-33390"></A
><a class="indexterm" name="AUTOID-33391"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PNUT-CH-17-SECT-2.2">17.2.2 LWP::Simple</A
></H3
><p class="para"><a class="indexterm" name="PNUT-CH-17-IX-LWP-LIBRARY-LWPSIMPLE-MODULE"></A
><a class="indexterm" name="PNUT-CH-17-IX-WEB-CLIENT-CREATING"></A
>LWP::Simple provides an easy-to-use interface for creating a web client, although it
is only capable of performing basic retrieving functions. An object constructor is not used
for this class; it defines functions to retrieve information from a specified URL
and interpret the status codes from the requests.</P
><p class="para">This module isn't named Simple for nothing. The following lines show how to use
it to get a web page and save it to a file:


<blockquote class="screen"><pre class="screen">use LWP::Simple;

$homepage = 'oreilly_com.html';
$status = getstore('http://www.oreilly.com/', $homepage);
print(&quot;hooray&quot;) if is_success($status);</PRE
></BLOCKQUOTE
>

<a class="indexterm" name="AUTOID-33403"></A
><a class="indexterm" name="AUTOID-33407"></A
>
The retrieving functions <code class="literal">get</CODE
> and <code class="literal">head</CODE
> return the URL's  contents and header
contents respectively. The other retrieving functions return the HTTP status code
of the request. The status codes are returned as the constants from the 
HTTP::Status module, which is also where the <code class="literal">is_success</CODE
> and <code class="literal">is_failure</CODE
> methods are obtained.
See <a class="xref" href="ch17_03.htm#PNUT-CH-17-SECT-3.7" title="HTTP::Status">Section 17.3.4, "HTTP::Status</A
>&quot; later in this chapter for a listing of the response codes.</P
><p class="para">The user-agent identifier produced by LWP::Simple is <code class="literal">LWP::Simple</CODE
><code class="replaceable"><i>/n.nn</I
></CODE
>, where <code class="replaceable"><i>n.nn</I
></CODE
>
is the version number of LWP being used.</P
><p class="para">The following list describes the functions exported by LWP::Simple:
<ul class="nutlist"><li class="term"><a class="nutentry" href="c17_006.htm" title="Reference: get">get</A
></LI
><li class="term"><a class="nutentry" href="c17_007.htm" title="Reference: getprint">getprint</A
></LI
><li class="term"><a class="nutentry" href="c17_008.htm" title="Reference: getstore">getstore</A
></LI
><li class="term"><a class="nutentry" href="c17_009.htm" title="Reference: head">head</A
></LI
><li class="term"><a class="nutentry" href="c17_010.htm" title="Reference: is_error">is_error</A
></LI
><li class="term"><a class="nutentry" href="c17_011.htm" title="Reference: is_success">is_success</A
></LI
><li class="term"><a class="nutentry" href="c17_012.htm" title="Reference: mirror">mirror</A
></LI
></UL
><a class="indexterm" name="AUTOID-33506"></A
><a class="indexterm" name="AUTOID-33507"></A
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PNUT-CH-17-SECT-2.3">17.2.3 LWP::UserAgent</A
></H3
><p class="para"><a class="indexterm" name="PNUT-CH-17-IX-USERAGENT-OBJECT"></A
><a class="indexterm" name="PNUT-CH-17-IX-LWP-LIBRARY-LWPUSERAGENT-MODULE"></A
><a class="indexterm" name="PNUT-CH-17-IX-REQUESTS-HTTP-USERAGENT-OBJECT-FOR"></A
>Requests over the network are performed with LWP::UserAgent objects. To create 
an LWP::UserAgent object, use:


<blockquote class="screen"><pre class="screen">$ua = new LWP::UserAgent;</PRE
></BLOCKQUOTE
>


You give the object a request, which it
uses to contact the server, and the information you requested is returned.<a class="indexterm" name="AUTOID-33521"></A
>
The most often used method in this module is <code class="literal">request</CODE
>, which contacts a server 
and returns the 
result of your query. Other methods in this module change the way <code class="literal">request</CODE
> behaves. 
You can change the timeout value, customize the value of the User-Agent header, or use a 
proxy server.</P
><p class="para">The following methods are supplied by LWP::UserAgent:
<ul class="nutlist"><li class="term"><a class="nutentry" href="c17_013.htm" title="Reference: request">request</A
></LI
><li class="term"><a class="nutentry" href="c17_014.htm" title="Reference: agent">agent</A
></LI
><li class="term"><a class="nutentry" href="c17_015.htm" title="Reference: clone">clone</A
></LI
><li class="term"><a class="nutentry" href="c17_016.htm" title="Reference: cookie_jar">cookie_jar</A
></LI
><li class="term"><a class="nutentry" href="c17_017.htm" title="Reference: credentials">credentials</A
></LI
><li class="term"><a class="nutentry" href="c17_018.htm" title="Reference: env_proxy">env_proxy</A
></LI
><li class="term"><a class="nutentry" href="c17_019.htm" title="Reference: from">from</A
></LI
><li class="term"><a class="nutentry" href="c17_020.htm" title="Reference: get_basic_credentials">get_basic_credentials</A
></LI
><li class="term"><a class="nutentry" href="c17_021.htm" title="Reference: is_protocol_supported">is_protocol_supported</A
></LI
><li class="term"><a class="nutentry" href="c17_022.htm" title="Reference: max_size">max_size</A
></LI
><li class="term"><a class="nutentry" href="c17_023.htm" title="Reference: mirror">mirror</A
></LI
><li class="term"><a class="nutentry" href="c17_024.htm" title="Reference: no_proxy">no_proxy</A
></LI
><li class="term"><a class="nutentry" href="c17_025.htm" title="Reference: parse_head">parse_head</A
></LI
><li class="term"><a class="nutentry" href="c17_026.htm" title="Reference: proxy">proxy</A
></LI
><li class="term"><a class="nutentry" href="c17_027.htm" title="Reference: timeout">timeout</A
></LI
><li class="term"><a class="nutentry" href="c17_028.htm" title="Reference: use_alarm">use_alarm</A
></LI
></UL
></P
><a class="indexterm" name="AUTOID-33769"></A
><a class="indexterm" name="AUTOID-33770"></A
><a class="indexterm" name="AUTOID-33771"></A
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch17_01.htm" title="17.1 LWP Overview"><img src="../gifs/txtpreva.gif" alt="Previous: 17.1 LWP Overview" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch17_03.htm#PNUT-CH-17-SECT-3.7" title="17.3 The HTTP Modules"><img src="../gifs/txtnexta.gif" alt="Next: 17.3 The HTTP Modules" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">17.1 LWP Overview</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">17.3 The HTTP Modules</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
