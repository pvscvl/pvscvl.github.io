<html><head>
<title>[Chapter 12] Databases and Perl</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:56:07Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="part05.htm" title="V. Databases"><link rel="prev" href="part05.htm" title="V. Databases"><link rel="next" href="ch12_02.htm#PNUT-CH-12-SECT-2.3" title="12.2 Design of DBI"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="PART" href="part05.htm" title="V. Databases"><img src="../gifs/txtpreva.gif" alt="Previous: V. Databases" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 12</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch12_02.htm#PNUT-CH-12-SECT-2.3" title="12.2 Design of DBI"><img src="../gifs/txtnexta.gif" alt="Next: 12.2 Design of DBI" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="CHAPTER"><h1 class="chapter"><a class="title" name="PNUT-CH-12">12. Databases and Perl</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="SECT1" href="#PNUT-CH-12-SECT-1" title="12.1 DBM Databases and DBM Hashes">DBM Databases and DBM Hashes</A
><br><a class="SECT1" href="ch12_02.htm#PNUT-CH-12-SECT-2.3" title="12.2 Design of DBI">Design of DBI</A
><br><a class="SECT1" href="ch12_03.htm" title="12.3 DBI Methods">DBI Methods</A
><br><a class="SECT1" href="ch12_04.htm" title="12.4 DBI Environment Variables">DBI Environment Variables</A
></P
><p></P
></DIV
><p class="para">Since one of Perl's greatest strengths is working with text, 
a genuine concern is how to store data.
Flat files are one possibility, but don't scale very well, to
say the least.  Instead, you'll need to use a database.  </P
><p class="para"><a class="indexterm" name="PNUT-CH-12-IX-DATABASES"></A
>There are two general solutions to using databases with Perl.
For simple database purposes, DBM (Database Management)
will serve your needs.  DBM 
is a library supported by many (if not all) Unix systems
and many non-Unix systems as well.  If you use DBM with Perl,
you can manipulate databases just like any hash.  </P
><p class="para">For more elaborate databases with SQL interfaces, you can
get a complete database product or shareware equivalent
(depending on your needs) and <a class="indexterm" name="AUTOID-27169"></A
><a class="indexterm" name="AUTOID-27171"></A
>
use DBI and DBD.  DBI is a module
that provides a consistent interface for database solutions.
A DBD is a database-specific driver that translates DBI 
calls as needed for that database.  </P
><p class="para">In this chapter, we'll quickly cover DBM and then talk more
at length about DBI/DBD.</P
><div class="sect1"><h2 class="sect1"><a class="title" name="PNUT-CH-12-SECT-1">12.1 DBM Databases and DBM Hashes</A
></H2
><p class="para"><a class="indexterm" name="PNUT-CH-12-IX-DBM-DATABASE-MANAGEMENT-FACILITY"></A
><a class="indexterm" name="PNUT-CH-12-IX-DATABASES-DBM-DATABASE-MANAGEMENT-FACILITY"></A
>DBM is a 
simple database management facility for Unix systems.
It allows programs to store a collection of 
key-value pairs in binary form, thus providing
rudimentary database support for Perl.  Practically
all Unix systems support DBM, and for those that don't,
you can get Berkeley DB from <a class="systemitem.sitename" href="../../../../../../../www.sleepycat.com/db">http://www.sleepycat.com/db</A
>.</P
><p class="para">To use DBM databases in Perl, you can associate
a hash with a DBM database through a process similar to 
opening a file. This hash (called a DBM array) is 
then used to access and modify 
the DBM database. <a class="indexterm" name="AUTOID-27184"></A
>
To associate a DBM database with a DBM array, you can use either the
<code class="literal">dbmopen</CODE
> function or the 
<code class="literal">tie</CODE
> function with a DBM-style
module. (<code class="literal">dbmopen</CODE
> is actually just a front-end to <code class="literal">tie</CODE
>.)
For example, with <code class="literal">dbmopen</CODE
>:


<blockquote class="screen"><pre class="screen">dbmopen(%ARRAYNAME, &quot;dbmfilename&quot;, $mode);</PRE
></BLOCKQUOTE
>


or (using <code class="literal">tie</CODE
> with the DB_File module):


<blockquote class="screen"><pre class="screen">use DB_File;
tie(%ARRAYNAME, &quot;DB_File&quot;, &quot;dbmfilename&quot;);</PRE
></BLOCKQUOTE
>


The <code class="literal">%ARRAYNAME</CODE
> parameter is a Perl hash. (If it already has values, the 
values are discarded.) This hash becomes connected to the DBM database called 
<code class="literal">dbmfilename</CODE
>. This database
may be stored on 
disk as a single file, or as two files called <em class="emphasis">dbmfilename.dir</EM
> and 
<em class="emphasis">dbmfilename.pag</EM
>, depending on the DBM implementation.</P
><p class="para">The <code class="literal">$mode</CODE
> parameter is a number that controls the permissions of 
the pair of files if the files need to be created. The number is 
typically specified in octal.
If the files already exist, this parameter 
has no effect. For example:


<blockquote class="screen"><pre class="screen">dbmopen(%BOOKS, &quot;bookdb&quot;, 0666); # open %BOOKS onto bookdb</PRE
></BLOCKQUOTE
>

<a class="indexterm" name="AUTOID-27201"></A
>
This invocation associates the hash <code class="literal">%BOOKS</CODE
> with the disk files <em class="emphasis">bookdb.dir</EM
> and 
<em class="emphasis">bookdb.pag</EM
> in the current directory. If the files don't already exist, they are 
created with a mode of 0666, modified by the current <em class="emphasis">umask</EM
>.</P
><p class="para">The return value from <code class="literal">dbmopen</CODE
> is true if the database could be opened or 
created, and false otherwise, just like the <code class="literal">open</CODE
> function. If you don't want the 
files created, use a <code class="literal">$mode</CODE
> value of <code class="literal">undef</CODE
>. </P
><p class="para">Once the database is opened, anything you do to the DBM hash is
immediately written to the database.  See <a class="xref" href="ch04_01.htm" title="The Perl Language">Chapter 4, <cite class="chapter">The Perl Language</CITE
></A
>, for more
information on hashes.


<blockquote class="screen"><pre class="screen">dbmopen(%BOOKS, &quot;bookdb&quot;, 0666) || die &quot;Can't open database bookdb!&quot;;
$BOOKS{&quot;1-56592-286-7&quot;} = &quot;Perl in a Nutshell&quot;;</PRE
></BLOCKQUOTE
>


The DBM array stays open throughout the program. When the program termi-
nates, the association is terminated. You can also break the association in a 
manner similar to closing a filehandle, by using the <code class="literal">dbmclose</CODE
>
function (or <code class="literal">untie</CODE
> if you used
<code class="literal">tie</CODE
>). See <a class="xref" href="ch05_01.htm" title="Function Reference">Chapter 5, <cite class="chapter">Function Reference</CITE
></A
>, for more information on <code class="literal">dbmclose</CODE
>,
<code class="literal">dbmopen</CODE
>, and <code class="literal">tie</CODE
>.  <a class="indexterm" name="AUTOID-27222"></A
><a class="indexterm" name="AUTOID-27223"></A
></P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="PART" href="part05.htm" title="V. Databases"><img src="../gifs/txtpreva.gif" alt="Previous: V. Databases" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch12_02.htm#PNUT-CH-12-SECT-2.3" title="12.2 Design of DBI"><img src="../gifs/txtnexta.gif" alt="Next: 12.2 Design of DBI" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">V. Databases</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">12.2 Design of DBI</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
