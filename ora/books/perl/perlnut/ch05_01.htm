<html><head>
<title>[Chapter 5] Function Reference</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:33:38Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="part02.htm" title="II. Language Basics"><link rel="prev" href="ch04_11.htm#PNUT-CH-4-SECT-11.0.2" title="4.11 Pod"><link rel="next" href="ch05_02.htm" title="5.2 Perl Functions in Alphabetical Order"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch04_11.htm#PNUT-CH-4-SECT-11.0.2" title="4.11 Pod"><img src="../gifs/txtpreva.gif" alt="Previous: 4.11 Pod" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 5</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch05_02.htm" title="5.2 Perl Functions in Alphabetical Order"><img src="../gifs/txtnexta.gif" alt="Next: 5.2 Perl Functions in Alphabetical Order" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="CHAPTER"><h1 class="chapter"><a class="title" name="PNUT-CH-5">5. Function Reference</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="SECT1" href="#PNUT-CH-5-SECT-1" title="5.1 Perl Functions by Category">Perl Functions by Category</A
><br><a class="SECT1" href="ch05_02.htm" title="5.2 Perl Functions in Alphabetical Order">Perl Functions in Alphabetical Order</A
></P
><p></P
></DIV
><p class="para">This chapter gives a brief description of Perl's built-in functions.
Each description gives the syntax of the function, with the
types and order of its arguments.<a class="indexterm" name="PNUT-CH-5-IX-BUILT-IN-FUNCTIONS"></A
><a class="indexterm" name="PNUT-CH-5-IX-FUNCTIONS-BUILT-IN"></A
></P
><p class="para">Required arguments are shown in italics, separated by commas. 
If an argument must
be a specific variable type, that variable's identifier will
be used (i.e., a percent sign for a hash, <code class="literal">%</CODE
><code class="replaceable"><i>hash</I
></CODE
>).
Optional arguments are placed in brackets. Do not actually use
the brackets in your function calls unless you really want to
use an anonymous hash reference.</P
><p class="para">There are different ways to use 
a built-in function. For starters, any argument
that requires a scalar value can be made up of any expression that
returns one. For example, you can obtain the square root of the
first value in an array:


<blockquote class="screen"><pre class="screen">$root = sqrt (shift @numbers);</PRE
></BLOCKQUOTE
>


<code class="literal">shift</CODE
> removes the first element of <code class="literal">@numbers</CODE
>
and returns it to be used by <code class="literal">sqrt</CODE
>.</P
><p class="para">Many functions take a list of scalars for arguments. Any 
array variable or other expression that returns a list can
be used for all or part of the arguments. For example:


<blockquote class="screen"><pre class="screen">chmod (split /,/ FILELIST&gt;); # an expression returns a list
chmod 0755, @executables;    # array used for part of arguments</PRE
></BLOCKQUOTE
>


In the first line, the <code class="literal">split</CODE
> expression reads a string
from a filehandle and splits it into a list. The list provides
proper arguments for <code class="literal">chmod</CODE
>.
The second line uses an array that contains a list of filenames
for <code class="literal">chmod</CODE
> to act upon.</P
><p class="para"><a class="indexterm" name="AUTOID-7091"></A
><a class="indexterm" name="AUTOID-7094"></A
>Parentheses are not required around a function's arguments.
However, without parentheses, functions are viewed as operators
in an expression (the same is true of predeclared subroutines).
If you use a function in a complex expression, you may want to use
parentheses for clarity. 
See <a class="xref" href="ch04_01.htm" title="The Perl Language">Chapter 4, <cite class="chapter">The Perl Language</CITE
></A
>, for more about precedence
in Perl expressions.</P
><div class="sect1"><h2 class="sect1"><a class="title" name="PNUT-CH-5-SECT-1">5.1 Perl Functions by Category</A
></H2
><p class="para"><a class="indexterm" name="PNUT-CH-5-IX-FUNCTIONS-BUILT-IN-LISTED-BY-CATEGORY"></A
><a class="indexterm" name="PNUT-CH-5-IX-BUILT-IN-FUNCTIONS-LISTED-BY-CATEGORY"></A
>Here are Perl's functions and function-like keywords, arranged by
category. Note that some functions appear under more than one heading.<a class="indexterm" name="AUTOID-7107"></A
></P
><dl class="variablelist"><dt class="term">Scalar manipulation</DT
><dd class="listitem"><p class="para"><code class="literal">chomp</CODE
>, <code class="literal">chop</CODE
>, <code class="literal">chr</CODE
>, <code class="literal">crypt</CODE
>, <code class="literal">hex</CODE
>, <code class="literal">index</CODE
>,
<code class="literal">lc</CODE
>, <code class="literal">lcfirst</CODE
>, <code class="literal">length</CODE
>, <code class="literal">oct</CODE
>, <code class="literal">ord</CODE
>, <code class="literal">pack</CODE
>,
<code class="literal">q//</CODE
>,
<code class="literal">qq//</CODE
>,
<code class="literal">reverse</CODE
>, <code class="literal">rindex</CODE
>, <code class="literal">sprintf</CODE
>,
<code class="literal">substr</CODE
>, 
<code class="literal">tr///</CODE
>,
<code class="literal">uc</CODE
>, <code class="literal">ucfirst</CODE
>, <code class="literal">y///</CODE
></P
></DD
><dt class="term">Regular expressions and pattern matching</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7141"></A
><a class="indexterm" name="AUTOID-7144"></A
><code class="literal">m//</CODE
>,
<code class="literal">pos</CODE
>, <code class="literal">qr//</CODE
>, <code class="literal">quotemeta</CODE
>, <code class="literal">s///</CODE
>, <code class="literal">split</CODE
>, <code class="literal">study</CODE
></P
></DD
><dt class="term">Numeric functions</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7157"></A
><code class="literal">abs</CODE
>, <code class="literal">atan2</CODE
>, <code class="literal">cos</CODE
>, <code class="literal">exp</CODE
>, <code class="literal">hex</CODE
>, <code class="literal">int</CODE
>,
<code class="literal">log</CODE
>, <code class="literal">oct</CODE
>, <code class="literal">rand</CODE
>, <code class="literal">sin</CODE
>, <code class="literal">sqrt</CODE
>, <code class="literal">srand</CODE
></P
></DD
><dt class="term">Array processing</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7176"></A
><code class="literal">pop</CODE
>, <code class="literal">push</CODE
>, <code class="literal">shift</CODE
>, <code class="literal">splice</CODE
>, <code class="literal">unshift</CODE
></P
></DD
><dt class="term">List processing</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7188"></A
><code class="literal">grep</CODE
>, <code class="literal">join</CODE
>, <code class="literal">map</CODE
>, 
<code class="literal">qw//</CODE
>,
<code class="literal">reverse</CODE
>, <code class="literal">sort</CODE
>,
<code class="literal">unpack</CODE
></P
></DD
><dt class="term">Hash processing</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7202"></A
><code class="literal">delete</CODE
>, <code class="literal">each</CODE
>, <code class="literal">exists</CODE
>, <code class="literal">keys</CODE
>, <code class="literal">values</CODE
></P
></DD
><dt class="term">Input and output</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7214"></A
><a class="indexterm" name="AUTOID-7216"></A
></P
><p class="para"><code class="literal">binmode</CODE
>, <code class="literal">close</CODE
>, <code class="literal">closedir</CODE
>, <code class="literal">dbmclose</CODE
>, <code class="literal">dbmopen</CODE
>,
<code class="literal">die</CODE
>, <code class="literal">eof</CODE
>, <code class="literal">fileno</CODE
>, <code class="literal">flock</CODE
>, <code class="literal">format</CODE
>, <code class="literal">getc</CODE
>,
<code class="literal">print</CODE
>, <code class="literal">printf</CODE
>, <code class="literal">read</CODE
>, <code class="literal">readdir</CODE
>, <code class="literal">rewinddir</CODE
>,
<code class="literal">seek</CODE
>, <code class="literal">seekdir</CODE
>, <code class="literal">select</CODE
>, <code class="literal">syscall</CODE
>, <code class="literal">sysread</CODE
>, <code class="literal">sysseek</CODE
>, 
<code class="literal">syswrite</CODE
>, <code class="literal">tell</CODE
>, <code class="literal">telldir</CODE
>, <code class="literal">truncate</CODE
>, <code class="literal">warn</CODE
>,
<code class="literal">write</CODE
></P
></DD
><dt class="term">Fixed-length data and records</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7252"></A
><a class="indexterm" name="AUTOID-7254"></A
><code class="literal">pack</CODE
>, <code class="literal">read</CODE
>, <code class="literal">syscall</CODE
>, <code class="literal">sysread</CODE
>, <code class="literal">syswrite</CODE
>,
<code class="literal">unpack</CODE
>, <code class="literal">vec</CODE
></P
></DD
><dt class="term">Filehandles, files, and directories</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7267"></A
><a class="indexterm" name="AUTOID-7270"></A
><a class="indexterm" name="AUTOID-7272"></A
><a class="indexterm" name="AUTOID-7275"></A
><code class="literal">chdir</CODE
>, <code class="literal">chmod</CODE
>, <code class="literal">chown</CODE
>, <code class="literal">chroot</CODE
>, <code class="literal">fcntl</CODE
>,
<code class="literal">glob</CODE
>, <code class="literal">ioctl</CODE
>, <code class="literal">link</CODE
>, <code class="literal">lstat</CODE
>, <code class="literal">mkdir</CODE
>, <code class="literal">open</CODE
>,
<code class="literal">opendir</CODE
>, <code class="literal">readlink</CODE
>, <code class="literal">rename</CODE
>, <code class="literal">rmdir</CODE
>, <code class="literal">stat</CODE
>,
<code class="literal">symlink</CODE
>, <code class="literal">sysopen</CODE
>, <code class="literal">umask</CODE
>, <code class="literal">unlink</CODE
>, <code class="literal">utime</CODE
></P
></DD
><dt class="term">Flow of program control</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7303"></A
><a class="indexterm" name="AUTOID-7305"></A
><code class="literal">caller</CODE
>, <code class="literal">continue</CODE
>, <code class="literal">die</CODE
>, <code class="literal">do</CODE
>, <code class="literal">dump</CODE
>, <code class="literal">eval</CODE
>,
<code class="literal">exit</CODE
>, <code class="literal">goto</CODE
>, <code class="literal">last</CODE
>, <code class="literal">next</CODE
>, <code class="literal">redo</CODE
>, <code class="literal">return</CODE
>,
<code class="literal">sub</CODE
>, <code class="literal">wantarray</CODE
></P
></DD
><dt class="term">Scoping</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7325"></A
><a class="indexterm" name="AUTOID-7328"></A
><code class="literal">caller</CODE
>, <code class="literal">import</CODE
>, <code class="literal">local</CODE
>, <code class="literal">my</CODE
>, <code class="literal">package</CODE
>, <code class="literal">use</CODE
></P
></DD
><dt class="term">Miscellaneous</DT
><dd class="listitem"><p class="para"><code class="literal">defined</CODE
>, <code class="literal">dump</CODE
>, <code class="literal">eval</CODE
>, <code class="literal">formline</CODE
>, <code class="literal">local</CODE
>,
<code class="literal">my</CODE
>, <code class="literal">prototype</CODE
>,
<code class="literal">reset</CODE
>, <code class="literal">scalar</CODE
>, <code class="literal">undef</CODE
>, <code class="literal">wantarray</CODE
></P
></DD
><dt class="term">Processes and process groups</DT
><dd class="listitem"><p class="para"><code class="literal">alarm</CODE
>, <code class="literal">exec</CODE
>, <code class="literal">fork</CODE
>, <code class="literal">getpgrp</CODE
>, <code class="literal">getppid</CODE
>,
<code class="literal">getpriority</CODE
>, <code class="literal">kill</CODE
>, <code class="literal">pipe</CODE
>, <code class="literal">qx//</CODE
>, <code class="literal">setpgrp</CODE
>,
<code class="literal">setpriority</CODE
>, <code class="literal">sleep</CODE
>, <code class="literal">system</CODE
>, <code class="literal">times</CODE
>, <code class="literal">wait</CODE
>,
<code class="literal">waitpid</CODE
></P
></DD
><dt class="term">Library modules</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7377"></A
><code class="literal">do</CODE
>, <code class="literal">import</CODE
>, <code class="literal">no</CODE
>, <code class="literal">package</CODE
>, <code class="literal">require</CODE
>, <code class="literal">use</CODE
></P
></DD
><dt class="term">Classes and objects</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7389"></A
><a class="indexterm" name="AUTOID-7391"></A
><code class="literal">bless</CODE
>, <code class="literal">dbmclose</CODE
>, <code class="literal">dbmopen</CODE
>, <code class="literal">package</CODE
>, <code class="literal">ref</CODE
>,
<code class="literal">tie</CODE
>, <code class="literal">tied</CODE
>, <code class="literal">untie</CODE
>, <code class="literal">use</CODE
></P
></DD
><dt class="term">Low-level socket access</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7407"></A
><a class="indexterm" name="AUTOID-7410"></A
><code class="literal">accept</CODE
>, <code class="literal">bind</CODE
>, <code class="literal">connect</CODE
>, <code class="literal">getpeername</CODE
>, <code class="literal">getsockname</CODE
>,
<code class="literal">getsockopt</CODE
>, <code class="literal">listen</CODE
>, <code class="literal">recv</CODE
>, <code class="literal">send</CODE
>, <code class="literal">setsockopt</CODE
>,
<code class="literal">shutdown</CODE
>, <code class="literal">socket</CODE
>, <code class="literal">socketpair</CODE
></P
></DD
><dt class="term">System V interprocess communication</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7429"></A
><a class="indexterm" name="AUTOID-7432"></A
><code class="literal">msgctl</CODE
>, <code class="literal">msgget</CODE
>, <code class="literal">msgrcv</CODE
>, <code class="literal">msgsnd</CODE
>, <code class="literal">semctl</CODE
>,
<code class="literal">semget</CODE
>, <code class="literal">semop</CODE
>, <code class="literal">shmctl</CODE
>, <code class="literal">shmget</CODE
>, <code class="literal">shmread</CODE
>,
<code class="literal">shmwrite</CODE
></P
></DD
><dt class="term">Fetching user and group information</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7449"></A
><a class="indexterm" name="AUTOID-7451"></A
><code class="literal">endgrent</CODE
>, <code class="literal">endhostent</CODE
>, <code class="literal">endnetent</CODE
>, <code class="literal">endpwent</CODE
>,
<code class="literal">getgrent</CODE
>, <code class="literal">getgrgid</CODE
>, <code class="literal">getgrnam</CODE
>, <code class="literal">getlogin</CODE
>,
<code class="literal">getpwent</CODE
>, <code class="literal">getpwnam</CODE
>, <code class="literal">getpwuid</CODE
>, <code class="literal">setgrent</CODE
>,
<code class="literal">setpwent</CODE
></P
></DD
><dt class="term">Fetching network information</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7470"></A
><code class="literal">endprotoent</CODE
>, <code class="literal">endservent</CODE
>, <code class="literal">gethostbyaddr</CODE
>, <code class="literal">gethostbyname</CODE
>,
<code class="literal">gethostent</CODE
>, <code class="literal">getnetbyaddr</CODE
>, <code class="literal">getnetbyname</CODE
>, <code class="literal">getnetent</CODE
>,
<code class="literal">getprotobyname</CODE
>, <code class="literal">getprotobynumber</CODE
>, <code class="literal">getprotoent</CODE
>,
<code class="literal">getservbyname</CODE
>, <code class="literal">getservbyport</CODE
>, <code class="literal">getservent</CODE
>, <code class="literal">sethostent</CODE
>,
<code class="literal">setnetent</CODE
>, <code class="literal">setprotoent</CODE
>, <code class="literal">setservent</CODE
></P
></DD
><dt class="term">Time</DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-7495"></A
><a class="indexterm" name="AUTOID-7498"></A
><code class="literal">gmtime</CODE
>, <code class="literal">localtime</CODE
>, <code class="literal">time</CODE
>,
<code class="literal">times</CODE
></P
></DD
></DL
><a class="indexterm" name="AUTOID-7505"></A
><a class="indexterm" name="AUTOID-7506"></A
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch04_11.htm#PNUT-CH-4-SECT-11.0.2" title="4.11 Pod"><img src="../gifs/txtpreva.gif" alt="Previous: 4.11 Pod" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch05_02.htm" title="5.2 Perl Functions in Alphabetical Order"><img src="../gifs/txtnexta.gif" alt="Next: 5.2 Perl Functions in Alphabetical Order" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">4.11 Pod</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">5.2 Perl Functions in Alphabetical Order</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
