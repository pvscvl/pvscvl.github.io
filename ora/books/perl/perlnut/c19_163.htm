<html><head>
<title>Reference: new</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T02:00:25Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch19_18.htm#PNUT-CH-19-SECT-18.4" title="19.18 OLE Automation"><link rel="prev" href="ch19_18.htm#PNUT-CH-19-SECT-18.4" title="19.18 OLE Automation"><link rel="next" href="c19_164.htm" title="Reference: GetActiveObject"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch19_18.htm#PNUT-CH-19-SECT-18.4" title="19.18 OLE Automation"><img src="../gifs/txtpreva.gif" alt="Previous: 19.18 OLE Automation" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch19_01.htm" title="19. Win32 Modules and Extensions">Chapter 19<br>Win32 Modules and Extensions</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="NUTENTRY" href="c19_164.htm" title="Reference: GetActiveObject"><img src="../gifs/txtnexta.gif" alt="Next: Reference: GetActiveObject" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="NUTENTRY"><h2 class="nutentry"><a class="term" name="AUTOID-44643">new</A
></H2
><pre class="nutsynopsis"><b class="emphasis.bold">Win32::OLE-&gt;new</B
>(<em class="emphasis">progid</EM
>, [<em class="emphasis">destructor</EM
>])</PRE
><dl class="nutentrybody"><p class="para"><a class="indexterm" name="AUTOID-44651"></A
>Creates a new automation object. This method always creates
a new instance of the server, even if a previous instance of
the server is running. If the object cannot be created, <code class="literal">new</CODE
>
returns <code class="literal">undef</CODE
>.</P
><p class="para"><em class="emphasis">progid</EM
>, the program identifier (ProgID), is a string that uniquely
identifies an automation object. <em class="emphasis">progid</EM
> is used to look up
the object's class ID (CLSID), which is stored in the registry.</P
><p class="para">The second, optional argument to the <code class="literal">new</CODE
> method describes
a way to destroy the object in case the Perl program dies unexpectedly.
<em class="emphasis">destructor</EM
> can be either a string with the name of the defined
OLE destructor method, or a code reference that will destroy the
object. You should use some form of destructor to close out all
your objects, for they can be extremely expensive in terms of system
resources. You can explicitly destroy an object using the <code class="literal">undef</CODE
> function.
If you don't explicitly destroy the object, Perl takes care of it for
you when the last reference to the object goes away.</P
><p class="para">Here is what <code class="literal">new</CODE
> would look like with the destructor arguments:


<blockquote class="screen"><pre class="screen"># Quit is the OLE-defined destructor method
$x1 = Win32::OLE-&gt;new(&quot;Excel.Application&quot;, 'Quit');

# The object reference is the first argument ($_[0]) passed to new.
# The code reference will undef it to destroy the object.
$x2 = Win32::OLE-&gt;new(&quot;Excel.Application&quot;, sub{undef $_[0];})</PRE
></BLOCKQUOTE
>


Notice that we're supplying Excel.Application as the ProgID.
Excel supports several different automation objects, including an
Application object, WorkBook objects, and several more. You don't
necessarily have to create the top-level object (Application, in this
case) when dealing with automation objects (this is determined by
the automation server). In Excel's case, we could have directly created
a WorkSheet object (e.g., Excel.Sheet) or a Chart object, for example.</P
></DL
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch19_18.htm#PNUT-CH-19-SECT-18.4" title="19.18 OLE Automation"><img src="../gifs/txtpreva.gif" alt="Previous: 19.18 OLE Automation" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="NUTENTRY" href="c19_164.htm" title="Reference: GetActiveObject"><img src="../gifs/txtnexta.gif" alt="Next: Reference: GetActiveObject" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">19.18 OLE Automation</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">Reference: GetActiveObject</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
