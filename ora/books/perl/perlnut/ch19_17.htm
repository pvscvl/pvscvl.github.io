<html><head>
<title>[Chapter 19] 19.17 Win32 Extensions</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T02:00:21Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch19_01.htm" title="19. Win32 Modules and Extensions"><link rel="prev" href="ch19_16.htm" title="19.16 Win32::Shortcut"><link rel="next" href="ch19_18.htm#PNUT-CH-19-SECT-18.4" title="19.18 OLE Automation"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch19_16.htm" title="19.16 Win32::Shortcut"><img src="../gifs/txtpreva.gif" alt="Previous: 19.16 Win32::Shortcut" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch19_01.htm" title="19. Win32 Modules and Extensions">Chapter 19<br>Win32 Modules and Extensions</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch19_18.htm#PNUT-CH-19-SECT-18.4" title="19.18 OLE Automation"><img src="../gifs/txtnexta.gif" alt="Next: 19.18 OLE Automation" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PNUT-CH-19-SECT-17">19.17 Win32 Extensions</A
></H2
><p class="para">In addition to the modules listed above, Perl for Win32 can use an additional
set of functions from the Win32 extension. These functions provide useful
tools for some Windows-specific tasks that don't require their own modules.
They are exported from the Win32 package with:


<blockquote class="screen"><pre class="screen">use Win32;</PRE
></BLOCKQUOTE
>


Many of these functions do not take arguments, and they return the value (or values)
of the requested information, unless otherwise noted.</P
><dl class="variablelist"><dt class="term"><code class="literal">Win32::GetLastError()</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44350"></A
>Returns the last error value generated by a call to a Win32 API function.</P
></DD
><dt class="term"><code class="literal">Win32::OLELastError()</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44358"></A
>Returns the last error value generated by a call to a Win32 OLE API function.</P
></DD
><dt class="term"><code class="literal">Win32::BuildNumber()</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44366"></A
>Returns the build number of Perl for Win32.</P
></DD
><dt class="term"><code class="literal">Win32::LoginName()</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44374"></A
>Returns the username of the owner of the current Perl process. </P
></DD
><dt class="term"><code class="literal">Win32::NodeName()</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44382"></A
>Returns the Microsoft network node-name of the current machine. </P
></DD
><dt class="term"><code class="literal">Win32::DomainName()</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44390"></A
>Returns the name of the Microsoft network domain that the owner of the current 
Perl process is logged into.</P
></DD
><dt class="term"><code class="literal">Win32::FsType()</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44398"></A
>Returns a string naming the filesystem type of the currently active drive.</P
></DD
><dt class="term"><code class="literal">Win32::GetCwd()</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44406"></A
>Returns the current active drive and directory. This function does not return 
a UNC path, since the functionality required for such a feature 
is not available under Windows 95.</P
></DD
><dt class="term"><code class="literal">Win32::SetCwd(<code class="replaceable"><i>newdir</I
></CODE
>)</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44415"></A
>Sets the current active drive and directory to <code class="replaceable"><i>newdir</I
></CODE
>. This function does not work with 
UNC paths, since the functionality required for such a feature is 
not available under Windows 95.</P
></DD
><dt class="term"><code class="literal">Win32::GetOSVersion()</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44424"></A
>Returns a list of elements describing the version of the operating system.
The elements of the list are: an arbitrary descriptive string, the major version number of the 
operating system, the minor version number, the build number, and a digit indicating 
the actual operating system, which will be <code class="literal">0</CODE
> for Win32s, <code class="literal">1</CODE
> for Windows 95,
and <code class="literal">2</CODE
> for Windows NT. For example:


<blockquote class="screen"><pre class="screen">use Win32;
($string, $major, $minor, $build, $id) = Win32::GetOSVersion();</PRE
></BLOCKQUOTE
>
&#13;</P
></DD
><dt class="term"><code class="literal">Win32::FormatMessage(<code class="replaceable"><i>error</I
></CODE
>)</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44437"></A
>Converts the Win32 error number supplied by <code class="replaceable"><i>error</I
></CODE
>
into a descriptive string. The error number can be retrieved using
<code class="literal">Win32::GetLastError</CODE
> or <code class="literal">Win32::OLELastError</CODE
>.</P
></DD
><dt class="term"><code class="literal">Win32::Spawn(<code class="replaceable"><i>command</I
></CODE
>, <code class="replaceable"><i>args</I
></CODE
>, <code class="replaceable"><i>$pid</I
></CODE
>)</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44451"></A
>Spawns a new process for the given <code class="replaceable"><i>command</I
></CODE
>, passing the arguments in <code class="replaceable"><i>args</I
></CODE
>.
The ID of the new process in saved in the variable named by <code class="replaceable"><i>pid</I
></CODE
>.</P
></DD
><dt class="term"><code class="literal">Win32::LookupAccountName(<code class="replaceable"><i>sys</I
></CODE
>, <code class="replaceable"><i>acct</I
></CODE
>, <code class="replaceable"><i>$domain</I
></CODE
>, <code class="replaceable"><i>$sid</I
></CODE
>, <code class="replaceable"><i>$type</I
></CODE
>)</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44467"></A
>Returns the domain name, SID, and SID type to the specified variables for the account
<code class="replaceable"><i>acct</I
></CODE
> on system <code class="replaceable"><i>sys</I
></CODE
>.</P
></DD
><dt class="term"><code class="literal">Win32::LookupAccountSID(<code class="replaceable"><i>sys</I
></CODE
>, <code class="replaceable"><i>sid</I
></CODE
>, <code class="replaceable"><i>$acct</I
></CODE
>, <code class="replaceable"><i>$domain</I
></CODE
>, <code class="replaceable"><i>$type</I
></CODE
>)</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44482"></A
>Returns the account name, domain name, and SID type to the specified variables for
the SID <code class="replaceable"><i>sid</I
></CODE
> on system <code class="replaceable"><i>sys</I
></CODE
>.</P
></DD
><dt class="term"><code class="literal">Win32::InitiateSystemShutdown(<code class="replaceable"><i>machine</I
></CODE
>, <code class="replaceable"><i>message</I
></CODE
>, <code class="replaceable"><i>timeout</I
></CODE
>, <code class="replaceable"><i>forceclose</I
></CODE
>, <code class="replaceable"><i>reboot</I
></CODE
>)</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44497"></A
>Shuts down the specified <code class="replaceable"><i>machine</I
></CODE
> in the specified <code class="replaceable"><i>timeout</I
></CODE
> interval. <code class="replaceable"><i>message</I
></CODE
>
is broadcast to all users.
If <code class="replaceable"><i>forceclose</I
></CODE
> is true, all documents are closed (forcefully) without prompting the user.
If <code class="replaceable"><i>reboot</I
></CODE
> is true, the machine is rebooted.</P
></DD
><dt class="term"><code class="literal">Win32::AbortSystemShutdown(<code class="replaceable"><i>machine</I
></CODE
>)</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44511"></A
>Aborts a shutdown on the specified <code class="replaceable"><i>machine</I
></CODE
>.</P
></DD
><dt class="term"><code class="literal">Win32::GetTickCount()</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44520"></A
>Returns the Win32 tick count.</P
></DD
><dt class="term"><code class="literal">Win32::IsWinNT()</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44528"></A
>Returns true (non-zero) if the Win32 subsystem is Windows NT.</P
></DD
><dt class="term"><code class="literal">Win32::IsWin95()</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44536"></A
>Returns true (non-zero) if the Win32 subsystem is Windows 95.</P
></DD
><dt class="term"><code class="literal">Win32::ExpandEnvironmentStrings(<code class="replaceable"><i>envstring</I
></CODE
>)</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44545"></A
>Returns a string in which any environment variables in the given <code class="replaceable"><i>envstring</I
></CODE
>
are replaced with their values.</P
></DD
><dt class="term"><code class="literal">Win32::GetShortPathName(<code class="replaceable"><i>longpathname</I
></CODE
>)</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44555"></A
>Returns the short (8.3) path name of <code class="replaceable"><i>longpathname</I
></CODE
>.</P
></DD
><dt class="term"><code class="literal">Win32::GetNextAvailDrive()</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44564"></A
>Returns a string in the form of <code class="literal">&quot;<code class="replaceable"><i>d</I
></CODE
>:\&quot;</CODE
>, where <code class="replaceable"><i>d</I
></CODE
> is the first available drive letter.</P
></DD
><dt class="term"><code class="literal">Win32::RegisterServer(<code class="replaceable"><i>libraryname</I
></CODE
>)</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44576"></A
>Loads the DLL <code class="replaceable"><i>libraryname</I
></CODE
> and calls the function <code class="literal">DllRegisterServer</CODE
>.</P
></DD
><dt class="term"><code class="literal">Win32::UnregisterServer(<code class="replaceable"><i>libraryname</I
></CODE
>)</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44587"></A
>Loads the DLL <code class="replaceable"><i>libraryname</I
></CODE
> and calls the function <code class="literal">DllUnregisterServer</CODE
>.</P
></DD
><dt class="term"><code class="literal">Win32::Sleep(<code class="replaceable"><i>time</I
></CODE
>)</CODE
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-44598"></A
>Pauses for the number of milliseconds specified by <code class="replaceable"><i>time</I
></CODE
>.</P
></DD
></DL
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch19_16.htm" title="19.16 Win32::Shortcut"><img src="../gifs/txtpreva.gif" alt="Previous: 19.16 Win32::Shortcut" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch19_18.htm#PNUT-CH-19-SECT-18.4" title="19.18 OLE Automation"><img src="../gifs/txtnexta.gif" alt="Next: 19.18 OLE Automation" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">19.16 Win32::Shortcut</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">19.18 OLE Automation</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
