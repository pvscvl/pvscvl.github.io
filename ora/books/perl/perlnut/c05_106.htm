<html><head>
<title>Reference: pack</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:36:41Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch05_02.htm" title="5.2 Perl Functions in Alphabetical Order"><link rel="prev" href="c05_105.htm" title="Reference: ord"><link rel="next" href="c05_107.htm" title="Reference: package"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="NUTENTRY" href="c05_105.htm" title="Reference: ord"><img src="../gifs/txtpreva.gif" alt="Previous: Reference: ord" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch05_01.htm" title="5. Function Reference">Chapter 5<br>Function Reference</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="NUTENTRY" href="c05_107.htm" title="Reference: package"><img src="../gifs/txtnexta.gif" alt="Next: Reference: package" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="NUTENTRY"><h2 class="nutentry"><a class="term" name="AUTOID-9098">pack</A
></H2
><pre class="nutsynopsis">pack <em class="emphasis">template</EM
>, <em class="emphasis">list</EM
></PRE
><dl class="nutentrybody"><p class="para"><a class="indexterm" name="AUTOID-9105"></A
>Takes a list of values and packs it into a
binary structure, returning the string containing the structure.
The <em class="emphasis">template</EM
> is a sequence of characters that give the order and type
of values, as follows:
</P
><table class="informaltable" border="1" cellpadding="3"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Character</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Meaning</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">a</CODE
></TD
><td class="entry" rowspan="1" colspan="1">An ASCII string, will be null padded</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">A</CODE
></TD
><td class="entry" rowspan="1" colspan="1">An ASCII string, will be space padded</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">b</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A bit string, low-to-high order (like <code class="literal">vec()</CODE
>)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">B</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A bit string, high-to-low order</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">c</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A signed char value</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">C</CODE
></TD
><td class="entry" rowspan="1" colspan="1">An unsigned char value</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">d</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A double-precision float in the native format</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">f</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A single-precision float in the native format</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">h</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A hexadecimal string, low nybble first</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">H</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A hexadecimal string, high nybble first</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">i</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A signed integer value</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">I</CODE
></TD
><td class="entry" rowspan="1" colspan="1">An unsigned integer value</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">l</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A signed long value</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">L</CODE
></TD
><td class="entry" rowspan="1" colspan="1">An unsigned long value</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">n</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A short in &quot;network&quot; (big-endian) order</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">N</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A long in &quot;network&quot; (big-endian) order</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">p</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A pointer to a string</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">P</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A pointer to a structure (fixed-length string)</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">s</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A signed short value</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">S</CODE
></TD
><td class="entry" rowspan="1" colspan="1">An unsigned short value</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">v</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A short in &quot;VAX&quot; (little-endian) order</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">V</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A long in &quot;VAX&quot; (little-endian) order</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">u</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A uuencoded string</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">w</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A BER compressed integer</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">x</CODE
></TD
><td class="entry" rowspan="1" colspan="1">A null byte</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">X</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Back up a byte</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">@</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Null-fill to absolute position</TD
></TR
></TBODY
></TABLE
><p class="para">
Each character may optionally be followed by a number that gives a repeat
count. Together the character and the repeat count make a field specifier.
Field specifiers may be separated by whitespace, which will be ignored. With
all types except <code class="literal">a</CODE
> and <code class="literal">A</CODE
>, the <code class="literal">pack</CODE
> function will gobble up that many values from
the <em class="emphasis">list</EM
>. Saying <code class="literal">*</CODE
> for the
repeat count means to use however many items are left. The
<code class="literal">a</CODE
> and <code class="literal">A</CODE
> types gobble just one value,
but pack it as a string of length <em class="emphasis">count</EM
>, padding with nulls
or spaces as necessary. (When unpacking, <code class="literal">A</CODE
> strips trailing
spaces and nulls, but <code class="literal">a</CODE
> does not.)  Real numbers (floats
and doubles) are in the native machine format only; due to the multiplicity of
floating formats around, and the lack of a standard network representation, no
facility for interchange has been made.</P
><p class="para">The same template may generally also be used in the <code class="literal">unpack</CODE
> function. 
If you want to join variable length
fields with a delimiter, use the <code class="literal">join</CODE
>
function.</P
></DL
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="NUTENTRY" href="c05_105.htm" title="Reference: ord"><img src="../gifs/txtpreva.gif" alt="Previous: Reference: ord" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="NUTENTRY" href="c05_107.htm" title="Reference: package"><img src="../gifs/txtnexta.gif" alt="Next: Reference: package" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">Reference: ord</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">Reference: package</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
