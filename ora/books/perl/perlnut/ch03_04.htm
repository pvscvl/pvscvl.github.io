<html><head>
<title>[Chapter 3] 3.4 The Perl Compiler</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:29:41Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch03_01.htm" title="3. The Perl Interpreter"><link rel="prev" href="ch03_03.htm" title="3.3 Environment Variables"><link rel="next" href="ch03_05.htm" title="3.5 Threads"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch03_03.htm" title="3.3 Environment Variables"><img src="../gifs/txtpreva.gif" alt="Previous: 3.3 Environment Variables" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch03_01.htm" title="3. The Perl Interpreter">Chapter 3<br>The Perl Interpreter</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch03_05.htm" title="3.5 Threads"><img src="../gifs/txtnexta.gif" alt="Next: 3.5 Threads" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PNUT-CH-3-SECT-4">3.4 The Perl Compiler</A
></H2
><p class="para"><a class="indexterm" name="AUTOID-2192"></A
><a class="indexterm" name="AUTOID-2194"></A
>A native-code compiler for Perl is now
(as of Perl 5.005) part of the standard Perl distribution.
The compiler allows you to distribute Perl programs in binary form, 
which enables
easy packaging of Perl-based programs without having
to depend on the source machine having the correct 
version of Perl and the correct modules installed. After the
initial compilation, running a compiled program should be faster to
the extent that it doesn't have to be recompiled each time it's run.  However,
you shouldn't expect that the compiled code itself will run faster than the
original Perl source or that the executable will be smaller&nbsp;- in reality,
the executable file is likely to be significantly bigger.</P
><p class="para">This initial release of the compiler is still considered to
be a beta version. It's distributed as an extension module, B,
that comes with the following backends:</P
><dl class="variablelist"><dt class="term">Bytecode</DT
><dd class="listitem"><p class="para">Translates a script into platform-independent Perl byte code.<a class="indexterm" name="AUTOID-2202"></A
></P
></DD
><dt class="term">C</DT
><dd class="listitem"><p class="para">Translates a Perl script into C code.<a class="indexterm" name="AUTOID-2208"></A
></P
></DD
><dt class="term">CC</DT
><dd class="listitem"><p class="para">Translates a Perl script into optimized C code.</P
></DD
><dt class="term">Deparse</DT
><dd class="listitem"><p class="para">Regenerates Perl source code from a compiled program.<a class="indexterm" name="AUTOID-2218"></A
></P
></DD
><dt class="term">Lint</DT
><dd class="listitem"><p class="para">Extends the Perl <em class="emphasis">-w</EM
> option. Named after the Unix Lint program-checker.<a class="indexterm" name="AUTOID-2225"></A
></P
></DD
><dt class="term">Showlex</DT
><dd class="listitem"><p class="para">Shows lexical variables used in functions or files.<a class="indexterm" name="AUTOID-2231"></A
></P
></DD
><dt class="term">Xref</DT
><dd class="listitem"><p class="para">Creates a cross-reference listing for a program.<a class="indexterm" name="AUTOID-2237"></A
></P
></DD
></DL
><p class="para">Once you've generated the C code with either the C or the CC backend, you
run the <em class="emphasis">cc_harness</EM
> program to compile it into an executable. There is<a class="indexterm" name="AUTOID-2241"></A
>
also a <em class="emphasis">byteperl</EM
> interpreter that lets you run the code you've
generated with the Bytecode backend.</P
><p class="para">Here's an example that takes a simple &quot;Hello world&quot; program and
uses the CC backend to generate C code:</P
><blockquote class="screen"><pre class="screen">% perl -MO=CC,-ohi.c hi.pl
hi.pl syntax OK
% perl cc_harness -O2 -ohi hi.c
gcc -B/usr/ccs/bin/ -D_REENTRANT -DDEBUGGING -I/usr/local/include 
-I/usr/local/lib/perl5/sun4-solaris-thread/5.00466/CORE -O2 -ohi hi.c 
-L/usr/local/lib /usr/local/lib/perl5/sun4-solaris-thread/5.00466/CORE/libperl.a 
-lsocket -lnsl -lgdbm -ldl -lm -lposix4 -lpthread -lc -lcrypt
% hi
Hi there, world!</PRE
></BLOCKQUOTE
><p class="para"><a class="indexterm" name="AUTOID-2247"></A
><a class="indexterm" name="AUTOID-2249"></A
>The compiler also comes with a frontend, <em class="emphasis">perlcc</EM
>. You can use it
to compile code into a standalone executable, or to compile a module
(a <em class="emphasis">.pm</EM
> file) into a shared object (an <em class="emphasis">.so</EM
> file) that can be
included in a Perl program via <em class="emphasis">use</EM
>.  For example:

<blockquote class="screen"><pre class="screen">% perlcc a.p         # compiles into the executable 'a'
% perlcc A.pm        # compiles into A.so</PRE
></BLOCKQUOTE
>&#13;</P
><p class="para">The following options can be used with <em class="emphasis">perlcc</EM
>:</P
><dl class="variablelist"><dt class="term"><em class="emphasis">-argv arguments</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2265"></A
>Used with <em class="emphasis">-run</EM
> or <em class="emphasis">-e</EM
>. Passes the string <em class="emphasis">arguments</EM
>
to the executable as <code class="literal">@ARGV</CODE
>. </P
></DD
><dt class="term"><em class="emphasis">-C c_code_name</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2276"></A
>Gives the name <em class="emphasis">c_code_name</EM
> to the generated C code that is to be
compiled. Only valid if you are compiling one file on the command line.</P
></DD
><dt class="term"><em class="emphasis">-e perl_line_to_execute</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2284"></A
>Works like <em class="emphasis">perl -e</EM
> to compile &quot;one-liners.&quot; The default is to compile
and run the code. With <em class="emphasis">-o</EM
>, it saves the resulting executable. </P
></DD
><dt class="term"><em class="emphasis">-gen</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2293"></A
>Creates the intermediate C code but doesn't compile the results; does an
implicit <em class="emphasis">-sav</EM
>.</P
></DD
><dt class="term"><em class="emphasis">-I include_directories</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2301"></A
>Adds directories inside <em class="emphasis">include_directories</EM
> to the compilation
command.</P
></DD
><dt class="term"><em class="emphasis">-L library_directories</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2309"></A
>Adds directories in <em class="emphasis">library_directories</EM
> to the compilation command.</P
></DD
><dt class="term"><em class="emphasis">-log logname</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2317"></A
>Opens a log file (for append) for saving text from a compile command.</P
></DD
><dt class="term"><em class="emphasis">-mod</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2324"></A
>Tells <em class="emphasis">perlcc</EM
> to compile the files given at the command line as
modules. Usually used with module files that don't end with <em class="emphasis">.pm</EM
>.</P
></DD
><dt class="term"><em class="emphasis">-o executable_name</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2333"></A
>Gives the name <em class="emphasis">executable_name</EM
> to the executable that is to be
compiled. Only valid if compiling one file on the command line.</P
></DD
><dt class="term"><em class="emphasis">-prog</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2341"></A
>Tells <em class="emphasis">perlcc</EM
> to compile the files given at the command line as
programs. Usually used with program 
files that don't end with a <em class="emphasis">.p</EM
>, <em class="emphasis">.pl</EM
>, or <em class="emphasis">.bat</EM
> extension.</P
></DD
><dt class="term"><em class="emphasis">-regex rename_regex</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2352"></A
>Provides the rule <em class="emphasis">rename_regex</EM
> for creating executable filenames,
where <em class="emphasis">rename_regex</EM
> is a Perl regular expression.</P
></DD
><dt class="term"><em class="emphasis">-run</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2361"></A
>Immediately run the generated Perl code. Note that the rest of <code class="literal">@ARGV</CODE
> is
interpreted as arguments to the program being compiled.</P
></DD
><dt class="term"><em class="emphasis">-sav</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2369"></A
>Tells Perl to save the intermediate C code. </P
></DD
><dt class="term"><em class="emphasis">-verbose verbose_level</EM
></DT
><dd class="listitem"><p class="para"><a class="indexterm" name="AUTOID-2376"></A
>Compile verbosely, setting <em class="emphasis">verbose_level</EM
> to control the degree of
verbosity. <em class="emphasis">verbose_level</EM
> can be given as either a sum of bits or a
list of letters. Values are:
</P
><table class="informaltable" border="1" cellpadding="3"><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">Bit</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Letter</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1">Action</TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">1</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal">g</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Code generation errors to STDERR.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">2</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal">a</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Compilation errors to STDERR.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">4</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal">t</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Descriptive text to STDERR.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">8</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal">f</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Code generation errors to file. Requires <em class="emphasis">-log</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">16</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal">c</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Compilation errors to file. Requires <em class="emphasis">-log</EM
>.</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">32</TD
><td class="entry" rowspan="1" colspan="1"><code class="literal">d</CODE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Descriptive text to file. Requires <em class="emphasis">-log</EM
>.</P
></TD
></TR
></TBODY
></TABLE
><p class="para">
With <em class="emphasis">-log</EM
>, the default level is 63; otherwise the default level
is 7.</P
></DD
></DL
><p class="para">There are two environment variables that you can set for <em class="emphasis">perlcc</EM
>:<a class="indexterm" name="AUTOID-2427"></A
><a class="indexterm" name="AUTOID-2429"></A
>
PERL_SCRIPT_EXT and PERL_MODULE_EXT.  These can be used to modify the
default extensions that <em class="emphasis">perlcc</EM
> recognizes for programs and for
modules. The variables take colon-separated Perl regular expressions.</P
><p class="para">The modules that comprise the compiler are described in <a class="xref" href="ch08_01.htm" title="Standard Modules">Chapter 8, <cite class="chapter">Standard Modules</CITE
></A
>. 
Also see the documentation that comes
with the compiler, which includes more complete information on installing 
and using it.</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch03_03.htm" title="3.3 Environment Variables"><img src="../gifs/txtpreva.gif" alt="Previous: 3.3 Environment Variables" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch03_05.htm" title="3.5 Threads"><img src="../gifs/txtnexta.gif" alt="Next: 3.5 Threads" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">3.3 Environment Variables</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">3.5 Threads</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
