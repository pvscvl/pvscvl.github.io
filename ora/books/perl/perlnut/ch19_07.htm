<html><head>
<title>[Chapter 19] 19.7 Win32::Internet</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:59:24Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch19_01.htm" title="19. Win32 Modules and Extensions"><link rel="prev" href="ch19_06.htm" title="19.6 Win32::FileSecurity"><link rel="next" href="ch19_08.htm" title="19.8 Win32::IPC"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch19_06.htm" title="19.6 Win32::FileSecurity"><img src="../gifs/txtpreva.gif" alt="Previous: 19.6 Win32::FileSecurity" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch19_01.htm" title="19. Win32 Modules and Extensions">Chapter 19<br>Win32 Modules and Extensions</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch19_08.htm" title="19.8 Win32::IPC"><img src="../gifs/txtnexta.gif" alt="Next: 19.8 Win32::IPC" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="SECT1"><h2 class="sect1"><a class="title" name="PNUT-CH-19-SECT-7">19.7 Win32::Internet</A
></H2
><p class="para"><a class="indexterm" name="PNUT-CH-19-IX-WIN32-MODULES-WIN32INTERNET-MODULE"></A
>The Win32::Internet extension implements the Win32 Internet APIs (found
in <em class="emphasis">WININET.DLL</EM
>), providing support for HTTP, FTP, and Gopher connections.</P
><p class="para">All types of connections start as a basic Internet connection that
must be opened with the following command:<a class="indexterm" name="AUTOID-41955"></A
>


<blockquote class="screen"><pre class="screen">use Win32::Internet;
$Connection = Win32::Internet-&gt;new();</PRE
></BLOCKQUOTE
>


This creates an Internet object in Perl on which you 
use the functions provided in this module to create more
specific connection objects. 
The objects and functions that create them are: </P
><ul class="itemizedlist"><li class="listitem"><p class="para">Internet connections (the main object, with <code class="literal">new</CODE
>) </P
></LI
><li class="listitem"><p class="para">URLs (with <code class="literal">OpenURL</CODE
>) </P
></LI
><li class="listitem"><p class="para">FTP sessions (with <code class="literal">FTP</CODE
>) </P
></LI
><li class="listitem"><p class="para">HTTP sessions (with <code class="literal">HTTP</CODE
>) </P
></LI
><li class="listitem"><p class="para">HTTP requests (with <code class="literal">OpenRequest</CODE
>) </P
></LI
></UL
><p class="para">This module provides different levels of implementation of the 
Win32 Internet functions. Some routines use several Win32 API functions to perform 
a complex task in a single call; they are simpler to use, but less powerful. 
Other functions implement nothing more and nothing less than 
the corresponding API function, so you can use all of their power, but with 
some additional programming steps.</P
><p class="para">For example, the function <code class="literal">FetchURL</CODE
> fetches the contents
of any HTTP, FTP, or Gopher URL with a simple command: 


<blockquote class="screen"><pre class="screen">$inet = new Win32::Internet();
$file = $inet-&gt;FetchURL(&quot;http://www.yahoo.com&quot;);</PRE
></BLOCKQUOTE
>


You can achieve the same result with this series of commands, which is what
<code class="literal">FetchURL</CODE
> actually does: 


<blockquote class="screen"><pre class="screen">$inet = new Win32::Internet();
$url = $inet-&gt;OpenURL(&quot;http://www.yahoo.com&quot;);
$file = $url-&gt;ReadFile();
$url-&gt;Close();</PRE
></BLOCKQUOTE
>&#13;</P
><div class="sect2"><h3 class="sect2"><a class="title" name="PNUT-CH-19-SECT-7.1">19.7.1 General Internet Methods</A
></H3
><p class="para">The methods described in this section are used on Internet connection<a class="indexterm" name="AUTOID-41984"></A
>
objects created with <code class="literal">new</CODE
>:


<blockquote class="screen"><pre class="screen">$inet = Win32::Internet-&gt;new();</PRE
></BLOCKQUOTE
>


You can supply <code class="literal">new</CODE
> with an optional list of arguments (or a reference to a hash containing them)
that looks like this:


<blockquote class="screen"><pre class="screen">Win32::Internet-&gt;new [<em class="emphasis">useragent</EM
>, <em class="emphasis">opentype</EM
>, <em class="emphasis">proxy</EM
>, <em class="emphasis">proxybypass</EM
>, <em class="emphasis">flags</EM
>] 
Win32::Internet-&gt;new [<em class="emphasis">$hashref</EM
>]</PRE
></BLOCKQUOTE
>


The parameters and their values are:</P
><dl class="variablelist"><dt class="term"><code class="replaceable"><i>useragent</I
></CODE
></DT
><dd class="listitem"><p class="para">The user-agent string passed to HTTP requests. Default is <code class="literal">Perl-Win32Internet/version</CODE
>.</P
></DD
><dt class="term"><code class="replaceable"><i>opentype</I
></CODE
></DT
><dd class="listitem"><p class="para">How to access the Internet (e.g., directly or using a proxy). Default is <code class="literal">INTERNET_OPEN_TYPE_DIRECT</CODE
>.</P
></DD
><dt class="term"><code class="replaceable"><i>proxy</I
></CODE
></DT
><dd class="listitem"><p class="para">Name of the proxy server (or servers) to use.  Default is none.</P
></DD
><dt class="term"><code class="replaceable"><i>proxybypass</I
></CODE
></DT
><dd class="listitem"><p class="para">Optional list of host names or IP addresses that are known locally. Default is none.</P
></DD
><dt class="term"><code class="replaceable"><i>flags</I
></CODE
></DT
><dd class="listitem"><p class="para">Additional flags affecting the behavior of the function. Default is none.</P
></DD
></DL
><p class="para">If you pass a hash reference to the function, the following values 
are taken from the hash: 


<blockquote class="screen"><pre class="screen">%hash=(
  &quot;useragent&quot;   =&gt; &quot;useragent&quot;,
  &quot;opentype&quot;    =&gt; &quot;opentype&quot;,
  &quot;proxy&quot;       =&gt; &quot;proxy&quot;,
  &quot;proxybypass&quot; =&gt; &quot;proxybypass&quot;,
  &quot;flags&quot;       =&gt; flags,
);</PRE
></BLOCKQUOTE
>


The following methods can be used on Internet connection objects:
<ul class="nutlist"><li class="term"><a class="nutentry" href="c19_048.htm" title="Reference: CanonicalizeURL">CanonicalizeURL</A
></LI
><li class="term"><a class="nutentry" href="c19_049.htm" title="Reference: Close">Close</A
></LI
><li class="term"><a class="nutentry" href="c19_050.htm" title="Reference: CombineURL">CombineURL</A
></LI
><li class="term"><a class="nutentry" href="c19_051.htm" title="Reference: ConnectBackoff">ConnectBackoff</A
></LI
><li class="term"><a class="nutentry" href="c19_052.htm" title="Reference: ConnectionRetries">ConnectionRetries</A
></LI
><li class="term"><a class="nutentry" href="c19_053.htm" title="Reference: ConnectTimeout">ConnectTimeout</A
></LI
><li class="term"><a class="nutentry" href="c19_054.htm" title="Reference: ControlReceiveTimeout">ControlReceiveTimeout</A
></LI
><li class="term"><a class="nutentry" href="c19_055.htm" title="Reference: ControlSendTimeout">ControlSendTimeout</A
></LI
><li class="term"><a class="nutentry" href="c19_056.htm" title="Reference: CrackURL">CrackURL</A
></LI
><li class="term"><a class="nutentry" href="c19_057.htm" title="Reference: CreateURL">CreateURL</A
></LI
><li class="term"><a class="nutentry" href="c19_058.htm" title="Reference: DataReceiveTimeout">DataReceiveTimeout</A
></LI
><li class="term"><a class="nutentry" href="c19_059.htm" title="Reference: DataSendTimeout">DataSendTimeout</A
></LI
><li class="term"><a class="nutentry" href="c19_060.htm" title="Reference: Error">Error</A
></LI
><li class="term"><a class="nutentry" href="c19_061.htm" title="Reference: FetchURL">FetchURL</A
></LI
><li class="term"><a class="nutentry" href="c19_062.htm" title="Reference: FTP">FTP</A
></LI
><li class="term"><a class="nutentry" href="c19_063.htm" title="Reference: GetResponse">GetResponse</A
></LI
><li class="term"><a class="nutentry" href="c19_064.htm" title="Reference: GetStatusCallback">GetStatusCallback</A
></LI
><li class="term"><a class="nutentry" href="c19_065.htm" title="Reference: HTTP">HTTP</A
></LI
><li class="term"><a class="nutentry" href="c19_066.htm" title="Reference: OpenURL">OpenURL</A
></LI
><li class="term"><a class="nutentry" href="c19_067.htm" title="Reference: Password">Password</A
></LI
><li class="term"><a class="nutentry" href="c19_068.htm" title="Reference: QueryDataAvailable">QueryDataAvailable</A
></LI
><li class="term"><a class="nutentry" href="c19_069.htm" title="Reference: QueryOption">QueryOption</A
></LI
><li class="term"><a class="nutentry" href="c19_070.htm" title="Reference: ReadEntireFile">ReadEntireFile</A
></LI
><li class="term"><a class="nutentry" href="c19_071.htm" title="Reference: ReadFile">ReadFile</A
></LI
><li class="term"><a class="nutentry" href="c19_072.htm" title="Reference: SetOption">SetOption</A
></LI
><li class="term"><a class="nutentry" href="c19_073.htm" title="Reference: SetStatusCallback">SetStatusCallback</A
></LI
><li class="term"><a class="nutentry" href="c19_074.htm" title="Reference: TimeConvert">TimeConvert</A
></LI
><li class="term"><a class="nutentry" href="c19_075.htm" title="Reference: UserAgent">UserAgent</A
></LI
><li class="term"><a class="nutentry" href="c19_076.htm" title="Reference: Username">Username</A
></LI
><li class="term"><a class="nutentry" href="c19_077.htm" title="Reference: Version">Version</A
></LI
></UL
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PNUT-CH-19-SECT-7.2">19.7.2 FTP Functions</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-42514"></A
>The methods described in this section are used to control
FTP sessions. They apply to FTP session objects created by
the <code class="literal">FTP</CODE
> method on an Internet connection object. <code class="literal">FTP</CODE
> creates an open FTP session and assigns it
to an object (<code class="literal">$FTP</CODE
>):


<blockquote class="screen"><pre class="screen">use Win32::Internet;
$inet = new Win32::Internet();
$inet-&gt;FTP($FTP, &quot;hostname&quot;, &quot;username&quot;, &quot;password&quot;);</PRE
></BLOCKQUOTE
>


The following methods are used on FTP session objects:
<ul class="nutlist"><li class="term"><a class="nutentry" href="c19_078.htm" title="Reference: Ascii">Ascii</A
></LI
><li class="term"><a class="nutentry" href="c19_079.htm" title="Reference: Binary">Binary</A
></LI
><li class="term"><a class="nutentry" href="c19_080.htm" title="Reference: Cd">Cd</A
></LI
><li class="term"><a class="nutentry" href="c19_081.htm" title="Reference: Delete">Delete</A
></LI
><li class="term"><a class="nutentry" href="c19_082.htm" title="Reference: Get">Get</A
></LI
><li class="term"><a class="nutentry" href="c19_083.htm" title="Reference: List">List</A
></LI
><li class="term"><a class="nutentry" href="c19_084.htm" title="Reference: Mkdir">Mkdir</A
></LI
><li class="term"><a class="nutentry" href="c19_085.htm" title="Reference: Mode">Mode</A
></LI
><li class="term"><a class="nutentry" href="c19_086.htm" title="Reference: Pasv">Pasv</A
></LI
><li class="term"><a class="nutentry" href="c19_087.htm" title="Reference: Put">Put</A
></LI
><li class="term"><a class="nutentry" href="c19_088.htm" title="Reference: Pwd">Pwd</A
></LI
><li class="term"><a class="nutentry" href="c19_089.htm" title="Reference: Rename">Rename</A
></LI
><li class="term"><a class="nutentry" href="c19_090.htm" title="Reference: Rmdir">Rmdir</A
></LI
></UL
></P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="PNUT-CH-19-SECT-7.3">19.7.3 HTTP Functions</A
></H3
><p class="para"><a class="indexterm" name="AUTOID-42815"></A
>The methods described in this section are used to create and
control an HTTP session. You open an HTTP session using the
<code class="literal">HTTP</CODE
> method on an Internet connection object:


<blockquote class="screen"><pre class="screen">use Win32::Internet;
$inet = new Win32::Internet();
$inet-&gt;HTTP($http, &quot;hostname&quot;, &quot;username&quot;, &quot;password&quot;);</PRE
></BLOCKQUOTE
>


This opens the session and creates the HTTP session object
<code class="literal">$http</CODE
>. The following methods can be used on HTTP session objects:</P
><ul class="nutlist"><li class="term"><a class="nutentry" href="c19_091.htm" title="Reference: AddHeader">AddHeader</A
></LI
><li class="term"><a class="nutentry" href="c19_092.htm" title="Reference: OpenRequest">OpenRequest</A
></LI
><li class="term"><a class="nutentry" href="c19_093.htm" title="Reference: QueryInfo">QueryInfo</A
></LI
><li class="term"><a class="nutentry" href="c19_094.htm" title="Reference: Request">Request</A
></LI
><li class="term"><a class="nutentry" href="c19_095.htm" title="Reference: SendRequest">SendRequest</A
></LI
></UL
><a class="indexterm" name="AUTOID-42959"></A
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch19_06.htm" title="19.6 Win32::FileSecurity"><img src="../gifs/txtpreva.gif" alt="Previous: 19.6 Win32::FileSecurity" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch19_08.htm" title="19.8 Win32::IPC"><img src="../gifs/txtnexta.gif" alt="Next: 19.8 Win32::IPC" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">19.6 Win32::FileSecurity</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">19.8 Win32::IPC</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
