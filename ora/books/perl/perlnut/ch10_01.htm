<html><head>
<title>[Chapter 10] The CGI.pm Module</TITLE>
<meta name="DC.title" content="Perl in a Nutshell"><meta name="DC.creator" content="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:55:44Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-286-7" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="part04.htm" title="IV. CGI"><link rel="prev" href="ch09_04.htm" title="9.4 CGI Environment Variables"><link rel="next" href="ch10_02.htm" title="10.2 Importing Method Groups"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Perl in a Nutshell" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,71" href="index.htm" alt="Perl in a Nutshell"><area shape="RECT" coords="467,0,514,18" href="../search/nsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_04.htm" title="9.4 CGI Environment Variables"><img src="../gifs/txtpreva.gif" alt="Previous: 9.4 CGI Environment Variables" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1">Chapter 10</FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_02.htm" title="10.2 Importing Method Groups"><img src="../gifs/txtnexta.gif" alt="Next: 10.2 Importing Method Groups" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="CHAPTER"><h1 class="chapter"><a class="title" name="PNUT-CH-10">10. The CGI.pm Module</A
></H1
><div class="htmltoc"><p><b>Contents:</B
><br><a class="SECT1" href="#PNUT-CH-10-SECT-1" title="10.1 HTML Tag Generation">HTML Tag Generation</A
><br><a class="SECT1" href="ch10_02.htm" title="10.2 Importing Method Groups">Importing Method Groups</A
><br><a class="SECT1" href="ch10_03.htm" title="10.3 Maintaining State">Maintaining State</A
><br><a class="SECT1" href="ch10_04.htm" title="10.4 Named Parameters">Named Parameters</A
><br><a class="SECT1" href="ch10_05.htm" title="10.5 Using JavaScript Features">Using JavaScript Features</A
><br><a class="SECT1" href="ch10_06.htm" title="10.6 Debugging">Debugging</A
><br><a class="SECT1" href="ch10_07.htm" title="10.7 CGI.pm Reference">CGI.pm Reference</A
></P
><p></P
></DIV
><p class="para"></P
><p class="para">CGI.pm is a Perl module for creating
and parsing CGI forms.  <a class="indexterm" name="PNUT-CH-10-IX-CGI.PM-MODULE"></A
>
It is distributed with core Perl as of Perl 5.004, but you can also retrieve
CGI.pm from CPAN, and you can get the very latest version
at any time from <a class="systemitem.sitename" href="../../../WebStripper/protected.html#link=ftp://ftp-hygenome.wi.mit.edu/pub/software/WWW/">ftp://ftp-hygenome.wi.mit.edu/pub/software/WWW/</A
>.</P
><p class="para">CGI is an object-oriented module.  
Don't let the object-oriented nature
scare you off, though; CGI.pm is very easy to use, as evidenced
by its overwhelming popularity among all levels of Perl 
programmers.
To give you an idea of how easy it is to use CGI.pm, 
let's take a scenario in which a user fills out
and submits a form containing her birthday.
Without CGI.pm, the script would
have to translate the URL-encoded input by hand
(probably using a series of regular expressions)
and assign it to a variable.  For example, you might try something 
like this:


<blockquote class="screen"><pre class="screen">#!/usr/bin/perl 
# cgi script without CGI.pm

$size_of_form_info = $ENV{'CONTENT_LENGTH'};
read ($STDIN, $form_info, $size_of_form_info);

# Split up each pair of key=value pairs
foreach $pair (split (/&amp;/, $form_info)) {

   # For each pair, split into $key and $value variables
   ($key, $value) = split (/=/, $pair);

   # Get rid of the pesky %xx encodings
   $key =~ s/%([\dA-Fa-f][\dA-Fa-f])/pack (&quot;C&quot;, hex ($1))/eg;
   $value =~ s/%([\dA-Fa-f][\dA-Fa-f])/pack (&quot;C&quot;, hex ($1))/eg;

   # Use $key as index for $parameters hash, $value as value
   $parameters{$key} = $value;
}

# Print out the obligatory content-type line
print &quot;Content-type: text/plain\n\n&quot;;

# Tell the user what they said
print &quot;Your birthday is on &quot; . $parameters{birthday} . &quot;.\n&quot;;</PRE
></BLOCKQUOTE
>


Regardless of whether this code actually works, you must admit
it's ugly.
With CGI.pm, the script could be written:


<blockquote class="screen"><pre class="screen">#!/usr/bin/perl -w
# cgi script with CGI.pm

use CGI;

$query = CGI::new();
$bday = $query-&gt;param(&quot;birthday&quot;);
print $query-&gt;header();
print $query-&gt;p(&quot;Your birthday is $bday.&quot;);</PRE
></BLOCKQUOTE
>


Even for this tiny program, you can see that CGI.pm
can alleviate many of the headaches associated with CGI
programming.  </P
><p class="para">As with any Perl module, the first thing you do is call
the module with <code class="literal">use</CODE
>.  You then call the constructor
(<code class="literal">new()</CODE
>), creating a new CGI object called
<code class="literal">$query</CODE
>. Next, get the value of the <code class="literal">birthday</CODE
> parameter from<a class="indexterm" name="AUTOID-24338"></A
>
the CGI program using the <code class="literal">param</CODE
> method.  
Note that CGI.pm does all the work of determining
whether the CGI program is being called by the GET or POST methods,
and it also does all the URL decoding for you.  <a class="indexterm" name="AUTOID-24341"></A
>
To generate output, use the <code class="literal">header</CODE
> method to 
return the content type header, and the <code class="literal">p</CODE
> method
to generate a paragraph marker <code class="literal">&lt;P&gt;</CODE
> tag.  </P
><p class="para">However, this is only the tip of the iceberg as far as what
CGI.pm can do for you.  
There are three basic categories of CGI.pm methods:
CGI handling, creating forms, and retrieving environment variables.
(A fourth category is creating HTML tags, but we don't cover those
in detail.)
<a class="xref" href="#PNUT-CH-10-TAB-0" title="CGI.pm Methods">Table 10.1</A
>
lists most of these methods.  They are also
covered in more detail later in this chapter.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="PNUT-CH-10-TAB-0">Table 10.1: CGI.pm Methods</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1">CGI Handling</TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">keywords</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets keywords from an <code class="literal">&lt;ISINDEX&gt;</CODE
> search.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">param</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets (or sets) the value of parameters.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">append</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Appends to a parameter.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">import_names</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Imports variables into a namespace.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">delete</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Deletes a parameter.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">delete_all</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Deletes all parameters.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">save</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Saves all parameters to a file.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">self_url</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Creates self-referencing URL.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">url</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets URL of current script without query information.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">header</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Creates HTTP header.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">redirect</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Creates redirection header.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">cookie</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets (or sets) a cookie.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">nph</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Declares this to be a NPH script.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">dump</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Prints all name/value pairs.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Form Generation</TD
><td class="entry" rowspan="1" colspan="1"></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">start_html</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates an <code class="literal">&lt;HTML&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">end_html</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates an <code class="literal">&lt;/HTML&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">autoEscape</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Sets whether to use automatic escaping.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">isindex</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates an <code class="literal">&lt;ISINDEX&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">startform</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates a <code class="literal">&lt;FORM&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">start_multipart_form</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates a <code class="literal">&lt;FORM&gt;</CODE
> tag for
<code class="literal">multipart/ form-data</CODE
> encoding.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">textfield</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates an <code class="literal">&lt;INPUT TYPE=TEXT&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">textarea</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates an <code class="literal">&lt;TEXTAREA&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">password_field</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates an <code class="literal">&lt;INPUT TYPE=PASSWORD&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">filefield</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates an <code class="literal">&lt;INPUT TYPE=FILE&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">popup_menu</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates a popup menu via <code class="literal">&lt;SELECT SIZE=1&gt;</CODE
> and <code class="literal">&lt;OPTION&gt;</CODE
> tags.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">scrolling_list</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates a scrolling list via <code class="literal">&lt;SELECT&gt;</CODE
> and <code class="literal">&lt;OPTION&gt;</CODE
> tags.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">checkbox_group</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates a group of checkboxes via multiple <code class="literal">&lt;INPUT TYPE=CHECKBOX&gt;</CODE
> tags.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">checkbox</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates a single checkbox via a <code class="literal">&lt;INPUT TYPE=CHECKBOX&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">radio_group</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates a group of radio buttons via <code class="literal">&lt;INPUT TYPE=RADIO&gt;</CODE
> tags.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">submit</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates a <code class="literal">&lt;SUBMIT&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">reset</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates a <code class="literal">&lt;RESET&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">defaults</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates a <code class="literal">&lt;DEFAULTS&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">hidden</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates an <code class="literal">&lt;INPUT TYPE=HIDDEN&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">image_button</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates a clickable image button via a <code class="literal">&lt;SELECT&gt;</CODE
> tag.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">button</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Generates a JavaScript button.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1">Handling Environment Variables</TD
><td class="entry" rowspan="1" colspan="1"></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">accept</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets accept types from ACCEPT header.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">user_agent</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets value of USER_AGENT header.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">path_info</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets value of EXTRA_PATH_INFO header.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">path_translated</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets value of PATH_TRANSLATED header.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">remote_host</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets value of REMOTE_HOST header.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">raw_cookie</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets value of HTTP_COOKIE header.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">script_name</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets value of SCRIPT_NAME header.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">referer</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets value of REFERER header.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">auth_type</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets value of AUTH_TYPE header.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">remote_user</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets value of REMOTE_USER header.</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">user_name</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets user name (not via headers).</TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><code class="literal">request_method</CODE
></TD
><td class="entry" rowspan="1" colspan="1">Gets value of REQUEST_METHOD header.</TD
></TR
></TBODY
></TABLE
><p class="para">Each of these methods is covered later in this chapter, 
in alphabetical order.</P
><div class="sect1"><h2 class="sect1"><a class="title" name="PNUT-CH-10-SECT-1">10.1 HTML Tag Generation</A
></H2
><p class="para">In addition to the form-generation methods, CGI.pm also<a class="indexterm" name="AUTOID-24578"></A
><a class="indexterm" name="AUTOID-24581"></A
>
includes a group of methods for creating HTML tags.
The names of the HTML tag methods generally
follow the HTML tag name (e.g., <code class="literal">p</CODE
> for <code class="literal">&lt;P&gt;</CODE
>)
and take named parameters that are assumed to be valid
attributes for the tag (e.g., <code class="literal">img(src=&gt;'camel.gif')</CODE
>
becomes <code class="literal">&lt;IMG SRC=&quot;camel.gif&quot;&gt;</CODE
>).  We do not list all 
tags in this book; see the CGI.pm manpage for more information,
or the book <em class="emphasis">Official Guide to Programming with CGI.pm</EM
> by Lincoln
Stein (John Wiley &amp; Sons, 1998).</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="SECT1" href="ch09_04.htm" title="9.4 CGI Environment Variables"><img src="../gifs/txtpreva.gif" alt="Previous: 9.4 CGI Environment Variables" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Perl in a Nutshell"><img src="../gifs/txthome.gif" alt="Perl in a Nutshell" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="SECT1" href="ch10_02.htm" title="10.2 Importing Method Groups"><img src="../gifs/txtnexta.gif" alt="Next: 10.2 Importing Method Groups" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">9.4 CGI Environment Variables</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">10.2 Importing Method Groups</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="../learn/index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
