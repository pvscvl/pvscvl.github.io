<html><head>
<title>[Chapter 6] 6.3 Output to STDOUT</TITLE>
<meta name="DC.title" content="Learning Perl"><meta name="DC.creator" content="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:32:47Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-284-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch06_01.htm" title="6. Basic I/O"><link rel="prev" href="ch06_02.htm" title="6.2 Input from the Diamond Operator"><link rel="next" href="ch06_04.htm" title="6.4 Exercises"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl"><area shape="RECT" coords="467,0,514,18" href="../search/lsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch06_02.htm" title="6.2 Input from the Diamond Operator"><img src="../gifs/txtpreva.gif" alt="Previous: 6.2 Input from the Diamond Operator" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch06_01.htm" title="6. Basic I/O">Chapter 6<br>Basic I/O</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch06_04.htm" title="6.4 Exercises"><img src="../gifs/txtnexta.gif" alt="Next: 6.4 Exercises" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch06-33352">6.3 Output to STDOUT</A
></H2
><p class="para">Perl uses the <code class="literal">print</CODE
> and <code class="literal">printf</CODE
> functions to write to standard output. Let's look at how they are used.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="ch06-pgfId-560917">6.3.1 Using print for Normal Output</A
></H3
><p class="para">We've already used <code class="literal">print</CODE
> to display text on standard output. Let's expand on that a bit.</P
><p class="para">The <a class="indexterm" name="ch06-idx-560853-0"></A
><code class="literal">print</CODE
> function takes a list of strings and sends each string to standard output in turn, without any intervening or trailing characters added. What might not be obvious is that <code class="literal">print</CODE
> is really just a function that takes a list of arguments, and returns a value like any other function. In other words,</P
><pre class="programlisting">$a = print(&quot;hello &quot;, &quot;world&quot;, &quot;\n&quot;);</PRE
><p class="para">would be another way to say <code class="literal">hello world</CODE
>. The <a class="indexterm" name="ch06-idx-560855-0"></A
><a class="indexterm" name="ch06-idx-560855-1"></A
>return value of <code class="literal">print</CODE
> is a true or false value, indicating the success of the <code class="literal">print</CODE
>. It nearly always succeeds, unless you get some I/O error, so <code class="literal">$a</CODE
> in this case would usually be 1.</P
><p class="para">Sometimes you'll need to add <a class="indexterm" name="ch06-idx-560854-0"></A
>parentheses to <code class="literal">print</CODE
> as shown in the example, especially when the first thing you want to print itself starts with a left parenthesis, as in:</P
><pre class="programlisting">print (2+3),&quot;hello&quot;;   # wrong! prints 5, ignores &quot;hello&quot;
print ((2+3),&quot;hello&quot;); # right, prints 5hello
print 2+3,&quot;hello&quot;;     # also right, prints 5hello</PRE
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch06-pgfId-560918">6.3.2 Using printf for Formatted Output</A
></H3
><p class="para">You may wish a little more control over your output than <code class="literal">print</CODE
> provides. In fact, you may be accustomed to the <a class="indexterm" name="ch06-idx-560860-0"></A
>formatted output of C's <code class="literal">printf</CODE
> function. Fear not: Perl provides a comparable operation with the same name.</P
><p class="para">The <a class="indexterm" name="ch06-idx-562254-0"></A
><code class="literal">printf</CODE
> function takes a list of arguments (enclosed in optional parentheses, like the <code class="literal">print</CODE
> function). The first argument is a format control string, defining how to print the remaining arguments. If you're not familiar with the standard <code class="literal">printf</CODE
> function, you should probably check out the manpage for <em class="emphasis">printf </EM
>(3) or <em class="emphasis">perlfunc</EM
> (1), if you have one, or look at the description in <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>.</P
><p class="para">As an example, however</P
><pre class="programlisting">printf &quot;%15s %5d %10.2f\n&quot;, $s, $n, $r;</PRE
><p class="para">prints <code class="literal">$s</CODE
> in a 15-character field, then space, then <code class="literal">$n</CODE
> as a decimal integer in a 5-character field, then another space, then <code class="literal">$r</CODE
> as a floating-point value with 2 decimal places in a 10-character field, and finally a newline.</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch06_02.htm" title="6.2 Input from the Diamond Operator"><img src="../gifs/txtpreva.gif" alt="Previous: 6.2 Input from the Diamond Operator" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl"><img src="../gifs/txthome.gif" alt="Learning Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch06_04.htm" title="6.4 Exercises"><img src="../gifs/txtnexta.gif" alt="Next: 6.4 Exercises" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">6.2 Input from the Diamond Operator</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">6.4 Exercises</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
