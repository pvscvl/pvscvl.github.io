<html><head>
<title>[Chapter 2] 2.3 Strings</TITLE>
<meta name="DC.title" content="Learning Perl"><meta name="DC.creator" content="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:30:58Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-284-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch02_01.htm" title="2. Scalar Data"><link rel="prev" href="ch02_02.htm#ch02-pgfId-768696" title="2.2 Numbers"><link rel="next" href="ch02_04.htm#ch02-15504" title="2.4 Scalar Operators"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl"><area shape="RECT" coords="467,0,514,18" href="../search/lsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_02.htm#ch02-pgfId-768696" title="2.2 Numbers"><img src="../gifs/txtpreva.gif" alt="Previous: 2.2 Numbers" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch02_01.htm" title="2. Scalar Data">Chapter 2<br>Scalar Data</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch02_04.htm#ch02-15504" title="2.4 Scalar Operators"><img src="../gifs/txtnexta.gif" alt="Next: 2.4 Scalar Operators" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch02-33395">2.3 Strings</A
></H2
><p class="para"><a class="indexterm" name="ch02-idx-768563-0"></A
>Strings are sequences of characters (like <code class="literal">hello</CODE
>). Each character is an 8-bit value from the entire 256 character set (there's nothing special about the NUL character as in some languages).</P
><p class="para"><a class="indexterm" name="ch02-idx-768564-0"></A
>The shortest possible string has no characters. The longest string fills all of your available memory (although you wouldn't be able to do much with that). This is in accordance with the principle of "no built-in limits" that Perl follows at every opportunity. Typical strings are printable sequences of letters and digits and punctuation in the ASCII 32 to ASCII 126 range. However, the ability to have any character from 0 to 255 in a string means you can create, scan, and manipulate raw <a class="indexterm" name="ch02-idx-768565-0"></A
>binary data as strings&nbsp;- something with which most other utilities would have great difficulty. (For example, you can patch your operating system by reading it into a Perl string, making the change, and writing the result back out.)</P
><p class="para">Like numbers, strings have a literal representation (the way you represent the string in a Perl program). <a class="indexterm" name="ch02-idx-768566-0"></A
>Literal strings come in two different flavors: <em class="emphasis">single-quoted strings</EM
> and <em class="emphasis">double-quoted strings</EM
>.[<a class="footnote" href="#ch02-pgfId-768879">5</A
>] Another form that looks rather like these two is the back-quoted string (`like this`). This isn't so much a literal string as a way to run external commands and get back their output. This is covered in <a class="xref" href="ch14_01.htm" title="Process Management">Chapter 14, <cite class="chapter">Process Management</CITE
></A
>.</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch02-pgfId-768879">[5]</A
> There are also the <a class="indexterm" name="ch02-idx-768649-0"></A
><em class="emphasis">here</EM
> strings, similar to the shell's <em class="emphasis">here</EM
> documents. They are explained in <a class="xref" href="ch19_01.htm" title="CGI Programming">Chapter 19, <cite class="chapter">CGI Programming</CITE
></A
>. See also <a class="olink" href="../prog/ch02_01.htm">Chapter 2</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>, and <em class="emphasis">perldata </EM
>(1)</P
></DIV
></BLOCKQUOTE
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-768729">2.3.1 Single-Quoted Strings</A
></H3
><p class="para">A <a class="indexterm" name="ch02-idx-768567-0"></A
><em class="emphasis">single-quoted string</EM
> is a sequence of characters enclosed in single quotes. The single quotes are not part of the string itself; they're just there to let Perl identify the beginning and the ending of the string. Any character between the quote marks (including newline characters, if the string continues onto successive lines) is legal inside a string. Two exceptions: to get a single quote into a single-quoted string, precede it by a <a class="indexterm" name="ch02-idx-768568-0"></A
>backslash. And to get a backslash into a double-quoted string, precede the backslash by a backslash. In other pictures:</P
><pre class="programlisting">'hello'     # five characters: h, e, l, l, o
'don\'t'    # five characters: d, o, n, single-quote, t
''          # the null string (no characters)
'silly\\me' # silly, followed by backslash, followed by me
'hello\n'   # hello followed by backslash followed by n
'hello
there'      # hello, newline, there (11 characters total)</PRE
><p class="para">Note that the <a class="indexterm" name="ch02-idx-768569-0"></A
><code class="literal">\n</CODE
> within a single-quoted string is not interpreted as a newline, but as the two characters backslash and <code class="literal">n</CODE
>. (Only when the backslash is followed by another backslash or a single quote does it have special meaning.)</P
></DIV
><div class="sect2"><h3 class="sect2"><a class="title" name="ch02-pgfId-768730">2.3.2 Double-Quoted Strings</A
></H3
><p class="para">A <a class="indexterm" name="ch02-idx-861747-0"></A
><em class="emphasis">double-quoted string</EM
> acts a lot like a C string. Once again, it's a sequence of characters, although this time enclosed in double quotes. But now the backslash takes on its full power to specify certain control characters, or even any character at all through octal and hex representations. Here are some double-quoted strings:</P
><pre class="programlisting">&quot;hello world\n&quot;  # hello world, and a newline
&quot;new \177&quot;       # new, space, and the delete character (octal 177)
&quot;coke\tsprite&quot;   # a <a class="indexterm" name="ch02-idx-768650-0"></A
>coke, a <a class="indexterm" name="ch02-idx-768651-0"></A
>tab, and a <a class="indexterm" name="ch02-idx-768652-0"></A
>sprite</PRE
><p class="para">The backslash can precede many different characters to mean different things (typically called a <a class="indexterm" name="ch02-idx-768571-0"></A
><a class="indexterm" name="ch02-idx-768571-1"></A
><em class="emphasis">backslash escape</EM
>). The complete list of double-quoted string escapes is given in <a class="xref" href="#ch02-pgfId-134" title="Double-Quoted String Representations">Table 2.1</A
>.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="ch02-pgfId-134">Table 2.1: Double-Quoted String Representations</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Construct</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Meaning</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\n</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Newline</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\r</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Return</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\t</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Tab</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\f</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Formfeed</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\b</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Backspace</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\a</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Bell</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\e</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Escape</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\007</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Any octal ASCII value (here, 007 = bell)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\x7f</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Any hex ASCII value (here, 7f = delete)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\cC</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Any "control" character (here, CTRL-C)</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\\</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Backslash</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\&quot;</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Double quote</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\l</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Lowercase next letter</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\L</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Lowercase all following letters until <code class="literal">\E</CODE
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\u</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Uppercase next letter</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\U</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Uppercase all following letters until <code class="literal">\E</CODE
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\Q</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Backslash-quote all nonalphanumerics until <code class="literal">\E</CODE
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">\E</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Terminate <code class="literal">\L</CODE
> , <code class="literal">\U,</CODE
> or <code class="literal">\Q</CODE
></P
></TD
></TR
></TBODY
></TABLE
><p class="para">Another feature of double-quoted strings is that they are <a class="indexterm" name="ch02-idx-768572-0"></A
><em class="emphasis">variable interpolated</EM
>, meaning that scalar and array variables within the strings are replaced with their current values when the strings are used. We haven't formally been introduced to what a variable looks like yet (except in the stroll), so I'll get back to this later.</P
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch02_02.htm#ch02-pgfId-768696" title="2.2 Numbers"><img src="../gifs/txtpreva.gif" alt="Previous: 2.2 Numbers" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl"><img src="../gifs/txthome.gif" alt="Learning Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch02_04.htm#ch02-15504" title="2.4 Scalar Operators"><img src="../gifs/txtnexta.gif" alt="Next: 2.4 Scalar Operators" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">2.2 Numbers</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">2.4 Scalar Operators</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
