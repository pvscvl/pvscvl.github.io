<html><head>
<title>[Chapter 4] 4.3 The while/until Statement</TITLE>
<meta name="DC.title" content="Learning Perl"><meta name="DC.creator" content="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:32:30Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-284-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch04_01.htm" title="4. Control Structures"><link rel="prev" href="ch04_02.htm" title="4.2 The if/unless Statement"><link rel="next" href="ch04_04.htm" title="4.4 The for Statement"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl"><area shape="RECT" coords="467,0,514,18" href="../search/lsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch04_02.htm" title="4.2 The if/unless Statement"><img src="../gifs/txtpreva.gif" alt="Previous: 4.2 The if/unless Statement" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch04_01.htm" title="4. Control Structures">Chapter 4<br>Control Structures</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch04_04.htm" title="4.4 The for Statement"><img src="../gifs/txtnexta.gif" alt="Next: 4.4 The for Statement" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch04-32411">4.3 The while/until Statement</A
></H2
><p class="para">No programming language would be complete without some form of iteration[<a class="footnote" href="#ch04-pgfId-471">2</A
>] (repeated execution of a block of statements). Perl can iterate using the <a class="indexterm" name="ch04-idx-437538-0"></A
><code class="literal">while</CODE
> statement:<pre class="programlisting">while (<code class="replaceable"><i>some_expression</I
></CODE
>) {
    <code class="replaceable"><i>statement_1</I
></CODE
>;
    <code class="replaceable"><i>statement_2</I
></CODE
>;
    <code class="replaceable"><i>statement_3</I
></CODE
>;
}</PRE
></P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch04-pgfId-471">[2]</A
> That's why HTML is not a programming language.</P
></DIV
></BLOCKQUOTE
><p class="para">To execute this <code class="literal">while</CODE
> statement, Perl evaluates the <a class="indexterm" name="ch04-idx-437539-0"></A
>control expression (<code class="replaceable"><i>some_expression</I
></CODE
> in the example). If its value is true (using Perl's notion of truth), the body of the <code class="literal">while</CODE
> statement is evaluated once. This is repeated until the control expression becomes false, at which point Perl goes on to the next statement after the <code class="literal">while</CODE
> <code class="literal">loop</CODE
>. For example:</P
><pre class="programlisting">print &quot;how old are you? &quot;;
$a = &lt;STDIN&gt;;
chomp($a);
while ($a &gt; 0) {
    print &quot;At one time, you were $a years old.\n&quot;;
    $a--;
}</PRE
><p class="para">Sometimes it is easier to say "until something is true" rather than "while not this is true." Once again, Perl has the answer. Replacing the <code class="literal">while</CODE
> with <a class="indexterm" name="ch04-idx-437540-0"></A
><code class="literal">until</CODE
> yields the desired effect:</P
><pre class="programlisting">until (<code class="replaceable"><i>some_expression</I
></CODE
>) {
    <code class="replaceable"><i>statement_1</I
></CODE
>;
    <code class="replaceable"><i>statement_2</I
></CODE
>;
    <code class="replaceable"><i>statement_3</I
></CODE
>;
}</PRE
><p class="para">Note that in both the <code class="literal">while</CODE
> and the <code class="literal">until</CODE
> form, the body statements will be skipped entirely if the control expression is the termination value to begin with. For example, if a user enters an age less than zero for the program fragment above, Perl skips over the body of the loop.</P
><p class="para">It's possible that the <a class="indexterm" name="ch04-idx-437541-0"></A
>control expression never lets the loop exit. This is perfectly legal, and sometimes desired, and thus not considered an error. For example, you might want a loop to repeat as long as you have no error, and then have some error-handling code following the loop. You might use this for a daemon that is meant to run until the system crashes.</P
><div class="sect2"><h3 class="sect2"><a class="title" name="ch04-pgfId-487">4.3.1 The do {} while/until Statement</A
></H3
><p class="para">The <code class="literal">while/until</CODE
> statement you saw in the previous section tests its condition at the top of every loop, before the loop is entered. If the condition was already false to begin with, the loop won't be executed at all.</P
><p class="para">But sometimes you don't want to test the condition at the top of the loop. Instead, you want to test it at the bottom. To fill this need, Perl provides the <code class="literal">do</CODE
> <code class="literal">{}</CODE
> <code class="literal">while</CODE
> statement, which is just like[<a class="footnote" href="#ch04-pgfId-437837">3</A
>] the regular <code class="literal">while</CODE
> statement except that it doesn't test the expression until after executing the loop once.<pre class="programlisting">do {
    statement_1;
    statement_2;
    statement_3;
} while some_expression;</PRE
></P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch04-pgfId-437837">[3]</A
>  Well, not quite just like; the loop control directives explained in <a class="xref" href="ch09_01.htm" title="Miscellaneous Control Structures">Chapter 9, <cite class="chapter">Miscellaneous Control Structures</CITE
></A
>, don't work for the bottom-testing form.</P
></DIV
></BLOCKQUOTE
><p class="para">Perl executes the statements in the <code class="literal">do</CODE
> block.When it reaches the end, it evaluates the expression for truth. If the expression is false, the loop is done. If it's true, then the whole block is executed one more time before the expression is once again checked.</P
><p class="para">As with a normal <code class="literal">while</CODE
> loop, you can invert the sense of the test by changing <code class="literal">do</CODE
> <code class="literal">{}</CODE
> <code class="literal">while</CODE
> to <code class="literal">do</CODE
> <code class="literal">{}</CODE
> <code class="literal">until</CODE
>. The expression is still tested at the bottom, but its sense is reversed. For some cases, especially compound ones, this is the more natural way to write the test.</P
><pre class="programlisting">$stops = 0;
do {
    $stops++;
    print &quot;Next stop? &quot;;
    chomp($location = &lt;STDIN&gt;);
} until $stops &gt; 5 || $location eq 'home';</PRE
></DIV
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch04_02.htm" title="4.2 The if/unless Statement"><img src="../gifs/txtpreva.gif" alt="Previous: 4.2 The if/unless Statement" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl"><img src="../gifs/txthome.gif" alt="Learning Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch04_04.htm" title="4.4 The for Statement"><img src="../gifs/txtnexta.gif" alt="Next: 4.4 The for Statement" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">4.2 The if/unless Statement</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">4.4 The for Statement</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
