<html><head>
<title>[Chapter 7] 7.2 Simple Uses of Regular Expressions</TITLE>
<meta name="DC.title" content="Learning Perl"><meta name="DC.creator" content="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:32:52Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-284-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch07_01.htm" title="7. Regular Expressions"><link rel="prev" href="ch07_01.htm" title="7.1 Concepts About Regular Expressions"><link rel="next" href="ch07_03.htm#ch07-pgfId-307940" title="7.3 Patterns"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl"><area shape="RECT" coords="467,0,514,18" href="../search/lsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch07_01.htm" title="7.1 Concepts About Regular Expressions"><img src="../gifs/txtpreva.gif" alt="Previous: 7.1 Concepts About Regular Expressions" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch07_01.htm" title="7. Regular Expressions">Chapter 7<br>Regular Expressions</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch07_03.htm#ch07-pgfId-307940" title="7.3 Patterns"><img src="../gifs/txtnexta.gif" alt="Next: 7.3 Patterns" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch07-11320">7.2 Simple Uses of Regular Expressions</A
></H2
><p class="para">If we were looking for all lines of a file that contain the string <code class="literal">abc</CODE
>, we might use the <a class="indexterm" name="ch07-idx-307713-0"></A
><em class="emphasis">grep</EM
> command:</P
><pre class="programlisting">grep abc somefile &gt;results</PRE
><p class="para">In this case, <code class="literal">abc</CODE
> is the regular expression that the <em class="emphasis">grep</EM
> command tests against each input line. Lines that match are sent to standard output, here ending up in the file <em class="emphasis">results</EM
> because of the command-line redirection.</P
><p class="para">In Perl, we can speak of the string <code class="literal">abc</CODE
> as a regular expression by enclosing the string in <a class="indexterm" name="ch07-idx-307714-0"></A
>slashes:</P
><pre class="programlisting">if (/abc/) {
    print $_;
}</PRE
><p class="para">But what is being tested against the regular expression <code class="literal">abc</CODE
> in this case? Why, it's our old friend, the <code class="literal">$_</CODE
> variable! When a regular expression is enclosed in slashes (as above), the <code class="literal">$_</CODE
> variable is tested against the regular expression. If the regular expression matches, the <a class="indexterm" name="ch07-idx-307717-0"></A
><em class="emphasis">match</EM
> operator returns <a class="indexterm" name="ch07-idx-307716-0"></A
><a class="indexterm" name="ch07-idx-307716-1"></A
>true. Otherwise, it returns false.</P
><p class="para">For this example, the <code class="literal">$_</CODE
> variable is presumed to contain some text line and is printed if the line contains the characters <code class="literal">abc</CODE
> in sequence anywhere within the line&nbsp;- similar to the <em class="emphasis">grep</EM
> command above. Unlike the <em class="emphasis">grep</EM
> command, which is operating on all of the lines of a file, this Perl fragment is looking at just one line. To work on all lines, add a loop, as in:</P
><pre class="programlisting">while (<a class="indexterm" name="ch07-idx-307783-0"></A
>&lt;&gt;) {
    if (/abc/) {
        print $_;
    }
}</PRE
><p class="para">What if we didn't know the number of <code class="literal">b</CODE
>'s between the <code class="literal">a</CODE
> and the <code class="literal">c</CODE
>? That is, what if we want to print the line if it contains an <code class="literal">a</CODE
> followed by zero or more <code class="literal">b</CODE
>'s, followed by a <code class="literal">c</CODE
>. With <em class="emphasis">grep</EM
>, we'd say:</P
><pre class="programlisting">grep &quot;ab*c&quot; somefile &gt;results</PRE
><p class="para">(The argument containing the asterisk is in quotes because we don't want the shell expanding that argument as if it were a filename wildcard. It has to be passed as-is to <em class="emphasis">grep</EM
> to be effective.) In Perl, we can say exactly the same thing:</P
><pre class="programlisting">while (&lt;&gt;) {
    if (/ab*c/) {
        print $_;
    }
}</PRE
><p class="para">Just like <em class="emphasis">grep</EM
>, this means an <code class="literal">a</CODE
> followed by zero or more <code class="literal">b</CODE
>'s followed by a <code class="literal">c</CODE
>.</P
><p class="para">We'll visit more uses of pattern matching in <a class="xref" href="ch07_04.htm#ch07-pgfId-765" title="More on the Matching Operator">Section 7.4, "More on the Matching Operator</A
>," later in the chapter, after we talk about all kinds of regular expressions.</P
><p class="para">Another simple regular expression operator is the <a class="indexterm" name="ch07-idx-307718-0"></A
><em class="emphasis">substitute</EM
> operator, which replaces the part of a string that matches the regular expression with another string. The substitute operator looks like the <code class="literal">s</CODE
> command in the UNIX command <a class="indexterm" name="ch07-idx-307719-0"></A
><em class="emphasis">sed </EM
>utility, consisting of the letter <code class="literal">s</CODE
>, a slash, a regular expression, a slash, a replacement string, and a final slash, looking something like:</P
><pre class="programlisting">s/ab*c/def/;</PRE
><p class="para">The variable (in this case, <code class="literal">$_</CODE
>) is matched against the regular expression (<code class="literal">ab*c</CODE
>). If the match is successful, the part of the string that matched is discarded and replaced by the replacement string (<code class="literal">def</CODE
>). If the match is unsuccessful, nothing happens.</P
><p class="para">As with the match operator, we'll revisit the myriad options on the substitute operator later, in <a class="xref" href="ch07_05.htm" title="Substitutions">Section 7.5, "Substitutions</A
>."</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch07_01.htm" title="7.1 Concepts About Regular Expressions"><img src="../gifs/txtpreva.gif" alt="Previous: 7.1 Concepts About Regular Expressions" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl"><img src="../gifs/txthome.gif" alt="Learning Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch07_03.htm#ch07-pgfId-307940" title="7.3 Patterns"><img src="../gifs/txtnexta.gif" alt="Next: 7.3 Patterns" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">7.1 Concepts About Regular Expressions</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">7.3 Patterns</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
