<html><head>
<title>[Chapter 14] 14.2 Using Backquotes</TITLE>
<meta name="DC.title" content="Learning Perl"><meta name="DC.creator" content="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:35:01Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-284-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch14_01.htm" title="14. Process Management"><link rel="prev" href="ch14_01.htm" title="14.1 Using system and exec"><link rel="next" href="ch14_03.htm" title="14.3 Using Processes as Filehandles"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl"><area shape="RECT" coords="467,0,514,18" href="../search/lsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch14_01.htm" title="14.1 Using system and exec"><img src="../gifs/txtpreva.gif" alt="Previous: 14.1 Using system and exec" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch14_01.htm" title="14. Process Management">Chapter 14<br>Process Management</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch14_03.htm" title="14.3 Using Processes as Filehandles"><img src="../gifs/txtnexta.gif" alt="Next: 14.3 Using Processes as Filehandles" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch14-23211">14.2 Using Backquotes</A
></H2
><p class="para">Another way to launch a process is to put a <em class="emphasis">/bin/sh</EM
> shell command line between <a class="indexterm" name="ch14-idx-744329-0"></A
>backquotes. Like the shell, this fires off a command and waits for its completion, capturing the standard output as it goes along:</P
><pre class="programlisting">$now = &quot;the time is now &quot;.`date`; # gets text and date output</PRE
><p class="para">The value of <code class="literal">$now</CODE
> winds up with the text <code class="literal">the</CODE
> <code class="literal">time</CODE
> <code class="literal">is</CODE
> <code class="literal">now</CODE
> along with the result of the <em class="emphasis">date  </EM
>(1) command (including the trailing newline), so it looks something like this:</P
><pre class="programlisting">the time is now Fri Aug 13 23:59:59 PDT 1993</PRE
><p class="para">If the backquoted command is used in a list context rather than a scalar context, you get a list of strings, each one being a line (terminated in a newline[<a class="footnote" href="#ch14-pgfId-744396">2</A
>]) from the command's output. For the <em class="emphasis">date</EM
> example, we'd have just one element because it generated only one line of text. The output of <a class="indexterm" name="ch14-idx-746385-0"></A
><em class="emphasis">who</EM
> looks like this:<pre class="programlisting">merlyn     tty42    Dec  7 19:41
fred       tty1A    Aug 31 07:02
barney     tty1F    Sep  1 09:22</PRE
></P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch14-pgfId-744396">[2]</A
> Or whatever you've set <a class="indexterm" name="ch14-idx-746350-0"></A
><code class="literal">$/</CODE
> to.</P
></DIV
></BLOCKQUOTE
><p class="para">Here's how to grab this output in a list context:</P
><pre class="programlisting">foreach $_ (`who`) { # once per text line from who
    ($who,$where,$when) = /(\S+)\s+(\S+)\s+(.*)/;
    print &quot;$who on $where at $when\n&quot;;
}</PRE
><p class="para">Each pass through the loop works on a separate line of the output of <em class="emphasis">who</EM
>, because the backquoted command is evaluated within a list context.</P
><p class="para">The <a class="indexterm" name="ch14-idx-744332-0"></A
><a class="indexterm" name="ch14-idx-744332-1"></A
>standard input and <a class="indexterm" name="ch14-idx-744333-0"></A
>standard error of the command within backquotes are inherited from the Perl process.[<a class="footnote" href="#ch14-pgfId-744779">3</A
>] This means that you normally get just the standard output of the commands within the backquotes as the value of the backquoted-string. One common thing to do is to merge the <a class="indexterm" name="ch14-idx-744334-0"></A
>standard error into the standard output so that the backquoted command picks up both, using the <code class="literal">2&gt;&amp;1</CODE
> construct of the shell:</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch14-pgfId-744779">[3]</A
> Actually, it's a bit more complicated that this. See the question in Section 8 of the Perl FAQ on "How can I capture <code class="literal">STDERR</CODE
> from an external command?" If you're running Perl version 5.004, the FAQ is distributed as a normal manpage&nbsp;- <em class="emphasis">perlfaq8 </EM
>(1) in this case.</P
></DIV
></BLOCKQUOTE
><pre class="programlisting">die &quot;rm spoke!&quot; if `rm fred 2&gt;&amp;1`;</PRE
><p class="para">Here, the Perl process is terminated if <em class="emphasis">rm</EM
> says anything, either to standard output or standard error, because the result will no longer be an empty string (an empty string would be false).</P
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch14_01.htm" title="14.1 Using system and exec"><img src="../gifs/txtpreva.gif" alt="Previous: 14.1 Using system and exec" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl"><img src="../gifs/txthome.gif" alt="Learning Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch14_03.htm" title="14.3 Using Processes as Filehandles"><img src="../gifs/txtnexta.gif" alt="Next: 14.3 Using Processes as Filehandles" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">14.1 Using system and exec</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">14.3 Using Processes as Filehandles</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
