<html><head>
<title>[Chapter 19] 19.9 Troubleshooting CGI Programs</TITLE>
<meta name="DC.title" content="Learning Perl"><meta name="DC.creator" content="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:36:33Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-284-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch19_01.htm" title="19. CGI Programming"><link rel="prev" href="ch19_08.htm#ch19-pgfId-318" title="19.8 Creating a Guestbook Program"><link rel="next" href="ch19_10.htm#ch19-pgfId-458" title="19.10 Perl and the Web: Beyond CGI Programming"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl"><area shape="RECT" coords="467,0,514,18" href="../search/lsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch19_08.htm#ch19-pgfId-318" title="19.8 Creating a Guestbook Program"><img src="../gifs/txtpreva.gif" alt="Previous: 19.8 Creating a Guestbook Program" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch19_01.htm" title="19. CGI Programming">Chapter 19<br>CGI Programming</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch19_10.htm#ch19-pgfId-458" title="19.10 Perl and the Web: Beyond CGI Programming"><img src="../gifs/txtnexta.gif" alt="Next: 19.10 Perl and the Web: Beyond CGI Programming" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch19-14211">19.9 Troubleshooting CGI Programs</A
></H2
><p class="para"><a class="indexterm" name="ch19-idx-4414-0"></A
><a class="indexterm" name="ch19-idx-4414-1"></A
>CGI programs launched from a web server run under a fundamentally different environment than they do when invoked from the command line. While you should always verify that your CGI program runs properly from the command line,[<a class="footnote" href="#ch19-pgfId-1383">14</A
>] this isn't enough to guarantee that your program will work when called from the web server. </P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch19-pgfId-1383">[14]</A
> See the CGI.pm documentation for tips on command-line debugging. </P
></DIV
></BLOCKQUOTE
><p class="para">You should get the CGI programming FAQ and a good book on CGI programming to help you in this. Some of these are listed at the end of this chapter. Here's a brief list of the frequent problems that arise in CGI programming. Almost all of them trigger those annoyingly unhelpful <code class="literal">500</CODE
> <code class="literal">Server</CODE
> <code class="literal">Error</CODE
> messages that you will soon come to know and hate. </P
><ul class="itemizedlist"><li class="listitem"><p class="para"><a class="listitem" name="ch19-pgfId-416"></A
>If, when sending HTML to a browser, you forget the blank line between the HTTP header (that is, the <code class="literal">Content-type</CODE
><a class="indexterm" name="ch19-idx-4418-0"></A
> line) and the body, it won't work. Remember to output a proper <code class="literal">Content-Type</CODE
> line (and possibly other HTTP headers) plus a totally blank line before you do anything else. </P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch19-pgfId-418"></A
>The server needs read and execute access to the script, so its <a class="indexterm" name="ch19-idx-4419-0"></A
><a class="indexterm" name="ch19-idx-4419-1"></A
>permissions should usually be mode 0555 or, better, 0755. (This is UNIX-specific.) </P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch19-pgfId-420"></A
>The directory where the script resides must itself be executable, so give it permissions of 0111 or, better, 0755. (This is UNIX-specific.) </P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch19-pgfId-422"></A
>The script must be installed in the proper directory for your server configuration. For example, on some systems, it may be <em class="emphasis">/usr/etc/httpd/cgi-bin/</EM
><a class="indexterm" name="ch19-idx-4420-0"></A
>. </P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch19-pgfId-424"></A
>You may need to have your script's filename end in a particular suffix, like <em class="emphasis">.cgi</EM
> or <em class="emphasis">.pl</EM
>. We advise against this setup, preferring to enable CGI execution on a per-directory basis instead, but some configurations may require it. Automatically assuming that anything ending in <em class="emphasis">.cgi</EM
> is executable is perilous if any directories are writable by FTP clients, or when mirroring someone else's directory structure. In both cases, executable programs may suddenly appear on your server without the webmaster's knowledge or consent. It also means that any files whose names end in <em class="emphasis">.cgi</EM
> or <em class="emphasis">.pl</EM
> can never again be fetched via a normal URL, an effect that ranges between undesirable and disastrous.</P
><p class="para">Remember that the <em class="emphasis">.pl</EM
> suffix means it's a Perl library, not a Perl executable. Confusing these two will only make you unhappy in the long run. If you absolutely <em class="emphasis">must</EM
> have a unique suffix on a script to enable Perl execution (because your operating system just isn't clever enough to use something like the <code class="literal">#!/usr/bin/perl</CODE
> notation), we suggest a suffix of <em class="emphasis">.plx</EM
> instead. But you still incur the other problems we just mentioned. </P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch19-pgfId-428"></A
>Your server configuration requires CGI execution specially enabled for the directory you put your CGI script in. Make sure both GET and POST are allowed. (Your webmaster will know what that means.) </P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch19-pgfId-430"></A
>The web server doesn't execute your script under your user ID. Make sure the files and directories accessed by the script are open to whatever user the web server runs scripts as, for example, <code class="literal">nobody</CODE
>, <code class="literal">wwwuser</CODE
>, or <code class="literal">httpd</CODE
>. You may need to precreate such files and directories and give them wide-open write permissions. Under UNIX, this is done with <code class="literal">chmod</CODE
> <code class="literal">a+w</CODE
>. Always be alert to the risks when you grant such access to files. </P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch19-pgfId-432"></A
>Always run your script under Perl's <code class="literal">-w</CODE
> flag to get warnings. These go to the web-server error log, which contains any errors and warnings generated by your script. Learn the path to that logfile from your webmaster and check it for problems. See also the standard CGI::Carp module for how to handle errors better. </P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch19-pgfId-434"></A
>Make sure that the versions and paths to Perl and any libraries you use (like CGI.pm) are what you're expecting them to be on the machine the web server is running on. </P
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch19-pgfId-436"></A
>Enable autoflush on the STDOUT filehandle at the top of your script by setting the <code class="literal">$|</CODE
> variable to a true value, like 1. If you've the used the FileHandle module or any of the IO modules (like IO::File, IO::Socket, and so on), then you can use the more mnemonically named <code class="literal">autoflush()</CODE
> method on the filehandle instead: </P
><pre class="programlisting">     use FileHandle;
     STDOUT-&gt;autoflush(1);</PRE
></LI
><li class="listitem"><p class="para"><a class="listitem" name="ch19-pgfId-442"></A
>Check the return value of every system call your program makes, and take appropriate action if the call fails. <a class="indexterm" name="ch19-idx-4416-0"></A
><a class="indexterm" name="ch19-idx-4416-1"></A
></P
></LI
></UL
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch19_08.htm#ch19-pgfId-318" title="19.8 Creating a Guestbook Program"><img src="../gifs/txtpreva.gif" alt="Previous: 19.8 Creating a Guestbook Program" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl"><img src="../gifs/txthome.gif" alt="Learning Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch19_10.htm#ch19-pgfId-458" title="19.10 Perl and the Web: Beyond CGI Programming"><img src="../gifs/txtnexta.gif" alt="Next: 19.10 Perl and the Web: Beyond CGI Programming" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">19.8 Creating a Guestbook Program</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">19.10 Perl and the Web: Beyond CGI Programming</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
