<html><head>
<title>[Chapter 14] 14.5 Summary of Process Operations</TITLE>
<meta name="DC.title" content="Learning Perl"><meta name="DC.creator" content="Randal Schwartz, Tom Christiansen &amp; Larry Wall"><meta name="DC.publisher" content="O'Reilly &amp; Associates, Inc."><meta name="DC.date" content="1999-07-02T01:35:08Z"><meta name="DC.type" content="Text.Monograph"><meta name="DC.format" content="text/html" scheme="MIME"><meta name="DC.source" content="1-56592-284-0" scheme="ISBN"><meta name="DC.language" content="en-US"><meta name="generator" content="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><link rev="made" href="mailto:online-books@oreilly.com" title="Online Books Comments"><link rel="up" href="ch14_01.htm" title="14. Process Management"><link rel="prev" href="ch14_04.htm" title="14.4 Using fork"><link rel="next" href="ch14_06.htm" title="14.6 Sending and Receiving Signals"></HEAD
><body bgcolor="#FFFFFF" text="#000000"><div class="htmlnav"><h1><img src="gifs/smbanner.gif" alt="Learning Perl" usemap="#srchmap" border="0"></H1
><map name=index.html"srchmap"><area shape="RECT" coords="0,0,466,54" href="index.htm" alt="Learning Perl"><area shape="RECT" coords="467,0,514,18" href="../search/lsrch.htm" alt="Search this book"></MAP
><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch14_04.htm" title="14.4 Using fork"><img src="../gifs/txtpreva.gif" alt="Previous: 14.4 Using fork" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><b><font face="ARIEL,HELVETICA,HELV,SANSERIF" size="-1"><a class="chapter" rel="up" href="ch14_01.htm" title="14. Process Management">Chapter 14<br>Process Management</A
></FONT
></B
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch14_06.htm" title="14.6 Sending and Receiving Signals"><img src="../gifs/txtnexta.gif" alt="Next: 14.6 Sending and Receiving Signals" border="0"></A
></TD
></TR
></TABLE
>&nbsp;<hr align="LEFT" width="515" title="footer"></DIV
><div class="sect1"><h2 class="sect1"><a class="title" name="ch14-16284">14.5 Summary of Process Operations</A
></H2
><p class="para"><a class="xref" href="#ch14-pgfId-121" title="Summary of Subprocess Operations">Table 14.1</A
> <a class="indexterm" name="ch14-idx-744356-0"></A
>summarizes the operations that you have for launching a process.</P
><br><table class="table" border="1" cellpadding="3"><caption class="table"><a class="title" name="ch14-pgfId-121">Table 14.1: Summary of Subprocess Operations</A
></CAPTION
><thead class="thead"><tr class="row" valign="TOP"><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Operation</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Standard Input</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Standard Output</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Standard Error</P
></TH
><th class="entry" align="LEFT" rowspan="1" colspan="1"><p class="para">Waited for?</P
></TH
></TR
></THEAD
><tbody class="tbody"><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><pre class="programlisting">system()</PRE
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Inherited from program</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Inherited from program</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Inherited from program</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para">Backquoted string</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Inherited from program</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Captured as string value</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Inherited from program</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Yes</P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">open()</CODE
> command as filehandle for output</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Connected to filehandle</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Inherited from program</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Inherited from program</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Only at time of <code class="literal">close()</CODE
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">open()</CODE
> command as filehandle for input</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Inherited from program</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Connected to filehandle</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Inherited from program</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">Only at time of <code class="literal">close()</CODE
></P
></TD
></TR
><tr class="row" valign="TOP"><td class="entry" rowspan="1" colspan="1"><p class="para"><code class="literal">fork</CODE
>, <code class="literal">exec</CODE
>, <code class="literal">wait</CODE
>, <code class="literal">waitpid</CODE
></P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">User selected</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">User selected</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">User selected</P
></TD
><td class="entry" rowspan="1" colspan="1"><p class="para">User selected</P
></TD
></TR
></TBODY
></TABLE
><p class="para">The simplest way to create a process is with the <code class="literal">system</CODE
> function. Standard input, output, and error are unaffected (they're inherited from the Perl process). A backquoted string creates a process, capturing the standard output of the process as a string value for the Perl program. Standard input and standard error are unaffected. Both these methods require that the process finish before any more code is executed.</P
><p class="para">A simple way to get an asynchronous process (one that allows the Perl program to continue before the process is complete) is to open a command as a filehandle, creating a pipe for the command's standard input or standard output. A command opened as a filehandle for reading inherits the standard input and standard error from the Perl program; a command opened as a filehandle for writing inherits the standard output and standard error from the Perl program.</P
><p class="para">The most flexible way of starting a process is to have your program invoke the <code class="literal">fork</CODE
>, <code class="literal">exec</CODE
>, and <code class="literal">wait</CODE
> or <code class="literal">waitpid</CODE
> functions, which map directly to their UNIX system call namesakes. Using these functions, you can select whether you are waiting or not, and configure the standard input, output, and error any way you choose.[<a class="footnote" href="#ch14-pgfId-744417">5</A
>]</P
><blockquote class="footnote"><div class="footnote"><p class="para"><a class="footnote" name="ch14-pgfId-744417">[5]</A
> Although it might also help to know about<code class="literal"> open(STDERR,"&gt;&amp;STDOUT")</CODE
><a class="indexterm" name="ch14-idx-744375-0"></A
> forms for fine tuning the filehandles. See the <a class="olink" href="../prog/ch03_102.htm#PERL2-CMD-OPEN">open</A
> entry in <a class="olink" href="../prog/ch03_01.htm">Chapter 3</A
> of <a class="citetitle" href="../prog/index.htm" title="Programming Perl"><cite class="citetitle">Programming Perl</CITE
></A
>, or in<em class="emphasis"> perlfunc </EM
>(1).</P
></DIV
></BLOCKQUOTE
></DIV
><div class="htmlnav"><p></P
><hr align="LEFT" width="515" title="footer"><table width="515" border="0" cellspacing="0" cellpadding="0"><tr><td align="LEFT" valign="TOP" width="172"><a class="sect1" href="ch14_04.htm" title="14.4 Using fork"><img src="../gifs/txtpreva.gif" alt="Previous: 14.4 Using fork" border="0"></A
></TD
><td align="CENTER" valign="TOP" width="171"><a class="book" href="index.htm" title="Learning Perl"><img src="../gifs/txthome.gif" alt="Learning Perl" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172"><a class="sect1" href="ch14_06.htm" title="14.6 Sending and Receiving Signals"><img src="../gifs/txtnexta.gif" alt="Next: 14.6 Sending and Receiving Signals" border="0"></A
></TD
></TR
><tr><td align="LEFT" valign="TOP" width="172">14.4 Using fork</TD
><td align="CENTER" valign="TOP" width="171"><a class="index" href="index/idx_0.htm" title="Book Index"><img src="../gifs/index.gif" alt="Book Index" border="0"></A
></TD
><td align="RIGHT" valign="TOP" width="172">14.6 Sending and Receiving Signals</TD
></TR
></TABLE
><hr align="LEFT" width="515" title="footer"><p class="nav"><font size="-1">[ <a href="../index.html" title="The Perl CD Bookshelf">Library Home</A
> | <a href="../perlnut/index.htm" title="Perl in a Nutshell">Perl in a Nutshell</A
> | <a href="index.htm" title="Learning Perl">Learning Perl</A
> | <a href="../learn32/index.htm" title="Learning Perl on Win32 Systems">Learning Perl on Win32</A
> | <a href="../prog/index.htm" title="Programming Perl">Programming Perl</A
> | <a href="../advprog/index.htm" title="Advanced Perl Programming">Advanced Perl Programming</A
> | <a href="../cookbook/index.htm" title="Perl Cookbook">Perl Cookbook</A
> ]</FONT
></P
></DIV
></BODY
></HTML
>
