<html>
<head>
<title>When Entity Beans Are Not an Option (Enterprise JavaBeans)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="Richard Monson-Haefel">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-869-5E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="When Entity Beans Are Not an Option">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm" alt="Enterprise JavaBeans"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch09_08.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch09_08.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch09_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch09_01.htm">Chapter 9: Design Strategies</a></td><td align="right" valign="top" width="172"><a href="ch09_10.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch09_10.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h2 class="sect1">9.9. When Entity Beans Are Not an Option</h2>

<p>
<a name="INDEX-1935"></a><a name="INDEX-1936"></a><a name="INDEX-1937"></a>A couple of EJB 1.0 servers do not
support entity beans. This is a legitimate choice, since support for
entity beans is not required in EJB 1.0.<a href="#FOOTNOTE-2">[2]</a>
This section provides some strategies for developing systems that
only use session beans for EJB 1.0 developers.
</p>
<blockquote class="footnote"> <a name="FOOTNOTE-2"></a>
<p>[2] Support for
entity beans is required in Version 1.1 of EJB.</p> </blockquote>

<p>Entity bean support is required in EJB 1.1. If you're using EJB
1.1, you can skip this section.
</p>

<a name="JBEANS-CH-9-SECT-9.1"></a>
<h3 class="sect2">9.9.1. Emulating Entity Beans with Session Beans</h3>

<p>
<a name="INDEX-1938"></a><a name="INDEX-1939"></a>Session beans that implement the
<tt class="literal">SessionSynchronization</tt> interface (discussed in
<a href="ch08_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch08_01.htm">Chapter 8, "Transactions"</a>) can emulate some of the functionality
of bean-managed entity beans. This approach provides a couple of
advantages. First, these session beans can represent entity business
concepts like entity beans; second, dependency on vendor-specific
object-to-relational mapping tools is avoided.
</p>

<p>Unfortunately, session beans were never designed to represent data
directly in the database, so using them as a replacement for entity
beans is problematic. Entity beans fulfill this duty nicely because
they are transactional objects. When the attributes of a bean are
changed, the changes are reflected in the database automatically in a
transactionally safe manner. This cannot be duplicated in stateful
session beans because they are <a name="INDEX-1940"></a><a name="INDEX-1941"></a>transactionally aware
but are not transactional objects. The difference is subtle but
important. Stateful session beans are not shared like entity beans.
There is no concurrency control when two clients attempt to access
the same bean at the same time. In the case of the stateful session
beans, each client gets its own instance, so many copies of the same
session bean representing the same entity data can be in use
concurrently. Database isolation can prevent some problems, but the
danger of obtaining and using dirty data is high.
</p>

<p>Other problems include the fact that session beans emulating entity
beans cannot have <tt class="literal">find()</tt> methods in their home
interfaces. Entity beans support <tt class="literal">find()</tt> methods as
a convenient way to locate data. Find methods could be placed in the
session bean's remote interface, but this would be inconsistent
with the EJB component model. Also, a stateful session bean must use
the <tt class="literal">SessionSynchronization</tt> interface to be
transactionally safe, which requires that it only be used in the
scope of the client's transaction. This is because methods like
<tt class="literal">ejbCreate()</tt> and <tt class="literal">ejbRemove()</tt> are
not transactional. In addition, <tt class="literal">ejbRemove()</tt> has a
significantly different function in session beans than in entity
beans. Should <tt class="literal">ejbRemove()</tt> end the conversation,
delete data, or both?
</p>

<p>Weighing all the benefits against the problems and risks of data
inconsistency, it is recommended that you do not use stateful session
beans to emulate entity beans. If your EJB server doesn't
support entity beans, use the direct access or object-to-relational
mapping options.
</p>


<a name="ch09-28-fm2xml"></a>
<h3 class="sect2">9.9.2. Limiting Session Beans to Workflow</h3>
<p>
<a name="INDEX-1942"></a><a name="INDEX-1943"></a>
</p>
<a name="JBEANS-CH-9-SECT-9.2.1"></a>
<h3 class="sect3">9.9.2.1. Direct database access with JDBC</h3>

<p>
<a name="INDEX-1944"></a><a name="INDEX-1945"></a><a name="INDEX-1946"></a>Perhaps the most straightforward and most
portable option for using a server that only supports session beans
is direct database access. We did some of this with the
ProcessPayment bean and the TravelAgent bean in <a href="ch07_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch07_01.htm">Chapter 7, "Session Beans"</a>. When entity beans are not an option, we
simply take this a step further. The following code is an example of
the TravelAgent bean's <tt class="literal">bookPassage()</tt> method,
coded with direct JDBC data access instead of using entity beans:
</p>

<blockquote>
<pre class="programlisting">public Ticket bookPassage(CreditCard card, double price)
        throws RemoteException, IncompleteConversationalState {
    if (customerID == 0 || cruiseID == 0 || cabinID == 0) {
        throw new IncompleteConversationalState();
    }
    Connection con = null;
    PreparedStatement ps = null;;
    try {
        con = getConnection();

        // Insert reservation.
        ps = con.prepareStatement("insert into RESERVATION "+
            "(CUSTOMER_ID, CRUISE_ID, CABIN_ID, PRICE) values (?,?,?,?)");
        ps.setInt(1, customerID);
        ps.setInt(2, cruiseID);
        ps.setInt(3, cabinID);
        ps.setDouble(4, price);
        if (ps.executeUpdate() != 1) {
        throw new RemoteException (
            "Failed to add Reservation to database");
        }
        // Insert payment.
        ps = con.prepareStatement("insert into PAYMENT "+
            "(CUSTOMER_ID, AMOUNT, TYPE, CREDIT_NUMBER, CREDIT_EXP_DATE) "+
            "values(?,?,?,?,?)");
        ps.setInt(1, customerID);
        ps.setDouble(2, price);
        ps.setString(3, card.type);
        ps.setLong(4, card.number);
        ps.setDate(5, new java.sql.Date(card.experation.getTime()));
        if (ps.executeUpdate() != 1) {
        throw new RemoteException (
            "Failed to add Reservation to database");
        }
        Ticket ticket = new Ticket(customerID,cruiseID,cabinID,price);
        return ticket;
        
    } catch (SQLException se) {
      throw new RemoteException (se.getMessage());
    }
    finally {
      try {
        if (ps != null) ps.close(); 
        if (con!= null) con.close(); 
      } catch(SQLException se){
        se.printStackTrace();
      }
    }
}</pre>
</blockquote>

<p>No mystery here: we have simply redefined the TravelAgent bean so
that it works directly with the data through JDBC rather than using
entity beans. This method is transactionally safe because an
exception thrown anywhere within the method will cause all the
database inserts to be rolled back. Very clean and simple.
</p>

<p>The idea behind this strategy is to continue to model workflow or
processes with session beans. The TravelAgent bean models the process
of making a reservation. Its conversational state can be changed over
the course of a conversation, and safe database changes can be made
based on the conversational state.
</p>



<a name="JBEANS-CH-9-SECT-9.2.2"></a>
<h3 class="sect3">9.9.2.2. Direct access with object-to-relational mapping tools</h3>

<p>
<a name="INDEX-1947"></a><a name="INDEX-1948"></a>Object-to-relational mapping provides
another mechanism for "direct" access to data in a
stateful session bean. The advantage of object-to-relational mapping
tools is that data can be encapsulated as object-like entity beans.
So, for example, an object-to-relational mapping approach could end
up looking very similar to our entity bean design. The problem with
object-to-relational mapping is that most tools are proprietary and
may not be reusable across EJB servers. In other words, the
object-to-relational tool may bind you to one brand of EJB server.
Object-to-relational mapping tools are, however, a much more
expedient, safe, and productive mechanism to obtaining direct
database access when <a name="INDEX-1949"></a><a name="INDEX-1950"></a><a name="INDEX-1951"></a> entity beans are not available.
</p>





<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch09_08.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch09_08.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch09_10.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch09_10.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">9.8. Object-to-Relational Mapping Tools</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">9.10. Avoid Chaining Stateful Session Beans</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
