<html>
<head>
<title>The Life Cycle of a Stateful Session Bean (Enterprise JavaBeans)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="Richard Monson-Haefel">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-869-5E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The Life Cycle of a Stateful Session Bean">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm" alt="Enterprise JavaBeans"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch07_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch07_03.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch07_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch07_01.htm">Chapter 7: Session Beans</a></td><td align="right" valign="top" width="172"><a href="ch08_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch08_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h2 class="sect1">7.4. The Life Cycle of a Stateful Session Bean</h2>

<p>
<a name="INDEX-1519"></a><a name="INDEX-1520"></a>The
biggest difference between the stateful session bean and the other
bean types is that stateful session beans don't use
<a name="INDEX-1521"></a><a name="INDEX-1522"></a>instance pooling. Stateful session
beans are dedicated to one client for their entire life, so there is
no <a name="INDEX-1523"></a><a name="INDEX-1524"></a>swapping or pooling of
instances.<a href="#FOOTNOTE-12">[12]</a> Instead of pooling instances,
stateful session beans are simply evicted from memory to conserve
resources. The EJB object remains connected to the client, but the
bean instance is dereferenced and garbage collected during inactive
periods. This means that a stateful bean must be passivated before it
is evicted to preserve the conversational state of the instance, and
it must be activated to restore the state when the EJB object becomes
active again.
</p>
<blockquote class="footnote"> <a name="FOOTNOTE-12"></a>
<p>[12] Some vendors use pooling with stateful
session beans, but that is a proprietary implementation and
shouldn't impact the specified life cycle of the stateful
session bean. </p> </blockquote>

<p>The bean's perception of its life cycle depends on whether or
not it implements a special interface called
<tt class="literal">javax.ejb.SessionSynchronization</tt>. This interface
defines an additional set of callback methods that notify the bean of
its participation in transactions. A bean that implements
<tt class="literal">SessionSynchronization</tt> can cache database data
across several method calls before making an update. We have not
discussed transactions in any detail yet, so we will not consider
this view of the stateful session bean's life cycle until <a href="ch08_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch08_01.htm">Chapter 8, "Transactions"</a>. This section describes the life cycle of
stateful session beans that do not implement the
<tt class="literal">SessionSynchronization</tt> interface.
</p>

<p>The life cycle of a stateful session bean has three states: Does Not
Exist, Method-Ready, and Passivated. This sounds a lot like a
stateless session bean, but the Method-Ready state is significantly
different from the Method-Ready Pool of stateless beans. Figures
<a href="#JBEANS-CH-7-FIG-2">Figure 7-2</a> and <a href="#JBEANS-CH-7-FIG-3">Figure 7-3</a> show
the state diagrams for stateful session beans in EJB 1.1 and EJB 1.1.
</p>

<a name="JBEANS-CH-7-FIG-2"></a>
<div class="figure">
<img alt="figure" src="figs/ejb2_0702.gif" webstripperlinkwas="figs/ejb2_0702.gif"></div>
<h4 class="objtitle">Figure 7-2. EJB 1.1 stateful session bean life cycle</h4>

<a name="JBEANS-CH-7-FIG-3"></a>
<div class="figure">
<img alt="figure" src="figs/ejb2_0703.gif" webstripperlinkwas="figs/ejb2_0703.gif"></div>
<h4 class="objtitle">Figure 7-3. EJB 1.0 stateful session bean life cycle</h4>

<a name="JBEANS-CH-7-SECT-4.1"></a>
<h3 class="sect2">7.4.1. Does Not Exist</h3>

<p>
<a name="INDEX-1525"></a><a name="INDEX-1526"></a><a name="INDEX-1527"></a>Like the
entity bean and stateless session bean, when a bean instance is in
the Does Not Exist state, it is not an instance in the memory of the
system. In other words, it has not been instantiated yet.
</p>


<a name="JBEANS-CH-7-SECT-4.2"></a>
<h3 class="sect2">7.4.2. The Method-Ready State</h3>

<a name="JBEANS-CH-7-SECT-4.2.1"></a>
<h3 class="sect3">7.4.2.1. Transitioning to the Method-Ready state</h3>

<p>
<a name="INDEX-1528"></a><a name="INDEX-1529"></a>When a <a name="INDEX-1530"></a>
client invokes the <a name="INDEX-1531"></a><tt class="literal">create()</tt> method on
an EJB home of a stateful session bean, its life cycle begins. When
the <tt class="literal">create()</tt> method is received by the container,
the container invokes <tt class="literal">newInstance()</tt> on the bean
class, creating a new instance of the bean. At this point, the bean
instance is assigned to its EJB object. Next, the container invokes
<tt class="literal">setSessionContext()</tt> on the instance, handing it
its reference to the <tt class="literal">SessionContext</tt>, which it must
maintain for life. Finally, the container invokes the
<tt class="literal">ejbCreate()</tt> method on the instance that matches
the <tt class="literal">create()</tt> method invoked by the client. Once
<tt class="literal">ejbCreate()</tt> has completed, the container returns
the EJB object's remote reference to the client. The instance
is now in the Method-Ready State and is ready to service business
methods invoked by the client on the bean's remote reference.
</p>



<a name="JBEANS-CH-7-SECT-4.2.2"></a>
<h3 class="sect3">7.4.2.2. Life in the Method-Ready state</h3>

<p>While in the Method-Ready State, the bean instance is free to receive
method invocations from the client, which may involve controlling the
workflow of other beans or accessing the database directly. During
this time, the bean can maintain conversational state and open
resources in its instance variables.
</p>



<a name="JBEANS-CH-7-SECT-4.2.3"></a>
<h3 class="sect3">7.4.2.3. Transitioning out of the Method-Ready state</h3>

<p>Bean instances leave the <a name="INDEX-1532"></a><a name="INDEX-1533"></a>Method-Ready state to enter
<a name="INDEX-1534"></a>either the
Passivated state or the Does Not Exist state. During its lifetime, a
bean instance will be passivated and activated zero or more times.
It's likely that it will be passivated at least once, passing
into the Passivated state. The bean enters the Does Not Exist state
if it is removed. A client application can remove a bean by invoking
one of the <tt class="literal">remove()</tt> methods on the client API, or
the container can choose to remove the bean.
</p>



<a name="JBEANS-CH-7-SECT-4.2.4"></a>
<h3 class="sect3">7.4.2.4. EJB 1.1 timeouts</h3>

<p>The container can
<a name="INDEX-1535"></a>remove the bean instance from the
Method-Ready State if the bean times out. Timeouts are declared at
deployment time in a manner specific to the EJB vendor. When a
timeout occurs, the <tt class="literal">ejbRemove()</tt> method is
<em class="emphasis">not</em> invoked. A stateful bean cannot time out
while a transaction is in progress.
</p>



<a name="JBEANS-CH-7-SECT-4.2.5"></a>
<h3 class="sect3">7.4.2.5. EJB 1.0 timeouts</h3>

<p>The container removes the bean if it times out (the timeout period is
set in the deployment descriptor). When a bean is removed, its
<tt class="literal">ejbRemove()</tt> method is invoked, giving the bean
instance an opportunity to close any open resources and invoke
<tt class="literal">remove()</tt> on any session beans it has referenced.
</p>



<a name="JBEANS-CH-7-SECT-4.3"></a>
<h3 class="sect2">7.4.3. Passivated State</h3>

<p>
<a name="INDEX-1536"></a><a name="INDEX-1537"></a>During the lifetime of a stateful
session bean, there <a name="INDEX-1538"></a>
may be periods of inactivity, when the bean instance is not servicing
methods from the client. To conserve resources, the container can
passivate the bean instance while it is inactive by preserving its
conversational state and evicting the bean instance from memory.
</p>

<p>When a stateful bean is passivated, the instance fields are read and
then written to the secondary storage associated with the EJB object.
When the stateful session bean has been successfully passivated, the
instance is evicted from memory; it is destroyed.
</p>

<p>When a bean is about to be passivated, its
<tt class="literal">ejbPassivate()</tt> method is invoked, alerting the
bean instance that it is about to enter the Passivated state. At this
time, the bean instance should close any open resources and set all
nontransient, nonserializable fields to <tt class="literal">null</tt>. This
will prevent problems from occurring when the bean is
serialized.<a name="INDEX-1539"></a>Transient fields will simply be
ignored.
</p>

<dl>
<dt>
<b>EJB 1.1 passivation issues</b>
</dt>
<dd>
<p>A bean's <a name="INDEX-1540"></a><a name="INDEX-1541"></a>conversational state may consist of
only primitive values, objects that are serializable, and the
following special types:
</p>
</dd>

</dl>

<ul>
<li>
<p>
<tt class="literal">javax.ejb.SessionContext</tt>
</p>
</li>
<li>
<p>
<tt class="literal">javax.ejb.EJBHome</tt> (home interface types)</p>
</li>
<li>
<p>
<tt class="literal">javax.ejb.EJBObject</tt> (remote interface types)</p>
</li>
<li>
<p>
<tt class="literal">javax.jta.UserTransaction</tt> (bean transaction
interface)
</p>
</li>
<li>
<p>
<tt class="literal">javax.naming.Context</tt> (only when it references the
JNDI ENC)
</p>
</li>
</ul>
<p>The types in this list (and their subtypes) are handled specially by
the passivation mechanism. They don't need to be serializable;
they will be maintained through passivation and restored
automatically to the bean instance when it is activated.
</p>

<p>A bean instance's conversational state will be written to
secondary storage to preserve it when the instance is passivated and
destroyed. Containers can use standard Java serialization to preserve
the bean instance, or some other mechanism that achieves the same
result. Some vendors, for example, will simply read the values of the
fields and store them in a cache. The container is required to
preserve remote references to other beans with the conversational
state. When the bean is activated, the container must restore any
bean references automatically. The container must also restore any
references to the special types listed earlier.
</p>

<p>Fields declared <tt class="literal">transient</tt> will not be preserved
when the bean is passivated. Except for the special types listed
earlier, all fields that are nontransient and nonserializable must be
set to <tt class="literal">null</tt> before the instance is passivated or
else the container will destroy the bean instance, making it
unavailable for continued use by the client. References to special
types must automatically be preserved with the serialized bean
instance by the container so that they can be reconstructed when the
bean is activated.
</p>

<p>A bean instance can time out while it is passivated. If a timeout
occurs, the container will discard the instance, returning it to the
Does Not Exist state. The <tt class="literal">ejbRemove()</tt> method will
<em class="emphasis">not</em> be called on an instance that times out.
</p>

<dl>
<dt>
<b>EJB 1.0 <a name="INDEX-1542"></a>
passivation issues</b>
</dt>
<dd>
<p>With the exception of the <tt class="literal">SessionContext</tt> and
remote references to other beans, conversational state must be
primitive values or objects that are serializable. This is because
the bean instance's conversational state will be written to
secondary storage to preserve it when the instance is destroyed.
Containers can use standard Java serialization to preserve the bean
instance, or some other mechanism that achieves the same result. Some
vendors, for example, will simply read the values of the fields and
store them in a cache. The container is required to preserve remote
references to other beans with the conversational state. When the
bean is activated, the container must restore any bean references
automatically. The container must also restore the
<tt class="literal">SessionContext</tt> reference automatically.<a href="#FOOTNOTE-13">[13]</a>
</p>
<blockquote class="footnote">
<a name="FOOTNOTE-13"></a>
<p>[13] References to <tt class="literal">SessionContext</tt> or
<tt class="literal">EntityContext</tt> in a bean class should not be
transient. At the time of this writing, however, at least one major
vendor <em class="emphasis">required</em> that references to
<tt class="literal">SessionContext</tt> in session beans be transient. This
is a proprietary requirement and is noncompliant with the
specification.</p> </blockquote>

<p>Nonserializable object references and variables labeled as
<tt class="literal">transient</tt> will not be preserved when the bean is
passivated. Fields that are nontransient and nonserializable must be
set to <tt class="literal">null</tt> before the instance is passivated or
the container can destroy the bean, making it unavailable for
continued use by the client. References to beans and the
<tt class="literal">SessionContext</tt> must be automatically preserved
with the serialized bean instance by the container so that they can
be reconstructed when the bean is activated.
</p>
</dd>

</dl>

<p>
<a name="INDEX-1543"></a><a name="INDEX-1544"></a>When the client
makes a request on an EJB object whose bean is passivated, the
container activates the instance. This involves deserializing the
bean instance and reconstructing the
<tt class="literal">SessionContext</tt> reference and bean references held
by the instance before it was passivated. When a bean's
conversational state has been successfully activated, the
<tt class="literal">ejbActivate()</tt><a name="INDEX-1545"></a>
 method is invoked. The bean instance should open any resources needed
and initialize the value of any transient fields within the
<tt class="literal">ejbActivate()</tt> method. Once
<tt class="literal">ejbActivate()</tt> is complete, the bean is back in the
Method-Ready state and available to service client requests delegated
by the EJB object.
</p>

<p>The activation of a bean instance follows the rules of Java
<a name="INDEX-1546"></a>serialization. The
exception to this is transient fields. In Java serialization,
transient fields are set to their default values when an object is
deserialized; primitive numbers become zero, Booleans
<tt class="literal">false</tt>, and object references
<tt class="literal">null</tt>. In EJB, transient fields do not have to be
set to their initial values; therefore, they could contain arbitrary
values when the bean is activated. The value held by transient fields
following activation is unpredictable across vendor implementations,
so don't depend on them to be initialized. Instead, use
<tt class="literal">ejbActivate()</tt> to reset their
values<a name="INDEX-1547"></a><a name="INDEX-1548"></a><a name="INDEX-1549"></a>.
</p>

<a name="ch07-39-fm2xml"></a>
<h3 class="sect3">7.4.3.1. EJB 1.1 system exceptions</h3>
<p>
<a name="INDEX-1550"></a>

Whenever a system exception is thrown by a bean method, the container
invalidates the EJB object and destroys the bean instance. The bean
instance moves directly to the Does Not Exist state and the
<tt class="literal">ejbRemove()</tt> method is <em class="emphasis">not</em>
invoked.
</p>

<p>A system exception is any nonapplication exception including
<tt class="literal">RemoteException</tt>, <tt class="literal">EJBException</tt>,
and any unchecked exceptions. <a name="INDEX-1551"></a><a name="INDEX-1552"></a>Checked exceptions thrown from
subsystems are usually wrapped in an <tt class="literal">EJBException</tt>
and rethrown as system exceptions. A checked exception thrown by a
subsystem does not need to be handled this way if the bean can safely
recover from the exception. In most cases, however, the <a name="INDEX-1553"></a><a name="INDEX-1554"></a> subsystem
<a name="INDEX-1555"></a>
exception should be rethrown <a name="INDEX-1556"></a> as a <tt class="literal">EJBException</tt>.
</p>





<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch07_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch07_03.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch08_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch08_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">7.3. The Stateful Session Bean</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">8. Transactions</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
