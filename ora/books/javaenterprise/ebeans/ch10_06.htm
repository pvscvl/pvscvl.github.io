<html>
<head>
<title>Describing Bean Assembly (Enterprise JavaBeans)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="Richard Monson-Haefel">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-869-5E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Describing Bean Assembly">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm" alt="Enterprise JavaBeans"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch10_05.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch10_05.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch10_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch10_01.htm">Chapter 10: XML Deployment Descriptors</a></td><td align="right" valign="top" width="172"><a href="ch10_07.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch10_07.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h2 class="sect1">10.6. Describing Bean Assembly</h2>

<p>
<a name="INDEX-2076"></a><a name="INDEX-2077"></a><a name="INDEX-2078"></a>At this point, we've said just
<a name="INDEX-2079"></a><a name="INDEX-2080"></a>about all that can be
said about the bean itself. We've come to the end of the
<tt class="literal">enterprise-beans</tt> element, and are now ready to
describe how the beans are assembled into an application. That is, we
are ready to talk about the other major element inside the
<tt class="literal">ejb-jar</tt> element: the
<tt class="literal">assembly-descriptor</tt> element.
</p>

<p>The <tt class="literal">assembly-descriptor</tt> element is optional,
though it's difficult to imagine a bean being deployed
successfully without an <tt class="literal">assembly-descriptor</tt>. When
we say that the <tt class="literal">assembly-descriptor</tt> is optional,
we really mean that a developer whose only role is to create
enterprise beans (for example, someone who is developing beans for
use by another party and who has no role in deploying the beans) can
omit this part of the deployment descriptor. The descriptor is valid
without it--but someone will almost certainly have to fill in
the assembly information before the bean can be deployed.
</p>

<p>The assembly descriptor serves three purposes. It describes the
transactional attributes of the bean's methods; it describes
the logical security roles that are used in the method permissions;
and it specifies method permissions (i.e., which roles are allowed to
call each of the methods). To this end, an
<tt class="literal">assembly-descriptor</tt> can contain three kinds of
elements, each of which is fairly complex in its own right. These
are:
</p>

<dl>
<dt>
<b><tt class="literal">&lt;container-transaction&gt;</tt>
<a name="INDEX-2081"></a>
<a name="INDEX-2082"></a>
 (zero or more)</b>
</dt>
<dd>
<p>This element declares which transactional attributes apply to which
methods. It contains an optional <tt class="literal">description</tt>
element, one or more <tt class="literal">method</tt> elements, and exactly
one <tt class="literal">trans-attribute</tt> element.
<a name="INDEX-2083"></a><a name="INDEX-2084"></a>Entity beans must have
<tt class="literal">container-transaction</tt> declarations for all remote
and home interface methods. Session beans that manage their own
transactions will not have <tt class="literal">container-transaction</tt>
declarations. This element is discussed in more detail in <a href="#JBEANS-CH-10-SECT-6.1">Section 10.6.1, "Specifying a Bean's Transactional Attributes"</a>.
</p>
</dd>

<dt>
<b><tt class="literal">&lt;security-role&gt;</tt>
<a name="INDEX-2085"></a>
 (zero or more)</b>
</dt>
<dd>
<p>The <tt class="literal">security-role</tt> element defines the security
roles that are used when accessing a bean. These security roles are
used in the <tt class="literal">method-permission</tt> element. A
<tt class="literal">security-role</tt> element contains an optional
<tt class="literal">description</tt> and one <tt class="literal">role-name</tt>.
This element and the <tt class="literal">method-permission</tt> element are
described in more detail in <a href="#JBEANS-CH-10-SECT-6.2">Section 10.6.2, "Specifying Security Roles and Method Permissions"</a>.
</p>
</dd>

<dt>
<b><tt class="literal">&lt;method-permission&gt;</tt>
<a name="INDEX-2086"></a>
<a name="INDEX-2087"></a>
 (zero or more)</b>
</dt>
<dd>
<p>This element specifies which security roles are allowed to call one
or more of a bean's methods. It contains an optional
<tt class="literal">description</tt>, one or more
<tt class="literal">role-name</tt> elements, and one or more
<tt class="literal">method</tt> elements. It is discussed in more detail in
the <a href="#JBEANS-CH-10-SECT-6.2">Section 10.6.2, "Specifying Security Roles and Method Permissions"</a> along with the <tt class="literal">security-role</tt>
element.
</p>
</dd>

</dl>

<p>The <tt class="literal">container-transaction</tt> and
<tt class="literal">method-permission</tt> elements both rely on the
ability to identify particular methods. This can be a complicated
affair, given features of the Java language like method overloading.
The <tt class="literal">method</tt><a name="INDEX-2088"></a> element is used within these tags to
identify methods; it is described at length in <a href="#JBEANS-CH-10-SECT-6.3">Section 10.6.3, "Identifying Specific Methods"</a>.
</p>

<a name="JBEANS-CH-10-SECT-6.1"></a>
<h3 class="sect2">10.6.1. Specifying a Bean's Transactional Attributes</h3>

<p>The <tt class="literal">container-transaction</tt> elements are used to
declare the transaction
<a name="INDEX-2089"></a><a name="INDEX-2090"></a>attributes for all the beans
defined in the deployment descriptor. A
<tt class="literal">container-transaction</tt> element maps many bean
methods to a single transaction attribute, so each
<tt class="literal">container-transaction</tt> specifies one transaction
attribute and one or more bean methods.
</p>

<p>The <tt class="literal">container-transaction</tt> element includes a
single
<tt class="literal">trans-attribute</tt><a name="INDEX-2091"></a> element, which can have one of six
values: <tt class="literal">NotSupported</tt>, <tt class="literal">Supports</tt>,
<tt class="literal">Required</tt><a name="INDEX-2092"></a>, <tt class="literal">RequiresNew</tt>,
<tt class="literal">Mandatory</tt>, and <tt class="literal">Never</tt>. These are
the transactional attributes that we discussed in <a href="ch08_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch08_01.htm">Chapter 8, "Transactions"</a>. In addition to the
<tt class="literal">trans-attribute</tt>, the
<tt class="literal">container-transaction</tt> element includes one or more
<tt class="literal">method</tt> elements.
</p>

<p>The <tt class="literal">method</tt> element itself contains at least two
subelements: an
<tt class="literal">ejb-name</tt><a name="INDEX-2093"></a> element, which specifies the
<a name="INDEX-2094"></a>name of the bean, and a
<tt class="literal">method-name</tt><a name="INDEX-2095"></a><a name="INDEX-2096"></a> element, which specifies a subset of
the bean's methods. The value of the
<tt class="literal">method-name</tt> can be a method name or an
<a name="INDEX-2097"></a>asterisk (<tt class="literal">*</tt>), which
acts as wildcard for all the bean's methods. There's a
lot more complexity to handle overloading and other special cases,
but that's enough for now; we'll discuss the rest later.
</p>

<p>Here's an example that shows how the
<tt class="literal">container-transaction</tt> element is typically used.
Let's look again at the Cabin bean, which we've used as
an example throughout. Let's assume that we want to give the
transactional attribute <tt class="literal">Mandatory</tt> to the
<tt class="literal">create()</tt> method; all other methods use the
<tt class="literal">Required</tt> attribute:
</p>

<blockquote>
<pre class="programlisting">  &lt;container-transaction&gt;
     &lt;method&gt;
        &lt;ejb-name&gt;CabinBean&lt;/ejb-name&gt;
        &lt;method-name&gt;*&lt;/method-name&gt;
     &lt;/method&gt;
     &lt;trans-attribute&gt;Required&lt;/trans-attribute&gt;
  &lt;/container-transaction&gt;
  &lt;container-transaction&gt;
     &lt;method&gt;
        &lt;ejb-name&gt;CabinBean&lt;/ejb-name&gt;
        &lt;method-name&gt;create&lt;/method-name&gt;
     &lt;/method&gt;
     &lt;trans-attribute&gt;Mandatory&lt;/trans-attribute&gt;
  &lt;/container-transaction&gt;</pre>
</blockquote>

<p>In the first <tt class="literal">container-transaction</tt>, we have a
single <tt class="literal">method</tt> element that uses the wildcard
character (<tt class="literal">*</tt>) to refer to all of the Cabin
bean's methods. We set the transactional attribute for these
methods to <tt class="literal">Required</tt>. Then, we have a second
<tt class="literal">container-transaction</tt> element that specifies a
single method of the Cabin bean: <tt class="literal">create()</tt>. We set
the transactional attribute for this method to
<tt class="literal">Mandatory</tt><a name="INDEX-2098"></a>. This setting overrides the wildcard
setting; in container-transaction elements, specific method
declarations always override more general declarations.
</p>

<p>The following methods must be assigned transaction attributes for
each bean declared in the deployment descriptor:
</p>

<p>For <a name="INDEX-2099"></a><a name="INDEX-2100"></a>entity beans:
</p>

<ul>
<li>
<p>
<em class="emphasis">All business methods</em><a name="INDEX-2101"></a>defined in the remote interface
(and all superinterfaces)
</p>
</li>
<li>
<p>
<em class="emphasis">Create</em><a name="INDEX-2102"></a>methods defined in the
home interface
</p>
</li>
<li>
<p>
<em class="emphasis">Find</em><a name="INDEX-2103"></a>methods defined in the
home interface
</p>
</li>
<li>
<p>
<em class="emphasis">Remove</em><a name="INDEX-2104"></a>methods defined in the
<tt class="literal">EJBHome</tt><a name="INDEX-2105"></a><a name="INDEX-2106"></a> and <tt class="literal">EJBObject</tt>
interface
</p>
</li>
</ul>
<p>For <a name="INDEX-2107"></a>session beans:
</p>

<ul>
<li>
<p>
<em class="emphasis">All Business methods</em> defined in the remote
interface (and all superinterfaces)
</p>
</li>
</ul>
<p>For session beans, only the business methods have transaction
attributes; the create and remove methods in session beans do not
have truncation attributes.
</p>


<a name="JBEANS-CH-10-SECT-6.2"></a>
<h3 class="sect2">10.6.2. Specifying Security Roles and Method Permissions</h3>

<p>Two elements are used to define logical security roles and to specify
which roles can call particular bean methods. The
<tt class="literal">security-role</tt><a name="INDEX-2108"></a> element can contain an optional
<tt class="literal">description</tt><a name="INDEX-2109"></a>, plus a single
<tt class="literal">role-name</tt> that provides the name. An
<tt class="literal">assembly-descriptor</tt> can contain any number of
<tt class="literal">security-role</tt> elements.
</p>

<p>It's important to realize that the security role names defined
here are not derived from a specific security realm. These security
role names are logical; they are simply labels that can be mapped to
real security roles in the target environment at deployment time. For
example, the following <tt class="literal">security-role</tt> declarations
define two roles--<tt class="literal">everyone</tt> and
<tt class="literal">administrator</tt>:
</p>

<blockquote>
<pre class="programlisting">&lt;security-role&gt;
  &lt;description&gt;
     This role represents everyone who is allowed read/write access 
     to existing cabin beans.
  &lt;/description&gt;
  &lt;role-name&gt;everyone&lt;/role-name&gt;
&lt;/security-role&gt;
&lt;security-role&gt;
  &lt;description&gt;
     This role represents an administrator or manager who is 
     allowed to create new cabin beans.  This role may also be a member
     or the everyone role.
  &lt;/description&gt;
  &lt;role-name&gt;administrator&lt;/role-name&gt;
&lt;/security-role&gt;</pre>
</blockquote>

<p>These role names might not exist in the environment in which the
beans will be deployed. There's nothing inherent about
<tt class="literal">everyone</tt> that gives it fewer (or greater)
privileges than an <tt class="literal">administrator</tt>. It's up to
the deployer to map one or more roles from the target environment to
the logical roles in the deployment descriptor. So for example, the
deployer may find that the target environment has two roles, DBA
(database administrator) and CSR (customer service representative),
that map to the <tt class="literal">administrator</tt> and
<tt class="literal">everyone</tt> roles defined in the
<tt class="literal">security-role</tt> element.
</p>

<a name="JBEANS-CH-10-SECT-6.2.1"></a>
<h3 class="sect3">10.6.2.1. Assigning roles to methods</h3>

<p>Security roles in themselves wouldn't be worth much if you
couldn't specify what the roles were allowed to do.
That's where the
<tt class="literal">method-permission</tt><a name="INDEX-2110"></a><a name="INDEX-2111"></a><a name="INDEX-2112"></a><a name="INDEX-2113"></a> element comes in. This element maps
the <tt class="literal">security-role </tt>s to methods in the remote and
home interfaces of the bean. A <tt class="literal">method-permission</tt>
is a very flexible declaration that allows a many-to-many
relationship between methods and roles. A
<tt class="literal">method-permission</tt> contains an optional
<tt class="literal">description</tt>, one or more <tt class="literal">method</tt>
elements, and one or more <tt class="literal">role-name</tt> elements. The
names specified in the <tt class="literal">role-name</tt> elements
correspond to the roles that appear in the
<tt class="literal">security-role</tt> elements. Here's one way to
set method permissions for the Cabin bean:
</p>

<blockquote>
<pre class="programlisting">&lt;method-permission&gt;
     &lt;role-name&gt;administrator&lt;/role-name&gt;
     &lt;method&gt;
         &lt;ejb-name&gt;CabinBean&lt;/ejb-name&gt;
         &lt;method-name&gt;*&lt;/method-name&gt;
     &lt;/method&gt;
&lt;/method-permission&gt;
&lt;method-permission&gt;
     &lt;role-name&gt;everyone&lt;/role-name&gt;
     &lt;method&gt;
         &lt;ejb-name&gt;CabinBean&lt;/ejb-name&gt;
         &lt;method-name&gt;getDeckLevel&lt;/method-name&gt;
     &lt;/method&gt;
&lt;/method-permission&gt;</pre>
</blockquote>

<p>In this example, the <tt class="literal">administrator</tt> role has access
to all methods in the Cabin bean. The <tt class="literal">everyone</tt>
role only has access to the <tt class="literal">getDeckLevel()</tt>
method--it cannot access any of the other methods of the Cabin
bean. Note that the specific method permissions are combined to form
a union. The <tt class="literal">getDeckLevel()</tt> method, for example,
is accessible by both the <tt class="literal">administrator</tt> and
<tt class="literal">everyone</tt> roles, which is the union of the
permissions declared in the descriptor. Once again, it's
important to note that we still don't know what
<tt class="literal">administrator</tt> and <tt class="literal">everyone</tt>
mean. That's defined by the person deploying the bean, who must
map these logical security roles to real security roles defined in
the target environment.
</p>

<p>All the methods defined in the remote or home interface and all
superinterfaces, including the methods defined in the
<tt class="literal">EJBObject</tt> and <tt class="literal">EJBHome</tt>
interfaces, can be assigned security roles in the
<tt class="literal">method-permission</tt> elements. Any method that is
excluded will not be accessible by any security role.
</p>



<a name="JBEANS-CH-10-SECT-6.3"></a>
<h3 class="sect2">10.6.3. Identifying Specific Methods</h3>

<p>The <tt class="literal">method</tt><a name="INDEX-2114"></a> element is used by the
<tt class="literal">method-permission</tt> and
<tt class="literal">container-transaction</tt> elements to specify a
specific group of methods in a particular bean. The
<tt class="literal">method</tt> element always contains an
<tt class="literal">ejb-name</tt><a name="INDEX-2115"></a><a name="INDEX-2116"></a>element that specifies the
bean's name and a
<tt class="literal">method-name</tt><a name="INDEX-2117"></a> element that specifies the method. It
may also include a
<tt class="literal">description</tt><a name="INDEX-2118"></a>,
<tt class="literal">method-params</tt><a name="INDEX-2119"></a><a name="INDEX-2120"></a><a name="INDEX-2121"></a>elements that specify method
parameters used to resolve overloaded methods, and a
<tt class="literal">method-intf</tt><a name="INDEX-2122"></a> element that specifies whether the
method belongs to the bean's home or remote interface. This
last element takes care of the possibility that the same method name
might be used in both interfaces.
</p>

<a name="JBEANS-CH-10-SECT-6.3.1"></a>
<h3 class="sect3">10.6.3.1. Wildcard declarations</h3>

<p>The method name in a method element can be a simple
<a name="INDEX-2123"></a><a name="INDEX-2124"></a>wildcard
(<tt class="literal">*</tt>). A wildcard applies to all methods of the
bean's home and remote interfaces. For example:
</p>

<blockquote>
<pre class="programlisting">&lt;method&gt;
    &lt;ejb-name&gt;CabinBean&lt;/ejb-name&gt;
    &lt;method-name&gt;*&lt;/method-name&gt;
&lt;/method&gt;</pre>
</blockquote>

<p>Although it's tempting to combine the wildcard with other
characters, don't. The value <tt class="literal">get*</tt>, for
example, is illegal. The asterisk (<tt class="literal">*</tt>) character
can only be used by itself.
</p>



<a name="JBEANS-CH-10-SECT-6.3.2"></a>
<h3 class="sect3">10.6.3.2. Named method declarations</h3>

<p>Named <a name="INDEX-2125"></a>declarations apply to all methods
defined in the bean's remote and home interfaces that have the
specified name. For example:
</p>

<blockquote>
<pre class="programlisting">&lt;method&gt;
    &lt;ejb-name&gt;CabinBean&lt;/ejb-name&gt;
    &lt;method-name&gt;create&lt;/method-name&gt;
&lt;/method&gt;
&lt;method&gt;
    &lt;ejb-name&gt;CabinBean&lt;/ejb-name&gt;
    &lt;method-name&gt;getDeckLevel&lt;/method-name&gt;
&lt;/method&gt;</pre>
</blockquote>

<p>These declarations apply to all methods with the given name in both
interfaces. They don't distinguish between
<a name="INDEX-2126"></a>overloaded
methods. For example, if the home interface for the Cabin bean is
modified so that it has three overloaded <tt class="literal">create()</tt>
methods as shown here, the previous <tt class="literal">method</tt>
declaration would apply to all three methods:
</p>

<blockquote>
<pre class="programlisting">public interface CabinHome javax.ejb.EJBHome {
    public Cabin create() 
        throws CreateException, RemoteException;
    public Cabin create(int id) 
        throws CreateException, RemoteException;
    public Cabin create(int id, Ship ship, double [][] matrix)
        throws CreateException, RemoteException;
    ...
}</pre>
</blockquote>



<a name="JBEANS-CH-10-SECT-6.3.3"></a>
<h3 class="sect3">10.6.3.3. Specific method declarations</h3>

<p>Specific method declarations use the
<tt class="literal">method-params</tt><a name="INDEX-2127"></a><a name="INDEX-2128"></a> element to
pinpoint a specific method by listing its parameters. This allows you
to differentiate between overloaded methods. The
<tt class="literal">method-params</tt> element contains zero or more
<tt class="literal">method-param</tt> elements which correspond, in order,
to each parameter type (including multidimensional arrays) declared
in the method. To specify a method with no arguments, use a
<tt class="literal">method-params</tt> element with no
<tt class="literal">method-param</tt> elements nested within it.
</p>

<p>For an example, let's look again at our Cabin bean, to which
we've added some overloaded <tt class="literal">create()</tt> methods
in the home interface. Here are three <tt class="literal">method</tt>
elements, each of which specifies unambiguously one of the
<tt class="literal">create()</tt> methods by listing its parameters:
</p>

<blockquote>
<pre class="programlisting">&lt;method&gt;
    &lt;description&gt; 
         Method: public Cabin create(); 
    &lt;/description&gt; 
    &lt;ejb-name&gt;CabinBean&lt;/ejb-name&gt;
    &lt;method-name&gt;create&lt;/method-name&gt;
    &lt;method-params&gt;
    &lt;/method-params&gt;
&lt;/method&gt;
&lt;method&gt;
    &lt;description&gt; 
         Method: public Cabin create(int id); 
    &lt;/description&gt;
    &lt;ejb-name&gt;CabinBean&lt;/ejb-name&gt;
    &lt;method-name&gt;create&lt;/method-name&gt;
    &lt;method-params&gt;
           &lt;method-param&gt;int&lt;/method-param&gt;
    &lt;/method-params&gt;
&lt;/method&gt;
&lt;method&gt;
    &lt;description&gt; 
         Method: public Cabin create(int id, Ship ship, double [][] matrix); 
    &lt;/description&gt;
    &lt;ejb-name&gt;CabinBean&lt;/ejb-name&gt;
    &lt;method-name&gt;create&lt;/method-name&gt;
    &lt;method-params&gt;
           &lt;method-param&gt;int&lt;/method-param&gt;
           &lt;method-param&gt;com.titan.ship.Ship&lt;/method-param&gt;
           &lt;method-param&gt;double [][]&lt;/method-param&gt;
    &lt;/method-params&gt;
&lt;/method&gt;</pre>
</blockquote>



<a name="JBEANS-CH-10-SECT-6.3.4"></a>
<h3 class="sect3">10.6.3.4. Remote/home differentiation</h3>

<p>There's one problem left. The same method name can be used in
both the home and remote interfaces. To resolve this ambiguity, you
can add the
<tt class="literal">method-intf</tt><a name="INDEX-2129"></a><a name="INDEX-2130"></a><a name="INDEX-2131"></a> element to a method declaration as
a modifier. Only two values are allowed for a
<tt class="literal">method-intf</tt> element: <tt class="literal">Remote</tt> and
<tt class="literal">Home</tt>.
</p>

<p>In reality, it's unlikely that a good developer would use the
same method names in both home and remote interfaces; that would lead
to unnecessarily confusing code. Realistically, it's more
likely that you'll need the <tt class="literal">method-intf</tt>
element in a
<a name="INDEX-2132"></a>wildcarded declaration. For example, the
following declaration specifies all of the methods in the remote
interface of the Cabin bean:
</p>

<blockquote>
<pre class="programlisting">&lt;method&gt;
    &lt;ejb-name&gt;CabinBean&lt;/ejb-name&gt;
    &lt;method-name&gt;*&lt;/method-name&gt;
    &lt;method-intf&gt;<tt class="userinput"><b>Remote</b></tt>&lt;/method-intf&gt;
&lt;/method&gt;</pre>
</blockquote>

<p>All these styles of method declarations can be used in any
combination within any element that uses the
<tt class="literal">method</tt> element. The
<tt class="literal">method-permission</tt> elements are combined to form a
union of role-to-method permissions. For example, in the following
listing, the first
<tt class="literal">method-permission</tt><a name="INDEX-2133"></a><a name="INDEX-2134"></a> element declares that
the <tt class="literal">administrator</tt> has access to the Cabin
bean's home methods (create and find methods). The second
<tt class="literal">method-permission</tt> specifies that the
<tt class="literal">everyone</tt> role has access to the
<tt class="literal">findByPrimaryKey()</tt> method. This means that both
roles (<tt class="literal">everyone</tt> and
<tt class="literal">administrator</tt>) have access to the
<tt class="literal">findByPrimaryKey()</tt> method.
</p>

<blockquote>
<pre class="programlisting">&lt;method-permission&gt;
     &lt;role-name&gt;administrator&lt;/role-name&gt;
     &lt;method&gt;
         &lt;ejb-name&gt;CabinBean&lt;/ejb-name&gt;
         &lt;method-name&gt;*&lt;/method-name&gt;
         &lt;method-intf&gt;Home&lt;/method_intf&gt;
     &lt;/method&gt;
&lt;/method-permission&gt;
&lt;method-permission&gt;
     &lt;role-name&gt;everyone&lt;/role-name&gt;
     &lt;method&gt;
         &lt;ejb-name&gt;CabinBean&lt;/ejb-name&gt;
         &lt;method-name&gt;findByPrimaryKey&lt;/method-name&gt;
     &lt;/method&gt;
&lt;/method-permission&gt;</pre>
</blockquote>





<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch10_05.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch10_05.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch10_07.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/ch10_07.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">10.5. Describing Beans</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">10.7. The ejb-jar File</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
