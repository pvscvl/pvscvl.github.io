<html>
<head>
<title>The Default JNDI Context (Enterprise JavaBeans)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="Richard Monson-Haefel">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-869-5E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The Default JNDI Context">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm" alt="Enterprise JavaBeans"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="appd_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/appd_03.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="appd_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/appd_01.htm">Appendix D: New Features in EJB 1.1</a></td><td align="right" valign="top" width="172"><a href="appd_05.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/appd_05.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h2 class="sect1">D.4. The Default JNDI Context</h2>

<p>Environment <a name="INDEX-2334"></a>variables have undergone a fairly
<a name="INDEX-2335"></a> [a-z]adical change. Environment properties in
EJB 1.0 are a powerful mechanism for modifying the behavior of a
component without changing the component's code. In EJB 1.0,
the environment properties are accessible to the bean through the
<tt class="literal">EJBContext.getEnvironment()</tt> method, are set by the
bean developer, and can be modified by the deployer. In EJB 1.0, the
environment variables might, for example, be used to set a maximum
withdraw amount for an account bean, as in the following code:
</p>

<blockquote>
<pre class="programlisting">// EJB 1.0
public class AccountBean implements javax.ejb.EntityBean {

    public EntityContext context;

    public void withdraw(double amount) throws MaximumLimitException {
        try {
            Properties environment = context.getEnvironment();
            String value = environment.getProperty("withdraw_limit");
            Double limit = new Double(value);
            if ( amount &gt; limit.doubleValue()) {
                throw new MaximumLimitException();
            else {
                 // continue processing
            }
        }
    }
}</pre>
</blockquote>

<p>EJB 1.1 changes the environment properties from the
<tt class="literal">java.util.Properties</tt> class, used in EJB 1.0, to a
set of JNDI entries that exist in a name space called the
<em class="emphasis">environment naming context</em>. All deployed beans
in EJB 1.1 have an environment naming context (default JNDI context)
that can be accessed using the JNDI API. This default JNDI context
provides a set of immutable JNDI entries specific to each type of
bean. The default JNDI context provides the bean with access to
environment variables which can be of type <tt class="literal">String</tt>
or one of several primitive wrappers including
<tt class="literal">Double</tt>, <tt class="literal">Float</tt>,
<tt class="literal">Integer</tt>, or <tt class="literal">Boolean</tt>. The
entries are defined in the XML deployment descriptor using special
tags specific to the environment naming context. Here is an example
of how the default JNDI context is used at runtime by an EJB 1.1
bean:
</p>

<blockquote>
<pre class="programlisting">// EJB 1.1
public class AccountBean implements javax.ejb.EntityBean {

    public EntityContext context;

    public void withdraw(double amount) throws MaximumLimitException {
        try {
            InitialContext initCxt = InitialContext();
            Context defaultCxt = (Context)initCxt.lookup("java:comp/env");
            Double limit = (Double) 
                defaultCxt.lookup("java:comp/env/withdraw_limit");
            if ( amount &gt; limit.doubleValue()) {
                throw new MaximumLimitException();
            else {
                 // continue processing
            }
        }
    }
}</pre>
</blockquote>

<p>EJB 1.1-compliant servers are not required to support the EJB 1.0
environment properties, which are available through the
<tt class="literal">EJBContext</tt>. The
<tt class="literal">getEnvironment()</tt> method has been deprecated and
will throw a runtime exception for EJB 1.1 servers that don't
support backward compatibility.
</p>

<p>Environment properties are only one of three sets of values that can
be accessed through the default JNDI context. The default JNDI
context is also used as a repository for linking to predefined
resources and beans. When developing a bean, the bean developer can
identify the types of resources and enterprise beans that will be
referenced in the bean and bind them to the default JNDI context.
This simplifies the process of looking up and obtaining bean
references within beans, as well as locating and using resources like
a JDBC database connection. The bean developer defines the types of
beans and resources associated with the default JNDI entries in the
XML deployment descriptor. The following code shows how a bean uses
its default JNDI context to look up a bean and a JDBC
<tt class="literal">DataSource</tt>:
</p>

<blockquote>
<pre class="programlisting">// EJB 1.1
public class TellerBean implements javax.ejb.SessionBean {

    public void transfer(int sourceID, int targetID, double amount) {
        
        InitialContext initCtx = new InitialContext();

        // look up up the Account home
         <tt class="userinput"><b>AccountHome acctHome =</b></tt> 
        (AccountHome)initCtx.lookup("java:comp/env/ejb/AccountHome");

        // transfer the money
        Account source = acctHome.findByPrimaryKey(
            new AccountKey(sourceID));
        Account target = acctHome.findByPrimaryKey(
            new AccountKey(targetID));
        source.withdraw(amount);
        target.deposit(amount);

        // Look up a the JDBC data source for recording transactions
        javax.sql.DataSource dataSource = 
          (javax.sql.DataSource)initCtx.lookup("java:comp/env/jdbc/log");
        java.sql.Connection con = dataSource.getConnection();

        // continue processing: insert a log recording the transaction
    }
}</pre>
</blockquote>

<p>EJB 1.1 standardizes on the use of <em class="emphasis">resource connection
factories</em> to access resources such as a JDBC connection. A
resource factory provides access to resources in a manner that allows
the container to manage the use of the resource. The use of the
<tt class="literal">javax.sql.DataSource</tt> is a perfect example. It
provides the bean with a JDBC connection that is managed
transactionally and securely by the EJB container. In addition to
JDBC, resource factories for the Java Messaging Service can also be
used to obtain and manage access to an asynchronous message service.
</p>

<p>The default JNDI context provides a powerful mechanism for obtaining
predefined environment properties, bean references, and resource
factories. It standardizes access to enterprise bean's
environment through JNDI and lays the groundwork for future
enhancements. As new facilities and services are made available to
beans, they too can be accessed through the default JNDI context. A
good example is the plan to provide a "connector" service
that will allow beans to connect to legacy or "backend"
systems using standard resource factories.
</p>

<a name="JBEANS-AP-D-SECT-4.1"></a>
<h3 class="sect2">D.4.1. RMI over IIOP Narrowing</h3>

<p>EJB 1.1 requires the use of <a name="INDEX-2336"></a>Java RMI-IIOP reference and argument types
when accessing enterprise beans from a client. EJB 1.1 servers are
not required, however, to use IIOP as the distributed object
protocol. They are only required to support the semantics and types
used in Java RMI-IIOP.
</p>

<p>Java RMI-IIOP requires that the remote references be explicitly
narrowed when returned as supertypes from mechanisms like the JNDI
context, <tt class="literal">Handle.getEJBObject()</tt>,
<tt class="literal">EJBContext.getEJBObject()</tt>, etc. Explicitly
narrowing a remote reference is necessary because CORBA doesn't
support casting. To support RMI over IIOP we would change the line
that obtains a reference to the <tt class="literal">AccountHome</tt> so
that it looks as follows:
</p>

<blockquote>
<pre class="programlisting">// EJB 1.1 using RMI over IIOP
InitialContext initCtx = new InitialContext();
Object ref = initCtx.lookup("java:comp/env/ejb/AccountHome");
AccountHome acctHome = (AccountHome) 
    javax.rmi.PortableRemoteObject.narrow(ref, AccountHome.class);</pre>
</blockquote>

<p>The <tt class="literal">javax.rmi.PortableRemoteObject</tt> class is part
of the RMI-IIOP <a name="INDEX-2337"></a> extension package.
</p>




<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="appd_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/appd_03.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="appd_05.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/appd_05.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">D.3. XML Deployment Descriptors</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">D.5. Security</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
