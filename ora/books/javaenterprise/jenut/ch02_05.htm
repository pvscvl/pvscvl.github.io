<html>
<head>
<title>Statements (Java Enterprise in a Nutshell)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan, Jim Farley, William Crawford and Kristopher Magnusson">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-483-5E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Statements">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch02_04.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch02_04.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch02_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch02_01.htm">Chapter 2: JDBC</a></td><td align="right" valign="top" width="172"><a href="ch02_06.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch02_06.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h2 class="sect1">2.5. Statements</h2>
<p>
<a name="INDEX-180"></a><a name="INDEX-181"></a>
Once you have created a <tt class="literal">Connection</tt>, you can
begin using it to execute SQL statements. This is usually done via
<tt class="literal">Statement</tt> objects. There are actually three kinds
of statements in JDBC: </p>
<dl>
<dt>
<b><tt class="literal">Statement</tt></b>
</dt>
<dd>
<p>
<a name="INDEX-182"></a>
Represents a basic SQL statement</p>
</dd>
<dt>
<b><tt class="literal">PreparedStatement</tt></b>
</dt>
<dd>
<p>
<a name="INDEX-183"></a>
Represents a precompiled SQL statement, which can offer improved performance</p>
</dd>
<dt>
<b><tt class="literal">CallableStatement</tt></b>
</dt>
<dd>
<p>
<a name="INDEX-184"></a><a name="INDEX-185"></a>
Allows JDBC programs complete access to stored procedures within the database itself</p>
</dd>
</dl>
<p>We're just going to discuss the <tt class="literal">Statement</tt> object for now; <tt class="literal">PreparedStatement</tt> and <tt class="literal">CallableStatement</tt> are covered in detail later in this chapter.</p>
<p>
<a name="INDEX-186"></a>
To get a <tt class="literal">Statement</tt> object, you call the <tt class="literal">createStatement()</tt> method of a <tt class="literal">Connection</tt>: </p>
<blockquote>
<pre class="programlisting">
Statement stmt = con.createStatement();</pre>
</blockquote>
<p>
<a name="INDEX-187"></a><a name="INDEX-188"></a><a name="INDEX-189"></a><a name="INDEX-190"></a>
Once you have created a <tt class="literal">Statement</tt>, you use it to
execute SQL statements. A statement can either be a query that returns
results or an operation that manipulates the database in some way. If
you are performing a query, use the <tt class="literal">executeQuery()</tt>
method of the <tt class="literal">Statement</tt> object:</p>
<blockquote>
<pre class="programlisting">
ResultSet rs = stmt.executeQuery("SELECT * FROM CUSTOMERS");</pre>
</blockquote>
<p>Here we've used <tt class="literal">executeQuery()</tt> to run a <tt class="literal">SELECT</tt> statement. This call returns a <tt class="literal">ResultSet</tt> object that contains the results of the query (we'll take a closer look at <tt class="literal">ResultSet</tt> in the next section).</p>
<p>
<a name="INDEX-191"></a><tt class="literal">Statement</tt> also provides an <tt class="literal">executeUpdate()</tt> method, for running SQL statements that do not return results, such as the <tt class="literal">UPDATE</tt> and <tt class="literal">DELETE</tt> statements. <tt class="literal">executeUpdate()</tt> returns an integer that indicates the number of rows in the database that were altered. </p>
<p>
<a name="INDEX-192"></a>
If you don't know whether a SQL statement is going to return results (such as when the user is entering the statement in a form field), you can use the <tt class="literal">execute()</tt> method of <tt class="literal">Statement</tt>. This method returns <tt class="literal">true</tt> if there is a result associated with the statement. In this case, the <tt class="literal">ResultSet</tt> can be retrieved using the <tt class="literal">getResultSet()</tt> method and the number of updated rows can be retrieved using <tt class="literal">getUpdateCount()</tt>:
<a name="INDEX-193"></a>
</p>
<blockquote>
<pre class="programlisting">
Statement unknownSQL = con.createStatement();
if(unknownSQL.execute(sqlString)) {
  ResultSet rs = unknownSQL.getResultSet();
  // display the results
} 
else {
  System.out.println("Rows updated: " + unknownSQL.getUpdateCount());
}</pre>
</blockquote>
<p>
<a name="INDEX-194"></a><a name="INDEX-195"></a><a name="INDEX-196"></a>

It is important to remember that a <tt class="literal">Statement</tt>
object represents a single SQL statement. A call to <tt class="literal">executeQuery()</tt>, <tt class="literal">executeUpdate()</tt>,
or <tt class="literal">execute()</tt> implicitly closes any active
<tt class="literal">ResultSet</tt> associated with the
<tt class="literal">Statement</tt>. In other words, you need to be sure you
are done with the results from a query before you execute another
query with the same <tt class="literal">Statement</tt> object. If your application needs to execute more than one simultaneous query, you
need to use multiple <tt class="literal">Statement</tt> objects. As a general rule, calling the <tt class="literal">close()</tt> method of any
JDBC object also closes any dependent objects, such as a
<tt class="literal">Statement</tt> generated by a
<tt class="literal">Connection</tt> or a <tt class="literal">ResultSet</tt>
generated by a <tt class="literal">Statement</tt>, but well-written JDBC code closes everything explicitly.</p>
<a name="ch02-pgfid-270523"></a>
<h3 class="sect2">2.5.1. Multiple Result Sets</h3>
<p>
<a name="INDEX-197"></a>
It is possible to write a SQL statement that returns more than
one <tt class="literal">ResultSet</tt> or update count (exact methods of
doing so vary depending on the database). The
<a name="INDEX-198"></a><a name="INDEX-199"></a><tt class="literal">Statement</tt> object supports this functionality via
the <tt class="literal">getMoreResults()</tt> method. Calling this method
implicitly closes any existing <tt class="literal">ResultSet</tt> and moves
to the next set of results for the
statement. <tt class="literal">getMoreResults() </tt>returns
<tt class="literal">true</tt> if there is another
<tt class="literal">ResultSet</tt> available to be retrieved by
<tt class="literal">getResultSet()</tt>. However, the method returns
<tt class="literal">false</tt> if the next statement is an update, even if
there is another set of results waiting farther down the line. To be
sure you've processed all the results for a
<tt class="literal">Statement</tt>, you need to check that
<tt class="literal">getMoreResults()</tt> returns <tt class="literal">false</tt><a name="INDEX-200"></a><a name="INDEX-201"></a>
and that <tt class="literal">getUpdateCount()</tt> returns
<tt class="literal">-1</tt>.</p>
<p>We can modify the previous <tt class="literal">execute()</tt> example
to handle multiple results:</p>
<blockquote>
<pre class="programlisting">
Statement unknownSQL = con.createStatement();
unknownSQL.execute(<em class="replaceable">sqlString</em>);
while (true) { 
  rs = unknownSQL.getResultSet();
  if(rs != null)
    // display the results
  else
    // process the update data
  
 // Advance and quit if done
  if((unknownSQL.getMoreResults() == false) &amp;&amp; 
     (unknownSQL.getUpdateCount() == -1))
    break; 
}</pre>
</blockquote>
<p>Statements that return multiple results are actually quite rare. They generally arise from stored procedures or SQL implementations that allow multiple statements to be executed in a batch. Under SyBase, for instance, multiple <tt class="literal">SELECT</tt> statements may be separated by newline (<tt class="literal">\n</tt>) characters.</p>

<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch02_04.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch02_04.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch02_06.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch02_06.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">2.4. Connecting to the Database</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">2.6. Results</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
