<html>
<head>
<title>Java Servlets (Java Enterprise in a Nutshell)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan, Jim Farley, William Crawford and Kristopher Magnusson">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-483-5E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Java Servlets">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch04_05.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch04_05.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part1.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/part1.htm">Part 1: Introducing the Java Enterprise APIs</a></td><td align="right" valign="top" width="172"><a href="ch05_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_02.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 5.  Java Servlets</h1>
<div class="htmltoc">
<h4 class="tochead">Contents:</h4>
<p>
<a href="ch05_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_01.htm">The Servlet Life Cycle</a>
<br>
<a href="ch05_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_02.htm">Servlet Basics</a>
<br>
<a href="ch05_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_03.htm">Servlet Chaining</a>
<br>
<a href="ch05_04.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_04.htm">Custom Servlet Initialization</a>
<br>
<a href="ch05_05.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_05.htm">Thread Safety</a>
<br>
<a href="ch05_06.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_06.htm">Server-Side Includes</a>
<br>
<a href="ch05_07.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_07.htm">Cookies</a>
<br>
<a href="ch05_08.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_08.htm">Session Tracking</a>
<br>
<a href="ch05_09.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_09.htm">Databases and Non-HTML Content</a>
<br>
<a href="ch05_10.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_10.htm">The Servlet API 2.1</a>
<br>
</p>
</div>

<p>
<a name="INDEX-1116"></a>The Java Servlet API provides a standard way to extend the
functionality of any kind of server that uses a protocol based on
requests and responses. Servlets are used primarily with web servers,<a name="INDEX-1117"></a>
where they provide a Java-based replacement for CGI scripts. In other
words, on a web server that supports servlets (and there are many),
you can use a Java servlet to create dynamic web content in much the
same way you currently use a CGI script. Servlets have many advantages<a name="INDEX-1118"></a>
over CGI scripts, however. For example, servlets are persistent
between invocations, which dramatically improves performance relative to
CGI programs. Servlets are also portable among operating systems and
among servers. Finally, servlets have access to all the APIs of the
Java platform, so, for example, it is easy to create a servlet that
interacts with a database, using the JDBC API. </p>
<p>
<a name="INDEX-1119"></a>In terms of enterprise computing, servlets are a natural fit if
you are using the Web as your development platform. You can
take advantage of web browsers as universally available thin
clients; the web server becomes middleware that is responsible for
running applications for these clients. Under this model, the user
makes a request of the web server, the server invokes a servlet
designed to handle the request, the servlet fulfills the request, and
the result is returned to the user in the web browser.  What's key
here is that the servlet can use JNDI, Java IDL, and other Java
Enterprise APIs to perform whatever tasks are necessary to fulfill the
request.</p>
<p>This chapter demonstrates the basic techniques used to write
servlets using Version 2.0 of the Java Servlet API. It also covers how<a name="INDEX-1120"></a><a name="INDEX-1121"></a>

to handle some common web-development tasks, such as cookie
manipulation and session tracking, with servlets. The chapter
concludes with an introduction to the new features of Version 2.1 of
the Servlet API. This chapter assumes that you have some experience
with web development; if you are new to web development, you may want
to brush up on web basics by consulting <em class="emphasis">Webmaster in a
Nutshell, 2nd Edition</em>, by Stephen Spainhour and Robert
Eckstein (O'Reilly). For a more complete treatment of servlets, I
recommend <em class="citetitle">Java Servlet Programming</em>, by Jason
Hunter with William Crawford (O'Reilly). </p>
<h2 class="sect1">5.1. The Servlet Life Cycle</h2>
<p>
<a name="INDEX-1122"></a><a name="INDEX-1123"></a><a name="INDEX-1124"></a><a name="INDEX-1125"></a><a name="INDEX-1126"></a><a name="INDEX-1127"></a>When a client makes a request involving a servlet, the server loads
and executes the appropriate Java classes.  Those classes generate
content, and the server sends the content back to the client.  In most
cases, the client is a web browser, the server is a web server, and
the servlet returns standard HTML. From the web browser's perspective,
this isn't any different from requesting a page generated by a CGI
script, or, indeed, standard HTML.  On the server side, however, there
is one important difference: persistence.<a href="#FOOTNOTE-1">[1]</a>  Instead of shutting down at the end of each request, the
servlet can remain loaded, ready to handle subsequent requests.
<a href="#ch05-pgfid-548553">Figure 5-1</a> shows how this all fits together.</p>
<blockquote class="footnote">
<a name="FOOTNOTE-1"></a>
<p>[1] Note that I'm using persistent to mean "enduring between
invocations," not "written to permanent storage," as it is sometimes
used. </p>
</blockquote>
<a name="ch05-pgfid-548553"></a>
<div class="figure">
<img alt="figure" src="figs/Jent.0501.gif" webstripperlinkwas="figs/Jent.0501.gif"></div>
<h4 class="objtitle">Figure 5-1. The servlet life cycle</h4>
<p>
<a name="INDEX-1128"></a>The request-processing time for a servlet can vary, but it is typically quite fast when compared to a similar CGI program.  The real advantage of a servlet, however, is <a name="INDEX-"></a><a name="INDEX-1129"></a><a name="INDEX-1130"></a>
that you incur most of the startup overhead only once.  When a servlet loads, its <tt class="literal">init()</tt> method is called. You can use <tt class="literal">init()</tt> to create I/O intensive resources, such as database connections, for use across multiple invocations.  If you have a high-traffic site, the performance benefits can be quite dramatic. Instead of putting up and tearing down a hundred thousand database connections, the servlet needs to create a connection only once. The servlet's <tt class="literal">destroy()</tt> method can clean up resources when the server shuts down.</p>
<p>
<a name="INDEX-1131"></a>Because servlets are persistent, you can actually remove a lot of filesystem and/or database accesses altogether. For example, to implement a page counter, you can simply store a number in a static variable, rather than consulting a file (or database) for every request. Using this technique, you need to read and<a name="INDEX-"></a>
write to the disk only occasionally to preserve state.  Since a servlet remains active, it can perform other tasks when it is not servicing client requests, such as running a background processing thread (where clients connect to the servlet to view the result) or even acting as an RMI host, enabling a single servlet to handle connections from multiple types of clients.  For example, if you write an order processing servlet, it can accept transactions from both an HTML form and an applet using RMI. </p>
<p>The Servlet API includes numerous methods and classes for making application development easier.  Most common CGI tasks require a lot of fiddling on the programmer's part; even decoding HTML form parameters can be a chore, to say nothing of dealing with cookies and session tracking.  Libraries exist to help with these tasks, but they are, of course, decidedly nonstandard.  You can use the Servlet API to handle most routine tasks, thus cutting development time and keeping things consistent for multiple developers on a project.</p>









<a name="INDEX-1408"></a>
<a name="INDEX-1409"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch04_05.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch04_05.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch05_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_02.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">4.5. What If I Don't Know the Interface?</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">5.2. Servlet Basics</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
