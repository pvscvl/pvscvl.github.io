<html>
<head>
<title>Servlet Chaining (Java Enterprise in a Nutshell)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan, Jim Farley, William Crawford and Kristopher Magnusson">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-483-5E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Servlet Chaining">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch05_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_02.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch05_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_01.htm">Chapter 5: Java Servlets</a></td><td align="right" valign="top" width="172"><a href="ch05_04.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_04.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h2 class="sect1">5.3. Servlet Chaining</h2>
<p>
<a name="INDEX-1249"></a><a name="INDEX-1250"></a>So far, we have looked at servlets that take requests directly from
  the server and return their results directly to the client. Servlets
  were designed as a generic server extension technology, however,
  rather than one devoted solely to performing CGI-like functions.  A
  servlet can just as easily take its input from another servlet, and
  a servlet really doesn't care very much about where its output goes.</p>
<p>
<a name="INDEX-1251"></a><a name="INDEX-1252"></a>Most web servers that implement servlets have also implemented a
  feature called <em class="emphasis">servlet chaining</em>, where the
  server routes a request through an administrator-defined chain of
  servlets.  At the end of the sequence, the server sends the output
  to the client. Alternately, some servers can be configured to route
  certain MIME types through certain servlets.  If a filtering servlet
  is configured to take all of the output with the MIME type
  "servlet/filterme," another servlet can produce data with that MIME
  type, and that data will be passed to the filtering servlet. The
  filtering servlet, after doing its work, can output HTML for the
  browser. MIME-based filtering also allows servlets to filter objects
  that don't come from a servlet in the first place, such as HTML
  files served by the web server.<a href="#FOOTNOTE-4">[4]</a>
</p>
<blockquote class="footnote">
<a name="FOOTNOTE-4"></a>
<p>[4]<a name="INDEX-1253"></a> It is interesting to note that the Java Web Server is completely
  servlet-based; it even uses an internal servlet to serve static HTML
  files.  JWS users can easily implement a filtering servlet by
  chaining it to the end of the <tt class="literal">file</tt> servlet.  To
  use servlet chaining in JWS, you must activate the feature using the
  administration tool.</p>
</blockquote>
<p>
<a name="INDEX-1254"></a><a href="#ch05-pgfid-546755">Example 5-3</a> demonstrates a basic servlet, derived from
  <tt class="literal">HttpServlet</tt>, that examines incoming text for a
  <tt class="literal">&lt;DATE&gt;</tt> tag and replaces the tag with the
  current date.  This servlet is never called on its own, but instead
  after another servlet (such as, an HTML generator) has produced the
  actual content.</p>
<a name="ch05-pgfid-546755"></a>
<div class="example">
<h4 class="objtitle">Example 5-3. Date Filtering Servlet </h4>
<blockquote>
<pre class="programlisting">
import javax.servlet.*;
import javax.servlet.http.*;
import java.io.*;
import java.util.*;

public class DateFilter extends HttpServlet {

  public void doGet(HttpServletRequest req, HttpServletResponse resp)
    throws ServletException, IOException {
  
    PrintWriter out = resp.getWriter();

    String contentType = req.getContentType();
    if (contentType == null) 
      return; // No incoming data
    
    // Note that if we were using MIME filtering we would have to set this to 
    // something different to avoid an infinite loop
    resp.setContentType(contentType); 

    BufferedReader br = new BufferedReader(req.getReader());

    String line = null;
    Date d = new Date();
    while ((line = br.readLine()) != null) {
      int index;
      while ((index=line.indexOf("&lt;DATE&gt;")) &gt;= 0) 
        line = line.substring(0, index) + d + line.substring(index + 6);
      out.println(line); 
    }


    br.close();
  }
}</pre>
</blockquote>
</div>
<p>
<a name="INDEX-1255"></a><a name="INDEX-1256"></a><a name="INDEX-1257"></a>The <tt class="literal">DateFilter</tt> servlet works by reading each line of input, scanning for the text <tt class="literal">&lt;DATE&gt;</tt>, and replacing it with the current date. This example introduces the <tt class="literal">getReader()</tt> method of <tt class="literal">HttpServletRequest</tt>, which returns a <tt class="literal">PrintReader</tt> that points to the original request body.  When you call <tt class="literal">getReader()</tt> in an <tt class="literal">HttpServlet</tt>, you can read the original HTTP form variables, if any.  When this method is used within a filtering servlet, it provides access to the output of the previous servlet in the chain.</p>

<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch05_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_02.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch05_04.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch05_04.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">5.2. Servlet Basics</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">5.4. Custom Servlet Initialization</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
