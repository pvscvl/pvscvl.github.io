<html>
<head>
<title>The javax.sql Package (Java Enterprise in a Nutshell)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan, Jim Farley, William Crawford and Kristopher Magnusson">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-483-5E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The javax.sql Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch26_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch26_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part3.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/part3.htm">Part 3: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch28_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch28_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 27.  The javax.sql Package</h1>

<p>
<a name="INDEX-3236"></a><a name="INDEX-3237"></a>

The <tt class="literal">javax.sql </tt>package contains the JDBC 2.0
Standard Extension API.  The classes and interfaces in this package
provide new functionality, such as connection pooling, that do not
fall under the scope of the original JDBC API and can therefore be
safely packaged separately. The <tt class="literal">DataSource</tt>
interface serves as a factory for <tt class="literal">Connection</tt>objects; <tt class="literal">DataSource </tt>objects can be
registered with a JNDI server, making it possible to get the name of a
database from a name service. <tt class="literal">PooledConnection</tt>supports connection pooling, which allows an application to
handle multiple database connections in a fairly transparent
manner. <tt class="literal">RowSet </tt>extends the <tt class="literal">ResultSet</tt>interface to a JavaBeans component that can be manipulated
at design time and used with non-SQL data sources. <a href="#ch27-pgfid-903921">Figure 27-1</a> shows
the class hierarchy of the <tt class="literal">javax.sql </tt>package.</p>
<a name="ch27-pgfid-903921"></a>
<div class="figure">
<img alt="figure" src="figs/Jent.2701.gif" webstripperlinkwas="figs/Jent.2701.gif"></div>
<h4 class="objtitle">Figure 27-1. The javax.sql package</h4>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ConnectionEvent</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3238"></a>

Provides information about a pooled connection when an event occurs on
the connection.  If the event is an error event,
<tt class="literal">ConnectionEvent</tt> includes the
<tt class="literal">SQLException</tt> that is about to be thrown to the
application.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ConnectionEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ConnectionEvent</b> (PooledConnection <i class="parameter">con</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ConnectionEvent</b> (PooledConnection <i class="parameter">con</i>, java.sql.SQLException <i class="parameter">ex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.sql.SQLException <b class="function">getSQLException</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->ConnectionEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">ConnectionEventListener.{connectionClosed(), connectionErrorOccurred()}</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ConnectionEventListener</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<p>An object that implements <tt class="literal">ConnectionEventListener</tt> registers to receive event notifications from <tt class="literal">PooledConnection</tt> objects.  The <tt class="literal">connectionClosed()</tt> method is called when the <tt class="literal">close()</tt> method of the <tt class="literal">PooledConnection</tt> object is called, while the <tt class="literal">connectionErrorOccurred()</tt> method is called immediately before an <tt class="literal">SQLException</tt> is thrown to indicate a fatal error condition (one that renders the connection unusable in the future).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ConnectionEventListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">connectionClosed</b> (ConnectionEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">connectionErrorOccurred</b> (ConnectionEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(ConnectionEventListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">PooledConnection.{addConnectionEventListener(), removeConnectionEventListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ConnectionPoolDataSource</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3239"></a>

A factory for <tt class="literal">PooledConnection</tt> objects.  Can be registered with a JNDI service or used standalone (for example, in a servlet).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ConnectionPoolDataSource</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getLoginTimeout</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract PrintWriter <b class="function">getLogWriter</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract PooledConnection <b class="function">getPooledConnection</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract PooledConnection <b class="function">getPooledConnection</b> (String <i class="parameter">user</i>, String <i class="parameter">password</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLoginTimeout</b> (int <i class="parameter">seconds</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLogWriter</b> (PrintWriter <i class="parameter">out</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DataSource</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3240"></a>

A factory for <tt class="literal">java.sql.Connection</tt> objects.  Can be registered with a JNDI service, so that an application can get the name of a database from a name service.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">DataSource</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.sql.Connection <b class="function">getConnection</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.sql.Connection <b class="function">getConnection</b> (String <i class="parameter">username</i>, String <i class="parameter">password</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getLoginTimeout</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract PrintWriter <b class="function">getLogWriter</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLoginTimeout</b> (int <i class="parameter">seconds</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLogWriter</b> (PrintWriter <i class="parameter">out</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PooledConnection</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3241"></a><a name="INDEX-3242"></a><a name="INDEX-3243"></a><tt class="literal">PooledConnection</tt> provides an application-level hook into the JDBC Standard Extension's connection pooling functionality.  Call <tt class="literal">getConnection()</tt> to retrieve a standard <tt class="literal">java.sql.Connection </tt>object for database access from the connection pool. Use <tt class="literal">close()</tt> to return this connection to the pool.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">PooledConnection</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addConnectionEventListener</b> (ConnectionEventListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeConnectionEventListener</b> (ConnectionEventListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">close</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.sql.Connection <b class="function">getConnection</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">javax.sql.XAConnection</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">ConnectionEvent.ConnectionEvent()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">ConnectionPoolDataSource.getPooledConnection()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RowSet</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3244"></a><a name="INDEX-3245"></a><tt class="literal">RowSet</tt> extends the <tt class="literal">java.sql.ResultSet</tt> interface so that <tt class="literal">RowSet</tt> objects are JavaBeans components and can be manipulated by visual programming tools. A <tt class="literal">RowSet</tt> can be implemented on top of any JDBC-compliant <tt class="literal">ResultSet</tt>.  The <tt class="literal">setCommand()</tt> method specifies what data the row set should contain (for a database generated set, this might be an SQL statement).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">RowSet</b> extends java.sql.ResultSet {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addRowSetListener</b> (RowSetListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeRowSetListener</b> (RowSetListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">clearParameters</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">execute</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getCommand</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getDataSourceName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getEscapeProcessing</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxFieldSize</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxRows</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getPassword</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getQueryTimeout</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getTransactionIsolation</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Map <b class="function">getTypeMap</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getUrl</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getUsername</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isReadOnly</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setArray</b> (int <i class="parameter">i</i>, java.sql.Array <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setAsciiStream</b> (int <i class="parameter">parameterIndex</i>, java.io.InputStream <i class="parameter">x</i>, int <i class="parameter">length</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBigDecimal</b> (int <i class="parameter">parameterIndex</i>, java.math.BigDecimal <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBinaryStream</b> (int <i class="parameter">parameterIndex</i>, java.io.InputStream <i class="parameter">x</i>, int <i class="parameter">length</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBlob</b> (int <i class="parameter">i</i>, java.sql.Blob <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBoolean</b> (int <i class="parameter">parameterIndex</i>, boolean <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setByte</b> (int <i class="parameter">parameterIndex</i>, byte <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBytes</b> (int <i class="parameter">parameterIndex</i>, byte[ ] <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setCharacterStream</b> (int <i class="parameter">parameterIndex</i>, Reader <i class="parameter">reader</i>, int <i class="parameter">length</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setClob</b> (int <i class="parameter">i</i>, java.sql.Clob <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setCommand</b> (String <i class="parameter">cmd</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setConcurrency</b> (int <i class="parameter">concurrency</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setDataSourceName</b> (String <i class="parameter">name</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setDate</b> (int <i class="parameter">parameterIndex</i>, java.sql.Date <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setDate</b> (int <i class="parameter">parameterIndex</i>, java.sql.Date <i class="parameter">x</i>, java.util.Calendar <i class="parameter">cal</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setDouble</b> (int <i class="parameter">parameterIndex</i>, double <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setEscapeProcessing</b> (boolean <i class="parameter">enable</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setFloat</b> (int <i class="parameter">parameterIndex</i>, float <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setInt</b> (int <i class="parameter">parameterIndex</i>, int <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLong</b> (int <i class="parameter">parameterIndex</i>, long <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setMaxFieldSize</b> (int <i class="parameter">max</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setMaxRows</b> (int <i class="parameter">max</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setNull</b> (int <i class="parameter">parameterIndex</i>, int <i class="parameter">sqlType</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setNull</b> (int <i class="parameter">paramIndex</i>, int <i class="parameter">sqlType</i>, String <i class="parameter">typeName</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setObject</b> (int <i class="parameter">parameterIndex</i>, Object <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setObject</b> (int <i class="parameter">parameterIndex</i>, Object <i class="parameter">x</i>, int <i class="parameter">targetSqlType</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setObject</b> (int <i class="parameter">parameterIndex</i>, Object <i class="parameter">x</i>, int <i class="parameter">targetSqlType</i>, int <i class="parameter">scale</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setPassword</b> (String <i class="parameter">password</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setQueryTimeout</b> (int <i class="parameter">seconds</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setReadOnly</b> (boolean <i class="parameter">value</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setRef</b> (int <i class="parameter">i</i>, java.sql.Ref <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setShort</b> (int <i class="parameter">parameterIndex</i>, short <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setString</b> (int <i class="parameter">parameterIndex</i>, String <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setTime</b> (int <i class="parameter">parameterIndex</i>, java.sql.Time <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setTime</b> (int <i class="parameter">parameterIndex</i>, java.sql.Time <i class="parameter">x</i>, java.util.Calendar <i class="parameter">cal</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setTimestamp</b> (int <i class="parameter">parameterIndex</i>, java.sql.Timestamp <i class="parameter">x</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setTimestamp</b> (int <i class="parameter">parameterIndex</i>, java.sql.Timestamp <i class="parameter">x</i>, java.util.Calendar <i class="parameter">cal</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setTransactionIsolation</b> (int <i class="parameter">level</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setType</b> (int <i class="parameter">type</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setTypeMap</b> (java.util.Map <i class="parameter">map</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setUrl</b> (String <i class="parameter">url</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setUsername</b> (String <i class="parameter">name</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(RowSet(java.sql.ResultSet))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">RowSetEvent.RowSetEvent()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RowSetEvent</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3246"></a>

Generated when an important event, such as a change in a column's value, occurs within a <tt class="literal">RowSet</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">RowSetEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">RowSetEvent</b> (RowSet <i class="parameter">source</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->RowSetEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">RowSetListener.{cursorMoved(), rowChanged(), rowSetChanged()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RowSetInternal</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3247"></a>

Implemented by a <tt class="literal">RowSet</tt> object that wishes to support the reader/writer row-loading paradigm. Contains additional methods used by <tt class="literal">RowSetReader</tt> and <tt class="literal">RowSetWriter</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">RowSetInternal</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.sql.Connection <b class="function">getConnection</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.sql.ResultSet <b class="function">getOriginal</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.sql.ResultSet <b class="function">getOriginalRow</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object[ ] <b class="function">getParams</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setMetaData</b> (RowSetMetaData <i class="parameter">md</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">RowSetReader.readData(), RowSetWriter.writeData()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RowSetListener</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3248"></a>

Implemented by an object that wishes to be informed of events generated by a <tt class="literal">RowSet</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">RowSetListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">cursorMoved</b> (RowSetEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">rowChanged</b> (RowSetEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">rowSetChanged</b> (RowSetEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(RowSetListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">RowSet.{addRowSetListener(), removeRowSetListener()}</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RowSetMetaData</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3249"></a>

Extends <tt class="literal">java.sql.ResultSetMetaData</tt> to support the functionality of <tt class="literal">RowSet</tt> objects. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">RowSetMetaData</b> extends java.sql.ResultSetMetaData {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setAutoIncrement</b> (int <i class="parameter">columnIndex</i>, boolean <i class="parameter">property</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setCaseSensitive</b> (int <i class="parameter">columnIndex</i>, boolean <i class="parameter">property</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setCatalogName</b> (int <i class="parameter">columnIndex</i>, String <i class="parameter">catalogName</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setColumnCount</b> (int <i class="parameter">columnCount</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setColumnDisplaySize</b> (int <i class="parameter">columnIndex</i>, int <i class="parameter">size</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setColumnLabel</b> (int <i class="parameter">columnIndex</i>, String <i class="parameter">label</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setColumnName</b> (int <i class="parameter">columnIndex</i>, String <i class="parameter">columnName</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setColumnType</b> (int <i class="parameter">columnIndex</i>, int <i class="parameter">SQLType</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setColumnTypeName</b> (int <i class="parameter">columnIndex</i>, String <i class="parameter">typeName</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setCurrency</b> (int <i class="parameter">columnIndex</i>, boolean <i class="parameter">property</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setNullable</b> (int <i class="parameter">columnIndex</i>, int <i class="parameter">property</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setPrecision</b> (int <i class="parameter">columnIndex</i>, int <i class="parameter">precision</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setScale</b> (int <i class="parameter">columnIndex</i>, int <i class="parameter">scale</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setSchemaName</b> (int <i class="parameter">columnIndex</i>, String <i class="parameter">schemaName</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setSearchable</b> (int <i class="parameter">columnIndex</i>, boolean <i class="parameter">property</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setSigned</b> (int <i class="parameter">columnIndex</i>, boolean <i class="parameter">property</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setTableName</b> (int <i class="parameter">columnIndex</i>, String <i class="parameter">tableName</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(RowSetMetaData(java.sql.ResultSetMetaData))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">RowSetInternal.setMetaData()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RowSetReader</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3250"></a>

Loads data into a <tt class="literal">RowSet</tt> that implements <tt class="literal">RowSetInternal</tt>.  The extensions to <tt class="literal">ResultSet</tt> introduced in JDBC 2.0 insert data.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">RowSetReader</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">readData</b> (RowSetInternal <i class="parameter">caller</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RowSetWriter</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3251"></a>

Writes data from a <tt class="literal">RowSet </tt>that implements <tt class="literal">RowSetInternal</tt>.  The data from the <tt class="literal">RowSet</tt> can be written back to a data source (not necessarily a database).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">RowSetWriter</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">writeData</b> (RowSetInternal <i class="parameter">caller</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>XAConnection</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3252"></a><a name="INDEX-3253"></a>
An extended version of <tt class="literal">PooledConnection</tt> that can be used in a distributed transaction environment, using the Java Transaction API (in the <tt class="literal">javax.transaction </tt>package).</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">XAConnection</b> extends PooledConnection {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.transaction.xa.XAResource <b class="function">getXAResource</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(XAConnection(PooledConnection))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">XADataSource.getXAConnection()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>XADataSource</b></font></td><td align="right"><font size="+1"><b>JDBC 2.0 Extension</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>A factory for <tt class="literal">XAConnection </tt>objects.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">XADataSource</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getLoginTimeout</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract PrintWriter <b class="function">getLogWriter</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.sql.XAConnection <b class="function">getXAConnection</b> () throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.sql.XAConnection <b class="function">getXAConnection</b> (String <i class="parameter">user</i>, String <i class="parameter">password</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLoginTimeout</b> (int <i class="parameter">seconds</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLogWriter</b> (PrintWriter <i class="parameter">out</i>) throws java.sql.SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<a name="INDEX-3254"></a>
<a name="INDEX-3255"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch26_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch26_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch28_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch28_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">26.1. The javax.servlet.http Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">28. The javax.transaction Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
