<html>
<head>
<title>The java.sql Package (Java Enterprise in a Nutshell)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan, Jim Farley, William Crawford and Kristopher Magnusson">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-483-5E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The java.sql Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch17_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch17_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part3.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/part3.htm">Part 3: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch19_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch19_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 18.  The java.sql Package</h1>

<p>
<a name="INDEX-2756"></a><a name="INDEX-2757"></a><a name="INDEX-2758"></a><a name="INDEX-2759"></a><a name="INDEX-2760"></a>
The <tt class="literal">java.sql</tt> package contains the entire JDBC API that sends SQL (Structured Query Language) statements to relational databases and retrieves the results of executing those SQL statements. <a href="#ch18-pgfid-525297">Figure 18-1</a> shows the class hierarchy of this package.  The JDBC 1.0 API became part of the core Java API in Java 1.1.  The JDBC 2.0 API supports a variety of new features and is part of the Java 2 platform.</p>
<p>The <tt class="literal">Driver</tt> interface represents a specific JDBC implementation for a particular database system. <tt class="literal">Connection</tt> represents a connection to a database.  The <tt class="literal">Statement</tt>, <tt class="literal">PreparedStatement</tt>, and <tt class="literal">CallableStatement</tt> interfaces support the execution of various kinds of SQL statements.  <tt class="literal">ResultSet</tt> is a set of results returned by the database in response to a SQL query. The <tt class="literal">ResultSetMetaData</tt> interface provides metadata about a result set, while <tt class="literal">DatabaseMetaData</tt> provides metadata about the database as a whole. </p>
<a name="ch18-pgfid-525297"></a>
<div class="figure">
<img alt="figure" src="figs/Jent.1801.gif" webstripperlinkwas="figs/Jent.1801.gif"></div>
<h4 class="objtitle">Figure 18-1. The java.sql Package</h4>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Array</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2761"></a><a name="INDEX-2762"></a><a name="INDEX-2763"></a><a name="INDEX-2764"></a><a name="INDEX-2765"></a>

Provides an interface to SQL <tt class="literal">ARRAY</tt> objects.  Each <tt class="literal">getArray() </tt>method returns a standard Java array of objects of the type returned by <tt class="literal">getBaseType()</tt>.  Two <tt class="literal">getArray() </tt>methods support a <tt class="literal">java.util.Map </tt>parameter that can customize the SQL-type-to-Java-object mapping.  The contents of the array can also be returned as a <tt class="literal">ResultSet</tt> using the various <tt class="literal">getResultSet() </tt>methods.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Array</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getArray</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getArray</b> (java.util.Map <i class="parameter">map</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getArray</b> (long <i class="parameter">index</i>, int <i class="parameter">count</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getArray</b> (long <i class="parameter">index</i>, int <i class="parameter">count</i>, java.util.Map <i class="parameter">map</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getBaseType</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getBaseTypeName</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getResultSet</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getResultSet</b> (java.util.Map <i class="parameter">map</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getResultSet</b> (long <i class="parameter">index</i>, int <i class="parameter">count</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getResultSet</b> (long <i class="parameter">index</i>, int <i class="parameter">count</i>, java.util.Map <i class="parameter">map</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">PreparedStatement.setArray(), SQLOutput.writeArray(), javax.sql.RowSet.setArray()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">CallableStatement.getArray(), ResultSet.getArray(), SQLInput.readArray()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BatchUpdateException</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2766"></a><a name="INDEX-2767"></a>
This exception, which is a subclass of <tt class="literal">SQLException</tt>, is thrown when a batch update operation fails.  The exception includes a method, <tt class="literal">getUpdateCounts()</tt>, that returns an array of <tt class="literal">int</tt> values, where the values correspond to the update counts for the successful update operations in the batch.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BatchUpdateException</b> extends SQLException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BatchUpdateException</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BatchUpdateException</b> (int[ ] <i class="parameter">updateCounts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BatchUpdateException</b> (String <i class="parameter">reason</i>, int[ ] <i class="parameter">updateCounts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BatchUpdateException</b> (String <i class="parameter">reason</i>, String <i class="parameter">SQLState</i>, int[ ] <i class="parameter">updateCounts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BatchUpdateException</b> (String <i class="parameter">reason</i>, String <i class="parameter">SQLState</i>, int <i class="parameter">vendorCode</i>, int[ ] <i class="parameter">updateCounts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">getUpdateCounts</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->SQLException-->BatchUpdateException</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Blob</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2768"></a><a name="INDEX-2769"></a><a name="INDEX-2770"></a><a name="INDEX-2771"></a><a name="INDEX-2772"></a>

The <tt class="literal">Blob</tt> interface encapsulates a SQL <tt class="literal">BLOB</tt> field.  The interface actually contains a pointer to the <tt class="literal">BLOB</tt> within the database, rather than the complete (and potentially very large) object.  Data can be retrieved via a <tt class="literal">java.io.InputStream </tt>returned by <tt class="literal">getInputStream() </tt>or as an array of bytes returned by <tt class="literal">getBytes()</tt>. The <tt class="literal">length()</tt> method returns the number of bytes in the <tt class="literal">BLOB</tt>.  The <tt class="literal">position()</tt> methods scan the contents of the <tt class="literal">Blob </tt>for a particular content sequence, represented by either another <tt class="literal">Blob </tt>object or a byte array. (The <tt class="literal">position()</tt> methods do not provide the current read-index within the <tt class="literal">BLOB</tt>).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Blob</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.io.InputStream <b class="function">getBinaryStream</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte[ ] <b class="function">getBytes</b> (long <i class="parameter">pos</i>, int <i class="parameter">length</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">length</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">position</b> (byte[ ] <i class="parameter">pattern</i>, long <i class="parameter">start</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">position</b> (Blob <i class="parameter">pattern</i>, long <i class="parameter">start</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Blob.position(), PreparedStatement.setBlob(), SQLOutput.writeBlob(), javax.sql.RowSet.setBlob()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">CallableStatement.getBlob(), ResultSet.getBlob(), SQLInput.readBlob()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CallableStatement</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2773"></a><a name="INDEX-2774"></a><a name="INDEX-2775"></a>
The <tt class="literal">CallableStatement </tt>interface allows programs to access SQL stored procedures within the database. You create a <tt class="literal">CallableStatement</tt> with the <tt class="literal">prepareCall()</tt> method of <tt class="literal">Connection</tt>. Question-mark characters (?) are used as placeholders for input and output values in the syntax that calls stored procedures:</p>
<blockquote>
<pre class="programlisting">
{? = call <em class="replaceable">procedure_name</em>[(?[,?...])]}
{call <em class="replaceable">procedure_name</em>[(?[,?...])]}</pre>
</blockquote>
<p>
<a name="INDEX-2776"></a><a name="INDEX-2777"></a>
Parameters are numbered sequentially starting from 1.  Input parameters are set with the same <tt class="literal">setXXX()</tt> methods as in a <tt class="literal">PreparedStatement</tt>.  Output parameters must be registered using the <tt class="literal">registerOutParameter() </tt>methods, and may be retrieved after the statement executes using the <tt class="literal">getXXX()</tt> methods, which are identical to those in <tt class="literal">ResultSet</tt>. To execute a statement, you call <tt class="literal">execute()</tt>, which is inherited from <tt class="literal">PreparedStatement</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">CallableStatement</b> extends PreparedStatement {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.sql.Array <b class="function">getArray</b> (int <i class="parameter">i</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.math.BigDecimal <b class="function">getBigDecimal</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Blob <b class="function">getBlob</b> (int <i class="parameter">i</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getBoolean</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte <b class="function">getByte</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte[ ] <b class="function">getBytes</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Clob <b class="function">getClob</b> (int <i class="parameter">i</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.sql.Date <b class="function">getDate</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.sql.Date <b class="function">getDate</b> (int <i class="parameter">parameterIndex</i>, java.util.Calendar <i class="parameter">cal</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getDouble</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getFloat</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getInt</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">getLong</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getObject</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Object <b class="function">getObject</b> (int <i class="parameter">i</i>, java.util.Map <i class="parameter">map</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Ref <b class="function">getRef</b> (int <i class="parameter">i</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract short <b class="function">getShort</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getString</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Time <b class="function">getTime</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Time <b class="function">getTime</b> (int <i class="parameter">parameterIndex</i>, java.util.Calendar <i class="parameter">cal</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Timestamp <b class="function">getTimestamp</b> (int <i class="parameter">parameterIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Timestamp <b class="function">getTimestamp</b> (int <i class="parameter">parameterIndex</i>, java.util.Calendar <i class="parameter">cal</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">registerOutParameter</b> (int <i class="parameter">parameterIndex</i>, int <i class="parameter">sqlType</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">registerOutParameter</b> (int <i class="parameter">paramIndex</i>, int <i class="parameter">sqlType</i>, String <i class="parameter">typeName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">registerOutParameter</b> (int <i class="parameter">parameterIndex</i>, int <i class="parameter">sqlType</i>, int <i class="parameter">scale</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">wasNull</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public abstract java.math.BigDecimal <b class="function">getBigDecimal</b> (int <i class="parameter">parameterIndex</i>, int <i class="parameter">scale</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(CallableStatement(PreparedStatement(Statement)))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.sql.Connection.prepareCall()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Clob</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2778"></a><a name="INDEX-2779"></a><a name="INDEX-2780"></a><a name="INDEX-2781"></a><a name="INDEX-2782"></a>
The <tt class="literal">Clob</tt> interface encapsulates a SQL <tt class="literal">CLOB </tt>field.  The interface actually contains a pointer to the <tt class="literal">CLOB </tt>within the database, rather than the complete character string.  Data is retrieved via <tt class="literal">getAsciiStream()</tt>, which returns an <tt class="literal">InputStream</tt>, or via <tt class="literal">getCharacterStream()</tt>, which returns a <tt class="literal">Reader</tt>.  The <tt class="literal">getSubString() </tt>method returns a specific substring within the <tt class="literal">CLOB</tt>, while the <tt class="literal">position() </tt>methods search the <tt class="literal">CLOB </tt>for a pattern and return the index of the pattern's first appearance.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Clob</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.io.InputStream <b class="function">getAsciiStream</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Reader <b class="function">getCharacterStream</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getSubString</b> (long <i class="parameter">pos</i>, int <i class="parameter">length</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">length</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">position</b> (Clob <i class="parameter">searchstr</i>, long <i class="parameter">start</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">position</b> (String <i class="parameter">searchstr</i>, long <i class="parameter">start</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Clob.position(), PreparedStatement.setClob(), SQLOutput.writeClob(), javax.sql.RowSet.setClob()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">CallableStatement.getClob(), ResultSet.getClob(), SQLInput.readClob()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Connection</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2783"></a><a name="INDEX-2784"></a><a name="INDEX-2785"></a><a name="INDEX-2786"></a><a name="INDEX-2787"></a><a name="INDEX-2788"></a><a name="INDEX-2789"></a><a name="INDEX-2790"></a><a name="INDEX-2791"></a><a name="INDEX-2792"></a>

The <tt class="literal">Connection</tt> interface represents an individual database connection.  The object includes factory methods for <tt class="literal">Statement</tt>, <tt class="literal">PreparedStatement</tt>, and <tt class="literal">CallableStatement</tt> objects and a number of transaction control methods (<tt class="literal">setAutoCommit()</tt>, <tt class="literal">commit()</tt>, <tt class="literal">rollback()</tt>, <tt class="literal">getAutoCommit()</tt>, <tt class="literal">setTransactionIsolation()</tt>, and <tt class="literal">getTransactionIsolation()</tt>). Other methods provide information about the database. The most important of these is <tt class="literal">getMetaData()</tt>, which returns a <tt class="literal">DatabaseMetaData </tt>object.  The <tt class="literal">getWarnings()</tt> method returns any warnings pending for this connection.</p>
<p>
<tt class="literal">Connection</tt> objects are created with the static <tt class="literal">DriverManager.getConnection()</tt> method.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Connection</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TRANSACTION_NONE</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TRANSACTION_READ_COMMITTED</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TRANSACTION_READ_UNCOMMITTED</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TRANSACTION_REPEATABLE_READ</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TRANSACTION_SERIALIZABLE</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">clearWarnings</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">close</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">commit</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Statement <b class="function">createStatement</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Statement <b class="function">createStatement</b> (int <i class="parameter">resultSetType</i>, int <i class="parameter">resultSetConcurrency</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getAutoCommit</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getCatalog</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract DatabaseMetaData <b class="function">getMetaData</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getTransactionIsolation</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.util.Map <b class="function">getTypeMap</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract SQLWarning <b class="function">getWarnings</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isClosed</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isReadOnly</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">nativeSQL</b> (String <i class="parameter">sql</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract CallableStatement <b class="function">prepareCall</b> (String <i class="parameter">sql</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract CallableStatement <b class="function">prepareCall</b> (String <i class="parameter">sql</i>, int <i class="parameter">resultSetType</i>, int <i class="parameter">resultSetConcurrency</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract PreparedStatement <b class="function">prepareStatement</b> (String <i class="parameter">sql</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract PreparedStatement <b class="function">prepareStatement</b> (String <i class="parameter">sql</i>, int <i class="parameter">resultSetType</i>, int <i class="parameter">resultSetConcurrency</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">rollback</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setAutoCommit</b> (boolean <i class="parameter">autoCommit</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setCatalog</b> (String <i class="parameter">catalog</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setReadOnly</b> (boolean <i class="parameter">readOnly</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setTransactionIsolation</b> (int <i class="parameter">level</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setTypeMap</b> (java.util.Map <i class="parameter">map</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DatabaseMetaData.getConnection(), Driver.connect(), DriverManager.getConnection(), Statement.getConnection(), javax.sql.DataSource.getConnection(), javax.sql.PooledConnection.getConnection(), javax.sql.RowSetInternal.getConnection()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DatabaseMetaData</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2793"></a>
The <tt class="literal">getMetaData()</tt> method of the <tt class="literal">Connection </tt>interface returns a <tt class="literal">DatabaseMetaData </tt>object that encapsulates nonconnection-dependent information about the underlying database.  A number of methods return <tt class="literal">ResultSet </tt>objects that should be treated like any other <tt class="literal">ResultSet</tt>. </p>
<p>
<a name="INDEX-2794"></a><tt class="literal">DatabaseMetaData</tt> methods that accept <tt class="literal">String</tt> parameters with names ending in "Pattern" allow for simple wildcard searching. These methods treat the <tt class="literal">%</tt> character as matching any number of characters and the <tt class="literal">_</tt> character as matching any single character.  If these parameters are set to <tt class="literal">null</tt>, pattern matching is not performed.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">DatabaseMetaData</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">bestRowNotPseudo</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">bestRowPseudo</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">bestRowSession</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">bestRowTemporary</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">bestRowTransaction</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">bestRowUnknown</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">columnNoNulls</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">columnNullable</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">columnNullableUnknown</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">importedKeyCascade</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">importedKeyInitiallyDeferred</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">importedKeyInitiallyImmediate</b> ;</td><td align="right"><i> =6</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">importedKeyNoAction</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">importedKeyNotDeferrable</b> ;</td><td align="right"><i> =7</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">importedKeyRestrict</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">importedKeySetDefault</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">importedKeySetNull</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">procedureColumnIn</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">procedureColumnInOut</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">procedureColumnOut</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">procedureColumnResult</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">procedureColumnReturn</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">procedureColumnUnknown</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">procedureNoNulls</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">procedureNoResult</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">procedureNullable</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">procedureNullableUnknown</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">procedureResultUnknown</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">procedureReturnsResult</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final short <b class="function">tableIndexClustered</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final short <b class="function">tableIndexHashed</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final short <b class="function">tableIndexOther</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final short <b class="function">tableIndexStatistic</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">typeNoNulls</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">typeNullable</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">typeNullableUnknown</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">typePredBasic</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">typePredChar</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">typePredNone</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">typeSearchable</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">versionColumnNotPseudo</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">versionColumnPseudo</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">versionColumnUnknown</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">allProceduresAreCallable</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">allTablesAreSelectable</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">dataDefinitionCausesTransactionCommit</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">dataDefinitionIgnoredInTransactions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">deletesAreDetected</b> (int <i class="parameter">type</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">doesMaxRowSizeIncludeBlobs</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getBestRowIdentifier</b> (String <i class="parameter">catalog</i>, String <i class="parameter">schema</i>, String <i class="parameter">table</i>, int <i class="parameter">scope</i>, boolean <i class="parameter">nullable</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getCatalogs</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getCatalogSeparator</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getCatalogTerm</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getColumnPrivileges</b> (String <i class="parameter">catalog</i>, String <i class="parameter">schema</i>, String <i class="parameter">table</i>, String <i class="parameter">columnNamePattern</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getColumns</b> (String <i class="parameter">catalog</i>, String <i class="parameter">schemaPattern</i>, String <i class="parameter">tableNamePattern</i>, String <i class="parameter">columnNamePattern</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.sql.Connection <b class="function">getConnection</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getCrossReference</b> (String <i class="parameter">primaryCatalog</i>, String <i class="parameter">primarySchema</i>, String <i class="parameter">primaryTable</i>, String <i class="parameter">foreignCatalog</i>, String <i class="parameter">foreignSchema</i>, String <i class="parameter">foreignTable</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getDatabaseProductName</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getDatabaseProductVersion</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getDefaultTransactionIsolation</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getDriverMajorVersion</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getDriverMinorVersion</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getDriverName</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getDriverVersion</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getExportedKeys</b> (String <i class="parameter">catalog</i>, String <i class="parameter">schema</i>, String <i class="parameter">table</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getExtraNameCharacters</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getIdentifierQuoteString</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getImportedKeys</b> (String <i class="parameter">catalog</i>, String <i class="parameter">schema</i>, String <i class="parameter">table</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getIndexInfo</b> (String <i class="parameter">catalog</i>, String <i class="parameter">schema</i>, String <i class="parameter">table</i>, boolean <i class="parameter">unique</i>, boolean <i class="parameter">approximate</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxBinaryLiteralLength</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxCatalogNameLength</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxCharLiteralLength</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxColumnNameLength</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxColumnsInGroupBy</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxColumnsInIndex</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxColumnsInOrderBy</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxColumnsInSelect</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxColumnsInTable</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxConnections</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxCursorNameLength</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxIndexLength</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxProcedureNameLength</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxRowSize</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxSchemaNameLength</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxStatementLength</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxStatements</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxTableNameLength</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxTablesInSelect</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxUserNameLength</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getNumericFunctions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getPrimaryKeys</b> (String <i class="parameter">catalog</i>, String <i class="parameter">schema</i>, String <i class="parameter">table</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getProcedureColumns</b> (String <i class="parameter">catalog</i>, String <i class="parameter">schemaPattern</i>, String <i class="parameter">procedureNamePattern</i>, String <i class="parameter">columnNamePattern</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getProcedures</b> (String <i class="parameter">catalog</i>, String <i class="parameter">schemaPattern</i>, String <i class="parameter">procedureNamePattern</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getProcedureTerm</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getSchemas</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getSchemaTerm</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getSearchStringEscape</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getSQLKeywords</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getStringFunctions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getSystemFunctions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getTablePrivileges</b> (String <i class="parameter">catalog</i>, String <i class="parameter">schemaPattern</i>, String <i class="parameter">tableNamePattern</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getTables</b> (String <i class="parameter">catalog</i>, String <i class="parameter">schemaPattern</i>, String <i class="parameter">tableNamePattern</i>, String[ ] <i class="parameter">types</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getTableTypes</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getTimeDateFunctions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getTypeInfo</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract ResultSet <b class="function">getUDTs</b> (String <i class="parameter">catalog</i>, String <i class="parameter">schemaPattern</i>, String <i class="parameter">typeNamePattern</i>, int[ ] <i class="parameter">types</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getURL</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getUserName</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getVersionColumns</b> (String <i class="parameter">catalog</i>, String <i class="parameter">schema</i>, String <i class="parameter">table</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">insertsAreDetected</b> (int <i class="parameter">type</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isCatalogAtStart</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isReadOnly</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">nullPlusNonNullIsNull</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">nullsAreSortedAtEnd</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">nullsAreSortedAtStart</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">nullsAreSortedHigh</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">nullsAreSortedLow</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">othersDeletesAreVisible</b> (int <i class="parameter">type</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">othersInsertsAreVisible</b> (int <i class="parameter">type</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">othersUpdatesAreVisible</b> (int <i class="parameter">type</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">ownDeletesAreVisible</b> (int <i class="parameter">type</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">ownInsertsAreVisible</b> (int <i class="parameter">type</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">ownUpdatesAreVisible</b> (int <i class="parameter">type</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">storesLowerCaseIdentifiers</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">storesLowerCaseQuotedIdentifiers</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">storesMixedCaseIdentifiers</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">storesMixedCaseQuotedIdentifiers</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">storesUpperCaseIdentifiers</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">storesUpperCaseQuotedIdentifiers</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsAlterTableWithAddColumn</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsAlterTableWithDropColumn</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsANSI92EntryLevelSQL</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsANSI92FullSQL</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsANSI92IntermediateSQL</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">supportsBatchUpdates</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsCatalogsInDataManipulation</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsCatalogsInIndexDefinitions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsCatalogsInPrivilegeDefinitions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsCatalogsInProcedureCalls</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsCatalogsInTableDefinitions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsColumnAliasing</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsConvert</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsConvert</b> (int <i class="parameter">fromType</i>, int <i class="parameter">toType</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsCoreSQLGrammar</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsCorrelatedSubqueries</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsDataDefinitionAndDataManipulationTransactions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsDataManipulationTransactionsOnly</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsDifferentTableCorrelationNames</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsExpressionsInOrderBy</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsExtendedSQLGrammar</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsFullOuterJoins</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsGroupBy</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsGroupByBeyondSelect</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsGroupByUnrelated</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsIntegrityEnhancementFacility</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsLikeEscapeClause</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsLimitedOuterJoins</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsMinimumSQLGrammar</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsMixedCaseIdentifiers</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsMixedCaseQuotedIdentifiers</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsMultipleResultSets</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsMultipleTransactions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsNonNullableColumns</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsOpenCursorsAcrossCommit</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsOpenCursorsAcrossRollback</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsOpenStatementsAcrossCommit</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsOpenStatementsAcrossRollback</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsOrderByUnrelated</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsOuterJoins</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsPositionedDelete</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsPositionedUpdate</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">supportsResultSetConcurrency</b> (int <i class="parameter">type</i>, int <i class="parameter">concurrency</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">supportsResultSetType</b> (int <i class="parameter">type</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsSchemasInDataManipulation</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsSchemasInIndexDefinitions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsSchemasInPrivilegeDefinitions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsSchemasInProcedureCalls</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsSchemasInTableDefinitions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsSelectForUpdate</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsStoredProcedures</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsSubqueriesInComparisons</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsSubqueriesInExists</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsSubqueriesInIns</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsSubqueriesInQuantifieds</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsTableCorrelationNames</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsTransactionIsolationLevel</b> (int <i class="parameter">level</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsTransactions</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsUnion</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">supportsUnionAll</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">updatesAreDetected</b> (int <i class="parameter">type</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">usesLocalFilePerTable</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">usesLocalFiles</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.sql.Connection.getMetaData()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DataTruncation</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>serializable checked PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2795"></a><a name="INDEX-2796"></a>
This subclass of SQLWarning is a special warning used when JDBC unexpectedly truncates a data value. It is chained as a warning on read operations and thrown as an exception on write operations.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DataTruncation</b> extends SQLWarning {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DataTruncation</b> (int <i class="parameter">index</i>, boolean <i class="parameter">parameter</i>, boolean <i class="parameter">read</i>, int <i class="parameter">dataSize</i>, int <i class="parameter">transferSize</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDataSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getParameter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getRead</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getTransferSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->SQLException-->SQLWarning-->DataTruncation</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Date</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable comparable PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2797"></a><a name="INDEX-2798"></a><a name="INDEX-2799"></a><a name="INDEX-2800"></a><a name="INDEX-2801"></a>
A wrapper around the <tt class="literal">java.util.Date</tt> class that adjusts the time value (milliseconds since January 1, 1970 0:00:00 GMT) to conform to the SQL <tt class="literal">DATE</tt> specification.  The <tt class="literal">DATE</tt> type only deals with the day, month, and year, so the hours, minutes, seconds, and milliseconds are set to 00:00:00.00 in the current time zone. The <tt class="literal">Date </tt>class also includes a static <tt class="literal">valueOf() </tt>method that decodes the JDBC <tt class="literal">Date</tt> escape syntax <em class="replaceable">yyyy</em><tt class="literal">-</tt><em class="replaceable">mm</em><tt class="literal">-</tt><em class="replaceable">dd</em> into a <tt class="literal">Date</tt> value.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Date</b> extends java.util.Date {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Date</b> (long <i class="parameter">date</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public <b class="function">Date</b> (int <i class="parameter">year</i>, int <i class="parameter">month</i>, int <i class="parameter">day</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.sql.Date <b class="function">valueOf</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public methods overriding Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTime</b> (long <i class="parameter">date</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">getHours</b> ();</td><td align="right"><i> Overrides:Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">getMinutes</b> ();</td><td align="right"><i> Overrides:Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">getSeconds</b> ();</td><td align="right"><i> Overrides:Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setHours</b> (int <i class="parameter">i</i>);</td><td align="right"><i> Overrides:Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setMinutes</b> (int <i class="parameter">i</i>);</td><td align="right"><i> Overrides:Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setSeconds</b> (int <i class="parameter">i</i>);</td><td align="right"><i> Overrides:Date</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.Date(Serializable,Cloneable,Comparable)-->java.sql.Date</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">PreparedStatement.setDate(), ResultSet.updateDate(), SQLOutput.writeDate(), javax.sql.RowSet.setDate()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">CallableStatement.getDate(), java.sql.Date.valueOf(), ResultSet.getDate(), SQLInput.readDate()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Driver</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2802"></a><a name="INDEX-2803"></a><a name="INDEX-2804"></a>
Every JDBC driver must implement the <tt class="literal">Driver</tt> interface.  Most programmers never need to deal with this interface, except when using the <tt class="literal">DriverManager.registerDriver()</tt> method, which is generally not recommended. The better way to register a driver is to load the driver by calling <tt class="literal">Class.forName()</tt> on the driver class, which automatically registers the driver as well.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Driver</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">acceptsURL</b> (String <i class="parameter">url</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.sql.Connection <b class="function">connect</b> (String <i class="parameter">url</i>, java.util.Properties <i class="parameter">info</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMajorVersion</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMinorVersion</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract DriverPropertyInfo[ ] <b class="function">getPropertyInfo</b> (String <i class="parameter">url</i>, java.util.Properties <i class="parameter">info</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">jdbcCompliant</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Passed To: </span><tt class="literal">DriverManager.{deregisterDriver(), registerDriver()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DriverManager.getDriver()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DriverManager</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2805"></a><a name="INDEX-2806"></a>

The <tt class="literal">DriverManager </tt>class is responsible for loading JDBC drivers and creating <tt class="literal">Connection</tt> objects.  It starts by loading all the drivers specified in the <tt class="literal">jdbc.drivers </tt>system property.  Individual drivers can also be loaded by calling <tt class="literal">Class.forName() </tt>with the driver class name.  </p>
<p>
<a name="INDEX-2807"></a>
Programs use the static <tt class="literal">DriverManager.getConnection() </tt>method to create individual database connections.  The driver manager creates the <tt class="literal">Connection</tt> using the appropriate driver, based on the JDBC URL specified in the call to <tt class="literal">getConnection()</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DriverManager</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">deregisterDriver</b> (Driver <i class="parameter">driver</i>) throws SQLException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.sql.Connection <b class="function">getConnection</b> (String <i class="parameter">url</i>) throws SQLException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.sql.Connection <b class="function">getConnection</b> (String <i class="parameter">url</i>, java.util.Properties <i class="parameter">info</i>) throws SQLException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.sql.Connection <b class="function">getConnection</b> (String <i class="parameter">url</i>, String <i class="parameter">user</i>, String <i class="parameter">password</i>) throws SQLException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Driver <b class="function">getDriver</b> (String <i class="parameter">url</i>) throws SQLException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.util.Enumeration <b class="function">getDrivers</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">getLoginTimeout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static PrintWriter <b class="function">getLogWriter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">println</b> (String <i class="parameter">message</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">registerDriver</b> (Driver <i class="parameter">driver</i>) throws SQLException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setLoginTimeout</b> (int <i class="parameter">seconds</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static void <b class="function">setLogWriter</b> (PrintWriter <i class="parameter">out</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static PrintStream <b class="function">getLogStream</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static void <b class="function">setLogStream</b> (PrintStream <i class="parameter">out</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DriverPropertyInfo</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2808"></a><a name="INDEX-2809"></a>
The <tt class="literal">DriverPropertyInfo</tt> class contains the properties required to create a new database connection using a particular driver.  It is returned by the <tt class="literal">getDriverProperties()</tt> method of <tt class="literal">Driver</tt>.  This class is useful only for programmers who need to interact directly with the driver in a dynamic manner.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DriverPropertyInfo</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DriverPropertyInfo</b> (String <i class="parameter">name</i>, String <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String[ ] <b class="function">choices</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">description</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">name</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">required</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">value</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Driver.getPropertyInfo()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PreparedStatement</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2810"></a><a name="INDEX-2811"></a><a name="INDEX-2812"></a><a name="INDEX-2813"></a><a name="INDEX-2814"></a><a name="INDEX-2815"></a><a name="INDEX-2816"></a>

The <tt class="literal">PreparedStatement </tt>interface allows programs to precompile SQL statements for increased performance.  You obtain a <tt class="literal">PreparedStatement</tt> object with the <tt class="literal">prepareStatement()</tt> method of <tt class="literal">Connection</tt>. Parameters in the statement are denoted by <tt class="literal">?</tt> characters in the SQL string and indexed from 1 to <em class="emphasis">n</em>. Individual parameter values are set using the <tt class="literal">setXXX() </tt>methods, while the <tt class="literal">clearParameters()</tt> method clears all the parameters. Note that some JDBC drivers do not implement <tt class="literal">setObject() </tt>properly when dealing with <tt class="literal">null </tt>field types.  Once all parameters have been set, the statement is executed using <tt class="literal">execute()</tt>, <tt class="literal">executeQuery()</tt>, or <tt class="literal">executeUpdate()</tt>.  Unlike with the <tt class="literal">Statement </tt>object, the execution methods take no parameters.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">PreparedStatement</b> extends Statement {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">addBatch</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">clearParameters</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">execute</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">executeQuery</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">executeUpdate</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract ResultSetMetaData <b class="function">getMetaData</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setArray</b> (int <i class="parameter">i</i>, java.sql.Array <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setAsciiStream</b> (int <i class="parameter">parameterIndex</i>, java.io.InputStream <i class="parameter">x</i>, int <i class="parameter">length</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBigDecimal</b> (int <i class="parameter">parameterIndex</i>, java.math.BigDecimal <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBinaryStream</b> (int <i class="parameter">parameterIndex</i>, java.io.InputStream <i class="parameter">x</i>, int <i class="parameter">length</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setBlob</b> (int <i class="parameter">i</i>, Blob <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBoolean</b> (int <i class="parameter">parameterIndex</i>, boolean <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setByte</b> (int <i class="parameter">parameterIndex</i>, byte <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBytes</b> (int <i class="parameter">parameterIndex</i>, byte[ ] <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setCharacterStream</b> (int <i class="parameter">parameterIndex</i>, Reader <i class="parameter">reader</i>, int <i class="parameter">length</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setClob</b> (int <i class="parameter">i</i>, Clob <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setDate</b> (int <i class="parameter">parameterIndex</i>, java.sql.Date <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setDate</b> (int <i class="parameter">parameterIndex</i>, java.sql.Date <i class="parameter">x</i>, java.util.Calendar <i class="parameter">cal</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setDouble</b> (int <i class="parameter">parameterIndex</i>, double <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setFloat</b> (int <i class="parameter">parameterIndex</i>, float <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setInt</b> (int <i class="parameter">parameterIndex</i>, int <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLong</b> (int <i class="parameter">parameterIndex</i>, long <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setNull</b> (int <i class="parameter">parameterIndex</i>, int <i class="parameter">sqlType</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setNull</b> (int <i class="parameter">paramIndex</i>, int <i class="parameter">sqlType</i>, String <i class="parameter">typeName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setObject</b> (int <i class="parameter">parameterIndex</i>, Object <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setObject</b> (int <i class="parameter">parameterIndex</i>, Object <i class="parameter">x</i>, int <i class="parameter">targetSqlType</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setObject</b> (int <i class="parameter">parameterIndex</i>, Object <i class="parameter">x</i>, int <i class="parameter">targetSqlType</i>, int <i class="parameter">scale</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setRef</b> (int <i class="parameter">i</i>, Ref <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setShort</b> (int <i class="parameter">parameterIndex</i>, short <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setString</b> (int <i class="parameter">parameterIndex</i>, String <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setTime</b> (int <i class="parameter">parameterIndex</i>, Time <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setTime</b> (int <i class="parameter">parameterIndex</i>, Time <i class="parameter">x</i>, java.util.Calendar <i class="parameter">cal</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setTimestamp</b> (int <i class="parameter">parameterIndex</i>, Timestamp <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setTimestamp</b> (int <i class="parameter">parameterIndex</i>, Timestamp <i class="parameter">x</i>, java.util.Calendar <i class="parameter">cal</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public abstract void <b class="function">setUnicodeStream</b> (int <i class="parameter">parameterIndex</i>, java.io.InputStream <i class="parameter">x</i>, int <i class="parameter">length</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(PreparedStatement(Statement))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">CallableStatement</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.sql.Connection.prepareStatement()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Ref</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2817"></a><a name="INDEX-2818"></a>

The <tt class="literal">Ref</tt> interface provides a pointer to a structured data type within the database.  The <tt class="literal">getBaseType()</tt> method returns the name of the underlying type.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Ref</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getBaseTypeName</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">PreparedStatement.setRef(), SQLOutput.writeRef(), javax.sql.RowSet.setRef()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">CallableStatement.getRef(), ResultSet.getRef(), SQLInput.readRef()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ResultSet</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2819"></a><a name="INDEX-2820"></a><a name="INDEX-2821"></a>

The <tt class="literal">ResultSet </tt>interface represents a database result set, allowing programs to access the data in the result set.  ResultSet objects are usually generated by the <tt class="literal">execute()</tt>, <tt class="literal">executeUpdate()</tt>, and <tt class="literal">executeQuery()</tt> methods of <tt class="literal">Statement </tt>and <tt class="literal">PreparedStatement</tt>. They are also returned by certain metadata methods.  </p>
<p>
<a name="INDEX-2822"></a><a name="INDEX-2823"></a>

The JDBC 1.0 <tt class="literal">ResultSet </tt>allows you to scroll navigate through the data once from beginning to end, iterating through rows using the <tt class="literal">next()</tt> method and retrieving individual fields using the <tt class="literal">getXXX()</tt> methods.  The <tt class="literal">getMetaData()</tt> method returns a <tt class="literal">ResultSetMetaData </tt>object that describes the structure of the underlying data.</p>
<p>
<a name="INDEX-2824"></a><a name="INDEX-2825"></a><a name="INDEX-2826"></a><a name="INDEX-2827"></a>

JDBC 2.0 introduces a number of new features: complete scrolling capabilities (the <tt class="literal">previous()</tt>, <tt class="literal">first()</tt>, <tt class="literal">last()</tt>, and related methods), direct updating of data via the <tt class="literal">updateXXX()</tt> methods, and insertion of new data rows using the <tt class="literal">insertRow()</tt> method.  Since there are relatively few JDBC 2.0-compliant drivers (currently available as of this book's print date), you may want to avoid the JDBC 2.0 methods for the time being.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ResultSet</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">CONCUR_READ_ONLY</b> ;</td><td align="right"><i> =1007</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">CONCUR_UPDATABLE</b> ;</td><td align="right"><i> =1008</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">FETCH_FORWARD</b> ;</td><td align="right"><i> =1000</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">FETCH_REVERSE</b> ;</td><td align="right"><i> =1001</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">FETCH_UNKNOWN</b> ;</td><td align="right"><i> =1002</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">TYPE_FORWARD_ONLY</b> ;</td><td align="right"><i> =1003</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">TYPE_SCROLL_INSENSITIVE</b> ;</td><td align="right"><i> =1004</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">TYPE_SCROLL_SENSITIVE</b> ;</td><td align="right"><i> =1005</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">absolute</b> (int <i class="parameter">row</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">afterLast</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">beforeFirst</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">cancelRowUpdates</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">clearWarnings</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">close</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">deleteRow</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">findColumn</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">first</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.sql.Array <b class="function">getArray</b> (String <i class="parameter">colName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.sql.Array <b class="function">getArray</b> (int <i class="parameter">i</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.io.InputStream <b class="function">getAsciiStream</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.io.InputStream <b class="function">getAsciiStream</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.math.BigDecimal <b class="function">getBigDecimal</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.math.BigDecimal <b class="function">getBigDecimal</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.io.InputStream <b class="function">getBinaryStream</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.io.InputStream <b class="function">getBinaryStream</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Blob <b class="function">getBlob</b> (String <i class="parameter">colName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Blob <b class="function">getBlob</b> (int <i class="parameter">i</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getBoolean</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getBoolean</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte <b class="function">getByte</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte <b class="function">getByte</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte[ ] <b class="function">getBytes</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte[ ] <b class="function">getBytes</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Reader <b class="function">getCharacterStream</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Reader <b class="function">getCharacterStream</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Clob <b class="function">getClob</b> (String <i class="parameter">colName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Clob <b class="function">getClob</b> (int <i class="parameter">i</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract int <b class="function">getConcurrency</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getCursorName</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.sql.Date <b class="function">getDate</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.sql.Date <b class="function">getDate</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.sql.Date <b class="function">getDate</b> (String <i class="parameter">columnName</i>, java.util.Calendar <i class="parameter">cal</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.sql.Date <b class="function">getDate</b> (int <i class="parameter">columnIndex</i>, java.util.Calendar <i class="parameter">cal</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getDouble</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getDouble</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract int <b class="function">getFetchDirection</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract int <b class="function">getFetchSize</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getFloat</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getFloat</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getInt</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getInt</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">getLong</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">getLong</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSetMetaData <b class="function">getMetaData</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getObject</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getObject</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Object <b class="function">getObject</b> (String <i class="parameter">colName</i>, java.util.Map <i class="parameter">map</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Object <b class="function">getObject</b> (int <i class="parameter">i</i>, java.util.Map <i class="parameter">map</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Ref <b class="function">getRef</b> (String <i class="parameter">colName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Ref <b class="function">getRef</b> (int <i class="parameter">i</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract int <b class="function">getRow</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract short <b class="function">getShort</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract short <b class="function">getShort</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Statement <b class="function">getStatement</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getString</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getString</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Time <b class="function">getTime</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Time <b class="function">getTime</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Time <b class="function">getTime</b> (String <i class="parameter">columnName</i>, java.util.Calendar <i class="parameter">cal</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Time <b class="function">getTime</b> (int <i class="parameter">columnIndex</i>, java.util.Calendar <i class="parameter">cal</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Timestamp <b class="function">getTimestamp</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Timestamp <b class="function">getTimestamp</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Timestamp <b class="function">getTimestamp</b> (String <i class="parameter">columnName</i>, java.util.Calendar <i class="parameter">cal</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Timestamp <b class="function">getTimestamp</b> (int <i class="parameter">columnIndex</i>, java.util.Calendar <i class="parameter">cal</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract int <b class="function">getType</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract SQLWarning <b class="function">getWarnings</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">insertRow</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">isAfterLast</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">isBeforeFirst</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">isFirst</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">isLast</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">last</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">moveToCurrentRow</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">moveToInsertRow</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">next</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">previous</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">refreshRow</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">relative</b> (int <i class="parameter">rows</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">rowDeleted</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">rowInserted</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">rowUpdated</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setFetchDirection</b> (int <i class="parameter">direction</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setFetchSize</b> (int <i class="parameter">rows</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateAsciiStream</b> (String <i class="parameter">columnName</i>, java.io.InputStream <i class="parameter">x</i>, int <i class="parameter">length</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateAsciiStream</b> (int <i class="parameter">columnIndex</i>, java.io.InputStream <i class="parameter">x</i>, int <i class="parameter">length</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateBigDecimal</b> (String <i class="parameter">columnName</i>, java.math.BigDecimal <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateBigDecimal</b> (int <i class="parameter">columnIndex</i>, java.math.BigDecimal <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateBinaryStream</b> (String <i class="parameter">columnName</i>, java.io.InputStream <i class="parameter">x</i>, int <i class="parameter">length</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateBinaryStream</b> (int <i class="parameter">columnIndex</i>, java.io.InputStream <i class="parameter">x</i>, int <i class="parameter">length</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateBoolean</b> (String <i class="parameter">columnName</i>, boolean <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateBoolean</b> (int <i class="parameter">columnIndex</i>, boolean <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateByte</b> (String <i class="parameter">columnName</i>, byte <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateByte</b> (int <i class="parameter">columnIndex</i>, byte <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateBytes</b> (String <i class="parameter">columnName</i>, byte[ ] <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateBytes</b> (int <i class="parameter">columnIndex</i>, byte[ ] <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateCharacterStream</b> (String <i class="parameter">columnName</i>, Reader <i class="parameter">reader</i>, int <i class="parameter">length</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateCharacterStream</b> (int <i class="parameter">columnIndex</i>, Reader <i class="parameter">x</i>, int <i class="parameter">length</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateDate</b> (String <i class="parameter">columnName</i>, java.sql.Date <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateDate</b> (int <i class="parameter">columnIndex</i>, java.sql.Date <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateDouble</b> (String <i class="parameter">columnName</i>, double <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateDouble</b> (int <i class="parameter">columnIndex</i>, double <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateFloat</b> (String <i class="parameter">columnName</i>, float <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateFloat</b> (int <i class="parameter">columnIndex</i>, float <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateInt</b> (String <i class="parameter">columnName</i>, int <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateInt</b> (int <i class="parameter">columnIndex</i>, int <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateLong</b> (String <i class="parameter">columnName</i>, long <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateLong</b> (int <i class="parameter">columnIndex</i>, long <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateNull</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateNull</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateObject</b> (String <i class="parameter">columnName</i>, Object <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateObject</b> (int <i class="parameter">columnIndex</i>, Object <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateObject</b> (String <i class="parameter">columnName</i>, Object <i class="parameter">x</i>, int <i class="parameter">scale</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateObject</b> (int <i class="parameter">columnIndex</i>, Object <i class="parameter">x</i>, int <i class="parameter">scale</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateRow</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateShort</b> (String <i class="parameter">columnName</i>, short <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateShort</b> (int <i class="parameter">columnIndex</i>, short <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateString</b> (String <i class="parameter">columnName</i>, String <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateString</b> (int <i class="parameter">columnIndex</i>, String <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateTime</b> (String <i class="parameter">columnName</i>, Time <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateTime</b> (int <i class="parameter">columnIndex</i>, Time <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateTimestamp</b> (String <i class="parameter">columnName</i>, Timestamp <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">updateTimestamp</b> (int <i class="parameter">columnIndex</i>, Timestamp <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">wasNull</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public abstract java.math.BigDecimal <b class="function">getBigDecimal</b> (String <i class="parameter">columnName</i>, int <i class="parameter">scale</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public abstract java.math.BigDecimal <b class="function">getBigDecimal</b> (int <i class="parameter">columnIndex</i>, int <i class="parameter">scale</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public abstract java.io.InputStream <b class="function">getUnicodeStream</b> (String <i class="parameter">columnName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public abstract java.io.InputStream <b class="function">getUnicodeStream</b> (int <i class="parameter">columnIndex</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">javax.sql.RowSet</tt>
</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ResultSetMetaData</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2828"></a><a name="INDEX-2829"></a><a name="INDEX-2830"></a><a name="INDEX-2831"></a>

This interface provides metainformation about the data underlying a particular <tt class="literal">ResultSet</tt>. In particular, you can get information about the columns of the <tt class="literal">ResultSet</tt> with <tt class="literal">getColumnCount()</tt>, <tt class="literal">getColumnLabel()</tt>, and <tt class="literal">getColumnTypeName()</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ResultSetMetaData</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">columnNoNulls</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">columnNullable</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">columnNullableUnknown</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getCatalogName</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract String <b class="function">getColumnClassName</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getColumnCount</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getColumnDisplaySize</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getColumnLabel</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getColumnName</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getColumnType</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getColumnTypeName</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getPrecision</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getScale</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getSchemaName</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getTableName</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isAutoIncrement</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isCaseSensitive</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isCurrency</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isDefinitelyWritable</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">isNullable</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isReadOnly</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isSearchable</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isSigned</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>

<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isWritable</b> (int <i class="parameter">column</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">javax.sql.RowSetMetaData</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">PreparedStatement.getMetaData(), ResultSet.getMetaData()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SQLData</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2832"></a>

Allows custom mapping of user-defined SQL types.  This interface is generally implemented by a development tool or driver vendor and is never called by the programmer directly.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">SQLData</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getSQLTypeName</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">readSQL</b> (SQLInput <i class="parameter">stream</i>, String <i class="parameter">typeName</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>

<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeSQL</b> (SQLOutput <i class="parameter">stream</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">SQLOutput.writeObject()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SQLException</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>serializable checked PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2833"></a><a name="INDEX-2834"></a><a name="INDEX-2835"></a>

A <tt class="literal">SQLException</tt> object is thrown by any JDBC method
that encounters an error.  <tt class="literal">SQLException</tt> extends the
<tt class="literal">java.lang.Exception</tt> class and adds a
vendor-specific error code and an XOPEN SQL state code.
<tt class="literal">SQLException</tt> objects can be chained together. The
next exception in the chain is retrieved via
<tt class="literal">getNextException()</tt>, which returns
<tt class="literal">null</tt> if there are no more exceptions available.
The <tt class="literal">setNextException()</tt> method adds an exception to
the end of the chain.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">SQLException</b> extends Exception {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SQLException</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SQLException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SQLException</b> (String <i class="parameter">reason</i>, String <i class="parameter">SQLState</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SQLException</b> (String <i class="parameter">reason</i>, String <i class="parameter">SQLState</i>, int <i class="parameter">vendorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getErrorCode</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public SQLException <b class="function">getNextException</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getSQLState</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setNextException</b> (SQLException <i class="parameter">ex</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->SQLException</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">BatchUpdateException, SQLWarning</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">SQLException.setNextException(), javax.sql.ConnectionEvent.ConnectionEvent()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">SQLException.getNextException(), javax.sql.ConnectionEvent.getSQLException()</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SQLInput</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2836"></a>

Represents an input stream for a user-defined SQL type.  <tt class="literal">SQLInput</tt> is used by the driver and is never called by the programmer directly.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">SQLInput</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.sql.Array <b class="function">readArray</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.io.InputStream <b class="function">readAsciiStream</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.math.BigDecimal <b class="function">readBigDecimal</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.io.InputStream <b class="function">readBinaryStream</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Blob <b class="function">readBlob</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">readBoolean</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte <b class="function">readByte</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte[ ] <b class="function">readBytes</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Reader <b class="function">readCharacterStream</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Clob <b class="function">readClob</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.sql.Date <b class="function">readDate</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">readDouble</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">readFloat</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">readInt</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">readLong</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">readObject</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Ref <b class="function">readRef</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract short <b class="function">readShort</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">readString</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Time <b class="function">readTime</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Timestamp <b class="function">readTimestamp</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">wasNull</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">SQLData.readSQL()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SQLOutput</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2837"></a>

Represents an output stream for a user-defined SQL type. <tt class="literal">SQLOutput</tt> is used by the driver and is never called by the programmer directly.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">SQLOutput</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeArray</b> (java.sql.Array <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeAsciiStream</b> (java.io.InputStream <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeBigDecimal</b> (java.math.BigDecimal <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeBinaryStream</b> (java.io.InputStream <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeBlob</b> (Blob <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeBoolean</b> (boolean <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeByte</b> (byte <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeBytes</b> (byte[ ] <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeCharacterStream</b> (Reader <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeClob</b> (Clob <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeDate</b> (java.sql.Date <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeDouble</b> (double <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeFloat</b> (float <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeInt</b> (int <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeLong</b> (long <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeObject</b> (SQLData <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeRef</b> (Ref <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeShort</b> (short <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeString</b> (String <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeStruct</b> (Struct <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeTime</b> (Time <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>

<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeTimestamp</b> (Timestamp <i class="parameter">x</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">SQLData.writeSQL()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SQLWarning</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>serializable checked PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2838"></a><a name="INDEX-2839"></a>

Represents a nonfatal warning condition.  Warnings are silently chained to the object whose method produced them. You can retrieve warnings with the <tt class="literal">getWarnings()</tt> method implemented by most JDBC classes.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">SQLWarning</b> extends SQLException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SQLWarning</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SQLWarning</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SQLWarning</b> (String <i class="parameter">reason</i>, String <i class="parameter">SQLstate</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SQLWarning</b> (String <i class="parameter">reason</i>, String <i class="parameter">SQLstate</i>, int <i class="parameter">vendorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public SQLWarning <b class="function">getNextWarning</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setNextWarning</b> (SQLWarning <i class="parameter">w</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->SQLException-->SQLWarning</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">DataTruncation</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">SQLWarning.setNextWarning()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.sql.Connection.getWarnings(), ResultSet.getWarnings(), SQLWarning.getNextWarning(), Statement.getWarnings()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Statement</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2840"></a><a name="INDEX-2841"></a><a name="INDEX-2842"></a><a name="INDEX-2843"></a><a name="INDEX-2844"></a>

The <tt class="literal">Statement</tt> interface executes SQL statements.
Statement objects are returned by the
<tt class="literal">createStatement()</tt> method of
<tt class="literal">Connection</tt>. The <tt class="literal">execute()</tt>,
<tt class="literal">executeUpdate()</tt>, and
<tt class="literal">executeQuery()</tt> methods each take a <tt class="literal">String</tt>parameter that contains a SQL statement.
<tt class="literal">execute()</tt> returns a <tt class="literal">boolean</tt>
value that indicates whether a <tt class="literal">ResultSet </tt>is
available.  The <tt class="literal">ResultSet </tt>can then be retrieved
with <tt class="literal">getResultSet()</tt>.
<tt class="literal">executeUpdate()</tt> returns an update count and is used
for <tt class="literal">INSERT</tt>, <tt class="literal">UPDATE</tt>,
<tt class="literal">DELETE</tt>, and other data manipulation statements.
<tt class="literal">executeQuery()</tt> is used for <tt class="literal">SELECT</tt>statements, so it returns a <tt class="literal">ResultSet</tt>.
There can be only one <tt class="literal">ResultSet </tt>active per query;
the current <tt class="literal">ResultSet</tt> is closed when a new SQL
statement of any kind is executed.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Statement</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">addBatch</b> (String <i class="parameter">sql</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">cancel</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">clearBatch</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">clearWarnings</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">close</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">execute</b> (String <i class="parameter">sql</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract int[ ] <b class="function">executeBatch</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">executeQuery</b> (String <i class="parameter">sql</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">executeUpdate</b> (String <i class="parameter">sql</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.sql.Connection <b class="function">getConnection</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract int <b class="function">getFetchDirection</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract int <b class="function">getFetchSize</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxFieldSize</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxRows</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getMoreResults</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getQueryTimeout</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ResultSet <b class="function">getResultSet</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract int <b class="function">getResultSetConcurrency</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract int <b class="function">getResultSetType</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getUpdateCount</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract SQLWarning <b class="function">getWarnings</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setCursorName</b> (String <i class="parameter">name</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setEscapeProcessing</b> (boolean <i class="parameter">enable</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setFetchDirection</b> (int <i class="parameter">direction</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">setFetchSize</b> (int <i class="parameter">rows</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setMaxFieldSize</b> (int <i class="parameter">max</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setMaxRows</b> (int <i class="parameter">max</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setQueryTimeout</b> (int <i class="parameter">seconds</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">PreparedStatement</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.sql.Connection.createStatement(), ResultSet.getStatement()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Struct</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2845"></a><a name="INDEX-2846"></a>

The <tt class="literal">Struct</tt> interface provides a mapping for an SQL structured type.  The <tt class="literal">getAttributes()</tt> method returns an array of objects representing each attribute in the structured type.  Custom type maps can be specified by including a <tt class="literal">java.util.Map </tt>attribute.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Struct</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object[ ] <b class="function">getAttributes</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object[ ] <b class="function">getAttributes</b> (java.util.Map <i class="parameter">map</i>) throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getSQLTypeName</b> () throws SQLException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">SQLOutput.writeStruct()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Time</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable comparable PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2847"></a><a name="INDEX-2848"></a><a name="INDEX-2849"></a><a name="INDEX-2850"></a>

A wrapper around the <tt class="literal">java.util.Date </tt>class that adjusts the time value (milliseconds since January 1, 1970 0:00:00 GMT) to conform to the SQL <tt class="literal">TIME </tt>specification. The <tt class="literal">TIME</tt> type only deals with the time of day, so the date components are set to January 1, 1970 and should not be altered. The <tt class="literal">Time </tt>class also includes a static <tt class="literal">valueOf() </tt>method that decodes the JDBC <tt class="literal">Time </tt>escape syntax <em class="replaceable">hh</em><tt class="literal">:</tt><em class="replaceable">mm</em><tt class="literal">:</tt><em class="replaceable">ss</em> into a <tt class="literal">Time</tt> value.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Time</b> extends java.util.Date {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Time</b> (long <i class="parameter">time</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Time</b> (int <i class="parameter">hour</i>, int <i class="parameter">minute</i>, int <i class="parameter">second</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Time <b class="function">valueOf</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public methods overriding Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTime</b> (long <i class="parameter">time</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">getDate</b> ();</td><td align="right"><i> Overrides:Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">getDay</b> ();</td><td align="right"><i> Overrides:Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">getMonth</b> ();</td><td align="right"><i> Overrides:Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">getYear</b> ();</td><td align="right"><i> Overrides:Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setDate</b> (int <i class="parameter">i</i>);</td><td align="right"><i> Overrides:Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setMonth</b> (int <i class="parameter">i</i>);</td><td align="right"><i> Overrides:Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setYear</b> (int <i class="parameter">i</i>);</td><td align="right"><i> Overrides:Date</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.Date(Serializable,Cloneable,Comparable)-->Time</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">PreparedStatement.setTime(), ResultSet.updateTime(), SQLOutput.writeTime(), javax.sql.RowSet.setTime()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">CallableStatement.getTime(), ResultSet.getTime(), SQLInput.readTime(), Time.valueOf()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Timestamp</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable comparable PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2851"></a><a name="INDEX-2852"></a><a name="INDEX-2853"></a><a name="INDEX-2854"></a>

Extends the <tt class="literal">java.util.Date </tt>class to function as an SQL <tt class="literal">TIMESTAMP </tt>value by adding a nanoseconds component.  The <tt class="literal">getTime() </tt>method returns the time in milliseconds since January 1, 1970 00:00:00 GMT to the latest integral second.  To include fractional seconds, divide the value returned by <tt class="literal">getNanos()</tt> by 1 million and add this to the result returned by <tt class="literal">getTime()</tt>.  This allows accurate comparisons with <tt class="literal">java.util.Date </tt>objects.  The <tt class="literal">valueOf() </tt>method parses a <tt class="literal">String</tt> in the format <em class="replaceable">yyyy</em><tt class="literal">-</tt><em class="replaceable">mm</em><tt class="literal">-</tt><em class="replaceable">dd</em><tt class="literal"></tt><em class="replaceable">hh</em><tt class="literal">:</tt><em class="replaceable">mm</em><tt class="literal">:</tt><em class="replaceable">ss</em><tt class="literal">.</tt><em class="replaceable">fffffffff</em> into a <tt class="literal">Timestamp</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Timestamp</b> extends java.util.Date {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Timestamp</b> (long <i class="parameter">time</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public <b class="function">Timestamp</b> (int <i class="parameter">year</i>, int <i class="parameter">month</i>, int <i class="parameter">date</i>, int <i class="parameter">hour</i>, int <i class="parameter">minute</i>, int <i class="parameter">second</i>, int <i class="parameter">nano</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Timestamp <b class="function">valueOf</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">after</b> (Timestamp <i class="parameter">ts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">before</b> (Timestamp <i class="parameter">ts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Timestamp <i class="parameter">ts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getNanos</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setNanos</b> (int <i class="parameter">n</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public methods overriding Date</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">ts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.Date(Serializable,Cloneable,Comparable)-->Timestamp</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">PreparedStatement.setTimestamp(), ResultSet.updateTimestamp(), SQLOutput.writeTimestamp(), Timestamp.{after(), before(), equals()}, javax.sql.RowSet.setTimestamp()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">CallableStatement.getTimestamp(), ResultSet.getTimestamp(), SQLInput.readTimestamp(), Timestamp.valueOf()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Types</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.sql</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1(opt)</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2855"></a><a name="INDEX-2856"></a><a name="INDEX-2857"></a>

The <tt class="literal">Types</tt> class defines a set of integer constants that represent SQL data types.  The type names and constant values are the ones specified in the XOPEN specification.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Types</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">ARRAY</b> ;</td><td align="right"><i> =2003</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BIGINT</b> ;</td><td align="right"><i> =-5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BINARY</b> ;</td><td align="right"><i> =-2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BIT</b> ;</td><td align="right"><i> =-7</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">BLOB</b> ;</td><td align="right"><i> =2004</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CHAR</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">CLOB</b> ;</td><td align="right"><i> =2005</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DATE</b> ;</td><td align="right"><i> =91</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DECIMAL</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">DISTINCT</b> ;</td><td align="right"><i> =2001</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DOUBLE</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">FLOAT</b> ;</td><td align="right"><i> =6</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INTEGER</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">JAVA_OBJECT</b> ;</td><td align="right"><i> =2000</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LONGVARBINARY</b> ;</td><td align="right"><i> =-4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LONGVARCHAR</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NULL</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NUMERIC</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">OTHER</b> ;</td><td align="right"><i> =1111</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">REAL</b> ;</td><td align="right"><i> =7</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">REF</b> ;</td><td align="right"><i> =2006</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SMALLINT</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">STRUCT</b> ;</td><td align="right"><i> =2002</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TIME</b> ;</td><td align="right"><i> =92</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TIMESTAMP</b> ;</td><td align="right"><i> =93</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TINYINT</b> ;</td><td align="right"><i> =-6</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VARBINARY</b> ;</td><td align="right"><i> =-3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VARCHAR</b> ;</td><td align="right"><i> =12</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<a name="INDEX-2858"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch17_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch17_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch19_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch19_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">17.1. The java.rmi.server Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">19. The javax.ejb Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
