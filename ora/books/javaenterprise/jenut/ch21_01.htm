<html>
<head>
<title>The javax.jms Package (Java Enterprise in a Nutshell)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan, Jim Farley, William Crawford and Kristopher Magnusson">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-483-5E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The javax.jms Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch20_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch20_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part3.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/part3.htm">Part 3: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch22_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch22_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 21.  The javax.jms Package</h1>

<p>
<a name="INDEX-2916"></a><a name="INDEX-2917"></a><a name="INDEX-2918"></a><a name="INDEX-2919"></a><a name="INDEX-2920"></a><a name="INDEX-2921"></a>

The <tt class="literal">javax.jms</tt> package implements the Java Message
Service (JMS), which provides an API for message-based communication
between separate Java processes. Message-based communication is
asynchronous; a message addressed to a recipient or group is sent, and the recipient receives and acts on the
message at some later time. This is different from other
network-based communication between clients, like RMI, where the
sender of a message waits for a response before continuing. </p>
<p>In the JMS model, clients of a message service send and receive
messages through a provider that is responsible for delivering
messages. JMS 1.0 provides two models for messaging among clients:
<em class="emphasis">point-to-point</em> and
<em class="emphasis">publish/subscribe</em>. In <em class="emphasis">point-to-point
messaging</em>, a message is created by one client and addressed
for a single remote recipient. The provider is handed the message and
delivers it to the one recipient targeted by the message. This model
revolves around message queues: a message sender queues outgoing
messages for delivery and a message recipient queues incoming messages
for handling. The interfaces provided in the
<tt class="literal">javax.jms</tt> package for point-to-point messaging have
"Queue" as their prefix
(<tt class="literal">QueueConnection</tt>, <tt class="literal">QueueSession</tt>,
etc.). In <em class="emphasis">publish/subscribe messaging</em>, a
hierarchical content tree is established. Clients publish messages to
specific nodes or topics in the tree, and these messages are delivered
to any clients that have subscribed to these nodes. Interfaces related
to publish/subscribe messaging have "Topic" as their
prefix (<tt class="literal">TopicConnection</tt>,
<tt class="literal">TopicSession</tt>, etc.). Point-to-point messaging is
analogous to typical email messaging; publish/subscribe
messaging works like Internet newsgroups. </p>
<p>In a typical scenario, a JMS client gets a reference to a
<tt class="literal">ConnectionFactory</tt> from the JMS provider (usually
through a JNDI lookup). The <tt class="literal">ConnectionFactory</tt>
creates a <tt class="literal">Connection</tt> to the provider. With the
<tt class="literal">Connection</tt>, a client can create
<tt class="literal">Session</tt> objects to send and receive
messages. Within a single <tt class="literal">Session</tt>, messages are
sent and received in a serial order. Once the client has a
<tt class="literal">Session</tt>, it can send and receive
<tt class="literal">Message</tt> objects composed of a header,
optional properties, and a body. Different types of
<tt class="literal">Message</tt> objects can hold different contents in
their body (e.g., text, binary data, name/value pairs). </p>
<p>
<a href="#ch21-pgfid-973080">Figure 21-1</a> shows the interfaces in the <tt class="literal">javax.jms</tt> package, while
  <a href="#ch21-pgfid-973099">Figure 21-2</a> shows the classes and exceptions.</p>
<a name="ch21-pgfid-973080"></a>
<div class="figure">
<img alt="figure" src="figs/Jent.2101.gif" webstripperlinkwas="figs/Jent.2101.gif"></div>
<h4 class="objtitle">Figure 21-1. The interfaces of the javax.jms package</h4>
<a name="ch21-pgfid-973099"></a>
<div class="figure">
<img alt="figure" src="figs/Jent.2102.gif" webstripperlinkwas="figs/Jent.2102.gif"></div>
<h4 class="objtitle">Figure 21-2. The classes and exceptions of the javax.jms package</h4>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BytesMessage</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2922"></a><a name="INDEX-2923"></a>

A <tt class="literal">BytesMessage</tt> is a <tt class="literal">Message</tt> that
contains an uninterpreted stream of bytes as its body. This is
typically used to wrap an existing (non-JMS) message format so that it
can be


delivered over JMS. Data is written to the message's
binary body using its <tt class="literal">writeXXX()</tt> methods and read
using its <tt class="literal">readXXX()</tt> methods. Once a
<tt class="literal">BytesMessage</tt> has been created (using a series of
write calls), the <tt class="literal">reset()</tt> method can put the message
into read-only mode. Until this is done, the message is in write-only
mode, and the contents cannot be read.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">BytesMessage</b> extends Message {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">readBoolean</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte <b class="function">readByte</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">readBytes</b> (byte[ ] <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">readBytes</b> (byte[ ] <i class="parameter">value</i>, int <i class="parameter">length</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract char <b class="function">readChar</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">readDouble</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">readFloat</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">readInt</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">readLong</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract short <b class="function">readShort</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">readUnsignedByte</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">readUnsignedShort</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">readUTF</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">reset</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeBoolean</b> (boolean <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeByte</b> (byte <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeBytes</b> (byte[ ] <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeBytes</b> (byte[ ] <i class="parameter">value</i>, int <i class="parameter">offset</i>, int <i class="parameter">length</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeChar</b> (char <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeDouble</b> (double <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeFloat</b> (float <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeInt</b> (int <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeLong</b> (long <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeObject</b> (Object <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeShort</b> (short <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeUTF</b> (String <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(BytesMessage(Message))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Session.createBytesMessage()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Connection</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2924"></a>
A JMS client needs to have a <tt class="literal">Connection</tt> to the JMS provider in order to send or receive messages. The <tt class="literal">javax.jms.Connection</tt> interface for messaging is roughly analogous to the <tt class="literal">java.sql.Connection</tt> interface in JDBC--one connects a client to a messaging service, while the other connects a client to a persistent data service. JMS <tt class="literal">Connection</tt> objects are generally expensive to create, because setup requires network communication with the provider. Thus, a client normally has only one, or very few, <tt class="literal">Connection</tt> objects to its JMS provider.</p>
<p>
<a name="INDEX-2925"></a><a name="INDEX-2926"></a><a name="INDEX-2927"></a>

A <tt class="literal">Connection</tt> can either be in running mode (messages are being sent and received through the connection), or it can be stopped. When a <tt class="literal">Connection</tt> is in stopped mode, it can send messages, but not receive them. A newly created <tt class="literal">Connection</tt> is in stopped mode so that you can finish setting up your client (e.g., creating <tt class="literal">Session </tt>objects; creating <tt class="literal">MessageConsumer</tt> and/or <tt class="literal">MessageProducer</tt> objects). A <tt class="literal">Connection</tt> can be started and stopped using <tt class="literal">stop()</tt> and <tt class="literal">start()</tt> multiple times, if necessary. When you're done with a <tt class="literal">Connection</tt>, you should free up its resources by calling its <tt class="literal">close()</tt> method.</p>
<p>A <tt class="literal">Connection</tt> object creates sessions for message exchanges. The methods for creating sessions are defined by extensions of the <tt class="literal">Connection</tt> interface (<tt class="literal">QueueConnection</tt> and <tt class="literal">TopicConnection</tt>). </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">Connection</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">close</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getClientID</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ConnectionMetaData <b class="function">getMetaData</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setClientID</b> (String <i class="parameter">clientID</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setExceptionListener</b> (ExceptionListener <i class="parameter">listener</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">start</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">stop</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">QueueConnection, TopicConnection</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ConnectionConsumer</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2928"></a>

A <tt class="literal">ConnectionConsumer</tt> is used in situations where messages need to be read concurrently by multiple agents within the same process (e.g., within an application server running multiple message-based applications). The <tt class="literal">ConnectionConsumer</tt> delivers messages to one or more <tt class="literal">Session</tt> objects that are associated with <tt class="literal">MessageListener</tt> objects for individual clients. It contains a reference to a <tt class="literal">ServerSessionPool</tt> that accesses the <tt class="literal">Session</tt> objects concurrently reading messages. <tt class="literal">ConnectionConsumer</tt> is typically used by an application server to provide a message-handling service for client applications; applications normally don't need to use the interface directly.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">ConnectionConsumer</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">close</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ServerSessionPool <b class="function">getServerSessionPool</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">QueueConnection.createConnectionConsumer(), TopicConnection.{createConnectionConsumer(), createDurableConnectionConsumer()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ConnectionFactory</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2929"></a>

A messaging client uses a <tt class="literal">ConnectionFactory</tt> to get a <tt class="literal">Connection</tt> object to a message provider. A <tt class="literal">ConnectionFactory</tt> is usually acquired through a JNDI lookup. The <tt class="literal">ConnectionFactory</tt> interface doesn't define methods for creating <tt class="literal">Connection</tt> objects; these methods are provided by extensions to this interface (e.g., <tt class="literal">QueueConnectionFactory</tt>, <tt class="literal">TopicConnectionFactory</tt>).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">ConnectionFactory</b>  {</td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">QueueConnectionFactory, TopicConnectionFactory</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ConnectionMetaData</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2930"></a><a name="INDEX-2931"></a>

The <tt class="literal">Connection.getMetaData()</tt> method returns a <tt class="literal">ConnectionMetaData</tt> object that holds information about the JMS connection, including the version of JMS being used by the provider and version information about the provider itself.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">ConnectionMetaData</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getJMSMajorVersion</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getJMSMinorVersion</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getJMSProviderName</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getJMSVersion</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getProviderMajorVersion</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getProviderMinorVersion</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getProviderVersion</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">javax.jms.Connection.getMetaData()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DeliveryMode</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2932"></a><a name="INDEX-2933"></a>
This interface defines constants that represent delivery modes a JMS provider can support. <tt class="literal">NON_PERSISTENT</tt> delivery implies that a significant failure by the provider before a message can be delivered causes the message to be lost. <tt class="literal">PERSISTENT</tt> delivery mode implies that the provider stores messages to persistent storage, so that the messages survive a crash by the provider. A message sender specifies the delivery mode for a <tt class="literal">Message</tt> in its header, using the <tt class="literal">Message.setJMSDeliveryMode()</tt> method, and the provider is responsible for honoring the delivery mode.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">DeliveryMode</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NON_PERSISTENT</b> ;</td><td align="right"><i> =1</i></td>
</tr>

<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PERSISTENT</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Destination</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2934"></a><a name="INDEX-2935"></a>

A <tt class="literal">Destination</tt> represents a delivery address for a message. This interface is simply a marker interface, without any methods or members, since JMS does not attempt to define an addressing syntax. An implementor of a JMS provider needs to provide implementations of this interface that define its message-addressing syntax. <tt class="literal">Destination</tt> objects might be published by a JMS provider using JNDI. In this case, a JMS client needs to assemble the name of the queue in the syntax expected by the provider and then do a JNDI lookup to get a reference to the <tt class="literal">Destination</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">Destination</b>  {</td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">Queue, Topic</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Message.{setJMSDestination(), setJMSReplyTo()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Message.{getJMSDestination(), getJMSReplyTo()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ExceptionListener</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2936"></a>

An <tt class="literal">ExceptionListener</tt> gets asynchronous notification of errors that occur with a <tt class="literal">Connection</tt> to a JMS provider. If a client registers an <tt class="literal">ExceptionListener</tt> with a <tt class="literal">Connection</tt> using the <tt class="literal">Connection.setExceptionListener()</tt> method, the provider calls the <tt class="literal">onException()</tt> method on the <tt class="literal">ExceptionListener</tt> when any error occurs, passing it the exception that describes the error.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">ExceptionListener</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">onException</b> (JMSException <i class="parameter">exception</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.jms.Connection.setExceptionListener()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>IllegalStateException</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2937"></a>

Thrown if a request is made of a provider at a time when the request cannot be satisfied.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">IllegalStateException</b> extends JMSException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">IllegalStateException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">IllegalStateException</b> (String <i class="parameter">reason</i>, String <i class="parameter">errorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->JMSException-->IllegalStateException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>InvalidClientIDException</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2938"></a>

Thrown by the <tt class="literal">Connection.setClientID()</tt> method when an invalid client ID is given.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">InvalidClientIDException</b> extends JMSException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InvalidClientIDException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InvalidClientIDException</b> (String <i class="parameter">reason</i>, String <i class="parameter">errorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->JMSException-->InvalidClientIDException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>InvalidDestinationException</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2939"></a>

Thrown when the provider encounters a destination it cannot understand or is no longer accessible by the provider (e.g., a topic has been removed from a publish/subscribe context, or a queue associated with a user account has been removed because the account has been closed).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">InvalidDestinationException</b> extends JMSException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InvalidDestinationException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InvalidDestinationException</b> (String <i class="parameter">reason</i>, String <i class="parameter">errorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->JMSException-->InvalidDestinationException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>InvalidSelectorException</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2940"></a>

Thrown when a malformed selector is given to a provider (e.g., as part of a <tt class="literal">MessageSelector</tt>).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">InvalidSelectorException</b> extends JMSException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InvalidSelectorException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InvalidSelectorException</b> (String <i class="parameter">reason</i>, String <i class="parameter">errorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->JMSException-->InvalidSelectorException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JMSException</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2941"></a>

This is the base class for all JMS-related exceptions. It provides a provider-specific error code and a nested exception that is the source of the error.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JMSException</b> extends Exception {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JMSException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JMSException</b> (String <i class="parameter">reason</i>, String <i class="parameter">errorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getErrorCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Exception <b class="function">getLinkedException</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLinkedException</b> (Exception <i class="parameter">ex</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->JMSException</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.jms.IllegalStateException, InvalidClientIDException, InvalidDestinationException, InvalidSelectorException, JMSSecurityException, MessageEOFException, MessageFormatException, MessageNotReadableException, MessageNotWriteableException, ResourceAllocationException, TransactionInProgressException, TransactionRolledBackException</tt>
</p>

<p>
<span class="refsect1">Passed To: </span><tt class="literal">ExceptionListener.onException()</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JMSSecurityException</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2942"></a><a name="INDEX-2943"></a>

Thrown by a provider when a request cannot be satisfied for security reasons (e.g., a client-provided name/password fails authentication).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JMSSecurityException</b> extends JMSException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JMSSecurityException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JMSSecurityException</b> (String <i class="parameter">reason</i>, String <i class="parameter">errorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->JMSException-->JMSSecurityException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MapMessage</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2944"></a><a name="INDEX-2945"></a><a name="INDEX-2946"></a><a name="INDEX-2947"></a>

A <tt class="literal">MapMessage</tt> has a set of name/value pairs as its
message body. The name of a property is a <tt class="literal">String</tt>,
and the value is a Java primitive type. There are
<tt class="literal">getXXX()</tt> and <tt class="literal">setXXX()</tt> methods
for each primitive type, plus <tt class="literal">getObject()</tt> and
<tt class="literal">setObject()</tt> methods for situations where the type
of the value is not known until runtime. If a property is set to a
value of a certain type, it has to be read back using a
<tt class="literal">get</tt> method appropriate for that type, according to
this table:</p>
<a name="ch21-pgfid-967098"></a>
<table border="1">
<tr>
<td>
<p>
<em class="emphasis">If written as:</em>
</p>
</td><td>
<p>
<em class="emphasis">Can be read as:</em>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td>
</tr>
<tr>
<td>
<p>
</p>
</td><td>
<p>
<b class="emphasis-bold">boolean</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">byte</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">char</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">short</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">int</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">long</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">float</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">double</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">String</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">byte[]</b>
</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">boolean</b>
</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">byte</b>
</p>
</td><td></td><td>
<p>X</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">char</b>
</p>
</td><td></td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">short</b>
</p>
</td><td></td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">int</b>
</p>
</td><td></td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">long</b>
</p>
</td><td></td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">float</b>
</p>
</td><td></td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">double</b>
</p>
</td><td></td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">String</b>
</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">byte[]</b>
</p>
</td><td></td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td>
</tr>
</table>
<p>
<a name="INDEX-2948"></a><a name="INDEX-2949"></a><a name="INDEX-2950"></a>

If a value is read using an inappropriate <tt class="literal">get</tt> method, a <tt class="literal">MessageFormatException</tt> is thrown. The <tt class="literal">getMapNames()</tt> methods returns an <tt class="literal">Enumeration</tt> of names for the values in the <tt class="literal">MapMessage</tt>. A client that receives a <tt class="literal">MapMessage</tt> can read only the contents of the message until it calls <tt class="literal">clearBody()</tt> on the message. If a client tries to write values to the message before this, a <tt class="literal">MessageNotWriteableException</tt> is thrown.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">MapMessage</b> extends Message {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getBoolean</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte <b class="function">getByte</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte[ ] <b class="function">getBytes</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract char <b class="function">getChar</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getDouble</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getFloat</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getInt</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">getLong</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Enumeration <b class="function">getMapNames</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getObject</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract short <b class="function">getShort</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getString</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">itemExists</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBoolean</b> (String <i class="parameter">name</i>, boolean <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setByte</b> (String <i class="parameter">name</i>, byte <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBytes</b> (String <i class="parameter">name</i>, byte[ ] <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBytes</b> (String <i class="parameter">name</i>, byte[ ] <i class="parameter">value</i>, int <i class="parameter">offset</i>, int <i class="parameter">length</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setChar</b> (String <i class="parameter">name</i>, char <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setDouble</b> (String <i class="parameter">name</i>, double <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setFloat</b> (String <i class="parameter">name</i>, float <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setInt</b> (String <i class="parameter">name</i>, int <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLong</b> (String <i class="parameter">name</i>, long <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setObject</b> (String <i class="parameter">name</i>, Object <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setShort</b> (String <i class="parameter">name</i>, short <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setString</b> (String <i class="parameter">name</i>, String <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(MapMessage(Message))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Session.createMapMessage()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Message</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2951"></a><a name="INDEX-2952"></a><a name="INDEX-2953"></a>

The <tt class="literal">Message</tt> interface is the base interface for all messages in JMS. A <tt class="literal">Message</tt> is composed of a set of predefined header fields, an optional set of application-specific properties, and a body that contains the content of the message. A <tt class="literal">set</tt> and <tt class="literal">get</tt> method are provided for each header field supported by a JMS message. The possible header fields include:</p>
<dl>
<dt>
<b><tt class="literal">JMSCorrelationID</tt></b>
</dt>
<dd>
<p>A <tt class="literal">String</tt> that identifies another message (e.g., original message for a response) with which this message is related. The ID value is dictated by either the JMS provider or the application.</p>
</dd>
<dt>
<b><tt class="literal">JMSDeliveryMode</tt></b>
</dt>
<dd>
<p>One of the static values of the <tt class="literal">DeliveryMode</tt> interface.</p>
</dd>
<dt>
<b><tt class="literal">JMSDestination</tt></b>
</dt>
<dd>
<p>The target of this message, as a <tt class="literal">Destination</tt> object.</p>
</dd>
<dt>
<b><tt class="literal">JMSExpiration</tt></b>
</dt>
<dd>
<p>The time (in milliseconds since the epoch) when the message will expire. Each client specifies a time-to-live for the messages they send, so this header field is automatically set at send time to the current time plus the client's time-to-live.</p>
</dd>
<dt>
<b><tt class="literal">JMSMessageID</tt></b>
</dt>
<dd>
<p>A unique <tt class="literal">String</tt> identifier for this message. The provider sets this field automatically when a message is sent.</p>
</dd>
<dt>
<b><tt class="literal">JMSPriority</tt></b>
</dt>
<dd>
<p>A value from 0 to 9 (9 is highest) that indicates the urgency of the message. JMS providers are supposed to attempt to deliver messages with a priority from 5 to 9 before attempting to deliver lower-priority messages.</p>
</dd>
<dt>
<b><tt class="literal">JMSRedelivered</tt></b>
</dt>
<dd>
<p>An indicator that the message was delivered to the client earlier but no acknowledgment was received.</p>
</dd>
<dt>
<b><tt class="literal">JMSReplyTo</tt></b>
</dt>
<dd>
<p>A <tt class="literal">Destination</tt> where the receiver can send a reply to the message.</p>
</dd>
<dt>
<b><tt class="literal">JMSTimestamp</tt></b>
</dt>
<dd>
<p>The time (in milliseconds since the epoch) at which a message was given to a JMS provider for sending. </p>
</dd>
<dt>
<b><tt class="literal">JMSType</tt></b>
</dt>
<dd>
<p>A <tt class="literal">String</tt> that
indicates the type of the message. There are no standard values for a
message's type; they can be provider- or application-specific.</p>
</dd>
</dl>
<p>
<a name="INDEX-2954"></a>

Properties with names prefixed by "JMSX" are reserved for
use by the JMS standard.</p>
<p>Properties can be added to a message using the
<tt class="literal">setXXXProperty()</tt> methods and read using the
<tt class="literal">getXXXProperty()</tt> methods. If a property is written
with a value of a given type, it needs to be read from the message
according to the following table:</p>
<a name="ch21-pgfid-967945"></a>
<table border="1">
<tr>
<td>
<p>
<em class="emphasis">If written as:</em>
</p>
</td><td>
<p>
<em class="emphasis">Can be read as:</em>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td>
</tr>
<tr>
<td>
<p>
</p>
</td><td>
<p>
<b class="emphasis-bold">boolean</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">byte</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">short</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">int</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">long</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">float</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">double</b>
</p>
</td><td>
<p>
<b class="emphasis-bold">String</b>
</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">boolean</b>
</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">byte</b>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">short</b>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">int</b>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">long</b>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">float</b>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">double</b>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>
</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td>
</tr>
<tr>
<td>
<p>
<b class="emphasis-bold">String</b>
</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td><td>
<p>X</p>
</td>
</tr>
</table>
<p>If in invalid get method is used for a property, a <tt class="literal">MessageFormatException</tt> is thrown.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">Message</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DEFAULT_DELIVERY_MODE</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DEFAULT_PRIORITY</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DEFAULT_TIME_TO_LIVE</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">acknowledge</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">clearBody</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">clearProperties</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getBooleanProperty</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte <b class="function">getByteProperty</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getDoubleProperty</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getFloatProperty</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getIntProperty</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getJMSCorrelationID</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte[ ] <b class="function">getJMSCorrelationIDAsBytes</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getJMSDeliveryMode</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Destination <b class="function">getJMSDestination</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">getJMSExpiration</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getJMSMessageID</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getJMSPriority</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getJMSRedelivered</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Destination <b class="function">getJMSReplyTo</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">getJMSTimestamp</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getJMSType</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">getLongProperty</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getObjectProperty</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Enumeration <b class="function">getPropertyNames</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract short <b class="function">getShortProperty</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getStringProperty</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">propertyExists</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBooleanProperty</b> (String <i class="parameter">name</i>, boolean <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setByteProperty</b> (String <i class="parameter">name</i>, byte <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setDoubleProperty</b> (String <i class="parameter">name</i>, double <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setFloatProperty</b> (String <i class="parameter">name</i>, float <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setIntProperty</b> (String <i class="parameter">name</i>, int <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setJMSCorrelationID</b> (String <i class="parameter">correlationID</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setJMSCorrelationIDAsBytes</b> (byte[ ] <i class="parameter">correlationID</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setJMSDeliveryMode</b> (int <i class="parameter">deliveryMode</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setJMSDestination</b> (Destination <i class="parameter">destination</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setJMSExpiration</b> (long <i class="parameter">expiration</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setJMSMessageID</b> (String <i class="parameter">id</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setJMSPriority</b> (int <i class="parameter">priority</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setJMSRedelivered</b> (boolean <i class="parameter">redelivered</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setJMSReplyTo</b> (Destination <i class="parameter">replyTo</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setJMSTimestamp</b> (long <i class="parameter">timestamp</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setJMSType</b> (String <i class="parameter">type</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLongProperty</b> (String <i class="parameter">name</i>, long <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setObjectProperty</b> (String <i class="parameter">name</i>, Object <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setShortProperty</b> (String <i class="parameter">name</i>, short <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setStringProperty</b> (String <i class="parameter">name</i>, String <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">BytesMessage, MapMessage, ObjectMessage, StreamMessage, TextMessage</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">MessageListener.onMessage(), QueueRequestor.request(), QueueSender.send(), TopicPublisher.publish(), TopicRequestor.request()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">MessageConsumer.{receive(), receiveNoWait()}, QueueRequestor.request(), Session.createMessage(), TopicRequestor.request()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MessageConsumer</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>A JMS client uses a <tt class="literal">MessageConsumer</tt> to
receive messages. A client creates a message consumer by specifying a
<tt class="literal">Destination</tt> from which to receive messages and an
optional message selector that filters messages according to their
header fields and property values. The methods for creating
<tt class="literal">MessageConsumer</tt> objects are defined in
subinterfaces of the <tt class="literal">Connection</tt> interface. </p>
<p>A message selector is a filter string whose syntax is based on
the SQL92 conditional expression syntax. See the JMS specification for
more details on the syntax of message selectors.</p>
<p>A client can use a <tt class="literal">MessageConsumer</tt>
synchronously by polling it with its receive methods or asynchronously
by registering a <tt class="literal">MessageListener</tt> with the
consumer. When a message arrives that matches 


the sending
<tt class="literal">Destination</tt> and the message selector, the
<tt class="literal">onMessage()</tt> method on the registered listener is
called.</p>
<p>A <tt class="literal">MessageConsumer</tt> should be freed by calling
its <tt class="literal">close()</tt> method, to free up any resources
allocated for it by the provider.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">MessageConsumer</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">close</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract MessageListener <b class="function">getMessageListener</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getMessageSelector</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Message <b class="function">receive</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Message <b class="function">receive</b> (long <i class="parameter">timeOut</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Message <b class="function">receiveNoWait</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setMessageListener</b> (MessageListener <i class="parameter">listener</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">QueueReceiver, TopicSubscriber</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MessageEOFException</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>Thrown if the end of a <tt class="literal">StreamMessage</tt> or <tt class="literal">BytesMessage</tt> is reached before it is expected.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MessageEOFException</b> extends JMSException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MessageEOFException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MessageEOFException</b> (String <i class="parameter">reason</i>, String <i class="parameter">errorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->JMSException-->MessageEOFException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MessageFormatException</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2955"></a>

Thrown when an attempt is made to read data from a message as the wrong data type or to write data to a message in a type it does not support.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MessageFormatException</b> extends JMSException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MessageFormatException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MessageFormatException</b> (String <i class="parameter">reason</i>, String <i class="parameter">errorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->JMSException-->MessageFormatException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MessageListener</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2956"></a><a name="INDEX-2957"></a>

A <tt class="literal">MessageListener</tt> is registered by a client with a <tt class="literal">MessageConsumer</tt>, to allow the client to asynchronously receive messages. When the consumer receives a message, the listener's <tt class="literal">onMessage()</tt> method is invoked. The consumer waits until the <tt class="literal">onMessage()</tt> method is complete before delivering the next message.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">MessageListener</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">onMessage</b> (Message <i class="parameter">message</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Passed To: </span><tt class="literal">MessageConsumer.setMessageListener(), Session.setMessageListener()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">MessageConsumer.getMessageListener(), Session.getMessageListener()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MessageNotReadableException</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2958"></a>
Thrown if a client attempts to read data from a write-only message (e.g., a <tt class="literal">StreamMessage</tt> whose contents have not yet been reset).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MessageNotReadableException</b> extends JMSException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MessageNotReadableException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MessageNotReadableException</b> (String <i class="parameter">reason</i>, String <i class="parameter">errorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->JMSException-->MessageNotReadableException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MessageNotWriteableException</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2959"></a>

Thrown when an attempt is made to write data to a read-only message (e.g., a received <tt class="literal">MapMessage</tt> that has not yet had its <tt class="literal">clearBody()</tt> method called).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MessageNotWriteableException</b> extends JMSException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MessageNotWriteableException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MessageNotWriteableException</b> (String <i class="parameter">reason</i>, String <i class="parameter">errorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->JMSException-->MessageNotWriteableException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MessageProducer</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2960"></a>

A client uses a <tt class="literal">MessageProducer</tt> to send messages. A <tt class="literal">MessageProducer</tt> can be tied to a specific <tt class="literal">Destination</tt>, and any messages sent through the producer are addressed to the <tt class="literal">Destination</tt> specified when it was created. If a <tt class="literal">Destination</tt> is not specified when a <tt class="literal">MessageProducer</tt> is created, a <tt class="literal">Destination</tt> has to provide for each message sent. Methods to create <tt class="literal">MessageProducer</tt> objects are provided by subinterfaces of the <tt class="literal">Session</tt> interface (e.g., <tt class="literal">TopicSession</tt>, <tt class="literal">QueueSession</tt>).</p>
<p>A <tt class="literal">MessageProducer</tt> has a default delivery mode, priority, and time-to-live for messages it sends. There are get and set methods for these default properties. If these properties are specified on a message, they override the defaults of the <tt class="literal">MessageProducer</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">MessageProducer</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">close</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getDeliveryMode</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getDisableMessageID</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getDisableMessageTimestamp</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getPriority</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getTimeToLive</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setDeliveryMode</b> (int <i class="parameter">deliveryMode</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setDisableMessageID</b> (boolean <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setDisableMessageTimestamp</b> (boolean <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setPriority</b> (int <i class="parameter">deliveryMode</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setTimeToLive</b> (int <i class="parameter">timeToLive</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">QueueSender, TopicPublisher</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ObjectMessage</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2961"></a>

This is a message that contains a single serialized Java object as its body. Only a <tt class="literal">Serializable</tt> object can be used as the body of an <tt class="literal">ObjectMessage</tt>. When an <tt class="literal">ObjectMessage</tt> is received, it is read-only until the <tt class="literal">clearBody()</tt> method is called on it.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">ObjectMessage</b> extends Message {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Serializable <b class="function">getObject</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setObject</b> (Serializable <i class="parameter">object</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(ObjectMessage(Message))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Session.createObjectMessage()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Queue</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2962"></a><a name="INDEX-2963"></a>

A <tt class="literal">Queue</tt> is a <tt class="literal">Destination</tt> specific to point-to-point messaging. The <tt class="literal">Queue</tt> has a <tt class="literal">String</tt> name whose syntax is dictated by the provider. <tt class="literal">Queue</tt> objects are created using the <tt class="literal">createQueue()</tt> method on a <tt class="literal">QueueSession</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">Queue</b> extends Destination {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getQueueName</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(Queue(Destination))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">TemporaryQueue</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">QueueConnection.createConnectionConsumer(), QueueRequestor.QueueRequestor(), QueueSender.send(), QueueSession.{createBrowser(), createReceiver(), createSender()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">QueueBrowser.getQueue(), QueueReceiver.getQueue(), QueueSender.getQueue(), QueueSession.createQueue()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>QueueBrowser</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2964"></a><a name="INDEX-2965"></a>

A <tt class="literal">QueueBrowser</tt> peeks at the contents of a message queue without actually removing messages. A <tt class="literal">QueueBrowser</tt> has an optional message selector that can filter the messages checked for on the queue. <tt class="literal">QueueBrowser</tt> objects are created using the <tt class="literal">createBrowser()</tt> methods on <tt class="literal">QueueSession</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">QueueBrowser</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">close</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Enumeration <b class="function">getEnumeration</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getMessageSelector</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>

<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Queue <b class="function">getQueue</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">QueueSession.createBrowser()</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>QueueConnection</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2966"></a><a name="INDEX-2967"></a>

A <tt class="literal">QueueConnection</tt> is a <tt class="literal">Connection</tt> specific to a point-to-point messaging provider. The <tt class="literal">QueueConnection</tt> allows clients to create <tt class="literal">QueueSession</tt> objects using the <tt class="literal">createQueueSession()</tt> method.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">QueueConnection</b> extends javax.jms.Connection {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ConnectionConsumer <b class="function">createConnectionConsumer</b> (Queue <i class="parameter">queue</i>, String <i class="parameter">messageSelector</i>, ServerSessionPool <i class="parameter">sessionPool</i>, int <i class="parameter">maxMessages</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract QueueSession <b class="function">createQueueSession</b> (boolean <i class="parameter">transacted</i>, int <i class="parameter">acknowledgeMode</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(QueueConnection(javax.jms.Connection))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">XAQueueConnection</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">QueueConnectionFactory.createQueueConnection()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>QueueConnectionFactory</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2968"></a><a name="INDEX-2969"></a>

A <tt class="literal">QueueConnectionFactory</tt> is exported by point-to-point providers to allow clients to create QueueConnection objects to the provider. The default <tt class="literal">createQueueConnection()</tt> method creates a connection under the default user identity of the client JVM, while the other constructor accepts a name and password that authenticates the connection request. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">QueueConnectionFactory</b> extends ConnectionFactory {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract QueueConnection <b class="function">createQueueConnection</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract QueueConnection <b class="function">createQueueConnection</b> (String <i class="parameter">userName</i>, String <i class="parameter">password</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(QueueConnectionFactory(ConnectionFactory))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">XAQueueConnectionFactory</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>QueueReceiver</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2970"></a><a name="INDEX-2971"></a><a name="INDEX-2972"></a>

A <tt class="literal">QueueReceiver</tt> is a <tt class="literal">MessageConsumer</tt> specific to point-to-point messaging. The <tt class="literal">getQueue()</tt> method returns the <tt class="literal">Queue</tt> associated with the receiver. <tt class="literal">QueueReceiver</tt> objects are created using the <tt class="literal">createReceiver()</tt> methods on <tt class="literal">QueueSession</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">QueueReceiver</b> extends MessageConsumer {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Queue <b class="function">getQueue</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(QueueReceiver(MessageConsumer))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">QueueSession.createReceiver()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>QueueRequestor</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2973"></a><a name="INDEX-2974"></a><tt class="literal">QueueRequestor</tt> is a utility class provided for situations in which a client wants to send a message to a specific destination and wait for a response. A <tt class="literal">QueueRequestor</tt> is constructed with a <tt class="literal">QueueSession</tt> and a destination <tt class="literal">Queue</tt>, and then its <tt class="literal">request()</tt> method is called with the <tt class="literal">Message</tt> to be sent. The <tt class="literal">QueueRequestor</tt> sets the reply-to destination on the message to a temporary <tt class="literal">Queue</tt> that it creates. It sends the message and waits for a response. The response <tt class="literal">Message</tt> is the return value of the <tt class="literal">request()</tt> method.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">QueueRequestor</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">QueueRequestor</b> (QueueSession <i class="parameter">session</i>, Queue <i class="parameter">queue</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">close</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Message <b class="function">request</b> (Message <i class="parameter">message</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>QueueSender</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2975"></a><a name="INDEX-2976"></a>

A <tt class="literal">QueueSender</tt> is a <tt class="literal">MessageProducer</tt> that sends messages in a point-to-point context. <tt class="literal">QueueSender</tt> objects are created using the <tt class="literal">createQueue()</tt> method on <tt class="literal">QueueSession</tt>, specifying a default <tt class="literal">Queue</tt> as the target of messages. A client can override the default message target by using one of the <tt class="literal">send()</tt> methods on the <tt class="literal">QueueSender</tt> that accepts a target <tt class="literal">Queue</tt>. If a <tt class="literal">send()</tt> method is called without a target <tt class="literal">Queue</tt>, and the <tt class="literal">QueueSender</tt> does not have a default target <tt class="literal">Queue</tt> defined (e.g., it was created with a <tt class="literal">null</tt> target <tt class="literal">Queue</tt>), an <tt class="literal">InvalidDestinationException</tt> is thrown.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">QueueSender</b> extends MessageProducer {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Queue <b class="function">getQueue</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">send</b> (Message <i class="parameter">message</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">send</b> (Queue <i class="parameter">queue</i>, Message <i class="parameter">message</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">send</b> (Message <i class="parameter">message</i>, int <i class="parameter">deliveryMode</i>, int <i class="parameter">priority</i>, long <i class="parameter">timeToLive</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">send</b> (Queue <i class="parameter">queue</i>, Message <i class="parameter">message</i>, int <i class="parameter">deliveryMode</i>, int <i class="parameter">priority</i>, long <i class="parameter">timeToLive</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(QueueSender(MessageProducer))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">QueueSession.createSender()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>QueueSession</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>runnable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2977"></a>

The <tt class="literal">QueueSession</tt> is a <tt class="literal">Session</tt> specific to a point-to-point messaging context. It provides methods for creating point-to-point message consumers (<tt class="literal">QueueReceiver</tt>), producers (<tt class="literal">QueueSender</tt>), and destinations (<tt class="literal">Queue</tt>), as well as utilities objects such as <tt class="literal">QueueBrowser</tt> and <tt class="literal">TemporaryQueue</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">QueueSession</b> extends Session {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract QueueBrowser <b class="function">createBrowser</b> (Queue <i class="parameter">queue</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract QueueBrowser <b class="function">createBrowser</b> (Queue <i class="parameter">queue</i>, String <i class="parameter">messageSelector</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Queue <b class="function">createQueue</b> (String <i class="parameter">queueName</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract QueueReceiver <b class="function">createReceiver</b> (Queue <i class="parameter">queue</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract QueueReceiver <b class="function">createReceiver</b> (Queue <i class="parameter">queue</i>, String <i class="parameter">messageSelector</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract QueueSender <b class="function">createSender</b> (Queue <i class="parameter">queue</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TemporaryQueue <b class="function">createTemporaryQueue</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(QueueSession(Session(Runnable)))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">QueueRequestor.QueueRequestor()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">QueueConnection.createQueueSession(), XAQueueSession.getQueueSession()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ResourceAllocationException</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>Thrown when a request is made of a provider, and it cannot be completed due to resource issues.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ResourceAllocationException</b> extends JMSException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ResourceAllocationException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ResourceAllocationException</b> (String <i class="parameter">reason</i>, String <i class="parameter">errorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->JMSException-->ResourceAllocationException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ServerSession</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2978"></a><a name="INDEX-2979"></a>

A <tt class="literal">ServerSession</tt> is used by an application server when it needs to separate <tt class="literal">Session</tt> objects to individual threads, for concurrent access to and handling of flows of messages. The <tt class="literal">ServerSession</tt> represents a JMS <tt class="literal">Session</tt> tied to a thread. A <tt class="literal">ConnectionConsumer</tt> keeps a pool of <tt class="literal">ServerSession</tt> objects, which it handles messages as they arrive. The <tt class="literal">ConnectionConsumer</tt> assigns one or more messages to the <tt class="literal">Session</tt> contained in the <tt class="literal">ServerSession</tt>, and then calls the <tt class="literal">ServerSession</tt>'s <tt class="literal">start()</tt> method. The <tt class="literal">ServerSession</tt> calls <tt class="literal">start()</tt> on the <tt class="literal">Thread</tt> for the <tt class="literal">Session</tt>, which eventually calls the <tt class="literal">run()</tt> method of the <tt class="literal">Session</tt> (<tt class="literal">Session</tt> implements the <tt class="literal">java.lang.Runnable</tt> interface).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">ServerSession</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Session <b class="function">getSession</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">start</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">ServerSessionPool.getServerSession()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ServerSessionPool</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2980"></a>

A <tt class="literal">ConnectionConsumer</tt> uses a <tt class="literal">ServerSessionPool</tt> to manage a pool of <tt class="literal">ServerSession</tt> objects. The <tt class="literal">ServerSessionPool</tt> can manage the pool any way it likes and can block if the pool is exhausted.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">ServerSessionPool</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ServerSession <b class="function">getServerSession</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">QueueConnection.createConnectionConsumer(), TopicConnection.{createConnectionConsumer(), createDurableConnectionConsumer()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">ConnectionConsumer.getServerSessionPool()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Session</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>runnable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2981"></a><a name="INDEX-2982"></a><a name="INDEX-2983"></a><a name="INDEX-2984"></a>

A <tt class="literal">Session</tt> provides a client with the means for creating messages, message producers, and message consumers. Extensions of <tt class="literal">Session</tt> create type-specific versions of these objects (e.g., <tt class="literal">QueueSender</tt> and <tt class="literal">TopicPublisher</tt>). </p>
<p>Within a <tt class="literal">Session</tt>, messages are sent and received in a serial order. The <tt class="literal">Session</tt> interface also provides facilities for JMS providers that chose to provide transactional support in their <tt class="literal">Session</tt> implementations. A transaction is started when the <tt class="literal">Session</tt> is created. In a messaging context, a transaction consists of a series of message transmissions and receipts. Committing a messaging transaction (by calling <tt class="literal">commit()</tt> on the corresponding <tt class="literal">Session</tt>) causes all pending transmissions to be sent and all pending receipts to be finalized and acknowledged. If a transaction is aborted (by calling the <tt class="literal">rollback()</tt> method on the <tt class="literal">Session</tt>), the outgoing messages are destroyed, and incoming messages are cancelled. A new transaction is started as soon as the current one is committed or rolled back.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">Session</b> extends Runnable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">AUTO_ACKNOWLEDGE</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CLIENT_ACKNOWLEDGE</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DUPS_OK_ACKNOWLEDGE</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">close</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">commit</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract BytesMessage <b class="function">createBytesMessage</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract MapMessage <b class="function">createMapMessage</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Message <b class="function">createMessage</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ObjectMessage <b class="function">createObjectMessage</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ObjectMessage <b class="function">createObjectMessage</b> (Serializable <i class="parameter">object</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract StreamMessage <b class="function">createStreamMessage</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TextMessage <b class="function">createTextMessage</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TextMessage <b class="function">createTextMessage</b> (StringBuffer <i class="parameter">stringBuffer</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract MessageListener <b class="function">getMessageListener</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getTransacted</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">recover</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">rollback</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setMessageListener</b> (MessageListener <i class="parameter">listener</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(Session(Runnable))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">QueueSession, TopicSession, XASession</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">ServerSession.getSession()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StreamMessage</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2985"></a>

A <tt class="literal">StreamMessage</tt> is a <tt class="literal">Message</tt> whose body consists of a stream of serialized Java primitive data items. It is similar in many ways to a <tt class="literal">BytesMessage</tt>, except that the contents of a <tt class="literal">StreamMessage</tt> are read in the same order they are written by the sender. Otherwise, <tt class="literal">StreamMessage</tt> has a similar set of read/write methods and similar rules about how certain data types are read from the message as <tt class="literal">BytesMessage</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">StreamMessage</b> extends Message {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">readBoolean</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte <b class="function">readByte</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">readBytes</b> (byte[ ] <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract char <b class="function">readChar</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">readDouble</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">readFloat</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">readInt</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract long <b class="function">readLong</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">readObject</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract short <b class="function">readShort</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">readString</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">reset</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeBoolean</b> (boolean <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeByte</b> (byte <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeBytes</b> (byte[ ] <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeBytes</b> (byte[ ] <i class="parameter">value</i>, int <i class="parameter">offset</i>, int <i class="parameter">length</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeChar</b> (char <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeDouble</b> (double <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeFloat</b> (float <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeInt</b> (int <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeLong</b> (long <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeObject</b> (Object <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeShort</b> (short <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">writeString</b> (String <i class="parameter">value</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(StreamMessage(Message))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Session.createStreamMessage()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TemporaryQueue</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2986"></a>

A <tt class="literal">TemporaryQueue</tt> is a <tt class="literal">Queue</tt> used internally by a <tt class="literal">QueueConnection</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">TemporaryQueue</b> extends Queue {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">delete</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TemporaryQueue(Queue(Destination)))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">QueueSession.createTemporaryQueue()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TemporaryTopic</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2987"></a>

A <tt class="literal">TemporaryTopic</tt> is a <tt class="literal">Topic</tt> used internally by a <tt class="literal">TopicConnection</tt>.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">TemporaryTopic</b> extends Topic {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">delete</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TemporaryTopic(Topic(Destination)))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">TopicSession.createTemporaryTopic()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TextMessage</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2988"></a><a name="INDEX-2989"></a>

A <tt class="literal">TextMessage</tt> is a <tt class="literal">Message</tt> whose body is a <tt class="literal">String</tt>. The contents of the message can be retrieved using the <tt class="literal">getText()</tt> method. The text of the message might be simple ASCII, or it could be structured according to a syntax like HTML or XML.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">TextMessage</b> extends Message {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getText</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setText</b> (String <i class="parameter">string</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TextMessage(Message))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Session.createTextMessage()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Topic</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2990"></a>

A <tt class="literal">Topic</tt> is an address for a message in a publish/subscribe context. The <tt class="literal">Topic</tt> interface simply defines a <tt class="literal">String</tt> name for the topic. Providers define how topics are defined and grouped into a hierarchy.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">Topic</b> extends Destination {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getTopicName</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(Topic(Destination))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">TemporaryTopic</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">TopicConnection.{createConnectionConsumer(), createDurableConnectionConsumer()}, TopicPublisher.publish(), TopicRequestor.TopicRequestor(), TopicSession.{createDurableSubscriber(), createPublisher(), createSubscriber()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">TopicPublisher.getTopic(), TopicSession.createTopic(), TopicSubscriber.getTopic()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TopicConnection</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2991"></a>

A <tt class="literal">TopicConnection</tt> is a <tt class="literal">Connection</tt> to a publish/subscribe-based JMS provider. It provides methods for creating <tt class="literal">TopicSession</tt> objects, as well as <tt class="literal">ConnectionConsumer </tt>objects.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">TopicConnection</b> extends javax.jms.Connection {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ConnectionConsumer <b class="function">createConnectionConsumer</b> (Topic <i class="parameter">topic</i>, String <i class="parameter">messageSelector</i>, ServerSessionPool <i class="parameter">sessionPool</i>, int <i class="parameter">maxMessages</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ConnectionConsumer <b class="function">createDurableConnectionConsumer</b> (Topic <i class="parameter">topic</i>, String <i class="parameter">messageSelector</i>, ServerSessionPool <i class="parameter">sessionPool</i>, int <i class="parameter">maxMessages</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TopicSession <b class="function">createTopicSession</b> (boolean <i class="parameter">transacted</i>, int <i class="parameter">acknowledgeMode</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TopicConnection(javax.jms.Connection))</tt>
</p>

<p>
<span class="refsect1">Implementations: </span><tt class="literal">XATopicConnection</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">TopicConnectionFactory.createTopicConnection()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TopicConnectionFactory</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2992"></a><a name="INDEX-2993"></a>

A <tt class="literal">TopicConnectionFactory</tt> is exported by publish/subscribe providers to allow clients to create <tt class="literal">TopicConnection</tt> objects to the provider. The default <tt class="literal">createTopicConnection()</tt> method creates a connection under the default user identity of the client JVM, while the other constructor accepts a name and password that authenticates the connection request. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">TopicConnectionFactory</b> extends ConnectionFactory {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TopicConnection <b class="function">createTopicConnection</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TopicConnection <b class="function">createTopicConnection</b> (String <i class="parameter">userName</i>, String <i class="parameter">password</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TopicConnectionFactory(ConnectionFactory))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">XATopicConnectionFactory</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TopicPublisher</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2994"></a>

A <tt class="literal">TopicPublisher</tt> is a <tt class="literal">MessageProducer</tt> specific to a publish/subscribe context. <tt class="literal">TopicPublisher</tt> objects are created using the <tt class="literal">createPublisher()</tt> method on a <tt class="literal">TopicSession</tt>. A <tt class="literal">TopicPublisher</tt> is created with a <tt class="literal">Topic</tt> under which it publishes messages. A client can override the default <tt class="literal">Topic</tt> using one of the <tt class="literal">publish()</tt> methods that accepts a <tt class="literal">Topic</tt> as an argument along with the <tt class="literal">Message</tt> to be sent. Sending a <tt class="literal">Message</tt> without a <tt class="literal">Topic</tt> (i.e., the <tt class="literal">TopicPublisher</tt> was created with a <tt class="literal">null</tt><tt class="literal">Topic</tt>, and the <tt class="literal">Message</tt> was sent without specifying a <tt class="literal">Topic</tt>) causes an <tt class="literal">InvalidDestinationException</tt> to be thrown.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">TopicPublisher</b> extends MessageProducer {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Topic <b class="function">getTopic</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">publish</b> (Message <i class="parameter">message</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">publish</b> (Topic <i class="parameter">topic</i>, Message <i class="parameter">message</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">publish</b> (Message <i class="parameter">message</i>, int <i class="parameter">deliveryMode</i>, int <i class="parameter">priority</i>, long <i class="parameter">timeToLive</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">publish</b> (Topic <i class="parameter">topic</i>, Message <i class="parameter">message</i>, int <i class="parameter">deliveryMode</i>, int <i class="parameter">priority</i>, long <i class="parameter">timeToLive</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TopicPublisher(MessageProducer))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">TopicSession.createPublisher()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TopicRequestor</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2995"></a><a name="INDEX-2996"></a><tt class="literal">TopicRequestor</tt> is a utility class provided for situations where a client wants to send a message to a specific <tt class="literal">Topic</tt> and wait for a response. The <tt class="literal">TopicRequestor</tt> is constructed with a <tt class="literal">TopicSession</tt> and a destination <tt class="literal">Topic</tt>, and then its <tt class="literal">request()</tt> method is called with the <tt class="literal">Message</tt> to be sent. The <tt class="literal">TopicRequestor</tt> sets the reply-to destination on the message to a temporary <tt class="literal">Topic</tt> it creates. It sends the message and waits for a response. The response <tt class="literal">Message</tt> is the return value of the <tt class="literal">request()</tt> method.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TopicRequestor</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TopicRequestor</b> (TopicSession <i class="parameter">session</i>, Topic <i class="parameter">topic</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">close</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Message <b class="function">request</b> (Message <i class="parameter">message</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TopicSession</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>runnable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2997"></a>

A <tt class="literal">TopicSession</tt> is a <tt class="literal">Session</tt> specific to a publish/subscribe context. It provides methods for creating publish/subscribe message consumers (<tt class="literal">TopicSubscriber</tt>), message producers (<tt class="literal">TopicPublisher</tt>), and message destinations (<tt class="literal">Topic</tt>). It also has methods for creating utilities objects such as <tt class="literal">TemporaryTopic</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">TopicSession</b> extends Session {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TopicSubscriber <b class="function">createDurableSubscriber</b> (Topic <i class="parameter">topic</i>, String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TopicSubscriber <b class="function">createDurableSubscriber</b> (Topic <i class="parameter">topic</i>, String <i class="parameter">name</i>, String <i class="parameter">messageSelector</i>, boolean <i class="parameter">noLocal</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TopicPublisher <b class="function">createPublisher</b> (Topic <i class="parameter">topic</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TopicSubscriber <b class="function">createSubscriber</b> (Topic <i class="parameter">topic</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TopicSubscriber <b class="function">createSubscriber</b> (Topic <i class="parameter">topic</i>, String <i class="parameter">messageSelector</i>, boolean <i class="parameter">noLocal</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TemporaryTopic <b class="function">createTemporaryTopic</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Topic <b class="function">createTopic</b> (String <i class="parameter">topicName</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">unsubscribe</b> (String <i class="parameter">name</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TopicSession(Session(Runnable)))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">TopicRequestor.TopicRequestor()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">TopicConnection.createTopicSession(), XATopicSession.getTopicSession()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TopicSubscriber</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2998"></a><a name="INDEX-2999"></a><a name="INDEX-3000"></a>

A <tt class="literal">TopicSubscriber</tt> is a <tt class="literal">MessageConsumer</tt> specific to a publish/subscribe context. TopicSubscriber objects are created using the <tt class="literal">createSubscriber()</tt> and <tt class="literal">createDurableSubscriber()</tt> methods on the <tt class="literal">TopicSession</tt>. A <tt class="literal">TopicSubscriber</tt> is created with a <tt class="literal">Topic</tt> to subscribe to and can optionally be created with a message selector that filters the messages received by the subscriber. If a client is both publishing and subscribing to the same <tt class="literal">Topic</tt>, the no-local attribute on the <tt class="literal">TopicSubscriber</tt> specifies whether to filter out messages published by the same connection. </p>
<p>If a <tt class="literal">TopicSubscriber</tt> is created as durable (using <tt class="literal">createDurableSubscriber()</tt> on the <tt class="literal">TopicSession</tt>), the provider collects messages for this subscriber even when the subscriber is inactive. The provider keeps these messages until the subscriber receives them, or until they expire according to the sender's time-to-live header attribute. In order for the client to retrieve the messages collected under a durable <tt class="literal">TopicSubscriber</tt> after it has reactivated itself, it has to create a new <tt class="literal">TopicSubscriber</tt> under the same <tt class="literal">Topic</tt> with the same client ID. </p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">TopicSubscriber</b> extends MessageConsumer {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getNoLocal</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Topic <b class="function">getTopic</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TopicSubscriber(MessageConsumer))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">TopicSession.{createDurableSubscriber(), createSubscriber()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TransactionInProgressException</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3001"></a>

Thrown if an invalid request is made during a transactional session (e.g., attempting to <tt class="literal">commit()</tt> a session while a message is still being sent).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TransactionInProgressException</b> extends JMSException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TransactionInProgressException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TransactionInProgressException</b> (String <i class="parameter">reason</i>, String <i class="parameter">errorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->JMSException-->TransactionInProgressException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TransactionRolledBackException</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3002"></a>

Thrown by the <tt class="literal">Session.commit()</tt> method if the transaction needs to be rolled back because of some internal error.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TransactionRolledBackException</b> extends JMSException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TransactionRolledBackException</b> (String <i class="parameter">reason</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TransactionRolledBackException</b> (String <i class="parameter">reason</i>, String <i class="parameter">errorCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->JMSException-->TransactionRolledBackException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>XAConnection</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3003"></a>

This interface represents a <tt class="literal">Connection</tt> to a provider that supports transactional messaging, according to the X/Open XA protocol for transactional processing. Subinterfaces of <tt class="literal">XAConnection</tt> generate transactional sessions in the form of <tt class="literal">XASession</tt> objects.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">XAConnection</b>  {</td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">XAQueueConnection, XATopicConnection</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>XAConnectionFactory</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3004"></a>

A transactional JMS provider exports an <tt class="literal">XAConnectionFactory</tt> for clients to use to create <tt class="literal">XAConnection</tt> objects. Clients typically find a provider's <tt class="literal">XAConnectionFactory</tt> using a JNDI lookup.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">XAConnectionFactory</b>  {</td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">XAQueueConnectionFactory, XATopicConnectionFactory</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>XAQueueConnection</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3005"></a>

An <tt class="literal">XAQueueConnection</tt> is a <tt class="literal">Connection</tt> to a transactional provider of point-to-point messaging. It extends the <tt class="literal">QueueConnection</tt> interface with a <tt class="literal">createXAQueueSession()</tt> method, which creates a transactional <tt class="literal">XAQueueSession</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">XAQueueConnection</b> extends javax.jms.XAConnection, QueueConnection {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract XAQueueSession <b class="function">createXAQueueSession</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(XAQueueConnection(javax.jms.XAConnection,QueueConnection(javax.jms.Connection)))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">XAQueueConnectionFactory.createXAQueueConnection()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>XAQueueConnectionFactory</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3006"></a>

An <tt class="literal">XAQueueConnectionFactory</tt> is a <tt class="literal">QueueConnectionFactory</tt> that creates <tt class="literal">XAQueueConnection</tt> objects to a transactional point-to-point JMS provider.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">XAQueueConnectionFactory</b> extends XAConnectionFactory, QueueConnectionFactory {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract XAQueueConnection <b class="function">createXAQueueConnection</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract XAQueueConnection <b class="function">createXAQueueConnection</b> (String <i class="parameter">userName</i>, String <i class="parameter">password</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(XAQueueConnectionFactory(XAConnectionFactory,QueueConnectionFactory(ConnectionFactory)))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>XAQueueSession</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>runnable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3007"></a>

An <tt class="literal">XAQueueSession</tt> is a wrapper around a <tt class="literal">QueueSession</tt>. It represents a transactional session with a JMS point-to-point provider.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">XAQueueSession</b> extends XASession {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract QueueSession <b class="function">getQueueSession</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(XAQueueSession(XASession(Session(Runnable))))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">XAQueueConnection.createXAQueueSession()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>XASession</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>runnable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3008"></a>

An <tt class="literal">XASession</tt> is a <tt class="literal">Session</tt> with a provider that supports transactional messaging according to the X/Open XA protocol for transactional processing. The <tt class="literal">XASession</tt> contains a <tt class="literal">javax.transaction.xa.XAResource</tt> object that represents the association of the <tt class="literal">Session</tt> with a transaction context.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">XASession</b> extends Session {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.transaction.xa.XAResource <b class="function">getXAResource</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(XASession(Session(Runnable)))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">XAQueueSession, XATopicSession</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>XATopicConnection</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3009"></a><a name="INDEX-3010"></a>

An <tt class="literal">XATopicConnection</tt> represents a <tt class="literal">Connection</tt> to a transactional provider of publish/subscribe messaging. It extends the <tt class="literal">TopicConnection</tt> interface with a <tt class="literal">createXATopicSession()</tt> method, which creates a transactional <tt class="literal">XATopicSession</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">XATopicConnection</b> extends javax.jms.XAConnection, TopicConnection {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract XATopicSession <b class="function">createXATopicSession</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(XATopicConnection(javax.jms.XAConnection,TopicConnection(javax.jms.Connection)))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">XATopicConnectionFactory.createXATopicConnection()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>XATopicConnectionFactory</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3011"></a>

An <tt class="literal">XATopicConnectionFactory</tt> is a <tt class="literal">TopicConnectionFactory</tt> that creates <tt class="literal">XATopicConnection</tt> objects to a transactional publish/subscribe JMS provider.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">XATopicConnectionFactory</b> extends XAConnectionFactory, TopicConnectionFactory {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract XATopicConnection <b class="function">createXATopicConnection</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract XATopicConnection <b class="function">createXATopicConnection</b> (String <i class="parameter">userName</i>, String <i class="parameter">password</i>) throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(XATopicConnectionFactory(XAConnectionFactory,TopicConnectionFactory(ConnectionFactory)))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>XATopicSession</b></font></td><td align="right"><font size="+1"><b>JMS 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.jms</b></font></td><td align="right"><font size="+1"><b><i>runnable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3012"></a>

An <tt class="literal">XATopicSession</tt> is a wrapper around a <tt class="literal">TopicSession</tt>. It represents a transactional session with a JMS publish/subscribe provider.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">XATopicSession</b> extends XASession {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TopicSession <b class="function">getTopicSession</b> () throws JMSException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(XATopicSession(XASession(Session(Runnable))))</tt>
</p>

<p>
<span class="refsect1">Returned By: </span><tt class="literal">XATopicConnection.createXATopicSession()</tt>
</p>
</div>
<a name="INDEX-3013"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch20_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch20_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch22_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/ch22_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">20.1. The javax.ejb.deployment Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">22. The javax.naming Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
