<html>
<head>
<title>Persistent Cookies (Java Servlet Programming)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="Jason Hunter and William Crawford">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-391-XE" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Persistent Cookies">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm" alt="Java Servlet Programming"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch07_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch07_03.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch07_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch07_01.htm">Chapter 7: Session Tracking</a></td><td align="right" valign="top" width="172"><a href="ch07_05.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch07_05.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h2 class="sect1">7.4. Persistent Cookies</h2>

<p>A fourth technique to perform session tracking involves <a name="INDEX-1275"></a><a name="INDEX-1276"></a>
persistent cookies. A <em class="emphasis">cookie</em> is a bit of
information sent by a web server to a browser that can later be read
back from that browser. When a browser receives a cookie, it saves
the cookie and thereafter sends the cookie back to the server each
time it accesses a page on that server, subject to certain rules.
Because a cookie's value can uniquely identify a client,
cookies are often used for session tracking.
</p>

<p>Cookies were first introduced in
<a name="INDEX-1277"></a>Netscape Navigator. Although they were
not part of the official HTTP specification, cookies quickly became a
de facto standard supported in all the popular browsers including
Netscape 0.94 Beta and up and Microsoft Internet Explorer 2 and up.
Currently the HTTP Working Group of the Internet Engineering Task
Force (IETF) is in the process of making cookies an official standard
as written in RFC 2109. For more information on cookies see
Netscape's Cookie Specification at <a href="../../../../../../../home.netscape.com/newsref/std/cookie_spec.html">http://home.netscape.com/newsref/std/cookie_spec.html</a><a name="INDEX-1278"></a><a name="INDEX-1279"></a><a name="INDEX-1280"></a>
and RFC 2109 at <a href="../../../../../../../www.ietf.org/rfc/rfc2109.txt">http://www.ietf.org/rfc/rfc2109.txt</a><a name="INDEX-1281"></a><a name="INDEX-1282"></a>. Another good site is
<a href="../../../../../../../www.cookiecentral.com/">http://www.cookiecentral.com</a><a name="INDEX-1283"></a>.
</p>

<a name="ch07-2-fm2xml"></a>
<h3 class="sect2">7.4.1. Working with Cookies</h3>

<p>Version 2.0 of the Servlet API provides the
<tt class="literal">javax.servlet.http.Cookie</tt><a name="INDEX-1284"></a><a name="INDEX-1285"></a><a name="INDEX-1286"></a> class for working with cookies. The
HTTP header details for the cookies are handled by the Servlet API.
You create a cookie with the <tt class="literal">Cookie()</tt> constructor:
</p>

<blockquote>
<pre class="programlisting">public Cookie(String name, String value)</pre>
</blockquote>

<p>This creates a new cookie with an initial name and value. The rules
for valid names and values are given in Netscape's Cookie
Specification and RFC 2109.
</p>

<p>A servlet can send a cookie to the client by passing a
<tt class="literal">Cookie</tt> object to the
<tt class="literal">addCookie()</tt> method of
<tt class="literal">HttpServletResponse</tt>:
</p>

<blockquote>
<pre class="programlisting">public void HttpServletResponse.addCookie(Cookie cookie)</pre>
</blockquote>

<p>This method adds the specified cookie to the response. Additional
cookies can be added with subsequent calls to
<tt class="literal">addCookie()</tt><a name="INDEX-1287"></a><a name="INDEX-1288"></a>
. Because cookies are sent using HTTP headers, they should be added
to the response before you send any content. Browsers are only
required to <a name="INDEX-1289"></a>accept 20 cookies per site,
300 total per user, and they can limit each cookie's size to
4096 bytes.
</p>

<p>The code to set a cookie looks like this:</p>

<blockquote>
<pre class="programlisting">Cookie cookie = new Cookie("ID", "123");
res.addCookie(cookie);</pre>
</blockquote>

<p>A servlet retrieves cookies by calling the
<tt class="literal">getCookies()</tt><a name="INDEX-1290"></a><a name="INDEX-1291"></a><a name="INDEX-1292"></a>
method of <tt class="literal">HttpServlet- Request</tt>:
</p>

<blockquote>
<pre class="programlisting">public Cookie[] HttpServletRequest.getCookies()</pre>
</blockquote>

<p>This method returns an array of <tt class="literal">Cookie</tt> objects
that contains all the cookies sent by the browser as part of the
request or <tt class="literal">null</tt> if no cookies were sent. The code
to fetch cookies looks like this:
</p>

<blockquote>
<pre class="programlisting">Cookie[] cookies = req.getCookies();
if (cookies != null) {
  for (int i = 0; i &lt; cookies.length; i++) {
    String name = cookies[i].getName();
    String value = cookies[i].getValue();
  }
}</pre>
</blockquote>

<p>You can set a number of attributes for a cookie in addition to its
name and value. The following methods are used to set these
attributes. As you can see in <a href="appb_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/appb_01.htm">Appendix B, "HTTP Servlet API Quick Reference"</a>, there is
a corresponding get method for each set method. The get methods are
rarely used, however, because when a cookie is sent to the server, it
contains only its name, value, and version.
</p>

<dl>
<dt>
<b><tt class="literal">public void Cookie.setVersion(int v)</tt>
<a name="INDEX-1293"></a>
<a name="INDEX-1294"></a>
<a name="INDEX-1295"></a>
</b>
</dt>
<dd>
<p>Sets the <a name="INDEX-1296"></a><a name="INDEX-1297"></a>version of a
cookie. Servlets can send and receive cookies formatted to match
either Netscape persistent cookies (Version 0) or the newer, somewhat
experimental, RFC 2109 cookies (Version 1). Newly constructed cookies
default to Version
to maximize interoperability.
</p>
</dd>

<dt>
<b><tt class="literal">public void Cookie.setDomain(String pattern)</tt>
<a name="INDEX-1298"></a>
<a name="INDEX-1299"></a>
<a name="INDEX-1300"></a>
</b>
</dt>
<dd>
<p>Specifies a <a name="INDEX-1301"></a><a name="INDEX-1302"></a>
domain restriction pattern. A domain pattern specifies the servers
that should see a cookie. By default, cookies are returned only to
the host that saved them. Specifying a domain name pattern overrides
this. The pattern must begin with a dot and must contain at least two
dots. A pattern matches only one entry beyond the initial dot. For
example, <tt class="literal">".foo.com"</tt> is valid and matches
<a href="www.foo.com" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/www.foo.com">www.foo.com </a>and <a href="upload.foo.com" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/upload.foo.com">upload.foo.com </a>but not <a href="www.upload.foo.com" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/www.upload.foo.com">www.upload.foo.com</a>. For details on domain
patterns, see Netscape's Cookie Specification and RFC 2109.
</p>
</dd>

<dt>
<b><tt class="literal">public void Cookie.setMaxAge(int expiry)</tt>
<a name="INDEX-1303"></a>
<a name="INDEX-1304"></a>
<a name="INDEX-1305"></a>
</b>
</dt>
<dd>
<p>Specifies the <a name="INDEX-1306"></a><a name="INDEX-1307"></a>maximum age of the cookie in seconds
before it expires. A negative value indicates the default, that the
cookie should expire when the browser exits. A zero value tells the
browser to delete the cookie immediately.
</p>
</dd>

<dt>
<b><tt class="literal">public void Cookie.setPath(String uri)</tt>
<a name="INDEX-1308"></a>
<a name="INDEX-1309"></a>
<a name="INDEX-1310"></a>
</b>
</dt>
<dd>
<p>Specifies a <a name="INDEX-1311"></a>path for the cookie, which is the subset
of URIs to which a cookie should be sent. By default, cookies are
sent to the page that set the cookie and to all the pages in that
directory or under that directory. For example, if
<em class="filename">/servlet/CookieMonster </em>sets a cookie, the
default path is <tt class="literal">"/servlet"</tt>. That path indicates
the cookie should be sent to <em class="filename">/servlet/Elmo </em>and
to <em class="filename">/servlet/subdir/BigBird--</em>but not to the
<em class="filename">/Oscar.html </em>servlet alias or to any CGI programs
under <em class="filename">/cgi-bin</em>. A path set to
<tt class="literal">"/"</tt> causes a cookie to be sent to all the pages on
a server. A cookie's path must be such that it includes the
servlet that set the cookie.
</p>
</dd>

<dt>
<b><tt class="literal">public void Cookie.setSecure(boolean flag)</tt>
<a name="INDEX-1312"></a>
<a name="INDEX-1313"></a>
<a name="INDEX-1314"></a>
</b>
</dt>
<dd>
<p>Indicates whether the cookie should be sent only over a
<a name="INDEX-1315"></a>secure channel, such as SSL. By
default, its value is <tt class="literal">false</tt>.
</p>
</dd>

<dt>
<b><tt class="literal">public void Cookie.setComment(String comment)</tt>
<a name="INDEX-1316"></a>
<a name="INDEX-1317"></a>
<a name="INDEX-1318"></a>
</b>
</dt>
<dd>
<p>Sets the <a name="INDEX-1319"></a>comment field of the cookie. A comment
describes the intended purpose of a cookie. Web browsers may choose
to display this text to the user. Comments are not supported by
Version
cookies.
</p>
</dd>

<dt>
<b><tt class="literal">public void Cookie.setValue(String newValue)</tt>
<a name="INDEX-1320"></a>
<a name="INDEX-1321"></a>
<a name="INDEX-1322"></a>
</b>
</dt>
<dd>
<p>Assigns a new <a name="INDEX-1323"></a>value to a cookie. With Version
cookies, values should not contain the following: whitespace,
brackets and parentheses, equals signs, commas, double quotes,
slashes, question marks, at signs, colons, and semicolons. Empty
values may not behave the same way on all browsers.
</p>
</dd>

</dl>


<a name="ch07-3-fm2xml"></a>
<h3 class="sect2">7.4.2. Shopping Using Persistent Cookies</h3>

<p>
<a href="#ch07-25017">Example 7-3</a> shows a version of our shopping cart
viewer that has been modified to maintain the shopping cart using
persistent
<a name="INDEX-1324"></a><a name="INDEX-1325"></a>
cookies.
</p>

<a name="ch07-25017"></a>
<div class="example">
<h4 class="objtitle">Example 7-3. Session tracking using persistent cookies </h4>
<blockquote>
<pre class="programlisting">import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class ShoppingCartViewerCookie extends HttpServlet {

  public void doGet(HttpServletRequest req, HttpServletResponse res)
                               throws ServletException, IOException {
    res.setContentType("text/html");
    PrintWriter out = res.getWriter();

    // Get the current session ID by searching the received cookies.
    String sessionid = null;
    Cookie[] cookies = req.getCookies();
    if (cookies != null) {
      for (int i = 0; i &lt; cookies.length; i++) {
        if (cookies[i].getName().equals("sessionid")) {
          sessionid = cookies[i].getValue();
          break;
        }
      }
    }

    // If the session ID wasn't sent, generate one.
    // Then be sure to send it to the client with the response.
    if (sessionid == null) {
      sessionid = generateSessionId();
      Cookie c = new Cookie("sessionid", sessionid);
      res.addCookie(c);
    }

    out.println("&lt;HEAD&gt;&lt;TITLE&gt;Current Shopping Cart Items&lt;/TITLE&gt;&lt;/HEAD&gt;");
    out.println("&lt;BODY&gt;");

    // Cart items are associated with the session ID
    String[] items = getItemsFromCart(sessionid);

    // Print the current cart items.
    out.println("You currently have the following items in your cart:&lt;BR&gt;");
    if (items == null) {
      out.println("&lt;B&gt;None&lt;/B&gt;");
    }
    else {
      out.println("&lt;UL&gt;");
      for (int i = 0; i &lt; items.length; i++) {
        out.println("&lt;LI&gt;" + items[i]);
      }
      out.println("&lt;/UL&gt;");
    }

    // Ask if they want to add more items or check out.
    out.println("&lt;FORM ACTION=\"/servlet/ShoppingCart\" METHOD=POST&gt;");
    out.println("Would you like to&lt;BR&gt;");
    out.println("&lt;INPUT TYPE=submit VALUE=\" Add More Items \"&gt;");
    out.println("&lt;INPUT TYPE=submit VALUE=\" Check Out \"&gt;");
    out.println("&lt;/FORM&gt;");

    // Offer a help page.
    out.println("For help, click &lt;A HREF=\"/servlet/Help" +
                "?topic=ShoppingCartViewerCookie\"&gt;here&lt;/A&gt;");

    out.println("&lt;/BODY&gt;&lt;/HTML&gt;");
  }

  private static String generateSessionId() {
    String uid = new java.rmi.server.UID().toString();  // guaranteed unique
    return java.net.URLEncoder.encode(uid);  // encode any special chars
  }

  private static String[] getItemsFromCart(String sessionid) {
    // Not implemented
  }
}</pre>
</blockquote>
</div>

<p>This servlet first tries to fetch the client's session ID by
iterating through the cookies it received as part of the request. If
no cookie contains a session ID, the servlet generates a new one
using <tt class="literal">generateSessionId()</tt> and adds a cookie
containing the new session ID to the response. The rest of this
servlet matches the URL rewriting version, except that this version
doesn't perform any rewriting.
</p>

<p>Persistent cookies offer an elegant, efficient, easy way to implement
session tracking. Cookies provide as automatic an introduction for
each request as you could hope for. For each request, a cookie can
automatically provide a client's session ID or perhaps a list
of the client's preferences. In addition, the ability to
customize cookies gives them extra power and versatility.
</p>

<p>The biggest problem with cookies is that browsers don't always
accept cookies. Sometimes this is because the browser doesn't
support cookies. More often, it's because the user has
specifically configured the browser to refuse cookies (out of privacy
concerns, perhaps). If any of your clients might not accept cookies,
you have to fall back to the solutions discussed earlier in this
<a name="INDEX-1326"></a><a name="INDEX-"></a> chapter.<a name="INDEX-1327"></a><a name="INDEX-1328"></a>
</p>




<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch07_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch07_03.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch07_05.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch07_05.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">7.3. URL Rewriting</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">7.5. The Session Tracking API</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
