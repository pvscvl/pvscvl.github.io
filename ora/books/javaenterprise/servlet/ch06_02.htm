<html>
<head>
<title>Compressed Content (Java Servlet Programming)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="Jason Hunter and William Crawford">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-391-XE" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Compressed Content">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm" alt="Java Servlet Programming"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch06_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch06_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch06_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch06_01.htm">Chapter 6: Sending Multimedia Content</a></td><td align="right" valign="top" width="172"><a href="ch06_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch06_03.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h2 class="sect1">6.2. Compressed Content</h2>

<p>The <tt class="literal">java.util.zip</tt><a name="INDEX-1208"></a><a name="INDEX-1209"></a>
package was introduced in JDK 1.1. This package contains classes that
support reading and writing the <a name="INDEX-1210"></a><a name="INDEX-1211"></a><a name="INDEX-1212"></a>GZIP
and ZIP compression formats. Although these classes were added to
support <a name="INDEX-1213"></a>Java Archive (JAR) files, they also
provide a convenient, standard way for a servlet to send compressed
content.
</p>

<p>Compressed content doesn't look any different to the end user
because it's decompressed by the browser before it's
displayed. Yet, while it looks the same, it can improve the end
user's experience by reducing the time required to download the
content from the server. For heavily compressable content such as
HTML, compression can reduce transmission times by an order of
magnitude. Quite a trick! Just bear in mind that to compress content
dynamically forces the server to perform extra work, so any speed-up
in transmission time has to be weighed against slower server
performance.
</p>

<p>By now you should be familiar with the idea that a servlet can send a
<tt class="literal">Content-Type</tt> header as part of its response to
tell the client the type of information being returned. To send
compressed content, a servlet must also send a
<tt class="literal">Content-Encoding</tt><a name="INDEX-1214"></a><a name="INDEX-1215"></a>
header to tell the client the scheme by which the content has been
encoded. Under the HTTP 1.0 specification, the possible encoding
schemes are <tt class="literal">gzip</tt> (or
<tt class="literal">x-gzip</tt><a name="INDEX-1216"></a><a name="INDEX-1217"></a><a name="INDEX-1218"></a>) and
<tt class="literal">compress</tt> (or <tt class="literal">x-compress</tt>) for
GZIP and ZIP compression formats, respectively.
</p>

<p>Not all clients understand the <tt class="literal">gzip </tt>and
<tt class="literal">compress </tt>encodings. To tell the server which
encoding schemes it understands, a client may send an
<tt class="literal">Accept-Encoding</tt><a name="INDEX-1219"></a><a name="INDEX-1220"></a>
header that specifies acceptable encoding schemes as a
comma-separated list. Most browsers do not yet provide this
header--even those that do support compressed encodings. For
now, a servlet has to decide that without the header it won't
send compressed content, or it has to examine the
<tt class="literal">User-Agent</tt><a name="INDEX-1221"></a><a name="INDEX-1222"></a>
header to see if the browser is one that supports compression. Of the
current popular browsers, only Netscape Navigator 3 and 4 on Unix and
Microsoft Internet Explorer 4 on Windows support GZIP encoding, and
none support ZIP encoding.
</p>

<p>Although <a name="INDEX-1223"></a>negotiating which compression format to
use can involve a fair amount of logic, actually sending the
compressed content could hardly be simpler. The servlet just wraps
its standard <tt class="literal">ServletOutputStream</tt> with a
<tt class="literal">GZIPOutputStream</tt><a name="INDEX-1224"></a>
or
<tt class="literal">ZipOutputStream</tt><a name="INDEX-1225"></a><a name="INDEX-1226"></a>
. Be sure to call <tt class="literal">out.close()</tt> when your servlet is
done writing output, so that the appropriate trailer for the
compression format is written. Ah, the wonders of Java!
</p>

<p>
<a href="#ch06-40179">Example 6-11</a> shows the <tt class="literal">ViewFile</tt>
servlet from <a href="ch04_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch04_01.htm">Chapter 4, "Retrieving Information"</a> rewritten to send
<a name="INDEX-1227"></a>compressed content whenever possible.
We'd show you a screen shot, but there's nothing new to
see. As we said before, an end user cannot tell that the server sent
compressed content to the browser--except perhaps with reduced
download times.
</p>

<a name="ch06-40179"></a>
<div class="example">
<h4 class="objtitle">Example 6-11. Sending compressed content</h4>
<blockquote>
<pre class="programlisting">import java.io.*;
import java.util.*;
import java.util.zip.*;
import javax.servlet.*;
import javax.servlet.http.*;

import com.oreilly.servlet.ServletUtils;

public class ViewFileCompress extends HttpServlet {

  public void doGet(HttpServletRequest req, HttpServletResponse res) 
                               throws ServletException, IOException {

    OutputStream out = null;

    // Select the appropriate content encoding based on the
    // client's Accept-Encoding header. Choose GZIP if the header 
    // includes "gzip". Choose ZIP if the header includes "compress". 
    // Choose no compression otherwise.
    String encodings = req.getHeader("Accept-Encoding");
    if (encodings != null &amp;&amp; encodings.indexOf("gzip") != -1) {
      // Go with GZIP
      res.setHeader("Content-Encoding", "gzip");
      out = new GZIPOutputStream(res.getOutputStream());
    }
    else if (encodings != null &amp;&amp; encodings.indexOf("compress") != -1) {
      // Go with ZIP
      res.setHeader("Content-Encoding", "x-compress");
      out = new ZipOutputStream(res.getOutputStream());
      ((ZipOutputStream)out).putNextEntry(new ZipEntry("dummy name"));
    }
    else {
      // No compression
      out = res.getOutputStream();
    }
    res.setHeader("Vary", "Accept-Encoding");

    // Get the file to view
    String file = req.getPathTranslated();

    // No file, nothing to view
    if (file == null) {
      res.sendError(res.SC_FORBIDDEN);
      return;
    }

    // Get and set the type of the file
    String contentType = getServletContext().getMimeType(file);
    res.setContentType(contentType);

    // Return the file
    try {
      ServletUtils.returnFile(file, out);
    }
    catch (FileNotFoundException e) { 
      res.sendError(res.SC_NOT_FOUND);
      return;
    }
    catch (IOException e) {
      getServletContext().log(e, "Problem sending file");
      res.sendError(res.SC_INTERNAL_SERVER_ERROR,
                    ServletUtils.getStackTraceAsString(e));
    }

    // Write the compression trailer and close the output stream
    out.close();
  }
}</pre>
</blockquote>
</div>

<p>The servlet begins by declaring a <tt class="literal">null</tt><tt class="literal">OutputStream</tt> and then setting this
<tt class="literal">OutputStream</tt> to a
<tt class="literal">GZIPOutputStream</tt>,
<tt class="literal">ZipOutputStream</tt>, or
<tt class="literal">ServletOutput-Stream</tt>, depending on the received
<tt class="literal">Accept-Encoding</tt><a name="INDEX-1228"></a><a name="INDEX-1229"></a>
header. As it selects which output stream to use, the servlet sets
the
<tt class="literal">Content-Encoding</tt><a name="INDEX-1230"></a><a name="INDEX-1231"></a>
header accordingly. When sending compressed content, this header must
be set for the client to run the appropriate decompression algorithm.
The servlet also sets the
<tt class="literal">Vary</tt><a name="INDEX-1232"></a><a name="INDEX-1233"></a>
header to the value <tt class="literal">Accept-Encoding</tt> to be polite
and indicate to the client that the servlet varies its output
depending on the <tt class="literal">Accept-Encoding</tt> header. Most
clients ignore this header.
</p>

<p>After this early logic, the servlet can treat the output stream as
just another <tt class="literal">OutputStream</tt>. It could wrap the
stream with a <tt class="literal">PrintStream</tt> or
<tt class="literal">PrintWriter</tt>, or it could pass it to a
<tt class="literal">GifEncoder</tt>. But, no matter what it does, the
servlet has to be sure to call <tt class="literal">out.close()</tt> when
it's finished sending content. This call writes the appropriate
trailer to the compressed stream.
</p>

<p>There is some content that should not be compressed. For example, GIF
and JPEG images are already compressed as part of their encoding, so
there's no benefit in compressing them again. An improved
version of the <tt class="literal">FileViewCompressed</tt> servlet would
detect when it's returning an image and not bother with an
attempt at further compression. Another improvement would be to
rewrite this servlet as a filter--compressing whatever content
is piped through it.
</p>



<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch06_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch06_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch06_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch06_03.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">6.1. Images</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">6.3. Server Push</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
