<html>
<head>
<title>Non-Western European Languages (Java Servlet Programming)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="Jason Hunter and William Crawford">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-391-XE" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Non-Western European Languages">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm" alt="Java Servlet Programming"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch12_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch12_02.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch12_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch12_01.htm">Chapter 12: Internationalization</a></td><td align="right" valign="top" width="172"><a href="ch12_04.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch12_04.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h2 class="sect1">12.3. Non-Western European Languages</h2>

<p>Let's continue now with a look at how a <a name="INDEX-2114"></a><a name="INDEX-2115"></a>servlet outputs a page written in a
non-Western European language, such as Russian, Japanese, Chinese,
Korean, or Hebrew. To understand how to work with these languages, we
must first understand how things work behind the scenes of our
previous examples.
</p>

<a name="ch12-4-fm2xml"></a>
<h3 class="sect2">12.3.1. Charsets</h3>

<p>Let's begin looking at the situation from the perspective of
the browser. Imagine having the browser's job. You make an HTTP
request to some URL and receive a response. That response, in the
basest terms, is nothing more than a long sequence of bytes. How do
you know how to display that response?
</p>

<p>A common way, and in fact the default way, is to assume that every
byte represents one of 256 possible characters and to further assume
that the character a byte represents can be determined by looking up
the byte value in some table. The default table is specified by the
<a name="INDEX-2116"></a><a name="INDEX-2117"></a>ISO-8859-1 standard, also
called Latin-1. It contains byte-to-character mappings for the
characters most commonly used in Western European languages. So, by
default, you (acting as the browser) can receive a sequence of bytes
and convert them to a sequence of Western European characters.
</p>

<p>Now whatdo you do if you want to receive text that isn't
written in a Western European language? You have to take the long
sequence of bytes in the response and interpret it differently, using
some other byte-sequence to character mapping. Technically put, you
need to use a different <em class="emphasis">charset.<a href="#FOOTNOTE-2">[2]</a></em> There are an infinite
number of potential charsets. Fortunately, there are only a few dozen
that are commonly used.
</p>
<blockquote class="footnote"> <a name="FOOTNOTE-2"></a>
<p>[2] A
<a name="INDEX-2118"></a><a name="INDEX-2119"></a>charset (a byte-sequence to
character mapping) is not the same as a character set (a set of
characters). See <a name="INDEX-2120"></a><a name="INDEX-2121"></a>RFC 2278 at <a href="../../../../../../../www.ietf.org/rfc/rfc2278.txt">http://www.ietf.org/rfc/rfc2278.txt</a> for a
full explanation.</p> </blockquote>

<p>Some charsets use single-byte characters in a fashion similar to
ISO-8859-1, though with a different byte-to-character mapping. For
example, <a name="INDEX-2122"></a><a name="INDEX-2123"></a>ISO-8859-5 defines a
byte-to-character mapping for the characters of the Cyrillic
(Russian) alphabet, while
<a name="INDEX-2124"></a><a name="INDEX-2125"></a>ISO-8859-8 defines a mapping
for the Hebrew alphabet.<a href="#FOOTNOTE-3">[3]</a>
</p>
<blockquote class="footnote"> <a name="FOOTNOTE-3"></a>
<p>[3] It's useful to note
that, for nearly all charsets, the byte values between
and 127 decimal represent the standard <a name="INDEX-2126"></a><a name="INDEX-2127"></a><a name="INDEX-2128"></a>US-ASCII
characters, allowing English text to be added to a page written in
nearly any language.</p> </blockquote>

<p>Other charsets use multibyte characters, where it may take more than
one byte to represent a single character. This is most common with
languages that contain thousands of characters, such as Chinese,
Japanese, and Korean--often referred to collectively as CJK.
Charsets used to display these languages include
<a name="INDEX-2129"></a><a name="INDEX-2130"></a>Big5
(Chinese), <a name="INDEX-2131"></a><a name="INDEX-2132"></a>Shift_JIS ( Japanese), and
<a name="INDEX-2133"></a><a name="INDEX-2134"></a>EUC-KR
(Korean). A table listing languages and their corresponding charsets
can be found in <a href="appe_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/appe_01.htm">Appendix E, "Charsets"</a>.
</p>

<p>What this boils down to is that if you (as the browser again) know
the charset in which the response was encoded, you can determine how
to interpret the bytes you receive. Just one question remains: how
can you determine the charset? You can do it in one of two ways.
First, you can require your user to tell you the
<a name="INDEX-2135"></a><a name="INDEX-2136"></a>charset. With Netscape Navigator 3,
this is done through <b class="emphasis-bold">Options </b>|
<b class="emphasis-bold">Document Encoding</b>; with Netscape
Navigator 4, it is done through <b class="emphasis-bold">View
</b>| <b class="emphasis-bold">Encoding</b>. With
<a name="INDEX-2137"></a><a name="INDEX-2138"></a>
Microsoft Internet Explorer 4, it's done through <b class="emphasis-bold">View </b>| <b class="emphasis-bold">Fonts</b>.
This approach often requires the user to try a few charsets until the
display makes sense. The second possibility is that the server (or
servlet) specifies the charset in the
<tt class="literal">Content-Type</tt><a name="INDEX-2139"></a><a name="INDEX-2140"></a>
header you receive. For example, the following
<tt class="literal">Content-Type</tt> value:
</p>

<blockquote>
<pre class="programlisting">text/html; charset=Shift_JIS </pre>
</blockquote>

<p>indicates that the charset is Shift_JIS. Unfortunately, a few older
browsers can be confused by the inclusion of a charset in the
<tt class="literal">Content-Type</tt> header.
</p>


<a name="ch12-5-fm2xml"></a>
<h3 class="sect2">12.3.2. Writing Encoded Output</h3>

<p>Now that we understand charsets from the perspective of the browser,
it's time to return to the perspective of the servlet. A
servlet's role is to do the following:
</p>

<ol>
<li>
<p>Choose a charset and set it for the servlet</p>
</li>
<li>
<p>Get a <tt class="literal">PrintWriter</tt> for that charset</p>
</li>
<li>
<p>Output characters that can be displayed using that charset</p>
</li>
</ol>

<p>
<a href="#ch12-13239">Example 12-5</a> demonstrates with a servlet that says
"<a name="INDEX-2141"></a><a name="INDEX-2142"></a><a name="INDEX-2143"></a>Hello World" and displays the
current date and time in Japanese. A screen shot is shown in <a href="#ch12-31877">Figure 12-4</a>.
</p>

<a name="ch12-13239"></a>
<div class="example">
<h4 class="objtitle">Example 12-5. Hello to Japanese speakers </h4>
<blockquote>
<pre class="programlisting">import java.io.*;
import java.text.*;
import java.util.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class HelloJapan extends HttpServlet {

  public void doGet(HttpServletRequest req, HttpServletResponse res)
                               throws ServletException, IOException {
    res.setContentType("text/plain; charset=Shift_JIS");
    PrintWriter out = res.getWriter();
    res.setHeader("Content-Language", "ja");

    Locale locale = new Locale("ja", "");
    DateFormat full = DateFormat.getDateTimeInstance(DateFormat.LONG,
                                                     DateFormat.LONG,
                                                     locale);
    out.println("In Japanese:");
    out.println("\u4eca\u65e5\u306f\u4e16\u754c");  // Hello World
    out.println(full.format(new Date()));
  }
}</pre>
</blockquote>
</div>

<a name="ch12-31877"></a>
<div class="figure">
<img alt="figure" src="figs/jsp_1204.gif" webstripperlinkwas="figs/jsp_1204.gif"></div>
<h4 class="objtitle">Figure 12-4. A Japanese Hello</h4>

<p>This servlet starts by setting the content type to
<tt class="literal">"text/plain"</tt> and the charset to
<tt class="literal">"Shift_JIS"</tt>. Then it calls
<tt class="literal">res.getWriter()</tt> just like always--except in
this case the <tt class="literal">PrintWriter</tt> it receives is special.
This <tt class="literal">PrintWriter</tt> encodes all the servlet's
output in the Shift_JIS charset because that charset is specified in
the <tt class="literal">Content-Type</tt> header. This second line is
therefore equivalent to the following:
</p>

<blockquote>
<pre class="programlisting">PrintWriter out = new PrintWriter(
  new OutputStreamWriter(res.getOutputStream(), "Shift_JIS"), true);</pre>
</blockquote>

<p>Note that the call to <tt class="literal">res.getWriter()</tt> may throw an
<tt class="literal">UnsupportedEncodingException</tt> if the charset is not
recognized by Java<a href="#FOOTNOTE-4">[4]</a> or an
<tt class="literal">IllegalStateException</tt> if
<tt class="literal">getOutputStream()</tt> has been called already on this
request.
</p>
<blockquote class="footnote"> <a name="FOOTNOTE-4"></a>
<p>[4] With some early versions of Java,
it may in some situations erroneously throw an
<tt class="literal">IllegalArgumentException</tt> if the charset is not
recognized.</p> </blockquote>

<p>The servlet next creates a
<tt class="literal">Locale</tt><a name="INDEX-2144"></a><a name="INDEX-2145"></a>
with the language <tt class="literal">"ja"</tt> to represent a generic
Japanese environment and then creates a <tt class="literal">DateFormat</tt>
to match. Finally, it prints the equivalent of "Hello
World" in Japanese, using Unicode escapes for the characters,
and outputs the current date and time.
</p>

<p>For this servlet to work, your server's classpath must include
the <tt class="literal">sun.io.CharToByte*</tt> converter classes or their
equivalent. On some platforms, these are not always included by
default. Also, for the Japanese <a name="INDEX-2146"></a>glyphs (or glyphs from
other languages) to display correctly in the browser, the browser has
to support the charset and have access to the necessary fonts to
display the charset.
</p>

<p>For more information on the internationalization capabilities of
Netscape Navigator, see <a href="../../../../../../../home.netscape.com/eng/intl/index.html">http://home.netscape.com/eng/intl/index.html</a><a name="INDEX-2147"></a><a name="INDEX-2148"></a><a name="INDEX-2149"></a><a name="INDEX-2150"></a>. For more information on the
capabilities of Microsoft Internet Explorer, see <a href="../../../../../../../www.microsoft.com/ie/intlhome.htm">http://www.microsoft.com/ie/intlhome.htm</a><a name="INDEX-2151"></a><a name="INDEX-2152"></a><a name="INDEX-2153"></a><a name="INDEX-2154"></a>.
</p>


<a name="ch12-6-fm2xml"></a>
<h3 class="sect2">12.3.3. Reading and Writing Encoded Output</h3>

<p>It can often be prohibitively slow to enter hundreds or thousands of
<a name="INDEX-2155"></a>Unicode escapes manually in Java
source files. An easier option is to read localized text from an
encoded file. For example, let's assume the "Hello
World" Japanese text we want to output is saved by someone on
the localization team in a file named
<em class="filename">HelloWorld.ISO-2022-JP</em>, using the ISO-2022-JP
encoding to make things more interesting. A servlet can read this
file and send the content to the browser using the Shift_JIS
encoding, as shown in <a href="#ch12-18478">Example 12-6</a>.
</p>

<a name="ch12-18478"></a>
<div class="example">
<h4 class="objtitle">Example 12-6. Sending localized output read from a file </h4>
<blockquote>
<pre class="programlisting">import java.io.*;
import java.text.*;
import java.util.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class HelloJapanReader extends HttpServlet {

  public void doGet(HttpServletRequest req, HttpServletResponse res)
                               throws ServletException, IOException {
    res.setContentType("text/plain; charset=Shift_JIS");
    PrintWriter out = res.getWriter();
    res.setHeader("Content-Language", "ja");

    Locale locale = new Locale("ja", "");
    DateFormat full = DateFormat.getDateTimeInstance(DateFormat.LONG,
                                                     DateFormat.LONG,
                                                     locale);
    out.println("In Japanese:");

    try {
      FileInputStream fis =
        new FileInputStream(req.getRealPath("/HelloWorld.ISO-2022-JP"));
      InputStreamReader isr = new InputStreamReader(fis, "ISO-2022-JP");
      BufferedReader reader = new BufferedReader(isr);
      String line = null;
      while ((line = reader.readLine()) != null) {
        out.println(line);
      }
    }
    catch (FileNotFoundException e) {
      // No Hello for you
    }

    out.println(full.format(new Date()));
  }
}</pre>
</blockquote>
</div>

<p>This servlet is essentially a character encoding converter. It reads
the <em class="filename">HelloWorld.ISO-2022-JP</em> text encoded with
ISO-2022-JP and internally converts it to Unicode. Then, it outputs
the same text by converting from Unicode to Shift_JIS.<a name="INDEX-2156"></a><a name="INDEX-2157"></a>
</p>




<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch12_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch12_02.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch12_04.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/ch12_04.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">12.2. Conforming to Local Customs</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">12.4. Multiple Languages</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
