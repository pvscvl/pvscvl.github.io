<html>
<head>
<title>The java.awt.font Package (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The java.awt.font Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch14_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch14_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch16_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch16_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 15.  The java.awt.font Package</h1>

<p>  The <tt class="literal">java.awt.font</tt> 
  package contains classes and interfaces related to
  fonts; it is new in Java 1.2.  Note, however, that the <tt class="literal">Font</tt> class itself
  is part of the <tt class="literal">java.awt</tt> package.  This package
  contains low-level classes for obtaining information about
  the measurements of font glyphs and lines of text.  It also
  contains classes for the low-level layout of text.
  <tt class="literal">LineMetrics</tt> and <tt class="literal">TextLayout</tt> are
  the two most important classes in this package.
  <a href="#jfcnut-ch-java.awt.font-fig-1">Figure 15-1</a> shows the class hierarchy of
  this package.</p>
<a name="INDEX-1952"></a>
<p>  Most programs can rely on the higher-level text display features of
  <tt class="literal">java.awt</tt> and <tt class="literal">javax.swing</tt> and do
  not have to use this package.</p>
<a name="INDEX-1953"></a>
<a name="INDEX-1954"></a>
<a name="jfcnut-ch-java.awt.font-fig-1"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.1501.gif" webstripperlinkwas="figs/jfcn.1501.gif"></div>
<h4 class="objtitle">Figure 15-1. The java.awt.font package</h4>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FontRenderContext</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1955"></a>
<p> 
  This class stores the information necessary to precisely measure
  the size of text.  It is used by a number of <tt class="literal">Font</tt>
  methods and also by <tt class="literal">TextLayout</tt> and
  <tt class="literal">LineBreakMeasurer</tt>.  Although
  <tt class="literal">FontRenderContext</tt> has a public constructor, it is
  more common to obtain a <tt class="literal">FontRenderContext</tt> by
  calling the <tt class="literal">getFontRenderContext()</tt> method of a
  <tt class="literal">Graphics2D</tt> object.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">FontRenderContext</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FontRenderContext</b> (java.awt.geom.AffineTransform <i class="parameter">tx</i>, boolean <i class="parameter">isAntiAliased</i>, boolean <i class="parameter">usesFractionalMetrics</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">FontRenderContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isAntiAliased</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.geom.AffineTransform <b class="function">getTransform</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">usesFractionalMetrics</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Graphics2D.getFontRenderContext(), GlyphVector.getFontRenderContext()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GlyphJustificationInfo</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1956"></a>
<p>  This class contains information about how much whitespace may be added
  to or removed from the left and right sides of a glyph without unduly
  compromising the appearance of the text output.  This information is
  used by algorithms that perform fill justification to force a line
  of text to an exact size.  Only applications that perform high-end
  typography need to use this class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">GlyphJustificationInfo</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GlyphJustificationInfo</b> (float <i class="parameter">weight</i>, boolean <i class="parameter">growAbsorb</i>, int <i class="parameter">growPriority</i>, float <i class="parameter">growLeftLimit</i>, float <i class="parameter">growRightLimit</i>, boolean <i class="parameter">shrinkAbsorb</i>, int <i class="parameter">shrinkPriority</i>, float <i class="parameter">shrinkLeftLimit</i>, float <i class="parameter">shrinkRightLimit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PRIORITY_INTERCHAR</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PRIORITY_KASHIDA</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PRIORITY_NONE</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PRIORITY_WHITESPACE</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final boolean <b class="function">growAbsorb</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final float <b class="function">growLeftLimit</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final int <b class="function">growPriority</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final float <b class="function">growRightLimit</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final boolean <b class="function">shrinkAbsorb</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final float <b class="function">shrinkLeftLimit</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final int <b class="function">shrinkPriority</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final float <b class="function">shrinkRightLimit</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final float <b class="function">weight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">GlyphVector.getGlyphJustificationInfo(), GraphicAttribute.getJustificationInfo()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GlyphMetrics</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1957"></a>
<p>  This class contains measurements for a single glyph of a font.
  Although <tt class="literal">GlyphMetrics</tt> has a public constructor, the
  only way to obtain actual metrics for a glyph is by calling the
  <tt class="literal">getGlyphMetrics()</tt> method of a
  <tt class="literal">GlyphVector</tt>. </p>
<a name="INDEX-1958"></a>
<a name="INDEX-1959"></a>
<a name="INDEX-1960"></a>
<a name="INDEX-1961"></a>
<p>  Each glyph has an origin.  The <tt class="literal">getAdvance()</tt> method
  returns the standard distance between the origin of this glyph and the
  origin of the next glyph in the <tt class="literal">GlyphVector</tt> from
  which the <tt class="literal">GlyphMetrics</tt> was obtained.
  <tt class="literal">getBounds2D()</tt> returns the bounding box of the
  glyph.  This rectangle is positioned relative to the origin of the
  glyph.  <tt class="literal">getLSB()</tt> returns the left-side bearing of
  the glyph: the distance between the origin and the left side of the bounding
  box.  <tt class="literal">getRSB()</tt> returns the right-side bearing:
  the distance between the right side of the bounding box and the start
  of the next glyph.  For some glyphs, these bearing values may be
  negative.</p>
<a name="INDEX-1962"></a>
<p>
<tt class="literal">getType()</tt> returns the type of the glyph; the return
  value is one of the constants defined by the class.  Most glyphs are
  of <tt class="literal">STANDARD</tt> type.  Glyphs with no visible
  representation are of type <tt class="literal">WHITESPACE</tt>.  Glyphs that
  represent more than one character have type
  <tt class="literal">LIGATURE</tt>.  Accents and other diacritical marks that
  modify other glyphs have type <tt class="literal">COMBINING</tt>.  Finally,
  when one character is represented by two or more glyphs, the extra
  glyph or glyphs have the type <tt class="literal">COMPONENT</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">GlyphMetrics</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GlyphMetrics</b> (float <i class="parameter">advance</i>, java.awt.geom.Rectangle2D <i class="parameter">bounds</i>, byte <i class="parameter">glyphType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final byte <b class="function">COMBINING</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final byte <b class="function">COMPONENT</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final byte <b class="function">LIGATURE</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final byte <b class="function">STANDARD</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final byte <b class="function">WHITESPACE</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAdvance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isCombining</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLigature</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getLSB</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getRSB</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isStandard</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isWhitespace</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">GlyphVector.getGlyphMetrics()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GlyphVector</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i>cloneable</i></b></font></td>
</tr>
</table>
<a name="INDEX-1963"></a>
<p>  This class represents an array of glyphs taken from a single font
  that are to be drawn on a single line.  You obtain a
  <tt class="literal">GlyphVector</tt> by calling the
  <tt class="literal">createGlyphVector()</tt> method of a
  <tt class="literal">Font</tt> object, and you draw a
  <tt class="literal">GlyphVector</tt> with the
  <tt class="literal">drawGlyphVector()</tt> method of a
  <tt class="literal">Graphics2D</tt> object.</p>
<p>  When a string is drawn using the <tt class="literal">drawString()</tt>
  method of <tt class="literal">Graphics</tt> or
  <tt class="literal">Graphics2D</tt>, the characters of the string first
  must be converted to font glyphs, and then those glyphs must be drawn.
  Thus, if a string is to be drawn repeatedly, it can be more efficient to
  separate these two steps, converting the string to a
  <tt class="literal">GlyphVector</tt> once and then drawing that
  <tt class="literal">GlyphVector</tt> multiple times.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">GlyphVector</b> implements Cloneable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GlyphVector</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Font <b class="function">getFont</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract FontRenderContext <b class="function">getFontRenderContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.geom.Rectangle2D <b class="function">getLogicalBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getNumGlyphs</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Shape <b class="function">getOutline</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Shape <b class="function">getOutline</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.geom.Rectangle2D <b class="function">getVisualBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">equals</b> (GlyphVector <i class="parameter">set</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getGlyphCode</b> (int <i class="parameter">glyphIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int[ ] <b class="function">getGlyphCodes</b> (int <i class="parameter">beginGlyphIndex</i>, int <i class="parameter">numEntries</i>, int[ ] <i class="parameter">codeReturn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract GlyphJustificationInfo <b class="function">getGlyphJustificationInfo</b> (int <i class="parameter">glyphIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Shape <b class="function">getGlyphLogicalBounds</b> (int <i class="parameter">glyphIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract GlyphMetrics <b class="function">getGlyphMetrics</b> (int <i class="parameter">glyphIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Shape <b class="function">getGlyphOutline</b> (int <i class="parameter">glyphIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.geom.Point2D <b class="function">getGlyphPosition</b> (int <i class="parameter">glyphIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float[ ] <b class="function">getGlyphPositions</b> (int <i class="parameter">beginGlyphIndex</i>, int <i class="parameter">numEntries</i>, float[ ] <i class="parameter">positionReturn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.geom.AffineTransform <b class="function">getGlyphTransform</b> (int <i class="parameter">glyphIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Shape <b class="function">getGlyphVisualBounds</b> (int <i class="parameter">glyphIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">performDefaultLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setGlyphPosition</b> (int <i class="parameter">glyphIndex</i>, java.awt.geom.Point2D <i class="parameter">newPos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setGlyphTransform</b> (int <i class="parameter">glyphIndex</i>, java.awt.geom.AffineTransform <i class="parameter">newTX</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->GlyphVector(Cloneable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Graphics2D.drawGlyphVector(), GlyphVector.equals()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Font.createGlyphVector()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GraphicAttribute</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1964"></a>
<p>  This abstract class represents a graphic to be embedded in a line of
  text in lieu of a regular font glyph.  A
  <tt class="literal">GraphicAttribute</tt> is used as the value of an
  <tt class="literal">TextAttribute.CHAR_REPLACEMENT</tt> attribute in a
  <tt class="literal">java.text.AttributedString</tt> or
  <tt class="literal">java.text.AttributedCharacterIterator</tt>. 
  Most 

applications 
  use one of the two subclasses <tt class="literal">ImageGraphicAttribute</tt>
  and <tt class="literal">ShapeGraphicAttribute</tt>.  Few applications need
  to create custom subclasses of their own.</p>

<a name="INDEX-1965"></a>

<p>  The <tt class="literal">draw()</tt> method is responsible for actually
  drawing the desired graphic.  The other methods return various
  measurements for the graphic.  The constants are possible alignment
  values returned by <tt class="literal">getAligment()</tt>.</p>
<a name="INDEX-1966"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">GraphicAttribute</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">GraphicAttribute</b> (int <i class="parameter">alignment</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BOTTOM_ALIGNMENT</b> ;</td><td align="right"><i> =-2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CENTER_BASELINE</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HANGING_BASELINE</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ROMAN_BASELINE</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TOP_ALIGNMENT</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getAdvance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final int <b class="function">getAlignment</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getAscent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getDescent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public GlyphJustificationInfo <b class="function">getJustificationInfo</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">draw</b> (Graphics2D <i class="parameter">graphics</i>, float <i class="parameter">x</i>, float <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">ImageGraphicAttribute, ShapeGraphicAttribute</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ImageGraphicAttribute</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1967"></a>
<p>  This concrete subclass of <tt class="literal">GraphicAttribute</tt> allows
  an image to be drawn within a string of text.  Create an
  <tt class="literal">ImageGraphicAttribute</tt> by specifying an image to
  draw, an alignment (one of the constants defined by
  <tt class="literal">GraphicAttribute</tt>), and, optionally, an origin for
  the image.  The origin coordinates are relative to the image itself.
  Use the <tt class="literal">ImageGraphicAttribute</tt> by specifying it as
  the value of a <tt class="literal">TextAttribute.CHAR_REPLACEMENT</tt>
  attribute in a <tt class="literal">java.text.AttributedString</tt> or
  <tt class="literal">java.text.AttributedCharacterIterator</tt>.</p>
<p>  See also <tt class="literal">ShapeGraphicAttribute</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">ImageGraphicAttribute</b> extends GraphicAttribute {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ImageGraphicAttribute</b> (Image <i class="parameter">image</i>, int <i class="parameter">alignment</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ImageGraphicAttribute</b> (Image <i class="parameter">image</i>, int <i class="parameter">alignment</i>, float <i class="parameter">originX</i>, float <i class="parameter">originY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (ImageGraphicAttribute <i class="parameter">rhs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding GraphicAttribute</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">draw</b> (Graphics2D <i class="parameter">graphics</i>, float <i class="parameter">x</i>, float <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAdvance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAscent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getDescent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">rhs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->GraphicAttribute-->ImageGraphicAttribute</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">ImageGraphicAttribute.equals()</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>LineBreakMeasurer</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1968"></a>
<p> 
  This class breaks a paragraph of text into individual lines of a
  specified width, where each line is represented by a
  <tt class="literal">TextLayout</tt> object.  When you create a
  <tt class="literal">LineBreakMeasurer</tt>, you must specify the paragraph
  to be broken with a
  <tt class="literal">java.text.AttributedCharacterIterator</tt>, which is
  usually is obtained from a <tt class="literal">java.text.AttributedString</tt>.
  You may optionally specify a
  <tt class="literal">java.text.BreakIterator</tt> to indicate where line
  breaks are allowed.  The default is to use the line breaking rules of
  the current locale.  You must also pass a
  <tt class="literal">FontRenderContext</tt> to the
  <tt class="literal">LineBreakMeasurer()</tt> constructor.  The
  <tt class="literal">FontRenderContext</tt> is usually obtained with the
  <tt class="literal">getFontRenderContext()</tt> method of 
  <tt class="literal">Graphics2D</tt>.</p>
<a name="INDEX-1969"></a>
<a name="INDEX-1970"></a>
<p>  Once you have created a <tt class="literal">LineBreakMeasurer</tt> for your
  paragraph, you use it by repeatedly calling
  <tt class="literal">nextLayout()</tt> to create
  <tt class="literal">TextLayout</tt> objects that represent lines.
  <tt class="literal">nextLayout()</tt> returns <tt class="literal">null</tt> when
  it reaches the end of the paragraph.  The desired width of each line
  is passed as an argument to <tt class="literal">nextLayout()</tt>.  This
  allows the first line of a paragraph to be made shorter than the
  following lines, for example.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">LineBreakMeasurer</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">LineBreakMeasurer</b> (java.text.AttributedCharacterIterator <i class="parameter">text</i>, FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">LineBreakMeasurer</b> (java.text.AttributedCharacterIterator <i class="parameter">text</i>, java.text.BreakIterator <i class="parameter">breakIter</i>, FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">deleteChar</b> (java.text.AttributedCharacterIterator <i class="parameter">newParagraph</i>, int <i class="parameter">deletePos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getPosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertChar</b> (java.text.AttributedCharacterIterator <i class="parameter">newParagraph</i>, int <i class="parameter">insertPos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextLayout <b class="function">nextLayout</b> (float <i class="parameter">maxAdvance</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextLayout <b class="function">nextLayout</b> (float <i class="parameter">wrappingWidth</i>, int <i class="parameter">offsetLimit</i>, boolean <i class="parameter">requireNextWord</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">nextOffset</b> (float <i class="parameter">maxAdvance</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">nextOffset</b> (float <i class="parameter">wrappingWidth</i>, int <i class="parameter">offsetLimit</i>, boolean <i class="parameter">requireNextWord</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPosition</b> (int <i class="parameter">newPosition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>LineMetrics</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1971"></a>
<p>  This class provides access to various measurements for the characters
  in a font.  The name <tt class="literal">LineMetrics</tt> is somewhat
  confusing; it refers to the general line metrics of a font, not
  the metrics of some particular line of text rendered with the font.  
  <tt class="literal">LineMetrics</tt>
  provides more accurate metrics than <tt class="literal">java.awt.FontMetrics</tt>
  and also includes some metrics that are simply not available through that
  class. </p>
<a name="INDEX-1972"></a>
<p>  Obtain a <tt class="literal">LineMetrics</tt> object by calling one of the
  <tt class="literal">getLineMetrics()</tt> methods of <tt class="literal">Font</tt>
  or <tt class="literal">FontMetrics</tt>.  These methods require that you
  supply some form of text to measure.  The returned
  <tt class="literal">LineMetrics</tt> object does not contain the width of
  that text, but the font measurements it does return may depend on the
  content of the text.  For example, the metrics for English text may
  differ from metrics for Japanese text.  (Note, however, that the
  initial implementation from Sun simply ignores the text you specify.)
  If the supplied text contains characters from more than one language,
  the returned metrics may apply only to a prefix of the text.  The
  <tt class="literal">getNumChars()</tt> method returns the length of this
  prefix.</p>
<a name="INDEX-1973"></a>
<a name="INDEX-1974"></a>
<a name="INDEX-1975"></a>
<p>  Once you have obtained a <tt class="literal">LineMetrics</tt> object, you
  can call its various accessor methods to obtain information about the
  font.  <tt class="literal">getAscent()</tt> returns the distance between the
  baseline and the top of the tallest character.
  <tt class="literal">getDescent()</tt> returns the distance between the
  baseline and the bottom of the lowest descender.
  <tt class="literal">getLeading()</tt> returns the recommended interline
  spacing for the font (so named for the strips of lead that used to be
  placed between rows of movable type).  <tt class="literal">getHeight()</tt>
  returns the distance between the baseline of one line and the baseline
  of the next.  It is equal to the sum of the ascent, descent, and
  leading.  <tt class="literal">getUnderlineOffset()</tt> returns the
  recommended position of an underline, relative to the baseline for the
  font, and <tt class="literal">getUnderlineThickness()</tt> returns the
  recommended thickness of an underline.  Two similar methods return the
  position and thickness of lines used to strike through characters in
  the font.</p>
<a name="INDEX-1976"></a>
<a name="INDEX-1977"></a>
<a name="INDEX-1978"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">LineMetrics</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">LineMetrics</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getAscent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getBaselineIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float[ ] <b class="function">getBaselineOffsets</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getDescent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getHeight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getLeading</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getNumChars</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getStrikethroughOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getStrikethroughThickness</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getUnderlineOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getUnderlineThickness</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Font.getLineMetrics(), FontMetrics.getLineMetrics()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MultipleMaster</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1979"></a>
<p> 
  This interface describes capabilities of Type 1 Multiple Master
  fonts.  If a <tt class="literal">Font</tt> 
  object represents a Multiple Master font, it 
  implements the <tt class="literal">MultipleMaster</tt> interface.  Most fonts
  have only one parameter that you can vary: the point size.  A Multiple
  Master font is a generalization that allows you to vary any number of
  design axes of the font.  These design axes may be things such as font
  weight, average glyph width, italic angle, and so forth.  The methods
  of the <tt class="literal">MultipleMaster</tt> interface allow you to query
  the names, defaults, and valid ranges of these design axes and
  derive new versions of the font by specifying values for each axis.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">MultipleMaster</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float[ ] <b class="function">getDesignAxisDefaults</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String[ ] <b class="function">getDesignAxisNames</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float[ ] <b class="function">getDesignAxisRanges</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getNumDesignAxes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Font <b class="function">deriveMMFont</b> (float[ ] <i class="parameter">axes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Font <b class="function">deriveMMFont</b> (float[ ] <i class="parameter">glyphWidths</i>, float <i class="parameter">avgStemWidth</i>, float <i class="parameter">typicalCapHeight</i>, float <i class="parameter">typicalXHeight</i>, float <i class="parameter">italicAngle</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>OpenType</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1980"></a>
<p>  This interface is implemented by <tt class="literal">Font</tt> objects that
  represent OpenType and TrueType fonts.  It allows access to tables of
  raw font data.  You should use this interface only if you are
  intimately familiar with the font data format for OpenType and
  TrueType fonts.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">OpenType</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_ACNT</b> ;</td><td align="right"><i> =1633906292</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_AVAR</b> ;</td><td align="right"><i> =1635148146</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_BASE</b> ;</td><td align="right"><i> =1111577413</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_BDAT</b> ;</td><td align="right"><i> =1650745716</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_BLOC</b> ;</td><td align="right"><i> =1651273571</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_BSLN</b> ;</td><td align="right"><i> =1651731566</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_CFF</b> ;</td><td align="right"><i> =1128678944</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_CMAP</b> ;</td><td align="right"><i> =1668112752</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_CVAR</b> ;</td><td align="right"><i> =1668702578</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_CVT</b> ;</td><td align="right"><i> =1668707360</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_DSIG</b> ;</td><td align="right"><i> =1146308935</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_EBDT</b> ;</td><td align="right"><i> =1161970772</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_EBLC</b> ;</td><td align="right"><i> =1161972803</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_EBSC</b> ;</td><td align="right"><i> =1161974595</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_FDSC</b> ;</td><td align="right"><i> =1717859171</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_FEAT</b> ;</td><td align="right"><i> =1717920116</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_FMTX</b> ;</td><td align="right"><i> =1718449272</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_FPGM</b> ;</td><td align="right"><i> =1718642541</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_FVAR</b> ;</td><td align="right"><i> =1719034226</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_GASP</b> ;</td><td align="right"><i> =1734439792</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_GDEF</b> ;</td><td align="right"><i> =1195656518</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_GLYF</b> ;</td><td align="right"><i> =1735162214</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_GPOS</b> ;</td><td align="right"><i> =1196445523</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_GSUB</b> ;</td><td align="right"><i> =1196643650</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_GVAR</b> ;</td><td align="right"><i> =1735811442</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_HDMX</b> ;</td><td align="right"><i> =1751412088</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_HEAD</b> ;</td><td align="right"><i> =1751474532</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_HHEA</b> ;</td><td align="right"><i> =1751672161</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_HMTX</b> ;</td><td align="right"><i> =1752003704</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_JSTF</b> ;</td><td align="right"><i> =1246975046</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_JUST</b> ;</td><td align="right"><i> =1786082164</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_KERN</b> ;</td><td align="right"><i> =1801810542</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_LCAR</b> ;</td><td align="right"><i> =1818452338</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_LOCA</b> ;</td><td align="right"><i> =1819239265</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_LTSH</b> ;</td><td align="right"><i> =1280594760</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_MAXP</b> ;</td><td align="right"><i> =1835104368</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_MMFX</b> ;</td><td align="right"><i> =1296909912</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_MMSD</b> ;</td><td align="right"><i> =1296913220</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_MORT</b> ;</td><td align="right"><i> =1836020340</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_NAME</b> ;</td><td align="right"><i> =1851878757</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_OPBD</b> ;</td><td align="right"><i> =1836020340</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_OS2</b> ;</td><td align="right"><i> =1330851634</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_PCLT</b> ;</td><td align="right"><i> =1346587732</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_POST</b> ;</td><td align="right"><i> =1886352244</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_PREP</b> ;</td><td align="right"><i> =1886545264</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_PROP</b> ;</td><td align="right"><i> =1886547824</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_TRAK</b> ;</td><td align="right"><i> =1953653099</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_TYP1</b> ;</td><td align="right"><i> =1954115633</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_VDMX</b> ;</td><td align="right"><i> =1447316824</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_VHEA</b> ;</td><td align="right"><i> =1986553185</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TAG_VMTX</b> ;</td><td align="right"><i> =1986884728</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte[ ] <b class="function">getFontTable</b> (String <i class="parameter">strSfntTag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte[ ] <b class="function">getFontTable</b> (int <i class="parameter">sfntTag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte[ ] <b class="function">getFontTable</b> (String <i class="parameter">strSfntTag</i>, int <i class="parameter">offset</i>, int <i class="parameter">count</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract byte[ ] <b class="function">getFontTable</b> (int <i class="parameter">sfntTag</i>, int <i class="parameter">offset</i>, int <i class="parameter">count</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getFontTableSize</b> (String <i class="parameter">strSfntTag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getFontTableSize</b> (int <i class="parameter">sfntTag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getVersion</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ShapeGraphicAttribute</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1981"></a>
<p>  This concrete subclass of <tt class="literal">GraphicAttribute</tt> allows
  an arbitrary shape to be drawn within a string of text.  Create a
  <tt class="literal">ShapeGraphicAttribute</tt> by specifying a shape to draw
  and an alignment (one of the constants defined by
  <tt class="literal">GraphicAttribute</tt>) that specifies how the shape is
  aligned with the rest of the text.  Pass <tt class="literal">true</tt>
  for the third argument, <em class="replaceable">stroke</em>, if the
  shape should simply be drawn, or pass <tt class="literal">false</tt> if the shape
  should be filled.  Use the <tt class="literal">ShapeGraphicAttribute</tt> by
  specifying it as the value of a
  <tt class="literal">TextAttribute.CHAR_REPLACEMENT</tt> attribute in a
  <tt class="literal">java.text.AttributedString</tt> or
  <tt class="literal">java.text.AttributedCharacterIterator</tt>
</p>
<p>  See also <tt class="literal">ImageGraphicAttribute</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">ShapeGraphicAttribute</b> extends GraphicAttribute {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ShapeGraphicAttribute</b> (Shape <i class="parameter">shape</i>, int <i class="parameter">alignment</i>, boolean <i class="parameter">stroke</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final boolean <b class="function">FILL</b> ;</td><td align="right"><i> =false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final boolean <b class="function">STROKE</b> ;</td><td align="right"><i> =true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (ShapeGraphicAttribute <i class="parameter">rhs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding GraphicAttribute</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">draw</b> (Graphics2D <i class="parameter">graphics</i>, float <i class="parameter">x</i>, float <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAdvance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAscent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getDescent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">rhs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->GraphicAttribute-->ShapeGraphicAttribute</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">ShapeGraphicAttribute.equals()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TextAttribute</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-1982"></a>
<p>  This class defines constants that serve as attribute names and
  attribute values for use with
  <tt class="literal">java.text.AttributedString</tt> and
  <tt class="literal">java.text.AttributedCharacterIterator</tt> objects.  The
  constants of type <tt class="literal">TextAttribute</tt> serve as attribute
  names.  The other constants define commonly used values for those
  attributes.  Note that the value of the
  <tt class="literal">CHAR_REPLACEMENT</tt> attribute should be a
  <tt class="literal">GraphicAttribute</tt> object, and the value of the
  <tt class="literal">TRANSFORM</tt> attribute should be a
  
<tt class="literal">TransformAttribute</tt> object.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">TextAttribute</b> extends java.text.AttributedCharacterIterator.Attribute {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">TextAttribute</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">BACKGROUND</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">BIDI_EMBEDDING</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">CHAR_REPLACEMENT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">FAMILY</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">FONT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">FOREGROUND</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">INPUT_METHOD_HIGHLIGHT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">JUSTIFICATION</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">JUSTIFICATION_FULL</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">JUSTIFICATION_NONE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">POSTURE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">POSTURE_OBLIQUE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">POSTURE_REGULAR</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">RUN_DIRECTION</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Boolean <b class="function">RUN_DIRECTION_LTR</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Boolean <b class="function">RUN_DIRECTION_RTL</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">SIZE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">STRIKETHROUGH</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Boolean <b class="function">STRIKETHROUGH_ON</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">SUPERSCRIPT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Integer <b class="function">SUPERSCRIPT_SUB</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Integer <b class="function">SUPERSCRIPT_SUPER</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">SWAP_COLORS</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Boolean <b class="function">SWAP_COLORS_ON</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">TRANSFORM</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">UNDERLINE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Integer <b class="function">UNDERLINE_ON</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">WEIGHT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WEIGHT_BOLD</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WEIGHT_DEMIBOLD</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WEIGHT_DEMILIGHT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WEIGHT_EXTRA_LIGHT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WEIGHT_EXTRABOLD</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WEIGHT_HEAVY</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WEIGHT_LIGHT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WEIGHT_MEDIUM</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WEIGHT_REGULAR</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WEIGHT_SEMIBOLD</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WEIGHT_ULTRABOLD</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextAttribute <b class="function">WIDTH</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WIDTH_CONDENSED</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WIDTH_EXTENDED</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WIDTH_REGULAR</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WIDTH_SEMI_CONDENSED</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Float <b class="function">WIDTH_SEMI_EXTENDED</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding AttributedCharacterIterator.Attribute</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Object <b class="function">readResolve</b> () throws java.io.InvalidObjectException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.text.AttributedCharacterIterator.Attribute(Serializable)-->TextAttribute</tt>
</p>
<p>
<span class="refsect1">Type Of: </span>Too many fields to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TextHitInfo</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1983"></a>
<p> 
  This class encapsulates the position of a character within a string of
  text and the bias, or side, of the character.  The
  <tt class="literal">hitTestChar()</tt> method of 
  <tt class="literal">TextLayout</tt> takes the position of
  a mouse click and returns a <tt class="literal">TextHitInfo</tt> that specifies
  where the click occurred.  </p>
<a name="INDEX-1984"></a>
<p>
<tt class="literal">getCharIndex()</tt> returns the position of the
  character that was hit.  <tt class="literal">getInsertionIndex()</tt>
  returns the position at which characters should be inserted or
  deleted.  This may or may not be the same as 

the value returned by
  <tt class="literal">getCharIndex()</tt>.  <tt class="literal">isLeadingEdge()</tt>
  specifies whether the hit was on the leading edge of the character.</p>
<a name="INDEX-1985"></a>
<p>  If you want to place the
  insertion cursor at the position of the mouse click, it is not
  sufficient to know which character was clicked on; you must also know
  whether the leading edge or the trailing edge of the character was
  clicked on.  This is particularly important when working with
  bidirectional text, such as Arabic or Hebrew.  If the
  <tt class="literal">TextHitInfo</tt> specifies that the trailing edge was
  selected, the insertion cursor should be placed before the
  character.  Otherwise, it should be placed after the character.</p>
<p>  In bidirectional text, positioning the cursor correctly in response
  to user requests to move it left or right can be quite tricky.
  <tt class="literal">TextHitInfo</tt> is also returned by the
  <tt class="literal">getNextLeftHit()</tt> and
  <tt class="literal">getNextRightHit()</tt> methods of 
  <tt class="literal">TextLayout</tt>, to help solve this
  problem.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">TextHitInfo</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static TextHitInfo <b class="function">afterOffset</b> (int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static TextHitInfo <b class="function">beforeOffset</b> (int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static TextHitInfo <b class="function">leading</b> (int <i class="parameter">charIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static TextHitInfo <b class="function">trailing</b> (int <i class="parameter">charIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getCharIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getInsertionIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLeadingEdge</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextHitInfo <b class="function">getOtherHit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (TextHitInfo <i class="parameter">hitInfo</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextHitInfo <b class="function">getOffsetHit</b> (int <i class="parameter">delta</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TextLayout</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i>cloneable</i></b></font></td>
</tr>
</table>
<a name="INDEX-1986"></a>
<p> 
  This class represents and displays a line of styled, possibly
  bidirectional, text and provides algorithms for the visual
  manipulation of that text.  This is a powerful and complex class.
  Many applications prefer to use high-level Swing components,
  such as <tt class="literal">JTextField</tt> and <tt class="literal">JTextPane</tt>,
  to handle text display and editing.  Some applications may want to use
  the lower-level <tt class="literal">GlyphVector</tt> class for maximum text
  drawing speed.</p>
<a name="INDEX-1987"></a>
<p>  Using the <tt class="literal">TextLayout()</tt> constructor, you can create
  a <tt class="literal">TextLayout</tt> from a
  <tt class="literal">java.text.AttributedCharacterIterator</tt>, from a
  string and a font, or from a string and a
  <tt class="literal">java.util.Map</tt> of attributes.  All versions of the
  constructor also require a <tt class="literal">FontRenderContext</tt>,
  obtained with the <tt class="literal">getFontRenderContext()</tt> method of
  <tt class="literal">Graphics2D</tt>.</p>
<a name="INDEX-1988"></a>
<a name="INDEX-1989"></a>
<a name="INDEX-1990"></a>
<p>  Once you have created a <tt class="literal">TextLayout</tt>, you can draw it
  by calling its <tt class="literal">draw()</tt> method.
  <tt class="literal">TextLayout</tt> also provides various other methods to
  support applications that allow the user to edit the text.  If the
  user clicks on the text, you can determine what character was clicked
  on with <tt class="literal">hitTestChar()</tt>, which returns a
  <tt class="literal">TextHitInfo</tt>.  Once you have an insertion position
  specified with a <tt class="literal">TextHitInfo</tt>, you can obtain a
  <tt class="literal">Shape</tt> appropriate for use as an insertion cursor by
  calling <tt class="literal">getCaretShape()</tt>.  The returned shape is
  relative to the origin of the <tt class="literal">TextLayout</tt>, and it
  takes into account whether the text is italic.
  <tt class="literal">getCaretShapes()</tt> is passed a character index within
  the <tt class="literal">TextLayout</tt>; it returns an array of one or two
  <tt class="literal">Shape</tt> objects that represent insertion cursors for
  that character position.  Usually this array contains only one cursor,
  but in bidirectional text, it may contain 

both a primary insertion
  cursor and a secondary insertion cursor.</p>
<a name="INDEX-1991"></a>
<p>  If the user selects text by clicking and dragging with the mouse, you
  can call <tt class="literal">getVisualHighlightShape()</tt> to determine how
  to highlight the selected text.  This method returns a
  <tt class="literal">Shape</tt> object suitable for drawing the
  highlighted regions.  Alternatively, you can use
  <tt class="literal">getLogicalHightlightShape()</tt> to highlight a
  specified contiguous group of characters in the
  <tt class="literal">TextLayout</tt>.  Note, however, that in bidirectional
  text, this logical highlight might map to two visually disjoint
  regions.</p>
<a name="INDEX-1992"></a>
<a name="INDEX-1993"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">TextLayout</b> implements Cloneable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextLayout</b> (java.text.AttributedCharacterIterator <i class="parameter">text</i>, FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextLayout</b> (String <i class="parameter">string</i>, Font <i class="parameter">font</i>, FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextLayout</b> (String <i class="parameter">string</i>, java.util.Map <i class="parameter">attributes</i>, FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final TextLayout.CaretPolicy <b class="function">DEFAULT_CARET_POLICY</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAdvance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAscent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public byte <b class="function">getBaseline</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float[ ] <b class="function">getBaselineOffsets</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getCharacterCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getDescent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getLeading</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLeftToRight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isVertical</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getVisibleAdvance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">draw</b> (Graphics2D <i class="parameter">g2</i>, float <i class="parameter">x</i>, float <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (TextLayout <i class="parameter">rhs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape <b class="function">getBlackBoxBounds</b> (int <i class="parameter">firstEndpoint</i>, int <i class="parameter">secondEndpoint</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float[ ] <b class="function">getCaretInfo</b> (TextHitInfo <i class="parameter">hit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float[ ] <b class="function">getCaretInfo</b> (TextHitInfo <i class="parameter">hit</i>, java.awt.geom.Rectangle2D <i class="parameter">bounds</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape <b class="function">getCaretShape</b> (TextHitInfo <i class="parameter">hit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape <b class="function">getCaretShape</b> (TextHitInfo <i class="parameter">hit</i>, java.awt.geom.Rectangle2D <i class="parameter">bounds</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape[ ] <b class="function">getCaretShapes</b> (int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape[ ] <b class="function">getCaretShapes</b> (int <i class="parameter">offset</i>, java.awt.geom.Rectangle2D <i class="parameter">bounds</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape[ ] <b class="function">getCaretShapes</b> (int <i class="parameter">offset</i>, java.awt.geom.Rectangle2D <i class="parameter">bounds</i>, TextLayout.CaretPolicy <i class="parameter">policy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public byte <b class="function">getCharacterLevel</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextLayout <b class="function">getJustifiedLayout</b> (float <i class="parameter">justificationWidth</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape <b class="function">getLogicalHighlightShape</b> (int <i class="parameter">firstEndpoint</i>, int <i class="parameter">secondEndpoint</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape <b class="function">getLogicalHighlightShape</b> (int <i class="parameter">firstEndpoint</i>, int <i class="parameter">secondEndpoint</i>, java.awt.geom.Rectangle2D <i class="parameter">bounds</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">getLogicalRangesForVisualSelection</b> (TextHitInfo <i class="parameter">firstEndpoint</i>, TextHitInfo <i class="parameter">secondEndpoint</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextHitInfo <b class="function">getNextLeftHit</b> (int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextHitInfo <b class="function">getNextLeftHit</b> (TextHitInfo <i class="parameter">hit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextHitInfo <b class="function">getNextLeftHit</b> (int <i class="parameter">offset</i>, TextLayout.CaretPolicy <i class="parameter">policy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextHitInfo <b class="function">getNextRightHit</b> (int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextHitInfo <b class="function">getNextRightHit</b> (TextHitInfo <i class="parameter">hit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextHitInfo <b class="function">getNextRightHit</b> (int <i class="parameter">offset</i>, TextLayout.CaretPolicy <i class="parameter">policy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape <b class="function">getOutline</b> (java.awt.geom.AffineTransform <i class="parameter">tx</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape <b class="function">getVisualHighlightShape</b> (TextHitInfo <i class="parameter">firstEndpoint</i>, TextHitInfo <i class="parameter">secondEndpoint</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape <b class="function">getVisualHighlightShape</b> (TextHitInfo <i class="parameter">firstEndpoint</i>, TextHitInfo <i class="parameter">secondEndpoint</i>, java.awt.geom.Rectangle2D <i class="parameter">bounds</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextHitInfo <b class="function">getVisualOtherHit</b> (TextHitInfo <i class="parameter">hit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextHitInfo <b class="function">hitTestChar</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextHitInfo <b class="function">hitTestChar</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, java.awt.geom.Rectangle2D <i class="parameter">bounds</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">handleJustify</b> (float <i class="parameter">justificationWidth</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->TextLayout(Cloneable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">TextLayout.equals(), TextLayout.CaretPolicy.getStrongCaret()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">LineBreakMeasurer.nextLayout(), TextLayout.getJustifiedLayout()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TextLayout.CaretPolicy</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1994"></a>
<p>  This class defines a policy for deciding which insertion position is
  the dominant one in bidirectional text.  Most applications never need
  to use this class.</p>
<p>  If you want to specify a policy other than the default, you should
  subclass this class and override <tt class="literal">getStrongCaret()</tt>
  to choose between two <tt class="literal">TextHitInfo</tt> objects,
  returning the one that represents the dominant insertion position.
  Then pass an instance of your subclass to the
  <tt class="literal">getCaretShapes()</tt>,
  <tt class="literal">getNextLeftHit()</tt>, and
  <tt class="literal">getNextRightHit()</tt> methods of
  <tt class="literal">TextLayout</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">TextLayout.CaretPolicy</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CaretPolicy</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TextHitInfo <b class="function">getStrongCaret</b> (TextHitInfo <i class="parameter">hit1</i>, TextHitInfo <i class="parameter">hit2</i>, TextLayout <i class="parameter">layout</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">TextLayout.{getCaretShapes(), getNextLeftHit(), getNextRightHit()}</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">TextLayout.DEFAULT_CARET_POLICY</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TextLine.TextLineMetrics</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1995"></a>
<p>  This public inner class is defined within a private class.  It was
  inadvertently included in the public API of
  <tt class="literal">java.awt.font</tt> but should be considered private.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static final class <b class="classname">TextLine.TextLineMetrics</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextLineMetrics</b> (float <i class="parameter">ascent</i>, float <i class="parameter">descent</i>, float <i class="parameter">leading</i>, float <i class="parameter">advance</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final float <b class="function">advance</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final float <b class="function">ascent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final float <b class="function">descent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final float <b class="function">leading</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TransformAttribute</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.font</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-1996"></a>
<p>  This class is a simple immutable wrapper around a
  <tt class="literal">java.awt.geom.AffineTransform</tt>.  This wrapper makes
  it safe to use a transform as the value of a
  <tt class="literal">TextAttribute.TRANSFORM</tt> attribute.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">TransformAttribute</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TransformAttribute</b> (java.awt.geom.AffineTransform <i class="parameter">transform</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.geom.AffineTransform <b class="function">getTransform</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->TransformAttribute(Serializable)</tt>
</p>
</div>
<a name="INDEX-1997"></a>
<a name="INDEX-1998"></a>
<a name="INDEX-1999"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch14_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch14_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch16_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch16_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">14.1. The java.awt.event Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">16. The java.awt.geom Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
