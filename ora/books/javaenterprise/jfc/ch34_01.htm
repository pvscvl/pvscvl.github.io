<html>
<head>
<title>The javax.swing.tree Package (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The javax.swing.tree Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch33_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch33_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch35_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch35_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 34.  The javax.swing.tree Package</h1>

<p> 
  The <tt class="literal">javax.swing.tree</tt> 
  package defines classes and interfaces used with the
  <tt class="literal">javax.swing.JTree</tt> component.  The
  <tt class="literal">TreeModel</tt> interface defines the data to be
  displayed by a <tt class="literal">JTree</tt> component.
  <tt class="literal">DefaultTreeModel</tt> provides a commonly used
  implementation of this interface; it is implemented in terms of the
  <tt class="literal">TreeNode</tt> and
  <tt class="literal">MutableTreeNode</tt> interfaces. The
  <tt class="literal">TreeCellRenderer</tt> and <tt class="literal">TreeCellEditor</tt>
  interfaces are implemented by objects that can display or edit cells
  in the tree, using a Swing component as a template.
  <a href="#jfcnut-ch-javax.swing.tree-fig-1">Figure 34-1</a> shows the class hierarchy of
  this package.
  See <a href="ch03_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch03_01.htm">Chapter 3, "Swing

Programming Topics"</a>, for a discussion of and example using
  <tt class="literal">JTree</tt> and the <tt class="literal">javax.swing.tree</tt>
  package.</p>
<a name="INDEX-3187"></a>
<a name="INDEX-3188"></a>
<a name="jfcnut-ch-javax.swing.tree-fig-1"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.3401.gif" webstripperlinkwas="figs/jfcn.3401.gif"></div>
<h4 class="objtitle">Figure 34-1. The javax.swing.tree package</h4>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractLayoutCache</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3189"></a>
<p>  This abstract class defines the methods that must be implemented by a
  class that wants to cache a <tt class="literal">JTree</tt> layout.  This
  class is used by the <tt class="literal">JTree</tt> UI delegate.
  Applications never need to use or subclass this class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">AbstractLayoutCache</b> implements RowMapper {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AbstractLayoutCache</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreeModel <b class="function">getModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModel</b> (TreeModel <i class="parameter">newModel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AbstractLayoutCache.NodeDimensions <b class="function">getNodeDimensions</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setNodeDimensions</b> (AbstractLayoutCache.NodeDimensions <i class="parameter">nd</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getPreferredHeight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isRootVisible</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRootVisible</b> (boolean <i class="parameter">rootVisible</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getRowCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRowHeight</b> ();</td><td align="right"><i></i></td>
</tr>

<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRowHeight</b> (int <i class="parameter">rowHeight</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreeSelectionModel <b class="function">getSelectionModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionModel</b> (TreeSelectionModel <i class="parameter">newLSM</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.Rectangle <b class="function">getBounds</b> (TreePath <i class="parameter">path</i>, java.awt.Rectangle <i class="parameter">placeIn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getExpandedState</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TreePath <b class="function">getPathClosestTo</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TreePath <b class="function">getPathForRow</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getPreferredWidth</b> (java.awt.Rectangle <i class="parameter">bounds</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getRowForPath</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getVisibleChildCount</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Enumeration <b class="function">getVisiblePathsFrom</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">invalidatePathBounds</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">invalidateSizes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isExpanded</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setExpandedState</b> (TreePath <i class="parameter">path</i>, boolean <i class="parameter">isExpanded</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">treeNodesChanged</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">treeNodesInserted</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">treeNodesRemoved</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">treeStructureChanged</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing RowMapper</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">getRowsForPaths</b> (TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Rectangle <b class="function">getNodeDimensions</b> (Object <i class="parameter">value</i>, int <i class="parameter">row</i>, int <i class="parameter">depth</i>, boolean <i class="parameter">expanded</i>, java.awt.Rectangle <i class="parameter">placeIn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isFixedRowHeight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AbstractLayoutCache.NodeDimensions <b class="function">nodeDimensions</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">rootVisible</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">rowHeight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected TreeModel <b class="function">treeModel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected TreeSelectionModel <b class="function">treeSelectionModel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractLayoutCache(RowMapper)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">FixedHeightLayoutCache, VariableHeightLayoutCache</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractLayoutCache.NodeDimensions</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3190"></a>
<p>  This class defines a method that can compute the dimensions of a node
  in a <tt class="literal">JTree</tt>.  It is used internally by
  <tt class="literal">AbstractLayoutCache</tt> and its subclasses and by the
  <tt class="literal">JTree</tt> UI delegate.  Applications never need to use
  it.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static class <b class="classname">AbstractLayoutCache.NodeDimensions</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">NodeDimensions</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.Rectangle <b class="function">getNodeDimensions</b> (Object <i class="parameter">value</i>, int <i class="parameter">row</i>, int <i class="parameter">depth</i>, boolean <i class="parameter">expanded</i>, java.awt.Rectangle <i class="parameter">bounds</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AbstractLayoutCache.setNodeDimensions(), VariableHeightLayoutCache.setNodeDimensions()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AbstractLayoutCache.getNodeDimensions()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">AbstractLayoutCache.nodeDimensions</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultMutableTreeNode</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3191"></a>
<p>  This class implements the <tt class="literal">MutableTreeNode</tt>
  interface and adds a number of useful tree-manipulation methods.
  When you create a <tt class="literal">DefaultMutableTreeNode</tt>, you can
  optionally specify a user object--the data associated with the
  node--and a <tt class="literal">boolean</tt> 
  value that specifies whether the node is allowed
  to have children.  <tt class="literal">DefaultMutableTreeNode</tt>
  implements the <tt class="literal">MutableTreeNode</tt> methods that allow
  the parent and children of the node to be set and the
  <tt class="literal">TreeNode</tt> methods that allow the parent and children
  to be queried.  In addition to these basic methods,
  <tt class="literal">DefaultMutableTreeNode</tt> includes a number of useful
  tree-manipulation methods, such as
  <tt class="literal">breadthFirstEnumeration()</tt> and
  <tt class="literal">depthFirstEnumeration()</tt>, which recursively
  enumerate the children of a node in breadth-first or depth-first order,
  respectively.
  See also <tt class="literal">DefaultTreeModel</tt>, the class with which
  <tt class="literal">DefaultMutableTreeNode</tt> is designed to work.</p>
<a name="INDEX-3192"></a>
<a name="INDEX-3193"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultMutableTreeNode</b> implements Cloneable, MutableTreeNode, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultMutableTreeNode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultMutableTreeNode</b> (Object <i class="parameter">userObject</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultMutableTreeNode</b> (Object <i class="parameter">userObject</i>, boolean <i class="parameter">allowsChildren</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final java.util.Enumeration <b class="function">EMPTY_ENUMERATION</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getAllowsChildren</b> ();</td><td align="right"><i> Implements:TreeNode default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAllowsChildren</b> (boolean <i class="parameter">allows</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getChildCount</b> ();</td><td align="right"><i> Implements:TreeNode default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDepth</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreeNode <b class="function">getFirstChild</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public DefaultMutableTreeNode <b class="function">getFirstLeaf</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreeNode <b class="function">getLastChild</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public DefaultMutableTreeNode <b class="function">getLastLeaf</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLeaf</b> ();</td><td align="right"><i> Implements:TreeNode default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLeafCount</b> ();</td><td align="right"><i> default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLevel</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public DefaultMutableTreeNode <b class="function">getNextLeaf</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public DefaultMutableTreeNode <b class="function">getNextNode</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public DefaultMutableTreeNode <b class="function">getNextSibling</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreeNode <b class="function">getParent</b> ();</td><td align="right"><i> Implements:TreeNode default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setParent</b> (MutableTreeNode <i class="parameter">newParent</i>);</td><td align="right"><i> Implements:MutableTreeNode</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreeNode[ ] <b class="function">getPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public DefaultMutableTreeNode <b class="function">getPreviousLeaf</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public DefaultMutableTreeNode <b class="function">getPreviousNode</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public DefaultMutableTreeNode <b class="function">getPreviousSibling</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreeNode <b class="function">getRoot</b> ();</td><td align="right"><i> default:DefaultMutableTreeNode</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isRoot</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSiblingCount</b> ();</td><td align="right"><i> default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getUserObject</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUserObject</b> (Object <i class="parameter">userObject</i>);</td><td align="right"><i> Implements:MutableTreeNode</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getUserObjectPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (MutableTreeNode <i class="parameter">newChild</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">breadthFirstEnumeration</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">depthFirstEnumeration</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreeNode <b class="function">getChildAfter</b> (TreeNode <i class="parameter">aChild</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreeNode <b class="function">getChildBefore</b> (TreeNode <i class="parameter">aChild</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreeNode <b class="function">getSharedAncestor</b> (DefaultMutableTreeNode <i class="parameter">aNode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isNodeAncestor</b> (TreeNode <i class="parameter">anotherNode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isNodeChild</b> (TreeNode <i class="parameter">aNode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isNodeDescendant</b> (DefaultMutableTreeNode <i class="parameter">anotherNode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isNodeRelated</b> (DefaultMutableTreeNode <i class="parameter">aNode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isNodeSibling</b> (TreeNode <i class="parameter">anotherNode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">pathFromAncestorEnumeration</b> (TreeNode <i class="parameter">ancestor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">postorderEnumeration</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">preorderEnumeration</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAllChildren</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MutableTreeNode</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insert</b> (MutableTreeNode <i class="parameter">newChild</i>, int <i class="parameter">childIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (MutableTreeNode <i class="parameter">aChild</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (int <i class="parameter">childIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeFromParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setParent</b> (MutableTreeNode <i class="parameter">newParent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUserObject</b> (Object <i class="parameter">userObject</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TreeNode</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">children</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getAllowsChildren</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreeNode <b class="function">getChildAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getChildCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIndex</b> (TreeNode <i class="parameter">aChild</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreeNode <b class="function">getParent</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLeaf</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected TreeNode[ ] <b class="function">getPathToRoot</b> (TreeNode <i class="parameter">aNode</i>, int <i class="parameter">depth</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">allowsChildren</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Vector <b class="function">children</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected MutableTreeNode <b class="function">parent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Object <b class="function">userObject</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DefaultMutableTreeNode(Cloneable,MutableTreeNode(TreeNode),Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">JTree.DynamicUtilTreeNode</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTree.DynamicUtilTreeNode.createChildren(), DefaultMutableTreeNode.{getSharedAncestor(), isNodeDescendant(), isNodeRelated()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DefaultMutableTreeNode.{getFirstLeaf(), getLastLeaf(), getNextLeaf(), getNextNode(), getNextSibling(), getPreviousLeaf(), getPreviousNode(), getPreviousSibling()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultTreeCellEditor</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3194"></a>
<p>  This <tt class="literal">TreeCellEditor</tt> implementation is the
  default editor for editing simple tree node values.  By default, it
  displays the standard icons for the tree node and allows the user to
  edit the node using a <tt class="literal">JTextField</tt>.  
  When you create a <tt class="literal">DefaultTreeCellEditor</tt>, you supply
  a <tt class="literal">DefaultTreeCellRenderer</tt> and a
  <tt class="literal">TreeCellEditor</tt>.  The
  <tt class="literal">DefaultTreeCellEditor</tt> combines the icon display
  capability of the renderer with the editing capability of the
  <tt class="literal">TreeCellEditor</tt> into a single functional
  <tt class="literal">TreeCellEditor</tt>.  Often, you can use a
  <tt class="literal">javax.swing.DefaultCellEditor</tt> as the internal
  <tt class="literal">TreeCellEditor</tt>.  Or, if you do not specify a
  <tt class="literal">TreeCellEditor</tt>, a default one that
  allows the user to edit text values is used.
  <tt class="literal">DefaultTreeCellEditor</tt> allows the user to edit a
  cell by triple-clicking on the node.  You can change this behavior
  by subclassing and overriding the
  <tt class="literal">canEditImmediately()</tt> method.</p>
<a name="INDEX-3195"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultTreeCellEditor</b> implements java.awt.event.ActionListener, TreeCellEditor, javax.swing.event.TreeSelectionListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultTreeCellEditor</b> (JTree <i class="parameter">tree</i>, DefaultTreeCellRenderer <i class="parameter">renderer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultTreeCellEditor</b> (JTree <i class="parameter">tree</i>, DefaultTreeCellRenderer <i class="parameter">renderer</i>, TreeCellEditor <i class="parameter">editor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addCellEditorListener</b> (javax.swing.event.CellEditorListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:CellEditor</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeCellEditorListener</b> (javax.swing.event.CellEditorListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:CellEditor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getBorderSelectionColor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Font <b class="function">getFont</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBorderSelectionColor</b> (java.awt.Color <i class="parameter">newColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFont</b> (java.awt.Font <i class="parameter">font</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ActionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing CellEditor</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addCellEditorListener</b> (javax.swing.event.CellEditorListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">cancelCellEditing</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getCellEditorValue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isCellEditable</b> (java.util.EventObject <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeCellEditorListener</b> (javax.swing.event.CellEditorListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">shouldSelectCell</b> (java.util.EventObject <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">stopCellEditing</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TreeCellEditor</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getTreeCellEditorComponent</b> (JTree <i class="parameter">tree</i>, Object <i class="parameter">value</i>, boolean <i class="parameter">isSelected</i>, boolean <i class="parameter">expanded</i>, boolean <i class="parameter">leaf</i>, int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TreeSelectionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">valueChanged</b> (javax.swing.event.TreeSelectionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">canEditImmediately</b> (java.util.EventObject <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Container <b class="function">createContainer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected TreeCellEditor <b class="function">createTreeCellEditor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">determineOffset</b> (JTree <i class="parameter">tree</i>, Object <i class="parameter">value</i>, boolean <i class="parameter">isSelected</i>, boolean <i class="parameter">expanded</i>, boolean <i class="parameter">leaf</i>, int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">inHitRegion</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">prepareForEditing</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setTree</b> (JTree <i class="parameter">newTree</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">shouldStartEditingTimer</b> (java.util.EventObject <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">startEditingTimer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">borderSelectionColor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">canEdit</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Component <b class="function">editingComponent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Container <b class="function">editingContainer</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Icon <b class="function">editingIcon</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Font <b class="function">font</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient TreePath <b class="function">lastPath</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient int <b class="function">lastRow</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient int <b class="function">offset</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected TreeCellEditor <b class="function">realEditor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected DefaultTreeCellRenderer <b class="function">renderer</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Timer <b class="function">timer</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient JTree <b class="function">tree</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DefaultTreeCellEditor(java.awt.event.ActionListener(java.util.EventListener),TreeCellEditor(CellEditor),javax.swing.event.TreeSelectionListener(java.util.EventListener))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultTreeCellEditor.DefaultTextField</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(text) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-3196"></a>
<p>  This class is a customized version of <tt class="literal">JTextField</tt>
  used by <tt class="literal">DefaultTreeCellEditor</tt> if no custom
  <tt class="literal">TreeCellEditor</tt> is supplied.  Applications never
  need to use it.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultTreeCellEditor.DefaultTextField</b> extends JTextField {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultTextField</b> (javax.swing.border.Border <i class="parameter">border</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.border.Border <b class="function">getBorder</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Font <b class="function">getFont</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i> Overrides:JTextField</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.border.Border <b class="function">border</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultTreeCellEditor.EditorContainer</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i>serializable swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-3197"></a>
<p>  This simple container implementation is used internally by
  <tt class="literal">DefaultTreeCellEditor</tt> to combine the icons of its
  <tt class="literal">DefaultTreeCellRenderer</tt> with the editing component
  of the supplied <tt class="literal">TreeCellRenderer</tt> or the
  default text field.  Applications never need to use this class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultTreeCellEditor.EditorContainer</b> extends Container {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">EditorContainer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">EditorContainer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">doLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultTreeCellRenderer</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-3198"></a>
<p>  This <tt class="literal">JLabel</tt> subclass implements the
  <tt class="literal">TreeCellRenderer</tt> methods and is the default cell
  renderer used by <tt class="literal">JTree</tt>.  It displays an icon for
  the node and the string that results from calling the
  <tt class="literal">toString()</tt> method of the node value.  The various
  properties of this class exist primarily to allow customization of
  node colors and icons.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultTreeCellRenderer</b> extends JLabel implements TreeCellRenderer {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultTreeCellRenderer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getBackgroundNonSelectionColor</b> ();</td><td align="right"><i> default:ColorUIResource</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBackgroundNonSelectionColor</b> (java.awt.Color <i class="parameter">newColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getBackgroundSelectionColor</b> ();</td><td align="right"><i> default:ColorUIResource</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBackgroundSelectionColor</b> (java.awt.Color <i class="parameter">newColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getBorderSelectionColor</b> ();</td><td align="right"><i> default:ColorUIResource</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBorderSelectionColor</b> (java.awt.Color <i class="parameter">newColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getClosedIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setClosedIcon</b> (Icon <i class="parameter">newIcon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getDefaultClosedIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getDefaultLeafIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getDefaultOpenIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getLeafIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLeafIcon</b> (Icon <i class="parameter">newIcon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getOpenIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setOpenIcon</b> (Icon <i class="parameter">newIcon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getTextNonSelectionColor</b> ();</td><td align="right"><i> default:ColorUIResource</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTextNonSelectionColor</b> (java.awt.Color <i class="parameter">newColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getTextSelectionColor</b> ();</td><td align="right"><i> default:ColorUIResource</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTextSelectionColor</b> (java.awt.Color <i class="parameter">newColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TreeCellRenderer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getTreeCellRendererComponent</b> (JTree <i class="parameter">tree</i>, Object <i class="parameter">value</i>, boolean <i class="parameter">sel</i>, boolean <i class="parameter">expanded</i>, boolean <i class="parameter">leaf</i>, int <i class="parameter">row</i>, boolean <i class="parameter">hasFocus</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBackground</b> (java.awt.Color <i class="parameter">color</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFont</b> (java.awt.Font <i class="parameter">font</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">backgroundNonSelectionColor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">backgroundSelectionColor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">borderSelectionColor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Icon <b class="function">closedIcon</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Icon <b class="function">leafIcon</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Icon <b class="function">openIcon</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">selected</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">textNonSelectionColor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">textSelectionColor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JLabel(Accessible,SwingConstants)-->DefaultTreeCellRenderer(TreeCellRenderer)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DefaultTreeCellEditor.DefaultTreeCellEditor()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DefaultTreeCellEditor.renderer</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultTreeModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i>serializable model</i></b></font></td>
</tr>
</table>
<a name="INDEX-3199"></a>
<a name="INDEX-3200"></a>
<p> 
  This class implements the <tt class="literal">TreeModel</tt> interface for
  <tt class="literal">TreeNode</tt> or <tt class="literal">MutableTreeNode</tt>
  objects.  When you create a <tt class="literal">DefaultTreeModel</tt>, you
  specify the <tt class="literal">TreeNode</tt> at the root of the tree.  You
  also can specify how the tree distinguishes leaf nodes from nonleaf
  nodes.  Usually, <tt class="literal">DefaultTreeModel</tt> calls the
  <tt class="literal">isLeaf()</tt> method of a <tt class="literal">TreeNode</tt> to
  determine whether it is a leaf.  For the commonly used
  <tt class="literal">DefaultMutableTreeNode</tt> class,
  <tt class="literal">isLeaf()</tt> returns <tt class="literal">true</tt> if the
  node has no children.  On the other hand, if the
  <tt class="literal">asksAllowsChildren</tt> property is set to
  <tt class="literal">true</tt>, <tt class="literal">DefaultTreeModel</tt> 
  calls the <tt class="literal">getAllowsChildren()</tt> method of a
  <tt class="literal">TreeNode</tt> instead. </p>
<a name="INDEX-3201"></a>
<p>  The <tt class="literal">TreeModel</tt> interface allows registration of
  <tt class="literal">javax.swing.event.TreeModelListener</tt> objects that
  are notified when the tree data or structure is changed.
  <tt class="literal">DefaultTreeModel</tt> provides a number of methods that
  make this notification simple. If you modify any of the
  <tt class="literal">TreeNode</tt> objects contained within a
  <tt class="literal">DefaultTreeModel</tt> after that model is in use, call
  one of the methods beginning with "node" or 
  "nodes".  These methods send out the appropriate
  <tt class="literal">javax.swing.event.TreeModelEvent</tt> notifications.
  If your modifications consist solely of inserting and removing
  nodes, you can use   <tt class="literal">insertNodeInto()</tt> and
  <tt class="literal">removeNodeFromParent()</tt>.  These methods make the
  appropriate modifications to the specified
  <tt class="literal">MutableTreeNode</tt> objects and also send out
  notification events. </p>
<a name="INDEX-3202"></a>
<a name="INDEX-3203"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultTreeModel</b> implements Serializable, TreeModel {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultTreeModel</b> (TreeNode <i class="parameter">root</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultTreeModel</b> (TreeNode <i class="parameter">root</i>, boolean <i class="parameter">asksAllowsChildren</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addTreeModelListener</b> (javax.swing.event.TreeModelListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:TreeModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeTreeModelListener</b> (javax.swing.event.TreeModelListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:TreeModel</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">asksAllowsChildren</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreeNode[ ] <b class="function">getPathToRoot</b> (TreeNode <i class="parameter">aNode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertNodeInto</b> (MutableTreeNode <i class="parameter">newChild</i>, MutableTreeNode <i class="parameter">parent</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">nodeChanged</b> (TreeNode <i class="parameter">node</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">nodesChanged</b> (TreeNode <i class="parameter">node</i>, int[ ] <i class="parameter">childIndices</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">nodeStructureChanged</b> (TreeNode <i class="parameter">node</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">nodesWereInserted</b> (TreeNode <i class="parameter">node</i>, int[ ] <i class="parameter">childIndices</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">nodesWereRemoved</b> (TreeNode <i class="parameter">node</i>, int[ ] <i class="parameter">childIndices</i>, Object[ ] <i class="parameter">removedChildren</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">reload</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">reload</b> (TreeNode <i class="parameter">node</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeNodeFromParent</b> (MutableTreeNode <i class="parameter">node</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAsksAllowsChildren</b> (boolean <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRoot</b> (TreeNode <i class="parameter">root</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TreeModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addTreeModelListener</b> (javax.swing.event.TreeModelListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getChild</b> (Object <i class="parameter">parent</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getChildCount</b> (Object <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIndexOfChild</b> (Object <i class="parameter">parent</i>, Object <i class="parameter">child</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getRoot</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLeaf</b> (Object <i class="parameter">node</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeTreeModelListener</b> (javax.swing.event.TreeModelListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">valueForPathChanged</b> (TreePath <i class="parameter">path</i>, Object <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireTreeNodesChanged</b> (Object <i class="parameter">source</i>, Object[ ] <i class="parameter">path</i>, int[ ] <i class="parameter">childIndices</i>, Object[ ] <i class="parameter">children</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireTreeNodesInserted</b> (Object <i class="parameter">source</i>, Object[ ] <i class="parameter">path</i>, int[ ] <i class="parameter">childIndices</i>, Object[ ] <i class="parameter">children</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireTreeNodesRemoved</b> (Object <i class="parameter">source</i>, Object[ ] <i class="parameter">path</i>, int[ ] <i class="parameter">childIndices</i>, Object[ ] <i class="parameter">children</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireTreeStructureChanged</b> (Object <i class="parameter">source</i>, Object[ ] <i class="parameter">path</i>, int[ ] <i class="parameter">childIndices</i>, Object[ ] <i class="parameter">children</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected TreeNode[ ] <b class="function">getPathToRoot</b> (TreeNode <i class="parameter">aNode</i>, int <i class="parameter">depth</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">asksAllowsChildren</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected TreeNode <b class="function">root</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DefaultTreeModel(Serializable,TreeModel)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultTreeSelectionModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable model</i></b></font></td>
</tr>
</table>
<a name="INDEX-3204"></a>
<a name="INDEX-3205"></a>
<a name="INDEX-3206"></a>
<a name="INDEX-3207"></a>
<a name="INDEX-3208"></a>
<a name="INDEX-3209"></a>
<a name="INDEX-3210"></a>
<a name="INDEX-3211"></a>
<p>  This class is used by default to maintain the selection state for the
  <tt class="literal">JTree</tt> component.  Methods such as
  <tt class="literal">addSelectionPaths()</tt>,
  <tt class="literal">removeSelectionPaths()</tt>,
  <tt class="literal">setSelectionPaths()</tt>,
  <tt class="literal">getSelectionPaths()</tt>,
  <tt class="literal">clearSelection()</tt>,
  <tt class="literal">isPathSelected()</tt>, and
  <tt class="literal">isSelectionEmpty()</tt> can be used to manipulate and
  query the selection state.  However, application programmers
  generally call similarly named methods of <tt class="literal">JTree</tt>,
  rather than interacting with the
  <tt class="literal">DefaultTreeSelectionModel</tt> directly.
  <tt class="literal">setSelectionMode()</tt> is an important method that does
  not have a <tt class="literal">JTree</tt> analog.  Its argument should be
  one of the three constants defined by the
  <tt class="literal">TreeSelectionModel</tt> interface.  These three
  constants allow a single item to be selected, a single contiguous
  range of items to be selected, or any number of possibly discontiguous
  items to be selected.
  <tt class="literal">DefaultTreeSelectionModel</tt> has methods for
  setting and querying the selection in terms of rows.  These methods
  are intended for internal use by <tt class="literal">JTree</tt> and its UI
  delegate object.  They typically are not useful to application
  programmers.</p>
<a name="INDEX-3212"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultTreeSelectionModel</b> implements Cloneable, Serializable, TreeSelectionModel {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultTreeSelectionModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">SELECTION_MODE_PROPERTY</b> ;</td><td align="right"><i> ="selectionMode"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> Implements:TreeSelectionModel synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> Implements:TreeSelectionModel synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addTreeSelectionListener</b> (javax.swing.event.TreeSelectionListener <i class="parameter">x</i>);</td><td align="right"><i> Implements:TreeSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeTreeSelectionListener</b> (javax.swing.event.TreeSelectionListener <i class="parameter">x</i>);</td><td align="right"><i> Implements:TreeSelectionModel</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TreeSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSelectionPath</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSelectionPaths</b> (TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addTreeSelectionListener</b> (javax.swing.event.TreeSelectionListener <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clearSelection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreePath <b class="function">getLeadSelectionPath</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLeadSelectionRow</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaxSelectionRow</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinSelectionRow</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public RowMapper <b class="function">getRowMapper</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectionCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectionMode</b> ();</td><td align="right"><i> default:4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreePath <b class="function">getSelectionPath</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreePath[ ] <b class="function">getSelectionPaths</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">getSelectionRows</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isPathSelected</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isRowSelected</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelectionEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeSelectionPath</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeSelectionPaths</b> (TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeTreeSelectionListener</b> (javax.swing.event.TreeSelectionListener <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">resetRowSelection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRowMapper</b> (RowMapper <i class="parameter">newMapper</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionMode</b> (int <i class="parameter">mode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionPath</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionPaths</b> (TreePath[ ] <i class="parameter">pPaths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> () throws CloneNotSupportedException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">arePathsContiguous</b> (TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">canPathsBeAdded</b> (TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">canPathsBeRemoved</b> (TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireValueChanged</b> (javax.swing.event.TreeSelectionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">insureRowContinuity</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">insureUniqueness</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">notifyPathChange</b> (java.util.Vector <i class="parameter">changedPaths</i>, TreePath <i class="parameter">oldLeadSelection</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">updateLeadIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.SwingPropertyChangeSupport <b class="function">changeSupport</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">leadIndex</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected TreePath <b class="function">leadPath</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">leadRow</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected DefaultListSelectionModel <b class="function">listSelectionModel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient RowMapper <b class="function">rowMapper</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected TreePath[ ] <b class="function">selection</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">selectionMode</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DefaultTreeSelectionModel(Cloneable,Serializable,TreeSelectionModel)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">JTree.EmptySelectionModel</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ExpandVetoException</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>  Thrown by one of the methods of a 
  <tt class="literal">TreeWillExpandListener</tt> object to veto a proposed
  expansion or collapse of a node.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ExpandVetoException</b> extends Exception {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ExpandVetoException</b> (javax.swing.event.TreeExpansionEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ExpandVetoException</b> (javax.swing.event.TreeExpansionEvent <i class="parameter">event</i>, String <i class="parameter">message</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.TreeExpansionEvent <b class="function">event</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->ExpandVetoException</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span><tt class="literal">JTree.{fireTreeWillCollapse(), fireTreeWillExpand()}, javax.swing.event.TreeWillExpandListener.{treeWillCollapse(), treeWillExpand()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FixedHeightLayoutCache</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3213"></a>
<p>  This class caches the layout of nodes in a <tt class="literal">JTree</tt>.
  It makes the simplifying assumption that all nodes in the tree have
  the same height.  This class is used by the <tt class="literal">JTree</tt>
  UI delegate; applications never need to use it.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">FixedHeightLayoutCache</b> extends AbstractLayoutCache {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FixedHeightLayoutCache</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractLayoutCache</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getBounds</b> (TreePath <i class="parameter">path</i>, java.awt.Rectangle <i class="parameter">placeIn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getExpandedState</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRowCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreePath <b class="function">getPathClosestTo</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreePath <b class="function">getPathForRow</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRowForPath</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getVisibleChildCount</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">getVisiblePathsFrom</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">invalidatePathBounds</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">invalidateSizes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isExpanded</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setExpandedState</b> (TreePath <i class="parameter">path</i>, boolean <i class="parameter">isExpanded</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModel</b> (TreeModel <i class="parameter">newModel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRootVisible</b> (boolean <i class="parameter">rootVisible</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRowHeight</b> (int <i class="parameter">rowHeight</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">treeNodesChanged</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">treeNodesInserted</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">treeNodesRemoved</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">treeStructureChanged</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractLayoutCache(RowMapper)-->FixedHeightLayoutCache</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MutableTreeNode</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3214"></a>
<p>  This interface extends <tt class="literal">TreeNode</tt> and adds methods
  for inserting and removing children of a node and for setting the
  parent of a node.  Additionally, it defines a method for associating
  an arbitrary object with a node.  This user object is the data
  associated with the node, data that is displayed in some way by
  the <tt class="literal">JTree</tt> component.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">MutableTreeNode</b> extends TreeNode {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">insert</b> (MutableTreeNode <i class="parameter">child</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">remove</b> (MutableTreeNode <i class="parameter">node</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">remove</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeFromParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setParent</b> (MutableTreeNode <i class="parameter">newParent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setUserObject</b> (Object <i class="parameter">object</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(MutableTreeNode(TreeNode))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultMutableTreeNode</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DefaultMutableTreeNode.{add(), insert(), remove(), setParent()}, DefaultTreeModel.{insertNodeInto(), removeNodeFromParent()}, MutableTreeNode.{insert(), remove(), setParent()}</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DefaultMutableTreeNode.parent</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RowMapper</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3215"></a>
<p>  This interface defines a method that maps from
  <tt class="literal">TreePath</tt> nodes in a <tt class="literal">JTree</tt> to 
  numerical rows in the tree presentation.  Because the arrangement of
  items in a tree is specific to the look-and-feel,
  <tt class="literal">RowMapper</tt> implementations are private to the
  look-and-feel.  Application programmers never have to use or implement
  this interface. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">RowMapper</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int[ ] <b class="function">getRowsForPaths</b> (TreePath[ ] <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AbstractLayoutCache</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DefaultTreeSelectionModel.setRowMapper(), TreeSelectionModel.setRowMapper()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DefaultTreeSelectionModel.getRowMapper(), TreeSelectionModel.getRowMapper()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DefaultTreeSelectionModel.rowMapper</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TreeCellEditor</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3216"></a>
<a name="INDEX-3217"></a>
<p>  This interface extends the
  <tt class="literal">javax.swing.CellEditor</tt> interface to make it
  specific to the <tt class="literal">JTree</tt> component.
  <tt class="literal">getTreeCellEditorComponent()</tt> should initialize and
  return a shared component or container (typically a
  <tt class="literal">JComponent</tt>) that is to be used for editing the
  value of a tree node.
  The second argument to <tt class="literal">getTreeCellEditorComponent()</tt>
  is the tree node that is to be edited.  If you use the
  <tt class="literal">DefaultTreeModel</tt>, this argument is a
  <tt class="literal">TreeNode</tt>.  Note that this argument is the node
  itself, <em class="emphasis">not</em> the user object associated with the
  <tt class="literal">TreeNode</tt>.
  The additional arguments passed to
  <tt class="literal">getTreeCellEditorComponent()</tt> can be used to further
  configure the cell editor component, as desired.  A 
  <tt class="literal">TreeCellEditor</tt> must also implement all the methods
  defined by <tt class="literal">CellEditor</tt>, and it must correctly implement
  the protocol for communication between a <tt class="literal">JComponent</tt>
  and its cell editor.  

Most importantly, it must generate a
  <tt class="literal">javax.swing.event.ChangeEvent</tt> when editing is
  done.  </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TreeCellEditor</b> extends CellEditor {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Component <b class="function">getTreeCellEditorComponent</b> (JTree <i class="parameter">tree</i>, Object <i class="parameter">value</i>, boolean <i class="parameter">isSelected</i>, boolean <i class="parameter">expanded</i>, boolean <i class="parameter">leaf</i>, int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TreeCellEditor(CellEditor))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultCellEditor, DefaultTreeCellEditor</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTree.setCellEditor(), DefaultTreeCellEditor.DefaultTreeCellEditor()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTree.getCellEditor(), DefaultTreeCellEditor.createTreeCellEditor()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JTree.cellEditor, DefaultTreeCellEditor.realEditor</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TreeCellRenderer</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3218"></a>
<a name="INDEX-3219"></a>
<p>  This interface defines the
  <tt class="literal">getTreeCellRendererComponent()</tt> method, which is
  responsible for returning a component (typically a
  <tt class="literal">JComponent</tt>) that is fully configured to render a
  node of a <tt class="literal">JTree</tt>.  <tt class="literal">JTree</tt> uses a
  default <tt class="literal">TreeCellRenderer</tt> that is suitable in most
  situations.  If you want custom rendering of tree nodes, however, you
  must implement this interface.
  The second argument to <tt class="literal">getTreeCellRendererComponent()</tt>
  is the node to be rendered.  If you
  use the <tt class="literal">DefaultTreeModel</tt>, this argument is a
  <tt class="literal">TreeNode</tt> object.  Note that it is
  <em class="emphasis">not</em> the user object associated with a TreeNode.
  The remaining arguments specify other
  information about the node.  The renderer may choose to use this
  information in its rendering of the cell or not.  The
  renderer is responsible for highlighting any selected nodes and for
  drawing any icons or other desired graphics that distinguish leaf
  nodes from branch nodes.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TreeCellRenderer</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Component <b class="function">getTreeCellRendererComponent</b> (JTree <i class="parameter">tree</i>, Object <i class="parameter">value</i>, boolean <i class="parameter">selected</i>, boolean <i class="parameter">expanded</i>, boolean <i class="parameter">leaf</i>, int <i class="parameter">row</i>, boolean <i class="parameter">hasFocus</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultTreeCellRenderer</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTree.setCellRenderer()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTree.getCellRenderer()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JTree.cellRenderer</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TreeModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i>model</i></b></font></td>
</tr>
</table>
<a name="INDEX-3220"></a>
<a name="INDEX-3221"></a>
<a name="INDEX-3222"></a>
<a name="INDEX-3223"></a>
<a name="INDEX-3224"></a>
<p> 
  This interface defines the methods necessary to represent a tree
  of objects for display in a <tt class="literal">JTree</tt> component.
  <tt class="literal">getRoot()</tt> returns the object at the root of the
  tree.  <tt class="literal">getChildCount()</tt> returns the number of
  children a tree node has.  <tt class="literal">getChild()</tt> returns a
  specified child of a node.  The poorly named
  <tt class="literal">valueForPathChanged()</tt> method sets the data value
  associated with a node identified by a <tt class="literal">TreePath</tt>
  object.  When this method is called, 
  a <tt class="literal">TreeModel</tt> should generate a
  <tt class="literal">javax.swing.event.TreeModelEvent</tt> and notify all
  registered <tt class="literal">javax.swing.event.TreeModelListener</tt>
  objects by invoking their <tt class="literal">treeNodesChanged()</tt>
  methods.</p>
<p>  When working with objects
  that have an implicit tree hierarchy, such as 
  <tt class="literal">java.io.File</tt> objects, you can directly
  implement <tt class="literal">TreeModel</tt> to encapsulate the details of
  that tree hierarchy.  In other cases, it is 

usually easier to use the
  <tt class="literal">DefaultTreeModel</tt> class, which implements the
  <tt class="literal">TreeModel</tt> interface for <tt class="literal">TreeNode</tt>
  objects.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TreeModel</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addTreeModelListener</b> (javax.swing.event.TreeModelListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeTreeModelListener</b> (javax.swing.event.TreeModelListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getChild</b> (Object <i class="parameter">parent</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getChildCount</b> (Object <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getIndexOfChild</b> (Object <i class="parameter">parent</i>, Object <i class="parameter">child</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getRoot</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isLeaf</b> (Object <i class="parameter">node</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">valueForPathChanged</b> (TreePath <i class="parameter">path</i>, Object <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultTreeModel</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTree.{JTree(), setModel()}, AbstractLayoutCache.setModel(), FixedHeightLayoutCache.setModel(), VariableHeightLayoutCache.setModel()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTree.{createTreeModel(), getDefaultTreeModel(), getModel()}, AbstractLayoutCache.getModel()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JTree.treeModel, AbstractLayoutCache.treeModel</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TreeNode</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3225"></a>
<p>  This interface is used by <tt class="literal">DefaultTreeModel</tt> to
  represent one node in a tree.  Implementations must be able both to return
  the parent and the children, if any, of a node, and to
  distinguish between leaf nodes and branch nodes in the tree.  Any
  useful implementation must also associate some kind of data with each
  node.
  Note that the <tt class="literal">TreeNode</tt> interface is used by
  <tt class="literal">DefaultTreeModel</tt>, not by
  <tt class="literal">TreeModel</tt> or by the <tt class="literal">JTree</tt>
  component.  If you write your own implementation of
  <tt class="literal">TreeModel</tt>, you do not have to use the
  <tt class="literal">TreeNode</tt> interface.
  See also <tt class="literal">MutableTreeNode</tt> and
  <tt class="literal">DefaultMutableTreeNode</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TreeNode</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getAllowsChildren</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getChildCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isLeaf</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TreeNode <b class="function">getParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Enumeration <b class="function">children</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TreeNode <b class="function">getChildAt</b> (int <i class="parameter">childIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getIndex</b> (TreeNode <i class="parameter">node</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">javax.swing.text.AbstractDocument.AbstractElement, MutableTreeNode</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DefaultTreeModel.root</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TreePath</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3226"></a>
<a name="INDEX-3227"></a>
<a name="INDEX-3228"></a>
<a name="INDEX-3229"></a>
<p> 
  This class represents a node in a tree and the path of nodes between
  that node and the root of the tree.  The <tt class="literal">TreeModel</tt>
  interface does not contain methods for querying the parent of a given
  node.  Therefore, the <tt class="literal">JTree</tt> component and its
  related classes rely on <tt class="literal">TreePath</tt> to
  encapsulate the list of ancestors of a node.
  <tt class="literal">getLastPathComponent()</tt> returns the node represented
  by the path.  <tt class="literal">getPath()</tt> returns an array of objects
  that represents the complete path.  The first element in the array is the
  root of the tree, and the last element is the node returned by
  <tt class="literal">getLastPathComponent()</tt>.
  <tt class="literal">isDescendant()</tt> tests whether a
  <tt class="literal">TreePath</tt> is a descendant of this one.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TreePath</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TreePath</b> (Object <i class="parameter">singlePath</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TreePath</b> (Object[ ] <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">TreePath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">TreePath</b> (Object[ ] <i class="parameter">path</i>, int <i class="parameter">length</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">TreePath</b> (TreePath <i class="parameter">parent</i>, Object <i class="parameter">lastElement</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getLastPathComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreePath <b class="function">getParentPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getPathCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getPathComponent</b> (int <i class="parameter">element</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDescendant</b> (TreePath <i class="parameter">aTreePath</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreePath <b class="function">pathByAddingChild</b> (Object <i class="parameter">child</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">o</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->TreePath(Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.event.TreeExpansionEvent.path, javax.swing.event.TreeModelEvent.path, javax.swing.event.TreeSelectionEvent.{newLeadSelectionPath, oldLeadSelectionPath, paths}, DefaultTreeCellEditor.lastPath, DefaultTreeSelectionModel.{leadPath, selection}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TreeSelectionModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i>model</i></b></font></td>
</tr>
</table>
<a name="INDEX-3230"></a>
<p>  This interface defines the methods that must be implemented for an
  object to maintain the selection state of a <tt class="literal">JTree</tt>
  component.  See the <tt class="literal">DefaultTreeSelectionModel</tt>
  implementation for details.  </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TreeSelectionModel</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CONTIGUOUS_TREE_SELECTION</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DISCONTIGUOUS_TREE_SELECTION</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SINGLE_TREE_SELECTION</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addPropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removePropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addTreeSelectionListener</b> (javax.swing.event.TreeSelectionListener <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeTreeSelectionListener</b> (javax.swing.event.TreeSelectionListener <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TreePath <b class="function">getLeadSelectionPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getLeadSelectionRow</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxSelectionRow</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMinSelectionRow</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract RowMapper <b class="function">getRowMapper</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setRowMapper</b> (RowMapper <i class="parameter">newMapper</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getSelectionCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isSelectionEmpty</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getSelectionMode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setSelectionMode</b> (int <i class="parameter">mode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TreePath <b class="function">getSelectionPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setSelectionPath</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract TreePath[ ] <b class="function">getSelectionPaths</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setSelectionPaths</b> (TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int[ ] <b class="function">getSelectionRows</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addSelectionPath</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addSelectionPaths</b> (TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">clearSelection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isPathSelected</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isRowSelected</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeSelectionPath</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeSelectionPaths</b> (TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">resetRowSelection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultTreeSelectionModel</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTree.setSelectionModel(), AbstractLayoutCache.setSelectionModel()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTree.getSelectionModel(), AbstractLayoutCache.getSelectionModel()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JTree.selectionModel, AbstractLayoutCache.treeSelectionModel</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>VariableHeightLayoutCache</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.tree</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3231"></a>
<p>  This class caches the layout of nodes in a <tt class="literal">JTree</tt>.
  It allows tree nodes to have variable heights.
  This class is used by the <tt class="literal">JTree</tt>
  UI delegate; applications never need to use it.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">VariableHeightLayoutCache</b> extends AbstractLayoutCache {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">VariableHeightLayoutCache</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractLayoutCache</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getBounds</b> (TreePath <i class="parameter">path</i>, java.awt.Rectangle <i class="parameter">placeIn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getExpandedState</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreePath <b class="function">getPathClosestTo</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TreePath <b class="function">getPathForRow</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getPreferredWidth</b> (java.awt.Rectangle <i class="parameter">bounds</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRowCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRowForPath</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getVisibleChildCount</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">getVisiblePathsFrom</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">invalidatePathBounds</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">invalidateSizes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isExpanded</b> (TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setExpandedState</b> (TreePath <i class="parameter">path</i>, boolean <i class="parameter">isExpanded</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModel</b> (TreeModel <i class="parameter">newModel</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setNodeDimensions</b> (AbstractLayoutCache.NodeDimensions <i class="parameter">nd</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRootVisible</b> (boolean <i class="parameter">rootVisible</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRowHeight</b> (int <i class="parameter">rowHeight</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">treeNodesChanged</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">treeNodesInserted</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">treeNodesRemoved</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">treeStructureChanged</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractLayoutCache(RowMapper)-->VariableHeightLayoutCache</tt>
</p>
<a name="INDEX-3232"></a>
<a name="INDEX-3233"></a>
</div>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch33_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch33_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch35_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch35_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">33.1. The javax.swing.text.rtf Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">35. The javax.swing.undo Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
