<html>
<head>
<title>The javax.swing.event Package (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The javax.swing.event Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch25_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch25_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch27_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch27_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 26.  The javax.swing.event Package</h1>

<p> 
  The <tt class="literal">javax.swing.event</tt>
  package augments the <tt class="literal">java.awt.event</tt> package
  and defines event objects, listeners, and adapters that are specific
  to Swing components.  Classes with names ending in
  "Event" define event types; their fields and methods
  provide details about the event that occurred.  Interfaces with names
  ending in "Listener" are event listeners.  The
  methods of these interfaces are invoked to notify interested objects
  when specific events occur.  Classes with names ending in
  "Adapter" are convenient no-op implementations of
  listener interfaces.  Typically, it is easier to subclass an adapter
  class than implement the corresponding listener interface from
  scratch. 
  <a href="#jfcnut-ch-javax.swing.event-fig-1">Figure 26-1</a> shows the event classes of
  this package, while <a href="#jfcnut-ch-javax.swing.event-fig-2">Figure 26-2</a> shows the event listeners.</p>
<a name="INDEX-2670"></a>
<a name="INDEX-2671"></a>
<a name="INDEX-2672"></a>
<a name="jfcnut-ch-javax.swing.event-fig-1"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.2601.gif" webstripperlinkwas="figs/jfcn.2601.gif"></div>
<h4 class="objtitle">Figure 26-1. The events of the javax.swing.event package</h4>
<a name="jfcnut-ch-javax.swing.event-fig-2"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.2602.gif" webstripperlinkwas="figs/jfcn.2602.gif"></div>
<h4 class="objtitle">Figure 26-2. The event listeners of the javax.swing.event package</h4>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AncestorEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2673"></a>
<a name="INDEX-2674"></a>
<p> 
  An event of this type is generated by a
  <tt class="literal">JComponent</tt> when it is moved, becomes visible, or
  becomes invisible.  Often, the event is generated when one of the
  component's ancestors is moved, becomes visible, or becomes invisible.
  The inherited <tt class="literal">getID()</tt> method returns the type of
  the event, which is one of the constants defined by the class.
  <tt class="literal">ANCESTOR_ADDED</tt> is used when the component
  becomes visible, and <tt class="literal">ANCESTOR_REMOVED</tt> is used when
  the component becomes invisible.  
  <tt class="literal">getAncestor()</tt> returns the ancestor component that
  was modified, and, as a convenience,
  <tt class="literal">getAncestorParent()</tt> returns the parent of that
  ancestor.  <tt class="literal">getComponent()</tt> is a synonym for the
  inherited <tt class="literal">getSource()</tt> method, except that it casts its
  return value to a <tt class="literal">JComponent</tt>.</p>
<a name="INDEX-2675"></a>
<a name="INDEX-2676"></a>
<a name="INDEX-2677"></a>
<a name="INDEX-2678"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">AncestorEvent</b> extends java.awt.AWTEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AncestorEvent</b> (JComponent <i class="parameter">source</i>, int <i class="parameter">id</i>, Container <i class="parameter">ancestor</i>, Container <i class="parameter">ancestorParent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ANCESTOR_ADDED</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ANCESTOR_MOVED</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ANCESTOR_REMOVED</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getAncestor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getAncestorParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JComponent <b class="function">getComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->java.awt.AWTEvent-->AncestorEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AncestorListener.{ancestorAdded(), ancestorMoved(), ancestorRemoved()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AncestorListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>


<a name="INDEX-2679"></a>
<p>  This interface defines the methods that must be implemented by an
  object that wants to receive notification when a
  <tt class="literal">JComponent</tt> is moved
  (with <tt class="literal">ancestorMoved()</tt>), made visible
  (<tt class="literal">ancestorAdded()</tt>),or made invisible
  (<tt class="literal">ancestorRemoved()</tt>).</p>
<a name="INDEX-2680"></a>
<a name="INDEX-2681"></a>
<a name="INDEX-2682"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">AncestorListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">ancestorAdded</b> (AncestorEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">ancestorMoved</b> (AncestorEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">ancestorRemoved</b> (AncestorEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(AncestorListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JComponent.{addAncestorListener(), removeAncestorListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CaretEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2683"></a>
<p>  This event is generated by <tt class="literal">JTextComponent</tt> and its
  subclasses <tt class="literal">JTextField</tt>,
  <tt class="literal">JTextArea</tt>, <tt class="literal">JTextPane</tt>, and
  <tt class="literal">JEditorPane</tt> when the caret position changes.
  The text caret maintains both the current insertion position (the
  dot) and a marker position (the mark).  A
  <tt class="literal">CaretEvent</tt> is generated when either position
  changes.  The changed values can be obtained with
  <tt class="literal">getDot()</tt> and <tt class="literal">getMark()</tt>,
  respectively.  The
  text component that contains the caret can be queried with the
  inherited <tt class="literal">getSource()</tt> method.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">CaretEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CaretEvent</b> (Object <i class="parameter">source</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getDot</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMark</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->CaretEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">CaretListener.caretUpdate(), javax.swing.text.JTextComponent.fireCaretUpdate(), javax.swing.text.JTextComponent.AccessibleJTextComponent.caretUpdate()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CaretListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<p>  This interface defines a method that an object must implement if it
  wants to receive notification when the caret position changes in a
  <tt class="literal">JTextComponent</tt> or one of its subclasses.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">CaretListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">caretUpdate</b> (CaretEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(CaretListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">javax.swing.text.JTextComponent.AccessibleJTextComponent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.text.JTextComponent.{addCaretListener(), removeCaretListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CellEditorListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2684"></a>
<p>  This interface defines the methods that must be implemented by an
  object that wants to receive notification of state changes in a
  <tt class="literal">javax.swing.CellEditor</tt>.  Note that these methods
  are passed a <tt class="literal">ChangeEvent</tt>; there is no special
  <tt class="literal">CellEditorEvent</tt> type.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">CellEditorListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">editingCanceled</b> (ChangeEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">editingStopped</b> (ChangeEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(CellEditorListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">JTable, JTable.AccessibleJTable</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">CellEditor.{addCellEditorListener(), removeCellEditorListener()}, DefaultCellEditor.{addCellEditorListener(), removeCellEditorListener()}, javax.swing.tree.DefaultTreeCellEditor.{addCellEditorListener(), removeCellEditorListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ChangeEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2685"></a>
<a name="INDEX-2686"></a>
<p>  This class is a generic event type that is generated by many Swing
  components to indicate that something has changed within the
  component.  <tt class="literal">ChangeEvent</tt> does not contain any fields
  to indicate the type of the change; the type of state change should be
  implicit in the event listener to which the
  <tt class="literal">ChangeEvent</tt> object is passed.  The only state
  maintained by <tt class="literal">ChangeEvent</tt> is the component that
  generated the event (returned by the inherited
  <tt class="literal">getSource()</tt> method).  Because
  <tt class="literal">ChangeEvent</tt> is immutable and effectively stateless,
  Swing components can reuse a single shared
<tt class="literal">ChangeEvent</tt> object for all their state changes,
  instead of allocating an event object for every change.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ChangeEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ChangeEvent</b> (Object <i class="parameter">source</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->ChangeEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">AbstractButton.changeEvent, DefaultBoundedRangeModel.changeEvent, DefaultButtonModel.changeEvent, DefaultCellEditor.changeEvent, DefaultSingleSelectionModel.changeEvent, JProgressBar.changeEvent, JSlider.changeEvent, JTabbedPane.changeEvent, MenuSelectionManager.changeEvent, javax.swing.colorchooser.DefaultColorSelectionModel.changeEvent, javax.swing.table.DefaultTableColumnModel.changeEvent, javax.swing.text.DefaultCaret.changeEvent, javax.swing.text.StyleContext.NamedStyle.changeEvent</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ChangeListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2687"></a>
<p>  This interface defines the method that an object must implement to
  receive notifications of state change events in Swing components.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ChangeListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">stateChanged</b> (ChangeEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(ChangeListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AbstractButton.ButtonChangeListener, JMenuItem.AccessibleJMenuItem, JScrollPane.AccessibleJScrollPane, JTabbedPane.AccessibleJTabbedPane, JTabbedPane.ModelListener</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AbstractButton.createChangeListener(), JProgressBar.createChangeListener(), JSlider.createChangeListener(), JTabbedPane.createChangeListener()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">AbstractButton.changeListener, JProgressBar.changeListener, JSlider.changeListener, JTabbedPane.changeListener</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DocumentEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2688"></a>
<p>  Events of this type are generated by a
  <tt class="literal">javax.swing.text.Document</tt> 
  object when the document it represents changes.
  <tt class="literal">getDocument()</tt> returns the
  <tt class="literal">Document</tt> that was modified.
  <tt class="literal">getType()</tt> returns the type of the changes; its
  return value is one of the three constants defined by the
  <tt class="literal">DocumentEvent.EventType</tt> inner class.
  <tt class="literal">getOffset()</tt> returns the document coordinate of the
  start of the change, and <tt class="literal">getLength()</tt> returns the
  length of the change.  <tt class="literal">getChange()</tt> returns a
  <tt class="literal">DocumentEvent.ElementChange</tt> object that describes
  the change in terms of its effect on the specified
  <tt class="literal">javax.swing.text.Element</tt> of the document.</p>
<a name="INDEX-2689"></a>
<a name="INDEX-2690"></a>
<a name="INDEX-2691"></a>
<a name="INDEX-2692"></a>
<a name="INDEX-2693"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">DocumentEvent</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.text.Document <b class="function">getDocument</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getLength</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract DocumentEvent.EventType <b class="function">getType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract DocumentEvent.ElementChange <b class="function">getChange</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">javax.swing.text.AbstractDocument.DefaultDocumentEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DocumentEvent.ElementChange</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2694"></a>
<p>  This interface defines methods that provide information about changes
  to an <tt class="literal">javax.swing.text.Element</tt> object within a
  <tt class="literal">javax.swing.text.Document</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static interface <b class="classname">DocumentEvent.ElementChange</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.text.Element[ ] <b class="function">getChildrenAdded</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.text.Element[ ] <b class="function">getChildrenRemoved</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.text.Element <b class="function">getElement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">javax.swing.text.AbstractDocument.ElementEdit</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DocumentEvent.getChange(), javax.swing.text.AbstractDocument.DefaultDocumentEvent.getChange()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DocumentEvent.EventType</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2695"></a>
<p>  This class defines three type-safe object constants that are used to
  specify the type of a <tt class="literal">DocumentEvent</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static final class <b class="classname">DocumentEvent.EventType</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DocumentEvent.EventType <b class="function">CHANGE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DocumentEvent.EventType <b class="function">INSERT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DocumentEvent.EventType <b class="function">REMOVE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.text.AbstractDocument.DefaultDocumentEvent.DefaultDocumentEvent()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DocumentEvent.getType(), javax.swing.text.AbstractDocument.DefaultDocumentEvent.getType()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DocumentEvent.EventType.{CHANGE, INSERT, REMOVE}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DocumentListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<p>  This interface defines the method that an object must implement in
  order to register for notifications of changes to a
  <tt class="literal">javax.swing.text.Document</tt> object.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">DocumentListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">changedUpdate</b> (DocumentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">insertUpdate</b> (DocumentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeUpdate</b> (DocumentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(DocumentListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">javax.swing.text.JTextComponent.AccessibleJTextComponent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.text.AbstractDocument.{addDocumentListener(), removeDocumentListener()}, javax.swing.text.DefaultStyledDocument.{addDocumentListener(), removeDocumentListener()}, javax.swing.text.Document.{addDocumentListener(), removeDocumentListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>EventListenerList</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2696"></a>
<a name="INDEX-2697"></a>
<p>  This utility class is used by many Swing classes to 
  maintain lists of event listeners.  An
  <tt class="literal">EventListenerList</tt> maintains a list of event
  listener objects, possibly of several different types.  In order to
  allow the type of each listener to be determined efficiently,
  <tt class="literal">EventListenerList</tt> also maintains the
  <tt class="literal">java.lang.Class</tt> object for each
  <tt class="literal">EventListener</tt>.</p>
<a name="INDEX-2698"></a>
<a name="INDEX-2699"></a>
<p>  The <tt class="literal">add()</tt> and <tt class="literal">remove()</tt> methods
  add and remove an event listener and its <tt class="literal">Class</tt>
  object to and from the list.  When a component needs to send an event to all
  registered listeners of a given type, it calls
  <tt class="literal">getListenerList()</tt>.  This method returns an array of
  objects, where the elements of this array are grouped in pairs.  Each
  even-numbered element is a <tt class="literal">Class</tt> object that
  specifies the type of the event listener stored in the following
  odd-numbered element.  Thus, you can quickly loop through the list of
  event listeners, comparing <tt class="literal">Class</tt> objects to find any
  registered listeners of the desired type.
  Objects that make use of <tt class="literal">EventListenerList</tt> must be
  careful not to modify the contents of the array returned by
  <tt class="literal">getListenerList()</tt>. </p>
<a name="INDEX-2700"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">EventListenerList</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">EventListenerList</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getListenerCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getListenerCount</b> (Class <i class="parameter">t</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getListenerList</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (Class <i class="parameter">t</i>, java.util.EventListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (Class <i class="parameter">t</i>, java.util.EventListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Object[ ] <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->EventListenerList(Serializable)</tt>
</p>
<p>
<span class="refsect1">Type Of: </span>Too many fields to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>HyperlinkEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2701"></a>
<a name="INDEX-2702"></a>
<a name="INDEX-2703"></a>
<a name="INDEX-2704"></a>
<p>  An event of this type is generated by <tt class="literal">JEditorPane</tt>
  when the user moves the mouse over, clicks on, or moves the mouse off
  a hypertext link.  <tt class="literal">getURL()</tt> returns the URL of
  the hyperlink.  <tt class="literal">getEventType()</tt> returns an object
  constant indicating what was done to the hyperlink.  The inherited
  <tt class="literal">getSource()</tt> method returns the
  <tt class="literal">JEditorPane</tt> that contains the hyperlink.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">HyperlinkEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">HyperlinkEvent</b> (Object <i class="parameter">source</i>, HyperlinkEvent.EventType <i class="parameter">type</i>, java.net.URL <i class="parameter">u</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">HyperlinkEvent</b> (Object <i class="parameter">source</i>, HyperlinkEvent.EventType <i class="parameter">type</i>, java.net.URL <i class="parameter">u</i>, String <i class="parameter">desc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getDescription</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public HyperlinkEvent.EventType <b class="function">getEventType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.net.URL <b class="function">getURL</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->HyperlinkEvent</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.html.HTMLFrameHyperlinkEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JEditorPane.fireHyperlinkUpdate(), HyperlinkListener.hyperlinkUpdate()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>HyperlinkEvent.EventType</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2705"></a>
<p>  This class defines three type-safe object constants that are used to
  specify the type of a <tt class="literal">HyperlinkEvent</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static final class <b class="classname">HyperlinkEvent.EventType</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final HyperlinkEvent.EventType <b class="function">ACTIVATED</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final HyperlinkEvent.EventType <b class="function">ENTERED</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final HyperlinkEvent.EventType <b class="function">EXITED</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">HyperlinkEvent.HyperlinkEvent(), javax.swing.text.html.HTMLFrameHyperlinkEvent.HTMLFrameHyperlinkEvent()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">HyperlinkEvent.getEventType()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">HyperlinkEvent.EventType.{ACTIVATED, ENTERED, EXITED}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>HyperlinkListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2706"></a>
<p>  This interface defines the method that an object must implement in
  order to register for notifications about hyperlink activity in a
  <tt class="literal">JEditorPane</tt> component.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">HyperlinkListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">hyperlinkUpdate</b> (HyperlinkEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(HyperlinkListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JEditorPane.{addHyperlinkListener(), removeHyperlinkListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>InternalFrameAdapter</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event adapter</i></b></font></td>
</tr>
</table>
<a name="INDEX-2707"></a>
<p>  This class is an empty implementation of
  <tt class="literal">InternalFrameListener</tt>.  It is usually easier to
  extend this class than it is to implement
  <tt class="literal">InternalFrameListener</tt> from scratch.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">InternalFrameAdapter</b> implements InternalFrameListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InternalFrameAdapter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing InternalFrameListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">internalFrameActivated</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">internalFrameClosed</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">internalFrameClosing</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">internalFrameDeactivated</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">internalFrameDeiconified</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">internalFrameIconified</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">internalFrameOpened</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->InternalFrameAdapter(InternalFrameListener(java.util.EventListener))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>InternalFrameEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2708"></a>
<p> 
  Events of this type are generated when a
  <tt class="literal">JInternalFrame</tt> component changes state.  An
  <tt class="literal">InternalFrameEvent</tt> is very similar to the
  <tt class="literal">java.awt.event.WindowEvent</tt> generated when a native
  window (such as a <tt class="literal">JFrame</tt> or
  <tt class="literal">JDialog</tt>) changes state.
  The inherited <tt class="literal">getSource()</tt> method returns the
  <tt class="literal">JInternalFrame</tt> object that generated the event.
  The inherited <tt class="literal">getID()</tt> method returns the type of
  the event; this return value is one of the constants defined by
  this class.  The meanings of these constants are mostly 
  straightforward.  Note the distinction between
  <tt class="literal">INTERNAL_FRAME_CLOSING</tt> and
  <tt class="literal">INTERNAL_FRAME_CLOSED</tt>, however.  The first type of
  event is generated when the user requests that the
  <tt class="literal">JInternalFrame</tt> be closed.  The program may respond
  by hiding or destroying the window (it is poor style to ignore this
  type of event).  The second type of event is
  generated only after the internal frame is actually hidden or
  destroyed. </p>
<a name="INDEX-2709"></a>
<a name="INDEX-2710"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">InternalFrameEvent</b> extends java.awt.AWTEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InternalFrameEvent</b> (JInternalFrame <i class="parameter">source</i>, int <i class="parameter">id</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INTERNAL_FRAME_ACTIVATED</b> ;</td><td align="right"><i> =25554</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INTERNAL_FRAME_CLOSED</b> ;</td><td align="right"><i> =25551</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INTERNAL_FRAME_CLOSING</b> ;</td><td align="right"><i> =25550</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INTERNAL_FRAME_DEACTIVATED</b> ;</td><td align="right"><i> =25555</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INTERNAL_FRAME_DEICONIFIED</b> ;</td><td align="right"><i> =25553</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INTERNAL_FRAME_FIRST</b> ;</td><td align="right"><i> =25549</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INTERNAL_FRAME_ICONIFIED</b> ;</td><td align="right"><i> =25552</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INTERNAL_FRAME_LAST</b> ;</td><td align="right"><i> =25555</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INTERNAL_FRAME_OPENED</b> ;</td><td align="right"><i> =25549</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AWTEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->java.awt.AWTEvent-->InternalFrameEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">InternalFrameAdapter.{internalFrameActivated(), internalFrameClosed(), internalFrameClosing(), internalFrameDeactivated(), internalFrameDeiconified(), internalFrameIconified(), internalFrameOpened()}, InternalFrameListener.{internalFrameActivated(), internalFrameClosed(), internalFrameClosing(), internalFrameDeactivated(), internalFrameDeiconified(), internalFrameIconified(), internalFrameOpened()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>InternalFrameListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>


<a name="INDEX-2711"></a>
<p>  This class defines the methods that an object must implement to
  receive notifications about state changes in a
  <tt class="literal">JInternalFrame</tt>.  See
  <tt class="literal">InternalFrameEvent</tt> for a discussion of the
  difference between <tt class="literal">internalFrameClosed()</tt> and
  <tt class="literal">internalFrameClosing()</tt>. 
  It is usually easier to subclass
  <tt class="literal">InternalFrameAdapter</tt> than to implement this
  interface from scratch.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">InternalFrameListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">internalFrameActivated</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">internalFrameClosed</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">internalFrameClosing</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">internalFrameDeactivated</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">internalFrameDeiconified</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">internalFrameIconified</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">internalFrameOpened</b> (InternalFrameEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(InternalFrameListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">InternalFrameAdapter</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JInternalFrame.{addInternalFrameListener(), removeInternalFrameListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ListDataEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2712"></a>
<p>  An event of this type is generated by a
  <tt class="literal">javax.swing.ListModel</tt> 
  when the contents of the model changes.  <tt class="literal">getType()</tt>
  returns one of the three constants defined by the class, to indicate
  the type of change that occurred.  The inherited
  <tt class="literal">getSource()</tt> method returns the
  <tt class="literal">ListModel</tt> object that changed.
  <tt class="literal">getIndex0()</tt> and <tt class="literal">getIndex1()</tt>
  return the end points of the modified interval.</p>
<a name="INDEX-2713"></a>
<a name="INDEX-2714"></a>
<a name="INDEX-2715"></a>
<a name="INDEX-2716"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ListDataEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ListDataEvent</b> (Object <i class="parameter">source</i>, int <i class="parameter">type</i>, int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CONTENTS_CHANGED</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INTERVAL_ADDED</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INTERVAL_REMOVED</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIndex0</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIndex1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->ListDataEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JComboBox.{contentsChanged(), intervalAdded(), intervalRemoved()}, JList.AccessibleJList.{contentsChanged(), intervalAdded(), intervalRemoved()}, ListDataListener.{contentsChanged(), intervalAdded(), intervalRemoved()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ListDataListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2717"></a>
<p>  This interface defines the methods that must be implemented by an
  object to receive notifications of changes to the contents of a
  <tt class="literal">javax.swing.ListModel</tt>. </p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ListDataListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">contentsChanged</b> (ListDataEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">intervalAdded</b> (ListDataEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">intervalRemoved</b> (ListDataEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(ListDataListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">JComboBox, JList.AccessibleJList</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AbstractListModel.{addListDataListener(), removeListDataListener()}, ListModel.{addListDataListener(), removeListDataListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ListSelectionEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2718"></a>
<p>  An event of this type is generated by a <tt class="literal">JList</tt>
  component or its underlying
  <tt class="literal">ListSelectionModel</tt> object to
  indicate a change in the current list selection.
  <tt class="literal">getFirstIndex()</tt> and
  <tt class="literal">getLastIndex()</tt> return the first and last elements
  in the list that may have had their selection state changed.  The
  <tt class="literal">ListSelectionEvent</tt> does not contain the new
  selection state; you must query the <tt class="literal">JList</tt> or
  <tt class="literal">ListSelectionModel</tt> for that information.  (Use the
  inherited <tt class="literal">getSource()</tt> method to obtain the source of the
  event).
  <tt class="literal">getValueIsAdjusting()</tt> returns
  <tt class="literal">true</tt> if the event is one in a series of rapid-fire
  events, such as those that are generated when the user drags the mouse
  through a <tt class="literal">JList</tt>.  Some programs may choose to
  ignore these rapid-fire events and wait for an event for which
  <tt class="literal">getValueIsAdjusting()</tt> returns
  <tt class="literal">false</tt>. </p>
<a name="INDEX-2719"></a>
<a name="INDEX-2720"></a>
<a name="INDEX-2721"></a>
<a name="INDEX-2722"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ListSelectionEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ListSelectionEvent</b> (Object <i class="parameter">source</i>, int <i class="parameter">firstIndex</i>, int <i class="parameter">lastIndex</i>, boolean <i class="parameter">isAdjusting</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getFirstIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLastIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getValueIsAdjusting</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding EventObject</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->ListSelectionEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JList.AccessibleJList.valueChanged(), JTable.{columnSelectionChanged(), valueChanged()}, JTable.AccessibleJTable.{columnSelectionChanged(), valueChanged()}, ListSelectionListener.valueChanged(), TableColumnModelListener.columnSelectionChanged(), javax.swing.table.DefaultTableColumnModel.{fireColumnSelectionChanged(), valueChanged()}, javax.swing.table.JTableHeader.columnSelectionChanged()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ListSelectionListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2723"></a>
<p>  This interface defines the method that an object must implement in
  order to receive notifications of changes in the selection state
  of a <tt class="literal">JList</tt> or
  <tt class="literal">ListSelectionModel</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ListSelectionListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">valueChanged</b> (ListSelectionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(ListSelectionListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">JList.AccessibleJList, JTable, JTable.AccessibleJTable, javax.swing.table.DefaultTableColumnModel</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DefaultListSelectionModel.{addListSelectionListener(), removeListSelectionListener()}, JList.{addListSelectionListener(), removeListSelectionListener()}, ListSelectionModel.{addListSelectionListener(), removeListSelectionListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MenuDragMouseEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2724"></a>
<a name="INDEX-2725"></a>
<p>
<tt class="literal">JMenuItem</tt> sends events of this type to registered
  <tt class="literal">MenuDragMouseListener</tt> objects to signal that
  the mouse has entered or exited the menu item, that it is moving over
  the menu item, or that the user has released the mouse button over the
  menu item.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MenuDragMouseEvent</b> extends java.awt.event.MouseEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MenuDragMouseEvent</b> (Component <i class="parameter">source</i>, int <i class="parameter">id</i>, long <i class="parameter">when</i>, int <i class="parameter">modifiers</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">clickCount</i>, boolean <i class="parameter">popupTrigger</i>, MenuElement[ ] <i class="parameter">p</i>, MenuSelectionManager <i class="parameter">m</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuSelectionManager <b class="function">getMenuSelectionManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuElement[ ] <b class="function">getPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->java.awt.AWTEvent-->java.awt.event.ComponentEvent-->java.awt.event.InputEvent-->java.awt.event.MouseEvent-->MenuDragMouseEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JMenuItem.{fireMenuDragMouseDragged(), fireMenuDragMouseEntered(), fireMenuDragMouseExited(), fireMenuDragMouseReleased(), processMenuDragMouseEvent()}, MenuDragMouseListener.{menuDragMouseDragged(), menuDragMouseEntered(), menuDragMouseExited(), menuDragMouseReleased()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MenuDragMouseListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2726"></a>
<p>  This interface defines the methods that <tt class="literal">JMenuItem</tt>
  invokes on registered objects when the user drags the mouse into,
  over, or out of the menu item or releases the mouse
  button over the item.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">MenuDragMouseListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">menuDragMouseDragged</b> (MenuDragMouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">menuDragMouseEntered</b> (MenuDragMouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">menuDragMouseExited</b> (MenuDragMouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">menuDragMouseReleased</b> (MenuDragMouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(MenuDragMouseListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JMenuItem.{addMenuDragMouseListener(), removeMenuDragMouseListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MenuEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2727"></a>
<p>  Events of this type are generated by a <tt class="literal">JMenu</tt>
  component to indicate that the menu button has been selected or
  deselected. (When the menu attached to that button actually pops up or
  down, the <tt class="literal">JPopupMenu</tt> component generates a
  <tt class="literal">PopupMenuEvent</tt>.)  The inherited
  <tt class="literal">getSource()</tt> method returns the
  <tt class="literal">JMenu</tt> object that generated the event.  The type of
  the <tt class="literal">MenuEvent</tt> depends on which
  <tt class="literal">MenuListener</tt> method it is passed to.</p>
<a name="INDEX-2728"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MenuEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MenuEvent</b> (Object <i class="parameter">source</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->MenuEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">MenuListener.{menuCanceled(), menuDeselected(), menuSelected()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MenuKeyEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<p>
<tt class="literal">JMenuItem</tt> sends events of this type to registered
  <tt class="literal">MenuKeyListener</tt> objects when the user types a key
  over the menu item.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MenuKeyEvent</b> extends java.awt.event.KeyEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MenuKeyEvent</b> (Component <i class="parameter">source</i>, int <i class="parameter">id</i>, long <i class="parameter">when</i>, int <i class="parameter">modifiers</i>, int <i class="parameter">keyCode</i>, char <i class="parameter">keyChar</i>, MenuElement[ ] <i class="parameter">p</i>, MenuSelectionManager <i class="parameter">m</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuSelectionManager <b class="function">getMenuSelectionManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuElement[ ] <b class="function">getPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->java.awt.AWTEvent-->java.awt.event.ComponentEvent-->java.awt.event.InputEvent-->java.awt.event.KeyEvent-->MenuKeyEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JMenuItem.{fireMenuKeyPressed(), fireMenuKeyReleased(), fireMenuKeyTyped(), processMenuKeyEvent()}, MenuKeyListener.{menuKeyPressed(), menuKeyReleased(), menuKeyTyped()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MenuKeyListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2729"></a>
<p>  This interface defines the method that a <tt class="literal">JMenuItem</tt>
  invokes on registered listeners when the user types a key in the
  menu item.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">MenuKeyListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">menuKeyPressed</b> (MenuKeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">menuKeyReleased</b> (MenuKeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">menuKeyTyped</b> (MenuKeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(MenuKeyListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JMenuItem.{addMenuKeyListener(), removeMenuKeyListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MenuListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2730"></a>
<p>  This interface defines the methods that an object must implement in
  order to be notified when a <tt class="literal">JMenu</tt> button is
  selected or deselected or when a menu selection is canceled.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">MenuListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">menuCanceled</b> (MenuEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">menuDeselected</b> (MenuEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">menuSelected</b> (MenuEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(MenuListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JMenu.{addMenuListener(), removeMenuListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MouseInputAdapter</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event adapter</i></b></font></td>
</tr>
</table>
<a name="INDEX-2731"></a>
<p>  This class is an empty implementation of
  <tt class="literal">MouseInputListener</tt>.  It often is easier to subclass
  this class, overriding only the methods you are interested in, than it
  is to implement all the methods of
  <tt class="literal">java.awt.event.MouseMotionListener</tt> from scratch.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">MouseInputAdapter</b> implements MouseInputListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MouseInputAdapter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MouseListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseClicked</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseEntered</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseExited</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mousePressed</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseReleased</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MouseMotionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseDragged</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseMoved</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->MouseInputAdapter(MouseInputListener(java.awt.event.MouseListener(java.util.EventListener),java.awt.event.MouseMotionListener(java.util.EventListener)))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MouseInputListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2732"></a>
<p>
<tt class="literal">MouseInputListener</tt> combines into a single interface
  the methods of the closely related <tt class="literal">MouseListener</tt>
  and <tt class="literal">MouseMotionListener</tt> interfaces of the
  <tt class="literal">java.awt.event</tt> package.  This interface is a simple
  utility 

that makes it easier to implement both
  <tt class="literal">MouseEvent</tt> listener interfaces at once.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">MouseInputListener</b> extends java.awt.event.MouseListener, java.awt.event.MouseMotionListener {</td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(MouseInputListener(java.awt.event.MouseListener(java.util.EventListener),java.awt.event.MouseMotionListener(java.util.EventListener)))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">MouseInputAdapter</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PopupMenuEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2733"></a>
<p>  An event of this type is generated just before a
  <tt class="literal">JPopupMenu</tt> is popped up or popped down or when a
  <tt class="literal">JPopupMenu</tt> is canceled (i.e., when it is popped down
  without the user making a selection).  The inherited
  <tt class="literal">getSource()</tt> method returns the 
  <tt class="literal">JPopupMenu</tt>, but <tt class="literal">PopupMenuEvent</tt>
  contains no other state.  The type of the event is determined by the
  <tt class="literal">PopupMenuListener</tt> method to which it is passed.</p>
<a name="INDEX-2734"></a>
<a name="INDEX-2735"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">PopupMenuEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">PopupMenuEvent</b> (Object <i class="parameter">source</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->PopupMenuEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">PopupMenuListener.{popupMenuCanceled(), popupMenuWillBecomeInvisible(), popupMenuWillBecomeVisible()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PopupMenuListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2736"></a>
<p>  This interface defines the methods that an object must implement to
  receive notifications that a <tt class="literal">JPopupMenu</tt> is about to
  pop up or pop down or that a <tt class="literal">JPopupMenu</tt> was
  canceled without a user selection.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">PopupMenuListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">popupMenuCanceled</b> (PopupMenuEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">popupMenuWillBecomeInvisible</b> (PopupMenuEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">popupMenuWillBecomeVisible</b> (PopupMenuEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(PopupMenuListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JPopupMenu.{addPopupMenuListener(), removePopupMenuListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SwingPropertyChangeSupport</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2737"></a>
<p>  This utility class is useful when you are 
  defining a Swing component that has
  bound properties and must fire 
  <tt class="literal">java.beans.PropertyChangeEvent</tt>
  events when the value of various properties change.  This class is a
  subclass of 
  <tt class="literal">java.beans.PropertyChangeSupport</tt>
  and provides the same features as that class.  This
  Swing-specific version is somewhat more memory efficient than the
  JavaBeans version and does not use <tt class="literal">synchronized</tt>
  methods.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">SwingPropertyChangeSupport</b> extends java.beans.PropertyChangeSupport {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SwingPropertyChangeSupport</b> (Object <i class="parameter">sourceBean</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> Overrides:PropertyChangeSupport synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> Overrides:PropertyChangeSupport synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding PropertyChangeSupport</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (String <i class="parameter">propertyName</i>, java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">firePropertyChange</b> (java.beans.PropertyChangeEvent <i class="parameter">evt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, Object <i class="parameter">oldValue</i>, Object <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">hasListeners</b> (String <i class="parameter">propertyName</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (String <i class="parameter">propertyName</i>, java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.beans.PropertyChangeSupport(Serializable)-->SwingPropertyChangeSupport</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">AbstractAction.changeSupport, javax.swing.tree.DefaultTreeSelectionModel.changeSupport</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TableColumnModelEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2738"></a>
<a name="INDEX-2739"></a>
<p>  An event of this type is generated when a column is added, deleted, or
  moved from a
  <tt class="literal">javax.swing.table.TableColumnModel</tt>.  The
  inherited <tt class="literal">getSource()</tt> method returns the
  <tt class="literal">TableColumnModel</tt> object that was changed.  
  When a column is added, <tt class="literal">getToIndex()</tt> specifies the
  index of the column.  When a column is removed,
  <tt class="literal">getFromIndex()</tt> specifies the index that it used to
  occupy.  When a column is moved, <tt class="literal">getFromIndex()</tt>
  returns the column's old position and <tt class="literal">getToIndex()</tt>
  returns the column's new position.</p>
<a name="INDEX-2740"></a>
<a name="INDEX-2741"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TableColumnModelEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TableColumnModelEvent</b> (javax.swing.table.TableColumnModel <i class="parameter">source</i>, int <i class="parameter">from</i>, int <i class="parameter">to</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getFromIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getToIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">fromIndex</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">toIndex</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->TableColumnModelEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTable.{columnAdded(), columnMoved(), columnRemoved()}, JTable.AccessibleJTable.{columnAdded(), columnMoved(), columnRemoved()}, TableColumnModelListener.{columnAdded(), columnMoved(), columnRemoved()}, javax.swing.table.DefaultTableColumnModel.{fireColumnAdded(), fireColumnMoved(), fireColumnRemoved()}, javax.swing.table.JTableHeader.{columnAdded(), columnMoved(), columnRemoved()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TableColumnModelListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2742"></a>
<p>  This interface defines the methods that an object must implement to
  receive notifications of changes in a
  <tt class="literal">javax.swing.table.TableColumnModel</tt>.  Note that
  unlike most event listeners, the methods of this object are
  passed different types of event objects.</p>
<a name="INDEX-2743"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TableColumnModelListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">columnAdded</b> (TableColumnModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">columnMarginChanged</b> (ChangeEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">columnMoved</b> (TableColumnModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">columnRemoved</b> (TableColumnModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">columnSelectionChanged</b> (ListSelectionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TableColumnModelListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">JTable, JTable.AccessibleJTable, javax.swing.table.JTableHeader</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.table.DefaultTableColumnModel.{addColumnModelListener(), removeColumnModelListener()}, javax.swing.table.TableColumnModel.{addColumnModelListener(), removeColumnModelListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TableModelEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2744"></a>
<a name="INDEX-2745"></a>
<a name="INDEX-2746"></a>
<a name="INDEX-2747"></a>
<p>  An event of this type is generated by a
  <tt class="literal">javax.swing.table.TableModel</tt> when the data
  it contains changes.  <tt class="literal">getColumn()</tt> indicates the
  column that changed; it may return the constant
  <tt class="literal">ALL_COLUMNS</tt>.  <tt class="literal">getFirstRow()</tt> and
  <tt class="literal">getLastRow()</tt> get the range of modified rows.  If
  either returns the constant <tt class="literal">HEADER_ROW</tt>, that 
  indicates that
  the entire structure of the table has changed along with the table
  data.  <tt class="literal">getType()</tt> specifies the type of the change; it
  returns one of the constants <tt class="literal">DELETE</tt>,
  <tt class="literal">INSERT</tt>, or <tt class="literal">UPDATE</tt>.  The
  inherited <tt class="literal">getSource()</tt> method returns the modified
  <tt class="literal">TableModel</tt> object.</p>
<a name="INDEX-2748"></a>
<a name="INDEX-2749"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TableModelEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TableModelEvent</b> (javax.swing.table.TableModel <i class="parameter">source</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TableModelEvent</b> (javax.swing.table.TableModel <i class="parameter">source</i>, int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TableModelEvent</b> (javax.swing.table.TableModel <i class="parameter">source</i>, int <i class="parameter">firstRow</i>, int <i class="parameter">lastRow</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TableModelEvent</b> (javax.swing.table.TableModel <i class="parameter">source</i>, int <i class="parameter">firstRow</i>, int <i class="parameter">lastRow</i>, int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TableModelEvent</b> (javax.swing.table.TableModel <i class="parameter">source</i>, int <i class="parameter">firstRow</i>, int <i class="parameter">lastRow</i>, int <i class="parameter">column</i>, int <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ALL_COLUMNS</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DELETE</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HEADER_ROW</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INSERT</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">UPDATE</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getColumn</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getFirstRow</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLastRow</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">column</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">firstRow</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">lastRow</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">type</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->TableModelEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTable.tableChanged(), JTable.AccessibleJTable.{tableChanged(), tableRowsDeleted(), tableRowsInserted()}, TableModelListener.tableChanged(), javax.swing.table.AbstractTableModel.fireTableChanged(), javax.swing.table.DefaultTableModel.{newDataAvailable(), newRowsAdded(), rowsRemoved()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TableModelListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2750"></a>
<p>  This interface defines the method that an object must implement to
  receive notifications about changes to the state of a
  <tt class="literal">javax.swing.table.TableModel</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TableModelListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">tableChanged</b> (TableModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TableModelListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">JTable, JTable.AccessibleJTable</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.table.AbstractTableModel.{addTableModelListener(), removeTableModelListener()}, javax.swing.table.TableModel.{addTableModelListener(), removeTableModelListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TreeExpansionEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2751"></a>
<a name="INDEX-2752"></a>
<a name="INDEX-2753"></a>
<p>  An event of this type is generated by a <tt class="literal">JTree</tt>
  component when a node in the tree is expanded or collapsed.  The
  inherited <tt class="literal">getSource()</tt> method returns the
  <tt class="literal">JTree</tt> component, and <tt class="literal">getPath()</tt>
  returns a <tt class="literal">TreePath</tt> that specifies which node was
  expanded or collapsed.  </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TreeExpansionEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TreeExpansionEvent</b> (Object <i class="parameter">source</i>, javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreePath <b class="function">getPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.tree.TreePath <b class="function">path</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->TreeExpansionEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTree.AccessibleJTree.{treeCollapsed(), treeExpanded()}, TreeExpansionListener.{treeCollapsed(), treeExpanded()}, TreeWillExpandListener.{treeWillCollapse(), treeWillExpand()}, javax.swing.tree.ExpandVetoException.ExpandVetoException()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.tree.ExpandVetoException.event</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TreeExpansionListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2754"></a>
<p>  This interface defines the methods that an object must implement to
  be notified when a <tt class="literal">JTree</tt> component expands or
  collapses a node.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TreeExpansionListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">treeCollapsed</b> (TreeExpansionEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">treeExpanded</b> (TreeExpansionEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TreeExpansionListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">JTree.AccessibleJTree</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTree.{addTreeExpansionListener(), removeTreeExpansionListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TreeModelEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2755"></a>
<a name="INDEX-2756"></a>
<a name="INDEX-2757"></a>
<a name="INDEX-2758"></a>
<p> 
  An event of this type is generated when the contents of a
  <tt class="literal">java.awt.event.tree.TreeModel</tt> change.
  The inherited <tt class="literal">getSource()</tt> method returns the
  <tt class="literal">TreeModel</tt> object that was changed.
  <tt class="literal">getPath()</tt> and <tt class="literal">getTreePath()</tt>
  specify the path to the parent of the changed nodes.
  <tt class="literal">getChildIndices()</tt> returns an array of integers that
  specifies which children of that parent node have changed.
  Alternatively, <tt class="literal">getChildren()</tt> returns the modified
  children directly.  <tt class="literal">TreeModelEvent</tt> does not
  directly indicate what type of change has occurred; that is determined
  by the <tt class="literal">TreeModelListener</tt> method to which the
  <tt class="literal">TreeModelEvent</tt> is passed.</p>
<a name="INDEX-2759"></a>
<a name="INDEX-2760"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TreeModelEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TreeModelEvent</b> (Object <i class="parameter">source</i>, Object[ ] <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TreeModelEvent</b> (Object <i class="parameter">source</i>, javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TreeModelEvent</b> (Object <i class="parameter">source</i>, javax.swing.tree.TreePath <i class="parameter">path</i>, int[ ] <i class="parameter">childIndices</i>, Object[ ] <i class="parameter">children</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TreeModelEvent</b> (Object <i class="parameter">source</i>, Object[ ] <i class="parameter">path</i>, int[ ] <i class="parameter">childIndices</i>, Object[ ] <i class="parameter">children</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">getChildIndices</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getChildren</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreePath <b class="function">getTreePath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding EventObject</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int[ ] <b class="function">childIndices</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Object[ ] <b class="function">children</b> ;</td><td align="right"><i></i></td>
</tr>

<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.tree.TreePath <b class="function">path</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->TreeModelEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TreeModelListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2761"></a>
<p>  This interface defines the methods that an object must implement to
  receive notifications of changes to a
  <tt class="literal">javax.swing.tree.TreeModel</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TreeModelListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">treeNodesChanged</b> (TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">treeNodesInserted</b> (TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">treeNodesRemoved</b> (TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">treeStructureChanged</b> (TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TreeModelListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">JTree.AccessibleJTree, JTree.TreeModelHandler</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.tree.DefaultTreeModel.{addTreeModelListener(), removeTreeModelListener()}, javax.swing.tree.TreeModel.{addTreeModelListener(), removeTreeModelListener()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTree.createTreeModelListener()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JTree.treeModelListener</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TreeSelectionEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-2762"></a>
<p>  An event of this type is generated by a
  <tt class="literal">javax.swing.tree.TreeSelectionModel</tt> or by the
  <tt class="literal">JTree</tt> component that uses that model when the
  selection state of the tree changes.  <tt class="literal">getPaths()</tt>
  returns the array of <tt class="literal">javax.swing.tree.TreePath</tt>
  objects that were added to or removed from the selection.
  <tt class="literal">getPath()</tt> returns the first element of this array.
  The one-argument version of <tt class="literal">isAddedPath()</tt> tests
  whether a specified <tt class="literal">TreePath</tt> (it must be one of the
  ones returned by <tt class="literal">getPaths()</tt>) was added to the
  selection (<tt class="literal">true</tt>) or removed from it
  (<tt class="literal">false</tt>).  The no-argument version of this method
  tests whether the value returned by <tt class="literal">getPath()</tt> was
  selected or deselected.</p>
<a name="INDEX-2763"></a>
<a name="INDEX-2764"></a>
<a name="INDEX-2765"></a>
<a name="INDEX-2766"></a>
<a name="INDEX-2767"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TreeSelectionEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TreeSelectionEvent</b> (Object <i class="parameter">source</i>, javax.swing.tree.TreePath[ ] <i class="parameter">paths</i>, boolean[ ] <i class="parameter">areNew</i>, javax.swing.tree.TreePath <i class="parameter">oldLeadSelectionPath</i>, javax.swing.tree.TreePath <i class="parameter">newLeadSelectionPath</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TreeSelectionEvent</b> (Object <i class="parameter">source</i>, javax.swing.tree.TreePath <i class="parameter">path</i>, boolean <i class="parameter">isNew</i>, javax.swing.tree.TreePath <i class="parameter">oldLeadSelectionPath</i>, javax.swing.tree.TreePath <i class="parameter">newLeadSelectionPath</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isAddedPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isAddedPath</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreePath <b class="function">getNewLeadSelectionPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreePath <b class="function">getOldLeadSelectionPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreePath <b class="function">getPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreePath[ ] <b class="function">getPaths</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">cloneWithSource</b> (Object <i class="parameter">newSource</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean[ ] <b class="function">areNew</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.tree.TreePath <b class="function">newLeadSelectionPath</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.tree.TreePath <b class="function">oldLeadSelectionPath</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.tree.TreePath[ ] <b class="function">paths</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->TreeSelectionEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTree.fireValueChanged(), JTree.AccessibleJTree.valueChanged(), JTree.TreeSelectionRedirector.valueChanged(), TreeSelectionListener.valueChanged(), javax.swing.tree.DefaultTreeCellEditor.valueChanged(), javax.swing.tree.DefaultTreeSelectionModel.fireValueChanged()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TreeSelectionListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2768"></a>
<p>  This interface defines the method that an object must implement to
  receive notifications about changes to the selection state of a
  <tt class="literal">javax.swing.tree.TreeSelectionModel</tt> object or
  <tt class="literal">JTree</tt> component.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TreeSelectionListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">valueChanged</b> (TreeSelectionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TreeSelectionListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">JTree.AccessibleJTree, JTree.TreeSelectionRedirector, javax.swing.tree.DefaultTreeCellEditor</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTree.{addTreeSelectionListener(), removeTreeSelectionListener()}, javax.swing.tree.DefaultTreeSelectionModel.{addTreeSelectionListener(), removeTreeSelectionListener()}, javax.swing.tree.TreeSelectionModel.{addTreeSelectionListener(), removeTreeSelectionListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TreeWillExpandListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2769"></a>
<p>  This interface defines the methods that <tt class="literal">JTree</tt>
  invokes on registered listeners immediately before it expands or
  collapses a node.  Do not confuse this interface with
  <tt class="literal">TreeExpansionListener</tt>, which is notified
  immediately after a node is expanded or collapsed.  Both listeners
  share the same <tt class="literal">TreeExpansionEvent</tt> event type,
  however.  Note that the methods of this interface can throw an
  <tt class="literal">ExpandVetoException</tt> to veto the proposed expansion
  or collapse of the node.</p>
<a name="INDEX-2770"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TreeWillExpandListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">treeWillCollapse</b> (TreeExpansionEvent <i class="parameter">event</i>) throws javax.swing.tree.ExpandVetoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">treeWillExpand</b> (TreeExpansionEvent <i class="parameter">event</i>) throws javax.swing.tree.ExpandVetoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TreeWillExpandListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTree.{addTreeWillExpandListener(), removeTreeWillExpandListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>UndoableEditEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>


<a name="INDEX-2771"></a>
<p>  An event of this type is generated by a
  <tt class="literal">javax.swing.text.Document</tt> when an undoable edit
  has occurred.  The inherited <tt class="literal">getSource()</tt> method
  returns the <tt class="literal">Document</tt> object on which the edit
  occurred, and <tt class="literal">getEdit()</tt> returns a description of
  the edit itself.</p>
<a name="INDEX-2772"></a>
<a name="INDEX-2773"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">UndoableEditEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">UndoableEditEvent</b> (Object <i class="parameter">source</i>, javax.swing.undo.UndoableEdit <i class="parameter">edit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.undo.UndoableEdit <b class="function">getEdit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->UndoableEditEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">UndoableEditListener.undoableEditHappened(), javax.swing.text.AbstractDocument.fireUndoableEditUpdate(), javax.swing.text.html.HTMLDocument.fireUndoableEditUpdate(), javax.swing.undo.UndoManager.undoableEditHappened()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>UndoableEditListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2774"></a>
<p>  This interface defines the method that an object must implement in
  order to receive notifications when an undoable edit occurs in a
  <tt class="literal">javax.swing.text.Document</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">UndoableEditListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">undoableEditHappened</b> (UndoableEditEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(UndoableEditListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">javax.swing.undo.UndoManager</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.text.AbstractDocument.{addUndoableEditListener(), removeUndoableEditListener()}, javax.swing.text.Document.{addUndoableEditListener(), removeUndoableEditListener()}, javax.swing.undo.UndoableEditSupport.{addUndoableEditListener(), removeUndoableEditListener()}</tt>
</p>
</div>
<a name="INDEX-2775"></a>
<a name="INDEX-2776"></a>
<a name="INDEX-2777"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch25_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch25_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch27_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch27_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">25.1. The javax.swing.colorchooser Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">27. The javax.swing.filechooser Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
