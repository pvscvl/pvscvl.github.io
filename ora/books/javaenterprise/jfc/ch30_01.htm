<html>
<head>
<title>The javax.swing.text Package (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The javax.swing.text Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch29_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch29_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch31_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch31_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 30.  The javax.swing.text Package</h1>

<p>  This large and complex package contains the powerful
  <tt class="literal">JTextComponent</tt> text editor and all of its
  supporting infrastructure.  The <tt class="literal">JTextField</tt>,
  <tt class="literal">JTextArea</tt>, <tt class="literal">JEditorPane</tt>, and
  other text input components of the <tt class="literal">javax.swing</tt>
  package all subclass <tt class="literal">JTextComponent</tt> and rely on the
  other classes and interfaces of this package.</p>
<a name="INDEX-2910"></a>
<a name="INDEX-2911"></a>
<a name="INDEX-2912"></a>
<p>  The <tt class="literal">Document</tt> interface defines the data model for
  the <tt class="literal">JTextComponent</tt>.  It is the basic abstraction
  for documents that can be displayed and edited.  The
  <tt class="literal">AbstractDocument</tt> class implements this interface and
  provides a number of useful features and extensions.
  <tt class="literal">StyledDocument</tt> extends <tt class="literal">Document</tt>
  to define support for documents that have styles associated with
  their content.  <tt class="literal">DefaultStyledDocument</tt> is a concrete
  implementation based on <tt class="literal">AbstractDocument</tt>. Other
  important classes and interfaces in this package include:
  <tt class="literal">EditorKit</tt>, <tt class="literal">Element</tt>,
  <tt class="literal">View</tt>, <tt class="literal">AbstractDocument.Content</tt>,
  <tt class="literal">Caret</tt>, and <tt class="literal">Highlighter</tt>.
  <a href="#jfcnut-ch-javax.swing.text-fig-1">Figure 30-1</a> shows the class hierarchy of
  this package.</p>
<a name="INDEX-2913"></a>
<a name="INDEX-2914"></a>
<a name="jfcnut-ch-javax.swing.text-fig-1"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.3001.gif" webstripperlinkwas="figs/jfcn.3001.gif"></div>
<h4 class="objtitle">Figure 30-1. The javax.swing.text package</h4>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractDocument</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2915"></a>
<p> 
  This class is a partial, abstract implementation of the
  <tt class="literal">Document</tt> interface, which also defines several
  important inner classes and interfaces.  Typical applications do not
  have to use or subclass this class.  Instead, they can rely on
  predefined concrete implementations such as
  <tt class="literal">PlainDocument</tt>,
  <tt class="literal">DefaultStyledDocument</tt>, and
  <tt class="literal">javax.swing.text.html.HTMLDocument</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">AbstractDocument</b> implements Document, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">AbstractDocument</b> (AbstractDocument.Content <i class="parameter">data</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">AbstractDocument</b> (AbstractDocument.Content <i class="parameter">data</i>, AbstractDocument.AttributeContext <i class="parameter">context</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">BidiElementName</b> ;</td><td align="right"><i> ="bidi level"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ContentElementName</b> ;</td><td align="right"><i> ="content"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ElementNameAttribute</b> ;</td><td align="right"><i> ="$ename"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ParagraphElementName</b> ;</td><td align="right"><i> ="paragraph"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">SectionElementName</b> ;</td><td align="right"><i> ="section"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final String <b class="function">BAD_LOCATION</b> ;</td><td align="right"><i> ="document location failure"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addDocumentListener</b> (javax.swing.event.DocumentListener <i class="parameter">listener</i>);</td><td align="right"><i> Implements:Document</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeDocumentListener</b> (javax.swing.event.DocumentListener <i class="parameter">listener</i>);</td><td align="right"><i> Implements:Document</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addUndoableEditListener</b> (javax.swing.event.UndoableEditListener <i class="parameter">listener</i>);</td><td align="right"><i> Implements:Document</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeUndoableEditListener</b> (javax.swing.event.UndoableEditListener <i class="parameter">listener</i>);</td><td align="right"><i> Implements:Document</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">dump</b> (java.io.PrintStream <i class="parameter">out</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAsynchronousLoadPriority</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">getBidiRootElement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Dictionary <b class="function">getDocumentProperties</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.text.Element <b class="function">getParagraphElement</b> (int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final void <b class="function">readLock</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final void <b class="function">readUnlock</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAsynchronousLoadPriority</b> (int <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDocumentProperties</b> (java.util.Dictionary <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Document</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addDocumentListener</b> (javax.swing.event.DocumentListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addUndoableEditListener</b> (javax.swing.event.UndoableEditListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Position <b class="function">createPosition</b> (int <i class="parameter">offs</i>) throws BadLocationException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.text.Element <b class="function">getDefaultRootElement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final Position <b class="function">getEndPosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLength</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final Object <b class="function">getProperty</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element[ ] <b class="function">getRootElements</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final Position <b class="function">getStartPosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getText</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">getText</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, Segment <i class="parameter">txt</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertString</b> (int <i class="parameter">offs</i>, String <i class="parameter">str</i>, AttributeSet <i class="parameter">a</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final void <b class="function">putProperty</b> (Object <i class="parameter">key</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (int <i class="parameter">offs</i>, int <i class="parameter">len</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeDocumentListener</b> (javax.swing.event.DocumentListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeUndoableEditListener</b> (javax.swing.event.UndoableEditListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">render</b> (Runnable <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.text.Element <b class="function">createBranchElement</b> (javax.swing.text.Element <i class="parameter">parent</i>, AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.text.Element <b class="function">createLeafElement</b> (javax.swing.text.Element <i class="parameter">parent</i>, AttributeSet <i class="parameter">a</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireChangedUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireInsertUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireRemoveUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireUndoableEditUpdate</b> (javax.swing.event.UndoableEditEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final AbstractDocument.AttributeContext <b class="function">getAttributeContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final AbstractDocument.Content <b class="function">getContent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final Thread <b class="function">getCurrentWriter</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">insertUpdate</b> (AbstractDocument.DefaultDocumentEvent <i class="parameter">chng</i>, AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">postRemoveUpdate</b> (AbstractDocument.DefaultDocumentEvent <i class="parameter">chng</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">removeUpdate</b> (AbstractDocument.DefaultDocumentEvent <i class="parameter">chng</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">writeLock</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">writeUnlock</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractDocument(Document,Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">DefaultStyledDocument, PlainDocument</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractDocument.AbstractElement</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2916"></a>
<p> 
  This abstract class is a partial implementation of the
  <tt class="literal">Element</tt> interface.  <tt class="literal">Document</tt>
  objects derived from <tt class="literal">AbstractDocument</tt> are composed
  of <tt class="literal">Element</tt> objects derived from
  <tt class="literal">AbstractDocument.AbstractElement</tt>.  In addition to
  implementing <tt class="literal">Element</tt>, this class also implements
  the <tt class="literal">MutableAttributeSet</tt> interface, so it can serve
  as its own attribute set.  And it implements the
  <tt class="literal">TreeNode</tt> interface, which can make it easy to
  display the element structure of an
  <tt class="literal">AbstractDocument</tt> using the <tt class="literal">JTree</tt>
  component (a useful debugging technique).
  Applications typically do not use or subclass this class.  See also
  the <tt class="literal">BranchElement</tt> and
  <tt class="literal">LeafElement</tt> subclasses, both of which are also
  inner classes of <tt class="literal">AbstractDocument</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">AbstractDocument.AbstractElement</b> implements javax.swing.text.Element, MutableAttributeSet, Serializable, javax.swing.tree.TreeNode {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AbstractElement</b> (javax.swing.text.Element <i class="parameter">parent</i>, AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">dump</b> (java.io.PrintStream <i class="parameter">psOut</i>, int <i class="parameter">indentAmount</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing AttributeSet</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsAttribute</b> (Object <i class="parameter">name</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsAttributes</b> (AttributeSet <i class="parameter">attrs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">copyAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getAttribute</b> (Object <i class="parameter">attrName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAttributeCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">getAttributeNames</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">getResolveParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDefined</b> (Object <i class="parameter">attrName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEqual</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Element</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">getAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Document <b class="function">getDocument</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.text.Element <b class="function">getElement</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getElementCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getElementIndex</b> (int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getEndOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">getParentElement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getStartOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isLeaf</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MutableAttributeSet</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addAttribute</b> (Object <i class="parameter">name</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addAttributes</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAttribute</b> (Object <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAttributes</b> (AttributeSet <i class="parameter">attrs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAttributes</b> (java.util.Enumeration <i class="parameter">names</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setResolveParent</b> (AttributeSet <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TreeNode</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Enumeration <b class="function">children</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getAllowsChildren</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreeNode <b class="function">getChildAt</b> (int <i class="parameter">childIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getChildCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIndex</b> (javax.swing.tree.TreeNode <i class="parameter">node</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreeNode <b class="function">getParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">finalize</b> () throws Throwable;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">AbstractDocument.BranchElement, AbstractDocument.LeafElement</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DefaultStyledDocument.createDefaultRoot(), PlainDocument.createDefaultRoot(), javax.swing.text.html.HTMLDocument.createDefaultRoot()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractDocument.AttributeContext</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2917"></a>
<p> 
  This interface defines methods that accept an immutable
  <tt class="literal">AttributeSet</tt> argument and return another immutable
  <tt class="literal">AttributeSet</tt> object.  These methods can be used to
  implement the <tt class="literal">MutableAttributeSet</tt> interface
  entirely in terms of immutable <tt class="literal">AttributeSet</tt>
  objects.  Most documents frequently reuse a small set of common
  attribute sets.  The use of immutable
  <tt class="literal">AttributeSet</tt> objects is desirable because they may
  be cached and shared, resulting in substantial memory savings.
  <tt class="literal">JTextComponent</tt> uses the attribute set caching
  technique by default, and typical applications never need to use or
  implement this interface.  See <tt class="literal">StyleContext</tt> for a
  concrete implementation of this interface.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static interface <b class="classname">AbstractDocument.AttributeContext</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract AttributeSet <b class="function">addAttribute</b> (AttributeSet <i class="parameter">old</i>, Object <i class="parameter">name</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract AttributeSet <b class="function">addAttributes</b> (AttributeSet <i class="parameter">old</i>, AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract AttributeSet <b class="function">getEmptySet</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">reclaim</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract AttributeSet <b class="function">removeAttribute</b> (AttributeSet <i class="parameter">old</i>, Object <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract AttributeSet <b class="function">removeAttributes</b> (AttributeSet <i class="parameter">old</i>, AttributeSet <i class="parameter">attrs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract AttributeSet <b class="function">removeAttributes</b> (AttributeSet <i class="parameter">old</i>, java.util.Enumeration <i class="parameter">names</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">StyleContext</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AbstractDocument.AbstractDocument()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AbstractDocument.getAttributeContext()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractDocument.BranchElement</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2918"></a>
<p> 
  This class is an <tt class="literal">Element</tt> implementation
  suitable for <tt class="literal">Document</tt> elements
  that contain other elements (e.g., paragraph
  elements).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">AbstractDocument.BranchElement</b> extends AbstractDocument.AbstractElement {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BranchElement</b> (javax.swing.text.Element <i class="parameter">parent</i>, AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">positionToElement</b> (int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">replace</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, javax.swing.text.Element[ ] <i class="parameter">elems</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractDocument.AbstractElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">children</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getAllowsChildren</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">getElement</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getElementCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getElementIndex</b> (int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getEndOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getStartOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLeaf</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">DefaultStyledDocument.SectionElement, javax.swing.text.html.HTMLDocument.BlockElement</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractDocument.Content</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2919"></a>
<p>  This interface defines an abstract representation of an editable
  piece of text.  An <tt class="literal">AbstractDocument.Content</tt> object
  is used to represent the contents of any <tt class="literal">Document</tt>
  derived from <tt class="literal">AbstractDocument</tt>.  A
  <tt class="literal">Content</tt> implementation must be able to return
  arbitrary text segments, insert and delete text, and return
  <tt class="literal">Position</tt> objects that mark positions within the
  content.  If the <tt class="literal">Content</tt> implementation allows
  undo operations, the <tt class="literal">insertString()</tt> method should
  return an <tt class="literal">UndoableEdit</tt> object; otherwise it should
  return <tt class="literal">null</tt>.
  Applications typically do not use or implement this interface.  See
  <tt class="literal">StringContent</tt> and <tt class="literal">GapContent</tt> for
  two implementations.</p>
<a name="INDEX-2920"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static interface <b class="classname">AbstractDocument.Content</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Position <b class="function">createPosition</b> (int <i class="parameter">offset</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">getChars</b> (int <i class="parameter">where</i>, int <i class="parameter">len</i>, Segment <i class="parameter">txt</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getString</b> (int <i class="parameter">where</i>, int <i class="parameter">len</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.undo.UndoableEdit <b class="function">insertString</b> (int <i class="parameter">where</i>, String <i class="parameter">str</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">length</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.undo.UndoableEdit <b class="function">remove</b> (int <i class="parameter">where</i>, int <i class="parameter">nitems</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">GapContent, StringContent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AbstractDocument.AbstractDocument(), DefaultStyledDocument.DefaultStyledDocument(), PlainDocument.PlainDocument(), javax.swing.text.html.HTMLDocument.HTMLDocument()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AbstractDocument.getContent()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractDocument.DefaultDocumentEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2921"></a>
<p>  This class is the <tt class="literal">javax.swing.event.DocumentEvent</tt> 
  implementation used by documents derived from
  <tt class="literal">AbstractDocument</tt>.  It is also an
  <tt class="literal">UndoableEdit</tt> and therefore can be used with the
  undo architecture of <tt class="literal">javax.swing.undo</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">AbstractDocument.DefaultDocumentEvent</b> extends javax.swing.undo.CompoundEdit implements javax.swing.event.DocumentEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultDocumentEvent</b> (int <i class="parameter">offs</i>, int <i class="parameter">len</i>, javax.swing.event.DocumentEvent.EventType <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing DocumentEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.event.DocumentEvent.ElementChange <b class="function">getChange</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Document <b class="function">getDocument</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLength</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.event.DocumentEvent.EventType <b class="function">getType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding CompoundEdit</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">addEdit</b> (javax.swing.undo.UndoableEdit <i class="parameter">anEdit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getPresentationName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getRedoPresentationName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUndoPresentationName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSignificant</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">redo</b> () throws javax.swing.undo.CannotRedoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">undo</b> () throws javax.swing.undo.CannotUndoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AbstractDocument.{insertUpdate(), postRemoveUpdate(), removeUpdate()}, DefaultStyledDocument.{insertUpdate(), removeUpdate()}, DefaultStyledDocument.ElementBuffer.{change(), insert(), remove()}, PlainDocument.{insertUpdate(), removeUpdate()}, javax.swing.text.html.HTMLDocument.insertUpdate()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractDocument.ElementEdit</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2922"></a>
<p>  This class is the implementation of
  <tt class="literal">DocumentEvent.ElementEdit</tt> used by
  <tt class="literal">AbstractDocument</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">AbstractDocument.ElementEdit</b> extends javax.swing.undo.AbstractUndoableEdit implements javax.swing.event.DocumentEvent.ElementChange {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ElementEdit</b> (javax.swing.text.Element <i class="parameter">e</i>, int <i class="parameter">index</i>, javax.swing.text.Element[ ] <i class="parameter">removed</i>, javax.swing.text.Element[ ] <i class="parameter">added</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing DocumentEvent.ElementChange</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element[ ] <b class="function">getChildrenAdded</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element[ ] <b class="function">getChildrenRemoved</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">getElement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractUndoableEdit</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">redo</b> () throws javax.swing.undo.CannotRedoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">undo</b> () throws javax.swing.undo.CannotUndoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractDocument.LeafElement</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2923"></a>
<p> 
  This class is an <tt class="literal">Element</tt> implementation
  suitable for <tt class="literal">Document</tt> elements
  that do not contain children elements (e.g., runs of
  styled text).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">AbstractDocument.LeafElement</b> extends AbstractDocument.AbstractElement {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">LeafElement</b> (javax.swing.text.Element <i class="parameter">parent</i>, AttributeSet <i class="parameter">a</i>, int <i class="parameter">offs0</i>, int <i class="parameter">offs1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractDocument.AbstractElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">children</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getAllowsChildren</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">getElement</b> (int <i class="parameter">index</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getElementCount</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getElementIndex</b> (int <i class="parameter">pos</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getEndOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getStartOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLeaf</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.html.HTMLDocument.RunElement</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractWriter</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2924"></a>
<p> 
  This abstract class provides a simple but convenient starting
  place for applications that want to write a textual representation of a
  <tt class="literal">Document</tt> or <tt class="literal">Element</tt> tree.  The
  abstract <tt class="literal">write()</tt> method must be implemented by a
  subclass.  This method must iterate over the
  <tt class="literal">Document</tt> or <tt class="literal">Element</tt> tree (using
  the <tt class="literal">ElementIterator</tt> provided by
  <tt class="literal">getElementIterator()</tt>) and write out a textual
  description of the <tt class="literal">Element</tt> objects using the other
  methods of the class.
  Applications do not typically use or subclass this class.</p>
<a name="INDEX-2925"></a>
<a name="INDEX-2926"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">AbstractWriter</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">AbstractWriter</b> (java.io.Writer <i class="parameter">w</i>, javax.swing.text.Element <i class="parameter">root</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">AbstractWriter</b> (java.io.Writer <i class="parameter">w</i>, Document <i class="parameter">doc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">AbstractWriter</b> (java.io.Writer <i class="parameter">w</i>, javax.swing.text.Element <i class="parameter">root</i>, int <i class="parameter">pos</i>, int <i class="parameter">len</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">AbstractWriter</b> (java.io.Writer <i class="parameter">w</i>, Document <i class="parameter">doc</i>, int <i class="parameter">pos</i>, int <i class="parameter">len</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final char <b class="function">NEWLINE</b> ;</td><td align="right"><i> ='\12'</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">decrIndent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Document <b class="function">getDocument</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected ElementIterator <b class="function">getElementIterator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">getText</b> (javax.swing.text.Element <i class="parameter">elem</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">incrIndent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">indent</b> () throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">inRange</b> (javax.swing.text.Element <i class="parameter">next</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setIndentSpace</b> (int <i class="parameter">space</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setLineLength</b> (int <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">text</b> (javax.swing.text.Element <i class="parameter">elem</i>) throws BadLocationException, java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract void <b class="function">write</b> () throws java.io.IOException, BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">write</b> (String <i class="parameter">str</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">write</b> (char <i class="parameter">ch</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">writeAttributes</b> (AttributeSet <i class="parameter">attr</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.html.HTMLWriter, javax.swing.text.html.MinimalHTMLWriter</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AttributeSet</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2927"></a>
<p> 
  This interface defines the basic methods required for a
  set of attributes.  It defines a mapping from attribute
  names, or keys, to attribute values.  Both keys and values can be
  arbitrary objects.  The <tt class="literal">StyleConstants</tt> class
  defines a number of commonly used attribute keys.
  The <tt class="literal">AttributeSet</tt> interface defines four inner
  interfaces.  These empty interfaces serve as marker interfaces and
  should be implemented by an attribute key object to specify the general
  category of the key.</p>
<p>  An <tt class="literal">AttributeSet</tt> can have another
  <tt class="literal">AttributeSet</tt> as its parent.  When you look up a
  value with <tt class="literal">getAttribute()</tt>, the local mappings are
  searched first.  If no matching attribute is found locally, however,
  the search continues (recursively) on the parent
  <tt class="literal">AttributeSet</tt>.  The 

parent attribute set is itself
  stored as an attribute, using the key defined by the
  <tt class="literal">ResolveAttribute</tt> constant.  Call
  <tt class="literal">getResolveParent()</tt> to query the parent
  <tt class="literal">AttributeSet</tt>.  The
  <tt class="literal">isDefined()</tt> and
  <tt class="literal">getAttributeNames()</tt> methods operate only on the
  local attribute mappings and do not use the parent
  <tt class="literal">AttributeSet</tt>.</p>
<a name="INDEX-2928"></a>
<a name="INDEX-2929"></a>
<a name="INDEX-2930"></a>

<p>  See also <tt class="literal">MutableAttributeSet</tt>,
  <tt class="literal">SimpleAttributeSet</tt>, <tt class="literal">Style</tt>, and
  <tt class="literal">StyleConstants</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">AttributeSet</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">NameAttribute</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">ResolveAttribute</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">containsAttribute</b> (Object <i class="parameter">name</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">containsAttributes</b> (AttributeSet <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract AttributeSet <b class="function">copyAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getAttribute</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getAttributeCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Enumeration <b class="function">getAttributeNames</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract AttributeSet <b class="function">getResolveParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isDefined</b> (Object <i class="parameter">attrName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isEqual</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">MutableAttributeSet, StyleContext.SmallAttributeSet</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DefaultStyledDocument.AttributeUndoableEdit.{copy, newAttributes}, SimpleAttributeSet.EMPTY</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AttributeSet.CharacterAttribute</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2931"></a>
<p>  This marker interface should be implemented by any object that serves
  as the key for a character attribute.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static interface <b class="classname">AttributeSet.CharacterAttribute</b> {</td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">StyleConstants.CharacterConstants, StyleConstants.ColorConstants, StyleConstants.FontConstants</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AttributeSet.ColorAttribute</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This marker interface should be implemented by any object that serves
  as the key for a color attribute.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static interface <b class="classname">AttributeSet.ColorAttribute</b> {</td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">StyleConstants.ColorConstants</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AttributeSet.FontAttribute</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This marker interface should be implemented by any object that serves
  as the key for a font attribute.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static interface <b class="classname">AttributeSet.FontAttribute</b> {</td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">StyleConstants.FontConstants</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AttributeSet.ParagraphAttribute</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This marker interface should be implemented by any object that serves
  as the key for a paragraph attribute.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static interface <b class="classname">AttributeSet.ParagraphAttribute</b> {</td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">StyleConstants.ParagraphConstants</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BadLocationException</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<a name="INDEX-2932"></a>
<p>  Thrown by methods throughout
  <tt class="literal">javax.swing.text</tt> when they are passed a document
  position that does not exist.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BadLocationException</b> extends Exception {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BadLocationException</b> (String <i class="parameter">s</i>, int <i class="parameter">offs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">offsetRequested</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->BadLocationException</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BoxView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2933"></a>
<p>  This class is a <tt class="literal">CompositeView</tt> that arranges its
  children into a row or a column.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BoxView</b> extends CompositeView {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BoxView</b> (javax.swing.text.Element <i class="parameter">elem</i>, int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final int <b class="function">getHeight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final int <b class="function">getWidth</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding CompositeView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">getChildAllocation</b> (int <i class="parameter">index</i>, java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">modelToView</b> (int <i class="parameter">pos</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias <i class="parameter">b</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">replace</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, View[ ] <i class="parameter">elems</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">viewToModel</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias[ ] <i class="parameter">bias</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding CompositeView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">childAllocation</b> (int <i class="parameter">index</i>, java.awt.Rectangle <i class="parameter">alloc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">flipEastAndWestAtEnds</b> (int <i class="parameter">position</i>, Position.Bias <i class="parameter">bias</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected View <b class="function">getViewAtPoint</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, java.awt.Rectangle <i class="parameter">alloc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isAfter</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, java.awt.Rectangle <i class="parameter">innerAlloc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isBefore</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, java.awt.Rectangle <i class="parameter">innerAlloc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding View</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAlignment</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getMaximumSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getMinimumSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getPreferredSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getResizeWeight</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>, java.awt.Shape <i class="parameter">allocation</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">preferenceChanged</b> (View <i class="parameter">child</i>, boolean <i class="parameter">width</i>, boolean <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSize</b> (float <i class="parameter">width</i>, float <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">baselineLayout</b> (int <i class="parameter">targetSpan</i>, int <i class="parameter">axis</i>, int[ ] <i class="parameter">offsets</i>, int[ ] <i class="parameter">spans</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected SizeRequirements <b class="function">baselineRequirements</b> (int <i class="parameter">axis</i>, SizeRequirements <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected SizeRequirements <b class="function">calculateMajorAxisRequirements</b> (int <i class="parameter">axis</i>, SizeRequirements <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected SizeRequirements <b class="function">calculateMinorAxisRequirements</b> (int <i class="parameter">axis</i>, SizeRequirements <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final int <b class="function">getOffset</b> (int <i class="parameter">axis</i>, int <i class="parameter">childIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final int <b class="function">getSpan</b> (int <i class="parameter">axis</i>, int <i class="parameter">childIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isAllocationValid</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">layout</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">layoutMajorAxis</b> (int <i class="parameter">targetSpan</i>, int <i class="parameter">axis</i>, int[ ] <i class="parameter">offsets</i>, int[ ] <i class="parameter">spans</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">layoutMinorAxis</b> (int <i class="parameter">targetSpan</i>, int <i class="parameter">axis</i>, int[ ] <i class="parameter">offsets</i>, int[ ] <i class="parameter">spans</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">paintChild</b> (java.awt.Graphics <i class="parameter">g</i>, java.awt.Rectangle <i class="parameter">alloc</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->View(SwingConstants)-->CompositeView-->BoxView</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.ParagraphView, TableView, TableView.TableCell, TableView.TableRow, WrappedPlainView, javax.swing.text.html.BlockView</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Caret</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2934"></a>
<p>  This interface defines the methods that must be implemented by a class
  that wants to keep track of the insertion cursor position and draw
  the insertion cursor for a <tt class="literal">JTextComponent</tt>.  In the
  nomenclature of text editing, the <em class="emphasis">dot</em> is the current insertion
  position, and the <em class="emphasis">mark</em> is some other position in the text.  The text
  between the dot and the mark is implicitly selected, and certain
  editing commands operate on this text.  The
  <tt class="literal">setDot()</tt> method sets the position of both the dot and
  the mark, while <tt class="literal">moveDot()</tt> sets the position of the dot,
  leaving the mark where it is.
  The <tt class="literal">paint()</tt> method is called when the insertion
  cursor needs to be drawn or redrawn.
  <tt class="literal">setBlinkRate()</tt> specifies how often the cursor
  should blink.  If the cursor does blink, <tt class="literal">Caret</tt> is
  responsible for causing this blinking; <tt class="literal">paint()</tt> is
  not automatically called to implement blinking.  The
  <tt class="literal">Caret</tt> should notify any registered
  <tt class="literal">ChangeListener</tt> objects when the position of the
  cursor changes.</p>
<a name="INDEX-2935"></a>
<a name="INDEX-2936"></a>
<a name="INDEX-2937"></a>
<a name="INDEX-2938"></a>
<p>  Although the <tt class="literal">Caret</tt> interface allows the appearance
  and behavior of the <tt class="literal">JTextComponent</tt> cursor to be
  customized, it is uncommon to do this.  Most applications are
  perfectly content to use <tt class="literal">DefaultCaret</tt>, which is
  the <tt class="literal">Caret</tt> implementation installed by all the
  standard look-and-feels.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Caret</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getBlinkRate</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBlinkRate</b> (int <i class="parameter">rate</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getDot</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setDot</b> (int <i class="parameter">dot</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.Point <b class="function">getMagicCaretPosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setMagicCaretPosition</b> (java.awt.Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMark</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isSelectionVisible</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setSelectionVisible</b> (boolean <i class="parameter">v</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isVisible</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setVisible</b> (boolean <i class="parameter">v</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">deinstall</b> (JTextComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">install</b> (JTextComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">moveDot</b> (int <i class="parameter">dot</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultCaret</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTextComponent.setCaret()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DefaultEditorKit.createCaret(), EditorKit.createCaret(), JTextComponent.getCaret()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ChangedCharSetException</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<a name="INDEX-2939"></a>
<p>  This subclass of <tt class="literal">IOException</tt> is thrown by the
  <tt class="literal">read()</tt> method of an <tt class="literal">EditorKit</tt>
  when it reads a document that it expects to be encoded in a given
  character set and finds that the document specifies that it is
  encoded using some other character set.  Typically,
  this happens when reading HTML documents that specify their encoding
  using a <tt class="literal">&lt;META&gt;</tt> tag.</p>
<a name="INDEX-2940"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ChangedCharSetException</b> extends java.io.IOException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ChangedCharSetException</b> (String <i class="parameter">charSetSpec</i>, boolean <i class="parameter">charSetKey</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getCharSetSpec</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">keyEqualsCharSet</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->java.io.IOException-->ChangedCharSetException</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span><tt class="literal">javax.swing.text.html.parser.DocumentParser.handleEmptyTag(), javax.swing.text.html.parser.Parser.{handleEmptyTag(), startTag()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ComponentView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2941"></a>
<p>  This class is a <tt class="literal">View</tt> that encapsulates a
  <tt class="literal">Component</tt> and allows it to be displayed within a
  <tt class="literal">Document</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ComponentView</b> extends View {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ComponentView</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final Component <b class="function">getComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding View</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAlignment</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getMaximumSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getMinimumSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getPreferredSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">modelToView</b> (int <i class="parameter">pos</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias <i class="parameter">b</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>, java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setParent</b> (View <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSize</b> (float <i class="parameter">width</i>, float <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">viewToModel</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias[ ] <i class="parameter">bias</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">createComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->View(SwingConstants)-->ComponentView</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.html.FormView, javax.swing.text.html.ObjectView</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CompositeView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2942"></a>
<p>  This abstract class is a <tt class="literal">View</tt> that can have
  children.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">CompositeView</b> extends View {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CompositeView</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">append</b> (View <i class="parameter">v</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insert</b> (int <i class="parameter">offs</i>, View <i class="parameter">v</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAll</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">replace</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, View[ ] <i class="parameter">views</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding View</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">changedUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">getChildAllocation</b> (int <i class="parameter">index</i>, java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getNextVisualPositionFrom</b> (int <i class="parameter">pos</i>, Position.Bias <i class="parameter">b</i>, java.awt.Shape <i class="parameter">a</i>, int <i class="parameter">direction</i>, Position.Bias[ ] <i class="parameter">biasRet</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public View <b class="function">getView</b> (int <i class="parameter">n</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getViewCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">modelToView</b> (int <i class="parameter">pos</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias <i class="parameter">b</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">modelToView</b> (int <i class="parameter">p0</i>, Position.Bias <i class="parameter">b0</i>, int <i class="parameter">p1</i>, Position.Bias <i class="parameter">b1</i>, java.awt.Shape <i class="parameter">a</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setParent</b> (View <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">viewToModel</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias[ ] <i class="parameter">bias</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract void <b class="function">childAllocation</b> (int <i class="parameter">index</i>, java.awt.Rectangle <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">flipEastAndWestAtEnds</b> (int <i class="parameter">position</i>, Position.Bias <i class="parameter">bias</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final short <b class="function">getBottomInset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Rectangle <b class="function">getInsideAllocation</b> (java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final short <b class="function">getLeftInset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getNextEastWestVisualPositionFrom</b> (int <i class="parameter">pos</i>, Position.Bias <i class="parameter">b</i>, java.awt.Shape <i class="parameter">a</i>, int <i class="parameter">direction</i>, Position.Bias[ ] <i class="parameter">biasRet</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getNextNorthSouthVisualPositionFrom</b> (int <i class="parameter">pos</i>, Position.Bias <i class="parameter">b</i>, java.awt.Shape <i class="parameter">a</i>, int <i class="parameter">direction</i>, Position.Bias[ ] <i class="parameter">biasRet</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final short <b class="function">getRightInset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final short <b class="function">getTopInset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract View <b class="function">getViewAtPoint</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, java.awt.Rectangle <i class="parameter">alloc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected View <b class="function">getViewAtPosition</b> (int <i class="parameter">pos</i>, java.awt.Rectangle <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getViewIndexAtPosition</b> (int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract boolean <b class="function">isAfter</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, java.awt.Rectangle <i class="parameter">alloc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract boolean <b class="function">isBefore</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, java.awt.Rectangle <i class="parameter">alloc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">loadChildren</b> (ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">setInsets</b> (short <i class="parameter">top</i>, short <i class="parameter">left</i>, short <i class="parameter">bottom</i>, short <i class="parameter">right</i>);</td><td align="right"><i></i></td>
</tr>

<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">setParagraphInsets</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->View(SwingConstants)-->CompositeView</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">BoxView</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultCaret</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2943"></a>
<p>  This is the default <tt class="literal">Caret</tt> implementation installed
  on all <tt class="literal">JTextComponent</tt> components by all of the
  standard look-and-feel implementations.  It displays the caret as a
  thin vertical line between characters.  Most applications do not have
  to use this class directly and can simply rely on its automatic use
  by <tt class="literal">JTextComponent</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultCaret</b> extends java.awt.Rectangle implements Caret, java.awt.event.FocusListener, java.awt.event.MouseListener, java.awt.event.MouseMotionListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultCaret</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:Caret</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:Caret</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Caret</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">deinstall</b> (JTextComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getBlinkRate</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDot</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Point <b class="function">getMagicCaretPosition</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMark</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">install</b> (JTextComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelectionVisible</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isVisible</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">moveDot</b> (int <i class="parameter">dot</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBlinkRate</b> (int <i class="parameter">rate</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDot</b> (int <i class="parameter">dot</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMagicCaretPosition</b> (java.awt.Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionVisible</b> (boolean <i class="parameter">vis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVisible</b> (boolean <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing FocusListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">focusGained</b> (java.awt.event.FocusEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">focusLost</b> (java.awt.event.FocusEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MouseListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseClicked</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseEntered</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseExited</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mousePressed</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseReleased</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MouseMotionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseDragged</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseMoved</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Rectangle</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">adjustVisibility</b> (java.awt.Rectangle <i class="parameter">nloc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">damage</b> (java.awt.Rectangle <i class="parameter">r</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireStateChanged</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final JTextComponent <b class="function">getComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Highlighter.HighlightPainter <b class="function">getSelectionPainter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">moveCaret</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">positionCaret</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">repaint</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.event.ChangeEvent <b class="function">changeEvent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.awt.geom.RectangularShape(Cloneable,java.awt.Shape)-->java.awt.geom.Rectangle2D-->java.awt.Rectangle(Serializable,java.awt.Shape)-->DefaultCaret(Caret,java.awt.event.FocusListener(java.util.EventListener),java.awt.event.MouseListener(java.util.EventListener),java.awt.event.MouseMotionListener(java.util.EventListener))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultEditorKit</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2944"></a>
<p>  This class is an <tt class="literal">EditorKit</tt> for plain text.  You can
  configure a <tt class="literal">JEditorPane</tt> to display plain,
  unformatted text using an instance of this class.
  The actions defined by this class are used by default by
  <tt class="literal">JTextComponent</tt>.
  <tt class="literal">DefaultEditorKit</tt> defines a number of
  <tt class="literal">String</tt>
  constants, which it uses as the names of the various
  <tt class="literal">Action</tt> objects it returns from its
  <tt class="literal">getActions()</tt> method.</p>
<a name="INDEX-2945"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultEditorKit</b> extends EditorKit {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultEditorKit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">backwardAction</b> ;</td><td align="right"><i> ="caret-backward"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">beepAction</b> ;</td><td align="right"><i> ="beep"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">beginAction</b> ;</td><td align="right"><i> ="caret-begin"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">beginLineAction</b> ;</td><td align="right"><i> ="caret-begin-line"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">beginParagraphAction</b> ;</td><td align="right"><i> ="caret-begin-paragraph"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">beginWordAction</b> ;</td><td align="right"><i> ="caret-begin-word"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">copyAction</b> ;</td><td align="right"><i> ="copy-to-clipboard"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">cutAction</b> ;</td><td align="right"><i> ="cut-to-clipboard"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">defaultKeyTypedAction</b> ;</td><td align="right"><i> ="default-typed"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">deleteNextCharAction</b> ;</td><td align="right"><i> ="delete-next"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">deletePrevCharAction</b> ;</td><td align="right"><i> ="delete-previous"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">downAction</b> ;</td><td align="right"><i> ="caret-down"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">endAction</b> ;</td><td align="right"><i> ="caret-end"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">endLineAction</b> ;</td><td align="right"><i> ="caret-end-line"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">EndOfLineStringProperty</b> ;</td><td align="right"><i> ="__EndOfLine__"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">endParagraphAction</b> ;</td><td align="right"><i> ="caret-end-paragraph"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">endWordAction</b> ;</td><td align="right"><i> ="caret-end-word"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">forwardAction</b> ;</td><td align="right"><i> ="caret-forward"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">insertBreakAction</b> ;</td><td align="right"><i> ="insert-break"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">insertContentAction</b> ;</td><td align="right"><i> ="insert-content"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">insertTabAction</b> ;</td><td align="right"><i> ="insert-tab"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">nextWordAction</b> ;</td><td align="right"><i> ="caret-next-word"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">pageDownAction</b> ;</td><td align="right"><i> ="page-down"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">pageUpAction</b> ;</td><td align="right"><i> ="page-up"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">pasteAction</b> ;</td><td align="right"><i> ="paste-from-clipboard"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">previousWordAction</b> ;</td><td align="right"><i> ="caret-previous-word"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">readOnlyAction</b> ;</td><td align="right"><i> ="set-read-only"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectAllAction</b> ;</td><td align="right"><i> ="select-all"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionBackwardAction</b> ;</td><td align="right"><i> ="selection-backward"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionBeginAction</b> ;</td><td align="right"><i> ="selection-begin"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionBeginLineAction</b> ;</td><td align="right"><i> ="selection-begin-line"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionBeginParagraphAction</b> ;</td><td align="right"><i> ="selection-begin-paragraph"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionBeginWordAction</b> ;</td><td align="right"><i> ="selection-begin-word"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionDownAction</b> ;</td><td align="right"><i> ="selection-down"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionEndAction</b> ;</td><td align="right"><i> ="selection-end"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionEndLineAction</b> ;</td><td align="right"><i> ="selection-end-line"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionEndParagraphAction</b> ;</td><td align="right"><i> ="selection-end-paragraph"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionEndWordAction</b> ;</td><td align="right"><i> ="selection-end-word"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionForwardAction</b> ;</td><td align="right"><i> ="selection-forward"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionNextWordAction</b> ;</td><td align="right"><i> ="selection-next-word"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionPreviousWordAction</b> ;</td><td align="right"><i> ="selection-previous-word"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectionUpAction</b> ;</td><td align="right"><i> ="selection-up"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectLineAction</b> ;</td><td align="right"><i> ="select-line"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectParagraphAction</b> ;</td><td align="right"><i> ="select-paragraph"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">selectWordAction</b> ;</td><td align="right"><i> ="select-word"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">upAction</b> ;</td><td align="right"><i> ="caret-up"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">writableAction</b> ;</td><td align="right"><i> ="set-writable"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding EditorKit</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Caret <b class="function">createCaret</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Document <b class="function">createDefaultDocument</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Action[ ] <b class="function">getActions</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getContentType</b> ();</td><td align="right"><i> default:"text/plain"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ViewFactory <b class="function">getViewFactory</b> ();</td><td align="right"><i> constant default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">read</b> (java.io.Reader <i class="parameter">in</i>, Document <i class="parameter">doc</i>, int <i class="parameter">pos</i>) throws java.io.IOException, BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">read</b> (java.io.InputStream <i class="parameter">in</i>, Document <i class="parameter">doc</i>, int <i class="parameter">pos</i>) throws java.io.IOException, BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">write</b> (java.io.Writer <i class="parameter">out</i>, Document <i class="parameter">doc</i>, int <i class="parameter">pos</i>, int <i class="parameter">len</i>) throws java.io.IOException, BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">write</b> (java.io.OutputStream <i class="parameter">out</i>, Document <i class="parameter">doc</i>, int <i class="parameter">pos</i>, int <i class="parameter">len</i>) throws java.io.IOException, BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->EditorKit(Cloneable,Serializable)-->DefaultEditorKit</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">StyledEditorKit</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultEditorKit.BeepAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<p>  This <tt class="literal">Action</tt> causes a beep.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">DefaultEditorKit.BeepAction</b> extends TextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeepAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultEditorKit.CopyAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<p>  This action causes the selected region of the
  <tt class="literal">JTextComponent</tt> to be placed on the system clipboard
  and made available for pasting.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">DefaultEditorKit.CopyAction</b> extends TextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CopyAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultEditorKit.CutAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<p>  This <tt class="literal">Action</tt> deletes the selected region of the
  <tt class="literal">JTextComponent</tt> and makes its contents available for
  pasting on the system clipboard.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">DefaultEditorKit.CutAction</b> extends TextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CutAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultEditorKit.DefaultKeyTypedAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2946"></a>
<p>  This <tt class="literal">Action</tt> is invoked when no other action is
  registered for a keystroke.  It inserts the action command string
  (which is usually the key that triggered the action) at the
  current cursor position.  Or, if there is currently a selection, it
  replaces the selected text with this text.  This is the most
  commonly used action in a <tt class="literal">JTextComponent</tt>, since it
  is used to insert all characters the user types.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">DefaultEditorKit.DefaultKeyTypedAction</b> extends TextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultKeyTypedAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultEditorKit.InsertBreakAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2947"></a>
<p>  This <tt class="literal">Action</tt> inserts a new line break into the
  document and deletes any currently selected text.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">DefaultEditorKit.InsertBreakAction</b> extends TextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InsertBreakAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultEditorKit.InsertContentAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2948"></a>
<p>  This <tt class="literal">Action</tt> inserts the
  <tt class="literal">ActionEvent</tt> command string into the document at the
  current position, deleting any current selection in the process.  </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">DefaultEditorKit.InsertContentAction</b> extends TextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InsertContentAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultEditorKit.InsertTabAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2949"></a>
<p>  This <tt class="literal">Action</tt> inserts a horizontal tab into the
  document, replacing the selected text, if any.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">DefaultEditorKit.InsertTabAction</b> extends TextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InsertTabAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultEditorKit.PasteAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2950"></a>
<p>  This <tt class="literal">Action</tt> gets the current text selection from
  the system
  clipboard and pastes it into the current document at the current
  insertion position, replacing any selected text.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">DefaultEditorKit.PasteAction</b> extends TextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">PasteAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultHighlighter</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2951"></a>
<p>  This class is the default highlighter object used by
  <tt class="literal">JTextComponent</tt> to keep track of highlighted regions
  within the <tt class="literal">Document</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultHighlighter</b> extends LayeredHighlighter {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultHighlighter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getDrawsLayeredHighlights</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDrawsLayeredHighlights</b> (boolean <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding LayeredHighlighter</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">addHighlight</b> (int <i class="parameter">p0</i>, int <i class="parameter">p1</i>, Highlighter.HighlightPainter <i class="parameter">p</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">changeHighlight</b> (Object <i class="parameter">tag</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">deinstall</b> (JTextComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Highlighter.Highlight[ ] <b class="function">getHighlights</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">install</b> (JTextComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintLayeredHighlights</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>, java.awt.Shape <i class="parameter">viewBounds</i>, JTextComponent <i class="parameter">editor</i>, View <i class="parameter">view</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAllHighlights</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeHighlight</b> (Object <i class="parameter">tag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static LayeredHighlighter.LayerPainter <b class="function">DefaultPainter</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->LayeredHighlighter(Highlighter)-->DefaultHighlighter</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultHighlighter.DefaultHighlightPainter</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This class is the default highlight painter object used by
  <tt class="literal">JTextComponent</tt> to draw its highlighted regions.  It
  fills the highlighted area with a solid color.  By default, the color
  is obtained with the <tt class="literal">getSelectionColor()</tt>
  method of the associated <tt class="literal">JTextComponent</tt>.</p>
<a name="INDEX-2952"></a>
<a name="INDEX-2953"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">DefaultHighlighter.DefaultHighlightPainter</b> extends LayeredHighlighter.LayerPainter {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultHighlightPainter</b> (java.awt.Color <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getColor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding LayeredHighlighter.LayerPainter</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">offs0</i>, int <i class="parameter">offs1</i>, java.awt.Shape <i class="parameter">bounds</i>, JTextComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">paintLayer</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">offs0</i>, int <i class="parameter">offs1</i>, java.awt.Shape <i class="parameter">bounds</i>, JTextComponent <i class="parameter">c</i>, View <i class="parameter">view</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultStyledDocument</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2954"></a>
<p>  This class extends <tt class="literal">AbstractDocument</tt> and implements
  <tt class="literal">StyledDocument</tt>.  It represents formatted text
  annotated with character and paragraph attributes.  To insert text
  into a <tt class="literal">DefaultStyledDocument</tt>, use the inherited
  <tt class="literal">insertString()</tt> method, specifying a document
  position, the string to insert, and the
  <tt class="literal">AttributeSet</tt> of attributes that should be applied to
  the inserted string.  You can display the contents of a
  <tt class="literal">DefaultStyledDocument</tt> using a
  <tt class="literal">JTextPane</tt> component.</p>
<a name="INDEX-2955"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultStyledDocument</b> extends AbstractDocument implements StyledDocument {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultStyledDocument</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultStyledDocument</b> (StyleContext <i class="parameter">styles</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultStyledDocument</b> (AbstractDocument.Content <i class="parameter">c</i>, StyleContext <i class="parameter">styles</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BUFFER_SIZE_DEFAULT</b> ;</td><td align="right"><i> =4096</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addDocumentListener</b> (javax.swing.event.DocumentListener <i class="parameter">listener</i>);</td><td align="right"><i> Implements:Document</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeDocumentListener</b> (javax.swing.event.DocumentListener <i class="parameter">listener</i>);</td><td align="right"><i> Implements:Document</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">getStyleNames</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Document</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addDocumentListener</b> (javax.swing.event.DocumentListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">getDefaultRootElement</b> ();</td><td align="right"><i> default:SectionElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeDocumentListener</b> (javax.swing.event.DocumentListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing StyledDocument</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Style <b class="function">addStyle</b> (String <i class="parameter">nm</i>, Style <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getBackground</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">getCharacterElement</b> (int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Font <b class="function">getFont</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getForeground</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Style <b class="function">getLogicalStyle</b> (int <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">getParagraphElement</b> (int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Style <b class="function">getStyle</b> (String <i class="parameter">nm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeStyle</b> (String <i class="parameter">nm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCharacterAttributes</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, AttributeSet <i class="parameter">s</i>, boolean <i class="parameter">replace</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLogicalStyle</b> (int <i class="parameter">pos</i>, Style <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setParagraphAttributes</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, AttributeSet <i class="parameter">s</i>, boolean <i class="parameter">replace</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding AbstractDocument</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">insertUpdate</b> (AbstractDocument.DefaultDocumentEvent <i class="parameter">chng</i>, AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">removeUpdate</b> (AbstractDocument.DefaultDocumentEvent <i class="parameter">chng</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">create</b> (DefaultStyledDocument.ElementSpec[ ] <i class="parameter">data</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AbstractDocument.AbstractElement <b class="function">createDefaultRoot</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">insert</b> (int <i class="parameter">offset</i>, DefaultStyledDocument.ElementSpec[ ] <i class="parameter">data</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">styleChanged</b> (Style <i class="parameter">style</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected DefaultStyledDocument.ElementBuffer <b class="function">buffer</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractDocument(Document,Serializable)-->DefaultStyledDocument(StyledDocument(Document))</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.html.HTMLDocument</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultStyledDocument.AttributeUndoableEdit</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2956"></a>
<p>  This <tt class="literal">UndoableEdit</tt> implementation is used internally
  by <tt class="literal">DefaultStyledDocument</tt> to remember (and undo)
  changes to the <tt class="literal">AttributeSet</tt> of an
  <tt class="literal">Element</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">DefaultStyledDocument.AttributeUndoableEdit</b> extends javax.swing.undo.AbstractUndoableEdit {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AttributeUndoableEdit</b> (javax.swing.text.Element <i class="parameter">element</i>, AttributeSet <i class="parameter">newAttributes</i>, boolean <i class="parameter">isReplacing</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractUndoableEdit</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">redo</b> () throws javax.swing.undo.CannotRedoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">undo</b> () throws javax.swing.undo.CannotUndoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AttributeSet <b class="function">copy</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.text.Element <b class="function">element</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isReplacing</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AttributeSet <b class="function">newAttributes</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultStyledDocument.ElementBuffer</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2957"></a>
<p>  This class allows insertions into an <tt class="literal">Element</tt> tree
  in the form of an array of
  <tt class="literal">DefaultStyledDocument.ElementSpec</tt> objects.  This is
  useful because a linear array of <tt class="literal">ElementSpec</tt>
  objects is often easier to work with than a tree of
  <tt class="literal">Element</tt> objects.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultStyledDocument.ElementBuffer</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ElementBuffer</b> (javax.swing.text.Element <i class="parameter">root</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">change</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, AbstractDocument.DefaultDocumentEvent <i class="parameter">de</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">clone</b> (javax.swing.text.Element <i class="parameter">parent</i>, javax.swing.text.Element <i class="parameter">clonee</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">getRootElement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insert</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, DefaultStyledDocument.ElementSpec[ ] <i class="parameter">data</i>, AbstractDocument.DefaultDocumentEvent <i class="parameter">de</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, AbstractDocument.DefaultDocumentEvent <i class="parameter">de</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">changeUpdate</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">insertUpdate</b> (DefaultStyledDocument.ElementSpec[ ] <i class="parameter">data</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">removeUpdate</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DefaultStyledDocument.buffer</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultStyledDocument.ElementSpec</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2958"></a>
<p> 
  This class is used to represent the elements of a document in a
  flat structure, instead of a tree.
  An <tt class="literal">ElementSpec</tt> object represent a start
  tag, an end tag, or document content.  Arrays of
  <tt class="literal">ElementSpec</tt> objects can be used to represent a
  document or a portion of a document, and these
  <tt class="literal">ElementSpec</tt> objects can later be converted into a
  tree of <tt class="literal">Element</tt> objects.  This class can be useful
  because it is often easier to work with an array of
  <tt class="literal">ElementSpec</tt> objects than with a tree of
  <tt class="literal">Element</tt> objects.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">DefaultStyledDocument.ElementSpec</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ElementSpec</b> (AttributeSet <i class="parameter">a</i>, short <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ElementSpec</b> (AttributeSet <i class="parameter">a</i>, short <i class="parameter">type</i>, int <i class="parameter">len</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ElementSpec</b> (AttributeSet <i class="parameter">a</i>, short <i class="parameter">type</i>, char[ ] <i class="parameter">txt</i>, int <i class="parameter">offs</i>, int <i class="parameter">len</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final short <b class="function">ContentType</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final short <b class="function">EndTagType</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final short <b class="function">JoinFractureDirection</b> ;</td><td align="right"><i> =7</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final short <b class="function">JoinNextDirection</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final short <b class="function">JoinPreviousDirection</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final short <b class="function">OriginateDirection</b> ;</td><td align="right"><i> =6</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final short <b class="function">StartTagType</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char[ ] <b class="function">getArray</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">getAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public short <b class="function">getDirection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDirection</b> (short <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLength</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public short <b class="function">getType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setType</b> (short <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DefaultStyledDocument.{create(), insert()}, DefaultStyledDocument.ElementBuffer.{insert(), insertUpdate()}, javax.swing.text.html.HTMLDocument.{create(), insert()}</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultStyledDocument.SectionElement</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2959"></a>
<p>  This protected inner class is the default root element used by
  <tt class="literal">DefaultStyledDocument</tt>.  Applications do not need to
  use or subclass this class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">DefaultStyledDocument.SectionElement</b> extends AbstractDocument.BranchElement {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SectionElement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractDocument.BranchElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultTextUI</b></font></td><td align="right"><font size="+1"><b>Java 1.2; Deprecated in Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This class is deprecated and should not be used.  As a text component
  UI delegate class, it never should have been part of this package.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">DefaultTextUI</b> extends javax.swing.plaf.basic.BasicTextUI {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultTextUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">javax.swing.plaf.basic.BasicTextUI-->DefaultTextUI</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Document</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2960"></a>
<p>  This interface defines the fundamental methods required in a class
  that stores document text to be displayed and edited by a
  <tt class="literal">JTextComponent</tt>.  The methods of this interface
  require that a <tt class="literal">Document</tt> object be able to
  represent document content both as a linear sequence of characters
  and as a tree of hierarchical <tt class="literal">Element</tt> objects.
  <tt class="literal">Element</tt> objects model the document structure and are
  used to represent things like paragraphs, lines, and runs of styled
  text.  When a <tt class="literal">JTree<!>t> component displays a
  <tt class="literal">Document</tt>, the <tt class="literal">Element</tt> tree is
  used to create a tree of <tt class="literal">View</tt> objects that display
  the individual elements.</p>
<a name="INDEX-2961"></a>
<p>  The <tt class="literal">getText()</tt> methods return text from the
  document, either as a <tt class="literal">String</tt> or in a supplied
  <tt class="literal">Segment</tt> object.  <tt class="literal">insertString()</tt>
  inserts a run of text associated with the specified attributes.
  <tt class="literal">remove()</tt> deletes text from the
  <tt class="literal">Document</tt>.  The <tt class="literal">Document</tt> object
  must fire appropriate <tt class="literal">DocumentEvent</tt> and
  <tt class="literal">UndoableEditEvent</tt> events when edits like these are
  performed. 
  <tt class="literal">createPosition()</tt> returns a
  <tt class="literal">Position</tt> object that represents a relative position
  in the document.  The <tt class="literal">Position</tt> reference
  remains valid even if text is inserted or deleted from the document.
  The <tt class="literal">putProperty()</tt> and
  <tt class="literal">getProperty()</tt> methods allow arbitrary key/value
  pairs to be associated with a <tt class="literal">Document</tt>.  These
  properties can be used to hold metainformation, such as the author
  and title of the document.  The <tt class="literal">TitleProperty</tt> and
  <tt class="literal">StreamDescriptionProperty</tt> constants are two
  predefined property keys.  Finally, the <tt class="literal">render()</tt>
  method must run the specified <tt class="literal">Runnable</tt> object while
  guaranteeing that there will not be any changes to the document.  This
  method is used to perform the potentially time-consuming document-rendering process in a thread-safe way.</p>
<a name="INDEX-2962"></a>
<a name="INDEX-2963"></a>
<a name="INDEX-2964"></a>
<a name="INDEX-2965"></a>
<p>  See also <tt class="literal">Element</tt>, <tt class="literal">AttributeSet</tt>, 
  <tt class="literal">Position</tt>, and <tt class="literal">Segment</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Document</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">StreamDescriptionProperty</b> ;</td><td align="right"><i> ="stream"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">TitleProperty</b> ;</td><td align="right"><i> ="title"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addDocumentListener</b> (javax.swing.event.DocumentListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeDocumentListener</b> (javax.swing.event.DocumentListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addUndoableEditListener</b> (javax.swing.event.UndoableEditListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeUndoableEditListener</b> (javax.swing.event.UndoableEditListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.text.Element <b class="function">getDefaultRootElement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Position <b class="function">getEndPosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getLength</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.text.Element[ ] <b class="function">getRootElements</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Position <b class="function">getStartPosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Position <b class="function">createPosition</b> (int <i class="parameter">offs</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getProperty</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getText</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">getText</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, Segment <i class="parameter">txt</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">insertString</b> (int <i class="parameter">offset</i>, String <i class="parameter">str</i>, AttributeSet <i class="parameter">a</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">putProperty</b> (Object <i class="parameter">key</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">remove</b> (int <i class="parameter">offs</i>, int <i class="parameter">len</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">render</b> (Runnable <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AbstractDocument, StyledDocument</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTextArea.createDefaultModel(), JTextField.createDefaultModel(), javax.swing.event.DocumentEvent.getDocument(), AbstractDocument.AbstractElement.getDocument(), AbstractDocument.DefaultDocumentEvent.getDocument(), AbstractWriter.getDocument(), DefaultEditorKit.createDefaultDocument(), EditorKit.createDefaultDocument(), javax.swing.text.Element.getDocument(), JTextComponent.getDocument(), StyledEditorKit.createDefaultDocument(), View.getDocument(), javax.swing.text.html.HTMLEditorKit.createDefaultDocument()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>EditorKit</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2966"></a>
<p>  This abstract class defines the methods that are used to
  configure a <tt class="literal">JEditorPane</tt> to display and edit a
  particular type of document.  Swing contains concrete subclasses for
  plain text, as well as HTML and RTF documents.  To configure a
  <tt class="literal">JEditorPane</tt>, instantiate an
  <tt class="literal">EditorKit</tt> object and pass it to the
  <tt class="literal">setEditorKit()</tt> method of your
  <tt class="literal">JEditorPane</tt>.</p>
<a name="INDEX-2967"></a>
<a name="INDEX-2968"></a>
<a name="INDEX-2969"></a>
<p>  The <tt class="literal">getContentType()</tt> method of an
  <tt class="literal">EditorKit</tt> returns the MIME type 
  supported by the kit.  <tt class="literal">createDefaultDocument()</tt>
  creates an appropriate type of empty <tt class="literal">Document</tt>
  object to hold the document.  The <tt class="literal">read()</tt> and
  <tt class="literal">write()</tt> methods read and write document content
  from and to streams.  <tt class="literal">getViewFactory()</tt> returns a
  <tt class="literal">ViewFactory</tt> object for this document type.  The
  <tt class="literal">ViewFactory</tt> is used to convert the
  <tt class="literal">Element</tt> objects of the document into
  <tt class="literal">View</tt> objects that display the document on the
  screen.  <tt class="literal">createCaret()</tt> returns a
  <tt class="literal">Caret</tt> object that the
  <tt class="literal">JEditorPane</tt> can use to navigate the document, and
  <tt class="literal">getActions()</tt> returns an array of
  <tt class="literal">Action</tt> objects that the
  <tt class="literal">JEditorPane</tt> can bind to keystrokes.
  <tt class="literal">EditorKit</tt> implementations typically define a number
  of <tt class="literal">Action</tt> implementations as inner classes.</p>
<a name="INDEX-2970"></a>
<a name="INDEX-2971"></a>
<a name="INDEX-2972"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">EditorKit</b> implements Cloneable, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">EditorKit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Action[ ] <b class="function">getActions</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getContentType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract ViewFactory <b class="function">getViewFactory</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Caret <b class="function">createCaret</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Document <b class="function">createDefaultDocument</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">deinstall</b> (JEditorPane <i class="parameter">c</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">install</b> (JEditorPane <i class="parameter">c</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">read</b> (java.io.Reader <i class="parameter">in</i>, Document <i class="parameter">doc</i>, int <i class="parameter">pos</i>) throws java.io.IOException, BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">read</b> (java.io.InputStream <i class="parameter">in</i>, Document <i class="parameter">doc</i>, int <i class="parameter">pos</i>) throws java.io.IOException, BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">write</b> (java.io.Writer <i class="parameter">out</i>, Document <i class="parameter">doc</i>, int <i class="parameter">pos</i>, int <i class="parameter">len</i>) throws java.io.IOException, BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">write</b> (java.io.OutputStream <i class="parameter">out</i>, Document <i class="parameter">doc</i>, int <i class="parameter">pos</i>, int <i class="parameter">len</i>) throws java.io.IOException, BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->EditorKit(Cloneable,Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">DefaultEditorKit</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JEditorPane.{setEditorKit(), setEditorKitForContentType()}, JTextPane.setEditorKit()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JEditorPane.{createDefaultEditorKit(), createEditorKitForContentType(), getEditorKit(), getEditorKitForContentType()}, JTextPane.createDefaultEditorKit(), javax.swing.plaf.TextUI.getEditorKit()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Element</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2973"></a>
<p>  This interface defines the methods required for objects that want to
  be part of a <tt class="literal">Document</tt> object's element tree.  An
  <tt class="literal">Element</tt> object must keep track of its parent
  and its children.  It must also know its position and the position of its
  children within the linear sequence of characters that comprise the
  <tt class="literal">Document</tt>.  Finally, an <tt class="literal">Element</tt>
  must be able to return the set of attributes that have been applied to
  it.
  <tt class="literal">getParentElement()</tt> returns the parent.
  <tt class="literal">getElementCount()</tt> and
  <tt class="literal">getElement()</tt> return the number of child
  elements and the specified child element, respectively.
  <tt class="literal">getStartOffset()</tt> and
  <tt class="literal">getEndOffset()</tt> return the start and end positions
  of this element.  <tt class="literal">getElementIndex()</tt> returns the
  index of the child element that contains the specified position.
  <tt class="literal">getAttributes()</tt> returns the
  <tt class="literal">AttributeSet</tt> for this element.</p>
<a name="INDEX-2974"></a>
<a name="INDEX-2975"></a>
<a name="INDEX-2976"></a>
<a name="INDEX-2977"></a>
<a name="INDEX-2978"></a>
<a name="INDEX-2979"></a>
<a name="INDEX-2980"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Element</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract AttributeSet <b class="function">getAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Document <b class="function">getDocument</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getElementCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getEndOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isLeaf</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.text.Element <b class="function">getParentElement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getStartOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.text.Element <b class="function">getElement</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getElementIndex</b> (int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AbstractDocument.AbstractElement</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DefaultStyledDocument.AttributeUndoableEdit.element</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ElementIterator</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2981"></a>
<p>  This class is used to perform a depth-first traversal, or iteration,
  through a tree of <tt class="literal">Element</tt> objects.  The
  <tt class="literal">Element</tt> tree structure should not be changed while
  the iteration is in progress.  Note that despite its name, this class
  does not implement <tt class="literal">java.util.Iterator</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ElementIterator</b> implements Cloneable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ElementIterator</b> (javax.swing.text.Element <i class="parameter">root</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ElementIterator</b> (Document <i class="parameter">document</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">current</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">depth</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">first</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">next</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">previous</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->ElementIterator(Cloneable)</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AbstractWriter.getElementIterator()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FieldView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This <tt class="literal">View</tt> class displays a single line of plain
  text.  It is used, for example, by <tt class="literal">JTextField</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">FieldView</b> extends PlainView {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FieldView</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding PlainView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getPreferredSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">changes</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">modelToView</b> (int <i class="parameter">pos</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias <i class="parameter">b</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>, java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">changes</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">viewToModel</b> (float <i class="parameter">fx</i>, float <i class="parameter">fy</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias[ ] <i class="parameter">bias</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding View</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getResizeWeight</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Shape <b class="function">adjustAllocation</b> (java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>

<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.FontMetrics <b class="function">getFontMetrics</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->View(SwingConstants)-->PlainView(TabExpander)-->FieldView</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">PasswordView</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GapContent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2982"></a>
<p>  This class is an implementation of the
  <tt class="literal">AbstractDocument.Content</tt> interface that 
  uses an array of characters with a gap of unused
  characters in it.  This gap is positioned near the current insertion
  position so that subsequent insertions require fewer characters to be
  shifted in the array.  This implementation is more complicated than
  <tt class="literal">StringContent</tt>, but it works efficiently with
  documents of any size.  This is the default <tt class="literal">Content</tt>
  implementation for all documents 

derived from
  <tt class="literal">AbstractDocument</tt>.  This class inherits
  from a private superclass, <tt class="literal">GapVector</tt>, which is not
  covered in this book because it is private.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">GapContent</b> extends GapVector implements AbstractDocument.Content, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GapContent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GapContent</b> (int <i class="parameter">initialLength</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing AbstractDocument.Content</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Position <b class="function">createPosition</b> (int <i class="parameter">offset</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">getChars</b> (int <i class="parameter">where</i>, int <i class="parameter">len</i>, Segment <i class="parameter">chars</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getString</b> (int <i class="parameter">where</i>, int <i class="parameter">len</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.undo.UndoableEdit <b class="function">insertString</b> (int <i class="parameter">where</i>, String <i class="parameter">str</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">length</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.undo.UndoableEdit <b class="function">remove</b> (int <i class="parameter">where</i>, int <i class="parameter">nitems</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Object <b class="function">allocateArray</b> (int <i class="parameter">len</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getArrayLength</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Vector <b class="function">getPositionsInRange</b> (java.util.Vector <i class="parameter">v</i>, int <i class="parameter">offset</i>, int <i class="parameter">length</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">resetMarksAtZero</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">shiftEnd</b> (int <i class="parameter">newSize</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">shiftGap</b> (int <i class="parameter">newGapStart</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">shiftGapEndUp</b> (int <i class="parameter">newGapEnd</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">shiftGapStartDown</b> (int <i class="parameter">newGapStart</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">updateUndoPositions</b> (java.util.Vector <i class="parameter">positions</i>, int <i class="parameter">offset</i>, int <i class="parameter">length</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->GapVector(Serializable)-->GapContent(AbstractDocument.Content,Serializable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Highlighter</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This interface defines the methods that must be implemented by an
  object that wants to maintain and draw the list of selected regions
  within a <tt class="literal">JTextComponent</tt>.  The methods of
  <tt class="literal">Highlighter</tt> allow selected regions to be added,
  changed, and removed for the set of highlighted regions.  Each region
  is specified as a start and end position within the
  <tt class="literal">Document</tt> and a
  <tt class="literal">Highlighter.HighlightPainter</tt> object that is
  used to draw the highlight.  The <tt class="literal">getHighlights()</tt>
  method returns an array of <tt class="literal">Highlighter.Highlight</tt>
  objects that describe the individual highlighted regions and their
  painter objects.
  Most applications can rely on the
  <tt class="literal">DefaultHighlighter</tt> class that is used by default by
  <tt class="literal">JTextComponent</tt> and never have to implement
  this interface.</p>
<a name="INDEX-2983"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Highlighter</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">addHighlight</b> (int <i class="parameter">p0</i>, int <i class="parameter">p1</i>, Highlighter.HighlightPainter <i class="parameter">p</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">changeHighlight</b> (Object <i class="parameter">tag</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">deinstall</b> (JTextComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Highlighter.Highlight[ ] <b class="function">getHighlights</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">install</b> (JTextComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeAllHighlights</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeHighlight</b> (Object <i class="parameter">tag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">LayeredHighlighter</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTextComponent.setHighlighter()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTextComponent.getHighlighter()</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Highlighter.Highlight</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2984"></a>
<p>  The methods of this interface describe a highlighted region in a
  <tt class="literal">Document</tt> by specifying the start and end positions
  of the region and the
  <tt class="literal">Highlighter.HighlightPainter</tt> object that is used to
  draw the highlighted region.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static interface <b class="classname">Highlighter.Highlight</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getEndOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Highlighter.HighlightPainter <b class="function">getPainter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getStartOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DefaultHighlighter.getHighlights(), Highlighter.getHighlights(), LayeredHighlighter.getHighlights()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Highlighter.HighlightPainter</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2985"></a>
<p>  This interface defines the <tt class="literal">paint()</tt> method used to
  draw a highlighted region.</p>
<a name="INDEX-2986"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static interface <b class="classname">Highlighter.HighlightPainter</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>, java.awt.Shape <i class="parameter">bounds</i>, JTextComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">LayeredHighlighter.LayerPainter</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DefaultHighlighter.addHighlight(), Highlighter.addHighlight(), LayeredHighlighter.addHighlight()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DefaultCaret.getSelectionPainter(), Highlighter.Highlight.getPainter()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>IconView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2987"></a>
<p>  This <tt class="literal">View</tt> class encapsulates a
  <tt class="literal">javax.swing.Icon</tt> and allows icons and images to be
  displayed within a <tt class="literal">Document</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">IconView</b> extends View {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">IconView</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding View</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAlignment</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getPreferredSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">modelToView</b> (int <i class="parameter">pos</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias <i class="parameter">b</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>, java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSize</b> (float <i class="parameter">width</i>, float <i class="parameter">height</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">viewToModel</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias[ ] <i class="parameter">bias</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->View(SwingConstants)-->IconView</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JTextComponent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(text) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2988"></a>
<a name="INDEX-2989"></a>
<p>  This is the base class for all Swing text-editing components.
  Applications do not use this class directly, but instead use one of
  its subclasses in the <tt class="literal">javax.swing</tt> package:
  <tt class="literal">JTextField</tt>, <tt class="literal">JTextArea</tt>,
  <tt class="literal">JPasswordField</tt>, <tt class="literal">JEditorPane</tt>, or
  <tt class="literal">JTextPane</tt>. 
  A <tt class="literal">JTextComponent</tt> displays the text contained in its
  model object, an object of type <tt class="literal">Document</tt>.  Other
  important classes and interfaces used by
  <tt class="literal">JTextComponent</tt> are 
<tt class="literal">Caret</tt>,
  <tt class="literal">Highlighter</tt>, <tt class="literal">Keymap</tt>,
  <tt class="literal">Style</tt>, <tt class="literal">EditorKit</tt>,
  <tt class="literal">TextAction</tt>, and <tt class="literal">View</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">JTextComponent</b> extends JComponent implements Accessible, Scrollable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">DEFAULT_KEYMAP</b> ;</td><td align="right"><i> ="default"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">FOCUS_ACCELERATOR_KEY</b> ;</td><td align="right"><i> ="focusAcceleratorKey"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Keymap <b class="function">addKeymap</b> (String <i class="parameter">nm</i>, Keymap <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Keymap <b class="function">getKeymap</b> (String <i class="parameter">nm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">loadKeymap</b> (Keymap <i class="parameter">map</i>, JTextComponent.KeyBinding[ ] <i class="parameter">bindings</i>, Action[ ] <i class="parameter">actions</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Keymap <b class="function">removeKeymap</b> (String <i class="parameter">nm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addCaretListener</b> (javax.swing.event.CaretListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeCaretListener</b> (javax.swing.event.CaretListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addInputMethodListener</b> (java.awt.event.InputMethodListener <i class="parameter">l</i>);</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Action[ ] <b class="function">getActions</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Caret <b class="function">getCaret</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCaret</b> (Caret <i class="parameter">c</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getCaretColor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCaretColor</b> (java.awt.Color <i class="parameter">c</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getCaretPosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCaretPosition</b> (int <i class="parameter">position</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getDisabledTextColor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDisabledTextColor</b> (java.awt.Color <i class="parameter">c</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Document <b class="function">getDocument</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDocument</b> (Document <i class="parameter">doc</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEditable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEditable</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getFocusAccelerator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFocusAccelerator</b> (char <i class="parameter">aKey</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isFocusTraversable</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Highlighter <b class="function">getHighlighter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setHighlighter</b> (Highlighter <i class="parameter">h</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.im.InputMethodRequests <b class="function">getInputMethodRequests</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Keymap <b class="function">getKeymap</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setKeymap</b> (Keymap <i class="parameter">map</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getMargin</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMargin</b> (java.awt.Insets <i class="parameter">m</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isOpaque</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setOpaque</b> (boolean <i class="parameter">o</i>);</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredScrollableViewportSize</b> ();</td><td align="right"><i> Implements:Scrollable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportHeight</b> ();</td><td align="right"><i> Implements:Scrollable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportWidth</b> ();</td><td align="right"><i> Implements:Scrollable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getSelectedText</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getSelectedTextColor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedTextColor</b> (java.awt.Color <i class="parameter">c</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getSelectionColor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionColor</b> (java.awt.Color <i class="parameter">c</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectionEnd</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionEnd</b> (int <i class="parameter">selectionEnd</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectionStart</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionStart</b> (int <i class="parameter">selectionStart</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getText</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getText</b> (int <i class="parameter">offs</i>, int <i class="parameter">len</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setText</b> (String <i class="parameter">t</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.TextUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.TextUI <i class="parameter">ui</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">copy</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">cut</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">modelToView</b> (int <i class="parameter">pos</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">moveCaretPosition</b> (int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paste</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">read</b> (java.io.Reader <i class="parameter">in</i>, Object <i class="parameter">desc</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">replaceSelection</b> (String <i class="parameter">content</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">select</b> (int <i class="parameter">selectionStart</i>, int <i class="parameter">selectionEnd</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">selectAll</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">viewToModel</b> (java.awt.Point <i class="parameter">pt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">write</b> (java.io.Writer <i class="parameter">out</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Scrollable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredScrollableViewportSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getScrollableBlockIncrement</b> (java.awt.Rectangle <i class="parameter">visibleRect</i>, int <i class="parameter">orientation</i>, int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportHeight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportWidth</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getScrollableUnitIncrement</b> (java.awt.Rectangle <i class="parameter">visibleRect</i>, int <i class="parameter">orientation</i>, int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEnabled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processComponentKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processInputMethodEvent</b> (java.awt.event.InputMethodEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireCaretUpdate</b> (javax.swing.event.CaretEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JTextComponent(Accessible,Scrollable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">JEditorPane, JTextArea, JTextField</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DefaultCaret.getComponent(), TextAction.{getFocusedComponent(), getTextComponent()}</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JTextComponent.KeyBinding</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2990"></a>
<p>  This class encapsulates a <tt class="literal">KeyStroke</tt> and the name of
  an <tt class="literal">Action</tt> object.  The
  <tt class="literal">JTextComponent.KeyBinding</tt> class is used primarily
  for communication between the <tt class="literal">JTextComponent</tt> and
  its UI delegate object.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">JTextComponent.KeyBinding</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">KeyBinding</b> (KeyStroke <i class="parameter">key</i>, String <i class="parameter">actionName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">actionName</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public KeyStroke <b class="function">key</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTextComponent.loadKeymap()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">LookAndFeel.makeKeyBindings()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Keymap</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2991"></a>
<p> 
  This interface defines the methods of an object that can map
  <tt class="literal">javax.swing.KeyStroke</tt> objects to
  <tt class="literal">javax.swing.Action</tt> objects.  A
  <tt class="literal">Keymap</tt> object is used to maintain the set of key
  bindings for a <tt class="literal">JTextComponent</tt>.
  Key-to-action bindings are added to a <tt class="literal">Keymap</tt> with
  <tt class="literal">addActionForKeyStroke()</tt>.  The action bound to a
  given keystroke is queried with <tt class="literal">getAction()</tt>.  Every
  <tt class="literal">Keymap</tt> can refer to another
  <tt class="literal">Keymap</tt> as its parent.  If
  <tt class="literal">getAction()</tt> cannot find a specified
  <tt class="literal">KeyStroke</tt> mapping locally, it searches
  (recursively) in the parent <tt class="literal">Keymap</tt>.</p>
<a name="INDEX-2992"></a>
<a name="INDEX-2993"></a>
<p>  There are no public implementations of the <tt class="literal">Keymap</tt>
  interface, so you cannot create a <tt class="literal">Keymap</tt> simply by
  calling a constructor.  <tt class="literal">JTextComponent</tt> relies on a
  private implementation of <tt class="literal">Keymap</tt>, however, and you
  can obtain an instance by calling the static
  <tt class="literal">addKeymap()</tt> method of that class.  Once you have
  initialized this <tt class="literal">Keymap</tt> with any desired bindings,
  you can pass it to the <tt class="literal">setKeymap()</tt> method of any
  <tt class="literal">JTextComponent</tt> instance.</p>
<a name="INDEX-2994"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Keymap</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Action[ ] <b class="function">getBoundActions</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract KeyStroke[ ] <b class="function">getBoundKeyStrokes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Action <b class="function">getDefaultAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setDefaultAction</b> (Action <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Keymap <b class="function">getResolveParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setResolveParent</b> (Keymap <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addActionForKeyStroke</b> (KeyStroke <i class="parameter">key</i>, Action <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Action <b class="function">getAction</b> (KeyStroke <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract KeyStroke[ ] <b class="function">getKeyStrokesForAction</b> (Action <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isLocallyDefined</b> (KeyStroke <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeBindings</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeKeyStrokeBinding</b> (KeyStroke <i class="parameter">keys</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTextComponent.{addKeymap(), loadKeymap(), setKeymap()}, Keymap.setResolveParent()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTextComponent.{addKeymap(), getKeymap(), removeKeymap()}, Keymap.getResolveParent()</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>LabelView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2995"></a>
<p> 
  This <tt class="literal">View</tt> class displays a run of text that
  has a single set of character attributes, such as colors and fonts,
  associated with it.  It supports line breaking and tab expansion.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">LabelView</b> extends View {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">LabelView</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding View</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public View <b class="function">breakView</b> (int <i class="parameter">axis</i>, int <i class="parameter">p0</i>, float <i class="parameter">pos</i>, float <i class="parameter">len</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">changedUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public View <b class="function">createFragment</b> (int <i class="parameter">p0</i>, int <i class="parameter">p1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAlignment</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getBreakWeight</b> (int <i class="parameter">axis</i>, float <i class="parameter">pos</i>, float <i class="parameter">len</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getNextVisualPositionFrom</b> (int <i class="parameter">pos</i>, Position.Bias <i class="parameter">b</i>, java.awt.Shape <i class="parameter">a</i>, int <i class="parameter">direction</i>, Position.Bias[ ] <i class="parameter">biasRet</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getPreferredSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">modelToView</b> (int <i class="parameter">pos</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias <i class="parameter">b</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>, java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">changes</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">viewToModel</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias[ ] <i class="parameter">biasReturn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Font <b class="function">getFont</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.FontMetrics <b class="function">getFontMetrics</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setPropertiesFromAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setStrikeThrough</b> (boolean <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setSubscript</b> (boolean <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setSuperscript</b> (boolean <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setUnderline</b> (boolean <i class="parameter">u</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->View(SwingConstants)-->LabelView</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.html.InlineView</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>LayeredHighlighter</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2996"></a>
<p>  This abstract class is a <tt class="literal">Highlighter</tt>.  Instead of
  implementing the abstract methods of the
  <tt class="literal">Highlighter</tt> interface, however, it adds another
  abstract method of its own.  This new method, 
  <tt class="literal">paintLayeredHighlights()</tt>, is called to draw a
  portion of the highlight that appears within the region defined by a
  single <tt class="literal">View</tt> object.
  Typical applications can rely on the 
  <tt class="literal">DefaultHighlighter</tt> class that is automatically used
  by <tt class="literal">JTextComponent</tt> and never have to use or
  implement this class. </p>
<a name="INDEX-2997"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">LayeredHighlighter</b> implements Highlighter {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">LayeredHighlighter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">paintLayeredHighlights</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>, java.awt.Shape <i class="parameter">viewBounds</i>, JTextComponent <i class="parameter">editor</i>, View <i class="parameter">view</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Highlighter</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">addHighlight</b> (int <i class="parameter">p0</i>, int <i class="parameter">p1</i>, Highlighter.HighlightPainter <i class="parameter">p</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">changeHighlight</b> (Object <i class="parameter">tag</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">deinstall</b> (JTextComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Highlighter.Highlight[ ] <b class="function">getHighlights</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">install</b> (JTextComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeAllHighlights</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeHighlight</b> (Object <i class="parameter">tag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->LayeredHighlighter(Highlighter)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">DefaultHighlighter</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>LayeredHighlighter.LayerPainter</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2998"></a>
<p>  This abstract inner class implements
  <tt class="literal">Highlighter.HighlightPainter</tt> and adds another
  abstract method.  Typical applications do not need to use or implement
  this class and can rely on the
  <tt class="literal">DefaultHighlighter.DefaultHighlightPainter</tt>
  implementation.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static class <b class="classname">LayeredHighlighter.LayerPainter</b> implements Highlighter.HighlightPainter {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">LayerPainter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.Shape <b class="function">paintLayer</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>, java.awt.Shape <i class="parameter">viewBounds</i>, JTextComponent <i class="parameter">editor</i>, View <i class="parameter">view</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Highlighter.HighlightPainter</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>, java.awt.Shape <i class="parameter">bounds</i>, JTextComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">DefaultHighlighter.DefaultHighlightPainter</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DefaultHighlighter.DefaultPainter</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MutableAttributeSet</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2999"></a>
<p>  This interface extends <tt class="literal">AttributeSet</tt> to add methods
  that allow the set of attributes and parent attributes to be
  modified.  See also <tt class="literal">AttributeSet</tt> and
  <tt class="literal">Style</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">MutableAttributeSet</b> extends AttributeSet {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addAttribute</b> (Object <i class="parameter">name</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addAttributes</b> (AttributeSet <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeAttribute</b> (Object <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeAttributes</b> (AttributeSet <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeAttributes</b> (java.util.Enumeration <i class="parameter">names</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setResolveParent</b> (AttributeSet <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(MutableAttributeSet(AttributeSet))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AbstractDocument.AbstractElement, SimpleAttributeSet, Style</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTextPane.getInputAttributes(), StyleContext.createLargeAttributeSet(), StyledEditorKit.getInputAttributes(), javax.swing.text.html.HTMLEditorKit.getInputAttributes(), javax.swing.text.html.StyleSheet.createLargeAttributeSet()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.text.html.HTMLDocument.HTMLReader.charAttr</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ParagraphView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3000"></a>
<p> 
  This <tt class="literal">BoxView</tt> subclass displays a column of
  subviews, one for each row or line in the paragraph.  These rows are
  implemented by a private internal <tt class="literal">BoxView</tt> class.
  <tt class="literal">ParagraphView</tt> handles word wrapping by breaking its
  views as necessary to fit them into the row views it creates.
  <tt class="literal">ParagraphView</tt> supports various paragraph-level
  attributes such as margins, line spacing, and first-line indent.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ParagraphView</b> extends BoxView implements TabExpander {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ParagraphView</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public View <b class="function">breakView</b> (int <i class="parameter">axis</i>, float <i class="parameter">len</i>, java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getBreakWeight</b> (int <i class="parameter">axis</i>, float <i class="parameter">len</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TabExpander</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">nextTabStop</b> (float <i class="parameter">x</i>, int <i class="parameter">tabOffset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding BoxView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAlignment</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>, java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding BoxView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected SizeRequirements <b class="function">calculateMinorAxisRequirements</b> (int <i class="parameter">axis</i>, SizeRequirements <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">flipEastAndWestAtEnds</b> (int <i class="parameter">position</i>, Position.Bias <i class="parameter">bias</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">layout</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding CompositeView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">changedUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">changes</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">changes</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">changes</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding CompositeView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getNextNorthSouthVisualPositionFrom</b> (int <i class="parameter">pos</i>, Position.Bias <i class="parameter">b</i>, java.awt.Shape <i class="parameter">a</i>, int <i class="parameter">direction</i>, Position.Bias[ ] <i class="parameter">biasRet</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected View <b class="function">getViewAtPosition</b> (int <i class="parameter">pos</i>, java.awt.Rectangle <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getViewIndexAtPosition</b> (int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">loadChildren</b> (ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">adjustRow</b> (ParagraphView.Row <i class="parameter">r</i>, int <i class="parameter">desiredSpan</i>, int <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">findOffsetToCharactersInString</b> (char[ ] <i class="parameter">string</i>, int <i class="parameter">start</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getClosestPositionTo</b> (int <i class="parameter">pos</i>, Position.Bias <i class="parameter">b</i>, java.awt.Shape <i class="parameter">a</i>, int <i class="parameter">direction</i>, Position.Bias[ ] <i class="parameter">biasRet</i>, int <i class="parameter">rowIndex</i>, int <i class="parameter">x</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected View <b class="function">getLayoutView</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getLayoutViewCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected float <b class="function">getPartialSize</b> (int <i class="parameter">startOffset</i>, int <i class="parameter">endOffset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected float <b class="function">getTabBase</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected TabSet <b class="function">getTabSet</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setFirstLineIndent</b> (float <i class="parameter">fi</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setJustification</b> (int <i class="parameter">j</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setLineSpacing</b> (float <i class="parameter">ls</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setPropertiesFromAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">firstLineIndent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->View(SwingConstants)-->CompositeView-->BoxView-->javax.swing.text.ParagraphView(TabExpander)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.html.ParagraphView</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PasswordView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This view displays a single line of text in a way that is suitable for the
  <tt class="literal">JPasswordField</tt> component.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">PasswordView</b> extends FieldView {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">PasswordView</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding FieldView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">modelToView</b> (int <i class="parameter">pos</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias <i class="parameter">b</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">viewToModel</b> (float <i class="parameter">fx</i>, float <i class="parameter">fy</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias[ ] <i class="parameter">bias</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding PlainView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">drawSelectedText</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">drawUnselectedText</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">drawEchoCharacter</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, char <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->View(SwingConstants)-->PlainView(TabExpander)-->FieldView-->PasswordView</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PlainDocument</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3001"></a>
<p>  This concrete <tt class="literal">AbstractDocument</tt> subclass defines a
  plain-text document with no character attributes.  The root element of
  the document has one child element for each line in the document.  By
  default, <tt class="literal">PlainDocument</tt> uses a
  <tt class="literal">GapContent</tt> object to hold its textual content.
  Applications rarely need to work with a
  <tt class="literal">PlainDocument</tt> class directly.  Typically, they can
  simply use the <tt class="literal">JTextArea</tt> or
  <tt class="literal">JTextField</tt> components for displaying and editing
  text. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">PlainDocument</b> extends AbstractDocument {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">PlainDocument</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">PlainDocument</b> (AbstractDocument.Content <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">lineLimitAttribute</b> ;</td><td align="right"><i> ="lineLimit"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">tabSizeAttribute</b> ;</td><td align="right"><i> ="tabSize"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractDocument</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">getDefaultRootElement</b> ();</td><td align="right"><i> default:BranchElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">getParagraphElement</b> (int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding AbstractDocument</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">insertUpdate</b> (AbstractDocument.DefaultDocumentEvent <i class="parameter">chng</i>, AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">removeUpdate</b> (AbstractDocument.DefaultDocumentEvent <i class="parameter">chng</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AbstractDocument.AbstractElement <b class="function">createDefaultRoot</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractDocument(Document,Serializable)-->PlainDocument</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PlainView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3002"></a>
<p>  This <tt class="literal">View</tt> class is used to display multiple lines
  of plain text.  It can perform tab expansion, but it does not perform
  line wrapping.  See also <tt class="literal">WrappedPlainView</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">PlainView</b> extends View implements TabExpander {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">PlainView</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TabExpander</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">nextTabStop</b> (float <i class="parameter">x</i>, int <i class="parameter">tabOffset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding View</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">changedUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">changes</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getPreferredSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">changes</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">modelToView</b> (int <i class="parameter">pos</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias <i class="parameter">b</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>, java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">preferenceChanged</b> (View <i class="parameter">child</i>, boolean <i class="parameter">width</i>, boolean <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">changes</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">viewToModel</b> (float <i class="parameter">fx</i>, float <i class="parameter">fy</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias[ ] <i class="parameter">bias</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">drawLine</b> (int <i class="parameter">lineIndex</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">drawSelectedText</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">drawUnselectedText</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final Segment <b class="function">getLineBuffer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getTabSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.FontMetrics <b class="function">metrics</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->View(SwingConstants)-->PlainView(TabExpander)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">FieldView</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Position</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3003"></a>
<p> 
  This interface describes a position within a
  <tt class="literal">Document</tt> in a way that is insensitive to insertions and deletions within the document.  The <tt class="literal">getOffset()</tt>
  method returns the character offset of that position.  For editable
  documents, a <tt class="literal">Position</tt> object must keep track of
  edits and adjust the character offset as necessary.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Position</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AbstractDocument.{createPosition(), getEndPosition(), getStartPosition()}, AbstractDocument.Content.createPosition(), Document.{createPosition(), getEndPosition(), getStartPosition()}, GapContent.createPosition(), StringContent.createPosition()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Position.Bias</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3004"></a>
<p>  The <tt class="literal">Document</tt> interface describes positions within
  the document using integer offsets.  These numbers refer not to the
  actual characters of the document, but to the spaces between the
  characters.  This means that, in some cases, a simple integer position
  might refer to either the character before it or the character after
  it.  In ambiguous cases, therefore, the position must be augmented
  with a bias value.  This inner class defines the two legal bias
  values: <tt class="literal">Position.Bias.Backward</tt> and
  <tt class="literal">Position.Bias.Forward</tt>.  A number of methods in the
  <tt class="literal">javax.swing.text</tt> package require one or the other
  of these constants as an 

argument.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static final class <b class="classname">Position.Bias</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Position.Bias <b class="function">Backward</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Position.Bias <b class="function">Forward</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">Position.Bias.{Backward, Forward}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Segment</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3005"></a>
<p>  The <tt class="literal">Segment</tt> class represents a segment of text
  through three public fields.  These are a reference to a character
  array, the array offset of the first character in the array, and the
  number of characters in the segment.  This is an efficient way to
  pass references to text segments, since it does not require new
  <tt class="literal">String</tt> objects to be created.  However, it is
  dangerous because it exposes the character array directly and makes
  it vulnerable to changes.  Users of a <tt class="literal">Segment</tt>
  object must treat the text segment as if it were immutable, using it
  for read-only access to the text.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Segment</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Segment</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Segment</b> (char[ ] <i class="parameter">array</i>, int <i class="parameter">offset</i>, int <i class="parameter">count</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char[ ] <b class="function">array</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">count</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">offset</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AbstractDocument.getText(), AbstractDocument.Content.getChars(), Document.getText(), GapContent.getChars(), StringContent.getChars(), Utilities.{drawTabbedText(), getBreakLocation(), getTabbedTextOffset(), getTabbedTextWidth()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">PlainView.getLineBuffer(), WrappedPlainView.getLineBuffer()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SimpleAttributeSet</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3006"></a>
<p>  This class is a simple implementation of the
  <tt class="literal">MutableAttributeSet</tt> 
  interface that uses an internal hashtable.  See
  <tt class="literal">AttributeSet</tt> and
  <tt class="literal">MutableAttributeSet</tt> for details.  When working with
  many attribute sets, it may be more efficient to define styles using a
  <tt class="literal">StyleContext</tt> object.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">SimpleAttributeSet</b> implements Cloneable, MutableAttributeSet, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SimpleAttributeSet</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SimpleAttributeSet</b> (AttributeSet <i class="parameter">source</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final AttributeSet <b class="function">EMPTY</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing AttributeSet</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsAttribute</b> (Object <i class="parameter">name</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsAttributes</b> (AttributeSet <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">copyAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getAttribute</b> (Object <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAttributeCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">getAttributeNames</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">getResolveParent</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDefined</b> (Object <i class="parameter">attrName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEqual</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MutableAttributeSet</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addAttribute</b> (Object <i class="parameter">name</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addAttributes</b> (AttributeSet <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAttribute</b> (Object <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAttributes</b> (java.util.Enumeration <i class="parameter">names</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAttributes</b> (AttributeSet <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setResolveParent</b> (AttributeSet <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->SimpleAttributeSet(Cloneable,MutableAttributeSet(AttributeSet),Serializable)</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">javax.swing.text.html.parser.Parser.getAttributes()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StringContent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3007"></a>
<p>  This class is a simple implementation of the
  <tt class="literal">AbstractDocument.Content</tt> interface based on simple
  <tt class="literal">String</tt> manipulation.  It is suitable only for short
  documents.  By default, all documents derived from
  <tt class="literal">AbstractDocument</tt> use the
  <tt class="literal">GapContent</tt> implementation instead of
  <tt class="literal">StringContent</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">StringContent</b> implements AbstractDocument.Content, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">StringContent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">StringContent</b> (int <i class="parameter">initialLength</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing AbstractDocument.Content</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Position <b class="function">createPosition</b> (int <i class="parameter">offset</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">getChars</b> (int <i class="parameter">where</i>, int <i class="parameter">len</i>, Segment <i class="parameter">chars</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getString</b> (int <i class="parameter">where</i>, int <i class="parameter">len</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.undo.UndoableEdit <b class="function">insertString</b> (int <i class="parameter">where</i>, String <i class="parameter">str</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">length</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.undo.UndoableEdit <b class="function">remove</b> (int <i class="parameter">where</i>, int <i class="parameter">nitems</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Vector <b class="function">getPositionsInRange</b> (java.util.Vector <i class="parameter">v</i>, int <i class="parameter">offset</i>, int <i class="parameter">length</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">updateUndoPositions</b> (java.util.Vector <i class="parameter">positions</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->StringContent(AbstractDocument.Content,Serializable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Style</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3008"></a>
<p>  This interface extends <tt class="literal">MutableAttributeSet</tt> by adding
  both a
  convenience method for retrieving the name of the attribute set and
  <tt class="literal">ChangeListener</tt> registration methods.  A
  <tt class="literal">Style</tt> object is typically used to represent a named
  set of attributes.  The style name is usually stored as
  an attribute.  Because a <tt class="literal">Style</tt> is a kind of
  <tt class="literal">MutableAttributeSet</tt>, objects that use the style may
  want to know when the attributes of the <tt class="literal">Style</tt>
  change.  Interested listeners can register with the
  <tt class="literal">addChangeListener()</tt> method.  They are notified
  with a <tt class="literal">ChangeEvent</tt> when attributes are added to or
  removed from the <tt class="literal">Style</tt>.</p>
<a name="INDEX-3009"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Style</b> extends MutableAttributeSet {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(Style(MutableAttributeSet(AttributeSet)))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">StyleContext.NamedStyle</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTextPane.{addStyle(), setLogicalStyle()}, DefaultStyledDocument.{addStyle(), setLogicalStyle(), styleChanged()}, StyleContext.addStyle(), StyleContext.NamedStyle.NamedStyle(), StyledDocument.{addStyle(), setLogicalStyle()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTextPane.{addStyle(), getLogicalStyle(), getStyle()}, DefaultStyledDocument.{addStyle(), getLogicalStyle(), getStyle()}, StyleContext.{addStyle(), getStyle()}, StyledDocument.{addStyle(), getLogicalStyle(), getStyle()}, javax.swing.text.html.StyleSheet.getRule()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyleConstants</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3010"></a>
<p>  This class defines a number of standard attribute keys for
  commonly used character and paragraph attributes.  It also defines a
  number of static convenience methods that use these attributes to
  query the value of an attribute from an
  <tt class="literal">AttributeSet</tt> or to set the value of an attribute in
  a <tt class="literal">MutableAttributeSet</tt>.</p>
<p>  Usually, the type of the value to be associated with an attribute key is
  obvious from the context.  The method signatures for the
  static <tt class="literal">get</tt> and <tt class="literal">set</tt> 
  methods make the value explicit.  The value
  associated with the <tt class="literal">Alignment</tt> key should be one of
  the four <tt class="literal">ALIGN_</tt> constants defined by the class.
  Any length values associated with attributes such as
  <tt class="literal">LeftIndent</tt> and <tt class="literal">LineSpacing</tt>
  should be <tt class="literal">float</tt> values expressed in printer's
  points (there are 72 printer's points in one inch).</p>
<p>
<tt class="literal">StyleConstants</tt> defines four inner subclasses, each
  of which implements a different marker interface that serves to
  group attribute keys into broad categories.  These inner classes
  define attribute key constants as well, but these constants
  are also available directly from the <tt class="literal">StyleConstants</tt>
  class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">StyleConstants</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ALIGN_CENTER</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ALIGN_JUSTIFIED</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ALIGN_LEFT</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ALIGN_RIGHT</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Alignment</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Background</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">BidiLevel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Bold</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">ComponentAttribute</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ComponentElementName</b> ;</td><td align="right"><i> ="component"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">ComposedTextAttribute</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">FirstLineIndent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">FontFamily</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">FontSize</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Foreground</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">IconAttribute</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">IconElementName</b> ;</td><td align="right"><i> ="icon"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Italic</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">LeftIndent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">LineSpacing</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">ModelAttribute</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">NameAttribute</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Orientation</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">ResolveAttribute</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">RightIndent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">SpaceAbove</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">SpaceBelow</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">StrikeThrough</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Subscript</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Superscript</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">TabSet</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Underline</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">getAlignment</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Color <b class="function">getBackground</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">getBidiLevel</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Component <b class="function">getComponent</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static float <b class="function">getFirstLineIndent</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">getFontFamily</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">getFontSize</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Color <b class="function">getForeground</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Icon <b class="function">getIcon</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static float <b class="function">getLeftIndent</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static float <b class="function">getLineSpacing</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static float <b class="function">getRightIndent</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static float <b class="function">getSpaceAbove</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static float <b class="function">getSpaceBelow</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static TabSet <b class="function">getTabSet</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isBold</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isItalic</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isStrikeThrough</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isSubscript</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isSuperscript</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isUnderline</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setAlignment</b> (MutableAttributeSet <i class="parameter">a</i>, int <i class="parameter">align</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setBackground</b> (MutableAttributeSet <i class="parameter">a</i>, java.awt.Color <i class="parameter">fg</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setBidiLevel</b> (MutableAttributeSet <i class="parameter">a</i>, int <i class="parameter">o</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setBold</b> (MutableAttributeSet <i class="parameter">a</i>, boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setComponent</b> (MutableAttributeSet <i class="parameter">a</i>, Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setFirstLineIndent</b> (MutableAttributeSet <i class="parameter">a</i>, float <i class="parameter">i</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setFontFamily</b> (MutableAttributeSet <i class="parameter">a</i>, String <i class="parameter">fam</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setFontSize</b> (MutableAttributeSet <i class="parameter">a</i>, int <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setForeground</b> (MutableAttributeSet <i class="parameter">a</i>, java.awt.Color <i class="parameter">fg</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setIcon</b> (MutableAttributeSet <i class="parameter">a</i>, Icon <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setItalic</b> (MutableAttributeSet <i class="parameter">a</i>, boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setLeftIndent</b> (MutableAttributeSet <i class="parameter">a</i>, float <i class="parameter">i</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setLineSpacing</b> (MutableAttributeSet <i class="parameter">a</i>, float <i class="parameter">i</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setRightIndent</b> (MutableAttributeSet <i class="parameter">a</i>, float <i class="parameter">i</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setSpaceAbove</b> (MutableAttributeSet <i class="parameter">a</i>, float <i class="parameter">i</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setSpaceBelow</b> (MutableAttributeSet <i class="parameter">a</i>, float <i class="parameter">i</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setStrikeThrough</b> (MutableAttributeSet <i class="parameter">a</i>, boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setSubscript</b> (MutableAttributeSet <i class="parameter">a</i>, boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setSuperscript</b> (MutableAttributeSet <i class="parameter">a</i>, boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setTabSet</b> (MutableAttributeSet <i class="parameter">a</i>, TabSet <i class="parameter">tabs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setUnderline</b> (MutableAttributeSet <i class="parameter">a</i>, boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">StyleConstants.CharacterConstants, StyleConstants.ColorConstants, StyleConstants.FontConstants, StyleConstants.ParagraphConstants</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyleConstants.CharacterConstants</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3011"></a>
<p>  This inner subclass of <tt class="literal">StyleConstants</tt> implements
  the <tt class="literal">AttributeSet.CharacterAttribute</tt> marker
  interface and defines various standard attribute key constants for
  character attributes.  Copies of these constants are also defined by
  <tt class="literal">StyleConstants</tt> itself.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">StyleConstants.CharacterConstants</b> extends StyleConstants implements AttributeSet.CharacterAttribute {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Background</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">BidiLevel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Bold</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">ComponentAttribute</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Family</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Foreground</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">IconAttribute</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Italic</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Size</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">StrikeThrough</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Subscript</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Superscript</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Underline</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyleConstants.ColorConstants</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3012"></a>
<p> 
  This inner subclass of <tt class="literal">StyleConstants</tt> implements
  the <tt class="literal">AttributeSet.FontAttribute</tt> and
  <tt class="literal">AttributeSet.CharacterAttribute</tt> marker interfaces
  and defines standard attribute key constants for color attributes.
  Copies of these constants are also defined by
  <tt class="literal">StyleConstants</tt> itself.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">StyleConstants.ColorConstants</b> extends StyleConstants implements AttributeSet.CharacterAttribute, AttributeSet.ColorAttribute {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Background</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Foreground</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyleConstants.FontConstants</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3013"></a>
<p> 
  This inner subclass of <tt class="literal">StyleConstants</tt> implements
  the <tt class="literal">AttributeSet.FontAttribute</tt>  and
  <tt class="literal">AttributeSet.CharacterAttribute</tt> marker interfaces
  and defines standard attribute key constants for font attributes.
  Copies of these constants are also defined by
  <tt class="literal">StyleConstants</tt> itself.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">StyleConstants.FontConstants</b> extends StyleConstants implements AttributeSet.CharacterAttribute, AttributeSet.FontAttribute {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Bold</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Family</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Italic</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Size</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyleConstants.ParagraphConstants</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3014"></a>
<p>  This inner subclass of <tt class="literal">StyleConstants</tt> implements
  the <tt class="literal">AttributeSet.ParagraphAttribute</tt> marker
  interface and defines various standard attribute key constants for
  paragraph attributes.  Copies of these constants are also defined by
  <tt class="literal">StyleConstants</tt> itself.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">StyleConstants.ParagraphConstants</b> extends StyleConstants implements AttributeSet.ParagraphAttribute {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Alignment</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">FirstLineIndent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">LeftIndent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">LineSpacing</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">Orientation</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">RightIndent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">SpaceAbove</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">SpaceBelow</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">TabSet</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyleContext</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3015"></a>
<a name="INDEX-3016"></a>
<a name="INDEX-3017"></a>
<a name="INDEX-3018"></a>
<a name="INDEX-3019"></a>
<p> 
  This class is a collection of and a factory for
  <tt class="literal">Style</tt> objects. It is implemented in a way that
  allows caching and reuse of common attribute sets.  Use
  <tt class="literal">addStyle()</tt> to create a new <tt class="literal">Style</tt>
  object and add it to the collection.  Use the methods of the returned
  <tt class="literal">Style</tt> object to specify the attributes of the
  <tt class="literal">Style</tt>.  Use <tt class="literal">getStyle()</tt> to look
  up a <tt class="literal">Style</tt> by name and
  <tt class="literal">removeStyle()</tt> to delete a <tt class="literal">Style</tt>
  from the collection.  The static
  <tt class="literal">getDefaultStyleContext()</tt> method returns a default
  <tt class="literal">StyleContext</tt> object suitable for shared use by
  multiple documents.
  <tt class="literal">StyleContext</tt> also includes a simple
  <tt class="literal">Font</tt> cache.  You 

can access shared
  <tt class="literal">Font</tt> instances with the
  <tt class="literal">getFont()</tt> method.</p>
<p>
<tt class="literal">StyleContext</tt> also implements the
  <tt class="literal">AbstractDocument.AttributeContext</tt> interface, which
  means that it implements various methods for creating new
  <tt class="literal">AttributeSet</tt> objects by copying existing
  <tt class="literal">AttributeSet</tt> objects and adding or removing
  individual attributes.  These methods make it possible to implement
  the <tt class="literal">MutableAttributeSet</tt> or <tt class="literal">Style</tt>
  interfaces in terms of immutable <tt class="literal">AttributeSet</tt>
  objects that can be cached and shared.  The <tt class="literal">Style</tt>
  objects returned by <tt class="literal">addStyle()</tt> are instances of
  <tt class="literal">StyleContext.NamedStyle</tt>, which is implemented in
  this way.  Styles that contain only a small number of attributes are
  implemented as immutable
  <tt class="literal">StyleContext.SmallAttributeSet</tt> objects that are
  cached and reused, resulting in significant memory savings.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">StyleContext</b> implements AbstractDocument.AttributeContext, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">StyleContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">DEFAULT_STYLE</b> ;</td><td align="right"><i> ="default"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final StyleContext <b class="function">getDefaultStyleContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Object <b class="function">getStaticAttribute</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Object <b class="function">getStaticAttributeKey</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">readAttributeSet</b> (java.io.ObjectInputStream <i class="parameter">in</i>, MutableAttributeSet <i class="parameter">a</i>) throws ClassNotFoundException, java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">registerStaticAttributeKey</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">writeAttributeSet</b> (java.io.ObjectOutputStream <i class="parameter">out</i>, AttributeSet <i class="parameter">a</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Style <b class="function">addStyle</b> (String <i class="parameter">nm</i>, Style <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getBackground</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Font <b class="function">getFont</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Font <b class="function">getFont</b> (String <i class="parameter">family</i>, int <i class="parameter">style</i>, int <i class="parameter">size</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.FontMetrics <b class="function">getFontMetrics</b> (java.awt.Font <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getForeground</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Style <b class="function">getStyle</b> (String <i class="parameter">nm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">getStyleNames</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">readAttributes</b> (java.io.ObjectInputStream <i class="parameter">in</i>, MutableAttributeSet <i class="parameter">a</i>) throws ClassNotFoundException, java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeStyle</b> (String <i class="parameter">nm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">writeAttributes</b> (java.io.ObjectOutputStream <i class="parameter">out</i>, AttributeSet <i class="parameter">a</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing AbstractDocument.AttributeContext</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">addAttribute</b> (AttributeSet <i class="parameter">old</i>, Object <i class="parameter">name</i>, Object <i class="parameter">value</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">addAttributes</b> (AttributeSet <i class="parameter">old</i>, AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">getEmptySet</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">reclaim</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">removeAttribute</b> (AttributeSet <i class="parameter">old</i>, Object <i class="parameter">name</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">removeAttributes</b> (AttributeSet <i class="parameter">old</i>, AttributeSet <i class="parameter">attrs</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">removeAttributes</b> (AttributeSet <i class="parameter">old</i>, java.util.Enumeration <i class="parameter">names</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected MutableAttributeSet <b class="function">createLargeAttributeSet</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected StyleContext.SmallAttributeSet <b class="function">createSmallAttributeSet</b> (AttributeSet <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getCompressionThreshold</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->StyleContext(AbstractDocument.AttributeContext,Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.html.StyleSheet</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DefaultStyledDocument.DefaultStyledDocument()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">StyleContext.getDefaultStyleContext()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyleContext.NamedStyle</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3020"></a>
<p>  This class is a <tt class="literal">Style</tt> implementation that uses the
  <tt class="literal">StyleContext</tt> to implement its
  <tt class="literal">MutableAttributeSet</tt> methods in terms of immutable,
  possibly shared, <tt class="literal">AttributeSet</tt> objects.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">StyleContext.NamedStyle</b> implements Serializable, Style {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">NamedStyle</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">NamedStyle</b> (Style <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">NamedStyle</b> (String <i class="parameter">name</i>, Style <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:Style</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:Style</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setName</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing AttributeSet</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsAttribute</b> (Object <i class="parameter">name</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsAttributes</b> (AttributeSet <i class="parameter">attrs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">copyAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getAttribute</b> (Object <i class="parameter">attrName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAttributeCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">getAttributeNames</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">getResolveParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDefined</b> (Object <i class="parameter">attrName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEqual</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MutableAttributeSet</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addAttribute</b> (Object <i class="parameter">name</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addAttributes</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAttribute</b> (Object <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAttributes</b> (AttributeSet <i class="parameter">attrs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAttributes</b> (java.util.Enumeration <i class="parameter">names</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setResolveParent</b> (AttributeSet <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Style</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireStateChanged</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.event.ChangeEvent <b class="function">changeEvent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyleContext.SmallAttributeSet</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3021"></a>
<p> 
  This immutable class implements the
  <tt class="literal">AttributeSet</tt> interface using a simple
  <tt class="literal">Object</tt> array, rather than a hashtable.  This
  implementation is memory efficient and time efficient for
  small attribute sets.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">StyleContext.SmallAttributeSet</b> implements AttributeSet {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SmallAttributeSet</b> (Object[ ] <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SmallAttributeSet</b> (AttributeSet <i class="parameter">attrs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing AttributeSet</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsAttribute</b> (Object <i class="parameter">name</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsAttributes</b> (AttributeSet <i class="parameter">attrs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">copyAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getAttribute</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAttributeCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">getAttributeNames</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">getResolveParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDefined</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEqual</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">StyleContext.createSmallAttributeSet(), javax.swing.text.html.StyleSheet.createSmallAttributeSet()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyledDocument</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3022"></a>
<a name="INDEX-3023"></a>
<p> 
  This interface extends <tt class="literal">Document</tt> with the
  methods required for styled documents.  A styled document allows 
  attributes such as
  colors and font sizes to be applied to characters and runs of
  characters in the document.  It also allows 
  attributes such as margin sizes and
  line spacings to be applied to paragraphs.
  <tt class="literal">setCharacterAttributes()</tt> and
  <tt class="literal">setParagraphAttributes()</tt> apply a specified set of
  attributes to the specified region of the document.  They can be used
  to augment or replace the existing attributes of that region.
  <tt class="literal">getCharacterElement()</tt> and
  <tt class="literal">getParagraphElement()</tt> return the
  <tt class="literal">Element</tt> object that most directly represents or
  contains the character or paragraph at the specified position.</p>
<a name="INDEX-3024"></a>
<a name="INDEX-3025"></a>
<a name="INDEX-3026"></a>
<p>  The <tt class="literal">StyledDocument</tt> interface also defines methods
  for managing styles.  A <tt class="literal">Style</tt> object is a named set
  of attributes, with an optional parent attribute set that is used to
  look up attributes that are not specified directly in the
  <tt class="literal">Style</tt> object.  <tt class="literal">addStyle()</tt>
  creates a new <tt class="literal">Style</tt> object and registers it by name
  with the <tt class="literal">StyledDocument</tt>.
  <tt class="literal">getStyle()</tt> looks up a <tt class="literal">Style</tt>
  object by name.  The intent of <tt class="literal">Style</tt> objects is to
  represent named paragraph types such as "heading," "blockquote," and so
  forth.  The <tt class="literal">setLogicalStyle()</tt> method applies one of
  these named paragraph styles to the paragraph at the specified
  position.  This is the default style for that paragraph, unless
  it is overridden by attributes specified with
  <tt class="literal">setCharacterAttributes()</tt> or
  <tt class="literal">setParagraphAttributes()</tt>. </p>
<a name="INDEX-3027"></a>
<a name="INDEX-3028"></a>
<p>  See also <tt class="literal">DefaultStyledDocument</tt>,
  <tt class="literal">Element</tt>, <tt class="literal">Style</tt>, and
  <tt class="literal">AttributeSet</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">StyledDocument</b> extends Document {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Style <b class="function">addStyle</b> (String <i class="parameter">nm</i>, Style <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.Color <b class="function">getBackground</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.text.Element <b class="function">getCharacterElement</b> (int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.Font <b class="function">getFont</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.Color <b class="function">getForeground</b> (AttributeSet <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Style <b class="function">getLogicalStyle</b> (int <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract javax.swing.text.Element <b class="function">getParagraphElement</b> (int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Style <b class="function">getStyle</b> (String <i class="parameter">nm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeStyle</b> (String <i class="parameter">nm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setCharacterAttributes</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, AttributeSet <i class="parameter">s</i>, boolean <i class="parameter">replace</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLogicalStyle</b> (int <i class="parameter">pos</i>, Style <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setParagraphAttributes</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, AttributeSet <i class="parameter">s</i>, boolean <i class="parameter">replace</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(StyledDocument(Document))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultStyledDocument</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JTextPane.{JTextPane(), setStyledDocument()}, javax.swing.text.html.MinimalHTMLWriter.MinimalHTMLWriter()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTextPane.getStyledDocument(), StyledEditorKit.StyledTextAction.getStyledDocument()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyledEditorKit</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3029"></a>
<p> 
  This class is an <tt class="literal">EditorKit</tt> for generic styled
  text.  It is the default <tt class="literal">EditorKit</tt> used to
  configure the <tt class="literal">JTextPane</tt> component.  In addition to
  the standard <tt class="literal">EditorKit</tt> methods,
  <tt class="literal">StyledEditorKit</tt> defines
  <tt class="literal">getInputAttributes()</tt> and
  <tt class="literal">getCharacterAttributeRun()</tt> as conveniences for the
  various <tt class="literal">Action</tt> implementations it defines.</p>
<a name="INDEX-3030"></a>
<a name="INDEX-3031"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">StyledEditorKit</b> extends DefaultEditorKit {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">StyledEditorKit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Action[ ] <b class="function">getActions</b> ();</td><td align="right"><i> Overrides:DefaultEditorKit</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">getCharacterAttributeRun</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MutableAttributeSet <b class="function">getInputAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ViewFactory <b class="function">getViewFactory</b> ();</td><td align="right"><i> Overrides:DefaultEditorKit</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding DefaultEditorKit</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Document <b class="function">createDefaultDocument</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding EditorKit</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">deinstall</b> (JEditorPane <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">install</b> (JEditorPane <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">createInputAttributes</b> (javax.swing.text.Element <i class="parameter">element</i>, MutableAttributeSet <i class="parameter">set</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->EditorKit(Cloneable,Serializable)-->DefaultEditorKit-->StyledEditorKit</tt>
</p>

<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.html.HTMLEditorKit, javax.swing.text.rtf.RTFEditorKit</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTextPane.getStyledEditorKit(), StyledEditorKit.StyledTextAction.getStyledEditorKit()</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyledEditorKit.AlignmentAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3032"></a>
<p>  This action class sets the alignment paragraph attribute for the
  currently selected text in a <tt class="literal">JEditorPane</tt>.
  <tt class="literal">StyledEditorKit</tt> creates three distinct instances of
  <tt class="literal">AlignmentAction</tt> to handle left, right, and center
  alignment.  If the command string is set in the
  <tt class="literal">ActionEvent</tt>, it is interpreted as the integer
  value to use for the alignment attribute.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">StyledEditorKit.AlignmentAction</b> extends StyledEditorKit.StyledTextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AlignmentAction</b> (String <i class="parameter">nm</i>, int <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyledEditorKit.BoldAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<p>  This action toggles the bold text character attribute, either on the
  selected text or, if there is no selection, on the current set of
  attributes used for inserted text.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">StyledEditorKit.BoldAction</b> extends StyledEditorKit.StyledTextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BoldAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyledEditorKit.FontFamilyAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3033"></a>
<p>  This action sets the font family for the selected text or, if no text
  is selected, sets the font family that is used for newly
  inserted text.  <tt class="literal">StyledEditorKit</tt> creates several
  instances of this class, each of which is configured to use a
  different font family.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">StyledEditorKit.FontFamilyAction</b> extends StyledEditorKit.StyledTextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FontFamilyAction</b> (String <i class="parameter">nm</i>, String <i class="parameter">family</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyledEditorKit.FontSizeAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3034"></a>
<p>  This action sets the font size for the selected text or, if no text
  is selected, sets the font size that is used for newly
  inserted text.  <tt class="literal">StyledEditorKit</tt> creates several
  instances of this class, each of which is configured to use a
  different font size.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">StyledEditorKit.FontSizeAction</b> extends StyledEditorKit.StyledTextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FontSizeAction</b> (String <i class="parameter">nm</i>, int <i class="parameter">size</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyledEditorKit.ForegroundAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3035"></a>
<p>  This action sets the color of the selected text or, if no text is
  selected, sets the color that is used for newly inserted text.
  The color to be used is specified when the
  <tt class="literal">ForegroundAction</tt> constructor is called.  Or the
  color may be specified by the command string of the
  <tt class="literal">ActionEvent</tt>.  In this case, the color string should
  be in a format that can be interpreted by the
  <tt class="literal">decode()</tt> method of <tt class="literal">java.awt.Color</tt>. 
  <tt class="literal">StyledEditorKit</tt> does not include any objects of
  this type in the array of actions returned by its
  <tt class="literal">getAction()</tt> method.</p>
<a name="INDEX-3036"></a>
<a name="INDEX-3037"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">StyledEditorKit.ForegroundAction</b> extends StyledEditorKit.StyledTextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ForegroundAction</b> (String <i class="parameter">nm</i>, java.awt.Color <i class="parameter">fg</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyledEditorKit.ItalicAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3038"></a>
<p>  This action toggles the italic text character attribute, either on the
  selected text or, if there is no selection, on the current set of
  attributes used for inserted text.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">StyledEditorKit.ItalicAction</b> extends StyledEditorKit.StyledTextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ItalicAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyledEditorKit.StyledTextAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3039"></a>
<p>  This class is the abstract superclass for <tt class="literal">Action</tt>
  objects that operate on a <tt class="literal">JEditorPane</tt> configured
  with a <tt class="literal">StyledEditorKit</tt>.  This class defines
  convenience methods that are used by the other inner
  <tt class="literal">Action</tt> classes defined by
  <tt class="literal">StyledEditorKit</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static class <b class="classname">StyledEditorKit.StyledTextAction</b> extends TextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">StyledTextAction</b> (String <i class="parameter">nm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final JEditorPane <b class="function">getEditor</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final StyledDocument <b class="function">getStyledDocument</b> (JEditorPane <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final StyledEditorKit <b class="function">getStyledEditorKit</b> (JEditorPane <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">setCharacterAttributes</b> (JEditorPane <i class="parameter">editor</i>, AttributeSet <i class="parameter">attr</i>, boolean <i class="parameter">replace</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">setParagraphAttributes</b> (JEditorPane <i class="parameter">editor</i>, AttributeSet <i class="parameter">attr</i>, boolean <i class="parameter">replace</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">StyledEditorKit.AlignmentAction, StyledEditorKit.BoldAction, StyledEditorKit.FontFamilyAction, StyledEditorKit.FontSizeAction, StyledEditorKit.ForegroundAction, StyledEditorKit.ItalicAction, StyledEditorKit.UnderlineAction, javax.swing.text.html.HTMLEditorKit.HTMLTextAction</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StyledEditorKit.UnderlineAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3040"></a>
<p>  This action toggles the underline character attribute, either on the
  selected text or, if there is no selection, on the set of
  attributes used for newly inserted text.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">StyledEditorKit.UnderlineAction</b> extends StyledEditorKit.StyledTextAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">UnderlineAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractAction</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TabableView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3041"></a>
<a name="INDEX-3042"></a>
<a name="INDEX-3043"></a>
<p>  This interface is implemented by <tt class="literal">View</tt> objects whose
  width may be dependent on the expansion of <b class="emphasis-bold">Tab</b> characters.
  <tt class="literal">getTabbedSpan()</tt> is passed a horizontal position and
  a <tt class="literal">TabExpander</tt> object and should return the
  appropriate width for the <tt class="literal">View</tt>.  The
  <tt class="literal">getPreferredSpan()</tt> method of the
  <tt class="literal">View</tt> object should return the same width.
  Applications do not need to use or implement this interface.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TabableView</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getPartialSpan</b> (int <i class="parameter">p0</i>, int <i class="parameter">p1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getTabbedSpan</b> (float <i class="parameter">x</i>, TabExpander <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TabExpander</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3044"></a>
<p>  This interface specifies how horizontal 
  <b class="emphasis-bold">Tab</b> characters in a
  <tt class="literal">Document</tt> are expanded.  Given the position in the
  document and on the screen of the 
  <b class="emphasis-bold">Tab</b> character, it returns the
  horizontal position that the <b class="emphasis-bold">Tab</b>
  character should tab to.  Applications do not typically need to use
  or implement this interface themselves.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TabExpander</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">nextTabStop</b> (float <i class="parameter">x</i>, int <i class="parameter">tabOffset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">javax.swing.text.ParagraphView, PlainView, WrappedPlainView</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">TabableView.getTabbedSpan(), Utilities.{drawTabbedText(), getBreakLocation(), getTabbedTextOffset(), getTabbedTextWidth()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TableView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3045"></a>
<p>  This <tt class="literal">BoxView</tt> class displays a table composed of
  <tt class="literal">TableView.TableRow</tt> and
  <tt class="literal">TableView.TableCell</tt> subviews.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">TableView</b> extends BoxView {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TableView</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding BoxView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">replace</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, View[ ] <i class="parameter">views</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding BoxView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected SizeRequirements <b class="function">calculateMinorAxisRequirements</b> (int <i class="parameter">axis</i>, SizeRequirements <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">layoutMinorAxis</b> (int <i class="parameter">targetSpan</i>, int <i class="parameter">axis</i>, int[ ] <i class="parameter">offsets</i>, int[ ] <i class="parameter">spans</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding CompositeView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected View <b class="function">getViewAtPosition</b> (int <i class="parameter">pos</i>, java.awt.Rectangle <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected TableView.TableCell <b class="function">createTableCell</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected TableView.TableRow <b class="function">createTableRow</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">layoutColumns</b> (int <i class="parameter">targetSpan</i>, int[ ] <i class="parameter">offsets</i>, int[ ] <i class="parameter">spans</i>, SizeRequirements[ ] <i class="parameter">reqs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->View(SwingConstants)-->CompositeView-->BoxView-->TableView</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TableView.TableCell</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3046"></a>
<p>  This <tt class="literal">BoxView</tt> class displays the contents of a table
  cell.  It may contain any type of child views.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TableView.TableCell</b> extends BoxView {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TableCell</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getColumnCount</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getGridColumn</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getGridRow</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRowCount</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGridLocation</b> (int <i class="parameter">row</i>, int <i class="parameter">col</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">TableView.createTableCell()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TableView.TableRow</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3047"></a>
<p>  This <tt class="literal">BoxView</tt> displays one row in a table.  It
  should contain <tt class="literal">TableView.TableCell</tt> children.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TableView.TableRow</b> extends BoxView {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TableRow</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding BoxView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getResizeWeight</b> (int <i class="parameter">axis</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">replace</b> (int <i class="parameter">offset</i>, int <i class="parameter">length</i>, View[ ] <i class="parameter">views</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding BoxView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">layoutMajorAxis</b> (int <i class="parameter">targetSpan</i>, int <i class="parameter">axis</i>, int[ ] <i class="parameter">offsets</i>, int[ ] <i class="parameter">spans</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">layoutMinorAxis</b> (int <i class="parameter">targetSpan</i>, int <i class="parameter">axis</i>, int[ ] <i class="parameter">offsets</i>, int[ ] <i class="parameter">spans</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding CompositeView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected View <b class="function">getViewAtPosition</b> (int <i class="parameter">pos</i>, java.awt.Rectangle <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">TableView.createTableRow()</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TabSet</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3048"></a>
<p>  This class represents a set of <tt class="literal">TabStop</tt> objects and
  provides several methods for querying that set of tab stops.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TabSet</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TabSet</b> (TabStop[ ] <i class="parameter">tabs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TabStop <b class="function">getTab</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public TabStop <b class="function">getTabAfter</b> (float <i class="parameter">location</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getTabCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getTabIndex</b> (TabStop <i class="parameter">tab</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getTabIndexAfter</b> (float <i class="parameter">location</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->TabSet(Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">StyleConstants.setTabSet()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">javax.swing.text.ParagraphView.getTabSet(), StyleConstants.getTabSet()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TabStop</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3049"></a>
<p>  This class represents a tab stop in a document.  Each tab stop has a
  horizontal position (measured in points), an alignment, and a
  leader character that is used to fill in the space between the
  previous character and the tab stop.  The various constants defined by
  this class represent the legal alignment and leader values.  See also
  <tt class="literal">TabSet</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TabStop</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TabStop</b> (float <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TabStop</b> (float <i class="parameter">pos</i>, int <i class="parameter">align</i>, int <i class="parameter">leader</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ALIGN_BAR</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ALIGN_CENTER</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ALIGN_DECIMAL</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ALIGN_LEFT</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ALIGN_RIGHT</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LEAD_DOTS</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LEAD_EQUALS</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LEAD_HYPHENS</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LEAD_NONE</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LEAD_THICKLINE</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LEAD_UNDERLINE</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAlignment</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLeader</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getPosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">other</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->TabStop(Serializable)</tt>
</p>

<p>
<span class="refsect1">Passed To: </span><tt class="literal">TabSet.{getTabIndex(), TabSet()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">TabSet.{getTab(), getTabAfter()}</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TextAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3050"></a>
<p>  This abstract class is an <tt class="literal">Action</tt> that extends
  <tt class="literal">AbstractAction</tt>.  It does not implement any of the
  abstract methods of
  <tt class="literal">AbstractAction</tt> but merely adds new protected
  methods that subclasses can use to figure out on what
  <tt class="literal">JTextComponent</tt> they are supposed to operate.
  These methods allow subclasses to define generic actions that are not
  specific to a particular <tt class="literal">JTextComponent</tt> but that
  can be used on any text component.
  Applications may subclass this interface 

to define custom actions, but
  they do not often need to do so.  <tt class="literal">DefaultEditorKit</tt>
  and <tt class="literal">StyledEditorKit</tt> define a number of inner
  classes that subclass <tt class="literal">TextAction</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">TextAction</b> extends AbstractAction {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextAction</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Action[ ] <b class="function">augmentList</b> (Action[ ] <i class="parameter">list1</i>, Action[ ] <i class="parameter">list2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final JTextComponent <b class="function">getFocusedComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final JTextComponent <b class="function">getTextComponent</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractAction(Action(java.awt.event.ActionListener(java.util.EventListener)),Cloneable,Serializable)-->TextAction</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">DefaultEditorKit.BeepAction, DefaultEditorKit.CopyAction, DefaultEditorKit.CutAction, DefaultEditorKit.DefaultKeyTypedAction, DefaultEditorKit.InsertBreakAction, DefaultEditorKit.InsertContentAction, DefaultEditorKit.InsertTabAction, DefaultEditorKit.PasteAction, StyledEditorKit.StyledTextAction</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Utilities</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3051"></a>
<p> 
  This class defines various static utility methods that are used
  internally by the <tt class="literal">javax.swing.text</tt> package.
  Although applications may occasionally find some of these methods
  useful, they are intended primarily for internal use and for use by
  programmers who are subclassing or heavily customizing
  <tt class="literal">javax.swing.text</tt> classes.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Utilities</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Utilities</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">drawTabbedText</b> (Segment <i class="parameter">s</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, java.awt.Graphics <i class="parameter">g</i>, TabExpander <i class="parameter">e</i>, int <i class="parameter">startOffset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">getBreakLocation</b> (Segment <i class="parameter">s</i>, java.awt.FontMetrics <i class="parameter">metrics</i>, int <i class="parameter">x0</i>, int <i class="parameter">x</i>, TabExpander <i class="parameter">e</i>, int <i class="parameter">startOffset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">getNextWord</b> (JTextComponent <i class="parameter">c</i>, int <i class="parameter">offs</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final javax.swing.text.Element <b class="function">getParagraphElement</b> (JTextComponent <i class="parameter">c</i>, int <i class="parameter">offs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">getPositionAbove</b> (JTextComponent <i class="parameter">c</i>, int <i class="parameter">offs</i>, int <i class="parameter">x</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">getPositionBelow</b> (JTextComponent <i class="parameter">c</i>, int <i class="parameter">offs</i>, int <i class="parameter">x</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">getPreviousWord</b> (JTextComponent <i class="parameter">c</i>, int <i class="parameter">offs</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">getRowEnd</b> (JTextComponent <i class="parameter">c</i>, int <i class="parameter">offs</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">getRowStart</b> (JTextComponent <i class="parameter">c</i>, int <i class="parameter">offs</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">getTabbedTextOffset</b> (Segment <i class="parameter">s</i>, java.awt.FontMetrics <i class="parameter">metrics</i>, int <i class="parameter">x0</i>, int <i class="parameter">x</i>, TabExpander <i class="parameter">e</i>, int <i class="parameter">startOffset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">getTabbedTextOffset</b> (Segment <i class="parameter">s</i>, java.awt.FontMetrics <i class="parameter">metrics</i>, int <i class="parameter">x0</i>, int <i class="parameter">x</i>, TabExpander <i class="parameter">e</i>, int <i class="parameter">startOffset</i>, boolean <i class="parameter">round</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">getTabbedTextWidth</b> (Segment <i class="parameter">s</i>, java.awt.FontMetrics <i class="parameter">metrics</i>, int <i class="parameter">x</i>, TabExpander <i class="parameter">e</i>, int <i class="parameter">startOffset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">getWordEnd</b> (JTextComponent <i class="parameter">c</i>, int <i class="parameter">offs</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">getWordStart</b> (JTextComponent <i class="parameter">c</i>, int <i class="parameter">offs</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>View</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3052"></a>
<p>  This class is the abstract superclass of a hierarchy of classes used
  to display various parts of a text document.  Just as
  <tt class="literal">java.awt.Component</tt> is the root of the component
  hierarchy and has many subclasses in <tt class="literal">java.awt</tt> and
  <tt class="literal">javax.swing</tt>, <tt class="literal">View</tt> is the root of
  the view hierarchy and has many subclasses in
  <tt class="literal">javax.swing.text</tt> and
  <tt class="literal">javax.swing.text.html</tt>.  Just as the various
  <tt class="literal">Component</tt> classes are used to display different 
  GUI 

elements, the various <tt class="literal">View</tt> classes are used to
  display different types of document elements.</p>
<p>  Each type of <tt class="literal">Document</tt> has a
  <tt class="literal">ViewFactory</tt> object that is used to create an
  appropriate <tt class="literal">View</tt> object for a given
  <tt class="literal">Element</tt> of a document.  Because a
  <tt class="literal">Document</tt> consists of a tree of
  <tt class="literal">Element</tt> objects, the document is displayed using a
  tree of <tt class="literal">View</tt> objects.  Just like GUI components,
  <tt class="literal">View</tt> objects are nested into a containment
  hierarchy.  Thus, a <tt class="literal">BoxView</tt> might contain a
  <tt class="literal">TableView</tt> and several
  <tt class="literal">ParagraphView</tt> objects, each of which contains a
  number of <tt class="literal">PlainView</tt> objects interspersed with
  <tt class="literal">IconView</tt> objects.</p>
<p>  Like a component, a <tt class="literal">View</tt> implementation must be
  able to paint itself, return its children, report its preferred size,
  and so on.  In fact, you can think of a <tt class="literal">View</tt> as a
  kind of extremely lightweight component, with a number of methods
  analogous to <tt class="literal">Component</tt> methods.  These include
  <tt class="literal">paint()</tt>, <tt class="literal">getView()</tt>,
  <tt class="literal">getViewCount()</tt>, <tt class="literal">getParent()</tt>,
  <tt class="literal">getPreferredSpan()</tt>,
  <tt class="literal">getMinimumSpan()</tt>,
  <tt class="literal">getMaximumSpan()</tt>, and
  <tt class="literal">isVisible()</tt>.</p>
<a name="INDEX-3053"></a>
<a name="INDEX-3054"></a>
<a name="INDEX-3055"></a>
<a name="INDEX-3056"></a>
<a name="INDEX-3057"></a>
<a name="INDEX-3058"></a>
<a name="INDEX-3059"></a>
<a name="INDEX-3060"></a>
<p>  A <tt class="literal">View</tt> implementation must also be able to convert
  between the document coordinate system--an integer position within the
  document--and the on-screen coordinate system in which things like
  mouse clicks and drags are measured.  The
  <tt class="literal">viewToModel()</tt> and <tt class="literal">modelToView()</tt>
  methods are called to perform these conversions.</p>
<a name="INDEX-3061"></a>
<a name="INDEX-3062"></a>
<p>
<tt class="literal">View</tt> objects are unlike components in one
  important aspect, however.  They may be subject to word-wrapping and
  line breaking.  The <tt class="literal">getBreakWeight()</tt> method returns
  an integer that specifies whether a given position is a reasonable
  place at which to insert a line break.  If a <tt class="literal">View</tt>
  supports line breaking, its <tt class="literal">breakView()</tt> method
  should break the view into two and return the newly created
  <tt class="literal">View</tt>.</p>
<p>  Programmers defining custom document types or custom document content
  types may need to create custom <tt class="literal">View</tt>
  implementations. Applications typically do not need to use or subclass
  this class directly.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">View</b> implements SwingConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">View</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BadBreakWeight</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ExcellentBreakWeight</b> ;</td><td align="right"><i> =2000</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ForcedBreakWeight</b> ;</td><td align="right"><i> =3000</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">GoodBreakWeight</b> ;</td><td align="right"><i> =1000</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">X_AXIS</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">Y_AXIS</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributeSet <b class="function">getAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getContainer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Document <b class="function">getDocument</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Element <b class="function">getElement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getEndOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public View <b class="function">getParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setParent</b> (View <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getStartOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getViewCount</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ViewFactory <b class="function">getViewFactory</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isVisible</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public View <b class="function">breakView</b> (int <i class="parameter">axis</i>, int <i class="parameter">offset</i>, float <i class="parameter">pos</i>, float <i class="parameter">len</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">changedUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public View <b class="function">createFragment</b> (int <i class="parameter">p0</i>, int <i class="parameter">p1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAlignment</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getBreakWeight</b> (int <i class="parameter">axis</i>, float <i class="parameter">pos</i>, float <i class="parameter">len</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">getChildAllocation</b> (int <i class="parameter">index</i>, java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getMaximumSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getMinimumSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getNextVisualPositionFrom</b> (int <i class="parameter">pos</i>, Position.Bias <i class="parameter">b</i>, java.awt.Shape <i class="parameter">a</i>, int <i class="parameter">direction</i>, Position.Bias[ ] <i class="parameter">biasRet</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getPreferredSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getResizeWeight</b> (int <i class="parameter">axis</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public View <b class="function">getView</b> (int <i class="parameter">n</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.Shape <b class="function">modelToView</b> (int <i class="parameter">pos</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias <i class="parameter">b</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">modelToView</b> (int <i class="parameter">p0</i>, Position.Bias <i class="parameter">b0</i>, int <i class="parameter">p1</i>, Position.Bias <i class="parameter">b1</i>, java.awt.Shape <i class="parameter">a</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>, java.awt.Shape <i class="parameter">allocation</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">preferenceChanged</b> (View <i class="parameter">child</i>, boolean <i class="parameter">width</i>, boolean <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSize</b> (float <i class="parameter">width</i>, float <i class="parameter">height</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">viewToModel</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, java.awt.Shape <i class="parameter">a</i>, Position.Bias[ ] <i class="parameter">biasReturn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public java.awt.Shape <b class="function">modelToView</b> (int <i class="parameter">pos</i>, java.awt.Shape <i class="parameter">a</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">viewToModel</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->View(SwingConstants)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">ComponentView, CompositeView, IconView, LabelView, PlainView</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ViewFactory</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3063"></a>
<a name="INDEX-3064"></a>
<p>  The <tt class="literal">ViewFactory</tt> interface defines a basic
  <tt class="literal">create()</tt> method that creates <tt class="literal">View</tt> 
  objects from the
  individual <tt class="literal">Element</tt> nodes of a
  <tt class="literal">Document</tt>.  Different types of documents use
  different <tt class="literal">ViewFactory</tt> implementations to
  implement a custom <tt class="literal">Element</tt> to
  <tt class="literal">View</tt> mapping.  The
  
<tt class="literal">getViewFactory()</tt> method of
  <tt class="literal">EditorKit</tt> returns a <tt class="literal">ViewFactory</tt>
  for a particular document type.</p>
<a name="INDEX-3065"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ViewFactory</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract View <b class="function">create</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">javax.swing.text.html.HTMLEditorKit.HTMLFactory</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DefaultEditorKit.getViewFactory(), EditorKit.getViewFactory(), StyledEditorKit.getViewFactory(), View.getViewFactory(), javax.swing.text.html.HTMLEditorKit.getViewFactory()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>WrappedPlainView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3066"></a>
<p>  This class displays multiple lines of plain text.  It can perform tab
  expansion and line wrapping.  See also <tt class="literal">PlainView</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">WrappedPlainView</b> extends BoxView implements TabExpander {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">WrappedPlainView</b> (javax.swing.text.Element <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">WrappedPlainView</b> (javax.swing.text.Element <i class="parameter">elem</i>, boolean <i class="parameter">wordWrap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TabExpander</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">nextTabStop</b> (float <i class="parameter">x</i>, int <i class="parameter">tabOffset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding BoxView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getMaximumSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getMinimumSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getPreferredSpan</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>, java.awt.Shape <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSize</b> (float <i class="parameter">width</i>, float <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding CompositeView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">changedUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeUpdate</b> (javax.swing.event.DocumentEvent <i class="parameter">e</i>, java.awt.Shape <i class="parameter">a</i>, ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding CompositeView</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">loadChildren</b> (ViewFactory <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">calculateBreakPosition</b> (int <i class="parameter">p0</i>, int <i class="parameter">p1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">drawLine</b> (int <i class="parameter">p0</i>, int <i class="parameter">p1</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">drawSelectedText</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">drawUnselectedText</b> (java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">p0</i>, int <i class="parameter">p1</i>) throws BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final Segment <b class="function">getLineBuffer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getTabSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->View(SwingConstants)-->CompositeView-->BoxView-->WrappedPlainView(TabExpander)</tt>
</p>
<a name="INDEX-3067"></a>
<a name="INDEX-3068"></a>
</div>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch29_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch29_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch31_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch31_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">29. The javax.swing.table Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">31. The javax.swing.text.html Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
