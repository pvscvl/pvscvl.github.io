<html>
<head>
<title>The java.awt.geom Package (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The java.awt.geom Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch15_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch15_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch17_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch17_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 16.  The java.awt.geom Package</h1>

<a name="INDEX-2000"></a>
<p> 
  The <tt class="literal">java.awt.geom</tt> 
  package contains Java 2D classes and interfaces related to shapes
  and geometry; the package is new in Java 1.2. Most of the classes in this package are
  <tt class="literal">java.awt.Shape</tt> implementations that can be drawn
  and filled by a <tt class="literal">java.awt.Graphics2D</tt> object.  Note
  that some implementations store data using single-precision
  floating-point coordinates, while others use double-precision
  coordinates.  Other important classes include
  <tt class="literal">AffineTransform</tt>, <tt class="literal">Area</tt>,
  <tt class="literal">GeneralPath</tt>, and <tt class="literal">PathIterator</tt>.
  <a href="#jfcnut-ch-java.awt.geom-fig-1">Figure 16-1</a> shows the class hierarchy of
  this package.</p>
<a name="INDEX-2001"></a>
<a name="INDEX-2002"></a>
<a name="jfcnut-ch-java.awt.geom-fig-1"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.1601.gif" webstripperlinkwas="figs/jfcn.1601.gif"></div>
<h4 class="objtitle">Figure 16-1. The java.awt.geom package</h4>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AffineTransform</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2003"></a>
<p> 
  An <tt class="literal">AffineTransform</tt> represents an arbitrary linear
  transformation of a point, vector, shape, or coordinate system by any
  combination of translation, rotation, scaling, flipping, and skewing.
  This is one of the most fundamental classes in Java 2D: the Java 2D
  rendering process uses an <tt class="literal">AffineTransform</tt> to
  convert from user coordinate space to the coordinate space of the
  physical device.  In addition to this implicit use of
  <tt class="literal">AffineTransform</tt>, the class is often used explicitly
  in Java 2D programming.</p>
<a name="INDEX-2004"></a>
<p>  The transformations specified by <tt class="literal">AffineTransform</tt>
  objects are quite general.  But they are all linear: straight lines
  remain straight, and parallel lines remain parallel under any
  <tt class="literal">AffineTransform</tt>.  Although it is possible to
  imagine more general, nonlinear, transformations, Java 2D works only
  with affine transformations.  <tt class="literal">AffineTransform</tt> is
  not an implementation of some more general
  <tt class="literal">Transform</tt> interface.</p>
<p>  Mathematically, an affine transformation is represented by a 2-by-3
  matrix of six numbers.  The <tt class="literal">AffineTransform</tt> class
  has constructors and methods that allow you to work with this matrix
  directly, but unless you remember your linear algebra, you typically
  use the higher-level methods of this class.</p>
<p>  You can use a constructor to create an
  <tt class="literal">AffineTransform</tt>, but it is usually easier to use
  one of the static methods to create an
  <tt class="literal">AffineTransform</tt> suitable for rotation about the
  origin, rotation about an arbitrary point, scaling, shearing, or
  translation.  Or, if you have an existing
  <tt class="literal">AffineTransform</tt> object that you want to reuse, you
  can use one of the <tt class="literal">setTo()</tt>
methods to specify a
  rotation, scale, shear, or translation to replace the existing
  transform.  Note that a flip transform is simply scaling by -1.0 in
  the X or Y dimension.</p>
<p>  Often, however, you have an <tt class="literal">AffineTransform</tt>
  that you want to transform further.  The <tt class="literal">rotate()</tt>,
  <tt class="literal">scale()</tt>, <tt class="literal">shear()</tt>, and
  <tt class="literal">translate()</tt> methods do this.  Or, more generally,
  you can use <tt class="literal">concatenate()</tt> or
  <tt class="literal">preConcatenate()</tt> to transform one
  <tt class="literal">AffineTransform</tt> by another.</p>
<p>  Once an <tt class="literal">AffineTransform</tt> object is set to the
  desired transformation, the <tt class="literal">transform()</tt> method can
  be used to transform points, or arrays of points, in the desired way.
  <tt class="literal">deltaTransform()</tt> transforms a point or array of
  points, leaving out any translation component of the transform.  This
  is useful for transforming dimensions and position-independent
  vectors, rather than transforming absolute coordinates.
  <tt class="literal">inverseTransform()</tt> performs the inverse of the
  transformation specified by an <tt class="literal">AffineTransform</tt>.
  Finally, <tt class="literal">createTransformedShape()</tt> returns a
  <tt class="literal">java.awt.Shape</tt> that represents a transformed
  version of the specified <tt class="literal">Shape</tt>.</p>
<a name="INDEX-2005"></a>
<a name="INDEX-2006"></a>
<a name="INDEX-2007"></a>
<a name="INDEX-2008"></a>
<p>
<tt class="literal">isIdentity()</tt> returns <tt class="literal">true</tt> if an
  <tt class="literal">AffineTransform</tt> is an identity transform--that is,
  if it performs no transform at all.  <tt class="literal">getType()</tt>
  returns a value that provides basic information about the transform.
  The value returned is <tt class="literal">TYPE_IDENTITY</tt>,
  <tt class="literal">TYPE_GENERAL_TRANSFORM</tt>, or a bitmask of the
  remaining type constants.</p>
<a name="INDEX-2009"></a>
<a name="INDEX-2010"></a>
<a name="INDEX-2011"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">AffineTransform</b> implements Cloneable, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AffineTransform</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AffineTransform</b> (double[ ] <i class="parameter">flatmatrix</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AffineTransform</b> (float[ ] <i class="parameter">flatmatrix</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AffineTransform</b> (AffineTransform <i class="parameter">Tx</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AffineTransform</b> (double <i class="parameter">m00</i>, double <i class="parameter">m10</i>, double <i class="parameter">m01</i>, double <i class="parameter">m11</i>, double <i class="parameter">m02</i>, double <i class="parameter">m12</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AffineTransform</b> (float <i class="parameter">m00</i>, float <i class="parameter">m10</i>, float <i class="parameter">m01</i>, float <i class="parameter">m11</i>, float <i class="parameter">m02</i>, float <i class="parameter">m12</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TYPE_FLIP</b> ;</td><td align="right"><i> =64</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TYPE_GENERAL_ROTATION</b> ;</td><td align="right"><i> =16</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TYPE_GENERAL_SCALE</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TYPE_GENERAL_TRANSFORM</b> ;</td><td align="right"><i> =32</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TYPE_IDENTITY</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TYPE_MASK_ROTATION</b> ;</td><td align="right"><i> =24</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TYPE_MASK_SCALE</b> ;</td><td align="right"><i> =6</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TYPE_QUADRANT_ROTATION</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TYPE_TRANSLATION</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TYPE_UNIFORM_SCALE</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static AffineTransform <b class="function">getRotateInstance</b> (double <i class="parameter">theta</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static AffineTransform <b class="function">getRotateInstance</b> (double <i class="parameter">theta</i>, double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static AffineTransform <b class="function">getScaleInstance</b> (double <i class="parameter">sx</i>, double <i class="parameter">sy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static AffineTransform <b class="function">getShearInstance</b> (double <i class="parameter">shx</i>, double <i class="parameter">shy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static AffineTransform <b class="function">getTranslateInstance</b> (double <i class="parameter">tx</i>, double <i class="parameter">ty</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getDeterminant</b> ();</td><td align="right"><i> default:1.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isIdentity</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getScaleX</b> ();</td><td align="right"><i> default:1.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getScaleY</b> ();</td><td align="right"><i> default:1.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getShearX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getShearY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getTranslateX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getTranslateY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getType</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">concatenate</b> (AffineTransform <i class="parameter">Tx</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AffineTransform <b class="function">createInverse</b> () throws NoninvertibleTransformException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape <b class="function">createTransformedShape</b> (Shape <i class="parameter">pSrc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">deltaTransform</b> (Point2D <i class="parameter">ptSrc</i>, Point2D <i class="parameter">ptDst</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">deltaTransform</b> (double[ ] <i class="parameter">srcPts</i>, int <i class="parameter">srcOff</i>, double[ ] <i class="parameter">dstPts</i>, int <i class="parameter">dstOff</i>, int <i class="parameter">numPts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">getMatrix</b> (double[ ] <i class="parameter">flatmatrix</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">inverseTransform</b> (Point2D <i class="parameter">ptSrc</i>, Point2D <i class="parameter">ptDst</i>) throws NoninvertibleTransformException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">inverseTransform</b> (double[ ] <i class="parameter">srcPts</i>, int <i class="parameter">srcOff</i>, double[ ] <i class="parameter">dstPts</i>, int <i class="parameter">dstOff</i>, int <i class="parameter">numPts</i>) throws NoninvertibleTransformException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">preConcatenate</b> (AffineTransform <i class="parameter">Tx</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">rotate</b> (double <i class="parameter">theta</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">rotate</b> (double <i class="parameter">theta</i>, double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">scale</b> (double <i class="parameter">sx</i>, double <i class="parameter">sy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setToIdentity</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setToRotation</b> (double <i class="parameter">theta</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setToRotation</b> (double <i class="parameter">theta</i>, double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setToScale</b> (double <i class="parameter">sx</i>, double <i class="parameter">sy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setToShear</b> (double <i class="parameter">shx</i>, double <i class="parameter">shy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setToTranslation</b> (double <i class="parameter">tx</i>, double <i class="parameter">ty</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTransform</b> (AffineTransform <i class="parameter">Tx</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTransform</b> (double <i class="parameter">m00</i>, double <i class="parameter">m10</i>, double <i class="parameter">m01</i>, double <i class="parameter">m11</i>, double <i class="parameter">m02</i>, double <i class="parameter">m12</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">shear</b> (double <i class="parameter">shx</i>, double <i class="parameter">shy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">transform</b> (Point2D <i class="parameter">ptSrc</i>, Point2D <i class="parameter">ptDst</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">transform</b> (float[ ] <i class="parameter">srcPts</i>, int <i class="parameter">srcOff</i>, float[ ] <i class="parameter">dstPts</i>, int <i class="parameter">dstOff</i>, int <i class="parameter">numPts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">transform</b> (Point2D[ ] <i class="parameter">ptSrc</i>, int <i class="parameter">srcOff</i>, Point2D[ ] <i class="parameter">ptDst</i>, int <i class="parameter">dstOff</i>, int <i class="parameter">numPts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">transform</b> (float[ ] <i class="parameter">srcPts</i>, int <i class="parameter">srcOff</i>, double[ ] <i class="parameter">dstPts</i>, int <i class="parameter">dstOff</i>, int <i class="parameter">numPts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">transform</b> (double[ ] <i class="parameter">srcPts</i>, int <i class="parameter">srcOff</i>, double[ ] <i class="parameter">dstPts</i>, int <i class="parameter">dstOff</i>, int <i class="parameter">numPts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">transform</b> (double[ ] <i class="parameter">srcPts</i>, int <i class="parameter">srcOff</i>, float[ ] <i class="parameter">dstPts</i>, int <i class="parameter">dstOff</i>, int <i class="parameter">numPts</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">translate</b> (double <i class="parameter">tx</i>, double <i class="parameter">ty</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AffineTransform(Cloneable,Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Font.getTransform(), Graphics2D.getTransform(), GraphicsConfiguration.{getDefaultTransform(), getNormalizingTransform()}, java.awt.font.FontRenderContext.getTransform(), java.awt.font.GlyphVector.getGlyphTransform(), java.awt.font.TransformAttribute.getTransform(), AffineTransform.{createInverse(), getRotateInstance(), getScaleInstance(), getShearInstance(), getTranslateInstance()}, java.awt.image.AffineTransformOp.getTransform(), java.awt.image.renderable.RenderContext.getTransform()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Arc2D</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2012"></a>
<p> 
  This abstract class is a <tt class="literal">java.awt.Shape</tt> that
  represents an arc.  The arc is defined as a portion of an ellipse, where
  the ellipse is defined by a rectangle.  The start and end points of
  the arc on that ellipse are defined by a start angle and an extent
  angle, measured in degrees counterclockwise from the positive X axis.
  Unless the ellipse is actually a perfect circle, the specified angles
  are not true angles: a line drawn from the center of the ellipse to
  the upper-right corner of the bounding rectangle is always considered
  to form a 45-degree angle with the X axis, regardless of the true
  angle it forms.</p>
<p>  In addition to the coordinates of the rectangle and the angles that
  specify the start and end points of the arc, the shape of an 
  <tt class="literal">Arc2D</tt> is
  also specified by its <tt class="literal">arcType</tt> property.  If the
  type of the arc is specified as <tt class="literal">CHORD</tt>, the two
  end points are joined by a straight line.  If the type is
  specified as <tt class="literal">PIE</tt>, each of the two end points is 
  joined to the center of the ellipse, forming a wedge, or slice of
  pie.  If the type is specified as <tt class="literal">OPEN</tt>, the
  end points are not joined and the resulting shape is an open curve
  that does not enclose a region.</p>
<p>
<tt class="literal">Arc2D</tt> 
  is an abstract class and cannot be instantiated.
  <tt class="literal">Arc2D.Float</tt> and <tt class="literal">Arc2D.Double</tt> are
  concrete subclasses that use <tt class="literal">float</tt> and
  <tt class="literal">double</tt> fields to store arc coordinates and angles.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">Arc2D</b> extends RectangularShape {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">Arc2D</b> (int <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CHORD</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">OPEN</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PIE</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getAngleExtent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setAngleExtent</b> (double <i class="parameter">angExt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getAngleStart</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAngleStart</b> (Point2D <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setAngleStart</b> (double <i class="parameter">angSt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getArcType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setArcType</b> (int <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> Overrides:RectangularShape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getEndPoint</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getStartPoint</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsAngle</b> (double <i class="parameter">angle</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAngles</b> (Point2D <i class="parameter">p1</i>, Point2D <i class="parameter">p2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAngles</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setArc</b> (Arc2D <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setArc</b> (Rectangle2D <i class="parameter">rect</i>, double <i class="parameter">angSt</i>, double <i class="parameter">angExt</i>, int <i class="parameter">closure</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setArc</b> (Point2D <i class="parameter">loc</i>, Dimension2D <i class="parameter">size</i>, double <i class="parameter">angSt</i>, double <i class="parameter">angExt</i>, int <i class="parameter">closure</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setArc</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>, double <i class="parameter">angSt</i>, double <i class="parameter">angExt</i>, int <i class="parameter">closure</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setArcByCenter</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">radius</i>, double <i class="parameter">angSt</i>, double <i class="parameter">angExt</i>, int <i class="parameter">closure</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setArcByTangent</b> (Point2D <i class="parameter">p1</i>, Point2D <i class="parameter">p2</i>, Point2D <i class="parameter">p3</i>, double <i class="parameter">radius</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RectangularShape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFrame</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract Rectangle2D <b class="function">makeBounds</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->RectangularShape(Cloneable,Shape)-->Arc2D</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">Arc2D.Double, Arc2D.Float</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Arc2D.setArc()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Arc2D.Double</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2013"></a>
<p> 
  This class is a concrete implementation of
  <tt class="literal">Arc2D</tt> that uses <tt class="literal">double</tt> fields to
  store the coordinates and angles of the arc.  For efficiency,
  these <tt class="literal">x</tt>, <tt class="literal">y</tt>,
  <tt class="literal">width</tt>, <tt class="literal">height</tt>,
  <tt class="literal">start</tt>, and <tt class="literal">extent</tt> fields are
  declared <tt class="literal">public</tt> and may be used 

directly by Java
  programs.
  See <tt class="literal">Arc2D</tt> for more information.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">Arc2D.Double</b> extends Arc2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> (int <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> (Rectangle2D <i class="parameter">ellipseBounds</i>, double <i class="parameter">start</i>, double <i class="parameter">extent</i>, int <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>, double <i class="parameter">start</i>, double <i class="parameter">extent</i>, int <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Arc2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getAngleExtent</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getAngleStart</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAngleExtent</b> (double <i class="parameter">angExt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAngleStart</b> (double <i class="parameter">angSt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setArc</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>, double <i class="parameter">angSt</i>, double <i class="parameter">angExt</i>, int <i class="parameter">closure</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Arc2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Rectangle2D <b class="function">makeBounds</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RectangularShape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getHeight</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getWidth</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">extent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">height</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">start</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">width</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">x</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">y</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Arc2D.Float</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2014"></a>
<p> 
  This class is a concrete implementation of
  <tt class="literal">Arc2D</tt> that uses <tt class="literal">float</tt> fields to
  store the coordinates and angles of the arc.  For efficiency,
  these <tt class="literal">x</tt>, <tt class="literal">y</tt>,
  <tt class="literal">width</tt>, <tt class="literal">height</tt>,
  <tt class="literal">start</tt>, and <tt class="literal">extent</tt> fields are
  declared <tt class="literal">public</tt> and may be used directly by Java
  programs.
  See <tt class="literal">Arc2D</tt> for more information.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">Arc2D.Float</b> extends Arc2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> (int <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> (Rectangle2D <i class="parameter">ellipseBounds</i>, float <i class="parameter">start</i>, float <i class="parameter">extent</i>, int <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, float <i class="parameter">w</i>, float <i class="parameter">h</i>, float <i class="parameter">start</i>, float <i class="parameter">extent</i>, int <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Arc2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getAngleExtent</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getAngleStart</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAngleExtent</b> (double <i class="parameter">angExt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAngleStart</b> (double <i class="parameter">angSt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setArc</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>, double <i class="parameter">angSt</i>, double <i class="parameter">angExt</i>, int <i class="parameter">closure</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Arc2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Rectangle2D <b class="function">makeBounds</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RectangularShape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getHeight</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getWidth</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">extent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">height</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">start</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">width</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">x</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">y</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Area</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2015"></a>
<p>
<tt class="literal">Area</tt> is an implementation of
  <tt class="literal">java.awt.Shape</tt> that represents an arbitrary
  enclosed area.  The <tt class="literal">Area()</tt> constructor is passed an
  arbitrary <tt class="literal">Shape</tt> that defines the initial area.  If
  this <tt class="literal">Shape</tt> object represents an open curve
  that does not enclose an area, the curve is automatically closed with
  a straight line between the end points.  Once an
  <tt class="literal">Area</tt> object has been created, it can be combined
  with another <tt class="literal">Area</tt> object with the
  <tt class="literal">add()</tt>, <tt class="literal">subtract()</tt>,
  <tt class="literal">intersect()</tt>, and <tt class="literal">exclusiveOr()</tt>
  methods.  For example, you can construct an <tt class="literal">Area</tt>
  object that represents a hexagon minus the intersection of two
  circles.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Area</b> implements Cloneable, Shape {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Area</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Area</b> (Shape <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i> Implements:Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> Implements:Shape default:Rectangle2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isPolygonal</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isRectangular</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSingular</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (Area <i class="parameter">rhs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Area <b class="function">createTransformedArea</b> (AffineTransform <i class="parameter">t</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Area <i class="parameter">other</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">exclusiveOr</b> (Area <i class="parameter">rhs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">intersect</b> (Area <i class="parameter">rhs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">reset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">subtract</b> (Area <i class="parameter">rhs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">transform</b> (AffineTransform <i class="parameter">t</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Point2D <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Rectangle2D <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>, double <i class="parameter">flatness</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (Rectangle2D <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Area(Cloneable,Shape)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Area.{add(), equals(), exclusiveOr(), intersect(), subtract()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Area.createTransformedArea()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CubicCurve2D</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2016"></a>
<p> 
  This abstract class is a <tt class="literal">java.awt.Shape</tt> that
  represents a smooth cubic Bezier curve (or spline) between end points
  <tt class="literal">p1</tt> (<tt class="literal">x1</tt>, <tt class="literal">y1</tt>) 
  and <tt class="literal">p2</tt> (<tt class="literal">x2</tt>, <tt class="literal">y2</tt>).
  The precise shape of the curve is defined by two control points, 
  <tt class="literal">cp1</tt>
  (<tt class="literal">ctrlx1</tt>, <tt class="literal">ctrly1</tt>) and 
  <tt class="literal">cp2</tt> (<tt class="literal">ctrlx2</tt>,
  <tt class="literal">ctrly2</tt>).  Note that the curve does not pass through 
  <tt class="literal">cp1</tt>
  and <tt class="literal">cp2</tt> 
  but that it does remain inside the quadrilateral defined by
  <tt class="literal">p1</tt>, <tt class="literal">cp1</tt>, <tt class="literal">cp2</tt>, 
  and <tt class="literal">p2</tt>.</p>
<a name="INDEX-2017"></a>
<p>
<tt class="literal">CubicCurve2D</tt> does not itself enclose an area, so
  the <tt class="literal">contains()</tt> methods test whether a point or
  rectangle is within the area defined by the curve and the straight
  line between its end points.</p>
<p>
<tt class="literal">CubicCurve2D</tt> is an abstract class and cannot be
  instantiated.  <tt class="literal">CubicCurve2D.Float</tt> and
  <tt class="literal">CubicCurve2D.Double</tt> are concrete subclasses that
  use <tt class="literal">float</tt> and <tt class="literal">double</tt> fields to
  store the end points and control points.  See also
  <tt class="literal">QuadCurve2D</tt>, which is a quadratic Bezier curve that
  uses only a single control point.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">CubicCurve2D</b> implements Cloneable, Shape {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">CubicCurve2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">getFlatness</b> (double[ ] <i class="parameter">coords</i>, int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">getFlatness</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">ctrlx1</i>, double <i class="parameter">ctrly1</i>, double <i class="parameter">ctrlx2</i>, double <i class="parameter">ctrly2</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">getFlatnessSq</b> (double[ ] <i class="parameter">coords</i>, int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">getFlatnessSq</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">ctrlx1</i>, double <i class="parameter">ctrly1</i>, double <i class="parameter">ctrlx2</i>, double <i class="parameter">ctrly2</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">solveCubic</b> (double[ ] <i class="parameter">eqn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">subdivide</b> (CubicCurve2D <i class="parameter">src</i>, CubicCurve2D <i class="parameter">left</i>, CubicCurve2D <i class="parameter">right</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">subdivide</b> (double[ ] <i class="parameter">src</i>, int <i class="parameter">srcoff</i>, double[ ] <i class="parameter">left</i>, int <i class="parameter">leftoff</i>, double[ ] <i class="parameter">right</i>, int <i class="parameter">rightoff</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i> Implements:Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> Implements:Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Point2D <b class="function">getCtrlP1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Point2D <b class="function">getCtrlP2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getCtrlX1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getCtrlX2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getCtrlY1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getCtrlY2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getFlatness</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getFlatnessSq</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Point2D <b class="function">getP1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Point2D <b class="function">getP2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getX1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getX2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getY1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getY2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (CubicCurve2D <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (double[ ] <i class="parameter">coords</i>, int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (Point2D[ ] <i class="parameter">pts</i>, int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (Point2D <i class="parameter">p1</i>, Point2D <i class="parameter">cp1</i>, Point2D <i class="parameter">cp2</i>, Point2D <i class="parameter">p2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setCurve</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">ctrlx1</i>, double <i class="parameter">ctrly1</i>, double <i class="parameter">ctrlx2</i>, double <i class="parameter">ctrly2</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">subdivide</b> (CubicCurve2D <i class="parameter">left</i>, CubicCurve2D <i class="parameter">right</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Point2D <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>, double <i class="parameter">flatness</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->CubicCurve2D(Cloneable,Shape)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">CubicCurve2D.Double, CubicCurve2D.Float</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">CubicCurve2D.{setCurve(), subdivide()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CubicCurve2D.Double</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2018"></a>
<p> 
  This class is a concrete implementation of
  <tt class="literal">CubicCurve2D</tt> that uses <tt class="literal">double</tt>
  fields to store the end points and control points of the curve.  The X and Y coordinates of these four points are stored in public
  fields and may be used directly by Java programs.
  See <tt class="literal">CubicCurve2D</tt> for more information.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">CubicCurve2D.Double</b> extends CubicCurve2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">ctrlx1</i>, double <i class="parameter">ctrly1</i>, double <i class="parameter">ctrlx2</i>, double <i class="parameter">ctrly2</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding CubicCurve2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getCtrlP1</b> ();</td><td align="right"><i> default:Point2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getCtrlP2</b> ();</td><td align="right"><i> default:Point2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCtrlX1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCtrlX2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCtrlY1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCtrlY2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getP1</b> ();</td><td align="right"><i> default:Point2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getP2</b> ();</td><td align="right"><i> default:Point2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">ctrlx1</i>, double <i class="parameter">ctrly1</i>, double <i class="parameter">ctrlx2</i>, double <i class="parameter">ctrly2</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ctrlx1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ctrlx2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ctrly1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ctrly2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">x1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">x2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">y1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">y2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CubicCurve2D.Float</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2019"></a>
<p> 
  This class is a concrete implementation of
  <tt class="literal">CubicCurve2D</tt> that uses <tt class="literal">float</tt>
  fields to store the end points and control points of the curve.  The X and Y coordinates of these four points are stored in public
  fields and may be used directly by Java programs.
  See <tt class="literal">CubicCurve2D</tt> for more information.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">CubicCurve2D.Float</b> extends CubicCurve2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> (float <i class="parameter">x1</i>, float <i class="parameter">y1</i>, float <i class="parameter">ctrlx1</i>, float <i class="parameter">ctrly1</i>, float <i class="parameter">ctrlx2</i>, float <i class="parameter">ctrly2</i>, float <i class="parameter">x2</i>, float <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (float <i class="parameter">x1</i>, float <i class="parameter">y1</i>, float <i class="parameter">ctrlx1</i>, float <i class="parameter">ctrly1</i>, float <i class="parameter">ctrlx2</i>, float <i class="parameter">ctrly2</i>, float <i class="parameter">x2</i>, float <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding CubicCurve2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getCtrlP1</b> ();</td><td align="right"><i> default:Point2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getCtrlP2</b> ();</td><td align="right"><i> default:Point2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCtrlX1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCtrlX2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCtrlY1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCtrlY2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getP1</b> ();</td><td align="right"><i> default:Point2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getP2</b> ();</td><td align="right"><i> default:Point2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">ctrlx1</i>, double <i class="parameter">ctrly1</i>, double <i class="parameter">ctrlx2</i>, double <i class="parameter">ctrly2</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">ctrlx1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">ctrlx2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">ctrly1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">ctrly2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">x1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">x2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">y1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">y2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Dimension2D</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2020"></a>
<p>  This class represents a two-dimensional size in terms of
  its width and height.  The
  accessor methods defined by this class query and set the width and
  height using values of type <tt class="literal">double</tt>.  Note,
  however, that this class is abstract and does not actually store a
  size itself.  <tt class="literal">java.awt.Dimension</tt> is a concrete
  subclass that stores a width and height as 

integers.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">Dimension2D</b> implements Cloneable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">Dimension2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getHeight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getWidth</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSize</b> (Dimension2D <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setSize</b> (double <i class="parameter">width</i>, double <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Dimension2D(Cloneable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">Dimension</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Arc2D.setArc(), Dimension2D.setSize(), RectangularShape.setFrame()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Ellipse2D</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2021"></a>
<p> 
  This abstract class is a <tt class="literal">java.awt.Shape</tt> that
  represents an ellipse (or a circle).  <tt class="literal">Ellipse2D</tt> is
  a subclass of <tt class="literal">RectangularShape</tt>, and for this
  reason, the ellipse is defined by its bounding rectangle.  The width
  and height of the bounding rectangle specify the length of the two
  axes of the ellipse.  (If the width and height are equal, the
  ellipse is a circle.)  The X and Y coordinates of the ellipse specify
  the upper-left corner of the bounding rectangle; note that this point
  actually falls outside of the ellipse.  The
  <tt class="literal">setFrameFromCenter()</tt> method, inherited from
  <tt class="literal">RectangularShape</tt>, allows you to define the ellipse
  by specifying the center and one corner.  Note that
  <tt class="literal">Ellipse2D</tt> 
  can only represent ellipses whose axes are parallel to the X and Y
  axes of the coordinate system.  In order to work with rotated ellipses,
  use the <tt class="literal">createTransformedShape()</tt> method of
  <tt class="literal">AffineTransform</tt> or
  some other transformation method.</p>
<a name="INDEX-2022"></a>
<p>
<tt class="literal">Ellipse2D</tt> is an abstract class and cannot be
  instantiated.  The concrete subclasses
  <tt class="literal">Ellipse2D.Double</tt> and
  <tt class="literal">Ellipse2D.Float</tt> represent ellipses using
  <tt class="literal">double</tt> and <tt class="literal">float</tt> fields to
  contain the rectangular coordinates.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">Ellipse2D</b> extends RectangularShape {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">Ellipse2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RectangularShape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->RectangularShape(Cloneable,Shape)-->Ellipse2D</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">Ellipse2D.Double, Ellipse2D.Float</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Ellipse2D.Double</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2023"></a>
<p> 
  This class is a concrete implementation of
  <tt class="literal">Ellipse2D</tt> that uses <tt class="literal">double</tt>
  fields to store the coordinates of the bounding rectangle of the
  ellipse.  These <tt class="literal">x</tt>, <tt class="literal">y</tt>,
  <tt class="literal">width</tt>, <tt class="literal">height</tt> fields are
  declared public and may be used directly by Java
  programs.
  See <tt class="literal">Ellipse2D</tt> for more information.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">Ellipse2D.Double</b> extends Ellipse2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RectangularShape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getHeight</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getWidth</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFrame</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">height</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">width</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">x</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">y</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Ellipse2D.Float</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2024"></a>
<p> 
  This class is a concrete implementation of
  <tt class="literal">Ellipse2D</tt> that uses <tt class="literal">float</tt>
  fields to store the coordinates of the bounding rectangle of the
  ellipse.  Note that these <tt class="literal">x</tt>, <tt class="literal">y</tt>,
  <tt class="literal">width</tt>, <tt class="literal">height</tt> fields are
  declared <tt class="literal">public</tt> and may be used directly by Java
  programs.
  See <tt class="literal">Ellipse2D</tt> for more information.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">Ellipse2D.Float</b> extends Ellipse2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, float <i class="parameter">w</i>, float <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFrame</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, float <i class="parameter">w</i>, float <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RectangularShape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getHeight</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getWidth</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFrame</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">height</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">width</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">x</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">y</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FlatteningPathIterator</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2025"></a>
<p> 
  This class is a <tt class="literal">PathIterator</tt> that flattens the
  curves returned by another <tt class="literal">PathIterator</tt>,
  approximating them with straight-line segments that are easier to work
  with.  The <tt class="literal">currentSegment()</tt> methods of
  <tt class="literal">FlatteningPathIterator</tt> are guaranteed never to
  return <tt class="literal">SEG_QUADTO</tt> or <tt class="literal">SEG_CUBICTO</tt>
  curve segments.</p>
<a name="INDEX-2026"></a>
<p>  The flatness of a cubic or quadratic curve is the distance from the
  curve to its control points.  Smaller distances imply flatter
  curves (i.e., curves that are closer to a straight line).  The
  <em class="replaceable">flatness</em> argument to the
  <tt class="literal">FlatteningPathIterator()</tt> constructor specifies how
  flat a curve must be before it is approximated with a flat line.
  Smaller values of flatness result in increasingly accurate
  approximations of the curves.</p>
<p>  When a <tt class="literal">FlatteningPathIterator</tt> encounters a curve
  that is not flat enough to approximate with a straight line, it
  subdivides the curve into two curves, each of which is flatter than
  the original curve.  This process of subdivision continues recursively
  until the 

subdivided curves are flat enough to be approximated with
  line segments, up to the num

ber of times specified by the
  <em class="replaceable">limit</em> argument.  If
  <em class="replaceable">limit</em> is not specified, a default of 10
  is used, which means that no curve is broken down into more than
  1,024 separate line 

segments.</p>



<p>  You should rarely need to use a
  <tt class="literal">FlatteningPathIterator</tt> explicitly in Java 2D
  programming.  The two-argument version of the
  <tt class="literal">getPathIterator()</tt> method of <tt class="literal">Shape</tt>
  takes a
  <em class="replaceable">flatness</em> argument and returns a flattened
  path that does not contain any curves.  Implementations of this method
  typically use <tt class="literal">FlatteningPathIterator</tt> internally.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">FlatteningPathIterator</b> implements PathIterator {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FlatteningPathIterator</b> (PathIterator <i class="parameter">src</i>, double <i class="parameter">flatness</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FlatteningPathIterator</b> (PathIterator <i class="parameter">src</i>, double <i class="parameter">flatness</i>, int <i class="parameter">limit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getFlatness</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRecursionLimit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing PathIterator</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">currentSegment</b> (double[ ] <i class="parameter">coords</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">currentSegment</b> (float[ ] <i class="parameter">coords</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getWindingRule</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">next</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->FlatteningPathIterator(PathIterator)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GeneralPath</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2027"></a>
<p>  This class represents an arbitrary path or shape
  that consists of any number of line segments and quadratic and cubic
  Bezier curves.  After creating a <tt class="literal">GeneralPath</tt>
  object, you must define a current point by calling
  <tt class="literal">moveTo()</tt>.  Once an initial current point is
  established, you can create the path by calling
  <tt class="literal">lineTo()</tt>, <tt class="literal">quadTo()</tt>, and
  <tt class="literal">curveTo()</tt>.  These methods draw line segments,
  quadratic curves, and cubic curves from the current point to a new
  point (which becomes the new current point). </p>
<a name="INDEX-2028"></a>
<a name="INDEX-2029"></a>
<a name="INDEX-2030"></a>
<p>  The shape defined by a
  <tt class="literal">GeneralPath</tt> need not be closed, although you may
  close it by calling the <tt class="literal">closePath()</tt> method, which
  appends a line segment between the current point and the initial
  point. Similarly, the path need not be continuous: you can call
  <tt class="literal">moveTo()</tt> at any time to change the current point
  without adding a connecting line or curve to the path.  The
  <tt class="literal">append()</tt> method allows you to add a
  <tt class="literal">Shape</tt> or <tt class="literal">PathIterator</tt> to a
  <tt class="literal">GeneralPath</tt>, optionally connecting it to the
  current point with a straight line.</p>
<p>  The <tt class="literal">GeneralPath()</tt> constructor allows you to specify
  an estimate of the number of path segments that will be added.
  Specifying an accurate estimate can increase efficiency.  It also
  allows you to specify the winding rule to use for the path.  A
  winding rule is used to determine what points are contained within a
  <tt class="literal">GeneralPath</tt>.  The choice of winding rules matters
  only for those paths that intersect themselves.  The two choices are
  <tt class="literal">WIND_EVEN_ODD</tt> and
  <tt class="literal">WIND_NON_ZERO</tt>. </p>
<p>  Note the close correspondence between the path elements (lines,
  quadratic curves, and cubic curves) that may be appended to a
  <tt class="literal">GeneralPath</tt> and those that are enumerated by a
  <tt class="literal">PathIterator</tt> object.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">GeneralPath</b> implements Cloneable, Shape {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GeneralPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GeneralPath</b> (int <i class="parameter">rule</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GeneralPath</b> (Shape <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GeneralPath</b> (int <i class="parameter">rule</i>, int <i class="parameter">initialCapacity</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WIND_EVEN_ODD</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WIND_NON_ZERO</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i> Implements:Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> Implements:Shape synchronized default:Rectangle2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getCurrentPoint</b> ();</td><td align="right"><i> synchronized default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getWindingRule</b> ();</td><td align="right"><i> synchronized default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setWindingRule</b> (int <i class="parameter">rule</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">append</b> (Shape <i class="parameter">s</i>, boolean <i class="parameter">connect</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">append</b> (PathIterator <i class="parameter">pi</i>, boolean <i class="parameter">connect</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">closePath</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape <b class="function">createTransformedShape</b> (AffineTransform <i class="parameter">at</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">curveTo</b> (float <i class="parameter">x1</i>, float <i class="parameter">y1</i>, float <i class="parameter">x2</i>, float <i class="parameter">y2</i>, float <i class="parameter">x3</i>, float <i class="parameter">y3</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">lineTo</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">moveTo</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">quadTo</b> (float <i class="parameter">x1</i>, float <i class="parameter">y1</i>, float <i class="parameter">x2</i>, float <i class="parameter">y2</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">reset</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">transform</b> (AffineTransform <i class="parameter">at</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Point2D <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> synchronized default:Rectangle2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>, double <i class="parameter">flatness</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->GeneralPath(Cloneable,Shape)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>IllegalPathStateException</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>serializable unchecked</i></b></font></td>
</tr>
</table>
<a name="INDEX-2031"></a>
<p>  Signals that a
  path is not in an appropriate state for some requested operation.
  This exception is thrown if you attempt to append a path
  segment to a <tt class="literal">GeneralPath</tt> before performing an
  initial <tt class="literal">moveTo()</tt>.  </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">IllegalPathStateException</b> extends RuntimeException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">IllegalPathStateException</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">IllegalPathStateException</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->RuntimeException-->IllegalPathStateException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Line2D</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2032"></a>
<a name="INDEX-2033"></a>
<p> 
  This abstract class is a <tt class="literal">java.awt.Shape</tt> that
  represents a line segment between two end points.
  <tt class="literal">Line2D</tt> defines various methods for computing the
  distance between a point and a line or line segment and for computing
  the position of a point relative to a line.  Note, however, that the
  <tt class="literal">setLine()</tt> method for specifying the end points of
  the line segment is abstract.  The concrete
  subclasses <tt class="literal">Line2D.Double</tt> and
  <tt class="literal">Line2D.Float</tt> use <tt class="literal">double</tt> and
  <tt class="literal">float</tt> fields to store the coordinates of the
  end points.  They define the <tt class="literal">setLine()</tt> method and
  constructors that accept the line segment end points as
  arguments.
  Since a line does not contain an area, the
  <tt class="literal">contains()</tt> methods of <tt class="literal">Line2D</tt> and
  of its subclasses always return <tt class="literal">false</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">Line2D</b> implements Cloneable, Shape {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">Line2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">linesIntersect</b> (double <i class="parameter">X1</i>, double <i class="parameter">Y1</i>, double <i class="parameter">X2</i>, double <i class="parameter">Y2</i>, double <i class="parameter">X3</i>, double <i class="parameter">Y3</i>, double <i class="parameter">X4</i>, double <i class="parameter">Y4</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">ptLineDist</b> (double <i class="parameter">X1</i>, double <i class="parameter">Y1</i>, double <i class="parameter">X2</i>, double <i class="parameter">Y2</i>, double <i class="parameter">PX</i>, double <i class="parameter">PY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">ptLineDistSq</b> (double <i class="parameter">X1</i>, double <i class="parameter">Y1</i>, double <i class="parameter">X2</i>, double <i class="parameter">Y2</i>, double <i class="parameter">PX</i>, double <i class="parameter">PY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">ptSegDist</b> (double <i class="parameter">X1</i>, double <i class="parameter">Y1</i>, double <i class="parameter">X2</i>, double <i class="parameter">Y2</i>, double <i class="parameter">PX</i>, double <i class="parameter">PY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">ptSegDistSq</b> (double <i class="parameter">X1</i>, double <i class="parameter">Y1</i>, double <i class="parameter">X2</i>, double <i class="parameter">Y2</i>, double <i class="parameter">PX</i>, double <i class="parameter">PY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">relativeCCW</b> (double <i class="parameter">X1</i>, double <i class="parameter">Y1</i>, double <i class="parameter">X2</i>, double <i class="parameter">Y2</i>, double <i class="parameter">PX</i>, double <i class="parameter">PY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i> Implements:Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> Implements:Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Point2D <b class="function">getP1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Point2D <b class="function">getP2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getX1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getX2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getY1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getY2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersectsLine</b> (Line2D <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersectsLine</b> (double <i class="parameter">X1</i>, double <i class="parameter">Y1</i>, double <i class="parameter">X2</i>, double <i class="parameter">Y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ptLineDist</b> (Point2D <i class="parameter">pt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ptLineDist</b> (double <i class="parameter">PX</i>, double <i class="parameter">PY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ptLineDistSq</b> (Point2D <i class="parameter">pt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ptLineDistSq</b> (double <i class="parameter">PX</i>, double <i class="parameter">PY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ptSegDist</b> (Point2D <i class="parameter">pt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ptSegDist</b> (double <i class="parameter">PX</i>, double <i class="parameter">PY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ptSegDistSq</b> (Point2D <i class="parameter">pt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ptSegDistSq</b> (double <i class="parameter">PX</i>, double <i class="parameter">PY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">relativeCCW</b> (Point2D <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">relativeCCW</b> (double <i class="parameter">PX</i>, double <i class="parameter">PY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLine</b> (Line2D <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLine</b> (Point2D <i class="parameter">p1</i>, Point2D <i class="parameter">p2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLine</b> (double <i class="parameter">X1</i>, double <i class="parameter">Y1</i>, double <i class="parameter">X2</i>, double <i class="parameter">Y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Point2D <i class="parameter">p</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>, double <i class="parameter">flatness</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Line2D(Cloneable,Shape)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">Line2D.Double, Line2D.Float</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Line2D.{intersectsLine(), setLine()}, Rectangle2D.intersectsLine()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Line2D.Double</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2034"></a>
<p>  This class is a concrete implementation of <tt class="literal">Line2D</tt> that
  uses
  <tt class="literal">double</tt> fields to store the end points of the line
  segment.  These end points are stored in
  public fields and may be directly set and queried
  by programs.  See <tt class="literal">Line2D</tt> for more information.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">Line2D.Double</b> extends Line2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> (Point2D <i class="parameter">p1</i>, Point2D <i class="parameter">p2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> (double <i class="parameter">X1</i>, double <i class="parameter">Y1</i>, double <i class="parameter">X2</i>, double <i class="parameter">Y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Line2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getP1</b> ();</td><td align="right"><i> default:Point2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getP2</b> ();</td><td align="right"><i> default:Point2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLine</b> (double <i class="parameter">X1</i>, double <i class="parameter">Y1</i>, double <i class="parameter">X2</i>, double <i class="parameter">Y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">x1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">x2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">y1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">y2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Line2D.Float</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2035"></a>
<p>  This class is a concrete implementation of <tt class="literal">Line2D</tt> 
  that uses
  <tt class="literal">float</tt> fields to store the end points of the line
  segment.  These end points are stored in
  public fields and may be directly set and queried
  by programs.  See <tt class="literal">Line2D</tt> for more information.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">Line2D.Float</b> extends Line2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> (Point2D <i class="parameter">p1</i>, Point2D <i class="parameter">p2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> (float <i class="parameter">X1</i>, float <i class="parameter">Y1</i>, float <i class="parameter">X2</i>, float <i class="parameter">Y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLine</b> (float <i class="parameter">X1</i>, float <i class="parameter">Y1</i>, float <i class="parameter">X2</i>, float <i class="parameter">Y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Line2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getP1</b> ();</td><td align="right"><i> default:Point2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getP2</b> ();</td><td align="right"><i> default:Point2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLine</b> (double <i class="parameter">X1</i>, double <i class="parameter">Y1</i>, double <i class="parameter">X2</i>, double <i class="parameter">Y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">x1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">x2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">y1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">y2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>NoninvertibleTransformException</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<a name="INDEX-2036"></a>
<p>  Thrown when the inverse of a noninvertible
  <tt class="literal">AffineTransform</tt> is required.  An example of a
  noninvertible transformation is scaling the X dimension by a factor
  of 0.  This maps all points onto a vertical line, leaving no
  information about transforming those points back to their original
  locations.  This transform is noninvertible because division
  by zero is not possible.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">NoninvertibleTransformException</b> extends Exception {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">NoninvertibleTransformException</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->NoninvertibleTransformException</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span><tt class="literal">AffineTransform.{createInverse(), inverseTransform()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PathIterator</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2037"></a>
<p>  This interface is the basic Java 2D mechanism for defining arbitrary
  shapes.  The most important requirement of the
  <tt class="literal">java.awt.Shape</tt> interface is that every shape be
  able to return a <tt class="literal">PathIterator</tt> that traverses the
  outline of the shape.  The information returned by a
  <tt class="literal">PathIterator</tt> is sufficient to allow the Java 2D
  rendering engine to stroke (draw) or fill arbitrarily complex shapes.</p>
<a name="INDEX-2038"></a>
<a name="INDEX-2039"></a>
<p>  A <tt class="literal">PathIterator</tt> breaks a shape or path down into
  individual path segments.  The <tt class="literal">currentSegment()</tt>
  method returns the current segment.  The <tt class="literal">next()</tt>
  method moves the iterator on to the next segment, and 
  <tt class="literal">isDone()</tt> returns <tt class="literal">true</tt> if
  there are no more segments left to iterate.
  <tt class="literal">getWindingRule()</tt> returns the winding rule for the
  shape--this value is used to determine which points are inside complex
  self-intersecting shapes.  The two possible values are
  <tt class="literal">WIND_EVEN_ODD</tt> and <tt class="literal">WIND_NON_ZERO</tt>.</p>
<a name="INDEX-2040"></a>
<p>
<tt class="literal">currentSegment()</tt> is the most important method of
  <tt class="literal">PathIterator</tt>.  Its return value, one of the five
  integer constants whose names begin with <tt class="literal">SEG</tt>,
  specifies the type of the current segment.
  <tt class="literal">currentSegment()</tt> returns the coordinates of the
  current segment in the <tt class="literal">float</tt> or
  <tt class="literal">double</tt> array passed as an argument.  This array
  must have at least six elements.  The segment types and their meanings
  are as follows:</p>

  <dl>
<dt>
<b><tt class="literal">SEG_MOVETO</tt></b>
</dt>
<dd>
<p>	  Defines a path starting point rather
	  than an actual segment.  The current point of the path is set
	  to the X,Y point specified in the first two elements of the
	  array.  This is 

the first segment type of all paths.  Paths
	  may be disjoint, and may have more than one
	  <tt class="literal">SEG_MOVETO</tt> segment.
	</p>
</dd>
<dt>
<b><tt class="literal">SEG_LINETO</tt></b>
</dt>
<dd>
<p>	  Defines a line between the current point and
	  the X,Y end point stored in the first two elements of the
	  array.  The end point of the line segment becomes the new
	  current point.
	</p>
</dd>
<dt>
<b><tt class="literal">SEG_QUADTO</tt></b>
</dt>
<dd>
<p>	  Defines a quadratic Bezier curve between the
	  current point and an end point stored in the third and fourth
	  elements of the array, using a control point stored in the first
	  and second elements of the array.  The end point of the curve
	  becomes the current point.
	</p>
</dd>
<dt>
<b><tt class="literal">SEG_CUBICTO</tt></b>
</dt>
<dd>
<p>	  Defines a cubic Bezier curve between the
	  current point and an end point stored in the fifth and sixth
	  elements of the array, using two control points stored in
	  the first through fourth elements of the array.  The end point of
	  the curve becomes the current point.
	</p>
</dd>
<dt>
<b><tt class="literal">SEG_CLOSE</tt></b>
</dt>
<dd>
<p>	  Specifies that the path should be closed by
	  drawing a straight line from the current point back to the
	  point specified by the most recent
	  <tt class="literal">SEG_MOVETO</tt> segment.  No values are stored
	  in the array for this segment type.
	</p>
</dd>
</dl>
<a name="INDEX-2041"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">PathIterator</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SEG_CLOSE</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SEG_CUBICTO</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SEG_LINETO</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SEG_MOVETO</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SEG_QUADTO</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WIND_EVEN_ODD</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WIND_NON_ZERO</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">currentSegment</b> (float[ ] <i class="parameter">coords</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">currentSegment</b> (double[ ] <i class="parameter">coords</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getWindingRule</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isDone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">next</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">FlatteningPathIterator</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">FlatteningPathIterator.FlatteningPathIterator(), GeneralPath.append()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Point2D</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2042"></a>
<p>  This abstract class represents a point in two-dimensional space.  It
  has methods for getting and setting the X and Y coordinates of the
  point as <tt class="literal">double</tt> values and 
  for computing the distance between points.</p>
<p>
<tt class="literal">Point2D</tt> is abstract; it does not store actual
  coordinates and cannot be instantiated.  You must use one of its
  concrete subclasses instead. <tt class="literal">Point2D.Double</tt> stores the
  coordinates of a point using <tt class="literal">double</tt> fields, while
  <tt class="literal">Point2D.Float</tt> stores the coordinates 
  using <tt class="literal">float</tt> fields.  Finally,
  <tt class="literal">java.awt.Point</tt> stores the coordinates using
  <tt class="literal">int</tt> fields.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">Point2D</b> implements Cloneable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">Point2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">distance</b> (double <i class="parameter">X1</i>, double <i class="parameter">Y1</i>, double <i class="parameter">X2</i>, double <i class="parameter">Y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">distanceSq</b> (double <i class="parameter">X1</i>, double <i class="parameter">Y1</i>, double <i class="parameter">X2</i>, double <i class="parameter">Y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getX</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getY</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">distance</b> (Point2D <i class="parameter">pt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">distance</b> (double <i class="parameter">PX</i>, double <i class="parameter">PY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">distanceSq</b> (Point2D <i class="parameter">pt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">distanceSq</b> (double <i class="parameter">PX</i>, double <i class="parameter">PY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLocation</b> (Point2D <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLocation</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Point2D(Cloneable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">Point, Point2D.Double, Point2D.Float</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Point2D.Double</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2043"></a>
<p>  This class is a concrete implementation of <tt class="literal">Point2D</tt> 
  that stores the X
  and Y coordinates of a point using <tt class="literal">double</tt> fields.
  These fields are public and can be
  queried and set directly, without using accessor methods.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">Point2D.Double</b> extends Point2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Point2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLocation</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">x</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">y</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Point2D.Float</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2044"></a>
<p>  This class is a concrete implementation of <tt class="literal">Point2D</tt> 
  that stores the X
  and Y coordinates of a point using <tt class="literal">float</tt> fields.
  These fields are public and can be
  queried and set directly, without using accessor methods.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">Point2D.Float</b> extends Point2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLocation</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Point2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLocation</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">x</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">y</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>QuadCurve2D</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2045"></a>
<p> 
  This abstract class is a <tt class="literal">java.awt.Shape</tt> that
  represents a smooth quadratic Bezier curve (or spline) between end points
  <tt class="literal">p1</tt> (<tt class="literal">x1</tt>, <tt class="literal">y1</tt>)
  and <tt class="literal">p2</tt> (<tt class="literal">x2</tt>, <tt class="literal">y2</tt>).
  The precise shape of the curve is defined by a control point, 
  <tt class="literal">cp</tt>
  (<tt class="literal">ctrlx</tt>, <tt class="literal">ctrly</tt>).  
  Note that the curve does not
  pass through <tt class="literal">cp</tt> but that it does remain 
  inside the triangle defined by
  <tt class="literal">p1</tt>, <tt class="literal">cp</tt>, and <tt class="literal">p2</tt>.</p>
<a name="INDEX-2046"></a>
<p>
<tt class="literal">QuadCurve2D</tt> does not itself enclose an area, so
  the <tt class="literal">contains()</tt> methods test whether a point or
  rectangle is within the area defined by the curve and the straight
  line between its end points.</p>
<p>
<tt class="literal">QuadCurve2D</tt> is an abstract class and cannot be
  instantiated.  <tt class="literal">QuadCurve2D.Float</tt> and
  <tt class="literal">QuadCurve2D.Double</tt> are concrete subclasses that
  use <tt class="literal">float</tt> and <tt class="literal">double</tt> fields to
  store the end points and control point.  See also
  <tt class="literal">CubicCurve2D</tt>, which is a cubic Bezier curve that
  uses two control points.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">QuadCurve2D</b> implements Cloneable, Shape {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">QuadCurve2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">getFlatness</b> (double[ ] <i class="parameter">coords</i>, int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">getFlatness</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">ctrlx</i>, double <i class="parameter">ctrly</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">getFlatnessSq</b> (double[ ] <i class="parameter">coords</i>, int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">getFlatnessSq</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">ctrlx</i>, double <i class="parameter">ctrly</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">solveQuadratic</b> (double[ ] <i class="parameter">eqn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">subdivide</b> (QuadCurve2D <i class="parameter">src</i>, QuadCurve2D <i class="parameter">left</i>, QuadCurve2D <i class="parameter">right</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">subdivide</b> (double[ ] <i class="parameter">src</i>, int <i class="parameter">srcoff</i>, double[ ] <i class="parameter">left</i>, int <i class="parameter">leftoff</i>, double[ ] <i class="parameter">right</i>, int <i class="parameter">rightoff</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i> Implements:Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> Implements:Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Point2D <b class="function">getCtrlPt</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getCtrlX</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getCtrlY</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getFlatness</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getFlatnessSq</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Point2D <b class="function">getP1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Point2D <b class="function">getP2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getX1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getX2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getY1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getY2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (QuadCurve2D <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (double[ ] <i class="parameter">coords</i>, int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (Point2D[ ] <i class="parameter">pts</i>, int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (Point2D <i class="parameter">p1</i>, Point2D <i class="parameter">cp</i>, Point2D <i class="parameter">p2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setCurve</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">ctrlx</i>, double <i class="parameter">ctrly</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">subdivide</b> (QuadCurve2D <i class="parameter">left</i>, QuadCurve2D <i class="parameter">right</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Point2D <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>, double <i class="parameter">flatness</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->QuadCurve2D(Cloneable,Shape)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">QuadCurve2D.Double, QuadCurve2D.Float</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">QuadCurve2D.{setCurve(), subdivide()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>QuadCurve2D.Double</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2047"></a>
<p> 
  This class is a concrete implementation of
  <tt class="literal">QuadCurve2D</tt> that uses <tt class="literal">double</tt>
  fields to store the end points and control point of the curve.  The X and Y coordinates of these three points are stored in public
  fields and may be used directly by Java programs.
  See <tt class="literal">QuadCurve2D</tt> for more information.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">QuadCurve2D.Double</b> extends QuadCurve2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">ctrlx</i>, double <i class="parameter">ctrly</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding QuadCurve2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getCtrlPt</b> ();</td><td align="right"><i> default:Point2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCtrlX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCtrlY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getP1</b> ();</td><td align="right"><i> default:Point2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getP2</b> ();</td><td align="right"><i> default:Point2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">ctrlx</i>, double <i class="parameter">ctrly</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ctrlx</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">ctrly</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">x1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">x2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">y1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">y2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>QuadCurve2D.Float</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2048"></a>
<p> 
  This class is a concrete implementation of
  <tt class="literal">QuadCurve2D</tt> that uses <tt class="literal">float</tt>
  fields to store the end points and control point of the curve.  The X and Y coordinates of these three points are stored in public
  fields and may be used directly by Java programs.
  See <tt class="literal">QuadCurve2D</tt> for more information.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">QuadCurve2D.Float</b> extends QuadCurve2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> (float <i class="parameter">x1</i>, float <i class="parameter">y1</i>, float <i class="parameter">ctrlx</i>, float <i class="parameter">ctrly</i>, float <i class="parameter">x2</i>, float <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (float <i class="parameter">x1</i>, float <i class="parameter">y1</i>, float <i class="parameter">ctrlx</i>, float <i class="parameter">ctrly</i>, float <i class="parameter">x2</i>, float <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding QuadCurve2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getCtrlPt</b> ();</td><td align="right"><i> default:Point2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCtrlX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCtrlY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getP1</b> ();</td><td align="right"><i> default:Point2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point2D <b class="function">getP2</b> ();</td><td align="right"><i> default:Point2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY1</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY2</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurve</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">ctrlx</i>, double <i class="parameter">ctrly</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">ctrlx</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">ctrly</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">x1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">x2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">y1</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">y2</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Rectangle2D</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2049"></a>
<p>  This abstract <tt class="literal">java.awt.Shape</tt> represents a rectangle
  specified by the location of its upper-left corner, its width, and its
  height.  Various methods compute intersections and unions of
  rectangles, test whether a rectangle contains a point or contains
  another rectangle, and test whether a rectangle intersects a line or
  another rectangle.  The <tt class="literal">outcode()</tt> method determines
  the spatial relationship between a point and a rectangle.  The return
  value is the sum of the <tt class="literal">OUT_</tt> constants that specify
  which edges of the rectangle a point is outside of.  A value of 0
  means that the point is inside the rectangle, of course.  Other
  interesting methods include <tt class="literal">setFrameFromDiagonal()</tt>
  and <tt class="literal">setFrameFromCenter()</tt>, inherited from
  <tt class="literal">RectangularShape</tt>. </p>
<p>
<tt class="literal">Rectangle2D</tt> is an abstract class that does not
  define any fields to store the size and position of the rectangle and
  cannot be instantiated.  Choose a concrete subclass based on the type
  of data fields you desire: <tt class="literal">Rectangle2D.Double</tt> uses
  <tt class="literal">double</tt> fields, <tt class="literal">Rectangle2D.Float</tt>
  uses <tt class="literal">float</tt> fields, and
  <tt class="literal">java.awt.Rectangle</tt> uses <tt class="literal">int</tt>
  fields.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">Rectangle2D</b> extends RectangularShape {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">Rectangle2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">OUT_BOTTOM</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">OUT_LEFT</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">OUT_RIGHT</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">OUT_TOP</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">intersect</b> (Rectangle2D <i class="parameter">src1</i>, Rectangle2D <i class="parameter">src2</i>, Rectangle2D <i class="parameter">dest</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">union</b> (Rectangle2D <i class="parameter">src1</i>, Rectangle2D <i class="parameter">src2</i>, Rectangle2D <i class="parameter">dest</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (Point2D <i class="parameter">pt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (double <i class="parameter">newx</i>, double <i class="parameter">newy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Rectangle2D <b class="function">createIntersection</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Rectangle2D <b class="function">createUnion</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersectsLine</b> (Line2D <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersectsLine</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">outcode</b> (Point2D <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">outcode</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRect</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setRect</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RectangularShape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>, double <i class="parameter">flatness</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFrame</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->RectangularShape(Cloneable,Shape)-->Rectangle2D</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">Rectangle, Rectangle2D.Double, Rectangle2D.Float</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Rectangle2D.Double</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2050"></a>
<p>  This concrete subclass of <tt class="literal">Rectangle2D</tt> stores the
  position and size of the rectangle in fields of type
  <tt class="literal">double</tt>.  These fields are declared
  public and can be set and queried directly without
  relying on accessor methods.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">Rectangle2D.Double</b> extends Rectangle2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Rectangle2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">createIntersection</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">createUnion</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">outcode</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRect</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRect</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RectangularShape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getHeight</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getWidth</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">height</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">width</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">x</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">y</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Rectangle2D.Float</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<p>  This concrete subclass of <tt class="literal">Rectangle2D</tt> stores the
  position and size of the rectangle in fields of type
  <tt class="literal">float</tt>.  These fields are declared
  public and can be set and queried directly without
  relying on accessor methods.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">Rectangle2D.Float</b> extends Rectangle2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, float <i class="parameter">w</i>, float <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRect</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, float <i class="parameter">w</i>, float <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Rectangle2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">createIntersection</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">createUnion</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">outcode</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRect</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRect</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RectangularShape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getHeight</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getWidth</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">height</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">width</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">x</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">y</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RectangularShape</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2051"></a>
<p>  This abstract class is the base class for several
  <tt class="literal">java.awt.Shape</tt> implementations that have a
  rectangular outline or bounding box.  Its methods allow you to set and
  query the size and position of the bounding rectangle in several
  interesting ways.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">RectangularShape</b> implements Cloneable, Shape {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">RectangularShape</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i> Implements:Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> Implements:Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCenterX</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getCenterY</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isEmpty</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getFrame</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFrame</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFrame</b> (Point2D <i class="parameter">loc</i>, Dimension2D <i class="parameter">size</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setFrame</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getHeight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getMaxX</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getMaxY</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getMinX</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getMinY</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getWidth</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getX</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getY</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFrameFromCenter</b> (Point2D <i class="parameter">center</i>, Point2D <i class="parameter">corner</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFrameFromCenter</b> (double <i class="parameter">centerX</i>, double <i class="parameter">centerY</i>, double <i class="parameter">cornerX</i>, double <i class="parameter">cornerY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFrameFromDiagonal</b> (Point2D <i class="parameter">p1</i>, Point2D <i class="parameter">p2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFrameFromDiagonal</b> (double <i class="parameter">x1</i>, double <i class="parameter">y1</i>, double <i class="parameter">x2</i>, double <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Point2D <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>, double <i class="parameter">flatness</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">intersects</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->RectangularShape(Cloneable,Shape)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">Arc2D, Ellipse2D, Rectangle2D, RoundRectangle2D</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RoundRectangle2D</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2052"></a>
<p>  This abstract <tt class="literal">java.awt.Shape</tt> represents a rectangle
  with rounded corners, specified by the position of the upper-left
  corner (before rounding), the width and height of the rectangle, and
  the width and height of the arc used to round the corners.
  <tt class="literal">RoundRectangle2D</tt> is abstract and may not be
  instantiated.  Use the concrete subclasses
  <tt class="literal">RoundRectangle2D.Double</tt> and
  <tt class="literal">RoundRectangle2D.Float</tt>, depending on the precision
  you desire for the rectangle coordinates and dimensions.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">RoundRectangle2D</b> extends RectangularShape {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">RoundRectangle2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getArcHeight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract double <b class="function">getArcWidth</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRoundRect</b> (RoundRectangle2D <i class="parameter">rr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setRoundRect</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>, double <i class="parameter">arcWidth</i>, double <i class="parameter">arcHeight</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RectangularShape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PathIterator <b class="function">getPathIterator</b> (AffineTransform <i class="parameter">at</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFrame</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->RectangularShape(Cloneable,Shape)-->RoundRectangle2D</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">RoundRectangle2D.Double, RoundRectangle2D.Float</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">RoundRectangle2D.setRoundRect(), RoundRectangle2D.Double.setRoundRect(), RoundRectangle2D.Float.setRoundRect()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RoundRectangle2D.Double</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2053"></a>
<p>  This concrete subclass of <tt class="literal">RoundRectangle2D</tt> stores
  the position and size of the rectangle and the size of the rounded
  corners in fields of type <tt class="literal">double</tt>.  These
  fields are declared public and can be set and
  queried directly without relying on accessor methods.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">RoundRectangle2D.Double</b> extends RoundRectangle2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Double</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>, double <i class="parameter">arcw</i>, double <i class="parameter">arch</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RoundRectangle2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getArcHeight</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getArcWidth</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRoundRect</b> (RoundRectangle2D <i class="parameter">rr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRoundRect</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>, double <i class="parameter">arcw</i>, double <i class="parameter">arch</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RectangularShape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Double</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getHeight</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getWidth</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">archeight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">arcwidth</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">height</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">width</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">x</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">y</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RoundRectangle2D.Float</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.geom</b></font></td><td align="right"><font size="+1"><b><i>cloneable shape</i></b></font></td>
</tr>
</table>
<a name="INDEX-2054"></a>
<p>  This concrete subclass of <tt class="literal">RoundRectangle2D</tt> stores
  the position and size of the rectangle and the size of the rounded
  corners in fields of type <tt class="literal">float</tt>.  These
  fields are declared public and can be set and
  queried directly without relying on accessor methods.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">RoundRectangle2D.Float</b> extends RoundRectangle2D {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Float</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, float <i class="parameter">w</i>, float <i class="parameter">h</i>, float <i class="parameter">arcw</i>, float <i class="parameter">arch</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRoundRect</b> (float <i class="parameter">x</i>, float <i class="parameter">y</i>, float <i class="parameter">w</i>, float <i class="parameter">h</i>, float <i class="parameter">arcw</i>, float <i class="parameter">arch</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RoundRectangle2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getArcHeight</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getArcWidth</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRoundRect</b> (RoundRectangle2D <i class="parameter">rr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRoundRect</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>, double <i class="parameter">arcw</i>, double <i class="parameter">arch</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RectangularShape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getHeight</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getWidth</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">archeight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">arcwidth</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">height</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">width</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">x</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">y</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<a name="INDEX-2055"></a>
<a name="INDEX-2056"></a>
<a name="INDEX-2057"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch15_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch15_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch17_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch17_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">15.1. The java.awt.font Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">17. The java.awt.im Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
