<html>
<head>
<title>Applet Security (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Applet Security">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch07_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch07_02.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch07_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch07_01.htm">Chapter 7: Applets</a></td><td align="right" valign="top" width="172"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h2 class="sect1">7.3. Applet Security</h2>

<p>One of the most important features of Java is its security model.
      It allows untrusted code, such as applets downloaded from
      arbitrary web sites, to be run in a restricted environment that
      prevents that code from doing anything malicious, like deleting
      files or sending fake email.  The Java security model has evolved
      considerably between Java 1.0 and Java 1.2 and is covered in
      detail in <em class="citetitle">Java in a Nutshell</em>.  </p>

<p>To write applets, you don't need to understand the entire Java
      security model.  What you do need to know is that when your applet
      is run as untrusted code, it is subject to quite a few
      security restrictions that limit the kinds of things it can do.
      This section describes those security restrictions and also
      describes how you can attach a digital signature to applets, so
      that users can treat them as trusted code and run them in a less
      restrictive environment.</p>

<p>The following list details the security restrictions that are
      typically imposed on untrusted applet code.  Different web
      browsers and applet viewers may impose slightly different security
      restrictions and may allow the end user to customize or
      selectively relax the restrictions.  In general, however, you
      should assume that your untrusted applet are restricted in the
      following ways:</p>

<a name="INDEX-1253"></a>
<a name="INDEX-1254"></a>
<ul>
<li>

<p>Untrusted code cannot read from or write to the local
	  filesystem.  This means that untrusted code cannot:</p>

	  <ul>
<li>

<p>Read files</p>
</li>
<li>

<p>List directories</p>
</li>
<li>

<p>Check for the existence of files</p>
</li>
<li>

<p>Obtain the size or modification date of files</p>
</li>
<li>

<p>Obtain the read and write permissions of a file</p>
</li>
<li>

<p>Test whether a filename is a file or directory</p>
</li>
<li>

<p>Write files</p>
</li>
<li>

<p>Delete files</p>
</li>
<li>

<p>Create directories</p>
</li>
<li>

<p>Rename files</p>
</li>
<li>

<p>Read or write from <tt class="literal">FileDescriptor</tt> objects</p>
</li>
</ul>
</li>
<li>

<p>Untrusted code cannot perform networking operations, except in
	  certain restricted ways.  Untrusted code cannot:</p>
	  <ul>
<li>

<p>Create a network connection to any computer other than the
		one from which the code was itself loaded</p>
</li>
<li>

<p>Listen for network connections on any of the privileged
		ports with numbers less than or equal to 1,024</p>
</li>
<li>

<p>Accept network connections on ports less than or equal to
		1,024 or from any host other than the one from which the
		code itself was loaded</p>
</li>
<li>

<p>Use multicast sockets</p>
</li>
<li>

<p>Create or register a <tt class="literal">SocketImplFactory</tt>,
		<tt class="literal">URLStreamHandlerFactory</tt>, or
		<tt class="literal">ContentHandlerFactory</tt>
</p>
</li>
</ul>
</li>
<li>

<p>Untrusted code cannot make use of certain system
	  facilities.  It cannot:</p>
	  <ul>
<li>

<p>Exit the Java interpreter by calling <tt class="literal">System.exit()</tt>
		or <tt class="literal">Runtime.exit()</tt>
</p>
</li>
<li>

<p>Spawn new processes by calling any of the
		<tt class="literal">Runtime.exec()</tt> methods</p>
</li>
<li>

<p>Dynamically load native code libraries with the
		<tt class="literal">load()</tt> or <tt class="literal">loadLibrary()</tt> methods of
		<tt class="literal">Runtime</tt> or <tt class="literal">System</tt>
</p>
</li>
</ul>
</li>
<li>

<p>Untrusted code cannot make use of certain AWT facilities.
	  One major restriction is that all windows created by
	  untrusted code display a prominent visual indication
	  that they have been created by untrusted code and are
	  "insecure." 
	  This is to prevent 

untrusted code from spoofing
	  the on-screen appearance of trusted code.  Additionally,
	  untrusted code cannot:</p>
	  <ul>
<li>

<p>Initiate a print job</p>
</li>
<li>

<p>Access the system clipboard</p>
</li>
<li>

<p>Access the system event queue</p>
</li>
</ul>
</li>
<li>

<p>Untrusted code has restricted access to system properties.
	  It cannot call <tt class="literal">System.getProperties()</tt>, so it cannot
	  modify or insert properties into the system properties list.
	  It can call <tt class="literal">System.getProperty()</tt> to read individual
	  properties but can read only system properties to which it
	  has been explicitly granted access.  By default,
	  <em class="emphasis">appletviewer</em> grants access to only the following 10
	  properties.  Note that <tt class="literal">user.home</tt> and
	  <tt class="literal">user.dir</tt> are excluded:</p>
          <ul>
<li>

<p>
<tt class="literal">java.version</tt>
</p>
</li>
<li>

<p>
<tt class="literal">java.class.version</tt>
</p>
</li>
<li>

<p>
<tt class="literal">java.vendor</tt>
</p>
</li>
<li>

<p>
<tt class="literal">java.vendor.url</tt>
</p>
</li>
<li>

<p>
<tt class="literal">os.name</tt>
</p>
</li>
<li>

<p>
<tt class="literal">os.version</tt>
</p>
</li>
<li>

<p>
<tt class="literal">os.arch</tt>
</p>
</li>
<li>

<p>
<tt class="literal">file.separator</tt>
</p>
</li>
<li>

<p>
<tt class="literal">path.separator</tt>
</p>
</li>
<li>

<p>
<tt class="literal">line.separator</tt>
</p>
</li>
</ul>
</li>
<li>

<p>Untrusted code cannot create or access threads or
	  thread groups outside of the thread group in which the
	  untrusted code is running.</p>
</li>
<li>

<p>Untrusted code has restrictions on the classes it can load
	  and define.  It cannot:</p>
	  <ul>
<li>

<p>Explicitly load classes from the <tt class="literal">sun.*</tt> packages</p>
</li>
<li>

<p>Define classes in any of the <tt class="literal">java.*</tt> or 
		<tt class="literal">sun.*</tt>
		packages</p>
</li>
<li>

<p>Create a <tt class="literal">ClassLoader</tt> object or call any
		<tt class="literal">ClassLoader</tt> methods</p>
</li>
</ul>
</li>
<li>

<p>Untrusted code cannot use the <tt class="literal">java.lang.Class</tt>
	  reflection methods to obtain information about nonpublic
	  members of a class, unless the class was loaded from the
	  same host as the untrusted code.</p>
</li>

<li>

<p>Untrusted code has restrictions on its use of the
	  <tt class="literal">java.security</tt> package.  It cannot:</p>

	  <ul>
<li>

<p>Manipulate security identities in any way</p>
</li>
<li>

<p>Set or read security properties</p>
</li>
<li>

<p>List, look up, insert, or remove security providers</p>
</li>
<li>

<p>Finally, to prevent untrusted code from circumventing all of
		these restrictions, it is not allowed to create or register a
		<tt class="literal">SecurityManager</tt> object.</p>
</li>
</ul>
</li>
</ul>
<a name="INDEX-1255"></a>

<h3 class="sect2">7.3.1. Local Applets</h3>

<p>When an applet is loaded from the local filesystem, instead of
	through a network protocol, web browsers and applet viewers may
	relax some, or even many, of the preceding restrictions.  The reason
	for this is that local applets are assumed to be more
	trustworthy than anonymous applets from the network.</p>

<a name="INDEX-1256"></a>

<p>Intermediate applet security policies are also possible.  For
	example, an applet viewer can be written so that it places
	fewer restrictions on applets loaded from an internal corporate
	network than on those loaded from the Internet.</p>

<h3 class="sect2">7.3.2. Signed Applets</h3>

<p>Java 1.1 added the ability to attach a digital signature to a JAR
	file that contains an applet.  This signature securely identifies
	the author or origin of an applet.  If you trust the author or
	originating organization, you can configure your web browser or
	applet viewer to run applets bearing that signature as trusted
	code, rather than as untrusted code.  Such an applet runs
	without the onerous security restrictions placed on untrusted
	applets.  Java 1.2 platform actually allows the security policy to be
	customized based on the origin of an applet.  This means that an
	end user or system administrator may define multiple levels of
	trust, allowing fully trusted applets to run with all the
	privileges of a standalone application, while
	partially trusted applets run with a reduced list of security
	restrictions.</p>

<a name="INDEX-1257"></a>
<a name="INDEX-1258"></a>
<a name="INDEX-1259"></a>
<a name="INDEX-1260"></a>
<a name="INDEX-1261"></a>
<a name="INDEX-1262"></a>
<a name="INDEX-1263"></a>

<p>The process of attaching a digital signature to an applet's JAR
	file is platform dependent.  In Java 1.1, you use the
	<em class="emphasis">javakey</em> program.  In Java 1.2, this program
	has been superseded by <em class="emphasis">jarsigner</em>.  Netscape
	and Microsoft also provide their own digital signature programs
	that are customized for use with their browsers.  </p>

<p>The process of telling your web browser or applet viewer which
	digital signatures to trust is also vendor dependent, of course.
	In Java 1.1, you use <em class="emphasis">javakey</em> to specify
	which signatures are trusted.  In Java 1.2, you use a different
	tool, <em class="emphasis">policytool</em>, to specify trusted 
	signatures and the security policies 
	associated with them.  See <em class="emphasis">Java in a
	Nutshell</em> for further details.</p>

<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch07_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch07_02.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">7.2. Including Applets in HTML Files</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">Part 2. API Quick Reference</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
