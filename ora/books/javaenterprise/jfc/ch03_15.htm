<html>
<head>
<title>Simple Dialogs (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Simple Dialogs">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch03_14.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch03_14.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch03_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch03_01.htm">Chapter 3: Swing

Programming Topics</a></td><td align="right" valign="top" width="172"><a href="ch03_16.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch03_16.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h2 class="sect1">3.15. Simple Dialogs</h2>
<a name="INDEX-575"></a>
<a name="INDEX-576"></a>

<p>GUIs often use dialog boxes to handle simple
      interactions with the user.  
      <tt class="literal">javax.swing.JOptionPane</tt> is a Swing component that is
      designed to serve as a highly configurable body of a dialog box.  
      Instead of using the <tt class="literal">JOptionPane</tt> directly, however, 
      most Swing programs use one or more of the many static methods
      defined by <tt class="literal">JOptionPane</tt>.  These methods
      make it quite easy to implement simple dialog-based interactions.  </p>

<a name="INDEX-577"></a>

<p>If you take a look at the API for <tt class="literal">JOptionPane</tt>,
	you'll see that the class 
	defines a group of static methods whose names begin with
	<tt class="literal">show</tt> and another whose names begin with
	<tt class="literal">showInternal</tt>.  The <tt class="literal">show</tt>
	methods display simple dialog boxes within <tt class="literal">JDialog</tt>
	windows, while the <tt class="literal">showInternal</tt> 
	methods display the same dialog boxes inside 
	<tt class="literal">JInternalFrame</tt> windows.  These static
	methods are further broken down by the type of dialog they
	display.  There are several versions of
	<tt class="literal">showMessageDialog()</tt>,
	<tt class="literal">showConfirmDialog()</tt>, and
	<tt class="literal">showInputDialog()</tt>, as well as
	<tt class="literal">showInternal</tt> versions of the same methods.
	We'll consider these three types of dialogs--message, confirm,
	and input--in the sections that follow.</p>

<a name="INDEX-578"></a>
<a name="INDEX-579"></a>
<a name="INDEX-580"></a>
<a name="INDEX-581"></a>

<h3 class="sect2">3.15.1. Message Dialogs</h3>
<a name="INDEX-582"></a>

<p>Message dialogs are used to display important information to 
	users in a way that is difficult or impossible for them to miss.
	For example, you might use a message dialog to tell the user
	that a requested file was not found.  To display this message
	with a <tt class="literal">JOptionPane</tt>, you can use code like
	this:
</p>

<blockquote>
<pre class="programlisting">JOptionPane.showMessageDialog(mainpanel, "The file you requested, " + 
                              filename + ", was not found. Please try again");</pre>
</blockquote>

<p>
	This code produces the dialog shown in 
	<a href="#jfcnut-ch-3-fig-messagedlg">Figure 3-4</a>.  The dialog remains
	visible until the user dismisses it by clicking <b class="emphasis-bold">OK</b>. </p>
<a name="jfcnut-ch-3-fig-messagedlg"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.0304.gif" webstripperlinkwas="figs/jfcn.0304.gif"></div>
<h4 class="objtitle">Figure 3-4. A JOptionPane message dialog</h4>
<a name="INDEX-583"></a>

<p>The first argument to
	<tt class="literal">showMessageDialog()</tt> is the component
	over which the dialog is to appear.  You typically specify the
	main window or panel of your application.  If you specify
	<tt class="literal">null</tt>, then the dialog will simply be centered
	on the screen.  The second argument
	is obviously the
	message to be displayed.  If you look at the API again, however,
	you'll notice that the <em class="replaceable">message</em>
	argument to this and other <tt class="literal">JOptionPane</tt>
	methods is defined as an <tt class="literal">Object</tt>, not
	a <tt class="literal">String</tt>.  This means that you are not
	limited to textual messages.  If you pass a
	<tt class="literal">Component</tt> or an <tt class="literal">Icon</tt>, the
	<tt class="literal">JOptionPane</tt> displays it as the message.
	If you pass some other kind of object,
	<tt class="literal">JOptionPane</tt> attempts to convert it to a
	string by calling its <tt class="literal">toString()</tt> method.
	You can even pass an array of objects as the
	<em class="replaceable">message</em> argument.  When you pass more
	than one object, the objects are displayed top to bottom in the
	resulting dialog.  So, to display a multiline
	message, for example, you can just pass in an array of
	<tt class="literal">String</tt> objects, instead of a single long
	<tt class="literal">String</tt>.  </p>

<p>The <tt class="literal">showMessageDialog()</tt> function has variants
	that take more arguments.  The <em class="replaceable">title</em>
	argument specifies the text to appear in the titlebar of the
	dialog.  The <em class="replaceable">messageType</em> argument
	specifies the general type of the message.  Legal values are the
	<tt class="literal">JOptionPane</tt> constants that end with
	<tt class="literal">_MESSAGE</tt>.  The values you are most likely to
	use are <tt class="literal">INFORMATION_MESSAGE</tt>,
	<tt class="literal">WARNING_MESSAGE</tt>, and
	<tt class="literal">ERROR_MESSAGE</tt>.  Specifying a message type
	implicitly specifies the icon that appears in the dialog box.
	If you don't like the default icons, however, there is a version
	of <tt class="literal">showMessageDialog()</tt> that lets you specify
	your own <em class="replaceable">icon</em> to display.</p>

<a name="INDEX-584"></a>


<h3 class="sect2">3.15.2. Confirm Dialogs</h3>
<a name="INDEX-585"></a>

<p>You can use <tt class="literal">JOptionPane.showConfirmDialog()</tt> or
	<tt class="literal">JOptionPane.showInternalConfirmDialog()</tt> when
	you want to ask the user a simple question that requires a
	<b class="emphasis-bold">Yes</b> or
	<b class="emphasis-bold">No</b> 
	(or perhaps <b class="emphasis-bold">Cancel</b>) answer.  
	For example, you can
	use one of these methods to present the dialog shown in 
	<a href="#jfcnut-ch-3-fig-confirmdlg">Figure 3-5</a>.</p>

<a name="INDEX-586"></a>
<a name="INDEX-587"></a>
<a name="jfcnut-ch-3-fig-confirmdlg"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.0305.gif" webstripperlinkwas="figs/jfcn.0305.gif"></div>
<h4 class="objtitle">Figure 3-5. A JOptionPane confirm dialog</h4>

<p>The arguments to <tt class="literal">showConfirmDialog()</tt> are much
	like the arguments to <tt class="literal">showMessageDialog()</tt>,
	with the addition of the <em class="replaceable">optionType</em>
	argument.  This argument specifies the set of buttons that
	appears at the bottom of the dialog.  Legal values are
	<tt class="literal">OK_CANCEL_OPTION</tt>,
	<tt class="literal">YES_NO_OPTION</tt>, and
	<tt class="literal">YES_NO_CANCEL_OPTION</tt>.</p>

<a name="INDEX-588"></a>
<a name="INDEX-589"></a>
<a name="INDEX-590"></a>
<a name="INDEX-591"></a>

<p>A confirm dialog asks the user a question.  The return value of
	<tt class="literal">showOptionDialog()</tt> or
	<tt class="literal">showInternalOptionDialog()</tt> is an integer that
	represents the user's answer in terms of the button the user
	clicked to dismiss the dialog.  The possible values are
	<tt class="literal">OK_OPTION</tt>, <tt class="literal">YES_OPTION</tt>,
	<tt class="literal">NO_OPTION</tt>, <tt class="literal">CANCEL_OPTION</tt>,
	and <tt class="literal">CLOSED_OPTION</tt>.  This last value is
	returned if the user did not click any of the dialog buttons but
	instead dismissed the dialog by closing the window.  Here is
	some simple code that asks a question with a confirm dialog
	(note the use of a string array for the
	<em class="replaceable">message</em> argument):
</p>

<blockquote>
<pre class="programlisting">int response = JOptionPane.showConfirmDialog(mainpanel, new String[] {
       /* first line of the message */       "There are unsaved files.",
       /* second line of message    */       "Save them before quitting?"},
       /* dialog title              */       "Save Before Quitting?",
       /* what buttons to display   */       JOptionPane.YES_NO_CANCEL_OPTION,
       /* icon type to display      */       JOptionPane.WARNING_MESSAGE);
switch(response) {
  case JOptionPane.YES_OPTION:     saveAndQuit();
  case JOptionPane.NO_OPTION:      quitWithoutSaving();
  case JOptionPane.CANCEL_OPTION:
  case JOptionPane.CLOSED_OPTION:  break;  // Don't quit!
}</pre>
</blockquote>



<a name="INDEX-592"></a>


<h3 class="sect2">3.15.3. Input Dialogs</h3>
<a name="INDEX-593"></a>

<p>The <tt class="literal">showInputDialog()</tt> and
	<tt class="literal">showInternalInputDialog()</tt> methods 
	are designed to ask for input that is more complex than a yes-or-no 
	answer.  The simple versions of <tt class="literal">showInputDialog()</tt>
	support asking a question like "What is your name?" and letting
	the user type a response in a text input area:
</p>

<blockquote>
<pre class="programlisting">String name = JOptionPane.showInputDialog(frame, "What is your name?");</pre>
</blockquote>



<a name="INDEX-594"></a>
<a name="INDEX-595"></a>

<p>The more complex version of this method allows the user
	to select an object from a list or pull-down menu of predefined
	options.</p>

<p>The arguments to <tt class="literal">showInputDialog()</tt> are quite
	similar to those passed to
	<tt class="literal">showMessageDialog()</tt> and
	<tt class="literal">showConfirmDialog()</tt>.  
	To display a list of options to the
	user, use the seven-argument version of the method and pass in
	an array of choices and the default choice to display.
	For example:
</p>

<blockquote>
<pre class="programlisting">String response = (String) JOptionPane.showInputDialog(
		      contentpane,                       // parent
		     "Who is your favorite chipmunk?",   // message
		     "Pick a Chipmunk",                  // dialog title
		      JOptionPane.QUESTION_MESSAGE,      // icon type
		      null,                              // no explicit icon
		      new String[] {                     // choices
			 "Alvin", "Simon", "Theodore" 
		      },  
		      "Alvin");                          // default choice</pre>
</blockquote>



<a name="INDEX-596"></a>
<a name="INDEX-597"></a>
<a name="INDEX-598"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch03_14.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch03_14.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch03_16.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch03_16.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">3.14. The Box Container</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">3.16. JFileChooser</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
