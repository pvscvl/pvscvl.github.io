<html>
<head>
<title>The java.awt Package (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The java.awt Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch08_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch08_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch10_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch10_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 9.  The java.awt Package</h1>

<p> 
  The <tt class="literal">java.awt</tt> package 
  is the main package of the AWT, or Abstract Windowing
  Toolkit.  It contains classes for graphics, including the Java 2D
  graphics capabilities introduced in the Java 2 platform, and also defines the basic
  graphical user interface (GUI) framework for Java.
  <tt class="literal">java.awt</tt> also includes a number of heavyweight
  GUI objects, many of which have been superseded by the
  <tt class="literal">javax.swing</tt> package.
  <tt class="literal">java.awt</tt> also has a number of important subpackages.</p>
<a name="INDEX-1307"></a>
<a name="INDEX-1308"></a>
<a name="INDEX-1309"></a>
<a name="INDEX-1310"></a>
<a name="INDEX-1311"></a>
<a name="INDEX-1312"></a>
<a name="INDEX-1313"></a>
<p>  The most important graphics classes in
  <tt class="literal">java.awt</tt> are <tt class="literal">Graphics</tt>
  and its Java 2D extension, <tt class="literal">Graphics2D</tt>.  These classes
  represent a drawing surface, maintain a set of drawing attributes, and
  define methods for drawing and filling lines, shapes, and text.
  Classes that represent graphics attributes include
  <tt class="literal">Color</tt>, <tt class="literal">Font</tt>,
  <tt class="literal">Paint</tt>, <tt class="literal">Stroke</tt>, and
  <tt class="literal">Composite</tt>.  The
  <tt class="literal">Image</tt> class and <tt class="literal">Shape</tt> interface
  represent things that you can draw using a <tt class="literal">Graphics</tt>
  object and the various graphics attributes.  
  <a href="#jfcnut-ch-java.awt-fig-1">Figure 9-1</a> shows the graphics classes of
  this package.</p>
<a name="INDEX-1314"></a>
<a name="INDEX-1315"></a>
<a name="INDEX-1316"></a>
<a name="INDEX-1317"></a>
<a name="jfcnut-ch-java.awt-fig-1"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.0901.gif" webstripperlinkwas="figs/jfcn.0901.gif"></div>
<h4 class="objtitle">Figure 9-1. Graphics classes of the java.awt package</h4>
<a name="INDEX-1318"></a>
<p>  The most important class for GUIs is <tt class="literal">Component</tt>,
  which represents a single graphical element in a GUI.
  <tt class="literal">Container</tt> is a kind of component that can contain
  other components.  The <tt class="literal">LayoutManager</tt> interface and
  its various implementations are used to position components within
  their containers.  
  <a href="#jfcnut-ch-java.awt-fig-2">Figure 9-2</a> shows the GUI classes of
  this package, and
  <a href="#jfcnut-ch-java.awt-fig-3">Figure 9-3</a> shows the event, exception,
  and security classes.</p>
<a name="INDEX-1319"></a>
<a name="INDEX-1320"></a>
<a name="jfcnut-ch-java.awt-fig-2"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.0902.gif" webstripperlinkwas="figs/jfcn.0902.gif"></div>
<h4 class="objtitle">Figure 9-2. GUI classes of the java.awt package</h4>
<a name="jfcnut-ch-java.awt-fig-3"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.0903.gif" webstripperlinkwas="figs/jfcn.0903.gif"></div>
<h4 class="objtitle">Figure 9-3. Event, exception, and security classes of the java.awt package</h4>
<p>  See <a href="ch04_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch04_01.htm">Chapter 4, "Graphics with AWT

and Java 2D"</a>, for an introduction to Java graphics
  with AWT and Java 2D and <a href="ch02_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch02_01.htm">Chapter 2, "Swing and AWTArchitecture"</a>, for an introduction to
  the GUI framework defined by the <tt class="literal">java.awt</tt> package.</p>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ActiveEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This interface is implemented by events that know how to dispatch
  themselves.  When the event dispatch 
  system encounters an <tt class="literal">ActiveEvent</tt> 
  on the event queue, it simply invokes the
  <tt class="literal">dispatch()</tt> method of the event, 
  instead of attempting to dispatch
  the event 

on its own.  This interface is implemented by
  <tt class="literal">java.awt.event.InvocationEvent</tt>, which is used by
  the <tt class="literal">invokeLater()</tt> and
  <tt class="literal">invokeAndWait()</tt> methods of <tt class="literal">EventQueue</tt>.</p>
<a name="INDEX-1321"></a>
<a name="INDEX-1322"></a>
<a name="INDEX-1323"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ActiveEvent</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">dispatch</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">java.awt.event.InvocationEvent</tt>
</p>

</div>



<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Adjustable</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<a name="INDEX-1324"></a>
<p>
This interface defines the methods that should be
implemented by an object that maintains a user-adjustable
numeric value. The adjustable value has specified minimum and maximum
values, and it may be incremented or decremented either a
unit at a time or

 a block at a time.  An <tt class="literal">Adjustable</tt>
object generates an <tt class="literal">AdjustmentEvent</tt> when it is
adjusted and maintains a list of <tt class="literal">AdjustmentListener</tt>
objects interested in being notified when such an event
occurs.</p>
<p>This interface abstracts the essential functionality of the
<tt class="literal">Scrollbar</tt> and <tt class="literal">javax.swing.JScrollBar</tt>
components.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Adjustable</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HORIZONTAL</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VERTICAL</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addAdjustmentListener</b> (java.awt.event.AdjustmentListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeAdjustmentListener</b> (java.awt.event.AdjustmentListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getBlockIncrement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBlockIncrement</b> (int <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaximum</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setMaximum</b> (int <i class="parameter">max</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMinimum</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setMinimum</b> (int <i class="parameter">min</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getOrientation</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getUnitIncrement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setUnitIncrement</b> (int <i class="parameter">u</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getValue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setValue</b> (int <i class="parameter">v</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getVisibleAmount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setVisibleAmount</b> (int <i class="parameter">v</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">Scrollbar, javax.swing.JScrollBar</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">java.awt.event.AdjustmentEvent.AdjustmentEvent(), java.awt.peer.ScrollPanePeer.{setUnitIncrement(), setValue()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">ScrollPane.{getHAdjustable(), getVAdjustable()}, java.awt.event.AdjustmentEvent.getAdjustable()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AlphaComposite</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1325"></a>
<a name="INDEX-1326"></a>
<a name="INDEX-1327"></a>
<p> 
  This implementation of the <tt class="literal">Composite</tt> interface
  blends colors according to their levels of alpha transparency.
  <tt class="literal">AlphaComposite</tt> does not have a public constructor,
  but you can obtain a shared immutable instance by calling the static
  <tt class="literal">getInstance()</tt> method, specifying the desired
  compositing rule (one of the eight integer constants defined by the class),
  and specifying an alpha value.  Alternatively, if you use an alpha value of 1.0,
  you can simply use one of the eight predefined
  <tt class="literal">AlphaComposite</tt> constants.  Once you have obtained
  an <tt class="literal">AlphaComposite</tt> object, you use it by passing it
  to the <tt class="literal">setComposite()</tt> method of a
  <tt class="literal">Graphics2D</tt> object.</p>
<a name="INDEX-1328"></a>
<a name="INDEX-1329"></a>
<a name="INDEX-1330"></a>
<p>  The most common way to use an
  <tt class="literal">AlphaComposite</tt> object is to specify the
  <tt class="literal">SRC_OVER</tt> compositing rule and an alpha value
  greater than 0 but less than 1.  This causes the source
  colors you draw to be given the specified level of alpha
  transparency, so that they are blended with whatever colors already exist
  on the screen, making the destination colors appear to show through the
  translucent source colors.  This technique allows you to achieve
  transparency effects using opaque colors when you are
  drawing onto a drawing surface, like a screen, that does not 
  have an alpha channel.</p>
<p>  The other compositing rules of <tt class="literal">AlphaComposite</tt> 
  are best understood when both the source (your
  drawing) and the destination (the drawing surface) have alpha
  channels.  For example, you can create translucent
  <tt class="literal">Color</tt> objects with the four-argument version of the
  <tt class="literal">Color()</tt> constructor, and you can create an
  off-screen image with an alpha channel by passing the constant
  <tt class="literal">TYPE_INT_ARGB</tt> to the
  <tt class="literal">java.awt.image.BufferedImage()</tt> constructor.  (Once
  your compositing operation has been performed in an off-screen image
  with an alpha channel, you can view the results by copying the
  contents of the image to the screen, of course.)  When your source and
  destination have alpha channels built in, you do not usually specify
  an alpha value for the <tt class="literal">AlphaComposite</tt> itself.  If
  you do, however, the transparency values of the source colors are
  multiplied by this alpha value.</p>

<p>
<tt class="literal">AlphaComposite</tt> supports the following compositing
  rules:</p>

  <dl>
<dt>
<b><tt class="literal">SRC</tt></b>
</dt>
<dd>
<p>	  Replace the colors of the destination with the colors of the
	  source, ignoring the destination colors and the transparency of the
	  source.  
	</p>
</dd>
<dt>
<b><tt class="literal">SRC_OVER</tt></b>
</dt>
<dd>
<p>	  Combine the source and
	  destination colors combined based on the transparency
	  of the source, so that the source appears to be drawn over
	  the destination.
	</p>
</dd>
<dt>
<b><tt class="literal">DST_OVER</tt></b>
</dt>
<dd>
<p>	  Combine the
	  source and destination colors based on the
	  transparency of the destination, so that the
	  source appears to be drawn underneath the destination.  
	</p>
</dd>
<dt>
<b><tt class="literal">SRC_IN</tt></b>
</dt>
<dd>
<p>	  Draw the colors of the source using the transparency values
	  of the destination, completely ignoring the colors of the
	  destination.  
	</p>
</dd>
<dt>
<b><tt class="literal">SRC_OUT</tt></b>
</dt>
<dd>
<p>	  Draw the colors of the source using the inverse transparency
	  values of the destination.  
	</p>
</dd>
<dt>
<b><tt class="literal">DST_IN</tt></b>
</dt>
<dd>
<p>	  Modify the colors of the destination using the alpha values
	  of the source and ignoring the colors of the source.
	</p>
</dd>
<dt>
<b><tt class="literal">DST_OUT</tt></b>
</dt>
<dd>
<p>	  Modify the colors of the destination using the inverted alpha
	  values of the source and ignoring the colors of the source.
	</p>
</dd>
<dt>
<b><tt class="literal">CLEAR</tt></b>
</dt>
<dd>
<p>	  Ignore the color and transparency of both the destination
	  and the source.  This clears the destination by making
	  it a fully transparent black.
	</p>
</dd>
</dl>

<a name="INDEX-1331"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">AlphaComposite</b> implements Composite {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final AlphaComposite <b class="function">Clear</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CLEAR</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DST_IN</b> ;</td><td align="right"><i> =6</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DST_OUT</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DST_OVER</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final AlphaComposite <b class="function">DstIn</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final AlphaComposite <b class="function">DstOut</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final AlphaComposite <b class="function">DstOver</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final AlphaComposite <b class="function">Src</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SRC</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SRC_IN</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SRC_OUT</b> ;</td><td align="right"><i> =7</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SRC_OVER</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final AlphaComposite <b class="function">SrcIn</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final AlphaComposite <b class="function">SrcOut</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final AlphaComposite <b class="function">SrcOver</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static AlphaComposite <b class="function">getInstance</b> (int <i class="parameter">rule</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static AlphaComposite <b class="function">getInstance</b> (int <i class="parameter">rule</i>, float <i class="parameter">alpha</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAlpha</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRule</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Composite</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public CompositeContext <b class="function">createContext</b> (java.awt.image.ColorModel <i class="parameter">srcColorModel</i>, java.awt.image.ColorModel <i class="parameter">dstColorModel</i>, RenderingHints <i class="parameter">hints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AlphaComposite(Composite)</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AlphaComposite.getInstance()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">AlphaComposite.{Clear, DstIn, DstOut, DstOver, Src, SrcIn, SrcOut, SrcOver}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AWTError</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable error PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1332"></a>

Signals that an error has occurred in the
<tt class="literal">java.awt</tt> package.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">AWTError</b> extends Error {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AWTError</b> (String <i class="parameter">msg</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Error-->AWTError</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AWTEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable event PJ1.1</i></b></font></td>
</tr>
</table>


<p>
<a name="INDEX-1333"></a><a name="INDEX-1334"></a> This abstract class serves as the root
event type for all AWT events in Java 1.1 and supersedes the
<tt class="literal">Event</tt> class that was used in Java
1.0.</p>
<p>
<a name="INDEX-1335"></a> Each <tt class="literal">AWTEvent</tt> has a
source object, as all <tt class="literal">EventObject</tt> objects do.  You
can query the source of an event with the inherited
<tt class="literal">getSource()</tt> method.  The
<tt class="literal">AWTEvent</tt> class adds an event type, or ID, for every
<a name="INDEX-1336"></a> AWT event.  Use
<tt class="literal">getID()</tt> to query the type of an event.  Subclasses
of <tt class="literal">AWTEvent</tt> define various constants for this type
field.</p>
<p>
<a name="INDEX-1337"></a> The various <tt class="literal">_MASK</tt>
constants are used by applets and custom components that call the
<tt class="literal">enableEvents()</tt> method of
<tt class="literal">Component</tt> to receive various event types without
having to register <tt class="literal">EventListener</tt> objects.</p>


<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">AWTEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AWTEvent</b> (Event <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AWTEvent</b> (Object <i class="parameter">source</i>, int <i class="parameter">id</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final long <b class="function">ACTION_EVENT_MASK</b> ;</td><td align="right"><i> =128</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final long <b class="function">ADJUSTMENT_EVENT_MASK</b> ;</td><td align="right"><i> =256</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final long <b class="function">COMPONENT_EVENT_MASK</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final long <b class="function">CONTAINER_EVENT_MASK</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final long <b class="function">FOCUS_EVENT_MASK</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final long <b class="function">INPUT_METHOD_EVENT_MASK</b> ;</td><td align="right"><i> =2048</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final long <b class="function">ITEM_EVENT_MASK</b> ;</td><td align="right"><i> =512</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final long <b class="function">KEY_EVENT_MASK</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final long <b class="function">MOUSE_EVENT_MASK</b> ;</td><td align="right"><i> =16</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final long <b class="function">MOUSE_MOTION_EVENT_MASK</b> ;</td><td align="right"><i> =32</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">RESERVED_ID_MAX</b> ;</td><td align="right"><i> =1999</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final long <b class="function">TEXT_EVENT_MASK</b> ;</td><td align="right"><i> =1024</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final long <b class="function">WINDOW_EVENT_MASK</b> ;</td><td align="right"><i> =64</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getID</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding EventObject</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected void <b class="function">finalize</b> () throws Throwable;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">consume</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isConsumed</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">consumed</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">id</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">java.awt.event.ActionEvent, java.awt.event.AdjustmentEvent, java.awt.event.ComponentEvent, java.awt.event.InputMethodEvent, java.awt.event.InvocationEvent, java.awt.event.ItemEvent, java.awt.event.TextEvent, javax.swing.event.AncestorEvent, javax.swing.event.InternalFrameEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Component.coalesceEvents(), EventQueue.{getNextEvent(), peekEvent()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AWTEventMulticaster</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<a name="INDEX-1338"></a>
<a name="INDEX-1339"></a>
<p>
<tt class="literal">AWTEventMulticaster</tt> is a convenience class used when
writing a custom AWT component.  It provides an easy way
to maintain a list of AWT <tt class="literal">EventListener</tt> objects and 
notify the listeners on that list when an event occurs.</p>
<p>
<tt class="literal">AWTEventMulticaster</tt> implements each of the event
listener interfaces defined in the <tt class="literal">java.awt.event</tt>
package, which means that an <tt class="literal">AWTEventMulticaster</tt>
object can serve as any desired type of event listener.  (It
also means that the class defines quite a few methods.)  <tt class="literal">AWTEventMulticaster</tt>
implements what amounts to a linked list of
<tt class="literal">EventListener</tt> objects.  When you invoke one of the
<tt class="literal">EventListener</tt> methods of an
<tt class="literal">AWTEventMulticaster</tt>, it invokes the same method on
all of the <tt class="literal">EventListener</tt> objects in the linked list.</p>
<a name="INDEX-1340"></a>
<a name="INDEX-1341"></a>
<p>Rather than instantiate an <tt class="literal">AWTEventMulticaster</tt>
object directly, you use the static <tt class="literal">add()</tt> and
<tt class="literal">remove()</tt> methods of the class to add and remove
<tt class="literal">EventListener</tt> objects from the linked list.  Calling
<tt class="literal">add()</tt> or <tt class="literal">remove()</tt>
returns an <tt class="literal">AWTEventMulticaster</tt> with the
appropriate <tt class="literal">EventListener</tt> object registered or deregistered.
Using an <tt class="literal">AWTEventMulticaster</tt> is somewhat
non-intuitive, so here is some example code that shows its use:</p>

<blockquote>
<pre class="programlisting">public class MyList extends Component {   // a class that sends ItemEvents
  // The head of a linked list of AWTEventMulticaster objects
  protected ItemListener listener = null;
  public void addItemListener(ItemListener l) {      // add a listener
    listener = AWTEventMulticaster.add(listener, l);
  }
  public void removeItemListener(ItemListener l) {   // remove a listener
    listener = AWTEventMulticaster.remove(listener, l);
  }
  protected void fireItemEvent(ItemEvent e) {        // notify all listeners
    if (listener != null) listener.itemStateChanged(e);
  }
  // The rest of the class goes here
}</pre>
</blockquote>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">AWTEventMulticaster</b> implements java.awt.event.ActionListener, java.awt.event.AdjustmentListener, java.awt.event.ComponentListener, java.awt.event.ContainerListener, java.awt.event.FocusListener, java.awt.event.InputMethodListener, java.awt.event.ItemListener, java.awt.event.KeyListener, java.awt.event.MouseListener, java.awt.event.MouseMotionListener, java.awt.event.TextListener, java.awt.event.WindowListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">AWTEventMulticaster</b> (java.util.EventListener <i class="parameter">a</i>, java.util.EventListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.ActionListener <b class="function">add</b> (java.awt.event.ActionListener <i class="parameter">a</i>, java.awt.event.ActionListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.AdjustmentListener <b class="function">add</b> (java.awt.event.AdjustmentListener <i class="parameter">a</i>, java.awt.event.AdjustmentListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.ComponentListener <b class="function">add</b> (java.awt.event.ComponentListener <i class="parameter">a</i>, java.awt.event.ComponentListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.ContainerListener <b class="function">add</b> (java.awt.event.ContainerListener <i class="parameter">a</i>, java.awt.event.ContainerListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.FocusListener <b class="function">add</b> (java.awt.event.FocusListener <i class="parameter">a</i>, java.awt.event.FocusListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static java.awt.event.InputMethodListener <b class="function">add</b> (java.awt.event.InputMethodListener <i class="parameter">a</i>, java.awt.event.InputMethodListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.ItemListener <b class="function">add</b> (java.awt.event.ItemListener <i class="parameter">a</i>, java.awt.event.ItemListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.KeyListener <b class="function">add</b> (java.awt.event.KeyListener <i class="parameter">a</i>, java.awt.event.KeyListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.MouseListener <b class="function">add</b> (java.awt.event.MouseListener <i class="parameter">a</i>, java.awt.event.MouseListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.MouseMotionListener <b class="function">add</b> (java.awt.event.MouseMotionListener <i class="parameter">a</i>, java.awt.event.MouseMotionListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.TextListener <b class="function">add</b> (java.awt.event.TextListener <i class="parameter">a</i>, java.awt.event.TextListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.WindowListener <b class="function">add</b> (java.awt.event.WindowListener <i class="parameter">a</i>, java.awt.event.WindowListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.ActionListener <b class="function">remove</b> (java.awt.event.ActionListener <i class="parameter">l</i>, java.awt.event.ActionListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.AdjustmentListener <b class="function">remove</b> (java.awt.event.AdjustmentListener <i class="parameter">l</i>, java.awt.event.AdjustmentListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.ComponentListener <b class="function">remove</b> (java.awt.event.ComponentListener <i class="parameter">l</i>, java.awt.event.ComponentListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.ContainerListener <b class="function">remove</b> (java.awt.event.ContainerListener <i class="parameter">l</i>, java.awt.event.ContainerListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.FocusListener <b class="function">remove</b> (java.awt.event.FocusListener <i class="parameter">l</i>, java.awt.event.FocusListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static java.awt.event.InputMethodListener <b class="function">remove</b> (java.awt.event.InputMethodListener <i class="parameter">l</i>, java.awt.event.InputMethodListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.ItemListener <b class="function">remove</b> (java.awt.event.ItemListener <i class="parameter">l</i>, java.awt.event.ItemListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.KeyListener <b class="function">remove</b> (java.awt.event.KeyListener <i class="parameter">l</i>, java.awt.event.KeyListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.MouseListener <b class="function">remove</b> (java.awt.event.MouseListener <i class="parameter">l</i>, java.awt.event.MouseListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.MouseMotionListener <b class="function">remove</b> (java.awt.event.MouseMotionListener <i class="parameter">l</i>, java.awt.event.MouseMotionListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.TextListener <b class="function">remove</b> (java.awt.event.TextListener <i class="parameter">l</i>, java.awt.event.TextListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.WindowListener <b class="function">remove</b> (java.awt.event.WindowListener <i class="parameter">l</i>, java.awt.event.WindowListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static java.util.EventListener <b class="function">addInternal</b> (java.util.EventListener <i class="parameter">a</i>, java.util.EventListener <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static java.util.EventListener <b class="function">removeInternal</b> (java.util.EventListener <i class="parameter">l</i>, java.util.EventListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static void <b class="function">save</b> (java.io.ObjectOutputStream <i class="parameter">s</i>, String <i class="parameter">k</i>, java.util.EventListener <i class="parameter">l</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ActionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing AdjustmentListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">adjustmentValueChanged</b> (java.awt.event.AdjustmentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ComponentListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">componentHidden</b> (java.awt.event.ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">componentMoved</b> (java.awt.event.ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">componentResized</b> (java.awt.event.ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">componentShown</b> (java.awt.event.ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ContainerListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">componentAdded</b> (java.awt.event.ContainerEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">componentRemoved</b> (java.awt.event.ContainerEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing FocusListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">focusGained</b> (java.awt.event.FocusEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">focusLost</b> (java.awt.event.FocusEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing InputMethodListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">caretPositionChanged</b> (java.awt.event.InputMethodEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">inputMethodTextChanged</b> (java.awt.event.InputMethodEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ItemListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">itemStateChanged</b> (java.awt.event.ItemEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing KeyListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">keyPressed</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">keyReleased</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">keyTyped</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MouseListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseClicked</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseEntered</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseExited</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mousePressed</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseReleased</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MouseMotionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseDragged</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseMoved</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TextListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">textValueChanged</b> (java.awt.event.TextEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing WindowListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowActivated</b> (java.awt.event.WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowClosed</b> (java.awt.event.WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowClosing</b> (java.awt.event.WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowDeactivated</b> (java.awt.event.WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowDeiconified</b> (java.awt.event.WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowIconified</b> (java.awt.event.WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowOpened</b> (java.awt.event.WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.EventListener <b class="function">remove</b> (java.util.EventListener <i class="parameter">oldl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">saveInternal</b> (java.io.ObjectOutputStream <i class="parameter">s</i>, String <i class="parameter">k</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final java.util.EventListener <b class="function">a</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final java.util.EventListener <b class="function">b</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AWTEventMulticaster(java.awt.event.ActionListener(java.util.EventListener),java.awt.event.AdjustmentListener(java.util.EventListener),java.awt.event.ComponentListener(java.util.EventListener),java.awt.event.ContainerListener(java.util.EventListener),java.awt.event.FocusListener(java.util.EventListener),java.awt.event.InputMethodListener(java.util.EventListener),java.awt.event.ItemListener(java.util.EventListener),java.awt.event.KeyListener(java.util.EventListener),java.awt.event.MouseListener(java.util.EventListener),java.awt.event.MouseMotionListener(java.util.EventListener),java.awt.event.TextListener(java.util.EventListener),java.awt.event.WindowListener(java.util.EventListener))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AWTException</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable checked PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1342"></a>

Signals that an exception has occurred
in the <tt class="literal">java.awt</tt> package.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">AWTException</b> extends Exception {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AWTException</b> (String <i class="parameter">msg</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->AWTException</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span><tt class="literal">Cursor.getSystemCustomCursor()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AWTPermission</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable permission</i></b></font></td>
</tr>
</table>
<a name="INDEX-1343"></a>
<a name="INDEX-1344"></a>
<p>  This class encapsulates permissions for performing various AWT-related
  operations; applications do not typically use it.
  The name, or target, of a permission should be one of the following
  values: "accessClipboard", "accessEventQueue", 
  "listenToAllAWTEvents",
  or "showWindowWithoutWarningBanner".  
  Alternatively, a name of "*"
  implies all of these values. <tt class="literal">AWTPermission</tt>
  does not use actions, so the <em class="replaceable">actions</em>
  argument to the constructor should be <tt class="literal">null</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">AWTPermission</b> extends java.security.BasicPermission {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AWTPermission</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AWTPermission</b> (String <i class="parameter">name</i>, String <i class="parameter">actions</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.security.Permission(java.security.Guard,Serializable)-->java.security.BasicPermission(Serializable)-->AWTPermission</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BasicStroke</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1345"></a>
<a name="INDEX-1346"></a>
<a name="INDEX-1347"></a>
<p> 
  This class defines properties that control how lines are drawn.
  By default, lines are one-pixel wide and solid.  To change these
  attributes, pass a <tt class="literal">BasicStroke</tt> (or another
  implementation of <tt class="literal">Stroke</tt>) to the
  <tt class="literal">setStroke()</tt> method of a
  <tt class="literal">Graphics2D</tt> object.  <tt class="literal">BasicStroke</tt>
  supports the following line attribute
  properties:</p>

  <dl>
<dt>
<b><tt class="literal">lineWidth</tt></b>
</dt>
<dd>
<p>	  The thickness of the line.
	</p>
</dd>
<dt>
<b><tt class="literal">endCap</tt></b>
</dt>
<dd>
<p>	  The end cap style of the line.
	  <tt class="literal">CAP_BUTT</tt> specifies that a line ends exactly
	  at its end points, without caps. 
	  <tt class="literal">CAP_SQUARE</tt> causes a line to end
	  with square caps that extend beyond the end points by a
	  distance equal to one-half of the line width.
	  <tt class="literal">CAP_ROUND</tt> specifies that a line ends with 
	  round caps with a radius of one-half of the line width.
	</p>
</dd>
<dt>
<b><tt class="literal">lineJoin</tt></b>
</dt>
<dd>
<p>	  The join style when two line segments meet at
	  the vertex of a shape.  <tt class="literal">JOIN_MITER</tt>
	  specifies that the outside edges of the two line segments
	  are extended as far as necessary until they intersect.
	  <tt class="literal">JOIN_BEVEL</tt> causes the outside
	  corners of the vertex to be joined with a straight line.
	  <tt class="literal">JOIN_ROUND</tt> specifies that the vertex is 
	  rounded with a curve that has a radius of half the line width.
	</p>
</dd>
<dt>
<b><tt class="literal">miterLimit</tt></b>
</dt>
<dd>
<p>	  The maximum length of the miter used to connect
	  two intersecting line segments.  When two lines intersect at an
	  acute angle and the line join style is 
	  <tt class="literal">JOIN_MITER</tt>, the length of the miter gets
	  progressively longer as the angle between the lines gets
	  smaller.  This property imposes 

a maximum length on the miter;
	  beyond this length, the miter is squared off.
	</p>
</dd>
<dt>
<b><tt class="literal">dashArray</tt></b>
</dt>
<dd>
<p>	  The pattern of dashes and spaces that make up a dashed line.
	  This attribute is an array, where the first element
	  and all the additional odd elements specify the
	  lengths of dashes.  The second element and all the
	  additional even elements specify the lengths of the spaces.  
	  When the dash
	  pattern is complete, it starts over at the beginning of the
	  array, of course.
	</p>
</dd>
<dt>
<b><tt class="literal">dashPhase</tt></b>
</dt>
<dd>
<p>	  The distance into the dash pattern that line drawing 
	  begins.  Note that this value is not an index into the dash
	  array, but a distance.  For example, if you've 
	  specified a dash of length 5 followed by a space of length
	  3 and want to begin your line with the space rather than
	  the dash, you set this property to 5.
	</p>
</dd>
</dl>

<a name="INDEX-1348"></a>
<p>  See <tt class="literal">Stroke</tt> for a discussion of how line drawing is
  performed in Java 2D.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BasicStroke</b> implements Stroke {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BasicStroke</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BasicStroke</b> (float <i class="parameter">width</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BasicStroke</b> (float <i class="parameter">width</i>, int <i class="parameter">cap</i>, int <i class="parameter">join</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BasicStroke</b> (float <i class="parameter">width</i>, int <i class="parameter">cap</i>, int <i class="parameter">join</i>, float <i class="parameter">miterlimit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BasicStroke</b> (float <i class="parameter">width</i>, int <i class="parameter">cap</i>, int <i class="parameter">join</i>, float <i class="parameter">miterlimit</i>, float[ ] <i class="parameter">dash</i>, float <i class="parameter">dash_phase</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CAP_BUTT</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CAP_ROUND</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CAP_SQUARE</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">JOIN_BEVEL</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">JOIN_MITER</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">JOIN_ROUND</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float[ ] <b class="function">getDashArray</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getDashPhase</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getEndCap</b> ();</td><td align="right"><i> default:2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLineJoin</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getLineWidth</b> ();</td><td align="right"><i> default:1.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getMiterLimit</b> ();</td><td align="right"><i> default:10.0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Stroke</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Shape <b class="function">createStrokedShape</b> (Shape <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->BasicStroke(Stroke)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BorderLayout</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable layout manager PJ1.1</i></b></font></td>
</tr>
</table>

<a name="INDEX-1349"></a>
<a name="INDEX-1350"></a>
<a name="INDEX-1351"></a>
<p>
A <tt class="literal">LayoutManager</tt> that arranges components
that have been added to their <tt class="literal">Container</tt> (using the
<tt class="literal">Container.add()</tt> method) with
the names "North", "South", "East", "West", and "Center".
These named components are arranged along the edges and
in the center of the container.
The <em class="replaceable">hgap</em> and <em class="replaceable">vgap</em> arguments to the
<tt class="literal">BorderLayout</tt> constructor specify 

the desired
horizontal and vertical spacing between
adjacent components.</p>
<p>In Java 1.1, five constants were defined to represent these strings.
In Java 1.2, an additional four constants have been added to represent the four sides of the container in a way that is independent of writing direction.  For example, <tt class="literal">BEFORE_LINE_BEGINS</tt> is the same as <tt class="literal">WEST</tt> in locales where text is drawn from left to right, but is the same as <tt class="literal">EAST</tt> in locales where text is drawn from right to left.</p>
<p>Note that an application should never call the
<tt class="literal">LayoutManager</tt> methods of this class directly; the
<tt class="literal">Container</tt> for which the <tt class="literal">BorderLayout</tt> is
registered does this.</p>
<p>In Java 1.1, five constants were defined to represent these strings. In Java 1.2, an additional four constants have been added to represent the four sides of the container in a way that is independent of writing direction. For example, <tt class="literal">BEFORE_LINE_BEGINS</tt> is the same as <tt class="literal">WEST</tt> in locales where text is drawn from left to right but is the same as <tt class="literal">EAST</tt> in locales where text is drawn right to left.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BorderLayout</b> implements LayoutManager2, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BorderLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BorderLayout</b> (int <i class="parameter">hgap</i>, int <i class="parameter">vgap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final String <b class="function">AFTER_LAST_LINE</b> ;</td><td align="right"><i> ="Last"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final String <b class="function">AFTER_LINE_ENDS</b> ;</td><td align="right"><i> ="After"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final String <b class="function">BEFORE_FIRST_LINE</b> ;</td><td align="right"><i> ="First"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final String <b class="function">BEFORE_LINE_BEGINS</b> ;</td><td align="right"><i> ="Before"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final String <b class="function">CENTER</b> ;</td><td align="right"><i> ="Center"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final String <b class="function">EAST</b> ;</td><td align="right"><i> ="East"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final String <b class="function">NORTH</b> ;</td><td align="right"><i> ="North"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final String <b class="function">SOUTH</b> ;</td><td align="right"><i> ="South"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final String <b class="function">WEST</b> ;</td><td align="right"><i> ="West"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getHgap</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setHgap</b> (int <i class="parameter">hgap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getVgap</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setVgap</b> (int <i class="parameter">vgap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">layoutContainer</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Dimension <b class="function">minimumLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Dimension <b class="function">preferredLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeLayoutComponent</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addLayoutComponent</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public float <b class="function">getLayoutAlignmentX</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public float <b class="function">getLayoutAlignmentY</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">invalidateLayout</b> (Container <i class="parameter">target</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">maximumLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">addLayoutComponent</b> (String <i class="parameter">name</i>, Component <i class="parameter">comp</i>);</td><td align="right"><i> Implements:LayoutManager</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->BorderLayout(LayoutManager2(LayoutManager),Serializable)</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Button</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1</i></b></font></td>
</tr>
</table>

<a name="INDEX-1352"></a>
<a name="INDEX-1353"></a>
<p>
This class represents a GUI push button that displays a
specified textual label.  Use <tt class="literal">setActionCommand()</tt> to
specify an identifying string that is included in the
<tt class="literal">ActionEvent</tt> events generated by the button.</p>
<a name="INDEX-1354"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Button</b> extends Component {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Button</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Button</b> (String <i class="parameter">label</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public String <b class="function">getActionCommand</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setActionCommand</b> (String <i class="parameter">command</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getLabel</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLabel</b> (String <i class="parameter">label</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processActionEvent</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->Button</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.createButton()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Canvas</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1</i></b></font></td>
</tr>
</table>

<a name="INDEX-1355"></a>
<p>
A <tt class="literal">Component</tt> that does no default
drawing or event handling on its own.  You can subclass it
to display any kind of drawing or image and handle any
kind of user input event.  <tt class="literal">Canvas</tt> inherits the event-handling methods of its superclass.  In Java 1.1, you can
also subclass <tt class="literal">Component</tt> directly to create a
lightweight component, instead of having to subclass <tt class="literal">Canvas</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Canvas</b> extends Component {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Canvas</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">Canvas</b> (GraphicsConfiguration <i class="parameter">config</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->Canvas</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.createCanvas()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CardLayout</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable layout manager PJ1.1</i></b></font></td>
</tr>
</table>

<p>
A <tt class="literal">LayoutManager</tt> that makes each of
the components it manages as large as the container and
ensures that only one is visible at a time.  The standard
<tt class="literal">LayoutManager</tt> methods are called by the
<tt class="literal">Container</tt> object and should not be called directly
by applet or application code.  <tt class="literal">first()</tt>,
<tt class="literal">last()</tt>, <tt class="literal">next()</tt>, <tt class="literal">previous()</tt>, and
<tt class="literal">show()</tt> make a particular <tt class="literal">Component</tt> in the
<tt class="literal">Container</tt> visible.  The names with which the
components are added to the container are used only by the
<tt class="literal">show()</tt> method.</p>
<a name="INDEX-1356"></a>
<a name="INDEX-1357"></a>
<a name="INDEX-1358"></a>
<a name="INDEX-1359"></a>
<a name="INDEX-1360"></a>
<a name="INDEX-1361"></a>
<a name="INDEX-1362"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">CardLayout</b> implements LayoutManager2, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CardLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CardLayout</b> (int <i class="parameter">hgap</i>, int <i class="parameter">vgap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getHgap</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setHgap</b> (int <i class="parameter">hgap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getVgap</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setVgap</b> (int <i class="parameter">vgap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">first</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">last</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">next</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">previous</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">show</b> (Container <i class="parameter">parent</i>, String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">layoutContainer</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Dimension <b class="function">minimumLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Dimension <b class="function">preferredLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeLayoutComponent</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addLayoutComponent</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public float <b class="function">getLayoutAlignmentX</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public float <b class="function">getLayoutAlignmentY</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">invalidateLayout</b> (Container <i class="parameter">target</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">maximumLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">addLayoutComponent</b> (String <i class="parameter">name</i>, Component <i class="parameter">comp</i>);</td><td align="right"><i> Implements:LayoutManager</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->CardLayout(LayoutManager2(LayoutManager),Serializable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Checkbox</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1</i></b></font></td>
</tr>
</table>

<a name="INDEX-1363"></a>
<a name="INDEX-1364"></a>
<p>
This class represents a GUI checkbox with a textual label.
The <tt class="literal">Checkbox</tt> maintains a <tt class="literal">boolean</tt> state--whether it
is checked or not.  The checkbox may optionally be part of a
<tt class="literal">CheckboxGroup</tt> that enforces radio button behavior. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Checkbox</b> extends Component implements ItemSelectable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Checkbox</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Checkbox</b> (String <i class="parameter">label</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">Checkbox</b> (String <i class="parameter">label</i>, boolean <i class="parameter">state</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Checkbox</b> (String <i class="parameter">label</i>, CheckboxGroup <i class="parameter">group</i>, boolean <i class="parameter">state</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">Checkbox</b> (String <i class="parameter">label</i>, boolean <i class="parameter">state</i>, CheckboxGroup <i class="parameter">group</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ItemSelectable synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ItemSelectable synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public CheckboxGroup <b class="function">getCheckboxGroup</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCheckboxGroup</b> (CheckboxGroup <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getLabel</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLabel</b> (String <i class="parameter">label</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i> Implements:ItemSelectable default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getState</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setState</b> (boolean <i class="parameter">state</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ItemSelectable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processItemEvent</b> (java.awt.event.ItemEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->Checkbox(ItemSelectable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">CheckboxGroup.{setCurrent(), setSelectedCheckbox()}, Toolkit.createCheckbox()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">CheckboxGroup.{getCurrent(), getSelectedCheckbox()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CheckboxGroup</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable PJ1.1</i></b></font></td>
</tr>
</table>

<a name="INDEX-1365"></a>
<a name="INDEX-1366"></a>
<a name="INDEX-1367"></a>
<p>
A <tt class="literal">CheckboxGroup</tt> object enforces mutual exclusion
(also known as radio button behavior)
among any number of <tt class="literal">Checkbox</tt> buttons.  A
<tt class="literal">Checkbox</tt> component can specify a
<tt class="literal">CheckboxGroup</tt> object when created or with its
<tt class="literal">setCheckboxGroup()</tt> method.  If a <tt class="literal">Checkbox</tt>
within a <tt class="literal">CheckboxGroup</tt> object is selected, 
the <tt class="literal">CheckboxGroup</tt> ensures that the previously
selected <tt class="literal">Checkbox</tt> becomes unselected.</p>
<a name="INDEX-1368"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">CheckboxGroup</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CheckboxGroup</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Checkbox <b class="function">getSelectedCheckbox</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setSelectedCheckbox</b> (Checkbox <i class="parameter">box</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Checkbox <b class="function">getCurrent</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setCurrent</b> (Checkbox <i class="parameter">box</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->CheckboxGroup(Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Checkbox.{Checkbox(), setCheckboxGroup()}, java.awt.peer.CheckboxPeer.setCheckboxGroup()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Checkbox.getCheckboxGroup()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CheckboxMenuItem</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1(opt)</i></b></font></td>
</tr>
</table>

<a name="INDEX-1369"></a>
<a name="INDEX-1370"></a>
<a name="INDEX-1371"></a>
<p>
This class represents a checkbox with a textual label in a GUI menu.
It maintains a <tt class="literal">boolean</tt> state--whether it is
checked or not.
See also <tt class="literal">MenuItem</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">CheckboxMenuItem</b> extends MenuItem implements ItemSelectable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">CheckboxMenuItem</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CheckboxMenuItem</b> (String <i class="parameter">label</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">CheckboxMenuItem</b> (String <i class="parameter">label</i>, boolean <i class="parameter">state</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ItemSelectable synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ItemSelectable synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i> Implements:ItemSelectable synchronized default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getState</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setState</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ItemSelectable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i> synchronized default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding MenuItem</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding MenuItem</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processItemEvent</b> (java.awt.event.ItemEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->MenuComponent(Serializable)-->MenuItem-->CheckboxMenuItem(ItemSelectable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.createCheckboxMenuItem()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Choice</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1</i></b></font></td>
</tr>
</table>

<a name="INDEX-1372"></a>
<a name="INDEX-1373"></a>
<a name="INDEX-1374"></a>
<a name="INDEX-1375"></a>
<a name="INDEX-1376"></a>
<a name="INDEX-1377"></a>
<p>
This class represents an option menu or dropdown list.
The <tt class="literal">addItem()</tt> method adds an item with the
specified label to a <tt class="literal">Choice</tt> menu.
<tt class="literal">getSelectedIndex()</tt> returns the numerical position of
the selected item in the menu, while <tt class="literal">getSelectedItem()</tt>
returns the label of the selected item.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Choice</b> extends Component implements ItemSelectable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Choice</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ItemSelectable synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ItemSelectable synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getItemCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectedIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getSelectedItem</b> ();</td><td align="right"><i> synchronized default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i> Implements:ItemSelectable synchronized default:null</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">add</b> (String <i class="parameter">item</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addItem</b> (String <i class="parameter">item</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getItem</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">insert</b> (String <i class="parameter">item</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">remove</b> (String <i class="parameter">item</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">remove</b> (int <i class="parameter">position</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeAll</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">select</b> (String <i class="parameter">str</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">select</b> (int <i class="parameter">pos</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ItemSelectable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i> synchronized default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processItemEvent</b> (java.awt.event.ItemEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">countItems</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->Choice(ItemSelectable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.createChoice()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Color</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable PJ1.1</i></b></font></td>
</tr>
</table>
<a name="INDEX-1378"></a>
<a name="INDEX-1379"></a>
<p> 
  This class describes a color in terms of the individual
  components of that color.  These components are either 
  <tt class="literal">float</tt> values that range between 0 and 1 or 8-bit
  integers that range from 0 to 255.  Prior to Java 1.2, only the RGB
  (red, green, blue) color space was supported.  With the advent of
  Java 2D, the <tt class="literal">Color</tt> 
  class has been extended to support alpha
  transparency and arbitrary
  <tt class="literal">java.awt.color.ColorSpace</tt> objects.  In addition,
  the Java 1.2 <tt class="literal">Color</tt> class implements the
  <tt class="literal">Paint</tt> interface and is used to perform Java 2D
  drawing and filling operations that use solid colors.</p>
<a name="INDEX-1380"></a>
<p>
<tt class="literal">Color</tt> objects can be obtained in a number of ways.
  The <tt class="literal">Color()</tt> constructors allow color components to
  be directly specified.  The class also defines several color
  constants.  The <tt class="literal">SystemColor</tt> subclass defines other
  useful <tt class="literal">Color</tt> 
  constants that are related to standard colors used on the
  system desktop.  The static methods <tt class="literal">HSBtoRGB()</tt> and
  <tt class="literal">RGBtoHSB()</tt> convert between the RGB color space and
  the HSB (hue, saturation, brightness) color space and can be used to
  create colors specified using the more intuitive HSB color components.
  <tt class="literal">brighter()</tt> and <tt class="literal">darker()</tt> return 
  variants on the current color and are useful for creating shading
  effects.</p>
<a name="INDEX-1381"></a>
<a name="INDEX-1382"></a>
<a name="INDEX-1383"></a>
<a name="INDEX-1384"></a>
<p>  An RGB color can be expressed as a 24-bit number, where the top 8 bits
  specifies the red component, the middle 8 bits specifies the green
  component, and the low 8 bits specifies the blue component.  Colors
  are often represented using a string representation of this 24-bit
  number.  It is particularly common to use a hexadecimal representation
  for a color, since it keeps the red, green, and blue components
  distinct.  For example, the string "0xFF0000" represents a bright red
  color: the red component has a value of 255, and both the green and
  blue components are 0.  The static <tt class="literal">decode()</tt>
  method converts color strings encoded in this way to
  <tt class="literal">Color</tt> objects.  Each <tt class="literal">getColor()</tt>
  method looks up the specified key in the system properties list and
  then decodes the value and returns the resulting
  <tt class="literal">Color</tt> or the specified default color, if no color
  is found in the properties list.</p>
<a name="INDEX-1385"></a>
<a name="INDEX-1386"></a>
<a name="INDEX-1387"></a>
<a name="INDEX-1388"></a>
<a name="INDEX-1389"></a>
<p>
<tt class="literal">getRGB()</tt> returns the red, green, and blue components
  of a color as a 24-bit number.  <tt class="literal">getRed()</tt>,
  <tt class="literal">getBlue()</tt>, <tt class="literal">getGreen()</tt>, and
  <tt class="literal">getAlpha()</tt> return the individual components of a
  color as integers.  <tt class="literal">getComponents()</tt> is a
  generalized method that returns the color and transparency components
  of a color in a <tt class="literal">float</tt> array, using an optionally
  specified <tt class="literal">ColorSpace</tt>.
  <tt class="literal">getColorComponents()</tt> is similar but returns only
  the color components, not the transparency component.
  <tt class="literal">getRGBComponents()</tt> returns the color and alpha
  components as <tt class="literal">float</tt> values using the RGB color
  space.  <tt class="literal">getRGBColorComponents()</tt> does the same but
  does not return the alpha component.  Each of these methods either fills
  in the elements of a <tt class="literal">float[]</tt> array you provide or
  allocates one of its own, if you pass <tt class="literal">null</tt>.</p>
<a name="INDEX-1390"></a>
<a name="INDEX-1391"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Color</b> implements Paint, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Color</b> (int <i class="parameter">rgb</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">Color</b> (int <i class="parameter">rgba</i>, boolean <i class="parameter">hasalpha</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">Color</b> (java.awt.color.ColorSpace <i class="parameter">cspace</i>, float[ ] <i class="parameter">components</i>, float <i class="parameter">alpha</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Color</b> (float <i class="parameter">r</i>, float <i class="parameter">g</i>, float <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Color</b> (int <i class="parameter">r</i>, int <i class="parameter">g</i>, int <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">Color</b> (int <i class="parameter">r</i>, int <i class="parameter">g</i>, int <i class="parameter">b</i>, int <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">Color</b> (float <i class="parameter">r</i>, float <i class="parameter">g</i>, float <i class="parameter">b</i>, float <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Color <b class="function">black</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Color <b class="function">blue</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Color <b class="function">cyan</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Color <b class="function">darkGray</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Color <b class="function">gray</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Color <b class="function">green</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Color <b class="function">lightGray</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Color <b class="function">magenta</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Color <b class="function">orange</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Color <b class="function">pink</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Color <b class="function">red</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Color <b class="function">white</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Color <b class="function">yellow</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static Color <b class="function">decode</b> (String <i class="parameter">nm</i>) throws NumberFormatException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Color <b class="function">getColor</b> (String <i class="parameter">nm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Color <b class="function">getColor</b> (String <i class="parameter">nm</i>, Color <i class="parameter">v</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Color <b class="function">getColor</b> (String <i class="parameter">nm</i>, int <i class="parameter">v</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Color <b class="function">getHSBColor</b> (float <i class="parameter">h</i>, float <i class="parameter">s</i>, float <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">HSBtoRGB</b> (float <i class="parameter">hue</i>, float <i class="parameter">saturation</i>, float <i class="parameter">brightness</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static float[ ] <b class="function">RGBtoHSB</b> (int <i class="parameter">r</i>, int <i class="parameter">g</i>, int <i class="parameter">b</i>, float[ ] <i class="parameter">hsbvals</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">getAlpha</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getBlue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.color.ColorSpace <b class="function">getColorSpace</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getGreen</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRed</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRGB</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">getTransparency</b> ();</td><td align="right"><i> Implements:Transparency</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Color <b class="function">brighter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Color <b class="function">darker</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public float[ ] <b class="function">getColorComponents</b> (float[ ] <i class="parameter">compArray</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public float[ ] <b class="function">getColorComponents</b> (java.awt.color.ColorSpace <i class="parameter">cspace</i>, float[ ] <i class="parameter">compArray</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public float[ ] <b class="function">getComponents</b> (float[ ] <i class="parameter">compArray</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public float[ ] <b class="function">getComponents</b> (java.awt.color.ColorSpace <i class="parameter">cspace</i>, float[ ] <i class="parameter">compArray</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public float[ ] <b class="function">getRGBColorComponents</b> (float[ ] <i class="parameter">compArray</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public float[ ] <b class="function">getRGBComponents</b> (float[ ] <i class="parameter">compArray</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Paint</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public PaintContext <b class="function">createContext</b> (java.awt.image.ColorModel <i class="parameter">cm</i>, Rectangle <i class="parameter">r</i>, java.awt.geom.Rectangle2D <i class="parameter">r2d</i>, java.awt.geom.AffineTransform <i class="parameter">xform</i>, RenderingHints <i class="parameter">hints</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Transparency</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">getTransparency</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Color(Paint(Transparency),Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">SystemColor, javax.swing.plaf.ColorUIResource</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span>Too many fields to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Component</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1(mod)</i></b></font></td>
</tr>
</table>

<a name="INDEX-1392"></a>
<p>
<tt class="literal">Component</tt> is the superclass of all GUI components
(except menu components) in the <tt class="literal">java.awt</tt> package.  You 
cannot instantiate a <tt class="literal">Component</tt> directly; you must use
a subclass.</p>
<a name="INDEX-1393"></a>
<p>
<tt class="literal">Component</tt> defines many methods.  Some of these are
intended to be implemented by subclasses, including some that
are for handling events.  Other methods are used
internally by the AWT.  And many are 
useful utility methods for working with GUI
components.  <tt class="literal">getParent()</tt> returns the
<tt class="literal">Container</tt> that contains a <tt class="literal">Component</tt>.
<tt class="literal">setBackground()</tt>, <tt class="literal">setForeground()</tt>, and
<tt class="literal">setFont()</tt> set the specified display attributes of a
component.  <tt class="literal">hide()</tt>, <tt class="literal">show()</tt>,
<tt class="literal">enable()</tt>, and <tt class="literal">disable()</tt> perform the
specified actions for a component.  <tt class="literal">createImage()</tt>
creates either an <tt class="literal">Image</tt> object from a specified
<tt class="literal">ImageProducer</tt> or an off-screen image that
can be drawn into and used for double-buffering during
animation.  <tt class="literal">Component</tt> also has quite a few deprecated
methods, as a result of the Java 1.1 event model and the
introduction of the JavaBeans method-naming
conventions. The class defines numerous methods for
handling many types of events, using the 1.0 and 1.1 event models,
in both their high-level and low-level forms.</p>
<a name="INDEX-1394"></a>
<a name="INDEX-1395"></a>
<a name="INDEX-1396"></a>
<a name="INDEX-1397"></a>
<a name="INDEX-1398"></a>
<a name="INDEX-1399"></a>
<a name="INDEX-1400"></a>
<a name="INDEX-1401"></a>
<p>  In Personal Java environments, the <tt class="literal">setCursor()</tt>
  method can be ignored.  Also, the Personal Java API supports the
  <tt class="literal">isDoubleBuffered()</tt> method, even though it is not
  part of the Java 1.1 API from which Personal Java is derived.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">Component</b> implements java.awt.image.ImageObserver, MenuContainer, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">Component</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final float <b class="function">BOTTOM_ALIGNMENT</b> ;</td><td align="right"><i> =1.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final float <b class="function">CENTER_ALIGNMENT</b> ;</td><td align="right"><i> =0.5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final float <b class="function">LEFT_ALIGNMENT</b> ;</td><td align="right"><i> =0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final float <b class="function">RIGHT_ALIGNMENT</b> ;</td><td align="right"><i> =1.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final float <b class="function">TOP_ALIGNMENT</b> ;</td><td align="right"><i> =0.0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addComponentListener</b> (java.awt.event.ComponentListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeComponentListener</b> (java.awt.event.ComponentListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addFocusListener</b> (java.awt.event.FocusListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeFocusListener</b> (java.awt.event.FocusListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">addInputMethodListener</b> (java.awt.event.InputMethodListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">removeInputMethodListener</b> (java.awt.event.InputMethodListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addKeyListener</b> (java.awt.event.KeyListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeKeyListener</b> (java.awt.event.KeyListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addMouseListener</b> (java.awt.event.MouseListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeMouseListener</b> (java.awt.event.MouseListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addMouseMotionListener</b> (java.awt.event.MouseMotionListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeMouseMotionListener</b> (java.awt.event.MouseMotionListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public float <b class="function">getAlignmentX</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public float <b class="function">getAlignmentY</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Color <b class="function">getBackground</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBackground</b> (Color <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Rectangle <b class="function">getBounds</b> (Rectangle <i class="parameter">rv</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setBounds</b> (Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setBounds</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.image.ColorModel <b class="function">getColorModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public ComponentOrientation <b class="function">getComponentOrientation</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setComponentOrientation</b> (ComponentOrientation <i class="parameter">o</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Cursor <b class="function">getCursor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setCursor</b> (Cursor <i class="parameter">cursor</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">isDisplayable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">isDoubleBuffered</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.dnd.DropTarget <b class="function">getDropTarget</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setDropTarget</b> (java.awt.dnd.DropTarget <i class="parameter">dt</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setEnabled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public boolean <b class="function">isFocusTraversable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Font <b class="function">getFont</b> ();</td><td align="right"><i> Implements:MenuContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFont</b> (Font <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Color <b class="function">getForeground</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setForeground</b> (Color <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Graphics <b class="function">getGraphics</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">getHeight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.im.InputContext <b class="function">getInputContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.im.InputMethodRequests <b class="function">getInputMethodRequests</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">isLightweight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public java.util.Locale <b class="function">getLocale</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setLocale</b> (java.util.Locale <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Point <b class="function">getLocation</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Point <b class="function">getLocation</b> (Point <i class="parameter">rv</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setLocation</b> (Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setLocation</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Point <b class="function">getLocationOnScreen</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getMaximumSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getMinimumSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setName</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">isOpaque</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isShowing</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Dimension <b class="function">getSize</b> (Dimension <i class="parameter">rv</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setSize</b> (Dimension <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setSize</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Toolkit <b class="function">getToolkit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public final Object <b class="function">getTreeLock</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isValid</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isVisible</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setVisible</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">getWidth</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">getX</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">getY</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">add</b> (PopupMenu <i class="parameter">popup</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (String <i class="parameter">propertyName</i>, java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">checkImage</b> (Image <i class="parameter">image</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">checkImage</b> (Image <i class="parameter">image</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public boolean <b class="function">contains</b> (Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public boolean <b class="function">contains</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Image <b class="function">createImage</b> (java.awt.image.ImageProducer <i class="parameter">producer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Image <b class="function">createImage</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public final void <b class="function">dispatchEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">doLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">enableInputMethods</b> (boolean <i class="parameter">enable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Component <b class="function">getComponentAt</b> (Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Component <b class="function">getComponentAt</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public FontMetrics <b class="function">getFontMetrics</b> (Font <i class="parameter">font</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">hasFocus</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">invalidate</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">list</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">list</b> (java.io.PrintWriter <i class="parameter">out</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">list</b> (java.io.PrintStream <i class="parameter">out</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">list</b> (java.io.PrintWriter <i class="parameter">out</i>, int <i class="parameter">indent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">list</b> (java.io.PrintStream <i class="parameter">out</i>, int <i class="parameter">indent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (Graphics <i class="parameter">g</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintAll</b> (Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">prepareImage</b> (Image <i class="parameter">image</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">prepareImage</b> (Image <i class="parameter">image</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">print</b> (Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">printAll</b> (Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (String <i class="parameter">propertyName</i>, java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">repaint</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">repaint</b> (long <i class="parameter">tm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">repaint</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">repaint</b> (long <i class="parameter">tm</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">requestFocus</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">transferFocus</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">update</b> (Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">validate</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ImageObserver</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">imageUpdate</b> (Image <i class="parameter">img</i>, int <i class="parameter">flags</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">w</i>, int <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MenuContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Font <b class="function">getFont</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">remove</b> (MenuComponent <i class="parameter">popup</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected AWTEvent <b class="function">coalesceEvents</b> (AWTEvent <i class="parameter">existingEvent</i>, AWTEvent <i class="parameter">newEvent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected final void <b class="function">disableEvents</b> (long <i class="parameter">eventsToDisable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected final void <b class="function">enableEvents</b> (long <i class="parameter">eventsToEnable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, Object <i class="parameter">oldValue</i>, Object <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processComponentEvent</b> (java.awt.event.ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processFocusEvent</b> (java.awt.event.FocusEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected void <b class="function">processInputMethodEvent</b> (java.awt.event.InputMethodEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processMouseEvent</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processMouseMotionEvent</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">action</b> (Event <i class="parameter">evt</i>, Object <i class="parameter">what</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Rectangle <b class="function">bounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">deliverEvent</b> (Event <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">disable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">enable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">enable</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public java.awt.peer.ComponentPeer <b class="function">getPeer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">gotFocus</b> (Event <i class="parameter">evt</i>, Object <i class="parameter">what</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">handleEvent</b> (Event <i class="parameter">evt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">hide</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">inside</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">keyDown</b> (Event <i class="parameter">evt</i>, int <i class="parameter">key</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">keyUp</b> (Event <i class="parameter">evt</i>, int <i class="parameter">key</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">layout</b> ();</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Component <b class="function">locate</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Point <b class="function">location</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">lostFocus</b> (Event <i class="parameter">evt</i>, Object <i class="parameter">what</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">minimumSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">mouseDown</b> (Event <i class="parameter">evt</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">mouseDrag</b> (Event <i class="parameter">evt</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">mouseEnter</b> (Event <i class="parameter">evt</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">mouseExit</b> (Event <i class="parameter">evt</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">mouseMove</b> (Event <i class="parameter">evt</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">mouseUp</b> (Event <i class="parameter">evt</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">move</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">nextFocus</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">postEvent</b> (Event <i class="parameter">e</i>);</td><td align="right"><i> Implements:MenuContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">preferredSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">reshape</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">resize</b> (Dimension <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">resize</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">show</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">show</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">size</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">Button, Canvas, Checkbox, Choice, Container, Label, java.awt.List, Scrollbar, TextComponent, javax.swing.Box.Filler</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span>Too many fields to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ComponentOrientation</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<p> 
  This class encapsulates differences in the way characters in
  GUI components are arranged into lines and the way
  lines are grouped into blocks.  In western languages like English,
  characters are arranged 
  left to right and lines are arranged top to bottom, but this is not true
  throughout the world.  In Hebrew, for example, characters are arranged
  from right to left, and in traditional Chinese, characters are
  arranged from top to bottom.</p>
<a name="INDEX-1402"></a>
<a name="INDEX-1403"></a>
<a name="INDEX-1404"></a>
<p>  The <tt class="literal">isHorizontal()</tt> and
  <tt class="literal">isLeftToRight()</tt> methods specify the necessary
  orientation information.  The class defines two constants for commonly
  used orientation types.  Authors of AWT, Swing, and JavaBeans components
  may want to take orientation into account when developing
  their components (see the <tt class="literal">getComponentOrientation()</tt>
  method of <tt class="literal">Component</tt>).  Applications that use these
  components should typically not have to worry about this
  class.</p>
<a name="INDEX-1405"></a>
<p>  You can query 
  the default orientation for a given <tt class="literal">java.util.Locale</tt> by
  calling the static 
<tt class="literal">getOrientation()</tt> method.  Set
  the <tt class="literal">componentOrientation</tt> property of all components
  in a window by passing a <tt class="literal">ResourceBundle</tt> object to
  the <tt class="literal">applyResourceBundle()</tt> method of a
  <tt class="literal">Window</tt>.  This looks up the "Orientation"
  resource in the bundle and, if it is not found, uses the
  default orientation for the locale of the bundle.</p>
<a name="INDEX-1406"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">ComponentOrientation</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final ComponentOrientation <b class="function">LEFT_TO_RIGHT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final ComponentOrientation <b class="function">RIGHT_TO_LEFT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final ComponentOrientation <b class="function">UNKNOWN</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static ComponentOrientation <b class="function">getOrientation</b> (java.util.ResourceBundle <i class="parameter">bdl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static ComponentOrientation <b class="function">getOrientation</b> (java.util.Locale <i class="parameter">locale</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isHorizontal</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLeftToRight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->ComponentOrientation(Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Component.setComponentOrientation()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Component.getComponentOrientation(), ComponentOrientation.getOrientation()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">ComponentOrientation.{LEFT_TO_RIGHT, RIGHT_TO_LEFT, UNKNOWN}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Composite</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1407"></a>
<a name="INDEX-1408"></a>
<a name="INDEX-1409"></a>
<p>  This interface defines how two colors are combined to yield a
  composite color.  When Java 2D performs a drawing operation, it uses a
  <tt class="literal">Composite</tt> object to combine the colors it wants to
  draw with the colors that already exist on the screen or in the
  off-screen image.</p>
<p>  The default compositing operation is to draw the new color on top of
  the color already on the screen.  If the new color is fully opaque,
  the existing color is ignored.  If the new color is partially
  transparent, however, it is combined with the color already
  on the screen to produce a composite color.  To specify a different
  compositing operation, 
  pass a <tt class="literal">Composite</tt> object to the
  <tt class="literal">setComposite()</tt> method of a
  <tt class="literal">Graphics2D</tt> object.</p>
<a name="INDEX-1410"></a>
<p>
<tt class="literal">AlphaComposite</tt> is a commonly used implementation of
  <tt class="literal">Composite</tt>; it combines colors in a number of
  possible ways based on their alpha-transparency levels.
  <tt class="literal">AlphaComposite</tt> is suitable for most uses; very few
  applications should have to define a custom implementation of
  <tt class="literal">Composite</tt>.</p>
<a name="INDEX-1411"></a>
<p>  Note that the only method of <tt class="literal">Composite</tt>,
  <tt class="literal">createContext()</tt>, does not perform compositing
  itself.  Instead, it returns a <tt class="literal">CompositeContext</tt>
  object suitable for compositing colors encoded using the specified
  color models and rendering hints.  It is the
  <tt class="literal">CompositeContext</tt> object that performs the actual
  work of combining colors.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Composite</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract CompositeContext <b class="function">createContext</b> (java.awt.image.ColorModel <i class="parameter">srcColorModel</i>, java.awt.image.ColorModel <i class="parameter">dstColorModel</i>, RenderingHints <i class="parameter">hints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AlphaComposite</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Graphics2D.setComposite()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Graphics2D.getComposite()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CompositeContext</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1412"></a>
<a name="INDEX-1413"></a>
<p> 
  This interface defines the methods that do the actual work of
  compositing colors.  The <tt class="literal">CompositeContext</tt> interface
  is used internally by Java 2D; applications never need to call
  <tt class="literal">CompositeContext</tt> methods.  And only applications that
  implement a custom <tt class="literal">Composite</tt> class need to
  implement this interface.</p>
<p>  A <tt class="literal">CompositeContext</tt> object holds the state for a
  particular compositing operation (in multi-threaded programs, there
  may be several compositing operations in progress at once).  A
  <tt class="literal">Graphics2D</tt> object creates
  <tt class="literal">CompositeContext</tt> objects as needed by calling the
  <tt class="literal">createContext()</tt> method of its
  <tt class="literal">Composite</tt> object.</p>
<a name="INDEX-1414"></a>
<a name="INDEX-1415"></a>
<p>  Once a <tt class="literal">CompositeContext</tt> object has been created,
  its <tt class="literal">compose()</tt> method is responsible for combining
  the colors of the first two <tt class="literal">Raster</tt> objects passed
  to it and storing the resulting colors in the specified
  <tt class="literal">WriteableRaster</tt>.  (This
  <tt class="literal">WriteableRaster</tt> is usually the same object as one
  of the first two arguments.)  The <tt class="literal">dispose()</tt> method
  should free any resources held by the
  <tt class="literal">CompositeContext</tt>.  It is called when the
  <tt class="literal">Graphics2D</tt> no longer requires the
  <tt class="literal">CompositeContext</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">CompositeContext</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">compose</b> (java.awt.image.Raster <i class="parameter">src</i>, java.awt.image.Raster <i class="parameter">dstIn</i>, java.awt.image.WritableRaster <i class="parameter">dstOut</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">dispose</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AlphaComposite.createContext(), Composite.createContext()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Container</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1</i></b></font></td>
</tr>
</table>

<a name="INDEX-1416"></a>
<p>
This class implements a component that can contain other components.
You cannot instantiate <tt class="literal">Container</tt> directly but must
use one of its subclasses,
such as <tt class="literal">Panel</tt>, <tt class="literal">Frame</tt>, or <tt class="literal">Dialog</tt>.
Once a <tt class="literal">Container</tt> is created, you can set its <tt class="literal">LayoutManager</tt>
with <tt class="literal">setLayout()</tt>, add components to it with
<tt class="literal">add()</tt>, and remove them with <tt class="literal">remove()</tt>.
<tt class="literal">getComponents()</tt> returns an array of the components
contained in a <tt class="literal">Container</tt>. <tt class="literal">locate()</tt>
determines within which contained component a specified
point falls.  <tt class="literal">list()</tt> produces helpful debugging
output.</p>
<a name="INDEX-1417"></a>
<a name="INDEX-1418"></a>
<a name="INDEX-1419"></a>
<a name="INDEX-1420"></a>
<a name="INDEX-1421"></a>
<a name="INDEX-1422"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Container</b> extends Component {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Container</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addContainerListener</b> (java.awt.event.ContainerListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeContainerListener</b> (java.awt.event.ContainerListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public float <b class="function">getAlignmentX</b> ();</td><td align="right"><i> Overrides:Component default:0.5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public float <b class="function">getAlignmentY</b> ();</td><td align="right"><i> Overrides:Component default:0.5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getComponentCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component[ ] <b class="function">getComponents</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setCursor</b> (Cursor <i class="parameter">cursor</i>);</td><td align="right"><i> Overrides:Component synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setFont</b> (Font <i class="parameter">f</i>);</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Insets <b class="function">getInsets</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public LayoutManager <b class="function">getLayout</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayout</b> (LayoutManager <i class="parameter">mgr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getMaximumSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getMinimumSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">add</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">add</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">add</b> (String <i class="parameter">name</i>, Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">add</b> (Component <i class="parameter">comp</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">add</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Component <b class="function">findComponentAt</b> (Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Component <b class="function">findComponentAt</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponent</b> (int <i class="parameter">n</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public boolean <b class="function">isAncestorOf</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintComponents</b> (Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">printComponents</b> (Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">remove</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAll</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">doLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Component <b class="function">getComponentAt</b> (Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Component <b class="function">getComponentAt</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">invalidate</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">list</b> (java.io.PrintWriter <i class="parameter">out</i>, int <i class="parameter">indent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">list</b> (java.io.PrintStream <i class="parameter">out</i>, int <i class="parameter">indent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">paint</b> (Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">print</b> (Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">update</b> (Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">validate</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">addImpl</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processContainerEvent</b> (java.awt.event.ContainerEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">validateTree</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">countComponents</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">deliverEvent</b> (Event <i class="parameter">e</i>);</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Insets <b class="function">insets</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">layout</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Component <b class="function">locate</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">minimumSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">preferredSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->Container</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">Panel, ScrollPane, Window, javax.swing.Box, javax.swing.CellRendererPane, javax.swing.JComponent, javax.swing.tree.DefaultTreeCellEditor.EditorContainer</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.JRootPane.contentPane, javax.swing.tree.DefaultTreeCellEditor.editingContainer</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Cursor</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable PJ1.1</i></b></font></td>
</tr>
</table>

<a name="INDEX-1423"></a>
<a name="INDEX-1424"></a>
<p>
This class represents a mouse cursor.  It defines a number
of constants, which represent the 14 predefined cursors provided
by Java 1.0 and Java 1.1.  You can pass
one of these constants to the
constructor to create a cursor of the specified type.  
Call <tt class="literal">getType()</tt> to determine the type of an existing
<tt class="literal">Cursor</tt> object.
Since there are only a fixed number of available cursors,
the static method <tt class="literal">getPredefinedCursor()</tt> is more
efficient than the <tt class="literal">Cursor()</tt> constructor--it
maintains a cache of <tt class="literal">Cursor</tt> objects that can be
reused.  The static <tt class="literal">getDefaultCursor()</tt> method
returns the default cursor for the underlying system.</p>
<a name="INDEX-1425"></a>
<a name="INDEX-1426"></a>
<a name="INDEX-1427"></a>
<a name="INDEX-1428"></a>
<p>In Java 1.2, the <tt class="literal">Cursor</tt> class has a new 
<tt class="literal">getSystemCustomCursor()</tt> method that returns a named
cursor defined by a system administrator in a
systemwide <em class="emphasis">cursors.properties</em> file.  Since
there is no way to query the list of system-specific custom
cursors, however, this method is rarely used.  Instead,
you can create your own custom cursor by calling the
<tt class="literal">createCustomCursor()</tt> method of the
<tt class="literal">Toolkit</tt> object.  You should first
check whether custom cursors are supported by calling the
<tt class="literal">getBestCursorSize()</tt> method of 
<tt class="literal">Toolkit</tt>.  If this method indicates a width or
height of 0, custom cursors are not supported (by either the Java
implementation or the underlying windowing system).  </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Cursor</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Cursor</b> (int <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected <b class="function">Cursor</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CROSSHAIR_CURSOR</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">CUSTOM_CURSOR</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DEFAULT_CURSOR</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">E_RESIZE_CURSOR</b> ;</td><td align="right"><i> =11</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HAND_CURSOR</b> ;</td><td align="right"><i> =12</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOVE_CURSOR</b> ;</td><td align="right"><i> =13</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">N_RESIZE_CURSOR</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NE_RESIZE_CURSOR</b> ;</td><td align="right"><i> =7</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NW_RESIZE_CURSOR</b> ;</td><td align="right"><i> =6</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">S_RESIZE_CURSOR</b> ;</td><td align="right"><i> =9</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SE_RESIZE_CURSOR</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SW_RESIZE_CURSOR</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TEXT_CURSOR</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">W_RESIZE_CURSOR</b> ;</td><td align="right"><i> =10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WAIT_CURSOR</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Cursor <b class="function">getDefaultCursor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Cursor <b class="function">getPredefinedCursor</b> (int <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static Cursor <b class="function">getSystemCustomCursor</b> (String <i class="parameter">name</i>) throws AWTException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Class Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static Cursor[ ] <b class="function">predefined</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected String <b class="function">name</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Cursor(Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">Cursor.predefined, java.awt.dnd.DragSource.{DefaultCopyDrop, DefaultCopyNoDrop, DefaultLinkDrop, DefaultLinkNoDrop, DefaultMoveDrop, DefaultMoveNoDrop}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Dialog</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1(mod)</i></b></font></td>
</tr>
</table>

<a name="INDEX-1429"></a>
<a name="INDEX-1430"></a>
<a name="INDEX-1431"></a>
<p>
This class represents a dialog box window.  A <tt class="literal">Dialog</tt>
can be modal, so that it blocks user input to all other
windows until dismissed. It is optional whether a dialog
has a title and whether it is resizable.  A <tt class="literal">Dialog</tt> object is a
<tt class="literal">Container</tt>, so you can add <tt class="literal">Component</tt> objects 
to it in the normal way with the <tt class="literal">add()</tt> method.  The
default <tt class="literal">LayoutManager</tt> for <tt class="literal">Dialog</tt> is
<tt class="literal">BorderLayout</tt>.  You can specify a different
<tt class="literal">LayoutManager</tt> object with <tt class="literal">setLayout()</tt>.
Call the <tt class="literal">pack()</tt> method of <tt class="literal">Window</tt> to initiate
layout management of the dialog and set its initial size
appropriately. 
Call <tt class="literal">show()</tt> to pop a dialog up and <tt class="literal">setVisible(false)</tt>
to pop it down.  For modal dialogs, <tt class="literal">show()</tt>
blocks until the dialog is dismissed.  Event handling
continues while <tt class="literal">show()</tt> is blocked, using a new event
dispatcher thread.  In Java 1.0, <tt class="literal">show()</tt> is inherited
from <tt class="literal">Window</tt>.  Call the <tt class="literal">Window.dispose()</tt> method
when the <tt class="literal">Dialog</tt> is no longer needed so that its
window system resources may be reused.</p>
<a name="INDEX-1432"></a>
<a name="INDEX-1433"></a>
<a name="INDEX-1434"></a>
<a name="INDEX-1435"></a>
<p>  In Personal Java environments, support for modeless dialogs is
  optional, and the <tt class="literal">Dialog()</tt> constructors can throw
  an exception if you attempt to create a modeless dialog.  Also, the
  <tt class="literal">setResizable()</tt> method is optional, and calls to it
  can be ignored.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Dialog</b> extends Window {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">Dialog</b> (Frame <i class="parameter">owner</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">Dialog</b> (Dialog <i class="parameter">owner</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">Dialog</b> (Dialog <i class="parameter">owner</i>, String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">Dialog</b> (Frame <i class="parameter">owner</i>, String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Dialog</b> (Frame <i class="parameter">owner</i>, boolean <i class="parameter">modal</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Dialog</b> (Frame <i class="parameter">owner</i>, String <i class="parameter">title</i>, boolean <i class="parameter">modal</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">Dialog</b> (Dialog <i class="parameter">owner</i>, String <i class="parameter">title</i>, boolean <i class="parameter">modal</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isModal</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setModal</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isResizable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setResizable</b> (boolean <i class="parameter">resizable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getTitle</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTitle</b> (String <i class="parameter">title</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Window</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">dispose</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">hide</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">show</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->Container-->Window-->Dialog</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">FileDialog, javax.swing.JDialog</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Dialog.Dialog(), Toolkit.createDialog(), javax.swing.JDialog.JDialog()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Dimension</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>
<a name="INDEX-1436"></a>
<p> 
  This class contains two integer fields that describe a width
  and a height of something.  The fields are public and can be
  manipulated directly.</p>
<p>  In Java 1.0 and Java 1.1, <tt class="literal">Dimension</tt> is a subclass of
  <tt class="literal">Object</tt>.  In Java 1.2, with the introduction of
  Java 2D, it has become a concrete subclass of
  <tt class="literal">java.awt.geom.Dimension2D</tt>.  Contrast 
  <tt class="literal">Dimension</tt> with
  <tt class="literal">Dimension2D</tt>,which represents the width and
  height with <tt class="literal">double</tt> values.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Dimension</b> extends java.awt.geom.Dimension2D implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Dimension</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Dimension</b> (Dimension <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Dimension</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setSize</b> (Dimension <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setSize</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Dimension2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public double <b class="function">getHeight</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public double <b class="function">getWidth</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setSize</b> (double <i class="parameter">width</i>, double <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">height</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">width</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.awt.geom.Dimension2D(Cloneable)-->Dimension(Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.plaf.DimensionUIResource</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.JTable.preferredViewportSize</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Event</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable PJ1.1</i></b></font></td>
</tr>
</table>

<a name="INDEX-1437"></a>
<a name="INDEX-1438"></a>
<p>
This class contains public instance variables that describe
some kind of GUI event.  In Java 1.1, this class has been
superseded by <tt class="literal">AWTEvent</tt> and the
<tt class="literal">java.awt.event</tt> package.</p>
<p>The class contains a large number
of constants.  Some of the constants specify the event type
and are values for the <tt class="literal">id</tt> variable.  Other constants
are values for keys, such as the function keys, that do not
have ASCII (Latin-1) values and are set on the
<tt class="literal">key</tt> field.  Other constants are mask values that are
ORed into the <tt class="literal">modifiers</tt> field to describe the state
of the modifier keys on the keyboard.  The <tt class="literal">target</tt>
field is very important--it is the object for which the
event occurred.  The <tt class="literal">when</tt> field specifies when the
event occurred.  The <tt class="literal">x</tt> and <tt class="literal">y</tt> fields specify
the mouse coordinates at which it occurred.  Finally, the
<tt class="literal">arg</tt> field is a value specific to the type of the
event.  Not all fields have valid values for all types of
events.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Event</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Event</b> (Object <i class="parameter">target</i>, int <i class="parameter">id</i>, Object <i class="parameter">arg</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Event</b> (Object <i class="parameter">target</i>, long <i class="parameter">when</i>, int <i class="parameter">id</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">key</i>, int <i class="parameter">modifiers</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Event</b> (Object <i class="parameter">target</i>, long <i class="parameter">when</i>, int <i class="parameter">id</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">key</i>, int <i class="parameter">modifiers</i>, Object <i class="parameter">arg</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ACTION_EVENT</b> ;</td><td align="right"><i> =1001</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ALT_MASK</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">BACK_SPACE</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">CAPS_LOCK</b> ;</td><td align="right"><i> =1022</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CTRL_MASK</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">DELETE</b> ;</td><td align="right"><i> =127</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DOWN</b> ;</td><td align="right"><i> =1005</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">END</b> ;</td><td align="right"><i> =1001</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">ENTER</b> ;</td><td align="right"><i> =10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">ESCAPE</b> ;</td><td align="right"><i> =27</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">F1</b> ;</td><td align="right"><i> =1008</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">F10</b> ;</td><td align="right"><i> =1017</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">F11</b> ;</td><td align="right"><i> =1018</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">F12</b> ;</td><td align="right"><i> =1019</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">F2</b> ;</td><td align="right"><i> =1009</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">F3</b> ;</td><td align="right"><i> =1010</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">F4</b> ;</td><td align="right"><i> =1011</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">F5</b> ;</td><td align="right"><i> =1012</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">F6</b> ;</td><td align="right"><i> =1013</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">F7</b> ;</td><td align="right"><i> =1014</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">F8</b> ;</td><td align="right"><i> =1015</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">F9</b> ;</td><td align="right"><i> =1016</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">GOT_FOCUS</b> ;</td><td align="right"><i> =1004</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HOME</b> ;</td><td align="right"><i> =1000</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">INSERT</b> ;</td><td align="right"><i> =1025</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">KEY_ACTION</b> ;</td><td align="right"><i> =403</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">KEY_ACTION_RELEASE</b> ;</td><td align="right"><i> =404</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">KEY_PRESS</b> ;</td><td align="right"><i> =401</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">KEY_RELEASE</b> ;</td><td align="right"><i> =402</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LEFT</b> ;</td><td align="right"><i> =1006</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LIST_DESELECT</b> ;</td><td align="right"><i> =702</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LIST_SELECT</b> ;</td><td align="right"><i> =701</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LOAD_FILE</b> ;</td><td align="right"><i> =1002</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LOST_FOCUS</b> ;</td><td align="right"><i> =1005</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">META_MASK</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_DOWN</b> ;</td><td align="right"><i> =501</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_DRAG</b> ;</td><td align="right"><i> =506</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_ENTER</b> ;</td><td align="right"><i> =504</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_EXIT</b> ;</td><td align="right"><i> =505</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_MOVE</b> ;</td><td align="right"><i> =503</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_UP</b> ;</td><td align="right"><i> =502</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">NUM_LOCK</b> ;</td><td align="right"><i> =1023</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">PAUSE</b> ;</td><td align="right"><i> =1024</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PGDN</b> ;</td><td align="right"><i> =1003</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PGUP</b> ;</td><td align="right"><i> =1002</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">PRINT_SCREEN</b> ;</td><td align="right"><i> =1020</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">RIGHT</b> ;</td><td align="right"><i> =1007</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SAVE_FILE</b> ;</td><td align="right"><i> =1003</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SCROLL_ABSOLUTE</b> ;</td><td align="right"><i> =605</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">SCROLL_BEGIN</b> ;</td><td align="right"><i> =606</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">SCROLL_END</b> ;</td><td align="right"><i> =607</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SCROLL_LINE_DOWN</b> ;</td><td align="right"><i> =602</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SCROLL_LINE_UP</b> ;</td><td align="right"><i> =601</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">SCROLL_LOCK</b> ;</td><td align="right"><i> =1021</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SCROLL_PAGE_DOWN</b> ;</td><td align="right"><i> =604</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SCROLL_PAGE_UP</b> ;</td><td align="right"><i> =603</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SHIFT_MASK</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">TAB</b> ;</td><td align="right"><i> =9</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">UP</b> ;</td><td align="right"><i> =1004</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_DEICONIFY</b> ;</td><td align="right"><i> =204</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_DESTROY</b> ;</td><td align="right"><i> =201</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_EXPOSE</b> ;</td><td align="right"><i> =202</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_ICONIFY</b> ;</td><td align="right"><i> =203</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_MOVED</b> ;</td><td align="right"><i> =205</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">controlDown</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">metaDown</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">shiftDown</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">translate</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">arg</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">clickCount</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Event <b class="function">evt</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">id</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">key</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">modifiers</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">target</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public long <b class="function">when</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">x</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">y</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Event(Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">Event.evt</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>EventQueue</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<a name="INDEX-1439"></a>
<a name="INDEX-1440"></a>
<p>
This class implements an event queue for AWT events in Java
1.1.  When an <tt class="literal">EventQueue</tt> is created, a new thread is
automatically created and started to remove events from the
front of the queue and dispatch them to the appropriate
component.  It is this thread, created by the
<tt class="literal">EventQueue</tt>, that notifies event listeners and
executes most of the code in a typical GUI-driven
application.</p>
<p>An application can create and use its own private
<tt class="literal">EventQueue</tt>, but all AWT events are placed on and
dispatched from a single system <tt class="literal">EventQueue</tt>.  Use the
<tt class="literal">getSystemEventQueue()</tt> method of the <tt class="literal">Toolkit</tt>
class to get the system <tt class="literal">EventQueue</tt> object.</p>
<a name="INDEX-1441"></a>
<a name="INDEX-1442"></a>
<a name="INDEX-1443"></a>
<p>
<tt class="literal">getNextEvent()</tt> removes and returns the event at the
front of the queue.  It blocks if there are no events in
the queue.  <tt class="literal">peekEvent()</tt> returns the event at the
front of the queue without removing it from the queue.
Passed an optional <tt class="literal">AWTEvent</tt><tt class="literal">id</tt> field, it
returns the first event of the specified type.  Finally,
<tt class="literal">postEvent()</tt> places a new event on the end of the
event queue.</p>
<a name="INDEX-1444"></a>
<a name="INDEX-1445"></a>
<p>In Java 1.2, <tt class="literal">EventQueue</tt> defines three useful static methods.  <tt class="literal">isDispatchThread()</tt> returns <tt class="literal">true</tt> if the calling thread is the AWT event dispatch thread.  To avoid thread-safety issues, all modifications to AWT and Swing components should be done from this dispatch thread.  If another thread needs to operate on a component, it should wrap the desired operation in a <tt class="literal">Runnable</tt> object and pass that object to <tt class="literal">invokeLater()</tt> or <tt class="literal">invokeAndWait()</tt>.  These methods bundle the <tt class="literal">Runnable</tt> object into an <tt class="literal">ActiveEvent</tt> that is placed on the queue.  When the <tt class="literal">ActiveEvent</tt> reaches the head of the queue, the <tt class="literal">Runnable</tt> code is invoked by the event dispatch thread and can safely modify any AWT and Swing components.
<tt class="literal">invokeLater()</tt> returns immediately, while <tt class="literal">invokeAndWait()</tt> blocks until the <tt class="literal">Runnable</tt> code has been run.  It is an error to call <tt class="literal">invokeAndWait()</tt> from the event dispatch thread itself.  See also <tt class="literal">ActiveEvent</tt> and <tt class="literal">javax.swing.SwingUtilities</tt>.  Except for these useful static methods, most applications do not need 

to use the <tt class="literal">EventQueue</tt> class at all; they can simply rely on the system to dispatch events automatically.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">EventQueue</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">EventQueue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static void <b class="function">invokeAndWait</b> (Runnable <i class="parameter">runnable</i>) throws InterruptedException, java.lang.reflect.InvocationTargetException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static void <b class="function">invokeLater</b> (Runnable <i class="parameter">runnable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static boolean <b class="function">isDispatchThread</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AWTEvent <b class="function">getNextEvent</b> () throws InterruptedException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AWTEvent <b class="function">peekEvent</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AWTEvent <b class="function">peekEvent</b> (int <i class="parameter">id</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">postEvent</b> (AWTEvent <i class="parameter">theEvent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">push</b> (EventQueue <i class="parameter">newEventQueue</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected void <b class="function">dispatchEvent</b> (AWTEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected void <b class="function">pop</b> () throws java.util.EmptyStackException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">EventQueue.push()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Toolkit.{getSystemEventQueue(), getSystemEventQueueImpl()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FileDialog</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1(opt)</i></b></font></td>
</tr>
</table>

<a name="INDEX-1446"></a>
<a name="INDEX-1447"></a>
<a name="INDEX-1448"></a>
<p>
This class represents a file selection dialog box.  The
constants <tt class="literal">LOAD</tt> and <tt class="literal">SAVE</tt> are values of an
optional constructor argument that specifies whether the
dialog should be an <b class="emphasis-bold">Open File</b> dialog or a <b class="emphasis-bold">Save As</b>
dialog.    You may
specify a <tt class="literal">FilenameFilter</tt> object to control the
files that are displayed in the dialog.</p>
<a name="INDEX-1449"></a>
<a name="INDEX-1450"></a>
<p>The inherited <tt class="literal">show()</tt> method pops the dialog up.  For
dialogs of this type, <tt class="literal">show()</tt> blocks, not returning
until the user has selected a file and dismissed the dialog
(which pops down automatically--you don't have to call
<tt class="literal">hide()</tt>).  Once <tt class="literal">show()</tt> has returned, use
<tt class="literal">getFile()</tt> to get the name of the file the user
selected. </p>
<a name="INDEX-1451"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">FileDialog</b> extends Dialog {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">FileDialog</b> (Frame <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FileDialog</b> (Frame <i class="parameter">parent</i>, String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FileDialog</b> (Frame <i class="parameter">parent</i>, String <i class="parameter">title</i>, int <i class="parameter">mode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LOAD</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SAVE</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getDirectory</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDirectory</b> (String <i class="parameter">dir</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getFile</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFile</b> (String <i class="parameter">file</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.io.FilenameFilter <b class="function">getFilenameFilter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFilenameFilter</b> (java.io.FilenameFilter <i class="parameter">filter</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setMode</b> (int <i class="parameter">mode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Dialog</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Dialog</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->Container-->Window-->Dialog-->FileDialog</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.createFileDialog()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FlowLayout</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable layout manager PJ1.1</i></b></font></td>
</tr>
</table>

<a name="INDEX-1452"></a>
<a name="INDEX-1453"></a>
<p>
A <tt class="literal">LayoutManager</tt> that
arranges components in a container
likes words on a page: from left to right and top to bottom.
It fits as many components as it can in a row before
moving on to the next row. The constructor allows you to specify one of five constants as an alignment value for the rows.  <tt class="literal">LEFT</tt>, <tt class="literal">CENTER</tt>, and <tt class="literal">RIGHT</tt> specify left, center, and right alignment, obviously.  <tt class="literal">LEADING</tt> and <tt class="literal">TRAILING</tt> alignment are the same as <tt class="literal">LEFT</tt> and <tt class="literal">RIGHT</tt> alignment in locales where writing is done left to right, but they have the opposite meaning in locales where writing is done primarily right to left.  You can also specify the horizontal spacing
between components and the vertical spacing between rows.</p>
<p>Applications should never call the
<tt class="literal">LayoutManager</tt> methods of this class directly; the
<tt class="literal">Container</tt> for which the <tt class="literal">FlowLayout</tt> is
registered does this.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">FlowLayout</b> implements LayoutManager, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FlowLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FlowLayout</b> (int <i class="parameter">align</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FlowLayout</b> (int <i class="parameter">align</i>, int <i class="parameter">hgap</i>, int <i class="parameter">vgap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CENTER</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">LEADING</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LEFT</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">RIGHT</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">TRAILING</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getAlignment</b> ();</td><td align="right"><i> default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setAlignment</b> (int <i class="parameter">align</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getHgap</b> ();</td><td align="right"><i> default:5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setHgap</b> (int <i class="parameter">hgap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getVgap</b> ();</td><td align="right"><i> default:5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setVgap</b> (int <i class="parameter">vgap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addLayoutComponent</b> (String <i class="parameter">name</i>, Component <i class="parameter">comp</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">layoutContainer</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Dimension <b class="function">minimumLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Dimension <b class="function">preferredLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeLayoutComponent</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->FlowLayout(LayoutManager,Serializable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Font</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable PJ1.1</i></b></font></td>
</tr>
</table>
<a name="INDEX-1454"></a>
<a name="INDEX-1455"></a>
<p>  This class represents a font.  The <tt class="literal">Font()</tt>
  constructor is passed a name, a style, and a point size.  The style
  should be one of the constants <tt class="literal">PLAIN</tt>,
  <tt class="literal">BOLD</tt>, or <tt class="literal">ITALIC</tt> or the sum
  <tt class="literal">BOLD+ITALIC</tt>.  </p>
<p>  The allowed font names have changed with each release of Java.  In Java
  1.0, the supported font names are "TimesRoman", "Helvetica",
  "Courier", "Dialog", "DialogInput", and "Symbol".  In Java 1.1,
  "serif", "sansserif", 

and "monospaced" should be used in preference to
  the first three names.  </p>
<p>  With the introduction of Java 2D, you may
  continue to use these logical names, but you are not limited to them.
  In Java 1.2, you may specify the name of any font family available on
  the system.  These are names such as "Times New Roman," "Arial," "New
  Century Schoolbook," "Bookman," and so on.  You can obtain a list of
  available font families by calling the
  <tt class="literal">getAvailableFontFamilyNames()</tt> method of
  <tt class="literal">GraphicsEnvironment</tt>.
  You may also pass the name of a specific font face to the
  <tt class="literal">Font()</tt> constructor.  These are names such as
  "Copperplate DemiBold Oblique."  When you specify the name of a specific
  font face, you typically specify a font style of
  <tt class="literal">PLAIN</tt>, since the style you want is implicit in the
  name. </p>
<p>  With Java 1.2, you can also create a font by passing a
  <tt class="literal">Map</tt> object that contains attribute names and values to
  either the <tt class="literal">Font()</tt> constructor or the static
  <tt class="literal">getFont()</tt> method.  The attribute names and values
  are defined by <tt class="literal">java.awt.font.TextAttribute</tt>.  The
  <tt class="literal">TextAttribute</tt> constants <tt class="literal">FAMILY</tt>,
  <tt class="literal">WEIGHT</tt>, <tt class="literal">POSTURE</tt>, and
  <tt class="literal">SIZE</tt> identify the attributes of interest.</p>
<p>  In Java 1.2, new fonts can be derived from old fonts in a variety of
  ways, using the <tt class="literal">deriveFont()</tt> methods.  Most
  generally, the glyphs of a font may all be transformed with the
  specified <tt class="literal">AffineTransform</tt>.</p>
<a name="INDEX-1456"></a>
<p>  If you need to know the height or width (or other metrics)
  of characters or strings drawn using a <tt class="literal">Font</tt>,
  call the <tt class="literal">getFontMetrics()</tt> method of a
  <tt class="literal">Graphics</tt> object to obtain a
  <tt class="literal">FontMetrics</tt> object.  The methods of this object
  return font measurement information as integer values.  In Java 1.2, you
  can obtain higher-precision floating-point font measurements with the
  <tt class="literal">getLineMetrics()</tt>,
  <tt class="literal">getMaxCharBounds()</tt>, and
  <tt class="literal">getStringBounds()</tt> methods of a
  <tt class="literal">Font</tt>.  These methods require a
  <tt class="literal">FontRenderContext</tt>, which is obtained by calling the
  <tt class="literal">getFontRenderContext()</tt> method of 
  <tt class="literal">Graphics2D</tt>.</p>
<a name="INDEX-1457"></a>
<a name="INDEX-1458"></a>
<p>  The <tt class="literal">canDisplay()</tt> method tests whether a
  <tt class="literal">Font</tt> can display a given character (i.e., whether
  the font contains a glyph for that character).
  <tt class="literal">canDisplayUpTo()</tt> tests whether the
  <tt class="literal">Font</tt> can display all the characters in a string
  and returns the index of the first character it cannot display.</p>
<a name="INDEX-1459"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Font</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">Font</b> (java.util.Map <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Font</b> (String <i class="parameter">name</i>, int <i class="parameter">style</i>, int <i class="parameter">size</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BOLD</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">CENTER_BASELINE</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">HANGING_BASELINE</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ITALIC</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PLAIN</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">ROMAN_BASELINE</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static Font <b class="function">decode</b> (String <i class="parameter">str</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static Font <b class="function">getFont</b> (java.util.Map <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Font <b class="function">getFont</b> (String <i class="parameter">nm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Font <b class="function">getFont</b> (String <i class="parameter">nm</i>, Font <i class="parameter">font</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.util.Map <b class="function">getAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.text.AttributedCharacterIterator.Attribute[ ] <b class="function">getAvailableAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBold</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getFamily</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public String <b class="function">getFamily</b> (java.util.Locale <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public String <b class="function">getFontName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public String <b class="function">getFontName</b> (java.util.Locale <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isItalic</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public float <b class="function">getItalicAngle</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">getMissingGlyphCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">getNumGlyphs</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isPlain</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public String <b class="function">getPSName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public float <b class="function">getSize2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getStyle</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.AffineTransform <b class="function">getTransform</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">canDisplay</b> (char <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">canDisplayUpTo</b> (String <i class="parameter">str</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">canDisplayUpTo</b> (char[ ] <i class="parameter">text</i>, int <i class="parameter">start</i>, int <i class="parameter">limit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">canDisplayUpTo</b> (java.text.CharacterIterator <i class="parameter">iter</i>, int <i class="parameter">start</i>, int <i class="parameter">limit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.font.GlyphVector <b class="function">createGlyphVector</b> (java.awt.font.FontRenderContext <i class="parameter">frc</i>, java.text.CharacterIterator <i class="parameter">ci</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.font.GlyphVector <b class="function">createGlyphVector</b> (java.awt.font.FontRenderContext <i class="parameter">frc</i>, char[ ] <i class="parameter">chars</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.font.GlyphVector <b class="function">createGlyphVector</b> (java.awt.font.FontRenderContext <i class="parameter">frc</i>, int[ ] <i class="parameter">glyphCodes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.font.GlyphVector <b class="function">createGlyphVector</b> (java.awt.font.FontRenderContext <i class="parameter">frc</i>, String <i class="parameter">str</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Font <b class="function">deriveFont</b> (float <i class="parameter">size</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Font <b class="function">deriveFont</b> (int <i class="parameter">style</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Font <b class="function">deriveFont</b> (java.awt.geom.AffineTransform <i class="parameter">trans</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Font <b class="function">deriveFont</b> (java.util.Map <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Font <b class="function">deriveFont</b> (int <i class="parameter">style</i>, java.awt.geom.AffineTransform <i class="parameter">trans</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Font <b class="function">deriveFont</b> (int <i class="parameter">style</i>, float <i class="parameter">size</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public byte <b class="function">getBaselineFor</b> (char <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.font.LineMetrics <b class="function">getLineMetrics</b> (String <i class="parameter">str</i>, java.awt.font.FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.font.LineMetrics <b class="function">getLineMetrics</b> (char[ ] <i class="parameter">chars</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">limit</i>, java.awt.font.FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.font.LineMetrics <b class="function">getLineMetrics</b> (java.text.CharacterIterator <i class="parameter">ci</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">limit</i>, java.awt.font.FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.font.LineMetrics <b class="function">getLineMetrics</b> (String <i class="parameter">str</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">limit</i>, java.awt.font.FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getMaxCharBounds</b> (java.awt.font.FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getStringBounds</b> (String <i class="parameter">str</i>, java.awt.font.FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getStringBounds</b> (char[ ] <i class="parameter">chars</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">limit</i>, java.awt.font.FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getStringBounds</b> (java.text.CharacterIterator <i class="parameter">ci</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">limit</i>, java.awt.font.FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getStringBounds</b> (String <i class="parameter">str</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">limit</i>, java.awt.font.FontRenderContext <i class="parameter">frc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">hasUniformLineMetrics</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected void <b class="function">finalize</b> () throws Throwable;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">name</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected float <b class="function">pointSize</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">size</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">style</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1#</span></td><td align="left">public java.awt.peer.FontPeer <b class="function">getPeer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Font(Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.plaf.FontUIResource</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">FontMetrics.font, javax.swing.border.TitledBorder.titleFont, javax.swing.tree.DefaultTreeCellEditor.font</tt>
</p>
<a name="INDEX-1460"></a>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FontMetrics</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable PJ1.1</i></b></font></td>
</tr>
</table>
<a name="INDEX-1461"></a>
<p> 
  This class represents font metrics for a specified
  <tt class="literal">Font</tt>.  The methods allow you to determine the
  overall metrics for the font (ascent, descent, and so on) and 
  compute the width of strings that are to be displayed in a particular
  font.  The <tt class="literal">FontMetrics()</tt> constructor is protected;
  you can obtain a <tt class="literal">FontMetrics</tt> object for a font with
  the <tt class="literal">getFontMetrics()</tt> method of
  <tt class="literal">Component</tt>, <tt class="literal">Graphics</tt>, 
  or <tt class="literal">Toolkit</tt>.</p>
<a name="INDEX-1462"></a>
<p>  In Java 1.2, with the introduction of Java 2D, you can obtain more
  precise (floating-point) metrics using the
  <tt class="literal">getLineMetrics()</tt>,
  <tt class="literal">getMaxCharBounds()</tt>, and
  <tt class="literal">getStringBounds()</tt> methods of
  <tt class="literal">FontMetrics</tt> or a <tt class="literal">Font</tt> object
  itself.  See also <tt class="literal">java.awt.font.LineMetrics</tt>.</p>
<a name="INDEX-1463"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">FontMetrics</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">FontMetrics</b> (Font <i class="parameter">font</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAscent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDescent</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Font <b class="function">getFont</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getHeight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLeading</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaxAdvance</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaxAscent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaxDescent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">getWidths</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">bytesWidth</b> (byte[ ] <i class="parameter">data</i>, int <i class="parameter">off</i>, int <i class="parameter">len</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">charsWidth</b> (char[ ] <i class="parameter">data</i>, int <i class="parameter">off</i>, int <i class="parameter">len</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">charWidth</b> (int <i class="parameter">ch</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">charWidth</b> (char <i class="parameter">ch</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.font.LineMetrics <b class="function">getLineMetrics</b> (String <i class="parameter">str</i>, Graphics <i class="parameter">context</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.font.LineMetrics <b class="function">getLineMetrics</b> (char[ ] <i class="parameter">chars</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">limit</i>, Graphics <i class="parameter">context</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.font.LineMetrics <b class="function">getLineMetrics</b> (java.text.CharacterIterator <i class="parameter">ci</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">limit</i>, Graphics <i class="parameter">context</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.font.LineMetrics <b class="function">getLineMetrics</b> (String <i class="parameter">str</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">limit</i>, Graphics <i class="parameter">context</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getMaxCharBounds</b> (Graphics <i class="parameter">context</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getStringBounds</b> (String <i class="parameter">str</i>, Graphics <i class="parameter">context</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getStringBounds</b> (char[ ] <i class="parameter">chars</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">limit</i>, Graphics <i class="parameter">context</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getStringBounds</b> (java.text.CharacterIterator <i class="parameter">ci</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">limit</i>, Graphics <i class="parameter">context</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getStringBounds</b> (String <i class="parameter">str</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">limit</i>, Graphics <i class="parameter">context</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">hasUniformLineMetrics</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">stringWidth</b> (String <i class="parameter">str</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Font <b class="function">font</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">getMaxDecent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->FontMetrics(Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.SwingUtilities.{computeStringWidth(), layoutCompoundLabel()}, javax.swing.text.Utilities.{getBreakLocation(), getTabbedTextOffset(), getTabbedTextWidth()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.text.PlainView.metrics</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Frame</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1(mod)</i></b></font></td>
</tr>
</table>

<a name="INDEX-1464"></a>
<a name="INDEX-1465"></a>
<a name="INDEX-1466"></a>
<a name="INDEX-1467"></a>
<a name="INDEX-1468"></a>
<a name="INDEX-1469"></a>
<a name="INDEX-1470"></a>
<p>
This class represents an optionally resizable top-level
application window with a titlebar and other
platform-dependent window decorations.  <tt class="literal">setTitle()</tt>
specifies a title, <tt class="literal">setMenuBar()</tt> specifies a menu
bar, <tt class="literal">setCursor()</tt> specifies a cursor, and
<tt class="literal">setIconImage()</tt> specifies an icon for the window. Call the <tt class="literal">pack()</tt> method of <tt class="literal">Window</tt> to initiate
layout management of the window and set its initial size
appropriately. 
Call the <tt class="literal">show()</tt> method of <tt class="literal">Window</tt> to make 
the window appear and be brought to the top of the window stack.  
Call <tt class="literal">setVisible(false)</tt> to make the window disappear.  
Call <tt class="literal">setState(Frame.ICONIFIED)</tt> to iconify the window, and call <tt class="literal">setState(Frame.NORMAL)</tt> to deiconify it.  Use <tt class="literal">getState()</tt> to determine whether the window is iconified or not.  Call the static <tt class="literal">getFrames()</tt> method to obtain an array of all <tt class="literal">Frame</tt> objects that have been created by the application or applet.  Call the <tt class="literal">dispose()</tt> method when the <tt class="literal">Frame</tt> is 
no longer needed, so that it can release its window system 
resources for reuse.</p>
<a name="INDEX-1471"></a>
<a name="INDEX-1472"></a>
<a name="INDEX-1473"></a>
<a name="INDEX-1474"></a>
<p>The constants defined by this class specify various cursor
types.  As of Java 1.1, these constants and the cursor methods
of <tt class="literal">Frame</tt> are deprecated in favor of the
<tt class="literal">Cursor</tt> class and cursor methods of
<tt class="literal">Component</tt>.</p>
<p>  Personal Java environments can support only a single
  <tt class="literal">Frame</tt> object, and any calls to the
  <tt class="literal">Frame()</tt> constructor after the first can throw an
  exception.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Frame</b> extends Window implements MenuContainer {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Frame</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Frame</b> (String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">ICONIFIED</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">NORMAL</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static Frame[ ] <b class="function">getFrames</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Image <b class="function">getIconImage</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setIconImage</b> (Image <i class="parameter">image</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuBar <b class="function">getMenuBar</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMenuBar</b> (MenuBar <i class="parameter">mb</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isResizable</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setResizable</b> (boolean <i class="parameter">resizable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">getState</b> ();</td><td align="right"><i> synchronized default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setState</b> (int <i class="parameter">state</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getTitle</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTitle</b> (String <i class="parameter">title</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MenuContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (MenuComponent <i class="parameter">m</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Window</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Window</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected void <b class="function">finalize</b> () throws Throwable;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">removeNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">getCursorType</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setCursor</b> (int <i class="parameter">cursorType</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">CROSSHAIR_CURSOR</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">DEFAULT_CURSOR</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">E_RESIZE_CURSOR</b> ;</td><td align="right"><i> =11</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">HAND_CURSOR</b> ;</td><td align="right"><i> =12</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">MOVE_CURSOR</b> ;</td><td align="right"><i> =13</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">N_RESIZE_CURSOR</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">NE_RESIZE_CURSOR</b> ;</td><td align="right"><i> =7</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">NW_RESIZE_CURSOR</b> ;</td><td align="right"><i> =6</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">S_RESIZE_CURSOR</b> ;</td><td align="right"><i> =9</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">SE_RESIZE_CURSOR</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">SW_RESIZE_CURSOR</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">TEXT_CURSOR</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">W_RESIZE_CURSOR</b> ;</td><td align="right"><i> =10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static final int <b class="function">WAIT_CURSOR</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->Container-->Window-->Frame(MenuContainer)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.JFrame</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Frame.getFrames(), javax.swing.JOptionPane.{getFrameForComponent(), getRootFrame()}</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GradientPaint</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1475"></a>
<p>  This implementation of <tt class="literal">Paint</tt> fills shapes with a
  color gradient.  To use a <tt class="literal">GradientPaint</tt> object for
  filling shapes, pass it to the <tt class="literal">setPaint()</tt> method
  of a <tt class="literal">Graphics2D</tt> object.</p>
<a name="INDEX-1476"></a>
<p>  The color of the fill varies linearly between a color <tt class="literal">C1</tt> 
  and another
  color <tt class="literal">C2</tt>.  
  The orientation of the color gradient is defined by a line
  between points <tt class="literal">P1</tt> and <tt class="literal">P2</tt>.  
  For example, if these points define a
  horizontal line, the color of the fill varies from left to
  right.  If <tt class="literal">P1</tt> is 
  at the upper left of a rectangle and <tt class="literal">P2</tt> is at the
  lower right, the fill color varies from upper left to lower right.</p>
<p>  Color <tt class="literal">C1</tt> is always used at point <tt class="literal">P1</tt> 
  and color <tt class="literal">C2</tt> is used at <tt class="literal">P2</tt>.  If
  the area to be filled includes points outside of the fill region
  defined by <tt class="literal">P1</tt> and <tt class="literal">P2</tt>, 
  these points can be filled in one of two ways.
  If the <tt class="literal">GradientPaint</tt> object is created with the
  <em class="replaceable">cyclic</em> constructor argument set to
  <tt class="literal">true</tt>, colors repeatedly cycle from <tt class="literal">C1</tt> to
  <tt class="literal">C2</tt> and back 
  to <tt class="literal">C1</tt> again.  
  If <em class="replaceable">cyclic</em> is specified as
  <tt class="literal">false</tt> or if this argument is omitted, the
  gradient does not repeat.  When an acyclic
  <tt class="literal">GradientPaint</tt> object is used, all points beyond 
  <tt class="literal">P1</tt>
  are given the color <tt class="literal">C1</tt>, and all points beyond 
  <tt class="literal">C2</tt> are given the color
  <tt class="literal">P2</tt>.</p>
<a name="INDEX-1477"></a>
<a name="INDEX-1478"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">GradientPaint</b> implements Paint {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GradientPaint</b> (java.awt.geom.Point2D <i class="parameter">pt1</i>, Color <i class="parameter">color1</i>, java.awt.geom.Point2D <i class="parameter">pt2</i>, Color <i class="parameter">color2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GradientPaint</b> (java.awt.geom.Point2D <i class="parameter">pt1</i>, Color <i class="parameter">color1</i>, java.awt.geom.Point2D <i class="parameter">pt2</i>, Color <i class="parameter">color2</i>, boolean <i class="parameter">cyclic</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GradientPaint</b> (float <i class="parameter">x1</i>, float <i class="parameter">y1</i>, Color <i class="parameter">color1</i>, float <i class="parameter">x2</i>, float <i class="parameter">y2</i>, Color <i class="parameter">color2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GradientPaint</b> (float <i class="parameter">x1</i>, float <i class="parameter">y1</i>, Color <i class="parameter">color1</i>, float <i class="parameter">x2</i>, float <i class="parameter">y2</i>, Color <i class="parameter">color2</i>, boolean <i class="parameter">cyclic</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Color <b class="function">getColor1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Color <b class="function">getColor2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isCyclic</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.geom.Point2D <b class="function">getPoint1</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.geom.Point2D <b class="function">getPoint2</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getTransparency</b> ();</td><td align="right"><i> Implements:Transparency</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Paint</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PaintContext <b class="function">createContext</b> (java.awt.image.ColorModel <i class="parameter">cm</i>, Rectangle <i class="parameter">deviceBounds</i>, java.awt.geom.Rectangle2D <i class="parameter">userBounds</i>, java.awt.geom.AffineTransform <i class="parameter">xform</i>, RenderingHints <i class="parameter">hints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Transparency</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getTransparency</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->GradientPaint(Paint(Transparency))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Graphics</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1(mod)</i></b></font></td>
</tr>
</table>



<a name="INDEX-1479"></a>
<a name="INDEX-1480"></a>
<p>
This abstract class defines a device-independent interface
to graphics.  It specifies methods for drawing
lines, filling areas,
painting images, copying areas, and clipping graphics output.
Specific subclasses of <tt class="literal">Graphics</tt> are implemented for
different platforms and different graphics output devices.  A
<tt class="literal">Graphics</tt> object cannot be created directly through a
constructor--it must either be obtained with the
<tt class="literal">getGraphics()</tt> method of a <tt class="literal">Component</tt> or an
<tt class="literal">Image</tt> or copied from an existing <tt class="literal">Graphics</tt> object with <tt class="literal">create()</tt>.  When a <tt class="literal">Graphics</tt>
object is no
longer needed, you should call <tt class="literal">dispose()</tt> to free up
the window system resources it uses.</p>
<a name="INDEX-1481"></a>
<a name="INDEX-1482"></a>
<a name="INDEX-1483"></a>
<p>  In Personal Java environments, the <tt class="literal">setXORMode()</tt>
  method may be unsupported.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">Graphics</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">Graphics</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public abstract Shape <b class="function">getClip</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public abstract void <b class="function">setClip</b> (Shape <i class="parameter">clip</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public abstract void <b class="function">setClip</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public abstract Rectangle <b class="function">getClipBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Rectangle <b class="function">getClipBounds</b> (Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Color <b class="function">getColor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setColor</b> (Color <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Font <b class="function">getFont</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setFont</b> (Font <i class="parameter">font</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public FontMetrics <b class="function">getFontMetrics</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract FontMetrics <b class="function">getFontMetrics</b> (Font <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">clearRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">clipRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">copyArea</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, int <i class="parameter">dx</i>, int <i class="parameter">dy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Graphics <b class="function">create</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Graphics <b class="function">create</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">dispose</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">draw3DRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, boolean <i class="parameter">raised</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawArc</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, int <i class="parameter">startAngle</i>, int <i class="parameter">arcAngle</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawBytes</b> (byte[ ] <i class="parameter">data</i>, int <i class="parameter">offset</i>, int <i class="parameter">length</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawChars</b> (char[ ] <i class="parameter">data</i>, int <i class="parameter">offset</i>, int <i class="parameter">length</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">drawImage</b> (Image <i class="parameter">img</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">drawImage</b> (Image <i class="parameter">img</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, Color <i class="parameter">bgcolor</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">drawImage</b> (Image <i class="parameter">img</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">drawImage</b> (Image <i class="parameter">img</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, Color <i class="parameter">bgcolor</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public abstract boolean <b class="function">drawImage</b> (Image <i class="parameter">img</i>, int <i class="parameter">dx1</i>, int <i class="parameter">dy1</i>, int <i class="parameter">dx2</i>, int <i class="parameter">dy2</i>, int <i class="parameter">sx1</i>, int <i class="parameter">sy1</i>, int <i class="parameter">sx2</i>, int <i class="parameter">sy2</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public abstract boolean <b class="function">drawImage</b> (Image <i class="parameter">img</i>, int <i class="parameter">dx1</i>, int <i class="parameter">dy1</i>, int <i class="parameter">dx2</i>, int <i class="parameter">dy2</i>, int <i class="parameter">sx1</i>, int <i class="parameter">sy1</i>, int <i class="parameter">sx2</i>, int <i class="parameter">sy2</i>, Color <i class="parameter">bgcolor</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawLine</b> (int <i class="parameter">x1</i>, int <i class="parameter">y1</i>, int <i class="parameter">x2</i>, int <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawOval</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawPolygon</b> (Polygon <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawPolygon</b> (int[ ] <i class="parameter">xPoints</i>, int[ ] <i class="parameter">yPoints</i>, int <i class="parameter">nPoints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public abstract void <b class="function">drawPolyline</b> (int[ ] <i class="parameter">xPoints</i>, int[ ] <i class="parameter">yPoints</i>, int <i class="parameter">nPoints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawRoundRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, int <i class="parameter">arcWidth</i>, int <i class="parameter">arcHeight</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract void <b class="function">drawString</b> (java.text.AttributedCharacterIterator <i class="parameter">iterator</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawString</b> (String <i class="parameter">str</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fill3DRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, boolean <i class="parameter">raised</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">fillArc</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, int <i class="parameter">startAngle</i>, int <i class="parameter">arcAngle</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">fillOval</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fillPolygon</b> (Polygon <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">fillPolygon</b> (int[ ] <i class="parameter">xPoints</i>, int[ ] <i class="parameter">yPoints</i>, int <i class="parameter">nPoints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">fillRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">fillRoundRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, int <i class="parameter">arcWidth</i>, int <i class="parameter">arcHeight</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">hitClip</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setPaintMode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setXORMode</b> (Color <i class="parameter">c1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">translate</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">finalize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Rectangle <b class="function">getClipRect</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">Graphics2D, javax.swing.DebugGraphics</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Component.getGraphics(), Graphics.create(), Image.getGraphics(), PrintJob.getGraphics(), java.awt.image.BufferedImage.getGraphics(), java.awt.peer.ComponentPeer.getGraphics(), javax.swing.DebugGraphics.create(), javax.swing.JComponent.{getComponentGraphics(), getGraphics()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Graphics2D</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1484"></a>
<p>  This class is the Java 2D graphics context that encapsulates all
  drawing and filling operations.  It generalizes and extends the
  <tt class="literal">Graphics</tt> class. A number of attributes control how the <tt class="literal">Graphics2D</tt>
  object performs drawing and filling 

operations.  You can set these
  attributes with the following methods:
<a name="INDEX-1485"></a><a name="INDEX-1486"></a>
</p>
  <dl>
<dt>
<b><tt class="literal">setBackground()</tt></b>
</dt>
<dd>
<p>	  Specifies the background color used by the
	  <tt class="literal">clearRect()</tt> method of the
	  <tt class="literal">Graphics</tt> object.  Prior to Java 2D, the
	  background color could not be set.
	</p>
</dd>
<a name="INDEX-1487"></a>
<dt>
<b><tt class="literal">setClip()</tt></b>
</dt>
<dd>
<p>	  Sets the clipping region, outside of which no drawing
	  is done.  This method is inherited from the
	  <tt class="literal">Graphics</tt> object.  Use
	  <tt class="literal">setClip()</tt> to establish an initial clipping
	  region and then use <tt class="literal">clip()</tt> to narrow that
	  region by intersecting it with other regions.
	</p>
</dd>
<a name="INDEX-1488"></a>
<dt>
<b><tt class="literal">setComposite()</tt></b>
</dt>
<dd>
<p>	  Specifies a <tt class="literal">Composite</tt> 
	  object (typically an instance of <tt class="literal">AlphaComposite</tt>) 
	  that should be used to combine
	  drawing colors with the colors that are already present on the
	  drawing surface.  
	</p>
</dd>
<a name="INDEX-1489"></a>
<dt>
<b><tt class="literal">setFont()</tt></b>
</dt>
<dd>
<p>	  Sets the default <tt class="literal">Font</tt> object used to
	  draw text.  This is a <tt class="literal">Graphics</tt> method,
	  inherited by <tt class="literal">Graphics2D</tt>.
	</p>
</dd>
<a name="INDEX-1490"></a>
<dt>
<b><tt class="literal">setPaint()</tt></b>
</dt>
<dd>
<p>	  Specifies the <tt class="literal">Paint</tt> object that controls
	  the color or pattern used for drawing.  See
	  <tt class="literal">Color</tt>, <tt class="literal">GradientPaint</tt>, and
	  <tt class="literal">TexturePaint</tt>.
	</p>
</dd>
<a name="INDEX-1491"></a>
<a name="INDEX-1492"></a>
<dt>
<b><tt class="literal">setRenderingHints()</tt></b>
</dt>
<dd>
<p>	  Sets hints about how drawing should be done.  This method
	  allows you to turn antialiasing and color dithering on and
	  off, for example.  You can also set hints with
	  <tt class="literal">addRenderingHints()</tt> and
	  <tt class="literal">setRenderingHint()</tt>. 
	</p>
</dd>
<a name="INDEX-1493"></a>
<a name="INDEX-1494"></a>
<dt>
<b><tt class="literal">setStroke()</tt></b>
</dt>
<dd>
<p>	  Specifies the <tt class="literal">Stroke</tt> object (typically
	  an instance of <tt class="literal">BasicStroke</tt>) used to trace
	  the outline of shapes that are drawn.  The
	  <tt class="literal">Stroke</tt> object effectively defines the pen
	  that is used for drawing operations.  
	</p>
</dd>
<a name="INDEX-1495"></a>
<dt>
<b><tt class="literal">setTransform()</tt></b>
</dt>
<dd>
<p>	  Sets the <tt class="literal">AffineTransform</tt> object used
	  to convert from user coordinates to device coordinates.  Note
	  that you do not usually call <tt class="literal">setTransform()</tt>
	  directly, but instead modify the current transform with
	  <tt class="literal">transform()</tt> or the more specific
	  <tt class="literal">rotate()</tt>,
	  <tt class="literal">scale()</tt>, <tt class="literal">shear()</tt>, and
	  <tt class="literal">translate()</tt> methods. 
	</p>
</dd>
</dl>

<a name="INDEX-1496"></a>
<p>  Once you have used these methods to configure a
  <tt class="literal">Graphics2D</tt> object as desired, you can proceed to
  draw with it. The following methods are commonly used:</p>

  <dl>
<dt>
<b><tt class="literal">draw()</tt></b>
</dt>
<dd>
<p>	  Draw the outline of a <tt class="literal">Shape</tt>, using the line
	  style specified by the current <tt class="literal">Stroke</tt>
	  object and the color or pattern specified by the current
	  <tt class="literal">Paint</tt> object.  The
	  <tt class="literal">java.awt.geom</tt> package contains a number of
	  commonly used implementations of the <tt class="literal">Shape</tt>
	  interface. 
	</p>
</dd>
<a name="INDEX-1497"></a>
<dt>
<b><tt class="literal">fill()</tt></b>
</dt>
<dd>
<p>	  Fill the interior of a <tt class="literal">Shape</tt>, using the
	  color or pattern specified by the current
	  <tt class="literal">Paint</tt> object.
	</p>
</dd>
<a name="INDEX-1498"></a>
<dt>
<b><tt class="literal">drawString()</tt></b>
</dt>
<dd>
<p>	  Draw the specified text using the specified
	  <tt class="literal">Font</tt> object and <tt class="literal">Paint</tt>
	  object.  
<tt class="literal">drawGlyphVector()</tt> is similar.  See
	  also the <tt class="literal">drawString()</tt> methods inherited
	  from <tt class="literal">Graphics</tt>.
	</p>
</dd>
<a name="INDEX-1499"></a>
<a name="INDEX-1500"></a>
<dt>
<b><tt class="literal">drawImage()</tt></b>
</dt>
<dd>
<p>	  Draw an <tt class="literal">Image</tt> 
	  with an optional filtering operation and/or an
	  optional transformation.  Also
	  <tt class="literal">drawRenderableImage()</tt> and
	  <tt class="literal">drawRenderedImage()</tt>.  See also the
	  <tt class="literal">drawImage()</tt> methods inherited from
	  <tt class="literal">Graphics</tt>. 
	</p>
</dd>
</dl>
<a name="INDEX-1501"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">Graphics2D</b> extends Graphics {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">Graphics2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Color <b class="function">getBackground</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBackground</b> (Color <i class="parameter">color</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Composite <b class="function">getComposite</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setComposite</b> (Composite <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract GraphicsConfiguration <b class="function">getDeviceConfiguration</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.font.FontRenderContext <b class="function">getFontRenderContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Paint <b class="function">getPaint</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setPaint</b> (Paint <i class="parameter">paint</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract RenderingHints <b class="function">getRenderingHints</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setRenderingHints</b> (java.util.Map <i class="parameter">hints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Stroke <b class="function">getStroke</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setStroke</b> (Stroke <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.geom.AffineTransform <b class="function">getTransform</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setTransform</b> (java.awt.geom.AffineTransform <i class="parameter">Tx</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addRenderingHints</b> (java.util.Map <i class="parameter">hints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">clip</b> (Shape <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">draw</b> (Shape <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawGlyphVector</b> (java.awt.font.GlyphVector <i class="parameter">g</i>, float <i class="parameter">x</i>, float <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">drawImage</b> (Image <i class="parameter">img</i>, java.awt.geom.AffineTransform <i class="parameter">xform</i>, java.awt.image.ImageObserver <i class="parameter">obs</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawImage</b> (java.awt.image.BufferedImage <i class="parameter">img</i>, java.awt.image.BufferedImageOp <i class="parameter">op</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawRenderableImage</b> (java.awt.image.renderable.RenderableImage <i class="parameter">img</i>, java.awt.geom.AffineTransform <i class="parameter">xform</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawRenderedImage</b> (java.awt.image.RenderedImage <i class="parameter">img</i>, java.awt.geom.AffineTransform <i class="parameter">xform</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawString</b> (java.text.AttributedCharacterIterator <i class="parameter">iterator</i>, float <i class="parameter">x</i>, float <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawString</b> (String <i class="parameter">s</i>, float <i class="parameter">x</i>, float <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">fill</b> (Shape <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getRenderingHint</b> (RenderingHints.Key <i class="parameter">hintKey</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">hit</b> (Rectangle <i class="parameter">rect</i>, Shape <i class="parameter">s</i>, boolean <i class="parameter">onStroke</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">rotate</b> (double <i class="parameter">theta</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">rotate</b> (double <i class="parameter">theta</i>, double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">scale</b> (double <i class="parameter">sx</i>, double <i class="parameter">sy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setRenderingHint</b> (RenderingHints.Key <i class="parameter">hintKey</i>, Object <i class="parameter">hintValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">shear</b> (double <i class="parameter">shx</i>, double <i class="parameter">shy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">transform</b> (java.awt.geom.AffineTransform <i class="parameter">Tx</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">translate</b> (double <i class="parameter">tx</i>, double <i class="parameter">ty</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Graphics</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">draw3DRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, boolean <i class="parameter">raised</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawString</b> (java.text.AttributedCharacterIterator <i class="parameter">iterator</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">drawString</b> (String <i class="parameter">str</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fill3DRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, boolean <i class="parameter">raised</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">translate</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Graphics-->Graphics2D</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">java.awt.font.GraphicAttribute.draw(), java.awt.font.ImageGraphicAttribute.draw(), java.awt.font.ShapeGraphicAttribute.draw(), java.awt.font.TextLayout.draw()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">GraphicsEnvironment.createGraphics(), java.awt.image.BufferedImage.createGraphics()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GraphicsConfigTemplate</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-1502"></a>
<p>  This abstract class is designed to support a matching operation that
  selects the best configuration from an array of
  <tt class="literal">GraphicsConfiguration</tt> objects.  The best
  configuration is defined as the one that most closely matches the
  desired criteria.  <tt class="literal">GraphicsConfigTemplate</tt> does not
  define what those criteria might be, however: the criteria and the
  matching algorithm are left entirely to the concrete subclass that
  provides definitions of the abstract methods.</p>
<p>  This class in not commonly used.  There are not any implementations of
  <tt class="literal">GraphicsConfigTemplate</tt> built into Java 1.2.  On
  many platforms, such as Windows, a screen has only one available
  <tt class="literal">GraphicsConfiguration</tt>, so there is never a need
  to try to find the best one.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">GraphicsConfigTemplate</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GraphicsConfigTemplate</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PREFERRED</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">REQUIRED</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">UNNECESSARY</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract GraphicsConfiguration <b class="function">getBestConfiguration</b> (GraphicsConfiguration[ ] <i class="parameter">gc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isGraphicsConfigSupported</b> (GraphicsConfiguration <i class="parameter">gc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->GraphicsConfigTemplate(Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">GraphicsDevice.getBestConfiguration()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GraphicsConfiguration</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1503"></a>
<p>  This class describes a configuration of a graphics device.  It stores
  information about the available resolution and colors of the device.</p>
<a name="INDEX-1504"></a>
<a name="INDEX-1505"></a>
<p>  Resolution information is stored in the form of
  <tt class="literal">AffineTransform</tt> objects.
  <tt class="literal">getDefaultTransform()</tt> returns the default transform
  used to map user coordinates to device coordinates.  For screen
  devices, this is usually an identity transform: by default, user
  coordinates are measured in screen pixels.  For printers, the default
  transform is such that 72 units in user space maps to one inch on the
  printed page.  <tt class="literal">getNormalizingTransform()</tt> returns an
  <tt class="literal">AffineTransform</tt> that, when concatenated to the
  default transform, yields a coordinate system in which 72 units of
  user space equal one inch on the screen or on a printed piece of
  paper.  (For printers, this normalizing transform is obviously
  the identity transform, since the default transform is already 72
  units to the inch.)</p>
<a name="INDEX-1506"></a>
<p>  Color information about the device is returned by
  <tt class="literal">getColorModel()</tt>, in the form of a
  <tt class="literal">java.awt.image.ColorModel</tt> object.  A
  <tt class="literal">ColorModel</tt> maps pixel values to their individual
  color components.  The zero-argument form of
  <tt class="literal">getColorModel()</tt> returns the default color model for
  the configuration.  If you pass one of the constants defined by the
  <tt class="literal">Transparency</tt> interface, the method returns a
  <tt class="literal">ColorModel</tt> object suitable for the configuration and
  the specified level of transparency.</p>
<a name="INDEX-1507"></a>
<p>
<tt class="literal">createCompatibleImage()</tt> creates an off-screen
  <tt class="literal">BufferedImage</tt> object with the specified size and
  transparency that is compatible with the device color model.  However, that most applications create off-screen images using a
  higher-level method, such as the <tt class="literal">createImage()</tt>
  method of <tt class="literal">Component</tt>.</p>
<a name="INDEX-1508"></a>
<p>  See also <tt class="literal">GraphicsDevice</tt> and
  <tt class="literal">GraphicsEnvironment</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">GraphicsConfiguration</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">GraphicsConfiguration</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.image.ColorModel <b class="function">getColorModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.image.ColorModel <b class="function">getColorModel</b> (int <i class="parameter">transparency</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.geom.AffineTransform <b class="function">getDefaultTransform</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract GraphicsDevice <b class="function">getDevice</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.geom.AffineTransform <b class="function">getNormalizingTransform</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.image.BufferedImage <b class="function">createCompatibleImage</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.image.BufferedImage <b class="function">createCompatibleImage</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>, int <i class="parameter">transparency</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Canvas.Canvas(), GraphicsConfigTemplate.{getBestConfiguration(), isGraphicsConfigSupported()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Graphics2D.getDeviceConfiguration(), GraphicsConfigTemplate.getBestConfiguration(), GraphicsDevice.{getBestConfiguration(), getConfigurations(), getDefaultConfiguration()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GraphicsDevice</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1509"></a>
<p>  The <tt class="literal">GraphicsDevice</tt> class represents a device
  capable of displaying graphics, such as a computer monitor, a printer,
  or an off-screen image.  </p>
<a name="INDEX-1510"></a>
<a name="INDEX-1511"></a>
<p>  A <tt class="literal">GraphicsDevice</tt> object stores the type of the
  device (<tt class="literal">getType()</tt>) and an identifying string
  (<tt class="literal">getIDString()</tt>).  More importantly, it contains a
  list of possible configurations of the device.  For example, a screen
  may be configured at different resolutions and color depths.  This
  configuration information is stored by the <tt class="literal">GraphicsDevice</tt>
  as <tt class="literal">GraphicsConfiguration</tt> objects.</p>
<a name="INDEX-1512"></a>
<a name="INDEX-1513"></a>
<a name="INDEX-1514"></a>
<p>
<tt class="literal">GraphicsDevice</tt> does not have a public constructor.
  Instances that represent screen devices can be obtained by calling the
  <tt class="literal">getDefaultScreenDevice()</tt> method of
  <tt class="literal">GraphicsEnvironment</tt>.  More
  generally, the <tt class="literal">GraphicsDevice</tt> used by any
  <tt class="literal">Graphics2D</tt> object can be obtained by calling
  <tt class="literal">getDeviceConfiguration()</tt> on that object to obtain a
  <tt class="literal">GraphicsConfiguration</tt>, and then calling
  <tt class="literal">getDevice()</tt> on that object to get its
  <tt class="literal">GraphicsDevice</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">GraphicsDevice</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">GraphicsDevice</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TYPE_IMAGE_BUFFER</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TYPE_PRINTER</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TYPE_RASTER_SCREEN</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract GraphicsConfiguration[ ] <b class="function">getConfigurations</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract GraphicsConfiguration <b class="function">getDefaultConfiguration</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getIDstring</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public GraphicsConfiguration <b class="function">getBestConfiguration</b> (GraphicsConfigTemplate <i class="parameter">gct</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">GraphicsConfiguration.getDevice(), GraphicsEnvironment.{getDefaultScreenDevice(), getScreenDevices()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GraphicsEnvironment</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1515"></a>
<a name="INDEX-1516"></a>
<p>  This class describes a Java 2D graphics environment.  This class does
  not have a public constructor; use
  <tt class="literal">getLocalGraphicsEnvironment()</tt> to obtain the
  <tt class="literal">GraphicsEnvironment</tt> object that represents the
  environment available to the Java VM.</p>
<a name="INDEX-1517"></a>
<p>  A graphics environment consists of a list of available screens and a
  list of available fonts.  The screens are represented by
  <tt class="literal">GraphicsDevice</tt> objects.  Use
  <tt class="literal">getDefaultScreenDevice()</tt> to obtain information
  about the default screen.  Although the
  <tt class="literal">GraphicsDevice</tt> class can also describe printers and
  off-screen images, the methods of
  <tt class="literal">GraphicsEnvironment</tt> return only screen devices.
  Therefore, it is not possible to use the
  <tt class="literal">GraphicsEnvironment</tt> class to query the available
  printers.</p>
<a name="INDEX-1518"></a>
<a name="INDEX-1519"></a>
<a name="INDEX-1520"></a>
<p>
<tt class="literal">getAllFonts()</tt> returns a list of all fonts available
  on the system.  Use caution when calling this method, however, because
  on some systems it can take a long time to enumerate all installed
  fonts.  Note that the fonts returned by this method all have a
  size of 1 unit; a font must be scaled to the desired size by calling
  <tt class="literal">deriveFont()</tt> on the <tt class="literal">Font</tt>.  
  When possible, it is usually
  better to call <tt class="literal">getAvailableFontFamilyNames()</tt> to
  list available font families, then create only the individual
  <tt class="literal">Font</tt> objects desired.</p>
<a name="INDEX-1521"></a>
<p>  See also <tt class="literal">GraphicsDevice</tt> and
  <tt class="literal">GraphicsConfiguration</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">GraphicsEnvironment</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">GraphicsEnvironment</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static GraphicsEnvironment <b class="function">getLocalGraphicsEnvironment</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Font[ ] <b class="function">getAllFonts</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String[ ] <b class="function">getAvailableFontFamilyNames</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String[ ] <b class="function">getAvailableFontFamilyNames</b> (java.util.Locale <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract GraphicsDevice <b class="function">getDefaultScreenDevice</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract GraphicsDevice[ ] <b class="function">getScreenDevices</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Graphics2D <b class="function">createGraphics</b> (java.awt.image.BufferedImage <i class="parameter">img</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">GraphicsEnvironment.getLocalGraphicsEnvironment()</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GridBagConstraints</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1522"></a>
This class encapsulates the instance variables that tell a
<tt class="literal">GridBagLayout</tt> how to position a given
<tt class="literal">Component</tt> within its <tt class="literal">Container</tt>:</p>
<dl>
<dt>
<b><tt class="literal">gridx</tt>, <tt class="literal">gridy</tt></b>
</dt>
<dd>
<p>The grid position of the component.
The <tt class="literal">RELATIVE</tt> constant specifies a position to the
right of or below the previous component.</p>
</dd>
<dt>
<b><tt class="literal">gridwidth</tt>, <tt class="literal">gridheight</tt></b>
</dt>
<dd>
<p>The height and width of the component
in grid cells.  The constant <tt class="literal">REMAINDER</tt> specifies
that the component is the last one and should get all
remaining cells.</p>
</dd>
<dt>
<b><tt class="literal">fill</tt></b>
</dt>
<dd>
<p>The dimensions of a component that should
grow when the space available for it is larger than its
default size.  Legal values are the constants <tt class="literal">NONE</tt>,
<tt class="literal">BOTH</tt>, <tt class="literal">HORIZONTAL</tt>, and <tt class="literal">VERTICAL</tt>.</p>
</dd>
<dt>
<b><tt class="literal">ipadx</tt>, <tt class="literal">ipady</tt></b>
</dt>
<dd>
<p>Internal padding to add on each side
of the component in each dimension.  This padding increases the size
of the component beyond its default minimum size.</p>
</dd>
<dt>
<b><tt class="literal">insets</tt></b>
</dt>
<dd>
<p>An <tt class="literal">Insets</tt> object that specifies margins to appear on
all sides of the component.</p>
</dd>
<dt>
<b><tt class="literal">anchor</tt></b>
</dt>
<dd>
<p>How the component should be displayed
within its grid cells when it is smaller than those cells.
The <tt class="literal">CENTER</tt> constant and the compass-point constants
are legal values.</p>
</dd>
<dt>
<b><tt class="literal">weightx</tt>, <tt class="literal">weighty</tt></b>
</dt>
<dd>
<p>How extra space in the container should
be distributed among its components in the X and Y
dimensions.  Larger weights specify that a component should
receive a proportionally larger amount of extra space.  A
0 weight indicates that the component should not receive
any extra space.  These weights specify the resizing
behavior of the component and its container.</p>
</dd>
</dl>
<a name="INDEX-1523"></a>
<p>See also <tt class="literal">GridBagLayout</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">GridBagConstraints</b> implements Cloneable, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GridBagConstraints</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">GridBagConstraints</b> (int <i class="parameter">gridx</i>, int <i class="parameter">gridy</i>, int <i class="parameter">gridwidth</i>, int <i class="parameter">gridheight</i>, double <i class="parameter">weightx</i>, double <i class="parameter">weighty</i>, int <i class="parameter">anchor</i>, int <i class="parameter">fill</i>, Insets <i class="parameter">insets</i>, int <i class="parameter">ipadx</i>, int <i class="parameter">ipady</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BOTH</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CENTER</b> ;</td><td align="right"><i> =10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">EAST</b> ;</td><td align="right"><i> =13</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HORIZONTAL</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NONE</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NORTH</b> ;</td><td align="right"><i> =11</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NORTHEAST</b> ;</td><td align="right"><i> =12</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NORTHWEST</b> ;</td><td align="right"><i> =18</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">RELATIVE</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">REMAINDER</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SOUTH</b> ;</td><td align="right"><i> =15</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SOUTHEAST</b> ;</td><td align="right"><i> =14</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SOUTHWEST</b> ;</td><td align="right"><i> =16</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VERTICAL</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WEST</b> ;</td><td align="right"><i> =17</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">anchor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">fill</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">gridheight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">gridwidth</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">gridx</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">gridy</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Insets <b class="function">insets</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">ipadx</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">ipady</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">weightx</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">weighty</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->GridBagConstraints(Cloneable,Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">GridBagLayout.{AdjustForGravity(), setConstraints()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">GridBagLayout.{getConstraints(), lookupConstraints()}</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">GridBagLayout.defaultConstraints</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GridBagLayout</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable layout manager PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1524"></a><a name="INDEX-1525"></a>
The most complicated and most powerful
<tt class="literal">LayoutManager</tt> in the <tt class="literal">java.awt</tt> package.  
<tt class="literal">GridBagLayout</tt>
divides a container into a grid of rows and columns (that
need not have the same width and height) and places the
components into this grid, adjusting the size of the grid
cells as necessary to ensure that components do not overlap.
Each component controls how it is positioned within this
grid by specifying a number of variables (or constraints)
in a <tt class="literal">GridBagConstraints</tt> object.
Do not confuse this class with the much simpler
<tt class="literal">GridLayout</tt>, which arranges components in a grid of
equally sized cells.</p>
<p>
<a name="INDEX-1526"></a>
Use <tt class="literal">setConstraints()</tt> to specify a
<tt class="literal">GridBagConstraints</tt> object for each of the components
in the container.  Or, as of Java 1.1, specify the
<tt class="literal">GridBagConstraints</tt> object when adding the component
<a name="INDEX-1527"></a>
to the container with <tt class="literal">add()</tt>.
The variables in this object specify the
position of the component in the grid and the number of
horizontal and vertical grid cells that the component
occupies and also control other important aspects of
component layout.  See <tt class="literal">GridBagConstraints</tt> for more
information on these constraint variables.
<tt class="literal">setConstraints()</tt> makes a copy of the constraints
object, so you may reuse a single object in your code.</p>
<p>Applications should never call the
<tt class="literal">LayoutManager</tt> methods of this class directly; the
<tt class="literal">Container</tt> for which the <tt class="literal">GridBagLayout</tt> is
registered does this.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">GridBagLayout</b> implements LayoutManager2, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GridBagLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final int <b class="function">MAXGRIDSIZE</b> ;</td><td align="right"><i> =512</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final int <b class="function">MINSIZE</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final int <b class="function">PREFERREDSIZE</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ][ ] <b class="function">getLayoutDimensions</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point <b class="function">getLayoutOrigin</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double[ ][ ] <b class="function">getLayoutWeights</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public GridBagConstraints <b class="function">getConstraints</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point <b class="function">location</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setConstraints</b> (Component <i class="parameter">comp</i>, GridBagConstraints <i class="parameter">constraints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addLayoutComponent</b> (String <i class="parameter">name</i>, Component <i class="parameter">comp</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">layoutContainer</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Dimension <b class="function">minimumLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Dimension <b class="function">preferredLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeLayoutComponent</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addLayoutComponent</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public float <b class="function">getLayoutAlignmentX</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public float <b class="function">getLayoutAlignmentY</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">invalidateLayout</b> (Container <i class="parameter">target</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">maximumLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">AdjustForGravity</b> (GridBagConstraints <i class="parameter">constraints</i>, Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">ArrangeGrid</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected GridBagLayoutInfo <b class="function">GetLayoutInfo</b> (Container <i class="parameter">parent</i>, int <i class="parameter">sizeflag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Dimension <b class="function">GetMinSize</b> (Container <i class="parameter">parent</i>, GridBagLayoutInfo <i class="parameter">info</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected GridBagConstraints <b class="function">lookupConstraints</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double[ ] <b class="function">columnWeights</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">columnWidths</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">rowHeights</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double[ ] <b class="function">rowWeights</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Hashtable <b class="function">comptable</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected GridBagConstraints <b class="function">defaultConstraints</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected GridBagLayoutInfo <b class="function">layoutInfo</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->GridBagLayout(LayoutManager2(LayoutManager),Serializable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GridLayout</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable layout manager PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1528"></a><a name="INDEX-1529"></a>
A <tt class="literal">LayoutManager</tt> that
divides a <tt class="literal">Container</tt> into a specified number of equally sized
rows and columns and arranges the components in those rows
and columns, left to right and top to bottom.  If either the
number of rows or the number of columns is set to 0, its value
is computed from the other dimension and the total
number of components.  Do not confuse this class with the
more flexible and complicated <tt class="literal">GridBagLayout</tt>.</p>
<p>Applications should never call the
<tt class="literal">LayoutManager</tt> methods of this class directly; the
<tt class="literal">Container</tt> for which the <tt class="literal">GridLayout</tt> is
registered does this.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">GridLayout</b> implements LayoutManager, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">GridLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GridLayout</b> (int <i class="parameter">rows</i>, int <i class="parameter">cols</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GridLayout</b> (int <i class="parameter">rows</i>, int <i class="parameter">cols</i>, int <i class="parameter">hgap</i>, int <i class="parameter">vgap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getColumns</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setColumns</b> (int <i class="parameter">cols</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getHgap</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setHgap</b> (int <i class="parameter">hgap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getRows</b> ();</td><td align="right"><i> default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setRows</b> (int <i class="parameter">rows</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getVgap</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setVgap</b> (int <i class="parameter">vgap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addLayoutComponent</b> (String <i class="parameter">name</i>, Component <i class="parameter">comp</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">layoutContainer</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Dimension <b class="function">minimumLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Dimension <b class="function">preferredLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeLayoutComponent</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->GridLayout(LayoutManager,Serializable)</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>IllegalComponentStateException</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable unchecked PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1530"></a>
Signals that an AWT component is not in the
appropriate state for some requested operation (e.g., 
it hasn't been added to a
container yet or is currently hidden).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">IllegalComponentStateException</b> extends java.lang.IllegalStateException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">IllegalComponentStateException</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">IllegalComponentStateException</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->RuntimeException-->java.lang.IllegalStateException-->IllegalComponentStateException</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span><tt class="literal">AccessibleContext.getLocale()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Image</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1531"></a><a name="INDEX-1532"></a><a name="INDEX-1533"></a>
This abstract class represents a displayable image in a
platform-independent way.  An <tt class="literal">Image</tt> object cannot
be instantiated directly through a constructor; it must be
obtained through a method like the <tt class="literal">getImage()</tt> method of
<tt class="literal">Applet</tt> or the <tt class="literal">createImage()</tt> method of
<tt class="literal">Component</tt>.  <tt class="literal">getSource()</tt> method
returns the <tt class="literal">ImageProducer</tt> object that produces the
<a name="INDEX-1534"></a>
image data.  <tt class="literal">getGraphics()</tt> returns a
<tt class="literal">Graphics</tt> object that can be used for drawing into
off-screen images (but not images that are downloaded or
generated by an <tt class="literal">ImageProducer</tt>).</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">Image</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Image</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">SCALE_AREA_AVERAGING</b> ;</td><td align="right"><i> =16</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">SCALE_DEFAULT</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">SCALE_FAST</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">SCALE_REPLICATE</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">SCALE_SMOOTH</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">UndefinedProperty</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Graphics <b class="function">getGraphics</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.image.ImageProducer <b class="function">getSource</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">flush</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getHeight</b> (java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getProperty</b> (String <i class="parameter">name</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Image <b class="function">getScaledInstance</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>, int <i class="parameter">hints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getWidth</b> (java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">java.awt.image.BufferedImage</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.JViewport.backingStoreImage</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Insets</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1535"></a><a name="INDEX-1536"></a>
This class holds four values that represent the top, left,
bottom, and right margins, in pixels, of a <tt class="literal">Container</tt>
or other <tt class="literal">Component</tt>.  An object of this type can be
specified in a <tt class="literal">GridBagConstraints</tt>
layout object and
is returned by <tt class="literal">Container.insets()</tt>, which queries
the margins of a container.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Insets</b> implements Cloneable, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Insets</b> (int <i class="parameter">top</i>, int <i class="parameter">left</i>, int <i class="parameter">bottom</i>, int <i class="parameter">right</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">bottom</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">left</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">right</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">top</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Insets(Cloneable,Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.plaf.InsetsUIResource</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">GridBagConstraints.insets</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ItemSelectable</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1537"></a>
This interface abstracts the functionality of an AWT
component that presents one or more items to the user and
allows the user to select none, one, or several of them.  It is
implemented by several components in the AWT and Swing.</p>
<p>
<a name="INDEX-1538"></a><a name="INDEX-1539"></a><a name="INDEX-1540"></a><tt class="literal">getSelectedObjects()</tt> returns an array of selected
objects or <tt class="literal">null</tt>, if none are selected.
<tt class="literal">addItemListener()</tt> and <tt class="literal">removeItemListener()</tt>
are standard methods for adding and removing
<tt class="literal">ItemListener</tt> objects to be notified when an item is
selected.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public 

abstract interface <b class="classname">ItemSelectable</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">Checkbox, CheckboxMenuItem, Choice, java.awt.List, javax.swing.AbstractButton, javax.swing.ButtonModel, javax.swing.JComboBox</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">java.awt.event.ItemEvent.ItemEvent()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.awt.event.ItemEvent.getItemSelectable()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Label</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1541"></a><a name="INDEX-1542"></a>
This class is a <tt class="literal">Component</tt> that displays a single
specified line of read-only text.  The constant values specify the
text alignment within the component and can be specified in a call to
the constructor or used with <tt class="literal">setAlignment()</tt>.
<a name="INDEX-1543"></a>
</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Label</b> extends Component {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Label</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Label</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Label</b> (String <i class="parameter">text</i>, int <i class="parameter">alignment</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CENTER</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LEFT</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">RIGHT</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAlignment</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAlignment</b> (int <i class="parameter">alignment</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getText</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setText</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->Label</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.createLabel()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>LayoutManager</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>layout manager PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1544"></a><a name="INDEX-1545"></a>
This interface defines the methods necessary for a class to
be able to arrange <tt class="literal">Component</tt> objects within a
<tt class="literal">Container</tt> object.  Most programs use one of the
existing classes that implement this interface:
<tt class="literal">BorderLayout</tt>, <tt class="literal">CardLayout</tt>,
<tt class="literal">FlowLayout</tt>, <tt class="literal">GridBagConstraints</tt>,
<tt class="literal">GridBagLayout</tt>, or <tt class="literal">GridLayout</tt>.</p>
<p>
<a name="INDEX-1546"></a><a name="INDEX-1547"></a><a name="INDEX-1548"></a>
To define a new class that lays out components, you must
implement each of the methods defined by this interface.
<tt class="literal">addLayoutComponent()</tt> is called when a component is
added to the container.  <tt class="literal">removeLayoutComponent()</tt> is
called when a component is removed.
<a name="INDEX-1549"></a><tt class="literal">layoutContainer()</tt> should perform the actual
positioning of components by setting the
size and position of each component in the specified container. 
<a name="INDEX-1550"></a><tt class="literal">minimumLayoutSize()</tt> should return the
minimum container width and height that the
<tt class="literal">LayoutManager</tt> needs in order to lay out its components.
<tt class="literal">preferredLayoutSize()</tt> should return the optimal
container width and height for the <tt class="literal">LayoutManager</tt> to
lay out its components.</p>
<p>As of Java 1.1, layout managers should implement the
<tt class="literal">LayoutManager2</tt> interface, which is an extension of
this one.
A Java applet or application never directly calls
any of these <tt class="literal">LayoutManager</tt> methods--the
<tt class="literal">Container</tt> object for which the <tt class="literal">LayoutManager</tt>
is registered does that.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">LayoutManager</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addLayoutComponent</b> (String <i class="parameter">name</i>, Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">layoutContainer</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Dimension <b class="function">minimumLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Dimension <b class="function">preferredLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeLayoutComponent</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">FlowLayout, GridLayout, LayoutManager2, javax.swing.ScrollPaneLayout, javax.swing.ViewportLayout</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Container.setLayout(), Panel.Panel(), ScrollPane.setLayout(), javax.swing.Box.setLayout(), javax.swing.JApplet.setLayout(), javax.swing.JDialog.setLayout(), javax.swing.JFrame.setLayout(), javax.swing.JInternalFrame.setLayout(), javax.swing.JPanel.JPanel(), javax.swing.JScrollPane.setLayout(), javax.swing.JWindow.setLayout()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Container.getLayout(), javax.swing.JRootPane.createRootLayout(), javax.swing.JViewport.createLayoutManager()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>LayoutManager2</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>layout manager PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1551"></a><a name="INDEX-1552"></a>
This interface is an extension of the <tt class="literal">LayoutManager</tt>
interface.  It defines additional layout management methods
for layout managers that perform constraint-based layout.
<tt class="literal">GridBagLayout</tt> is an example of a
constraint-based layout manager--each component added to the
layout is associated with a <tt class="literal">GridBagConstraints</tt>
object that specifies the constraints on how the component
is to be laid out.</p>
<p>Java programs do not directly invoke the methods of this
interface--they are used by the <tt class="literal">Container</tt>
object for which the layout manager is registered.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">LayoutManager2</b> extends LayoutManager {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addLayoutComponent</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getLayoutAlignmentX</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract float <b class="function">getLayoutAlignmentY</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">invalidateLayout</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Dimension <b class="function">maximumLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(LayoutManager2(LayoutManager))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">BorderLayout, CardLayout, GridBagLayout, javax.swing.BoxLayout, javax.swing.JRootPane.RootLayout, javax.swing.OverlayLayout</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>List</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1553"></a>
This class is a <tt class="literal">Component</tt> that graphically displays a list of
strings.  The list is scrollable if necessary.  The
constructor takes optional arguments that specify the number
of visible rows in the list and whether selection of more
than one item is allowed.  The various instance methods allow strings
to be added and removed from the <tt class="literal">List</tt> and 

allow the
selected item or items to be queried.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">List</b> extends Component implements ItemSelectable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">List</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">List</b> (int <i class="parameter">rows</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">List</b> (int <i class="parameter">rows</i>, boolean <i class="parameter">multipleMode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ItemSelectable synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ItemSelectable synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getItemCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public String[ ] <b class="function">getItems</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getMinimumSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getMinimumSize</b> (int <i class="parameter">rows</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public boolean <b class="function">isMultipleMode</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setMultipleMode</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getPreferredSize</b> (int <i class="parameter">rows</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRows</b> ();</td><td align="right"><i> default:4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectedIndex</b> ();</td><td align="right"><i> synchronized default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">getSelectedIndexes</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getSelectedItem</b> ();</td><td align="right"><i> synchronized default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String[ ] <b class="function">getSelectedItems</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i> Implements:ItemSelectable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getVisibleIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">add</b> (String <i class="parameter">item</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">add</b> (String <i class="parameter">item</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">deselect</b> (int <i class="parameter">index</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getItem</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public boolean <b class="function">isIndexSelected</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">makeVisible</b> (int <i class="parameter">index</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">remove</b> (String <i class="parameter">item</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">remove</b> (int <i class="parameter">position</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeAll</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">replaceItem</b> (String <i class="parameter">newValue</i>, int <i class="parameter">index</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">select</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ItemSelectable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processActionEvent</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processItemEvent</b> (java.awt.event.ItemEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">addItem</b> (String <i class="parameter">item</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">addItem</b> (String <i class="parameter">item</i>, int <i class="parameter">index</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">allowsMultipleSelections</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">clear</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">countItems</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">delItem</b> (int <i class="parameter">position</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">delItems</b> (int <i class="parameter">start</i>, int <i class="parameter">end</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">isSelected</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">minimumSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">minimumSize</b> (int <i class="parameter">rows</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">preferredSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">preferredSize</b> (int <i class="parameter">rows</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setMultipleSelections</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->java.awt.List(ItemSelectable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.createList()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MediaTracker</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1554"></a><a name="INDEX-1555"></a>
This class provides a convenient way to asynchronously
load and keep track of the status of any number of
<tt class="literal">Image</tt> objects.  You can use it to load one or more
images and then wait until those images have been completely
loaded and are ready to be used.  </p>
<p>
<a name="INDEX-1556"></a><a name="INDEX-1557"></a><a name="INDEX-1558"></a><a name="INDEX-1559"></a><a name="INDEX-1560"></a><a name="INDEX-1561"></a>
The <tt class="literal">addImage()</tt> method registers an image to be
loaded and tracked, assigning it a specified identifier
value.  <tt class="literal">waitForID()</tt> loads all the images that have been
assigned the specified identifier and returns when they have
all finished loading or it receives an error.
<tt class="literal">isErrorAny()</tt> and <tt class="literal">isErrorID()</tt> check whether
any errors have occurred while loading images.
<tt class="literal">statusAll()</tt> and <tt class="literal">statusID()</tt> return the status
of all images and of all images with the specified
identifier, respectively.  The return value of each of these 
methods is one of
the defined constants.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MediaTracker</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MediaTracker</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ABORTED</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">COMPLETE</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ERRORED</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LOADING</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addImage</b> (Image <i class="parameter">image</i>, int <i class="parameter">id</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addImage</b> (Image <i class="parameter">image</i>, int <i class="parameter">id</i>, int <i class="parameter">w</i>, int <i class="parameter">h</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">checkAll</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">checkAll</b> (boolean <i class="parameter">load</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">checkID</b> (int <i class="parameter">id</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">checkID</b> (int <i class="parameter">id</i>, boolean <i class="parameter">load</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getErrorsAny</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getErrorsID</b> (int <i class="parameter">id</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isErrorAny</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isErrorID</b> (int <i class="parameter">id</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeImage</b> (Image <i class="parameter">image</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeImage</b> (Image <i class="parameter">image</i>, int <i class="parameter">id</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeImage</b> (Image <i class="parameter">image</i>, int <i class="parameter">id</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">statusAll</b> (boolean <i class="parameter">load</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">statusID</b> (int <i class="parameter">id</i>, boolean <i class="parameter">load</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">waitForAll</b> () throws InterruptedException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">waitForAll</b> (long <i class="parameter">ms</i>) throws InterruptedException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">waitForID</b> (int <i class="parameter">id</i>) throws InterruptedException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">waitForID</b> (int <i class="parameter">id</i>, long <i class="parameter">ms</i>) throws InterruptedException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->MediaTracker(Serializable)</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.ImageIcon.tracker</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Menu</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1(opt)</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1562"></a><a name="INDEX-1563"></a><a name="INDEX-1564"></a><a name="INDEX-1565"></a><a name="INDEX-1566"></a>
This class represents a pulldown menu
pane that appears within a <tt class="literal">MenuBar</tt>.  Each
<tt class="literal">Menu</tt> has a label that appears in the <tt class="literal">MenuBar</tt><a name="INDEX-1567"></a>
and can optionally be a tear-off menu.  The <tt class="literal">add()</tt>
and <tt class="literal">addSeparator()</tt> methods add individual items to a
<tt class="literal">Menu</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Menu</b> extends MenuItem implements MenuContainer {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">Menu</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Menu</b> (String <i class="parameter">label</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Menu</b> (String <i class="parameter">label</i>, boolean <i class="parameter">tearOff</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getItemCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isTearOff</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (String <i class="parameter">label</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuItem <b class="function">add</b> (MenuItem <i class="parameter">mi</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSeparator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuItem <b class="function">getItem</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">insert</b> (String <i class="parameter">label</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">insert</b> (MenuItem <i class="parameter">menuitem</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">insertSeparator</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeAll</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MenuContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (MenuComponent <i class="parameter">item</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding MenuItem</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding MenuComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">countItems</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->MenuComponent(Serializable)-->MenuItem-->Menu(MenuContainer)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">PopupMenu</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">MenuBar.{add(), setHelpMenu()}, Toolkit.createMenu(), java.awt.peer.MenuBarPeer.{addHelpMenu(), addMenu()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">MenuBar.{add(), getHelpMenu(), getMenu()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MenuBar</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1(opt)</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1568"></a><a name="INDEX-1569"></a><a name="INDEX-1570"></a>
This class represents a menu bar.
<a name="INDEX-1571"></a><tt class="literal">add()</tt> adds <tt class="literal">Menu</tt> objects to the menu bar, and
<tt class="literal">setHelpMenu()</tt> adds a <b class="emphasis-bold">Help</b> menu in a reserved
location of the menu bar.  A <tt class="literal">MenuBar</tt> object may be
displayed within a <tt class="literal">Frame</tt> by passing it to the
<tt class="literal">setMenuBar()</tt> of the <tt class="literal">Frame</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MenuBar</b> extends MenuComponent implements MenuContainer {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MenuBar</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Menu <b class="function">getHelpMenu</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setHelpMenu</b> (Menu <i class="parameter">m</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getMenuCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Menu <b class="function">add</b> (Menu <i class="parameter">m</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">deleteShortcut</b> (MenuShortcut <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Menu <b class="function">getMenu</b> (int <i class="parameter">i</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public MenuItem <b class="function">getShortcutMenuItem</b> (MenuShortcut <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public java.util.Enumeration <b class="function">shortcuts</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MenuContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (MenuComponent <i class="parameter">m</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding MenuComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">countMenus</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->MenuComponent(Serializable)-->MenuBar(MenuContainer)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Frame.setMenuBar(), Toolkit.createMenuBar(), java.awt.peer.FramePeer.setMenuBar()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Frame.getMenuBar()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MenuComponent</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1572"></a><a name="INDEX-1573"></a><a name="INDEX-1574"></a>
This class is the superclass of all menu-related classes: 
You
never need to instantiate a <tt class="literal">MenuComponent</tt> directly.
<tt class="literal">setFont()</tt> specifies the font to be used for all text
within the menu component.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">MenuComponent</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MenuComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Font <b class="function">getFont</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFont</b> (Font <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setName</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuContainer <b class="function">getParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public final void <b class="function">dispatchEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected final Object <b class="function">getTreeLock</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public java.awt.peer.MenuComponentPeer <b class="function">getPeer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">postEvent</b> (Event <i class="parameter">evt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->MenuComponent(Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">MenuBar, MenuItem</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Component.remove(), Frame.remove(), Menu.remove(), MenuBar.remove(), MenuContainer.remove()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MenuContainer</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1575"></a>
This interface defines the methods necessary for
<tt class="literal">MenuContainer</tt> types, such as <tt class="literal">Menu</tt>,
<tt class="literal">Frame</tt>, and <tt class="literal">MenuBar</tt> objects.  Unless you
implement new menulike components, you never need
to use it.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">MenuContainer</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Font <b class="function">getFont</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">remove</b> (MenuComponent <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public abstract boolean <b class="function">postEvent</b> (Event <i class="parameter">evt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">Component, Frame, Menu, MenuBar</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">MenuComponent.getParent()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MenuItem</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1576"></a><a name="INDEX-1577"></a><a name="INDEX-1578"></a><a name="INDEX-1579"></a>
This class encapsulates a menu item with a specified textual
label.  A <tt class="literal">MenuItem</tt> can be added to a menu pane with
the <tt class="literal">add()</tt> method of <tt class="literal">Menu</tt>.  
The <tt class="literal">disable()</tt> method
makes an item nonselectable; you might use it to gray out
a menu item when the command it represents is not valid in
the current context.  The <tt class="literal">enable()</tt> method makes an
item selectable again.
<a name="INDEX-1580"></a>
In Java 1.1, use <tt class="literal">setActionCommand()</tt> to specify an
identifying string that is included in
<tt class="literal">ActionEvent</tt> events generated by the menu item.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MenuItem</b> extends MenuComponent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">MenuItem</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MenuItem</b> (String <i class="parameter">label</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">MenuItem</b> (String <i class="parameter">label</i>, MenuShortcut <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public String <b class="function">getActionCommand</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setActionCommand</b> (String <i class="parameter">command</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEnabled</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setEnabled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getLabel</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLabel</b> (String <i class="parameter">label</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public MenuShortcut <b class="function">getShortcut</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setShortcut</b> (MenuShortcut <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">deleteShortcut</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding MenuComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding MenuComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected final void <b class="function">disableEvents</b> (long <i class="parameter">eventsToDisable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected final void <b class="function">enableEvents</b> (long <i class="parameter">eventsToEnable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processActionEvent</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">disable</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">enable</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">enable</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->MenuComponent(Serializable)-->MenuItem</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">CheckboxMenuItem, Menu</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Menu.{add(), insert()}, Toolkit.createMenuItem(), java.awt.peer.MenuPeer.addItem()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Menu.{add(), getItem()}, MenuBar.getShortcutMenuItem()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MenuShortcut</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable PJ1.1(opt)</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1581"></a><a name="INDEX-1582"></a>
This class represents a keystroke used to select a
<tt class="literal">MenuItem</tt> without actually pulling down the menu.  A
<tt class="literal">MenuShortcut</tt> object can be specified for a
<tt class="literal">MenuItem</tt> when the <tt class="literal">MenuItem</tt> is created or by
<a name="INDEX-1583"></a>
calling the item's <tt class="literal">setShortcut()</tt> method.  The
keystroke sequence for the menu shortcut automatically
appears in the label for the menu item, so you do not need to add this
information yourself.</p>
<p>When you create a <tt class="literal">MenuShortcut</tt>, you specify the keycode of the shortcut--this is one of the <tt class="literal">VK_</tt>
constants defined by <tt class="literal">java.awt.event.KeyEvent</tt> and is
not always the same as a corresponding character code.  You
may optionally specify a <tt class="literal">boolean</tt> value that, if
<tt class="literal">true</tt>, indicates that the <tt class="literal">MenuShortcut</tt> requires the
<b class="emphasis-bold">Shift</b> key to be held down.</p>
<p>Note that menu shortcuts are triggered in a
platform-dependent way.  When you create a shortcut, you
specify only the keycode and an optional <b class="emphasis-bold">Shift</b>
modifier.  The shortcut is not triggered, however, unless an
additional modifier key is held down.  On Windows platforms,
for example, the <b class="emphasis-bold">Ctrl</b> key is used for menu shortcuts.
You can query the platform-specific menu shortcut key with the
<a name="INDEX-1584"></a><tt class="literal">getMenuShortcutKeyMask()</tt> method of <tt class="literal">Toolkit</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MenuShortcut</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MenuShortcut</b> (int <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MenuShortcut</b> (int <i class="parameter">key</i>, boolean <i class="parameter">useShiftModifier</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (MenuShortcut <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getKey</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">usesShiftModifier</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->MenuShortcut(Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">MenuBar.{deleteShortcut(), getShortcutMenuItem()}, MenuItem.{MenuItem(), setShortcut()}, MenuShortcut.equals()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">MenuItem.getShortcut()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Paint</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1585"></a>
<a name="INDEX-1586"></a>
<p>  This interface defines a color or pattern used by Java 2D in drawing
  and filling operations.  <tt class="literal">Color</tt> is the simplest
  implementation: it performs drawing and filling using a solid color.
  <tt class="literal">GradientPaint</tt> and <tt class="literal">TexturePaint</tt>
  are two other commonly used implementations.  Most applications can
  simply use these predefined <tt class="literal">Paint</tt> implementations
  and do not need to implement this interface themselves.</p>
<p>  Because a single <tt class="literal">Paint</tt> object may be used by
  different threads with different <tt class="literal">Graphics2D</tt>
  objects, the <tt class="literal">Paint</tt> object does not perform painting
  operations itself.  Instead, it defines a
  <tt class="literal">createContext()</tt> method that returns a
  <tt class="literal">PaintContext</tt> object that is capable of performing
  painting in a particular context.  See <tt class="literal">PaintContext</tt>
  for details.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Paint</b> extends Transparency {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract PaintContext <b class="function">createContext</b> (java.awt.image.ColorModel <i class="parameter">cm</i>, Rectangle <i class="parameter">deviceBounds</i>, java.awt.geom.Rectangle2D <i class="parameter">userBounds</i>, java.awt.geom.AffineTransform <i class="parameter">xform</i>, RenderingHints <i class="parameter">hints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(Paint(Transparency))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">Color, GradientPaint, TexturePaint</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Graphics2D.setPaint()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Graphics2D.getPaint()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PaintContext</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This interface defines the methods that do the actual work of
  computing the colors to be used in Java 2D drawing and filling
  operations.  <tt class="literal">PaintContext</tt> is used internally by
  Java 2D; applications never need to call any of its methods.  Only
  applications that implement custom <tt class="literal">Paint</tt> objects
  need to implement this interface.</p>
<p>  A <tt class="literal">Graphics2D</tt> object creates a
  <tt class="literal">PaintContext</tt> object by calling the
  <tt class="literal">createContext()</tt> method of its
  <tt class="literal">Paint</tt> object.  The <tt class="literal">getRaster()</tt>
  method of the <tt class="literal">PaintContext</tt> is called to perform the
  actual painting; this method must return a
  <tt class="literal">java.awt.image.Raster</tt> object that contains the
  appropriate colors for the specified rectangle.  The
  <tt class="literal">Graphics2D</tt> object calls
  <tt class="literal">dispose()</tt> when the <tt class="literal">PaintContext</tt>
  is no longer needed.  The <tt class="literal">dispose()</tt> method should
  release any system resources held by the
  <tt class="literal">PaintContext</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">PaintContext</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">dispose</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.image.ColorModel <b class="function">getColorModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.image.Raster <b class="function">getRaster</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">w</i>, int <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Color.createContext(), GradientPaint.createContext(), Paint.createContext(), SystemColor.createContext(), TexturePaint.createContext()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Panel</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1587"></a>
This class is a <tt class="literal">Container</tt> that is itself contained
within a container.  Unlike <tt class="literal">Frame</tt> and
<tt class="literal">Dialog</tt>, <tt class="literal">Panel</tt> is a container that does not
create a separate window of its own.  <tt class="literal">Panel</tt> is
suitable for holding portions of a larger interface within a
parent <tt class="literal">Frame</tt> or <tt class="literal">Dialog</tt> or within another
<tt class="literal">Panel</tt>.  (Because <tt class="literal">Applet</tt> is a subclass of
<tt class="literal">Panel</tt>, applets are displayed in a
<tt class="literal">Panel</tt> that is contained within a web browser or
applet viewer.)  The default <tt class="literal">LayoutManager</tt> for a
<tt class="literal">Panel</tt> is <tt class="literal">FlowLayout</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Panel</b> extends Container {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Panel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">Panel</b> (LayoutManager <i class="parameter">layout</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->Container-->Panel</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">java.applet.Applet</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.createPanel()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Point</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>
<a name="INDEX-1588"></a>
<p> 
  This class holds the integer X and Y coordinates of a two-dimensional
  point.  The <tt class="literal">move()</tt> and
  <tt class="literal">setLocation()</tt> methods set the coordinates, and the
  <tt class="literal">translate()</tt> method adds specified values to the
  coordinates.  Also, the <tt class="literal">x</tt> and <tt class="literal">y</tt>
  fields are public and may be manipulated directly.</p>
<a name="INDEX-1589"></a>
<a name="INDEX-1590"></a>
<a name="INDEX-1591"></a>
<p>  In Java 1.0 and Java 1.1, <tt class="literal">Point</tt> is a subclass of
  <tt class="literal">Object</tt>.  In Java 1.2, with the introduction of Java 2D,
  <tt class="literal">Point</tt> has become a concrete subclass of
  <tt class="literal">java.awt.geom.Point2D</tt>.  Contrast <tt class="literal">Point</tt> 
  with <tt class="literal">Point2D.Float</tt> and
  <tt class="literal">Point2D.Double</tt>, which use <tt class="literal">float</tt>
  and <tt class="literal">double</tt> fields to represent the coordinates of
  the point.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Point</b> extends java.awt.geom.Point2D implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">Point</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">Point</b> (Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Point</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Point <b class="function">getLocation</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">move</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setLocation</b> (Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setLocation</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">translate</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Point2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public double <b class="function">getX</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public double <b class="function">getY</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setLocation</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">x</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">y</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.awt.geom.Point2D(Cloneable)-->Point(Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.JViewport.lastPaintPosition</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Polygon</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable shape PJ1.1</i></b></font></td>
</tr>
</table>
<a name="INDEX-1592"></a>
<a name="INDEX-1593"></a>
<a name="INDEX-1594"></a>
<a name="INDEX-1595"></a>
<a name="INDEX-1596"></a>
<a name="INDEX-1597"></a>
<p> 
  This class defines a polygon as an array of points.  The points
  of the polygon can be passed to the constructor or specified with
  <tt class="literal">addPoint()</tt>.
  <tt class="literal">getBoundingBox()</tt> returns the smallest
  <tt class="literal">Rectangle</tt> that contains the polygon, and
  <tt class="literal">inside()</tt> tests whether a specified point is within
  the <tt class="literal">Polygon</tt>.  Note that the arrays of X and Y
  points and the number of points in the polygon (not necessarily the
  same as the array size) are defined as public variables.
  <tt class="literal">Polygon</tt> objects are used when drawing polygons with
  the <tt class="literal">drawPolygon()</tt> and
  <tt class="literal">fillPolygon()</tt> methods of <tt class="literal">Graphics</tt>.  In Java 2,
  <tt class="literal">Polygon</tt> has become part of the Java 2D API.  It
  implements the <tt class="literal">Shape</tt> interface and can be passed to
  the <tt class="literal">draw()</tt> and <tt class="literal">fill()</tt> method of
  a <tt class="literal">Graphics2D</tt> object.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Polygon</b> implements Serializable, Shape {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Polygon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Polygon</b> (int[ ] <i class="parameter">xpoints</i>, int[ ] <i class="parameter">ypoints</i>, int <i class="parameter">npoints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addPoint</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public boolean <b class="function">contains</b> (Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public boolean <b class="function">contains</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">translate</b> (int <i class="parameter">deltaX</i>, int <i class="parameter">deltaY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">contains</b> (java.awt.geom.Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">contains</b> (java.awt.geom.Point2D <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle2D.Float</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.PathIterator <b class="function">getPathIterator</b> (java.awt.geom.AffineTransform <i class="parameter">at</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.PathIterator <b class="function">getPathIterator</b> (java.awt.geom.AffineTransform <i class="parameter">at</i>, double <i class="parameter">flatness</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">intersects</b> (java.awt.geom.Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">intersects</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">npoints</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">xpoints</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">ypoints</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Rectangle <b class="function">bounds</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Rectangle <b class="function">getBoundingBox</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">inside</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Polygon(Serializable,Shape)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Graphics.{drawPolygon(), fillPolygon()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PopupMenu</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1(mod)</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1598"></a><a name="INDEX-1599"></a><tt class="literal">PopupMenu</tt> is a simple subclass of <tt class="literal">Menu</tt> that
represents a popup menu rather than a pulldown menu.  You
create a <tt class="literal">PopupMenu</tt> just as you would create a
<tt class="literal">Menu</tt> object.  The main difference is that a popup
menu must be popped up in response to a user event by
calling its <tt class="literal">show()</tt> method.
<a name="INDEX-1600"></a>
Another difference is that, unlike a <tt class="literal">Menu</tt>, which can
only appear within a <tt class="literal">MenuBar</tt> or another
<tt class="literal">Menu</tt>, a <tt class="literal">PopupMenu</tt> can be associated with any
component in a graphical user interface.  A <tt class="literal">PopupMenu</tt> is
associated with a 

component by calling the <tt class="literal">add()</tt>
method of the component.
<a name="INDEX-1601"></a>
</p>
<a name="INDEX-1602"></a>
<p>Popup menus are popped up by the user in different ways on different
platforms.  In order to hide this platform dependency, the
<a name="INDEX-1603"></a><tt class="literal">MouseEvent</tt> class defines the
<tt class="literal">isPopupTrigger()</tt> method.  If this method returns
<tt class="literal">true</tt>, the specified <tt class="literal">MouseEvent</tt>
represents the platform-specific popup menu trigger event,
and you should use the <tt class="literal">show()</tt> method to display your
<tt class="literal">PopupMenu</tt>.  Note that the X and Y coordinates
passed to <tt class="literal">show()</tt> should be in the coordinate system
of the specified <tt class="literal">Component</tt>.</p>
<p>  Support for nested popup menus is optional in Personal Java
  environments, and the inherited <tt class="literal">add()</tt> method may
  throw an exception if you attempt to add a <tt class="literal">Menu</tt>
  child to a <tt class="literal">PopupMenu</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">PopupMenu</b> extends Menu {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">PopupMenu</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">PopupMenu</b> (String <i class="parameter">label</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">show</b> (Component <i class="parameter">origin</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Menu</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->MenuComponent(Serializable)-->MenuItem-->Menu(MenuContainer)-->PopupMenu</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Component.add(), Toolkit.createPopupMenu()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PrintGraphics</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1604"></a><a name="INDEX-1605"></a>
The <tt class="literal">Graphics</tt> object returned by the
<tt class="literal">getGraphics()</tt> method of <tt class="literal">PrintJob</tt> always
implements this <tt class="literal">PrintGraphics</tt> interface.  You can
use this fact to distinguish a <tt class="literal">Graphics</tt> object that
draws to the screen from one that generates hardcopy. This
is a useful thing to do in a <tt class="literal">paint()</tt> method, when you
want to generate hardcopy that differs somewhat from what is
being displayed on-screen.</p>
<p>
<a name="INDEX-1606"></a>
The <tt class="literal">getPrintJob()</tt> method defined by this interface
can be used to return the <tt class="literal">PrintJob</tt>
with which the <tt class="literal">PrintGraphics</tt> object is associated.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">PrintGraphics</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract PrintJob <b class="function">getPrintJob</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PrintJob</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1607"></a>
A <tt class="literal">PrintJob</tt> object represents a single printing
session, or job.  The job may consist of one or more
individual pages.</p>
<a name="INDEX-1608"></a>
<p>
<a name="INDEX-1609"></a><tt class="literal">PrintJob</tt> is abstract, so it cannot be instantiated
directly.  Instead, you must call the <tt class="literal">getPrintJob()</tt>
method of the <tt class="literal">Toolkit</tt> object.  Calling this method
posts an appropriate print dialog box to request
information from the user, such as which printer should be
used.  An application has no control over this process, but
may pass a <tt class="literal">Properties</tt> object in which the dialog
stores the user's printing preferences.  This
<tt class="literal">Properties</tt> object can then be reused when initiating
subsequent print jobs.</p>
<p>
<a name="INDEX-1610"></a>
Once a <tt class="literal">PrintJob</tt> object has been obtained from the
<tt class="literal">Toolkit</tt> object, you call the
<tt class="literal">getGraphics()</tt> method of <tt class="literal">PrintJob</tt> to obtain a
<tt class="literal">Graphics</tt> object.  Any drawing done with this
<tt class="literal">Graphics</tt> object is printed, instead of 
displayed on-screen.  The object
returned by <tt class="literal">getGraphics()</tt> implements the
<tt class="literal">PrintGraphics</tt> interface.  Do not make any
assumptions about the initial state of the <tt class="literal">Graphics</tt>
object; in particular, note that you must specify a font
before you can draw any text.</p>
<p>
<a name="INDEX-1611"></a>
When you are done drawing all the desired output on a page, 
call the <tt class="literal">dispose()</tt> method of the
<tt class="literal">Graphics</tt> object to force the current page to be
printed.  You can call <tt class="literal">getGraphics()</tt> and
<tt class="literal">dispose()</tt> repeatedly to print any number of
pages required by your application.  However, if
<a name="INDEX-1612"></a>
the <tt class="literal">lastPageFirst()</tt> method returns <tt class="literal">true</tt>,
the user has requested that pages be printed in reverse
order.  It is up to your application to implement this
feature.</p>
<p>
<a name="INDEX-1613"></a><a name="INDEX-1614"></a>
The <tt class="literal">getPageDimension()</tt> method returns the size of
the page in pixels.  <tt class="literal">getPageResolution()</tt> returns the
resolution of the page in pixels per inch.  This resolution
is closer to a screen resolution (70 to 100 pixels per
inch) than a typical printer resolution (300 to 600
pixels per inch).  This means that on-screen drawings can be
drawn directly to the printer without scaling.  It also
means, however, that you cannot take full advantage of the
extra resolution provided by printers.</p>
<p>When you are done with a <tt class="literal">PrintJob</tt> and have called
<tt class="literal">dispose()</tt> on the <tt class="literal">Graphics</tt> object returned by
<tt class="literal">getGraphics()</tt>, you should call <tt class="literal">end()</tt> to
terminate the job.
<a name="INDEX-1615"></a>
</p>
<p>As of Java 1.2, the <tt class="literal">PrintJob</tt> class has been
superseded by a more complete printing API provided in the
<tt class="literal">java.awt.print</tt> package.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">PrintJob</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">PrintJob</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Graphics <b class="function">getGraphics</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Dimension <b class="function">getPageDimension</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getPageResolution</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">end</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">lastPageFirst</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">finalize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">PrintGraphics.getPrintJob(), Toolkit.getPrintJob()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Rectangle</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable shape PJ1.1</i></b></font></td>
</tr>
</table>
<a name="INDEX-1616"></a>
<p> 
  This class defines a rectangle using four integer values: the X
  and Y coordinates of its upper-left corner and its width and height.
  The instance methods perform various tests and transformations on the
  rectangle.  The <tt class="literal">x</tt>, <tt class="literal">y</tt>,
  <tt class="literal">width</tt>, and <tt class="literal">height</tt> methods are
  public and may thus be manipulated directly.
  <tt class="literal">Rectangle</tt> is used for a variety of
  purposes throughout <tt class="literal">java.awt</tt> and related packages.</p>
<p>  In Java 1.0 and Java 1.1, <tt class="literal">Rectangle</tt> is a subclass of
  <tt class="literal">Object</tt>.  In Java 2, with the introduction of Java 2D,
  <tt class="literal">Rectangle</tt> has become a concrete subclass of
  <tt class="literal">java.awt.geom.Rectangle2D</tt>.  Contrast 
  <tt class="literal">Rectangle</tt> with 
  <tt class="literal">Rectangle2D.Float</tt> and
  <tt class="literal">Rectangle2D.Double</tt>, which use <tt class="literal">float</tt>
  and <tt class="literal">double</tt> fields to represent the coordinates of
  the rectangle.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Rectangle</b> extends java.awt.geom.Rectangle2D implements Serializable, Shape {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Rectangle</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">Rectangle</b> (Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Rectangle</b> (Dimension <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Rectangle</b> (Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Rectangle</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Rectangle</b> (Point <i class="parameter">p</i>, Dimension <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Rectangle</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i> Implements:Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setBounds</b> (Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setBounds</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> Implements:Shape default:Rectangle</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> Overrides:RectangularShape default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public double <b class="function">getHeight</b> ();</td><td align="right"><i> Overrides:RectangularShape default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Point <b class="function">getLocation</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setLocation</b> (Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setLocation</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setSize</b> (Dimension <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setSize</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public double <b class="function">getWidth</b> ();</td><td align="right"><i> Overrides:RectangularShape default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public double <b class="function">getX</b> ();</td><td align="right"><i> Overrides:RectangularShape default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public double <b class="function">getY</b> ();</td><td align="right"><i> Overrides:RectangularShape default:0.0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (Point <i class="parameter">pt</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (int <i class="parameter">newx</i>, int <i class="parameter">newy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">contains</b> (Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public boolean <b class="function">contains</b> (Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public boolean <b class="function">contains</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">contains</b> (int <i class="parameter">X</i>, int <i class="parameter">Y</i>, int <i class="parameter">W</i>, int <i class="parameter">H</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">grow</b> (int <i class="parameter">h</i>, int <i class="parameter">v</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">intersection</b> (Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">intersects</b> (Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">translate</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">union</b> (Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Shape</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i> default:Rectangle</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Rectangle2D</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">createIntersection</b> (java.awt.geom.Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">createUnion</b> (java.awt.geom.Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">outcode</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setRect</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">width</i>, double <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">height</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">width</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">x</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">y</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public boolean <b class="function">inside</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">move</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">reshape</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">resize</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.awt.geom.RectangularShape(Cloneable,Shape)-->java.awt.geom.Rectangle2D-->Rectangle(Serializable,Shape)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.DefaultCaret</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">Polygon.bounds</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RenderingHints</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>cloneable collection</i></b></font></td>
</tr>
</table>
<a name="INDEX-1617"></a>
<a name="INDEX-1618"></a>
<a name="INDEX-1619"></a>
<a name="INDEX-1620"></a>
<a name="INDEX-1621"></a>
<p>  This class contains a set of key-to-value mappings that provide hints
  to Java 2D about the speed-versus-quality trade-offs it should make.
  The constants that begin with <tt class="literal">KEY_</tt> are the 
  hints, while the constants that begin with <tt class="literal">VALUE_</tt> are
  the values that may be specified for those hints.  Use
  <tt class="literal">put()</tt> to add a hint to the
  <tt class="literal">RenderingHints</tt> object.  Once you have specified all
  desired hints, pass the <tt class="literal">RenderingHints</tt> object to
  the <tt class="literal">setRenderingHints()</tt> or
  <tt class="literal">addRenderingHints()</tt> method of a
  <tt class="literal">Graphics2D</tt> object.  If you want to set only a
  single rendering hint, you don't need to create a
  <tt class="literal">RenderingHints</tt> object at all; you can simply pass a
  key and value to the <tt class="literal">setRenderingHint()</tt> method of
  <tt class="literal">Graphics2D</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">RenderingHints</b> implements Cloneable, java.util.Map {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">RenderingHints</b> (java.util.Map <i class="parameter">init</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">RenderingHints</b> (RenderingHints.Key <i class="parameter">key</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final RenderingHints.Key <b class="function">KEY_ALPHA_INTERPOLATION</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final RenderingHints.Key <b class="function">KEY_ANTIALIASING</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final RenderingHints.Key <b class="function">KEY_COLOR_RENDERING</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final RenderingHints.Key <b class="function">KEY_DITHERING</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final RenderingHints.Key <b class="function">KEY_FRACTIONALMETRICS</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final RenderingHints.Key <b class="function">KEY_INTERPOLATION</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final RenderingHints.Key <b class="function">KEY_RENDERING</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final RenderingHints.Key <b class="function">KEY_TEXT_ANTIALIASING</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_ALPHA_INTERPOLATION_DEFAULT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_ALPHA_INTERPOLATION_QUALITY</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_ALPHA_INTERPOLATION_SPEED</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_ANTIALIAS_DEFAULT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_ANTIALIAS_OFF</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_ANTIALIAS_ON</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_COLOR_RENDER_DEFAULT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_COLOR_RENDER_QUALITY</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_COLOR_RENDER_SPEED</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_DITHER_DEFAULT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_DITHER_DISABLE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_DITHER_ENABLE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_FRACTIONALMETRICS_DEFAULT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_FRACTIONALMETRICS_OFF</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_FRACTIONALMETRICS_ON</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_INTERPOLATION_BICUBIC</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_INTERPOLATION_BILINEAR</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_INTERPOLATION_NEAREST_NEIGHBOR</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_RENDER_DEFAULT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_RENDER_QUALITY</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_RENDER_SPEED</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_TEXT_ANTIALIAS_DEFAULT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_TEXT_ANTIALIAS_OFF</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">VALUE_TEXT_ANTIALIAS_ON</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (RenderingHints <i class="parameter">hints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Map</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clear</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsKey</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsValue</b> (Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Set <b class="function">entrySet</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">o</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">get</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Set <b class="function">keySet</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">put</b> (Object <i class="parameter">key</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">putAll</b> (java.util.Map <i class="parameter">m</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">remove</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">size</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Collection <b class="function">values</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->RenderingHints(Cloneable,java.util.Map)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Graphics2D.getRenderingHints(), java.awt.image.AffineTransformOp.getRenderingHints(), java.awt.image.BandCombineOp.getRenderingHints(), java.awt.image.BufferedImageOp.getRenderingHints(), java.awt.image.ColorConvertOp.getRenderingHints(), java.awt.image.ConvolveOp.getRenderingHints(), java.awt.image.LookupOp.getRenderingHints(), java.awt.image.RasterOp.getRenderingHints(), java.awt.image.RescaleOp.getRenderingHints(), java.awt.image.renderable.RenderContext.getRenderingHints()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RenderingHints.Key</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This class is the type of the <tt class="literal">KEY_</tt> constants
  defined by <tt class="literal">RenderingHints</tt>.  </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static class <b class="classname">RenderingHints.Key</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">Key</b> (int <i class="parameter">privatekey</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isCompatibleValue</b> (Object <i class="parameter">val</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final boolean <b class="function">equals</b> (Object <i class="parameter">o</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final int <b class="function">intKey</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Graphics2D.{getRenderingHint(), setRenderingHint()}, RenderingHints.RenderingHints()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">RenderingHints.{KEY_ALPHA_INTERPOLATION, KEY_ANTIALIASING, KEY_COLOR_RENDERING, KEY_DITHERING, KEY_FRACTIONALMETRICS, KEY_INTERPOLATION, KEY_RENDERING, KEY_TEXT_ANTIALIASING}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Scrollbar</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1(opt)</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1622"></a><a name="INDEX-1623"></a><a name="INDEX-1624"></a>
This <tt class="literal">Component</tt> represents a graphical scrollbar.
<tt class="literal">setValue()</tt> sets the displayed value of the
scrollbar.  <tt class="literal">setValues()</tt> sets the displayed value,
the page size, and the minimum and maximum values.  The
constants <tt class="literal">HORIZONTAL</tt> and <tt class="literal">VERTICAL</tt> are 

legal
values for the scrollbar orientation.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Scrollbar</b> extends Component implements Adjustable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Scrollbar</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Scrollbar</b> (int <i class="parameter">orientation</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Scrollbar</b> (int <i class="parameter">orientation</i>, int <i class="parameter">value</i>, int <i class="parameter">visible</i>, int <i class="parameter">minimum</i>, int <i class="parameter">maximum</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HORIZONTAL</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VERTICAL</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addAdjustmentListener</b> (java.awt.event.AdjustmentListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:Adjustable synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeAdjustmentListener</b> (java.awt.event.AdjustmentListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:Adjustable synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getBlockIncrement</b> ();</td><td align="right"><i> Implements:Adjustable default:10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setBlockIncrement</b> (int <i class="parameter">v</i>);</td><td align="right"><i> Implements:Adjustable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaximum</b> ();</td><td align="right"><i> Implements:Adjustable default:100</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setMaximum</b> (int <i class="parameter">newMaximum</i>);</td><td align="right"><i> Implements:Adjustable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinimum</b> ();</td><td align="right"><i> Implements:Adjustable default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setMinimum</b> (int <i class="parameter">newMinimum</i>);</td><td align="right"><i> Implements:Adjustable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getOrientation</b> ();</td><td align="right"><i> Implements:Adjustable default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setOrientation</b> (int <i class="parameter">orientation</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getUnitIncrement</b> ();</td><td align="right"><i> Implements:Adjustable default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setUnitIncrement</b> (int <i class="parameter">v</i>);</td><td align="right"><i> Implements:Adjustable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getValue</b> ();</td><td align="right"><i> Implements:Adjustable default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValue</b> (int <i class="parameter">newValue</i>);</td><td align="right"><i> Implements:Adjustable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getVisibleAmount</b> ();</td><td align="right"><i> Implements:Adjustable default:10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setVisibleAmount</b> (int <i class="parameter">newAmount</i>);</td><td align="right"><i> Implements:Adjustable</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValues</b> (int <i class="parameter">value</i>, int <i class="parameter">visible</i>, int <i class="parameter">minimum</i>, int <i class="parameter">maximum</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processAdjustmentEvent</b> (java.awt.event.AdjustmentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">getLineIncrement</b> ();</td><td align="right"><i> default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">getPageIncrement</b> ();</td><td align="right"><i> default:10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public int <b class="function">getVisible</b> ();</td><td align="right"><i> default:10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setLineIncrement</b> (int <i class="parameter">v</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setPageIncrement</b> (int <i class="parameter">v</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->Scrollbar(Adjustable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.createScrollbar()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ScrollPane</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1(mod)</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1625"></a><a name="INDEX-1626"></a>
This <tt class="literal">Container</tt> class creates horizontal and
vertical scrollbars surrounding a viewport and allows a
single child component to be displayed and scrolled within
this viewport.  Typically, the child of the
<tt class="literal">ScrollPane</tt> is larger than the
<tt class="literal">ScrollPane</tt> itself, so scrollbars allow the user to
select the currently visible portion.</p>
<p>When you call the <tt class="literal">ScrollPane()</tt> constructor, you may
optionally specify a scrollbar display policy, which should
be one of the three constants defined by this class.  If you
do not specify a policy, <tt class="literal">ScrollPane</tt> uses the
<tt class="literal">SCROLLBARS_AS_NEEDED</tt> policy.  Personal Java environments may
  provide a scrolling mechanism other than scrollbars.  In this case,
  the scrollbar 

display policy may be ignored.</p>
<p>
<a name="INDEX-1627"></a>
A program can programmatically scroll the child within the
viewport by calling <tt class="literal">setScrollPosition()</tt>.
<a name="INDEX-1628"></a><a name="INDEX-1629"></a><tt class="literal">getHAdjustable()</tt> and <tt class="literal">getVAdjustable()</tt> return
the horizontal and vertical <tt class="literal">Adjustable</tt> objects that
control scrolling (typically these are not actually
instances of <tt class="literal">Scrollbar</tt>).  You can use these
<tt class="literal">Adjustable</tt> objects to specify the unit and block
increment values for the scrollbars. You can also
directly set the <tt class="literal">Adjustable</tt> value as an alternative
to calling <tt class="literal">setScrollPosition()</tt>, but you should not set other
values of an <tt class="literal">Adjustable</tt> object.</p>
<p>
<a name="INDEX-1630"></a>
Use <tt class="literal">setSize()</tt> to set the size of the
<tt class="literal">ScrollPane</tt> container.  You may want to take the size
of the scrollbars into account when computing the overall
container size--use <tt class="literal">getHScrollbarHeight()</tt> and
<tt class="literal">getVScrollbarWidth()</tt> to obtain these values.
<a name="INDEX-1631"></a><a name="INDEX-1632"></a>
</p>
<p>
<tt class="literal">ScrollPane</tt> overrides the <tt class="literal">printComponents()</tt>
method of <tt class="literal">Container</tt>, so that when a
<tt class="literal">ScrollPane</tt> is printed, the entire child component, rather than only the currently visible portion, is printed.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ScrollPane</b> extends Container {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ScrollPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ScrollPane</b> (int <i class="parameter">scrollbarDisplayPolicy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SCROLLBARS_ALWAYS</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SCROLLBARS_AS_NEEDED</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SCROLLBARS_NEVER</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Adjustable <b class="function">getHAdjustable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getHScrollbarHeight</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final void <b class="function">setLayout</b> (LayoutManager <i class="parameter">mgr</i>);</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getScrollbarDisplayPolicy</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point <b class="function">getScrollPosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setScrollPosition</b> (Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setScrollPosition</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Adjustable <b class="function">getVAdjustable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Dimension <b class="function">getViewportSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getVScrollbarWidth</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">doLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">printComponents</b> (Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">addImpl</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">layout</b> ();</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->Container-->ScrollPane</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.createScrollPane()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Shape</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>shape PJ1.1</i></b></font></td>
</tr>
</table>
<a name="INDEX-1633"></a>
<p> 
  This interface is one of the most important in all of Java 2D.  It
  defines methods necessary for generalized operations on shapes, such
  as drawing, filling, and insideness testing.  The package
  <tt class="literal">java.awt.geom</tt> contains a number of useful
  implementations of this interface, including
  <tt class="literal">GeneralPath</tt>, which can be used to describe arbitrary
  shapes composed of line and curve segments.
  <tt class="literal">java.awt.Polygon</tt> and
  <tt class="literal">java.awt.Rectangle</tt> are also 

important
  implementations of <tt class="literal">Shape</tt>.  Most applications can
  rely on these predefined implementations and
  do not need to implement this interface themselves.</p>

<a name="INDEX-1634"></a>
<a name="INDEX-1635"></a>
<p>
<tt class="literal">getBounds()</tt> and <tt class="literal">getBounds2D()</tt>
  return rectangular bounding boxes that completely enclose a 
  <tt class="literal">Shape</tt>.
  <tt class="literal">contains()</tt> and <tt class="literal">intersects()</tt> test
  whether the shape contains or intersects a specified point or
  rectangle.  The most important method of the <tt class="literal">Shape</tt>
  interface, however, is <tt class="literal">getPathIterator()</tt>.  This
  method returns a <tt class="literal">java.awt.geom.PathIterator</tt> object
  that traces the outline of the shape using line and curve
  segments.  The two-argument version of this method returns a
  <tt class="literal">PathIterator</tt> that is guaranteed to trace the
  outline using only straight line segments and no curves.  The
  <em class="replaceable">flatness</em> argument is a measure of how
  closely the line segments must approximate the actual outline.
  Smaller values of <em class="replaceable">flatness</em> require
  increasingly accurate approximations.</p>
<p>  The <tt class="literal">Shape</tt> interface was first defined in Java 1.1.
  In that version of the language it contained only the
  <tt class="literal">getBounds()</tt> method.  The interface is so central to
  Java 2D and has grown so much since 

the Java 1.1 version, however,
  that it should generally be considered to be new in Java 1.2.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Shape</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">contains</b> (java.awt.geom.Point2D <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">contains</b> (java.awt.geom.Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">contains</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.awt.geom.Rectangle2D <b class="function">getBounds2D</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.awt.geom.PathIterator <b class="function">getPathIterator</b> (java.awt.geom.AffineTransform <i class="parameter">at</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.awt.geom.PathIterator <b class="function">getPathIterator</b> (java.awt.geom.AffineTransform <i class="parameter">at</i>, double <i class="parameter">flatness</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">intersects</b> (java.awt.geom.Rectangle2D <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract boolean <b class="function">intersects</b> (double <i class="parameter">x</i>, double <i class="parameter">y</i>, double <i class="parameter">w</i>, double <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">Polygon, Rectangle, java.awt.geom.Area, java.awt.geom.CubicCurve2D, java.awt.geom.GeneralPath, java.awt.geom.Line2D, java.awt.geom.QuadCurve2D, java.awt.geom.RectangularShape</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Stroke</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1636"></a>
<a name="INDEX-1637"></a>
<p> 
  This interface defines how Java 2D draws the outline of a shape.
  It is responsible for graphical attributes such as line width and dash
  pattern.  However, the <tt class="literal">Stroke</tt> is not
  responsible for the color or texture of the outline--those are the
  responsibility of the <tt class="literal">Paint</tt> interface.
  By default, lines are solid and are one pixel wide.  To specify a
  different line style, pass a <tt class="literal">Stroke</tt> object to the
  <tt class="literal">setStroke()</tt> method of a
  <tt class="literal">Graphics2D</tt> object.</p>
<a name="INDEX-1638"></a>
<p>  Mathematically, the outline of a shape is an infinitely thin line.
  Because it has no thickness, it cannot be drawn.  The
  <tt class="literal">Stroke</tt> interface is responsible for defining how
  such infinitely thin outlines are drawn.  The
  <tt class="literal">createStrokedShape()</tt> method is passed the
  <tt class="literal">Shape</tt> that is to be drawn.  It returns a new
  <tt class="literal">Shape</tt> that places a finite width around the
  infinitely thin boundaries of the specified shape.  The outline of the
  original shape can then be drawn by filling the interior of the
  returned shape. </p>
<p>
<tt class="literal">BasicStroke</tt> implements <tt class="literal">Stroke</tt>
  and is the only implementation needed by most programs.  Some programs
  may define their own implementations to achieve special effects not
  possible with <tt class="literal">BasicStroke</tt>, however.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Stroke</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Shape <b class="function">createStrokedShape</b> (Shape <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">BasicStroke</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Graphics2D.setStroke()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Graphics2D.getStroke()</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SystemColor</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1639"></a><a name="INDEX-1640"></a>
Instances of the <tt class="literal">SystemColor</tt>
class represent colors used in the system
desktop.  You can use these colors to produce applications
and custom components
that fit well in the desktop color scheme.  On platforms
that allow the desktop colors to be modified dynamically,
the actual colors represented by these symbolic 

system colors
may be dynamically updated.</p>
<p>The <tt class="literal">SystemColor</tt> class does not have a constructor,
but it defines constant <tt class="literal">SystemColor</tt> objects that
represent each of the symbolic colors used by the system
desktop.
<a name="INDEX-1641"></a>
If you need to compare a <tt class="literal">SystemColor</tt> object to a
regular <tt class="literal">Color</tt> object, use the <tt class="literal">getRGB()</tt>
method of both objects and compare the resulting values.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">SystemColor</b> extends Color implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ACTIVE_CAPTION</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ACTIVE_CAPTION_BORDER</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ACTIVE_CAPTION_TEXT</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">activeCaption</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">activeCaptionBorder</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">activeCaptionText</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">control</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CONTROL</b> ;</td><td align="right"><i> =17</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CONTROL_DK_SHADOW</b> ;</td><td align="right"><i> =22</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CONTROL_HIGHLIGHT</b> ;</td><td align="right"><i> =19</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CONTROL_LT_HIGHLIGHT</b> ;</td><td align="right"><i> =20</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CONTROL_SHADOW</b> ;</td><td align="right"><i> =21</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CONTROL_TEXT</b> ;</td><td align="right"><i> =18</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">controlDkShadow</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">controlHighlight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">controlLtHighlight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">controlShadow</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">controlText</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">desktop</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DESKTOP</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INACTIVE_CAPTION</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INACTIVE_CAPTION_BORDER</b> ;</td><td align="right"><i> =6</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INACTIVE_CAPTION_TEXT</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">inactiveCaption</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">inactiveCaptionBorder</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">inactiveCaptionText</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">info</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INFO</b> ;</td><td align="right"><i> =24</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INFO_TEXT</b> ;</td><td align="right"><i> =25</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">infoText</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">menu</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MENU</b> ;</td><td align="right"><i> =10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MENU_TEXT</b> ;</td><td align="right"><i> =11</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">menuText</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NUM_COLORS</b> ;</td><td align="right"><i> =26</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">scrollbar</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SCROLLBAR</b> ;</td><td align="right"><i> =23</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TEXT</b> ;</td><td align="right"><i> =12</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">text</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TEXT_HIGHLIGHT</b> ;</td><td align="right"><i> =14</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TEXT_HIGHLIGHT_TEXT</b> ;</td><td align="right"><i> =15</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TEXT_INACTIVE_TEXT</b> ;</td><td align="right"><i> =16</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TEXT_TEXT</b> ;</td><td align="right"><i> =13</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">textHighlight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">textHighlightText</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">textInactiveText</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">textText</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW</b> ;</td><td align="right"><i> =7</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">window</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_BORDER</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_TEXT</b> ;</td><td align="right"><i> =9</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">windowBorder</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final SystemColor <b class="function">windowText</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Color</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public PaintContext <b class="function">createContext</b> (java.awt.image.ColorModel <i class="parameter">cm</i>, Rectangle <i class="parameter">r</i>, java.awt.geom.Rectangle2D <i class="parameter">r2d</i>, java.awt.geom.AffineTransform <i class="parameter">xform</i>, RenderingHints <i class="parameter">hints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRGB</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Color(Paint(Transparency),Serializable)-->SystemColor(Serializable)</tt>
</p>
<p>
<span class="refsect1">Type Of: </span>Too many fields to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TextArea</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1(mod)</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1642"></a><a name="INDEX-1643"></a><a name="INDEX-1644"></a><a name="INDEX-1645"></a>
This class is a GUI component
that displays and optionally edits multiline
text.  The <tt class="literal">appendText()</tt>, <tt class="literal">insertText()</tt>, and
<tt class="literal">replaceText()</tt> methods provide various techniques for
specifying text to appear in the <tt class="literal">TextArea</tt>.
Many important <tt class="literal">TextArea</tt> methods are defined by its
<tt class="literal">TextComponent</tt> superclass.  
See also <tt class="literal">TextComponent</tt> and <tt class="literal">TextField</tt>.</p>
<p>  The four-argument version of the <tt class="literal">TextArea()</tt>
  constructor allows you to specify a scrollbar display policy for the
  <tt class="literal">TextArea</tt> object.  Personal Java environments can define a scrolling mechanism other than scrollbars.  In this case, the
  scrollbar display policy can be ignored.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TextArea</b> extends TextComponent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextArea</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextArea</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextArea</b> (int <i class="parameter">rows</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextArea</b> (String <i class="parameter">text</i>, int <i class="parameter">rows</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public <b class="function">TextArea</b> (String <i class="parameter">text</i>, int <i class="parameter">rows</i>, int <i class="parameter">columns</i>, int <i class="parameter">scrollbars</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">SCROLLBARS_BOTH</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">SCROLLBARS_HORIZONTAL_ONLY</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">SCROLLBARS_NONE</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static final int <b class="function">SCROLLBARS_VERTICAL_ONLY</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getColumns</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setColumns</b> (int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getMinimumSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getMinimumSize</b> (int <i class="parameter">rows</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getPreferredSize</b> (int <i class="parameter">rows</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRows</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setRows</b> (int <i class="parameter">rows</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getScrollbarVisibility</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">append</b> (String <i class="parameter">str</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">insert</b> (String <i class="parameter">str</i>, int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">replaceRange</b> (String <i class="parameter">str</i>, int <i class="parameter">start</i>, int <i class="parameter">end</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding TextComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">appendText</b> (String <i class="parameter">str</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">insertText</b> (String <i class="parameter">str</i>, int <i class="parameter">pos</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">minimumSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">minimumSize</b> (int <i class="parameter">rows</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">preferredSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">preferredSize</b> (int <i class="parameter">rows</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">replaceText</b> (String <i class="parameter">str</i>, int <i class="parameter">start</i>, int <i class="parameter">end</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->TextComponent-->TextArea</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.createTextArea()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TextComponent</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1646"></a><a name="INDEX-1647"></a><a name="INDEX-1648"></a><a name="INDEX-1649"></a><a name="INDEX-1650"></a><a name="INDEX-1651"></a>
This class is the superclass of the <tt class="literal">TextArea</tt> and
<tt class="literal">TextField</tt> components.  It cannot be instantiated
itself but provides methods that are common to these two
component types.  <tt class="literal">setEditable()</tt> specifies
whether the text in the component is editable.
<tt class="literal">getText()</tt> returns the text in the component, and
<tt class="literal">setText()</tt> specifies text to be displayed.
<tt class="literal">getSelectedText()</tt> returns the currently selected
text in the component, and <tt class="literal">getSelectionStart()</tt>
and <tt class="literal">getSelectionEnd()</tt> return the extents of the
selected region of text.  <tt class="literal">select()</tt> and
<tt class="literal">selectAll()</tt> select some and all of the text displayed
in the text component, respectively.</p>
<p>See also <tt class="literal">TextField</tt> and <tt class="literal">TextArea</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TextComponent</b> extends Component {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addTextListener</b> (java.awt.event.TextListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeTextListener</b> (java.awt.event.TextListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getCaretPosition</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setCaretPosition</b> (int <i class="parameter">position</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEditable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEditable</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getSelectedText</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectionEnd</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setSelectionEnd</b> (int <i class="parameter">selectionEnd</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectionStart</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setSelectionStart</b> (int <i class="parameter">selectionStart</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getText</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setText</b> (String <i class="parameter">t</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">select</b> (int <i class="parameter">selectionStart</i>, int <i class="parameter">selectionEnd</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">selectAll</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processTextEvent</b> (java.awt.event.TextEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected transient java.awt.event.TextListener <b class="function">textListener</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->TextComponent</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">TextArea, TextField</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TextField</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1652"></a><a name="INDEX-1653"></a><a name="INDEX-1654"></a><a name="INDEX-1655"></a><a name="INDEX-1656"></a><a name="INDEX-1657"></a>
This <tt class="literal">Component</tt> displays a single line of optionally
editable text.  Most of its interesting methods are defined
by its <tt class="literal">TextComponent</tt> superclass.  Use
<tt class="literal">setEchoChar()</tt> to specify a character to be
echoed when requesting sensitive input, such as a password.</p>
<p>See also <tt class="literal">TextComponent</tt> and <tt class="literal">TextArea</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TextField</b> extends TextComponent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextField</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextField</b> (int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextField</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextField</b> (String <i class="parameter">text</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getColumns</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setColumns</b> (int <i class="parameter">columns</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getEchoChar</b> ();</td><td align="right"><i> default:\0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">setEchoChar</b> (char <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getMinimumSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getMinimumSize</b> (int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Dimension <b class="function">getPreferredSize</b> (int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setText</b> (String <i class="parameter">t</i>);</td><td align="right"><i> Overrides:TextComponent</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">echoCharIsSet</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding TextComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processActionEvent</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">minimumSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">minimumSize</b> (int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">preferredSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public Dimension <b class="function">preferredSize</b> (int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setEchoCharacter</b> (char <i class="parameter">c</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->TextComponent-->TextField</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.createTextField()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TexturePaint</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1658"></a>
<p>  This implementation of <tt class="literal">Paint</tt> is used to perform
  Java 2D drawing and filling operations with a texture or pattern of
  colors defined in a <tt class="literal">BufferedImage</tt> object.</p>
<p>  When you create a <tt class="literal">TexturePaint</tt> object, you must
  specify the <tt class="literal">BufferedImage</tt> that defines the texture.
  You must also specify a rectangle that defines both the initial
  position of the image and the tile size with which the
  image is replicated.  Typically, you specify a rectangle with its
  upper-left corner at (0,0) and a width and height equal to the width
  and height of the image</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TexturePaint</b> implements Paint {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TexturePaint</b> (java.awt.image.BufferedImage <i class="parameter">txtr</i>, java.awt.geom.Rectangle2D <i class="parameter">anchor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.geom.Rectangle2D <b class="function">getAnchorRect</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.image.BufferedImage <b class="function">getImage</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Paint</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public PaintContext <b class="function">createContext</b> (java.awt.image.ColorModel <i class="parameter">cm</i>, Rectangle <i class="parameter">deviceBounds</i>, java.awt.geom.Rectangle2D <i class="parameter">userBounds</i>, java.awt.geom.AffineTransform <i class="parameter">xform</i>, RenderingHints <i class="parameter">hints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Transparency</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getTransparency</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->TexturePaint(Paint(Transparency))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Toolkit</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1(mod)</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1659"></a>
This abstract class defines methods that, when implemented,
create platform-dependent peers for each of the
<tt class="literal">Component</tt> types in <tt class="literal">java.awt</tt>.  Java supports its
platform-independent GUI interface by implementing a
subclass of <tt class="literal">Toolkit</tt> for each platform.  Portable
programs should never use these methods to create
peers directly--they should use the <tt class="literal">Component</tt>
classes themselves.  A <tt class="literal">Toolkit</tt> object cannot be
instantiated directly.  The <tt class="literal">getToolkit()</tt> method of
<tt class="literal">Component</tt> returns
the <tt class="literal">Toolkit</tt> being used for a particular
component.</p>
<p>
<a name="INDEX-1660"></a><a name="INDEX-1661"></a><a name="INDEX-1662"></a><a name="INDEX-1663"></a><a name="INDEX-1664"></a>
The <tt class="literal">Toolkit</tt> class also defines methods that you can
use directly.  The static method <tt class="literal">getDefaultToolkit()</tt>
returns the default <tt class="literal">Toolkit</tt> that is in use.
<tt class="literal">getScreenSize()</tt> returns the screen size in pixels,
and <tt class="literal">getScreenResolution()</tt> returns the resolution in
dots per inch.  <tt class="literal">sync()</tt> flushes
all pending graphics output, which can be useful for
animation.

  Other methods of interest include <tt class="literal">beep()</tt>,
  <tt class="literal">getSystemClipboard()</tt>,
  <tt class="literal">createCustomCursor()</tt>, and
  <tt class="literal">addAWTEventListener()</tt>.

  <tt class="literal">getPrintJob()</tt> is part of the Java 1.1 printing API.
  In Personal Java environments, printing support is optional, and
  this method can throw an exception.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">Toolkit</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Toolkit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Toolkit <b class="function">getDefaultToolkit</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public static String <b class="function">getProperty</b> (String <i class="parameter">key</i>, String <i class="parameter">defaultValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected static Container <b class="function">getNativeContainer</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">removeAWTEventListener</b> (java.awt.event.AWTEventListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.image.ColorModel <b class="function">getColorModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">getMaximumCursorColors</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public int <b class="function">getMenuShortcutKeyMask</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getScreenResolution</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Dimension <b class="function">getScreenSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public abstract java.awt.datatransfer.Clipboard <b class="function">getSystemClipboard</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public final EventQueue <b class="function">getSystemEventQueue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">addAWTEventListener</b> (java.awt.event.AWTEventListener <i class="parameter">listener</i>, long <i class="parameter">eventMask</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (String <i class="parameter">name</i>, java.beans.PropertyChangeListener <i class="parameter">pcl</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public abstract void <b class="function">beep</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">checkImage</b> (Image <i class="parameter">image</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Cursor <b class="function">createCustomCursor</b> (Image <i class="parameter">cursor</i>, Point <i class="parameter">hotSpot</i>, String <i class="parameter">name</i>) throws IndexOutOfBoundsException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.dnd.DragGestureRecognizer <b class="function">createDragGestureRecognizer</b> (Class <i class="parameter">abstractRecognizerClass</i>, java.awt.dnd.DragSource <i class="parameter">ds</i>, Component <i class="parameter">c</i>, int <i class="parameter">srcActions</i>, java.awt.dnd.DragGestureListener <i class="parameter">dgl</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract java.awt.dnd.peer.DragSourceContextPeer <b class="function">createDragSourceContextPeer</b> (java.awt.dnd.DragGestureEvent <i class="parameter">dge</i>) throws java.awt.dnd.InvalidDnDOperationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Image <b class="function">createImage</b> (java.net.URL <i class="parameter">url</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Image <b class="function">createImage</b> (byte[ ] <i class="parameter">imagedata</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public abstract Image <b class="function">createImage</b> (String <i class="parameter">filename</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Image <b class="function">createImage</b> (java.awt.image.ImageProducer <i class="parameter">producer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public abstract Image <b class="function">createImage</b> (byte[ ] <i class="parameter">imagedata</i>, int <i class="parameter">imageoffset</i>, int <i class="parameter">imagelength</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Dimension <b class="function">getBestCursorSize</b> (int <i class="parameter">preferredWidth</i>, int <i class="parameter">preferredHeight</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public final Object <b class="function">getDesktopProperty</b> (String <i class="parameter">propertyName</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Image <b class="function">getImage</b> (java.net.URL <i class="parameter">url</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Image <b class="function">getImage</b> (String <i class="parameter">filename</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public abstract PrintJob <b class="function">getPrintJob</b> (Frame <i class="parameter">frame</i>, String <i class="parameter">jobtitle</i>, java.util.Properties <i class="parameter">props</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">prepareImage</b> (Image <i class="parameter">image</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (String <i class="parameter">name</i>, java.beans.PropertyChangeListener <i class="parameter">pcl</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">sync</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.ButtonPeer <b class="function">createButton</b> (Button <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.CanvasPeer <b class="function">createCanvas</b> (Canvas <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.CheckboxPeer <b class="function">createCheckbox</b> (Checkbox <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.CheckboxMenuItemPeer <b class="function">createCheckboxMenuItem</b> (CheckboxMenuItem <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.ChoicePeer <b class="function">createChoice</b> (Choice <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected java.awt.peer.LightweightPeer <b class="function">createComponent</b> (Component <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.DialogPeer <b class="function">createDialog</b> (Dialog <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.FileDialogPeer <b class="function">createFileDialog</b> (FileDialog <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.FramePeer <b class="function">createFrame</b> (Frame <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.LabelPeer <b class="function">createLabel</b> (Label <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.ListPeer <b class="function">createList</b> (java.awt.List <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.MenuPeer <b class="function">createMenu</b> (Menu <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.MenuBarPeer <b class="function">createMenuBar</b> (MenuBar <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.MenuItemPeer <b class="function">createMenuItem</b> (MenuItem <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.PanelPeer <b class="function">createPanel</b> (Panel <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected abstract java.awt.peer.PopupMenuPeer <b class="function">createPopupMenu</b> (PopupMenu <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.ScrollbarPeer <b class="function">createScrollbar</b> (Scrollbar <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected abstract java.awt.peer.ScrollPanePeer <b class="function">createScrollPane</b> (ScrollPane <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.TextAreaPeer <b class="function">createTextArea</b> (TextArea <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.TextFieldPeer <b class="function">createTextField</b> (TextField <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected abstract java.awt.peer.WindowPeer <b class="function">createWindow</b> (Window <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected abstract EventQueue <b class="function">getSystemEventQueueImpl</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected void <b class="function">initializeDesktopProperties</b> ();</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected Object <b class="function">lazilyLoadDesktopProperty</b> (String <i class="parameter">name</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">loadSystemColors</b> (int[ ] <i class="parameter">systemColors</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected final void <b class="function">setDesktopProperty</b> (String <i class="parameter">name</i>, Object <i class="parameter">newValue</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected final java.util.Map <b class="function">desktopProperties</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected final java.beans.PropertyChangeSupport <b class="function">desktopPropsSupport</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public abstract String[ ] <b class="function">getFontList</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public abstract FontMetrics <b class="function">getFontMetrics</b> (Font <i class="parameter">font</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Protected Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1#</span></td><td align="left">protected abstract java.awt.peer.FontPeer <b class="function">getFontPeer</b> (String <i class="parameter">name</i>, int <i class="parameter">style</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Component.getToolkit(), Toolkit.getDefaultToolkit(), Window.getToolkit(), java.awt.peer.ComponentPeer.getToolkit()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Transparency</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1665"></a>
<a name="INDEX-1666"></a>

<p> The integer constants defined by this interface identify the
three types of transparency supported by Java 2D.  Although the
<tt class="literal">Transparency</tt> interface is implemented only by a
couple of Java 2D classes, the constants it defines are more widely
used.  These constants are:</p>

<dl>
<dt>
<b><tt class="literal">OPAQUE</tt></b>
</dt>
<dd>
<p>	  All colors are fully opaque, with no transparency.  The alpha
	  value of every pixel is 1.0.
	</p>
</dd>
<dt>
<b><tt class="literal">BITMASK</tt></b>
</dt>
<dd>
<p>	  Colors are either fully opaque or fully transparent, as
	  specified by the bits in a bit mask.  That is, each pixel has
	  1 bit associated with it that specifies whether the pixel is
	  opaque (alpha is 1.0) or transparent (alpha is 0.0).  
	</p>
</dd>
<dt>
<b><tt class="literal">TRANSLUCENT</tt></b>
</dt>
<dd>
<p>	  Colors may be totally opaque, totally transparent, or
	  translucent.  This model of transparency uses an alpha
	  channel that is wider than 1 bit and supports a number of
	  alpha transparency levels between 1.0 and 0.0.
	</p>
</dd>
</dl>

<a name="INDEX-1667"></a>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Transparency</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BITMASK</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">OPAQUE</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TRANSLUCENT</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getTransparency</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">Paint, java.awt.image.ColorModel</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Window</b></font></td><td align="right"><font size="+1"><b>Java 1.0</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt</b></font></td><td align="right"><font size="+1"><b><i>serializable AWT component PJ1.1(mod)</i></b></font></td>
</tr>
</table>



<p>
<a name="INDEX-1668"></a><a name="INDEX-1669"></a><a name="INDEX-1670"></a><a name="INDEX-1671"></a><a name="INDEX-1672"></a><a name="INDEX-1673"></a>
This class represents a top-level window with no
borders or menu bar.  <tt class="literal">Window</tt> is a <tt class="literal">Container</tt>
with <tt class="literal">BorderLayout</tt> as its default layout manager.
<tt class="literal">Window</tt> is rarely used directly; its subclasses
<tt class="literal">Frame</tt> and <tt class="literal">Dialog</tt> are more commonly useful.</p>
<p>
<tt class="literal">show()</tt> (which overrides the <tt class="literal">show()</tt> method
of <tt class="literal">Component</tt>)
makes a <tt class="literal">Window</tt> visible and brings it to the front of
other windows. <tt class="literal">toFront()</tt> brings a window to the
front, and <tt class="literal">toBack()</tt> buries a window beneath others.
<tt class="literal">pack()</tt> is an important method that 
initiates layout management for the window, setting the window
size to match the preferred size of the components contained
within the window.  <tt class="literal">getToolkit()</tt> returns the
<tt class="literal">Toolkit()</tt> in use for this window.  Call
<tt class="literal">dispose()</tt> when a <tt class="literal">Window</tt> is no longer needed,
to free its window system resources.</p>
<p>  Although the <tt class="literal">Window</tt> class is part of the Personal
  Java API, Personal Java implementations can prohibit the creation of
  <tt class="literal">Window</tt> objects.  In this case, the
  <tt class="literal">Window()</tt> constructor throws an exception.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Window</b> extends Container {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">Window</b> (Window <i class="parameter">owner</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Window</b> (Frame <i class="parameter">owner</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">addWindowListener</b> (java.awt.event.WindowListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public void <b class="function">removeWindowListener</b> (java.awt.event.WindowListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public Component <b class="function">getFocusOwner</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.awt.im.InputContext <b class="function">getInputContext</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public java.util.Locale <b class="function">getLocale</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Window[ ] <b class="function">getOwnedWindows</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Window <b class="function">getOwner</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">public boolean <b class="function">isShowing</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Toolkit <b class="function">getToolkit</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final String <b class="function">getWarningString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">applyResourceBundle</b> (java.util.ResourceBundle <i class="parameter">rb</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">applyResourceBundle</b> (String <i class="parameter">rbName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">dispose</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">pack</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">toBack</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">toFront</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setCursor</b> (Cursor <i class="parameter">cursor</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processEvent</b> (AWTEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">hide</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">show</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected void <b class="function">finalize</b> () throws Throwable;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1</span></td><td align="left">protected void <b class="function">processWindowEvent</b> (java.awt.event.WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.1#</span></td><td align="left">public boolean <b class="function">postEvent</b> (Event <i class="parameter">e</i>);</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,MenuContainer,Serializable)-->Container-->Window</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">Dialog, Frame, javax.swing.JWindow</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.createWindow(), Window.Window(), java.awt.event.WindowEvent.WindowEvent(), javax.swing.JWindow.JWindow()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Window.{getOwnedWindows(), getOwner()}, java.awt.event.WindowEvent.getWindow(), javax.swing.SwingUtilities.windowForComponent()</tt>
</p>
<a name="INDEX-1674"></a>
<a name="INDEX-1675"></a>
</div>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch08_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch08_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch10_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch10_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">8.1. The java.applet Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">10. The java.awt.color Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
