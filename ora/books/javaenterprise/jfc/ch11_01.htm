<html>
<head>
<title>The java.awt.datatransfer Package (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The java.awt.datatransfer Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch10_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch10_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch12_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch12_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 11.  The java.awt.datatransfer Package</h1>

<p>  The <tt class="literal">java.awt.datatransfer</tt> 
  package contains classes and interfaces that define a framework
  for user-driven interapplication and intra-application data transfer.
  It also contains classes that support data transfer through
  cut-and-paste.  The Java 2 platform <tt class="literal">java.awt.dnd</tt> package
  implements drag-and-drop using the framework defined by this package.</p>
<a name="INDEX-1695"></a>
<a name="INDEX-1696"></a>
<a name="INDEX-1697"></a>
<a name="INDEX-1698"></a>
<a name="INDEX-1699"></a>
<a name="INDEX-1700"></a>
<p>  The <tt class="literal">Transferable</tt> interface is implemented by any
  class that allows data to be transferred.  The
  <tt class="literal">DataFlavor</tt> class defines the type of data to be
  transferred.  <tt class="literal">Clipboard</tt> and 
  <tt class="literal">ClipboardOwner</tt>
  are used for implementing cut-and-paste.
  <tt class="literal">StringSelection</tt> is a utility class that enables
  easy data transfer of strings.
  <a href="#jfcnut-ch-java.awt.datatransfer-fig-1">Figure 11-1</a> shows the class hierarchy of
  this package.
  See <a href="ch06_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch06_01.htm">Chapter 6, "Data Transfer"</a>, for more details about data transfer.</p>
<a name="INDEX-1701"></a>
<a name="INDEX-1702"></a>
<a name="jfcnut-ch-java.awt.datatransfer-fig-1"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.1101.gif" webstripperlinkwas="figs/jfcn.1101.gif"></div>
<h4 class="objtitle">Figure 11-1. The java.awt.datatransfer package</h4>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Clipboard</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.datatransfer</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1703"></a><a name="INDEX-1704"></a>
This class represents a clipboard on which data may be
transferred using the cut-and-paste metaphor.  When data is
cut, it should be encapsulated in a <tt class="literal">Transferable</tt>
object and registered with a <tt class="literal">Clipboard</tt> object by
<a name="INDEX-1705"></a>
calling <tt class="literal">setContents()</tt>.  A <tt class="literal">Clipboard</tt> can hold only a single piece of data at a time, so a
<tt class="literal">ClipboardOwner</tt> object must be specified when data is
placed on the clipboard.  This object is notified that
it no longer owns the clipboard when the data is
replaced by other, more recent, data.</p>
<p>When a paste is requested by the user, an application
requests the data on the clipboard by calling
<a name="INDEX-1706"></a><tt class="literal">getContents()</tt>, which returns a <tt class="literal">Transferable</tt>
object.  The methods of this object can be used to negotiate
a mutually compatible data format and then actually transfer
the data.</p>
<p>
<a name="INDEX-1707"></a>
A clipboard name is passed to the <tt class="literal">Clipboard()</tt>
constructor and may be retrieved with <tt class="literal">getName()</tt>.
This name is not actually used in Java 1.1, however.</p>
<p>Note that while an application can create its own private
<tt class="literal">Clipboard</tt> objects for intra-application
cut-and-paste, it is more common for an application to use the system
clipboard to enable cut-and-paste between applications.  You
can obtain the system

clipboard by calling the
<tt class="literal">getSystemClipboard()</tt> method of the current
<tt class="literal">Toolkit</tt> object.  Untrusted applet code is not
allowed to access the system clipboard, so untrusted applets cannot
participate in interapplication cut-and-paste.</p>
<a name="INDEX-1708"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Clipboard</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Clipboard</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Transferable <b class="function">getContents</b> (Object <i class="parameter">requestor</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContents</b> (Transferable <i class="parameter">contents</i>, ClipboardOwner <i class="parameter">owner</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Transferable <b class="function">contents</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected ClipboardOwner <b class="function">owner</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">ClipboardOwner.lostOwnership(), StringSelection.lostOwnership()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Toolkit.getSystemClipboard()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ClipboardOwner</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.datatransfer</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1709"></a>
This interface defines the single method that an object that
places data on a clipboard must implement.  This
method is used to notify the object when its data on the clipboard has been
replaced by other, more recent, data. An
object that places data on a clipboard must remain ready to
satisfy requests for that data until <tt class="literal">lostOwnership()</tt>
is called.
<a name="INDEX-1710"></a>
</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ClipboardOwner</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">lostOwnership</b> (Clipboard <i class="parameter">clipboard</i>, Transferable <i class="parameter">contents</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">StringSelection</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Clipboard.setContents()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">Clipboard.owner</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DataFlavor</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.datatransfer</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>
<a name="INDEX-1711"></a>
<p> 
  This class defines a data format for the purpose of data
  transfer through <tt class="literal">Transferable</tt> objects.  A
  <tt class="literal">DataFlavor</tt> is characterized by three values.  The
  first is a descriptive human-readable name, passed to a
  <tt class="literal">DataFlavor()</tt> constructor or set with
  <tt class="literal">setHumanPresentableName()</tt>.  The second value is a
  MIME type that specifies the data format, while the third is the
  representation class of the data.  This third value 
  is the class of object that is returned by the
  <tt class="literal">getTransferData()</tt> method of 
  <tt class="literal">Transferable</tt> when data is
  actually transferred.</p>
<a name="INDEX-1712"></a>
<p>  In Java 1.1, you can specify either a MIME type or a representation class,
  but not both.  If you specify a MIME type, the representation
  class is <tt class="literal">java.io.InputStream</tt>, and data is
  transferred through an input stream.  If, on the
  other hand, you use a <tt class="literal">Class</tt> object to specify the
  representation class, the MIME type is automatically set to the
  special value:</p>
<blockquote>
<pre class="programlisting">application/x-java-serialized-object class=<em class="replaceable">classname</em>
</pre>
</blockquote>

<p>  In this case, data is transferred through object serialization.</p>
<p>  The <tt class="literal">plainTextFlavor</tt> and
  <tt class="literal">stringFlavor</tt> constants are predefined
  <tt class="literal">DataFlavor</tt> objects for transferring text.  They
  illustrate these two distinctly different types of data transfer.
  <tt class="literal">plainTextFlavor</tt> is "text/plain" data transferred
  through an input stream, while <tt class="literal">stringFlavor</tt> is a
  <tt class="literal">String</tt> object transferred directly through
  serialization.</p>
<a name="INDEX-1713"></a>
<p>  In Java 1.2, <tt class="literal">DataFlavor</tt> provides several new ways to
  specify data formats.  First, the MIME type constant
  "application/x-java-serialized-object" is now available as the
  constant <tt class="literal">javaSerializedObjectMimeType</tt>.  Two similar
  MIME type constants have also been defined.
  <tt class="literal">javaJVMLocalObjectMimeType</tt> 
  represents a local reference to a Java object.  Data flavors of this
  type can be used only for transfers within a single Java VM.
  <tt class="literal">javaRemoteObjectMimeType</tt> is a
  MIME type that represents a remote reference to a
  <tt class="literal">java.rmi.Remote</tt> object.  In this case, a reference
  to the object, rather than the object
  data itself, is transferred.
  This reference can be used with RMI.  Note that all three of these MIME
  type constants are incomplete as is.  In order to use them, you must
  add <tt class="literal">class=</tt><em class="replaceable">classname</em> 
  to

 the MIME type string, 
  specifying the class name
  of the object or remote object being 

transferred.</p>

<p>  Another change in Java 1.2 is the addition of the predefined
  <tt class="literal">DataFlavor</tt><tt class="literal">javaFileListFlavor</tt>.
  This <tt class="literal">DataFlavor</tt> represents a list of filenames
  and is transferred as a <tt class="literal">java.util.List</tt> object
  containing <tt class="literal">java.io.File</tt> objects.
  <tt class="literal">javaFileListFlavor</tt> has been added because
  files and groups of files are commonly used with the drag-and-drop
  interface of the <tt class="literal">java.awt.dnd</tt> package.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DataFlavor</b> implements Cloneable, java.io.Externalizable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">DataFlavor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">DataFlavor</b> (String <i class="parameter">mimeType</i>) throws ClassNotFoundException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DataFlavor</b> (Class <i class="parameter">representationClass</i>, String <i class="parameter">humanPresentableName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DataFlavor</b> (String <i class="parameter">mimeType</i>, String <i class="parameter">humanPresentableName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public <b class="function">DataFlavor</b> (String <i class="parameter">mimeType</i>, String <i class="parameter">humanPresentableName</i>, ClassLoader <i class="parameter">classLoader</i>) throws ClassNotFoundException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final DataFlavor <b class="function">javaFileListFlavor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final String <b class="function">javaJVMLocalObjectMimeType</b> ;</td><td align="right"><i> ="application/x-java-jvm-local-objectref"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final String <b class="function">javaRemoteObjectMimeType</b> ;</td><td align="right"><i> ="application/x-java-remote-object"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final String <b class="function">javaSerializedObjectMimeType</b> ;</td><td align="right"><i> ="application/x-java-serialized-object"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DataFlavor <b class="function">plainTextFlavor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DataFlavor <b class="function">stringFlavor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">protected static final Class <b class="function">tryToLoadClass</b> (String <i class="parameter">className</i>, ClassLoader <i class="parameter">fallback</i>) throws ClassNotFoundException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">isFlavorJavaFileListType</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">isFlavorRemoteObjectType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">isFlavorSerializedObjectType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getHumanPresentableName</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setHumanPresentableName</b> (String <i class="parameter">humanPresentableName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getMimeType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">isMimeTypeSerializedObject</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public String <b class="function">getPrimaryType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Class <b class="function">getRepresentationClass</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">isRepresentationClassInputStream</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">isRepresentationClassRemote</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">isRepresentationClassSerializable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public String <b class="function">getSubType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">equals</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (DataFlavor <i class="parameter">dataFlavor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public String <b class="function">getParameter</b> (String <i class="parameter">paramName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isMimeTypeEqual</b> (String <i class="parameter">mimeType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final boolean <b class="function">isMimeTypeEqual</b> (DataFlavor <i class="parameter">dataFlavor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Externalizable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">readExternal</b> (java.io.ObjectInput <i class="parameter">is</i>) throws java.io.IOException, ClassNotFoundException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">writeExternal</b> (java.io.ObjectOutput <i class="parameter">os</i>) throws java.io.IOException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public Object <b class="function">clone</b> () throws CloneNotSupportedException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">o</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Protected Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">protected String <b class="function">normalizeMimeType</b> (String <i class="parameter">mimeType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">protected String <b class="function">normalizeMimeTypeParameter</b> (String <i class="parameter">parameterName</i>, String <i class="parameter">parameterValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DataFlavor(Cloneable,java.io.Externalizable(Serializable))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DataFlavor.{equals(), isMimeTypeEqual()}, FlavorMap.getNativesForFlavors(), StringSelection.{getTransferData(), isDataFlavorSupported()}, SystemFlavorMap.{encodeDataFlavor(), getNativesForFlavors()}, Transferable.{getTransferData(), isDataFlavorSupported()}, UnsupportedFlavorException.UnsupportedFlavorException(), java.awt.dnd.DropTargetContext.isDataFlavorSupported(), java.awt.dnd.DropTargetContext.TransferableProxy.{getTransferData(), isDataFlavorSupported()}, java.awt.dnd.DropTargetDragEvent.isDataFlavorSupported(), java.awt.dnd.DropTargetDropEvent.isDataFlavorSupported()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">StringSelection.getTransferDataFlavors(), SystemFlavorMap.decodeDataFlavor(), Transferable.getTransferDataFlavors(), java.awt.dnd.DropTargetContext.getCurrentDataFlavors(), java.awt.dnd.DropTargetContext.TransferableProxy.getTransferDataFlavors(), java.awt.dnd.DropTargetDragEvent.getCurrentDataFlavors(), java.awt.dnd.DropTargetDropEvent.getCurrentDataFlavors(), java.awt.dnd.peer.DropTargetContextPeer.getTransferDataFlavors()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DataFlavor.{javaFileListFlavor, plainTextFlavor, stringFlavor}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FlavorMap</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.datatransfer</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>


<a name="INDEX-1714"></a>
<a name="INDEX-1715"></a>
<p>  This interface defines methods that map between Java
  <tt class="literal">DataFlavor</tt> objects and platform-dependent strings
  that represent the data transfer type to the native system.
  <tt class="literal">getFlavorsForNatives()</tt> returns a
  <tt class="literal">java.util.Map</tt> object that maps from native data
  format names to <tt class="literal">DataFlavor</tt> objects.
  <tt class="literal">getNativesForFlavors()</tt> returns a
  <tt class="literal">Map</tt> from <tt class="literal">DataFlavor</tt> objects to
  native data format names.  For both these methods, you may specify either an
  array of the desired keys or <tt class="literal">null</tt>, to
  obtain a <tt class="literal">Map</tt> that contains all known key-to-value
  mappings. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">FlavorMap</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Map <b class="function">getFlavorsForNatives</b> (String[ ] <i class="parameter">natives</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Map <b class="function">getNativesForFlavors</b> (DataFlavor[ ] <i class="parameter">flavors</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">SystemFlavorMap</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">java.awt.dnd.DragSource.startDrag(), java.awt.dnd.DropTarget.{DropTarget(), setFlavorMap()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">SystemFlavorMap.getDefaultFlavorMap(), java.awt.dnd.DragSource.getFlavorMap(), java.awt.dnd.DropTarget.getFlavorMap()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StringSelection</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.datatransfer</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1716"></a>
This convenience class implements the <tt class="literal">Transferable</tt>
and <tt class="literal">ClipboardOwner</tt> interfaces in order to make it
easy to transfer <tt class="literal">String</tt> values through the AWT
data transfer mechanism.  <tt class="literal">StringSelection</tt> can transfer
<tt class="literal">String</tt> values using either the
<tt class="literal">DataFlavor.stringFlavor</tt> or
<tt class="literal">DataFlavor.plainTextFlavor</tt> data flavors.</p>
<p>
<a name="INDEX-1717"></a>
To create a <tt class="literal">StringSelection</tt> object, simply pass the
<tt class="literal">String</tt> you want to transfer to the
<tt class="literal">StringSelection()</tt> constructor.  You can then make
the <tt class="literal">StringSelection</tt> available for transfer by passing
it to the <tt class="literal">setContents()</tt> method of the
<tt class="literal">Clipboard</tt>.  You need never call the methods of
<tt class="literal">StringSelection</tt> yourself.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">StringSelection</b> implements ClipboardOwner, Transferable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">StringSelection</b> (String <i class="parameter">data</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ClipboardOwner</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">lostOwnership</b> (Clipboard <i class="parameter">clipboard</i>, Transferable <i class="parameter">contents</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Transferable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getTransferData</b> (DataFlavor <i class="parameter">flavor</i>) throws UnsupportedFlavorException, java.io.IOException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public DataFlavor[ ] <b class="function">getTransferDataFlavors</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDataFlavorSupported</b> (DataFlavor <i class="parameter">flavor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->StringSelection(ClipboardOwner,Transferable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SystemFlavorMap</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.datatransfer</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-1718"></a>
<p> 
  This <tt class="literal">FlavorMap</tt> implementation reads the mappings
  from
  <tt class="literal">DataFlavor</tt> objects to native data format names
  for the system from an external file.  In Sun's Java SDK implementation, for
  example, this class reads the
  <em class="emphasis">flavormap.properties</em> file.</p>
<a name="INDEX-1719"></a>
<p>
<tt class="literal">SystemFlavorMap</tt> does not have a public constructor.
  You can obtain an instance by calling
  <tt class="literal">getDefaultFlavorMap()</tt>.
  <tt class="literal">SystemFlavorMap</tt> also defines several static methods
  that you can use without instantiating the class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">SystemFlavorMap</b> implements FlavorMap {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static DataFlavor <b class="function">decodeDataFlavor</b> (String <i class="parameter">atom</i>) throws ClassNotFoundException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">decodeJavaMIMEType</b> (String <i class="parameter">atom</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">encodeDataFlavor</b> (DataFlavor <i class="parameter">df</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">encodeJavaMIMEType</b> (String <i class="parameter">mimeType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static FlavorMap <b class="function">getDefaultFlavorMap</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isJavaMIMEType</b> (String <i class="parameter">atom</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing FlavorMap</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Map <b class="function">getFlavorsForNatives</b> (String[ ] <i class="parameter">natives</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Map <b class="function">getNativesForFlavors</b> (DataFlavor[ ] <i class="parameter">flavors</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->SystemFlavorMap(FlavorMap)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Transferable</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.datatransfer</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1720"></a>
This interface defines the methods that a class must define
if it is to act as the source object in a data transfer
operation.</p>
<p>
<a name="INDEX-1721"></a><tt class="literal">getTransferDataFlavors()</tt> should return an array of
<tt class="literal">DataFlavor</tt> objects that specify the data types or
formats in which the object can provide its data.  The
<tt class="literal">DataFlavor</tt> objects should be ordered from best
format (most richly descriptive) to worst format.
<a name="INDEX-1722"></a><a name="INDEX-1723"></a><tt class="literal">isDataFlavorSupported()</tt> must return a <tt class="literal">boolean</tt> 
value that indicates whether it can transfer data using a specified
<tt class="literal">DataFlavor</tt>.  Finally, <tt class="literal">getTransferData()</tt> must
return an object that represents the data formatted as
required by the specified <tt class="literal">DataFlavor</tt>.</p>
<p>
<a name="INDEX-1724"></a><tt class="literal">StringSelection</tt> is a predefined class that
implements the <tt class="literal">Transferable</tt> interface for the
transfer of string data.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Transferable</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getTransferData</b> (DataFlavor <i class="parameter">flavor</i>) throws UnsupportedFlavorException, java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract DataFlavor[ ] <b class="function">getTransferDataFlavors</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isDataFlavorSupported</b> (DataFlavor <i class="parameter">flavor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">StringSelection, java.awt.dnd.DropTargetContext.TransferableProxy</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Clipboard.setContents(), ClipboardOwner.lostOwnership(), StringSelection.lostOwnership(), java.awt.dnd.DragGestureEvent.startDrag(), java.awt.dnd.DragSource.{createDragSourceContext(), startDrag()}, java.awt.dnd.DragSourceContext.DragSourceContext(), java.awt.dnd.DropTargetContext.createTransferableProxy()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Clipboard.getContents(), java.awt.dnd.DragSourceContext.getTransferable(), java.awt.dnd.DropTargetContext.{createTransferableProxy(), getTransferable()}, java.awt.dnd.DropTargetDropEvent.getTransferable(), java.awt.dnd.peer.DropTargetContextPeer.getTransferable()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">Clipboard.contents, java.awt.dnd.DropTargetContext.TransferableProxy.transferable</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>UnsupportedFlavorException</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.datatransfer</b></font></td><td align="right"><font size="+1"><b><i>serializable checked PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1725"></a>
Signals that a
<tt class="literal">Transferable</tt> object cannot provide data in the
requested format.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">UnsupportedFlavorException</b> extends Exception {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">UnsupportedFlavorException</b> (DataFlavor <i class="parameter">flavor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->UnsupportedFlavorException</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span><tt class="literal">StringSelection.getTransferData(), Transferable.getTransferData(), java.awt.dnd.DropTargetContext.TransferableProxy.getTransferData()</tt>
</p>
</div>
<a name="INDEX-1726"></a>
<a name="INDEX-1727"></a>
<a name="INDEX-1728"></a>
<a name="INDEX-1729"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch10_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch10_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch12_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch12_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">10.1. The java.awt.color Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">12. The java.awt.dnd Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
