<html>
<head>
<title>Swing and AWT Architecture (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Swing and AWTArchitecture">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch01_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch01_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part1.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part1.htm">Part 1: Introducing the Java Foundation Classes</a></td><td align="right" valign="top" width="172"><a href="ch02_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch02_02.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h1 class="chapter">Chapter 2.  Swing and AWT Architecture</h1>
<div class="htmltoc">
<h4 class="tochead">Contents:</h4>
<p>
<a href="ch02_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch02_01.htm">A Simple Graphical User Interface</a>
<br>
<a href="ch02_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch02_02.htm">Components</a>
<br>
<a href="ch02_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch02_03.htm">Properties</a>
<br>
<a href="ch02_04.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch02_04.htm">Containers and Containment</a>
<br>
<a href="ch02_05.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch02_05.htm">Layout Management</a>
<br>
<a href="ch02_06.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch02_06.htm">Event Handling</a>
<br>
<a href="ch02_07.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch02_07.htm">Swing Component Architecture</a>
<br>
</p>
</div>

<a name="INDEX-27"></a>

<p>The Abstract Windowing Toolkit (AWT) provides basic facilities
for creating graphical user interfaces (GUIs), and also for drawing
graphics, as we'll discuss in a later chapter.  AWT has been a core
part of Java since Java 1.0.  The GUI features of AWT are layered on
top of the native GUI system of the underlying platform.  In other
words, when you create a graphical push button with AWT, AWT creates a
Windows push button, or a Macintosh push button, or a Motif push
button, or whatever, depending on the platform on which the
application is running.  In Java 1.1, AWT was extended to allow the
creation of "lightweight" GUI components that do not have
corresponding native GUI components behind them.</p>

<a name="INDEX-28"></a>
<a name="INDEX-29"></a>
<a name="INDEX-30"></a>
<a name="INDEX-31"></a>
<a name="INDEX-32"></a>

<p>Swing is a new GUI toolkit that is available as a core part of the Java 2
      platform and also as an extension to Java 1.1.  Swing is an
      extension of the AWT toolkit, not an entirely new toolkit.  All of
      the GUI components provided by Swing are lightweight components,
      so they do not rely on the underlying native GUIs.  The result is 
      that Swing is more portable, making it much easier to write graphical
      applications that behave the same on all platforms.  Swing is also
      larger and more comprehensive than AWT.  In addition to a complete
      and powerful set of GUI components, Swing provides a number
      of utilities that make it easier to write graphical applications.</p>

<p>Swing offers a great step forward when compared to 
      AWT.  You should use Swing in
      all your Java 2 applications.  
      You should also seriously consider using it as
      an extension for Java 1.1 applications.  Unfortunately, at the time of
      this writing, common web browsers do not yet support
      Swing, so if you are writing applets, you should either run those
      applets under the Java Plug-in, or you should avoid
      the use of Swing and rely exclusively on the features of AWT.  See
      <a href="ch07_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch07_01.htm">Chapter 7, "Applets"</a>, for more information on applets.</p>

<a name="INDEX-33"></a>
<a name="INDEX-34"></a>

<p>This chapter introduces the basic architecture used by both
      AWT and Swing.  For more information on Swing and AWT, see 
      <em class="emphasis">Java
      Swing</em>, by Robert Eckstein, Marc Loy, and Dave Wood 
      (O'Reilly), and <em class="emphasis">Java AWT Reference</em>, by
      John Zukowski (O'Reilly), respectively.</p>

<h2 class="sect1">2.1. A Simple Graphical User Interface</h2>

<p>
<a href="#jfcnut-ch-2-ex-1">Example 2-1</a> is a simple program that uses
      Swing to create and display a graphical user interface.  <a href="#jfcnut-ch-2-fig-1">Figure 2-1</a> shows the GUI created by this
      program.</p>

<a name="INDEX-35"></a>
<a name="jfcnut-ch-2-fig-1"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.0201.gif" webstripperlinkwas="figs/jfcn.0201.gif"></div>
<h4 class="objtitle">Figure 2-1. The GUI of the DisplayMessage program</h4>

<p>The <tt class="literal">DisplayMessage</tt> 
      program is designed for use in a shell script or batch
      file.<a href="#FOOTNOTE-1">[1]</a>
      If you invoke the program on the command line with the text 
      of a question, it
      displays the question to the user and waits for the user to click
      the <b class="emphasis-bold">Yes</b> 
      button or the <b class="emphasis-bold">No</b>
      button.  The program sets its exit code based
      on the user's response, so a shell script can examine this exit
      code to determine how the user responded.  The program expects from one
      to three command-line arguments that specify the text of the
      question and the text for the "Yes" and "No"
      buttons, respectively.  
      For example, you might invoke the program like this:</p>
<blockquote class="footnote">

<a name="FOOTNOTE-1"></a>
<p>[1]Because the Java Virtual Machine takes a long time
	  to start up, it is not actually practical to use this program in a
	  shell script.  It is a useful example nevertheless.</p>
</blockquote>

<blockquote>
<pre class="programlisting">% java DisplayMessage "Do you really want to quit?" "Yes, Please", "No, Thanks"</pre>
</blockquote>

<p>The example illustrates step-by-step how to create a Swing GUI.  Don't
      worry if you don't understand the details of this program yet.  If
      you read it
      through once now to get the big picture, you can refer back to it as
      you read the sections that follow.</p>
<a name="jfcnut-ch-2-ex-1"></a>
<div class="example">
<h4 class="objtitle">Example 2-1. Creating a Simple GUI with Swing</h4>

<blockquote>
<pre class="programlisting">import java.awt.*;             // AWT classes
import javax.swing.*;          // Swing components and classes
import javax.swing.border.*;   // Borders for Swing components
import java.awt.event.*;       // Basic event handling 

public class DisplayMessage {
  public static void main(String[] args) {
    /*
     * Step 1: Create the components
     */
    JLabel msgLabel = new JLabel();      // Component to display the question
    JButton yesButton = new JButton();   // Button for an affirmative response
    JButton noButton = new JButton();    // Button for a negative response

    /*
     * Step 2: Set properties of the components
     */
    msgLabel.setText(args[0]);                           // The msg to display
    msgLabel.setBorder(new EmptyBorder(10,10,10,10));    // A 10-pixel margin 
    yesButton.setText((args.length &gt;= 2)?args[1]:"Yes"); // Text for yes button
    noButton.setText((args.length &gt;= 3)?args[2]:"No");   // Text for no button

    /*
     * Step 3: Create containers to hold the components
     */
    JFrame win = new JFrame("Message");  // The main application window
    JPanel buttonbox = new JPanel();     // A container for the two buttons
    
    /*
     * Step 4: Specify LayoutManagers to arrange components in the containers
     */
    win.getContentPane().setLayout(new BorderLayout()); // Layout on borders
    buttonbox.setLayout(new FlowLayout());              // Layout left-to-right

    /*
     * Step 5: Add components to containers, with optional layout constraints
     */
    buttonbox.add(yesButton);            // Add yes button to the panel
    buttonbox.add(noButton);             // Add no button to the panel
    
    // add JLabel to window, telling the BorderLayout to put it in the middle
    win.getContentPane().add(msgLabel, "Center");        

    // add panel to window, telling the BorderLayout to put it at the bottom
    win.getContentPane().add(buttonbox, "South");  
    
    /*
     * Step 6: Arrange to handle events in the user interface
     */
    yesButton.addActionListener(new ActionListener() {  // Note: inner class
      // This method is called when the Yes button is clicked
      public void actionPerformed(ActionEvent e) { System.exit(0); }
    });

    noButton.addActionListener(new ActionListener() {   // Note: inner class
      // This method is called when the No button is clicked
      public void actionPerformed(ActionEvent e) { System.exit(1); }
    });

    /*
     * Step 7: Display the GUI to the user
     */
    win.pack();   // Set the size of the window based on its children's sizes
    win.show();   // Make the window visible
  }
}</pre>
</blockquote>
</div>
<a name="INDEX-36"></a>

<a name="INDEX-147"></a>
<a name="INDEX-148"></a>

<a name="INDEX-150"></a>



<a name="INDEX-391"></a>
<a name="INDEX-392"></a>
<a name="INDEX-393"></a>
<a name="INDEX-394"></a>



<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch01_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch01_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch02_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch02_02.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">Chapter A. The Java Foundation Classes</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">2.2. Components</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
