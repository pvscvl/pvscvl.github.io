<html>
<head>
<title>Java 2D Graphics Attributes and Operations (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Java 2D Graphics Attributes and Operations">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch04_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch04_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch04_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch04_01.htm">Chapter 4: Graphics with AWT

and Java 2D</a></td><td align="right" valign="top" width="172"><a href="ch04_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch04_03.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h2 class="sect1">4.2. Java 2D Graphics Attributes and Operations</h2>
<a name="INDEX-793"></a>
<a name="INDEX-794"></a>

<p>Java 2D dramatically expands the graphics capabilities of Java.  It
      does this through the <tt class="literal">java.awt.Graphics2D</tt>
      subclass of <tt class="literal">java.awt.Graphics</tt>.  In Java 2, you
      can simply cast any <tt class="literal">Graphics</tt> object you are given
      to a <tt class="literal">Graphics2D</tt> object, and then you can use the new
      features of Java 2D.</p>

<p>
<a href="#jfcnut-ch-4-tab-graphics2dattrs">Table 4-5</a> and
      <a href="#jfcnut-ch-4-tab-graphics2dops">Table 4-6</a> 
      summarize the new features of Java 2D
      by listing the graphics attributes and
      graphics operations supported by the
      <tt class="literal">Graphics2D</tt> class.</p>

<a name="INDEX-795"></a>













<a name="jfcnut-ch-4-tab-graphics2dattrs"></a>
<h4 class="objtitle">Table 4-5. Graphics Attributes of Java 2D</h4>
<table border="1">
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>

<tr>
<a name="INDEX-796"></a>
<td>Foreground color</td>
<td><tt class="literal">Color</tt></td>
<td>
<p>Inherited from <tt class="literal">Graphics</tt> but
		superseded by the fill style attribute and the
		<tt class="literal">Paint</tt> interface.</p>
</td>
</tr>
<tr>
<td>Background color</td>
<td><tt class="literal">Color</tt></td>
<td>
<p>Inherited from <tt class="literal">Graphics</tt> but
		can now be set and queried with
		<tt class="literal">setBack-

ground()</tt> and
		<tt class="literal">getBackground()</tt>.  This attribute is still used only by
		<tt class="literal">clearRect()</tt>. </p>
</td>
<a name="INDEX-797"></a>
</tr>
<tr>
<td>Font</td>
<td><tt class="literal">Font</tt></td>
<td>
<p>Inherited from <tt class="literal">Graphics</tt>.  All of the system
		fonts are now available to Java.</p>
</td>
<a name="INDEX-798"></a>
</tr>
<tr>
<td>Clipping region</td>
<td><tt class="literal">Shape</tt></td>
<td>
<p>Inherited from <tt class="literal">Graphics</tt>.  In Java 2D,
		however, arbitrary <tt class="literal">Shape</tt> objects may
		be used; the clipping region is no longer restricted to
		only rectangular shapes.  A new method,
		which is called <tt class="literal">clip()</tt>, sets the clipping region to
		the intersection of the current region and a specified
		<tt class="literal">Shape</tt>. </p>
</td>
<a name="INDEX-799"></a>
<a name="INDEX-800"></a>
</tr>
<tr>
<td>Line style</td>
<td><tt class="literal">Stroke</tt></td>
<td>
<p>A <tt class="literal">Stroke</tt> object specifies how lines are
		drawn.  The <tt class="literal">BasicStroke</tt>
		implementation supports line width, dash pattern, and
		other attributes, described in more detail later in
		the chapter. Set
		the current line style with
		<tt class="literal">setStroke()</tt>. </p>
</td>
<a name="INDEX-801"></a>
<a name="INDEX-802"></a>
</tr>



<tr>
<td>Fill style</td>
<td><tt class="literal">Paint</tt></td>
<td>
<p>A <tt class="literal">Paint</tt> object specifies how an area is
		filled.  <tt class="literal">Color</tt> implements this
		interface and fills with a solid color, 
		<tt class="literal">java.awt.TexturePaint</tt> fills with a
		tiled image, and
		<tt class="literal">java.awt.Gra-

dientPaint</tt> fills with a
		color gradient.  Set the current fill style with
		<tt class="literal">setPaint()</tt>. </p>
</td>
<a name="INDEX-803"></a>
<a name="INDEX-804"></a>
</tr>
<tr>
<a name="INDEX-805"></a>
<a name="INDEX-806"></a>
<a name="INDEX-807"></a>
<td>Compositing</td>
<td><tt class="literal">Composite</tt></td>
<td>
<p>A <tt class="literal">Composite</tt> object controls how the
		color of a pixel is combined, or composited, with the
		color of the pixel on top of which it is drawn.  The default
		compositing operation combines translucent pixels with
		the pixels they overlay, letting the overlaid colors
		"show through."  The <tt class="literal">AlphaComposite</tt>
		class is an implementation of
		<tt class="literal">Composite</tt>; it performs various types
		of compositing, based on the alpha-transparency of
		the pixels involved.</p>
</td>
<a name="INDEX-808"></a>
<a name="INDEX-809"></a>
</tr>
<tr>
<td>Transform</td>
<td>
<p>
<tt class="literal">java.awt.geom.-

AffineTransform</tt>
</p>
</td>
<td>
<p>Controls the translation, scaling, rotation, and shearing
		of the coordinate system.  Set this attribute with
		<tt class="literal">setTransform()</tt>, or modify the current
		transform with <tt class="literal">translate()</tt>,
		<tt class="literal">scale()</tt>, <tt class="literal">rotate()</tt>,
		<tt class="literal">shear()</tt>, or
		<tt class="literal">transform()</tt>. </p>
</td>
<a name="INDEX-810"></a>
<a name="INDEX-811"></a>
</tr>
<tr>
<a name="INDEX-812"></a>
<a name="INDEX-813"></a>
<a name="INDEX-814"></a>
<a name="INDEX-815"></a>
<td>Hints</td>
<td><tt class="literal">RenderingHints</tt></td>
<td>
<p>A <tt class="literal">RenderingHints</tt> object allows a
		program to express preferences about various speed
		versus quality trade-offs made by Java 2D.  Most notably,
		<tt class="literal">RenderingHints</tt> controls whether
		Java 2D performs antialiasing.  Set with
		<tt class="literal">setRenderingHints()</tt>,
		<tt class="literal">setRendering-

Hint()</tt>, or 
		<tt class="literal">addRenderingHints()</tt>.</p>
</td>
</tr>
</table>
<a name="INDEX-816"></a>
<a name="INDEX-817"></a>
<a name="INDEX-818"></a>
<a name="INDEX-819"></a>
<a name="jfcnut-ch-4-tab-graphics2dops"></a>
<h4 class="objtitle">Table 4-6. Graphics Operations of Java 2D</h4>
<table border="1">
<tr>
<th>Operation</th>
<th>Methods</th>
<th>Description</th>
</tr>

<tr>
<a name="INDEX-820"></a>
<td>Drawing</td>
<td>
<p>
<tt class="literal">draw()</tt>, inherited methods</p>
</td>
<td>
<p>
<tt class="literal">draw()</tt> outlines an arbitrary
		<tt class="literal">Shape</tt>.  Uses the clip, transform,
		stroke, paint, and composite attributes.</p>
</td>
<a name="INDEX-821"></a>
<a name="INDEX-822"></a>
</tr>
<tr>
<td>Filling</td>
<td>
<p>
<tt class="literal">fill()</tt>, inherited methods</p>
</td>
<td>
<p>
<tt class="literal">fill()</tt> fills an arbitrary
		<tt class="literal">Shape</tt>.  Uses the 
		clip, transform, paint, and composite attributes.</p>
</td>
<a name="INDEX-823"></a>
</tr>
<tr>
<td>Hit detection</td>
<td>
<p>
<tt class="literal">hit()</tt>
</p>
</td>
<td>
<p>Tests whether a given rectangle (in device coordinates)
		intersects the interior or outline of an arbitrary
		<tt class="literal">Shape</tt>.  Uses the clip, transform,
		and stroke attributes when testing the
		outline of a <tt class="literal">Shape</tt>.</p>
</td>
<a name="INDEX-824"></a>
<a name="INDEX-825"></a>
</tr>

<tr>
<a name="INDEX-826"></a>
<td>Text drawing</td>
<td>
<p>
<tt class="literal">drawString()</tt>,
		<tt class="literal">drawGlyphVector()</tt>,
		inherited methods</p>
</td>
<td>
<p>Java 2D defines text-drawing methods that take
		<tt class="literal">String</tt>, 
		<tt class="literal">java.text.AttributedCharacter-

Iterator</tt>,
		and <tt class="literal">java.awt.font.-

GlyphVector</tt> arguments.
		Text drawing uses the clip, transform, font, paint, and
		composite attributes.  Note, however, that
		<tt class="literal">AttributedCharacterIterator</tt> objects
		supply their own fonts.</p>
</td>
<a name="INDEX-827"></a>
</tr>
<tr>
<td>Image drawing</td>
<td>
<p>
<tt class="literal">drawImage()</tt>, 
		<tt class="literal">drawRenderableImage()</tt>,
		<tt class="literal">drawRenderedImage()</tt>,
		inherited methods</p>
</td>
<td>
<p>Java 2D defines new image-drawing methods that draw
		special types of images.
		<tt class="literal">java.awt.image.BufferedImage</tt> 
		is the most important
		new type.  These methods use the clip, transform, and
		composite attributes.</p>
</td>
</tr>
</table>
<a name="INDEX-828"></a>
<a name="INDEX-829"></a>
<a name="INDEX-830"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch04_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch04_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch04_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch04_03.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">4.1. Graphics Before Java 2D</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">4.3. The Coordinate System</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
