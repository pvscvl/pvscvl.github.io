<html>
<head>
<title>JFileChooser (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="JFileChooser">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch03_15.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch03_15.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch03_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch03_01.htm">Chapter 3: Swing

Programming Topics</a></td><td align="right" valign="top" width="172"><a href="ch03_17.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch03_17.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h2 class="sect1">3.16. JFileChooser</h2>
<a name="INDEX-599"></a>
<a name="INDEX-600"></a>
<a name="INDEX-601"></a>
<a name="INDEX-602"></a>
<a name="INDEX-603"></a>

<p>
<tt class="literal">javax.swing.JFileChooser</tt> is a specialized
      component that allows the user to browse the filesystem and
      select a file.  The easiest way to use it is with the
      <tt class="literal">showOpenDialog()</tt> and
      <tt class="literal">showSaveDialog()</tt> methods.  These methods
      differ only in the text that appears in the 
      "Okay" button.  You
      can also call the <tt class="literal">showDialog()</tt> method and
      specify your own text for that button.  Each of these methods returns an
      integer status code that specifies how the user dismissed the
      dialog.  If the return value is
      <tt class="literal">APPROVE_OPTION</tt>, the user actually
      selected a file, which you can obtain with the
      <tt class="literal">getSelectedFile()</tt> method.  For example:
</p>

<blockquote>
<pre class="programlisting">public void saveAs() {
  JFileChooser chooser = new JFileChooser();
  int result = chooser.showSaveDialog(mainpane);
  if (result == JFileChooser.APPROVE_OPTION)
    

save(chooser.getSelectedFile());
}</pre>
</blockquote>

<p>
<a name="INDEX-604"></a><a name="INDEX-605"></a><a name="INDEX-606"></a><a name="INDEX-607"></a>
</p>

<p>Note that <tt class="literal">showSaveDialog()</tt> and
      <tt class="literal">showOpenDialog()</tt> are instance
      methods, not static methods like those used with
      <tt class="literal">JOptionPane</tt>.  This means that you can
      customize the dialog by setting properties on your
      <tt class="literal">JFileChooser</tt> object.  You may be
      interested in setting the <tt class="literal">currentDirectory</tt> and
      <tt class="literal">fileSelectionMode</tt> properties 
      before you display a
      <tt class="literal">JFileChooser</tt>.
      <tt class="literal">fileSelectionMode</tt> can be set to
      <tt class="literal">FILES_ONLY</tt>,
      <tt class="literal">DIRECTORIES_ONLY</tt>, or
      <tt class="literal">FILES_AND_DIRECTORIES</tt>.  Once you create a
      <tt class="literal">JFileChooser</tt> for an application, you may want
      to reuse it, rather than creating a new one each time you need
      one.  If you do so, the <tt class="literal">JFileChooser</tt> automatically
      remembers the <tt class="literal">currentDirectory</tt> most recently
      selected by the user.</p>

<h3 class="sect2">3.16.1. Using File Filters</h3>
<a name="INDEX-608"></a>
<a name="INDEX-609"></a>

<p>The <tt class="literal">javax.swing.filechooser</tt> package defines
	auxiliary classes that are used by
	<tt class="literal">JFileChooser</tt>.  One of the most important of
	these is <tt class="literal">FileFilter</tt>.  The abstract
	<tt class="literal">javax.swing.filechooser.FileFilter</tt> class is
	much like the <tt class="literal">java.io.FileFilter</tt> interface.
	Each defines an <tt class="literal">accept()</tt> method that is
	passed <tt class="literal">File</tt> objects and returns
	<tt class="literal">true</tt> for each file that should be
	displayed.  The <tt class="literal">FileFilter</tt> class used by
	<tt class="literal">JFileChooser</tt> has an additional
	<tt class="literal">getDescription()</tt> method that
	returns a string that names the types of files accepted by the
	filter.  For example, you might define a <tt class="literal">FileFilter</tt>
	subclass that accepts files with names ending in 
	<em class="emphasis">.htm</em> or
	<em class="emphasis">.html</em> and returns a description of "HTML Files."</p>

<a name="INDEX-610"></a>
<a name="INDEX-611"></a>
<a name="INDEX-612"></a>

<p>When you create a <tt class="literal">JFileChooser</tt>, you can
	specify the <tt class="literal">FileFilter</tt> it is to use with
	<tt class="literal">setFileFilter()</tt>.  Alternately,
	you can specify an array of <tt class="literal">FileFilter</tt>
	objects with <tt class="literal">setChoosableFileFilters()</tt>.  In
	this case, <tt class="literal">JFileChooser</tt> displays the descriptions of
	the filters and allows the user to choose one.</p>

<h3 class="sect2">3.16.2. Customizing JFileChooser</h3>
<a name="INDEX-613"></a>
<a name="INDEX-614"></a>
<a name="INDEX-615"></a>
<a name="INDEX-616"></a>

<p>The behavior of a <tt class="literal">JFileChooser</tt> can be
	customized by providing your own implementation of
	<tt class="literal">FileView</tt> and
	<tt class="literal">FileSystemView</tt>.  Both of these abstract
	classes are defined in the
	<tt class="literal">javax.swing.filechooser</tt> class.
	<tt class="literal">FileView</tt> defines methods that affect the way
	individual files are displayed by the
	<tt class="literal">JFileChooser</tt>, while
	<tt class="literal">FileSystemView</tt> defines methods that enable
	the <tt class="literal">JFileChooser</tt> to handle operating-system
	dependencies in the filesystem.  <tt class="literal">FileSystemView</tt>
	understands the notion of
	hidden files, and it can return a complete list of filesystem
	roots, a capability that was lacking from the basic
	<tt class="literal">java.io.File</tt> class prior to Java 1.2.
	The default <tt class="literal">FileView</tt> and
	<tt class="literal">FileSystemView</tt> classes provided by 
	<tt class="literal">JFileChooser</tt> are perfectly adequate for most
	purposes, so you typically don't have to implement these classes
	yourself. </p>

<a name="INDEX-617"></a>
<a name="INDEX-618"></a>

<p>It is also possible to customize a
	<tt class="literal">JFileChooser</tt> by providing an accessory
	component.  If you pass a <tt class="literal">JComponent</tt> to the
	<tt class="literal">setAccessory()</tt> method of 
	<tt class="literal">JFileChooser</tt>, the Swing component you specify
	is displayed in the file chooser dialog box.  A common use of 
	a file chooser accessory is as a file preview component.
	In order to provide a preview of the currently selected file, the
	accessory must know what the currently selected file is.  It can
	get this information by implementing the
	<tt class="literal">PropertyChangeListener</tt> interface and
	listening for changes to the <tt class="literal">selectedFile</tt>
	property.  In order for this to work, you have to pass the
	accessory object to the
	<tt class="literal">addPropertyChangeListener()</tt> method of the
	<tt class="literal">JFileChooser</tt>, of course.</p>

<a name="INDEX-619"></a>
<a name="INDEX-620"></a>
<a name="INDEX-621"></a>
<a name="INDEX-622"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch03_15.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch03_15.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch03_17.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch03_17.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">3.15. Simple Dialogs</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">3.17. JColorChooser</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
