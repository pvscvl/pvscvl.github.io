<html>
<head>
<title>The javax.swing.undo Package (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The javax.swing.undo Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch34_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch34_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch36_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch36_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 35.  The javax.swing.undo Package</h1>

<p>  The classes and interfaces in this package form the undo
  framework for Swing applications.  The <tt class="literal">UndoManager</tt>
  manages a list of <tt class="literal">UndoableEdit</tt> objects, each of
  which can be individually undone or redone.  Any Swing application
  that wants to provide an undo capability will find this package
  useful.
  <a href="#jfcnut-ch-javax.swing.undo-fig-1">Figure 35-1</a> shows the class hierarchy of
  this package.</p>
<a name="INDEX-3234"></a>
<a name="INDEX-3235"></a>
<a name="jfcnut-ch-javax.swing.undo-fig-1"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.3501.gif" webstripperlinkwas="figs/jfcn.3501.gif"></div>
<h4 class="objtitle">Figure 35-1. The javax.swing.undo package</h4>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractUndoableEdit</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.undo</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3236"></a>
<p>  This class is a simple implementation of
  <tt class="literal">UndoableEdit</tt>.  It enforces the restriction that an
  edit cannot be undone twice or redone without first being undone.
  Although the <tt class="literal">undo()</tt> and <tt class="literal">redo()</tt>
  methods do not actually undo or redo anything, subclasses should still
  call <tt class="literal">super.undo()</tt> and
  <tt class="literal">super.redo()</tt> in order to retain these restrictions.
  <tt class="literal">addEdit()</tt> and <tt class="literal">replaceEdit()</tt>
  return <tt class="literal">false</tt>; this implementation makes no attempt
  to merge events.  <tt class="literal">getUndoPresentationName()</tt> and
  <tt class="literal">getRedoPresentationName()</tt> return the strings "Undo"
  and "Redo", followed by the string returned from
  <tt class="literal">getPresentationName()</tt>.  Therefore, typical
  subclasses only need to override
  <tt class="literal">getPresentationName()</tt>. </p>
<a name="INDEX-3237"></a>
<a name="INDEX-3238"></a>
<a name="INDEX-3239"></a>
<a name="INDEX-3240"></a>
<a name="INDEX-3241"></a>
<a name="INDEX-3242"></a>
<a name="INDEX-3243"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">AbstractUndoableEdit</b> implements Serializable, UndoableEdit {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AbstractUndoableEdit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final String <b class="function">RedoName</b> ;</td><td align="right"><i> ="Redo"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final String <b class="function">UndoName</b> ;</td><td align="right"><i> ="Undo"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing UndoableEdit</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">addEdit</b> (UndoableEdit <i class="parameter">anEdit</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">canRedo</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">canUndo</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">die</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getPresentationName</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getRedoPresentationName</b> ();</td><td align="right"><i> default:"Redo"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUndoPresentationName</b> ();</td><td align="right"><i> default:"Undo"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSignificant</b> ();</td><td align="right"><i> constant default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">redo</b> () throws CannotRedoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">replaceEdit</b> (UndoableEdit <i class="parameter">anEdit</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">undo</b> () throws CannotUndoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractUndoableEdit(Serializable,UndoableEdit)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.AbstractDocument.ElementEdit, javax.swing.text.DefaultStyledDocument.AttributeUndoableEdit, CompoundEdit, StateEdit</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CannotRedoException</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.undo</b></font></td><td align="right"><font size="+1"><b><i>serializable unchecked</i></b></font></td>
</tr>
</table>
<a name="INDEX-3244"></a>
<p> 
  Signals that an <tt class="literal">UndoableEdit</tt> cannot be redone, perhaps because it has not been undone yet or because
  it has already been redone. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">CannotRedoException</b> extends RuntimeException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CannotRedoException</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->RuntimeException-->CannotRedoException</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span><tt class="literal">javax.swing.text.AbstractDocument.DefaultDocumentEvent.redo(), javax.swing.text.AbstractDocument.ElementEdit.redo(), javax.swing.text.DefaultStyledDocument.AttributeUndoableEdit.redo(), AbstractUndoableEdit.redo(), CompoundEdit.redo(), UndoableEdit.redo(), UndoManager.{redo(), redoTo(), undoOrRedo()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CannotUndoException</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.undo</b></font></td><td align="right"><font size="+1"><b><i>serializable unchecked</i></b></font></td>
</tr>
</table>
<a name="INDEX-3245"></a>
<p> 
  Signals that an <tt class="literal">UndoableEdit</tt> cannot be undone, perhaps because it has already been undone.  </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">CannotUndoException</b> extends RuntimeException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CannotUndoException</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->RuntimeException-->CannotUndoException</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span><tt class="literal">javax.swing.text.AbstractDocument.DefaultDocumentEvent.undo(), javax.swing.text.AbstractDocument.ElementEdit.undo(), javax.swing.text.DefaultStyledDocument.AttributeUndoableEdit.undo(), AbstractUndoableEdit.undo(), CompoundEdit.undo(), UndoableEdit.undo(), UndoManager.{undo(), undoOrRedo(), undoTo()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CompoundEdit</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.undo</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3246"></a>
<a name="INDEX-3247"></a>
<a name="INDEX-3248"></a>
<a name="INDEX-3249"></a>
<a name="INDEX-3250"></a>
<a name="INDEX-3251"></a>
<p>  This class is a compound <tt class="literal">UndoableEdit</tt> that collects
  a group of <tt class="literal">UndoableEdit</tt> objects into a single
  object and allows them to be undone and redone as a group.  After
  creating a <tt class="literal">CompoundEdit</tt> object, you use
  <tt class="literal">addEdit()</tt> to add <tt class="literal">UndoableEdit</tt>
  objects to it.  When you are done adding edits, call
  <tt class="literal">end()</tt>.  Once <tt class="literal">end()</tt> has been
  called, you can freely use the <tt class="literal">undo()</tt> and
  <tt class="literal">redo()</tt> methods.  The
  <tt class="literal">isInProgress()</tt> method returns
  <tt class="literal">true</tt> if <tt class="literal">end()</tt> has not been
  called yet and edits are still being added.
  While <tt class="literal">CompoundEdit</tt> maintains a list of
  <tt class="literal">UndoableEdit</tt> objects to undo and redo, the
  <tt class="literal">addEdit()</tt> method does not simply add edits to this
  list.  When a new edit is added,
  <tt class="literal">CompoundEdit</tt> first attempts to merge it with the
  previously added edit by calling the <tt class="literal">addEdit()</tt> and
  <tt class="literal">replaceEdit()</tt> methods of the individual
  <tt class="literal">UndoableEdit</tt> objects.  If these methods fail to
  merge the two edits into one, the new edit is added to the list
  of edits.
  The <tt class="literal">isSignificant()</tt> method returns
  <tt class="literal">true</tt> if any of the edits on the list of edits is
  significant and returns <tt class="literal">false</tt> otherwise.
  <tt class="literal">getPresentationName()</tt> returns the name of the last
  edit on the list, if it has one.</p>
<a name="INDEX-3252"></a>
<a name="INDEX-3253"></a>
<a name="INDEX-3254"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">CompoundEdit</b> extends AbstractUndoableEdit {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CompoundEdit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">end</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isInProgress</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractUndoableEdit</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">addEdit</b> (UndoableEdit <i class="parameter">anEdit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">canRedo</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">canUndo</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">die</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getPresentationName</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getRedoPresentationName</b> ();</td><td align="right"><i> default:"Redo"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUndoPresentationName</b> ();</td><td align="right"><i> default:"Undo"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSignificant</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">redo</b> () throws CannotRedoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">undo</b> () throws CannotUndoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected UndoableEdit <b class="function">lastEdit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Vector <b class="function">edits</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractUndoableEdit(Serializable,UndoableEdit)-->CompoundEdit</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.AbstractDocument.DefaultDocumentEvent, UndoManager</tt>
</p>

<p>
<span class="refsect1">Returned By: </span><tt class="literal">UndoableEditSupport.createCompoundEdit()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">UndoableEditSupport.compoundEdit</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StateEdit</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.undo</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3255"></a>
<a name="INDEX-3256"></a>
<a name="INDEX-3257"></a>
<p>  This class is an <tt class="literal">UndoableEdit</tt> implementation that
  works with <tt class="literal">StateEditable</tt> objects.  First, create a
  <tt class="literal">StateEdit</tt> object, passing the
  <tt class="literal">StateEditable</tt> object to be edited to the
  constructor (and optionally specifying
  a presentation name for the <tt class="literal">StateEdit</tt>).  The
  constructor queries the initial state of the
  <tt class="literal">StateEditable</tt> object and saves it.  Next, make your
  edits to the <tt class="literal">StateEditable</tt> object and then call the
  <tt class="literal">end()</tt> method on your <tt class="literal">StateEdit</tt>
  object.  This method queries the edited state of the object and saves
  that state.  <tt class="literal">StateEdit</tt> implements the
  <tt class="literal">undo()</tt> method by restoring the saved preedit
  state and implements the <tt class="literal">redo()</tt> method by
  restoring the saved postedit state.
  For efficiency, <tt class="literal">StateEdit</tt> removes duplicate state
  entries from the preedit and postedit hashtables, so only the state
  that changes is saved.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">StateEdit</b> extends AbstractUndoableEdit {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">StateEdit</b> (StateEditable <i class="parameter">anObject</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">StateEdit</b> (StateEditable <i class="parameter">anObject</i>, String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final String <b class="function">RCSID</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">end</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractUndoableEdit</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getPresentationName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">redo</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">undo</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">init</b> (StateEditable <i class="parameter">anObject</i>, String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">removeRedundantState</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected StateEditable <b class="function">object</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Hashtable <b class="function">postState</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Hashtable <b class="function">preState</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">undoRedoName</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractUndoableEdit(Serializable,UndoableEdit)-->StateEdit</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StateEditable</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.undo</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3258"></a>
<p>  This interface defines methods that allow an object to save and
  restore its state to and from a
  <tt class="literal">java.util.Hashtable</tt>. Objects that are able to
  implement this interface can easily support undo management with
  the <tt class="literal">StateEdit</tt> class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">StateEditable</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">RCSID</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">restoreState</b> (java.util.Hashtable <i class="parameter">state</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">storeState</b> (java.util.Hashtable <i class="parameter">state</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Passed To: </span><tt class="literal">StateEdit.{init(), StateEdit()}</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">StateEdit.object</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>UndoableEdit</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.undo</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3259"></a>
<a name="INDEX-3260"></a>
<a name="INDEX-3261"></a>
<a name="INDEX-3262"></a>
<a name="INDEX-3263"></a>
<a name="INDEX-3264"></a>
<p>  This interface defines methods that encapsulate an undoable and
  redoable change to the state of an application or component.
  The <tt class="literal">undo()</tt> and <tt class="literal">redo()</tt> methods
  are the most important: they must actually undo and redo the edit.
  They throw exceptions if an edit is undone twice or redone
  twice or if for some other reason an edit cannot be undone or redone.
  <tt class="literal">canUndo()</tt> and <tt class="literal">canRedo()</tt> specify
  whether an <tt class="literal">UndoableEdit</tt> can currently be undone or
  redone.  
  <tt class="literal">die()</tt> tells an edit that it is no longer needed,
  so it can release any resources it is holding.  Neither
  <tt class="literal">undo()</tt> nor <tt class="literal">redo()</tt> should be
  called once <tt class="literal">die()</tt> has been called.</p>
<a name="INDEX-3265"></a>
<a name="INDEX-3266"></a>
<a name="INDEX-3267"></a>
<p>
<tt class="literal">getPresentationName()</tt> returns a human-readable
  description of the edit.  <tt class="literal">getUndoPresentationName()</tt>
  and <tt class="literal">getRedoPresentationName()</tt> return human-readable
  descriptions of undoing and redoing the edit.  These two methods are
  usually implemented in terms of <tt class="literal">getPresentationName()</tt>
  and might return strings
  like "Undo typing" or "Redo deletion".
  <tt class="literal">isSignificant()</tt> specifies whether the edit is 
  a significant one.  Typically, significant edits are presented to the
  user in a user interface, while insignificant edits are simply undone
  and redone in conjunction with adjacent significant edits.  The
  <tt class="literal">UndoManager</tt> class treats insignificant edits in this
  way, for example.</p>
<a name="INDEX-3268"></a>
<a name="INDEX-3269"></a>
<p>
<tt class="literal">addEdit()</tt> and <tt class="literal">replaceEdit()</tt> are
  used for merging two <tt class="literal">UndoableEdit</tt> objects into one.
  <tt class="literal">addEdit()</tt> is called to see if an existing
  <tt class="literal">UndoableEdit</tt> is willing to merge or absorb another
  edit into itself.  For example, if the user strikes the <b class="emphasis-bold">Backspace</b> key twice in a row, the
  <tt class="literal">UndoableEdit</tt> object generated by the first
  keystroke might absorb the <tt class="literal">UndoableEdit</tt> object
  generated by the second keystroke, changing itself from a "backspace
  1" edit to a "backspace 2" 
  edit.  <tt class="literal">addEdit()</tt> should
  return <tt class="literal">true</tt> if it adds the edit and
  <tt class="literal">false</tt> otherwise.  <tt class="literal">replaceEdit()</tt>
  has a similar purpose but operates in the other direction.  It gives
  a new <tt class="literal">UndoableEdit</tt> object the opportunity to absorb
  and replace an existing <tt class="literal">UndoableEdit</tt>.  For example,
  if the user of a text editor selects a paragraph of text and then
  deletes that paragraph, the "delete-paragraph" 
  edit might simply
  subsume and replace the "select-paragraph" edit.
  <tt class="literal">replaceEdit()</tt> should return <tt class="literal">true</tt>
  if it replaces the specified <tt class="literal">UndoableEdit</tt> object.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">UndoableEdit</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getPresentationName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getRedoPresentationName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isSignificant</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getUndoPresentationName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">addEdit</b> (UndoableEdit <i class="parameter">anEdit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">canRedo</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">canUndo</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">die</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">redo</b> () throws CannotRedoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">replaceEdit</b> (UndoableEdit <i class="parameter">anEdit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">undo</b> () throws CannotUndoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AbstractUndoableEdit</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.event.UndoableEditEvent.UndoableEditEvent(), javax.swing.text.AbstractDocument.DefaultDocumentEvent.addEdit(), AbstractUndoableEdit.{addEdit(), replaceEdit()}, CompoundEdit.addEdit(), UndoableEdit.{addEdit(), replaceEdit()}, UndoableEditSupport.{_postEdit(), postEdit()}, UndoManager.{addEdit(), redoTo(), undoTo()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">javax.swing.event.UndoableEditEvent.getEdit(), javax.swing.text.AbstractDocument.Content.{insertString(), remove()}, 
javax.swing.text.GapContent.{insertString(), remove()}, javax.swing.text.StringContent.{insertString(), remove()}, CompoundEdit.lastEdit(), UndoManager.{editToBeRedone(), editToBeUndone()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>UndoableEditSupport</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.undo</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-3270"></a>
<p>  This utility class is useful for classes that support undoable edits
  and send <tt class="literal">javax.swing.event.UndoableEditEvent</tt>
  events to <tt class="literal">javax.swing.event.UndoableEditListener</tt>
  objects.  An object that generates undoable events must allow the
  registration and deregistration of event listeners for those events.
  Such an object can simply create an
  <tt class="literal">UndoableEditSupport</tt> object and delegate to its
  <tt class="literal">addUndoableEditListener()</tt> and
  <tt class="literal">removeUndoableEditListener()</tt> methods.</p>
<a name="INDEX-3271"></a>
<a name="INDEX-3272"></a>
<a name="INDEX-3273"></a>
<p>
<tt class="literal">UndoableEditSupport</tt> normally sends an
  <tt class="literal">UndoableEditEvent</tt> to all registered listeners when
  the <tt class="literal">postEdit()</tt> method is invoked.  It also allows
  batching of edits into a <tt class="literal">CompoundEdit</tt>, however.  If
  <tt class="literal">beginUpdate()</tt> is called, all
  <tt class="literal">UndoableEdit</tt> objects passed to
  <tt class="literal">postEdit()</tt> are batched into a
  <tt class="literal">CompoundEdit</tt> until <tt class="literal">endUpdate()</tt>
  is called.  In this case, the <tt class="literal">UndoableEditEvent</tt>
  that contains the <tt class="literal">CompoundEdit</tt> is not sent to the
  registered <tt class="literal">UndoableEditListener</tt> objects until
  <tt class="literal">endUpdate()</tt> is invoked.  If
  <tt class="literal">beginUpdate()</tt> is called more than once, 
  <tt class="literal">endUpdate()</tt> must be called a matching number of
  times.</p>
<a name="INDEX-3274"></a>
<a name="INDEX-3275"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">UndoableEditSupport</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">UndoableEditSupport</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">UndoableEditSupport</b> (Object <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addUndoableEditListener</b> (javax.swing.event.UndoableEditListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeUndoableEditListener</b> (javax.swing.event.UndoableEditListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">beginUpdate</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">endUpdate</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getUpdateLevel</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">postEdit</b> (UndoableEdit <i class="parameter">e</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">_postEdit</b> (UndoableEdit <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected CompoundEdit <b class="function">createCompoundEdit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected CompoundEdit <b class="function">compoundEdit</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Vector <b class="function">listeners</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Object <b class="function">realSource</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">updateLevel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>UndoManager</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.undo</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-3276"></a>
<p>  This class maintains a list of <tt class="literal">UndoableEdit</tt> objects
  and allows them to be undone and redone one significant edit at a
  time.  Edits can 
  be added explicitly by calling <tt class="literal">addEdit()</tt>.
  <tt class="literal">UndoManager</tt> implements
  the <tt class="literal">javax.swing.event.UndoableEditListener</tt>
  interface and automatically calls <tt class="literal">addEdit()</tt> to add
  an edit to its list when it receives a
  <tt class="literal">javax.swing.event.UndoableEditEvent</tt>.  The
  <tt class="literal">addEdit()</tt> method works like the
  <tt class="literal">addEdit()</tt> method of
  <tt class="literal">CompoundEdit</tt>: it first attempts to merge the new
  edit with the last edit on the list by calling the
  <tt class="literal">addEdit()</tt> and <tt class="literal">replaceEdit()</tt>
  methods of those edits.  The edit is added as a separate edit only if
  it could not be merged.</p>
<a name="INDEX-3277"></a>
<a name="INDEX-3278"></a>
<a name="INDEX-3279"></a>
<a name="INDEX-3280"></a>
<a name="INDEX-3281"></a>
<a name="INDEX-3282"></a>
<a name="INDEX-3283"></a>
<p>  After an edit is made and added to the <tt class="literal">UndoManager</tt>,
  the <tt class="literal">undo()</tt> method undoes it.  After it is
  undone, the <tt class="literal">redo()</tt> method redoes it.  However,
  if a new edit is made after the first is undone, that first undone
  edit is removed from the list and is no longer redoable.  This is
  the normal and expected behavior for an undo system.
  <tt class="literal">UndoManager</tt> distinguishes between significant and
  insignificant edits.  When you call <tt class="literal">undo()</tt>, it
  undoes all edits up to the last significant edit that occurred.  When
  you call <tt class="literal">redo()</tt>, it redoes the next significant
  edit and all insignificant edits that follow it.  A significant
  <tt class="literal">UndoableEdit</tt> is one whose
  <tt class="literal">isSignificant()</tt> method returns
  <tt class="literal">true</tt>. 
  <tt class="literal">getUndoPresentationName()</tt> returns the undo
  presentation name of the significant <tt class="literal">UndoableEdit</tt>
  that is undone by <tt class="literal">undo()</tt>.
  <tt class="literal">getRedoPresentationName()</tt> returns the redo
  presentation name of the significant <tt class="literal">UndoableEdit</tt>
  that is performed by the <tt class="literal">redo()</tt> action.
  <tt class="literal">setLimit()</tt> and <tt class="literal">getLimit()</tt> set
  and query the maximum number of <tt class="literal">UndoableEdit</tt>
  objects that the <tt class="literal">UndoManager</tt> tracks.  The
  default is 100.</p>
<a name="INDEX-3284"></a>
<a name="INDEX-3285"></a>
<p>
<tt class="literal">UndoManager</tt> is a subclass of
  <tt class="literal">CompoundEdit</tt>.  If you call the
  <tt class="literal">end()</tt> method on an <tt class="literal">UndoManager</tt>,
  its behavior becomes that of a <tt class="literal">CompoundEdit</tt>
  and the list of edits is undone and redone all at once.  This can
  occasionally be useful when doing nested edits.</p>
<a name="INDEX-3286"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">UndoManager</b> extends CompoundEdit implements javax.swing.event.UndoableEditListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">UndoManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLimit</b> ();</td><td align="right"><i> synchronized default:100</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLimit</b> (int <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getRedoPresentationName</b> ();</td><td align="right"><i> Overrides:CompoundEdit synchronized default:"Redo"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUndoOrRedoPresentationName</b> ();</td><td align="right"><i> synchronized default:"Undo"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUndoPresentationName</b> ();</td><td align="right"><i> Overrides:CompoundEdit synchronized default:"Undo"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">canUndoOrRedo</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">discardAllEdits</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">undoOrRedo</b> () throws CannotRedoException, CannotUndoException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing UndoableEditListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">undoableEditHappened</b> (javax.swing.event.UndoableEditEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding CompoundEdit</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">addEdit</b> (UndoableEdit <i class="parameter">anEdit</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">canRedo</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">canUndo</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">end</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">redo</b> () throws CannotRedoException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">undo</b> () throws CannotUndoException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected UndoableEdit <b class="function">editToBeRedone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected UndoableEdit <b class="function">editToBeUndone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">redoTo</b> (UndoableEdit <i class="parameter">edit</i>) throws CannotRedoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">trimEdits</b> (int <i class="parameter">from</i>, int <i class="parameter">to</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">trimForLimit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">undoTo</b> (UndoableEdit <i class="parameter">edit</i>) throws CannotUndoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractUndoableEdit(Serializable,UndoableEdit)-->CompoundEdit-->UndoManager(javax.swing.event.UndoableEditListener(java.util.EventListener))</tt>
</p>
<a name="INDEX-3287"></a>
<a name="INDEX-3288"></a>
</div>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch34_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch34_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch36_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch36_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">34.1. The javax.swing.tree Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">36. Class Index</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
