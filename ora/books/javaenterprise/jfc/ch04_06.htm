<html>
<head>
<title>Paint (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Paint">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch04_05.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch04_05.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch04_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch04_01.htm">Chapter 4: Graphics with AWT

and Java 2D</a></td><td align="right" valign="top" width="172"><a href="ch04_07.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch04_07.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h2 class="sect1">4.6. Paint</h2>
<a name="INDEX-901"></a>
<a name="INDEX-902"></a>

<p>As we've just seen, the Java 2D <tt class="literal">Stroke</tt>
      attribute turns the task of drawing a line into the task of
      filling an area.  Prior to Java 2D, an area could
      be filled only with a solid color, specified by passing a
      <tt class="literal">Color</tt> object to the
      <tt class="literal">setColor()</tt> method of a <tt class="literal">Graphics</tt>
      object.  In Java 2D, this
      color attribute has been generalized to a paint attribute: 
      you pass a <tt class="literal">Paint</tt> object to the
      <tt class="literal">setPaint()</tt> method of a <tt class="literal">Graphics2D</tt>
      object.  The specified
      <tt class="literal">Paint</tt> object is used to generate the pixel
      values used to fill areas.</p>

<a name="INDEX-903"></a>
<a name="INDEX-904"></a>
<a name="INDEX-905"></a>

<p>The most common way to fill an area, however, is
      still to use a solid color.  So another change in Java 2D is that
      the <tt class="literal">java.awt.Color</tt> class now implements the
      <tt class="literal">java.awt.Paint</tt> interface.  All
      <tt class="literal">Color</tt> objects are perfectly legal
      <tt class="literal">Paint</tt> objects and can be used to draw lines
      and fill areas with a solid color.</p>

<a name="INDEX-906"></a>

<p>Java 2D also defines two more complex <tt class="literal">Paint</tt>
      implementations.  The <tt class="literal">java.awt.

TexturePaint</tt>
      class uses a tiled image for its filling operations.  The image is
      specified as a <tt class="literal">java.awt.image.BufferedImage</tt>.
      This is a Java 2D simplification of the
      <tt class="literal">java.awt.Image</tt> class; we'll discuss it in
      more detail later in the chapter.  When you create a
      <tt class="literal">TexturePaint</tt> object, you must also specify a
      <tt class="literal">java.awt.geom.Rectangle2D</tt> object 
      (<tt class="literal">java.awt.Rectangle</tt> is a kind of
      <tt class="literal">Rectangle2D</tt>).  The purpose of this rectangle is
      to specify an initial position and horizontal and vertical repetition
      intervals for the tiled image.
      Typically, you can just specify a rectangle based at 0,0 with
      the same width and height as the image.  If you are not using the
      default coordinate system, things are a little trickier,
      since image dimensions are always measured in pixels, but you must
      specify your rectangle dimensions in user-space coordinates.</p>

<a name="INDEX-907"></a>

<p>The <tt class="literal">java.awt.GradientPaint</tt> class fills an area
      with a color gradient.  The fill color varies linearly between a
      color <tt class="literal">C1</tt> and a color <tt class="literal">C2</tt>, 
      along the line between point <tt class="literal">P1</tt> and 
      point <tt class="literal">P2</tt>.  You may also specify whether the 
      gradient is cyclic or
      acyclic.  If the gradient is cyclic, the line between 
      <tt class="literal">P1</tt> and
      <tt class="literal">P2</tt> is extended infinitely 
      in both directions, and the color cycles
      smoothly along this line from <tt class="literal">C1</tt> to 
      <tt class="literal">C2</tt> and back to <tt class="literal">C1</tt> again.  If
      the gradient is defined to be acyclic, however, the color
      remains fixed at <tt class="literal">C1</tt> beyond 
      <tt class="literal">P1</tt> and at <tt class="literal">C2</tt> 
      beyond <tt class="literal">P2</tt>.</p>



<p>Here's an example of creating and using a 
      <tt class="literal">GradientPaint</tt>:
</p>

<blockquote>
<pre class="programlisting">Graphics2D g;       // Initialized elsewhere
Paint p = new GradientPaint(0, 0, Color.red, 100, 100, Color.pink, true);
g.setPaint(p);
g.fillRect(0, 0, 300, 300);</pre>
</blockquote>



<p>Both <tt class="literal">TexturePaint</tt> and
      <tt class="literal">GradientPaint</tt> objects 
      are immutable: they have no <tt class="literal">set()</tt> methods that
      allow their attributes to be changed.  This is important because
      it means that a <tt class="literal">Graphics2D</tt> object can use a
      <tt class="literal">Paint</tt> object without worrying about its
      attributes being changed concurrently (i.e., the 
      <tt class="literal">Graphics2D</tt> object does
      not have to make a private copy of its <tt class="literal">Paint</tt>
      attribute). </p>

<a name="INDEX-908"></a>
<a name="INDEX-909"></a>
<a name="INDEX-910"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch04_05.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch04_05.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch04_07.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch04_07.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">4.5. Stroking Lines</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">4.7. Blending Colors with AlphaComposite</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
