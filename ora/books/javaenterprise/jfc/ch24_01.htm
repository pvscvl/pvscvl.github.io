<html>
<head>
<title>The javax.swing.border Package (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The javax.swing.border Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch23_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch23_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch25_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch25_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 24.  The javax.swing.border Package</h1>

<p> 
  The <tt class="literal">javax.swing.border</tt> package is a 
  simple package that defines the <tt class="literal">Border</tt>
  interface, which specifies how to draw a border around an arbitrary
  Swing component.  The various classes in this package implement
  commonly used border styles.  Applications can easily define custom
  border styles by creating custom implementations of
  <tt class="literal">Border</tt>.
  <a href="#jfcnut-ch-javax.swing.border-fig-1">Figure 24-1</a> shows the class hierarchy of
  this package.</p>
<a name="INDEX-2633"></a>
<a name="INDEX-2634"></a>
<a name="INDEX-2635"></a>
<a name="jfcnut-ch-javax.swing.border-fig-1"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.2401.gif" webstripperlinkwas="figs/jfcn.2401.gif"></div>
<h4 class="objtitle">Figure 24-1. The javax.swing.border package</h4>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractBorder</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.border</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2636"></a>
<p>  This abstract class implements a zero-width, nonopaque border.  
  <tt class="literal">AbstractBorder</tt> implements the <tt class="literal">Border</tt>
  interface.  To
  create a custom border type, subclass
  <tt class="literal">AbstractBorder</tt>, reimplementing at least the
  <tt class="literal">getBorderInsets()</tt> and
  <tt class="literal">paintBorder()</tt> methods.
  <tt class="literal">getInteriorRectangle()</tt> in its static and nonstatic
  versions is a convenience method that returns a rectangle that represents
  the region of the component inside the border.</p>
<a name="INDEX-2637"></a>
<a name="INDEX-2638"></a>
<a name="INDEX-2639"></a>
<p>
<tt class="literal">AbstractBorder</tt> provides a two-argument
  version of <tt class="literal">getBorderInsets()</tt>, in addition
  to the one-argument version required by <tt class="literal">Border</tt>.  
  The two-argument version should
  place the insets in the supplied <tt class="literal">Insets</tt> object.
  Doing so does not require a new <tt class="literal">Insets</tt> object to be
  created, so it is more efficient than the one-argument version.  Swing
  components use this more efficient method whenever possible.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">AbstractBorder</b> implements Border, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AbstractBorder</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Rectangle <b class="function">getInteriorRectangle</b> (Component <i class="parameter">c</i>, Border <i class="parameter">b</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>, java.awt.Insets <i class="parameter">insets</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getInteriorRectangle</b> (Component <i class="parameter">c</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Border</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderOpaque</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintBorder</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractBorder(Border,Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">BevelBorder, CompoundBorder, EmptyBorder, EtchedBorder, LineBorder, TitledBorder</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BevelBorder</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.border</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2640"></a>
<p>  This class displays a two-pixel-wide beveled edge around a Swing
  component, giving the appearance of a raised or lowered surface.  The
  <tt class="literal">RAISED</tt> and <tt class="literal">LOWERED</tt> constants
  specify the type of bevel.  It usually is not necessary to specify
  bevel colors, as appropriate defaults are derived from the component
  background color.
  See also the <tt class="literal">createBevelBorder()</tt>,
  <tt class="literal">createLoweredBevelBorder()</tt>, and
  <tt class="literal">createRaisedBevelBorder()</tt> methods of
  <tt class="literal">javax.swing.BorderFactory</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BevelBorder</b> extends AbstractBorder {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BevelBorder</b> (int <i class="parameter">bevelType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BevelBorder</b> (int <i class="parameter">bevelType</i>, java.awt.Color <i class="parameter">highlight</i>, java.awt.Color <i class="parameter">shadow</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BevelBorder</b> (int <i class="parameter">bevelType</i>, java.awt.Color <i class="parameter">highlightOuter</i>, java.awt.Color <i class="parameter">highlightInner</i>, java.awt.Color <i class="parameter">shadowOuter</i>, java.awt.Color <i class="parameter">shadowInner</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LOWERED</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">RAISED</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getBevelType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getHighlightInnerColor</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getHighlightOuterColor</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getShadowInnerColor</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getShadowOuterColor</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractBorder</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>, java.awt.Insets <i class="parameter">insets</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderOpaque</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintBorder</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">paintLoweredBevel</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">paintRaisedBevel</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">bevelType</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">highlightInner</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">highlightOuter</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">shadowInner</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">shadowOuter</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractBorder(Border,Serializable)-->BevelBorder</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">SoftBevelBorder, javax.swing.plaf.BorderUIResource.BevelBorderUIResource</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Border</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.border</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2641"></a>
<p>  This simple interface defines the methods that must be implemented by
  any object that wants to display a border around a Swing component.
  <tt class="literal">getBorderInsets()</tt> returns a
  <tt class="literal">java.awt.Insets</tt> object that specifies the size of
  each edge of the border.  <tt class="literal">isBorderOpaque()</tt>
  indicates either that the border is opaque or that it allows the
  container background to show through.  Opaque borders are required to
  paint all pixels in the border region.  Finally,
  <tt class="literal">paintBorder()</tt> is the method that is responsible for
  drawing the border around the specified component at the specified
  location, using the specified <tt class="literal">java.awt.Graphics</tt>
  object. </p>
<a name="INDEX-2642"></a>
<a name="INDEX-2643"></a>
<a name="INDEX-2644"></a>
<p>  The <tt class="literal">javax.swing.border</tt> package contains a number
  of <tt class="literal">Border</tt> implementations that are useful with
  Swing classes.  Note, however, that <tt class="literal">Border</tt> instances are intended to
  be shared among components.  This means that you typically should obtain
  references to shared <tt class="literal">Border</tt> objects by calling the
  static factory methods of
  <tt class="literal">javax.swing.BorderFactory</tt>.
  To define your own custom type of border, you can subclass
  <tt class="literal">AbstractBorder</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Border</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isBorderOpaque</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">paintBorder</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AbstractBorder, javax.swing.plaf.BorderUIResource</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DefaultListCellRenderer.noFocusBorder, CompoundBorder.{insideBorder, outsideBorder}, TitledBorder.border, javax.swing.table.DefaultTableCellRenderer.noFocusBorder, javax.swing.tree.DefaultTreeCellEditor.DefaultTextField.border</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CompoundBorder</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.border</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2645"></a>
<p>  This class combines two borders and displays the result 
  around a Swing component.
  For example, you can use <tt class="literal">CompoundBorder</tt> to
  combine a beveled outer border and an etched inner border.  Or you
  can use <tt class="literal">CompoundBorder</tt> to combine a
  <tt class="literal">MatteBorder</tt> and an <tt class="literal">EmptyBorder</tt>,
  to create an additional margin within the
  <tt class="literal">MatteBorder</tt>. 
  See also the 
  <tt class="literal">createCompoundBorder()</tt> method of
  <tt class="literal">javax.swing.BorderFactory</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">CompoundBorder</b> extends AbstractBorder {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CompoundBorder</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CompoundBorder</b> (Border <i class="parameter">outsideBorder</i>, Border <i class="parameter">insideBorder</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderOpaque</b> ();</td><td align="right"><i> Overrides:AbstractBorder default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Border <b class="function">getInsideBorder</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Border <b class="function">getOutsideBorder</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractBorder</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>, java.awt.Insets <i class="parameter">insets</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintBorder</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Border <b class="function">insideBorder</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Border <b class="function">outsideBorder</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractBorder(Border,Serializable)-->CompoundBorder</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.plaf.BorderUIResource.CompoundBorderUIResource</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">BorderFactory.createCompoundBorder()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>EmptyBorder</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.border</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2646"></a>
<p>  This class implements a transparent, empty border.  It is used to
  place a blank margin around a Swing component.  The arguments to the
  constructor specify the number of pixels of blank space to appear on
  each edge of the component.
  See also the <tt class="literal">createEmptyBorder()</tt> method of
  <tt class="literal">javax.swing.BorderFactory</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">EmptyBorder</b> extends AbstractBorder implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">EmptyBorder</b> (java.awt.Insets <i class="parameter">insets</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">EmptyBorder</b> (int <i class="parameter">top</i>, int <i class="parameter">left</i>, int <i class="parameter">bottom</i>, int <i class="parameter">right</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractBorder</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>, java.awt.Insets <i class="parameter">insets</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderOpaque</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintBorder</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">bottom</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">left</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">right</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">top</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractBorder(Border,Serializable)-->EmptyBorder(Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">MatteBorder, javax.swing.plaf.BorderUIResource.EmptyBorderUIResource</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>EtchedBorder</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.border</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2647"></a>
<p>  This class displays an etched border around a Swing component.  By
  default, the border appears etched into the screen.  You can create a
  border that appears etched out by passing the
  <tt class="literal">RAISED</tt> constant to the
  <tt class="literal">EtchedBorder()</tt> constructor.  It usually
  is not necessary to specify colors for the border, since
  <tt class="literal">EtchedBorder</tt> automatically chooses correct
  defaults based on the component's background color.
  See also the
  <tt class="literal">createEtchedBorder()</tt> method of 
  <tt class="literal">javax.swing.BorderFactory</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">EtchedBorder</b> extends AbstractBorder {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">EtchedBorder</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">EtchedBorder</b> (int <i class="parameter">etchType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">EtchedBorder</b> (java.awt.Color <i class="parameter">highlight</i>, java.awt.Color <i class="parameter">shadow</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">EtchedBorder</b> (int <i class="parameter">etchType</i>, java.awt.Color <i class="parameter">highlight</i>, java.awt.Color <i class="parameter">shadow</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LOWERED</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">RAISED</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getEtchType</b> ();</td><td align="right"><i> default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getHighlightColor</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getShadowColor</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractBorder</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>, java.awt.Insets <i class="parameter">insets</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderOpaque</b> ();</td><td align="right"><i> constant default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintBorder</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">etchType</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">highlight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">shadow</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractBorder(Border,Serializable)-->EtchedBorder</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.plaf.BorderUIResource.EtchedBorderUIResource</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>LineBorder</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.border</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2648"></a>
<p>  This class draws a solid line of the specified color and thickness
  around a Swing component.  The default thickness is one pixel.  The two
  static methods return shared <tt class="literal">LineBorder</tt> instances
  that draw black and gray lines that are one-pixel wide.  
  See also the <tt class="literal">createLineBorder()</tt> method of
  <tt class="literal">javax.swing.BorderFactory</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">LineBorder</b> extends AbstractBorder {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">LineBorder</b> (java.awt.Color <i class="parameter">color</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">LineBorder</b> (java.awt.Color <i class="parameter">color</i>, int <i class="parameter">thickness</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Border <b class="function">createBlackLineBorder</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Border <b class="function">createGrayLineBorder</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getLineColor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getThickness</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractBorder</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>, java.awt.Insets <i class="parameter">insets</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderOpaque</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintBorder</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">lineColor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">roundedCorners</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">thickness</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractBorder(Border,Serializable)-->LineBorder</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.plaf.BorderUIResource.LineBorderUIResource</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MatteBorder</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.border</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2649"></a>
<p>  This class uses a solid color or tiled icon to paint a border around
  a Swing component.  The sizes of each edge of the border can be
  independently specified.  If an icon is specified and border sizes are
  not, the top and bottom insets of the border equal the icon
  height, and the left and right insets equal the icon width.
  See also the <tt class="literal">createMatteBorder()</tt> method of
  <tt class="literal">javax.swing.BorderFactory</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MatteBorder</b> extends EmptyBorder {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MatteBorder</b> (Icon <i class="parameter">tileIcon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MatteBorder</b> (int <i class="parameter">top</i>, int <i class="parameter">left</i>, int <i class="parameter">bottom</i>, int <i class="parameter">right</i>, Icon <i class="parameter">tileIcon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MatteBorder</b> (int <i class="parameter">top</i>, int <i class="parameter">left</i>, int <i class="parameter">bottom</i>, int <i class="parameter">right</i>, java.awt.Color <i class="parameter">color</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding EmptyBorder</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>, java.awt.Insets <i class="parameter">insets</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderOpaque</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintBorder</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">color</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Icon <b class="function">tileIcon</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractBorder(Border,Serializable)-->EmptyBorder(Serializable)-->MatteBorder</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.plaf.BorderUIResource.MatteBorderUIResource</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">BorderFactory.createMatteBorder()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SoftBevelBorder</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.border</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<p>  This class displays a two-pixel-wide raised or lowered beveled border
  around a Swing component.  <tt class="literal">SoftBevelBorder</tt> differs
  from its superclass <tt class="literal">BevelBorder</tt> in that it draws a
  "softer" bevel (i.e., a bevel whose corners 
  do not appear as sharp).
  Unlike the other border types, shared
  <tt class="literal">SoftBevelBorder</tt> instances cannot be created through
  the <tt class="literal">javax.swing.BorderFactory</tt> class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">SoftBevelBorder</b> extends BevelBorder {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SoftBevelBorder</b> (int <i class="parameter">bevelType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SoftBevelBorder</b> (int <i class="parameter">bevelType</i>, java.awt.Color <i class="parameter">highlight</i>, java.awt.Color <i class="parameter">shadow</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SoftBevelBorder</b> (int <i class="parameter">bevelType</i>, java.awt.Color <i class="parameter">highlightOuter</i>, java.awt.Color <i class="parameter">highlightInner</i>, java.awt.Color <i class="parameter">shadowOuter</i>, java.awt.Color <i class="parameter">shadowInner</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding BevelBorder</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderOpaque</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintBorder</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractBorder(Border,Serializable)-->BevelBorder-->SoftBevelBorder</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TitledBorder</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.border</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2650"></a>
<p>  This class combines a textual title with another border.  This can
  be a useful effect when, for example, you want to group and title
  several components, such as a group of 
  <tt class="literal">JRadioButton</tt> objects.
  By default, <tt class="literal">TitledBorder</tt> draws an
  <tt class="literal">EtchedBorder</tt> and displays the title left justified on
  the top edge of that border.  Arguments to the constructor and property-
  setting methods allow you to specify the <tt class="literal">Border</tt> to
  be drawn, the position of the title relative to the top or bottom of
  that border, the justification of the title, the title font, and the
  title color.
  The title can be positioned above, on top of, or below the top or 
  bottom edge
  of the border, and it can be left, center, or right justified.  The
  positioning is specified by the <tt class="literal">titlePosition</tt> and
  <tt class="literal">titleJustification</tt> properties.
  <tt class="literal">TitledBorder</tt> constants define the legal values of
  these properties.</p>
<p>
<tt class="literal">TitledBorder</tt> instances are not typically shared
  among components because different components do not typically have
  the same title.  Since the <tt class="literal">TitledBorder</tt> instances
  are not shared, they need not be immutable.
  <tt class="literal">TitledBorder</tt> is unique among the classes in
  <tt class="literal">javax.swing.border</tt> in that it has properties
  that can be set after the instance is created.  You can still use the
  <tt class="literal">createTitledBorder()</tt> method of
  <tt class="literal">javax.swing.BorderFactory</tt> to create
  <tt class="literal">TitledBorder</tt> instances, but since they are
  unlikely to be shared, this is typically not very useful.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TitledBorder</b> extends AbstractBorder {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TitledBorder</b> (Border <i class="parameter">border</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TitledBorder</b> (String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TitledBorder</b> (Border <i class="parameter">border</i>, String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TitledBorder</b> (Border <i class="parameter">border</i>, String <i class="parameter">title</i>, int <i class="parameter">titleJustification</i>, int <i class="parameter">titlePosition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TitledBorder</b> (Border <i class="parameter">border</i>, String <i class="parameter">title</i>, int <i class="parameter">titleJustification</i>, int <i class="parameter">titlePosition</i>, java.awt.Font <i class="parameter">titleFont</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TitledBorder</b> (Border <i class="parameter">border</i>, String <i class="parameter">title</i>, int <i class="parameter">titleJustification</i>, int <i class="parameter">titlePosition</i>, java.awt.Font <i class="parameter">titleFont</i>, java.awt.Color <i class="parameter">titleColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ABOVE_BOTTOM</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ABOVE_TOP</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BELOW_BOTTOM</b> ;</td><td align="right"><i> =6</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BELOW_TOP</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BOTTOM</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CENTER</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DEFAULT_JUSTIFICATION</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DEFAULT_POSITION</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LEFT</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">RIGHT</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TOP</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final int <b class="function">EDGE_SPACING</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final int <b class="function">TEXT_INSET_H</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final int <b class="function">TEXT_SPACING</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Border <b class="function">getBorder</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBorder</b> (Border <i class="parameter">border</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderOpaque</b> ();</td><td align="right"><i> Overrides:AbstractBorder constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getTitle</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTitle</b> (String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getTitleColor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTitleColor</b> (java.awt.Color <i class="parameter">titleColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Font <b class="function">getTitleFont</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTitleFont</b> (java.awt.Font <i class="parameter">titleFont</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getTitleJustification</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTitleJustification</b> (int <i class="parameter">titleJustification</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getTitlePosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTitlePosition</b> (int <i class="parameter">titlePosition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getMinimumSize</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractBorder</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getBorderInsets</b> (Component <i class="parameter">c</i>, java.awt.Insets <i class="parameter">insets</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintBorder</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Font <b class="function">getFont</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Border <b class="function">border</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">title</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">titleColor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Font <b class="function">titleFont</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">titleJustification</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">titlePosition</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractBorder(Border,Serializable)-->TitledBorder</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.plaf.BorderUIResource.TitledBorderUIResource</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">BorderFactory.createTitledBorder()</tt>
</p>
</div>
<a name="INDEX-2651"></a>
<a name="INDEX-2652"></a>
<a name="INDEX-2653"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch23_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch23_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch25_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch25_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">23.1. The javax.swing Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">25. The javax.swing.colorchooser Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
