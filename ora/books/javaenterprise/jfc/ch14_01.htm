<html>
<head>
<title>The java.awt.event Package (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The java.awt.event Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch13_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch13_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch15_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch15_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 14.  The java.awt.event Package</h1>

<a name="INDEX-1801"></a>
<a name="INDEX-1802"></a>
<p>  The <tt class="literal">java.awt.event</tt>
  package defines classes and interfaces used for event
  handling in the AWT and Swing.
  The members of this package fall into three categories:</p>

<dl>
<dt>
<b><em class="emphasis">Events</em></b>
</dt>
<dd>
<p>	The classes with names ending in "Event" represent
	specific types of events, generated by the AWT or by one of
	the AWT or Swing components.
      </p>
</dd>
<a name="INDEX-1803"></a>
<a name="INDEX-1804"></a>
<dt>
<b><em class="emphasis">Listeners</em></b>
</dt>
<dd>
<p>	The interfaces in this package are all event
	listeners; their names end with "Listener".  These interfaces
	define the methods that must be implemented by any object that wants to
	be notified when a particular event occurs.  Note that there
	is a <tt class="literal">Listener</tt> interface for each <tt class="literal">Event</tt>
	class.
      </p>
</dd>
<dt>
<b><em class="emphasis">Adapters</em></b>
</dt>
<dd>
<p>	Each of the classes with a name ending in "Adapter"
	provides a no-op implementation for an event listener
	interface that defines more than one method.  When you are
	interested in only a single method of an event listener
	interface, it is easier to subclass an <tt class="literal">Adapter</tt> class
	than to implement all of the methods of the corresponding
	<tt class="literal">Listener</tt> interface.
      </p>
</dd>
</dl>
<p>
<a href="#jfcnut-ch-java.awt.event-fig-1">Figure 14-1</a> shows the class hierarchy of
  this package.</p>
<a name="INDEX-1805"></a>
<a name="INDEX-1806"></a>
<p>  The Swing user-interface components use some of these event classes
  and interfaces and also define others in the
  <tt class="literal">javax.swing.event</tt> package.  The
  <tt class="literal">java.beans</tt> package also defines a few commonly used
  event classes and listener interfaces.  Note that this package is part
  of the Java 1.1 event model.  In Java 1.0, events were represented by
  the <tt class="literal">java.awt.Event</tt> class.  See <a href="ch02_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch02_01.htm">Chapter 2, "Swing and AWTArchitecture"</a>, for an introduction to events and event
  handling.</p>

<a name="INDEX-1807"></a>
<a name="INDEX-1808"></a>
<a name="jfcnut-ch-java.awt.event-fig-1"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.1401.gif" webstripperlinkwas="figs/jfcn.1401.gif"></div>
<h4 class="objtitle">Figure 14-1. The java.awt.event package</h4>


<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ActionEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1809"></a><a name="INDEX-1810"></a>
An object of this class represents a high-level action
event generated by an AWT component.  Instead of
representing a direct user event, such as a mouse or
keyboard event, <tt class="literal">ActionEvent</tt> represents some sort of
action performed by the user on an AWT 

component.</p>

<p>
<a name="INDEX-1811"></a>
The <tt class="literal">getID()</tt> method returns the type of action that
has occurred.  For AWT-generated action events, this type is
always <tt class="literal">ActionEvent.ACTION_PERFORMED</tt>; custom
components can generate action events of other types.</p>
<p>
<a name="INDEX-1812"></a>
The <tt class="literal">getActionCommand()</tt> method returns a
<tt class="literal">String</tt> that serves as a kind of name for the action
that the event represents.  The <tt class="literal">Button</tt> and
<tt class="literal">MenuItem</tt> components have a
<a name="INDEX-1813"></a><tt class="literal">setActionCommand()</tt> method that allows the programmer
to specify an action command string to be included with
any action events generated by those components.  It is this
value that is returned by the <tt class="literal">getActionCommand()</tt>
method.  When more than one <tt class="literal">Button</tt> or other
component notifies the same <tt class="literal">ActionListener</tt>, you can
use <tt class="literal">getActionCommand()</tt> to help determine the
appropriate response to the event.  This is generally a
better technique than using the source object returned by
<tt class="literal">getSource()</tt>.  If no action command string is
explicitly set, <tt class="literal">getActionCommand()</tt> returns the label
of the <tt class="literal">Button</tt> or <tt class="literal">MenuItem</tt>.  Internationalized programs should not rely on these
labels being constant.</p>
<p>
<a name="INDEX-1814"></a><tt class="literal">getModifiers()</tt> returns a value that
indicates the keyboard modifiers that were in effect when the
action event was triggered.  Use the various <tt class="literal">_MASK</tt>
constants, along with the <tt class="literal">&amp;</tt> operator, to decode this
value.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ActionEvent</b> extends AWTEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ActionEvent</b> (Object <i class="parameter">source</i>, int <i class="parameter">id</i>, String <i class="parameter">command</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ActionEvent</b> (Object <i class="parameter">source</i>, int <i class="parameter">id</i>, String <i class="parameter">command</i>, int <i class="parameter">modifiers</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ACTION_FIRST</b> ;</td><td align="right"><i> =1001</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ACTION_LAST</b> ;</td><td align="right"><i> =1001</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ACTION_PERFORMED</b> ;</td><td align="right"><i> =1001</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ALT_MASK</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CTRL_MASK</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">META_MASK</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SHIFT_MASK</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getActionCommand</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getModifiers</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AWTEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->ActionEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ActionListener</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event listener PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1815"></a><a name="INDEX-1816"></a>
This interface defines the method that an object must
implement to listen for action events on AWT components.
When an <tt class="literal">ActionEvent</tt> occurs, an AWT component
notifies its registered <tt class="literal">ActionListener</tt> objects by
invoking their <tt class="literal">actionPerformed()</tt> methods.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ActionListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">actionPerformed</b> (ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(ActionListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AWTEventMulticaster, java.awt.dnd.DropTarget.DropTargetAutoScroller, javax.swing.Action, javax.swing.DefaultCellEditor.EditorDelegate, javax.swing.JComboBox, javax.swing.ToolTipManager.insideTimerAction, javax.swing.ToolTipManager.outsideTimerAction, javax.swing.ToolTipManager.stillInsideTimerAction, javax.swing.text.html.FormView, javax.swing.tree.DefaultTreeCellEditor</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}, javax.swing.AbstractButton.createActionListener(), javax.swing.JComponent.getActionForKeyStroke()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.AbstractButton.actionListener</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AdjustmentEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1817"></a><a name="INDEX-1818"></a>
An event of this type indicates that an adjustment has been
made to an <tt class="literal">Adjustable</tt> object--usually, this means
that the user has interacted with a <tt class="literal">Scrollbar</tt>
component.  </p>
<p>
<a name="INDEX-1819"></a>
The <tt class="literal">getValue()</tt> method returns the new value
of the <tt class="literal">Adjustable</tt> object.  This is usually the most
important piece of information stored in the event.
<a name="INDEX-1820"></a><tt class="literal">getAdjustable()</tt> returns the <tt class="literal">Adjustable</tt>
object that was the source of the event.  It is a convenient
alternative to

 the inherited <tt class="literal">getSource()</tt> method.</p>
<p>
<a name="INDEX-1821"></a>
The <tt class="literal">getID()</tt> method returns the type of an
<tt class="literal">AdjustmentEvent</tt>.  The standard AWT components only
generate adjustment events of the type
<tt class="literal">AdjustmentEvent.ADJUSTMENT_VALUE_CHANGED</tt>.  
There are
several types of adjustments that can be made to an
<tt class="literal">Adjustable</tt> object, however, and the
<tt class="literal">getAdjustmentType()</tt> method returns one of five
<a name="INDEX-1822"></a>
constants to indicate which type has occurred.
<tt class="literal">UNIT_INCREMENT</tt> indicates that the <tt class="literal">Adjustable</tt>
value has been incremented by one unit, as in a
scroll-line-down operation.  <tt class="literal">UNIT_DECREMENT</tt>
indicates the opposite: scroll-line-up.
<tt class="literal">BLOCK_INCREMENT</tt> and 
<tt class="literal">BLOCK_DECREMENT</tt> indicate
that the <tt class="literal">Adjustable</tt> object has been incremented or
decremented by multiple units, as in a scroll-page-down or
scroll-page-up operation.  Finally, the <tt class="literal">TRACK</tt>
constant indicates that the <tt class="literal">Adjustable</tt> value has
been set to an absolute value unrelated to its previous
value, as when the user drags a scrollbar to a new
position.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">AdjustmentEvent</b> extends AWTEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AdjustmentEvent</b> (Adjustable <i class="parameter">source</i>, int <i class="parameter">id</i>, int <i class="parameter">type</i>, int <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ADJUSTMENT_FIRST</b> ;</td><td align="right"><i> =601</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ADJUSTMENT_LAST</b> ;</td><td align="right"><i> =601</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ADJUSTMENT_VALUE_CHANGED</b> ;</td><td align="right"><i> =601</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BLOCK_DECREMENT</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BLOCK_INCREMENT</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TRACK</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">UNIT_DECREMENT</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">UNIT_INCREMENT</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Adjustable <b class="function">getAdjustable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAdjustmentType</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getValue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AWTEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->AdjustmentEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.adjustmentValueChanged(), Scrollbar.processAdjustmentEvent(), AdjustmentListener.adjustmentValueChanged()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AdjustmentListener</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event listener PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1823"></a><a name="INDEX-1824"></a>
This interface defines the method that an object must
implement to listen for adjustment events on AWT components.
When an <tt class="literal">AdjustmentEvent</tt> occurs, an AWT component
notifies its registered <tt class="literal">AdjustmentListener</tt> objects by
invoking their <tt class="literal">adjustmentValueChanged()</tt> methods.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">AdjustmentListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">adjustmentValueChanged</b> (AdjustmentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(AdjustmentListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AWTEventMulticaster</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Adjustable.{addAdjustmentListener(), removeAdjustmentListener()}, AWTEventMulticaster.{add(), remove()}, Scrollbar.{addAdjustmentListener(), removeAdjustmentListener()}, javax.swing.JScrollBar.{addAdjustmentListener(), removeAdjustmentListener()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AWTEventListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-1825"></a>
<p>  This interface is implemented by objects, such as GUI macro recorders,
  that want to be notified of all AWT events that occur on
  <tt class="literal">Component</tt> and <tt class="literal">MenuComponent</tt>
  objects throughout the system.  Register an
  <tt class="literal">AWTEventListener</tt> with the 
  <tt class="literal">addAWTEventListener()</tt> method of 
  <tt class="literal">Toolkit</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">AWTEventListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">eventDispatched</b> (AWTEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(AWTEventListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">Toolkit.{addAWTEventListener(), removeAWTEventListener()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ComponentAdapter</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event adapter PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1826"></a><a name="INDEX-1827"></a><a name="INDEX-1828"></a>
This class is a trivial implementation of
<tt class="literal">ComponentListener</tt>; it provides empty bodies for each
of the methods of that interface.  When you are not
interested in all of these methods, it is often
easier to subclass <tt class="literal">ComponentAdapter</tt> than it is to implement
<tt class="literal">ComponentListener</tt> from scratch.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">ComponentAdapter</b> implements ComponentListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ComponentAdapter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ComponentListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">componentHidden</b> (ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">componentMoved</b> (ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">componentResized</b> (ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">componentShown</b> (ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->ComponentAdapter(ComponentListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.JViewport.ViewListener</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ComponentEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1829"></a><a name="INDEX-1830"></a><a name="INDEX-1831"></a>
An event of this type serves as notification that the source
<tt class="literal">Component</tt> has been moved, resized, shown, or hidden.
Note that this event is a notification only: the AWT handles
these <tt class="literal">Component</tt> operations internally, and the
recipient of the event need take no action itself.</p>
<a name="INDEX-1832"></a>

<p>
<tt class="literal">getComponent()</tt> returns the component that was moved,
resized, shown, or hidden.  It is simply a convenient
alternative to <tt class="literal">getSource()</tt>.
<a name="INDEX-1833"></a><tt class="literal">getID()</tt> returns one of four <tt class="literal">COMPONENT_</tt>
constants to indicate what operation was performed on the
<tt class="literal">Component</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ComponentEvent</b> extends AWTEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ComponentEvent</b> (Component <i class="parameter">source</i>, int <i class="parameter">id</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">COMPONENT_FIRST</b> ;</td><td align="right"><i> =100</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">COMPONENT_HIDDEN</b> ;</td><td align="right"><i> =103</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">COMPONENT_LAST</b> ;</td><td align="right"><i> =103</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">COMPONENT_MOVED</b> ;</td><td align="right"><i> =100</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">COMPONENT_RESIZED</b> ;</td><td align="right"><i> =101</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">COMPONENT_SHOWN</b> ;</td><td align="right"><i> =102</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AWTEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->ComponentEvent</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">ContainerEvent, FocusEvent, InputEvent, PaintEvent, WindowEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.{componentHidden(), componentMoved(), componentResized(), componentShown()}, Component.processComponentEvent(), ComponentAdapter.{componentHidden(), componentMoved(), componentResized(), componentShown()}, ComponentListener.{componentHidden(), componentMoved(), componentResized(), componentShown()}, javax.swing.JViewport.ViewListener.componentResized()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ComponentListener</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event listener PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1834"></a><a name="INDEX-1835"></a><a name="INDEX-1836"></a>
This interface defines the methods that an object must
implement to listen for component events on AWT components.
When a <tt class="literal">ComponentEvent</tt> occurs, an AWT component
notifies its registered <tt class="literal">ComponentListener</tt> objects by
invoking one of their methods.
An easy way to implement this interface is by subclassing
the <tt class="literal">ComponentAdapter</tt> class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ComponentListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">componentHidden</b> (ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">componentMoved</b> (ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">componentResized</b> (ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">componentShown</b> (ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(ComponentListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AWTEventMulticaster, ComponentAdapter</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}, Component.{addComponentListener(), removeComponentListener()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ContainerAdapter</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event adapter PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1837"></a><a name="INDEX-1838"></a><a name="INDEX-1839"></a>
This class is a trivial implementation of
<tt class="literal">ContainerListener</tt>; it provides empty bodies for each
of the methods of that interface.  When you are not
interested in all of these methods, it is often
easier to subclass <tt class="literal">ContainerAdapter</tt> than it is to implement
<tt class="literal">ContainerListener</tt> from scratch.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">ContainerAdapter</b> implements ContainerListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ContainerAdapter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ContainerListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">componentAdded</b> (ContainerEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">componentRemoved</b> (ContainerEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->ContainerAdapter(ContainerListener(java.util.EventListener))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ContainerEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1840"></a><a name="INDEX-1841"></a><a name="INDEX-1842"></a>
An event of this type serves as notification that the source
<tt class="literal">Container</tt> has had a child added to it or removed from
it.  Note that this event is a notification only; the AWT
adds or removes the child internally, and the recipient of
this event need take no action itself.</p>
<p>
<a name="INDEX-1843"></a><a name="INDEX-1844"></a><tt class="literal">getChild()</tt> returns the child <tt class="literal">Component</tt> that
was added or removed, and <tt class="literal">getContainer()</tt> returns the
<tt class="literal">Container</tt> to which it was added or from which it was removed.
<tt class="literal">getContainer()</tt> is simply a convenient alternative to
<tt class="literal">getSource()</tt>.
<a name="INDEX-1845"></a><tt class="literal">getID()</tt> returns the constant <tt class="literal">COMPONENT_ADDED</tt>
or <tt class="literal">COMPONENT_REMOVED</tt> to indicate whether the
specified child was added or removed.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ContainerEvent</b> extends ComponentEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ContainerEvent</b> (Component <i class="parameter">source</i>, int <i class="parameter">id</i>, Component <i class="parameter">child</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">COMPONENT_ADDED</b> ;</td><td align="right"><i> =300</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">COMPONENT_REMOVED</b> ;</td><td align="right"><i> =301</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CONTAINER_FIRST</b> ;</td><td align="right"><i> =300</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CONTAINER_LAST</b> ;</td><td align="right"><i> =301</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getChild</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getContainer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding ComponentEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->ComponentEvent-->ContainerEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.{componentAdded(), componentRemoved()}, Container.processContainerEvent(), ContainerAdapter.{componentAdded(), componentRemoved()}, ContainerListener.{componentAdded(), componentRemoved()}, javax.swing.JComponent.AccessibleJComponent.AccessibleContainerHandler.{componentAdded(), componentRemoved()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ContainerListener</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event listener PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1846"></a><a name="INDEX-1847"></a><a name="INDEX-1848"></a>
This interface defines the methods that an object must
implement to listen for container events on AWT components.
When a <tt class="literal">ContainerEvent</tt> occurs, an AWT component
notifies its registered <tt class="literal">ContainerListener</tt> objects by
invoking one of their methods.
An easy way to implement this interface is by subclassing
the <tt class="literal">ContainerAdapter</tt> class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ContainerListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">componentAdded</b> (ContainerEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">componentRemoved</b> (ContainerEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(ContainerListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AWTEventMulticaster, ContainerAdapter, javax.swing.JComponent.AccessibleJComponent.AccessibleContainerHandler</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}, Container.{addContainerListener(), removeContainerListener()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.JComponent.AccessibleJComponent.accessibleContainerHandler</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FocusAdapter</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event adapter PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1849"></a><a name="INDEX-1850"></a>
This class is a trivial implementation of
<tt class="literal">FocusListener</tt>; it provides empty bodies for each
of the methods of that interface.  When you are not
interested in all of these methods, it is often easier to
subclass <tt class="literal">FocusAdapter</tt> than it is to implement
<tt class="literal">FocusListener</tt> from scratch.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">FocusAdapter</b> implements FocusListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FocusAdapter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing FocusListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">focusGained</b> (FocusEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">focusLost</b> (FocusEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->FocusAdapter(FocusListener(java.util.EventListener))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FocusEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1851"></a><a name="INDEX-1852"></a>
An event of this type indicates that a <tt class="literal">Component</tt> has
gained or lost focus on a temporary or permanent basis.
<a name="INDEX-1853"></a>
Use the inherited <tt class="literal">getComponent()</tt> method to determine
which component has gained or lost focus.  Use
<tt class="literal">getID()</tt> to determine the type of focus event; it
returns <tt class="literal">FOCUS_GAINED</tt> or <tt class="literal">FOCUS_LOST</tt>.</p>
<p>
<a name="INDEX-1854"></a>
When focus is lost, you can call <tt class="literal">isTemporary()</tt> to
determine whether it is a temporary loss of focus.
Temporary focus loss occurs when the window that contains
the component loses focus, for example, or when focus is
temporarily diverted to a popup menu or a scrollbar.
Similarly, you can also use <tt class="literal">isTemporary()</tt> to
determine whether focus is being granted to a component on
a temporary basis.  </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">FocusEvent</b> extends ComponentEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FocusEvent</b> (Component <i class="parameter">source</i>, int <i class="parameter">id</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FocusEvent</b> (Component <i class="parameter">source</i>, int <i class="parameter">id</i>, boolean <i class="parameter">temporary</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">FOCUS_FIRST</b> ;</td><td align="right"><i> =1004</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">FOCUS_GAINED</b> ;</td><td align="right"><i> =1004</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">FOCUS_LAST</b> ;</td><td align="right"><i> =1005</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">FOCUS_LOST</b> ;</td><td align="right"><i> =1005</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isTemporary</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding ComponentEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->ComponentEvent-->FocusEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.{focusGained(), focusLost()}, Component.processFocusEvent(), FocusAdapter.{focusGained(), focusLost()}, FocusListener.{focusGained(), focusLost()}, javax.swing.JComponent.processFocusEvent(), javax.swing.text.DefaultCaret.{focusGained(), focusLost()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FocusListener</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event listener PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1855"></a><a name="INDEX-1856"></a>
This interface defines the methods that an object must
implement to listen for focus events on AWT components.
When a <tt class="literal">FocusEvent</tt> occurs, an AWT component
notifies its registered <tt class="literal">FocusListener</tt> objects by
invoking one of their methods.
An easy way to implement this interface is by subclassing
the <tt class="literal">FocusAdapter</tt> class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">FocusListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">focusGained</b> (FocusEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">focusLost</b> (FocusEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(FocusListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AWTEventMulticaster, FocusAdapter, javax.swing.text.DefaultCaret</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>InputEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1857"></a><a name="INDEX-1858"></a>
This abstract class serves as the superclass for the raw user
input event types <tt class="literal">MouseEvent</tt> and <tt class="literal">KeyEvent</tt>.
<a name="INDEX-1859"></a>
Use the inherited <tt class="literal">getComponent()</tt> method to determine in which
component the event occurred. Use
<a name="INDEX-1860"></a><a name="INDEX-1861"></a><a name="INDEX-1862"></a><tt class="literal">getWhen()</tt> to obtain a timestamp for the event.  Use
<tt class="literal">getModifiers()</tt> to determine which keyboard modifier
keys or mouse buttons were down when the event occurred.
You can decode the <tt class="literal">getModifiers()</tt> return value using
the various <tt class="literal">_MASK</tt> constants defined by this class.
The class also defines four convenience methods for
determining the state of keyboard modifiers.</p>
<p>As of Java 1.1, input events are delivered to the appropriate
listener objects before they are delivered to the AWT
components themselves.  If a listener calls the
<a name="INDEX-1863"></a><tt class="literal">consume()</tt> method of the event, the event is not passed
on to the component.  For example, if a listener registered
on a <tt class="literal">Button</tt> consumes a mouse click, it 
prevents the button itself from responding to that event.
You can use <tt class="literal">isConsumed()</tt> to test whether some other
listener object has already consumed the event.
<a name="INDEX-1864"></a>
</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">InputEvent</b> extends ComponentEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">ALT_GRAPH_MASK</b> ;</td><td align="right"><i> =32</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ALT_MASK</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BUTTON1_MASK</b> ;</td><td align="right"><i> =16</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BUTTON2_MASK</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BUTTON3_MASK</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CTRL_MASK</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">META_MASK</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SHIFT_MASK</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isAltDown</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">isAltGraphDown</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isConsumed</b> ();</td><td align="right"><i> Overrides:AWTEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isControlDown</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isMetaDown</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getModifiers</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isShiftDown</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public long <b class="function">getWhen</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AWTEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">consume</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->ComponentEvent-->InputEvent</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">KeyEvent, MouseEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">java.awt.dnd.DragGestureRecognizer.appendEvent()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.awt.dnd.DragGestureEvent.getTriggerEvent(), java.awt.dnd.DragGestureRecognizer.getTriggerEvent()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>InputMethodEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-1865"></a>
<a name="INDEX-1866"></a>
<p> 
  Events of this type are sent from an input method to the text input
  component or text composition window that is using the services of the
  input method.  An <tt class="literal">InputMethodEvent</tt> is generated
  each time the user makes an edit to the text that is being composed.
  Input method details are usually hidden by text input components.
  Application-level code should never have to use this class.</p>
<a name="INDEX-1867"></a>
<a name="INDEX-1868"></a>
<p>  The <tt class="literal">getText()</tt> method returns a
  <tt class="literal">java.text.AttributedCharacterIterator</tt> that contains the
  current input method text.
  <tt class="literal">getCommittedCharacterCount()</tt> specifies how many
  characters of that text have been fully composed and committed, so
  that they 
  are ready to be integrated into the text input component.  The input
  method does not send these committed characters again.  Any characters
  returned by the iterator beyond the specified number of committed
  characters are characters that are still undergoing composition and
  are not ready to be integrated into the text input component.  These
  characters may be repeated in future
  <tt class="literal">InputMethodEvent</tt> objects, as the user continues to
  edit them.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">InputMethodEvent</b> extends AWTEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InputMethodEvent</b> (Component <i class="parameter">source</i>, int <i class="parameter">id</i>, java.awt.font.TextHitInfo <i class="parameter">caret</i>, java.awt.font.TextHitInfo <i class="parameter">visiblePosition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InputMethodEvent</b> (Component <i class="parameter">source</i>, int <i class="parameter">id</i>, java.text.AttributedCharacterIterator <i class="parameter">text</i>, int <i class="parameter">committedCharacterCount</i>, java.awt.font.TextHitInfo <i class="parameter">caret</i>, java.awt.font.TextHitInfo <i class="parameter">visiblePosition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CARET_POSITION_CHANGED</b> ;</td><td align="right"><i> =1101</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INPUT_METHOD_FIRST</b> ;</td><td align="right"><i> =1100</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INPUT_METHOD_LAST</b> ;</td><td align="right"><i> =1101</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INPUT_METHOD_TEXT_CHANGED</b> ;</td><td align="right"><i> =1100</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.font.TextHitInfo <b class="function">getCaret</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getCommittedCharacterCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isConsumed</b> ();</td><td align="right"><i> Overrides:AWTEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.text.AttributedCharacterIterator <b class="function">getText</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.font.TextHitInfo <b class="function">getVisiblePosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AWTEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">consume</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->InputMethodEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.{caretPositionChanged(), inputMethodTextChanged()}, Component.processInputMethodEvent(), InputMethodListener.{caretPositionChanged(), inputMethodTextChanged()}, javax.swing.text.JTextComponent.processInputMethodEvent()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>InputMethodListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-1869"></a>
<a name="INDEX-1870"></a>
<a name="INDEX-1871"></a>
<p>  This interface defines the methods that a text input component must
  define in order to receive notifications from an input method.
  <tt class="literal">caretPositionChanged()</tt> is invoked when the user has
  moved the editing cursor.  <tt class="literal">inputMethodTextChanged()</tt>
  is invoked when the user has edited text being composed by the input
  method.  </p>
<p>  Input method details are usually hidden by text input components.
  Application-level code should never have to use or implement this
  interface.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">InputMethodListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">caretPositionChanged</b> (InputMethodEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">inputMethodTextChanged</b> (InputMethodEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(InputMethodListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AWTEventMulticaster</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}, Component.{addInputMethodListener(), removeInputMethodListener()}, javax.swing.text.JTextComponent.addInputMethodListener()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>InvocationEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<a name="INDEX-1872"></a>
<p>  An event of this type is not generated by an asynchronous external
  event, such as user input.  Instead, an
  <tt class="literal">InvocationEvent</tt> is placed on the event queue by the
  <tt class="literal">invokeLater()</tt> and
  <tt class="literal">invokeAndWait()</tt> methods of <tt class="literal">EventQueue</tt>.
  <tt class="literal">InvocationEvent</tt> implements
  <tt class="literal">java.awt.ActiveEvent</tt>, which means that it is an
  event that knows how to dispatch itself, with its own
  <tt class="literal">dispatch()</tt> method.  When an
  <tt class="literal">InvocationEvent</tt> reaches the front of the event
  queue, its <tt class="literal">dispatch()</tt> method is called, and this
  invokes the <tt class="literal">run()</tt> method of the
  <tt class="literal">Runnable</tt> object specified when the
  <tt class="literal">InvocationEvent</tt> was created.  This technique
  provides a simple
  method for running arbitrary code from the event dispatch thread.</p>
<p>  Applications need not be concerned with these details; they can simply
  use the <tt class="literal">invokeLater()</tt> and
  <tt class="literal">invokeAndWait()</tt> methods of
  <tt class="literal">EventQueue</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">InvocationEvent</b> extends AWTEvent implements ActiveEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InvocationEvent</b> (Object <i class="parameter">source</i>, Runnable <i class="parameter">runnable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InvocationEvent</b> (Object <i class="parameter">source</i>, Runnable <i class="parameter">runnable</i>, Object <i class="parameter">notifier</i>, boolean <i class="parameter">catchExceptions</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">InvocationEvent</b> (Object <i class="parameter">source</i>, int <i class="parameter">id</i>, Runnable <i class="parameter">runnable</i>, Object <i class="parameter">notifier</i>, boolean <i class="parameter">catchExceptions</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INVOCATION_DEFAULT</b> ;</td><td align="right"><i> =1200</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INVOCATION_FIRST</b> ;</td><td align="right"><i> =1200</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INVOCATION_LAST</b> ;</td><td align="right"><i> =1200</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Exception <b class="function">getException</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ActiveEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">dispatch</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AWTEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">catchExceptions</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Object <b class="function">notifier</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Runnable <b class="function">runnable</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->InvocationEvent(ActiveEvent)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ItemEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1873"></a><a name="INDEX-1874"></a>
An event of this type indicates that an item within an
<tt class="literal">ItemSelectable</tt> component has had its selection state
changed.
<a name="INDEX-1875"></a><a name="INDEX-1876"></a><a name="INDEX-1877"></a><tt class="literal">getItemSelectable()</tt> is a convenient alternative to
<tt class="literal">getSource()</tt> that returns the <tt class="literal">ItemSelectable</tt>
object that originated the event.  <tt class="literal">getItem()</tt> returns
an object that represents the item that was selected or
deselected.</p>
<p>
<a name="INDEX-1878"></a><tt class="literal">getID()</tt> returns the type of the <tt class="literal">ItemEvent</tt>.
The standard AWT components always generate item events of
type <tt class="literal">ITEM_STATE_CHANGED</tt>.  The
<a name="INDEX-1879"></a><tt class="literal">getStateChange()</tt> method returns the new selection
state of the item: it returns one of the constants
<tt class="literal">SELECTED</tt> or <tt class="literal">DESELECTED</tt>.  (This value can be
misleading for <tt class="literal">Checkbox</tt> components that are part of
a <tt class="literal">CheckboxGroup</tt>.  If the user attempts to deselect a
selected component, a <tt class="literal">DESELECTED</tt> event is delivered,
but the <tt class="literal">CheckboxGroup</tt> immediately reselects the
component to enforce its requirement that at least one
<tt class="literal">Checkbox</tt> be selected at all times.)</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ItemEvent</b> extends AWTEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ItemEvent</b> (ItemSelectable <i class="parameter">source</i>, int <i class="parameter">id</i>, Object <i class="parameter">item</i>, int <i class="parameter">stateChange</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DESELECTED</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ITEM_FIRST</b> ;</td><td align="right"><i> =701</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ITEM_LAST</b> ;</td><td align="right"><i> =701</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ITEM_STATE_CHANGED</b> ;</td><td align="right"><i> =701</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SELECTED</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getItem</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ItemSelectable <b class="function">getItemSelectable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getStateChange</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AWTEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->ItemEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.itemStateChanged(), Checkbox.processItemEvent(), CheckboxMenuItem.processItemEvent(), Choice.processItemEvent(), java.awt.List.processItemEvent(), ItemListener.itemStateChanged(), javax.swing.AbstractButton.fireItemStateChanged(), javax.swing.DefaultButtonModel.fireItemStateChanged(), javax.swing.DefaultCellEditor.EditorDelegate.itemStateChanged(), javax.swing.JComboBox.fireItemStateChanged(), javax.swing.JToggleButton.AccessibleJToggleButton.itemStateChanged()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ItemListener</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event listener PJ1.1</i></b></font></td>
</tr>
</table>



<p>
<a name="INDEX-1880"></a><a name="INDEX-1881"></a>
This interface defines the method that an object must
implement to listen for item events on AWT components.
When an <tt class="literal">ItemEvent</tt> occurs, an AWT component
notifies its registered <tt class="literal">ItemListener</tt> objects by
invoking their <tt class="literal">itemStateChanged()</tt> methods.
<a name="INDEX-1882"></a>
</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ItemListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">itemStateChanged</b> (ItemEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(ItemListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AWTEventMulticaster, javax.swing.DefaultCellEditor.EditorDelegate, javax.swing.JToggleButton.AccessibleJToggleButton</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}, javax.swing.AbstractButton.createItemListener()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.AbstractButton.itemListener</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>KeyAdapter</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event adapter PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1883"></a><a name="INDEX-1884"></a><a name="INDEX-1885"></a>
This class is a trivial implementation of
<tt class="literal">KeyListener</tt>; it provides empty bodies for each
of the methods of that interface.  When you are not
interested in all of these methods, it is often easier to
subclass <tt class="literal">KeyAdapter</tt> than it is to implement
<tt class="literal">KeyListener</tt> from scratch.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">KeyAdapter</b> implements KeyListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">KeyAdapter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing KeyListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">keyPressed</b> (KeyEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">keyReleased</b> (KeyEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">keyTyped</b> (KeyEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->KeyAdapter(KeyListener(java.util.EventListener))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>KeyEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1886"></a><a name="INDEX-1887"></a><a name="INDEX-1888"></a>
An event of this type indicates that the user has pressed or
released a key on the keyboard.
<a name="INDEX-1889"></a>
Call <tt class="literal">getID()</tt> to determine the particular type of
key event that has occurred.  The constant <tt class="literal">KEY_PRESSED</tt>
indicates that a key has been pressed, while the constant
<tt class="literal">KEY_RELEASED</tt> indicates that a key has been released.
Not all keystrokes actually correspond to or generate Unicode
characters.  Modifier keys and function keys, for example,
do not correspond to characters.  Furthermore, for
internationalized input, multiple keystrokes are sometimes
required to generate a single character of input.
Therefore, <tt class="literal">getID()</tt> returns a third constant,
<tt class="literal">KEY_TYPED</tt>, to indicate a <tt class="literal">KeyEvent</tt> that
actually contains a character value.</p>
<p>
<a name="INDEX-1890"></a>
For <tt class="literal">KEY_PRESSED</tt> and <tt class="literal">KEY_RELEASED</tt> key events,
use <tt class="literal">getKeyCode()</tt> to obtain the virtual keycode of
the key that was pressed or released.  <tt class="literal">KeyEvent</tt>
defines a number of <tt class="literal">VK_</tt> constants that represent
these virtual keys.  Note that not all keys on all
keyboards have corresponding constants in the
<tt class="literal">KeyEvent</tt> class, and not all keyboards can generate
all of the virtual keycodes defined by this class.  As of Java
 1.1, the <tt class="literal">VK_</tt> constants for letter keys, number keys, and some
other keys have the same values as the ASCII encodings of the
letters and numbers.  You should not rely on this to always be
the case, however.  If the key that was pressed or released
corresponds directly to a Unicode character, you can obtain
<a name="INDEX-1891"></a>
that character by calling <tt class="literal">getKeyChar()</tt>.  If there is
not a corresponding Unicode character, this method
returns the constant <tt class="literal">CHAR_UNDEFINED</tt>.  The
<a name="INDEX-1892"></a><tt class="literal">isActionKey()</tt> method returns <tt class="literal">true</tt> if the key
that was pressed or released does not have a corresponding


character.</p>

<p>For <tt class="literal">KEY_TYPED</tt> key events, use <tt class="literal">getKeyChar()</tt>
to return the Unicode character that was typed.  If you call
<tt class="literal">getKeyCode()</tt> for this type of key event, it returns
<tt class="literal">VK_UNDEFINED</tt>.</p>
<p>See <tt class="literal">InputEvent</tt> for information on inherited methods
you can use to obtain the keyboard modifiers that were down
during the event and other important methods.
<a name="INDEX-1893"></a>
Use <tt class="literal">getComponent()</tt>, inherited from
<tt class="literal">ComponentEvent</tt>, to determine over what component the event
occurred.
<a name="INDEX-1894"></a><a name="INDEX-1895"></a><a name="INDEX-1896"></a>
The static method <tt class="literal">getKeyText()</tt> returns a (possibly
localized) textual name for a given keycode.  The static
method <tt class="literal">getKeyModifiersText()</tt> returns a (possibly
localized) textual description for a set of modifiers.</p>
<p>
<a name="INDEX-1897"></a><tt class="literal">KeyEvent</tt> has methods that allow you to change the
keycode, key character, or modifiers of an event.  These
methods, along with the <tt class="literal">consume()</tt> method, allow a
<tt class="literal">KeyListener</tt> to perform filtering of key
events before they are passed to the underlying AWT
component.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">KeyEvent</b> extends InputEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">KeyEvent</b> (Component <i class="parameter">source</i>, int <i class="parameter">id</i>, long <i class="parameter">when</i>, int <i class="parameter">modifiers</i>, int <i class="parameter">keyCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">KeyEvent</b> (Component <i class="parameter">source</i>, int <i class="parameter">id</i>, long <i class="parameter">when</i>, int <i class="parameter">modifiers</i>, int <i class="parameter">keyCode</i>, char <i class="parameter">keyChar</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final char <b class="function">CHAR_UNDEFINED</b> ;</td><td align="right"><i> ='\uFFFF'</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">KEY_FIRST</b> ;</td><td align="right"><i> =400</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">KEY_LAST</b> ;</td><td align="right"><i> =402</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">KEY_PRESSED</b> ;</td><td align="right"><i> =401</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">KEY_RELEASED</b> ;</td><td align="right"><i> =402</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">KEY_TYPED</b> ;</td><td align="right"><i> =400</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_0</b> ;</td><td align="right"><i> =48</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_1</b> ;</td><td align="right"><i> =49</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_2</b> ;</td><td align="right"><i> =50</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_3</b> ;</td><td align="right"><i> =51</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_4</b> ;</td><td align="right"><i> =52</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_5</b> ;</td><td align="right"><i> =53</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_6</b> ;</td><td align="right"><i> =54</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_7</b> ;</td><td align="right"><i> =55</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_8</b> ;</td><td align="right"><i> =56</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_9</b> ;</td><td align="right"><i> =57</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_A</b> ;</td><td align="right"><i> =65</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_ACCEPT</b> ;</td><td align="right"><i> =30</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_ADD</b> ;</td><td align="right"><i> =107</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_AGAIN</b> ;</td><td align="right"><i> =65481</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_ALL_CANDIDATES</b> ;</td><td align="right"><i> =256</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_ALPHANUMERIC</b> ;</td><td align="right"><i> =240</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_ALT</b> ;</td><td align="right"><i> =18</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_ALT_GRAPH</b> ;</td><td align="right"><i> =65406</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_AMPERSAND</b> ;</td><td align="right"><i> =150</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_ASTERISK</b> ;</td><td align="right"><i> =151</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_AT</b> ;</td><td align="right"><i> =512</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_B</b> ;</td><td align="right"><i> =66</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_BACK_QUOTE</b> ;</td><td align="right"><i> =192</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_BACK_SLASH</b> ;</td><td align="right"><i> =92</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_BACK_SPACE</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_BRACELEFT</b> ;</td><td align="right"><i> =161</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_BRACERIGHT</b> ;</td><td align="right"><i> =162</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_C</b> ;</td><td align="right"><i> =67</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_CANCEL</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_CAPS_LOCK</b> ;</td><td align="right"><i> =20</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_CIRCUMFLEX</b> ;</td><td align="right"><i> =514</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_CLEAR</b> ;</td><td align="right"><i> =12</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_CLOSE_BRACKET</b> ;</td><td align="right"><i> =93</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_CODE_INPUT</b> ;</td><td align="right"><i> =258</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_COLON</b> ;</td><td align="right"><i> =513</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_COMMA</b> ;</td><td align="right"><i> =44</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_COMPOSE</b> ;</td><td align="right"><i> =65312</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_CONTROL</b> ;</td><td align="right"><i> =17</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_CONVERT</b> ;</td><td align="right"><i> =28</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_COPY</b> ;</td><td align="right"><i> =65485</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_CUT</b> ;</td><td align="right"><i> =65489</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_D</b> ;</td><td align="right"><i> =68</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_ABOVEDOT</b> ;</td><td align="right"><i> =134</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_ABOVERING</b> ;</td><td align="right"><i> =136</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_ACUTE</b> ;</td><td align="right"><i> =129</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_BREVE</b> ;</td><td align="right"><i> =133</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_CARON</b> ;</td><td align="right"><i> =138</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_CEDILLA</b> ;</td><td align="right"><i> =139</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_CIRCUMFLEX</b> ;</td><td align="right"><i> =130</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_DIAERESIS</b> ;</td><td align="right"><i> =135</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_DOUBLEACUTE</b> ;</td><td align="right"><i> =137</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_GRAVE</b> ;</td><td align="right"><i> =128</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_IOTA</b> ;</td><td align="right"><i> =141</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_MACRON</b> ;</td><td align="right"><i> =132</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_OGONEK</b> ;</td><td align="right"><i> =140</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_SEMIVOICED_SOUND</b> ;</td><td align="right"><i> =143</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_TILDE</b> ;</td><td align="right"><i> =131</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DEAD_VOICED_SOUND</b> ;</td><td align="right"><i> =142</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_DECIMAL</b> ;</td><td align="right"><i> =110</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_DELETE</b> ;</td><td align="right"><i> =127</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_DIVIDE</b> ;</td><td align="right"><i> =111</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_DOLLAR</b> ;</td><td align="right"><i> =515</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_DOWN</b> ;</td><td align="right"><i> =40</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_E</b> ;</td><td align="right"><i> =69</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_END</b> ;</td><td align="right"><i> =35</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_ENTER</b> ;</td><td align="right"><i> =10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_EQUALS</b> ;</td><td align="right"><i> =61</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_ESCAPE</b> ;</td><td align="right"><i> =27</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_EURO_SIGN</b> ;</td><td align="right"><i> =516</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_EXCLAMATION_MARK</b> ;</td><td align="right"><i> =517</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_F</b> ;</td><td align="right"><i> =70</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_F1</b> ;</td><td align="right"><i> =112</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_F10</b> ;</td><td align="right"><i> =121</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_F11</b> ;</td><td align="right"><i> =122</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_F12</b> ;</td><td align="right"><i> =123</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_F13</b> ;</td><td align="right"><i> =61440</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_F14</b> ;</td><td align="right"><i> =61441</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_F15</b> ;</td><td align="right"><i> =61442</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_F16</b> ;</td><td align="right"><i> =61443</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_F17</b> ;</td><td align="right"><i> =61444</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_F18</b> ;</td><td align="right"><i> =61445</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_F19</b> ;</td><td align="right"><i> =61446</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_F2</b> ;</td><td align="right"><i> =113</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_F20</b> ;</td><td align="right"><i> =61447</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_F21</b> ;</td><td align="right"><i> =61448</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_F22</b> ;</td><td align="right"><i> =61449</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_F23</b> ;</td><td align="right"><i> =61450</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_F24</b> ;</td><td align="right"><i> =61451</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_F3</b> ;</td><td align="right"><i> =114</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_F4</b> ;</td><td align="right"><i> =115</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_F5</b> ;</td><td align="right"><i> =116</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_F6</b> ;</td><td align="right"><i> =117</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_F7</b> ;</td><td align="right"><i> =118</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_F8</b> ;</td><td align="right"><i> =119</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_F9</b> ;</td><td align="right"><i> =120</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_FINAL</b> ;</td><td align="right"><i> =24</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_FIND</b> ;</td><td align="right"><i> =65488</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_FULL_WIDTH</b> ;</td><td align="right"><i> =243</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_G</b> ;</td><td align="right"><i> =71</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_GREATER</b> ;</td><td align="right"><i> =160</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_H</b> ;</td><td align="right"><i> =72</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_HALF_WIDTH</b> ;</td><td align="right"><i> =244</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_HELP</b> ;</td><td align="right"><i> =156</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_HIRAGANA</b> ;</td><td align="right"><i> =242</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_HOME</b> ;</td><td align="right"><i> =36</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_I</b> ;</td><td align="right"><i> =73</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_INSERT</b> ;</td><td align="right"><i> =155</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_INVERTED_EXCLAMATION_MARK</b> ;</td><td align="right"><i> =518</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_J</b> ;</td><td align="right"><i> =74</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_JAPANESE_HIRAGANA</b> ;</td><td align="right"><i> =260</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_JAPANESE_KATAKANA</b> ;</td><td align="right"><i> =259</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_JAPANESE_ROMAN</b> ;</td><td align="right"><i> =261</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_K</b> ;</td><td align="right"><i> =75</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_KANA</b> ;</td><td align="right"><i> =21</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_KANJI</b> ;</td><td align="right"><i> =25</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_KATAKANA</b> ;</td><td align="right"><i> =241</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_KP_DOWN</b> ;</td><td align="right"><i> =225</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_KP_LEFT</b> ;</td><td align="right"><i> =226</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_KP_RIGHT</b> ;</td><td align="right"><i> =227</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_KP_UP</b> ;</td><td align="right"><i> =224</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_L</b> ;</td><td align="right"><i> =76</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_LEFT</b> ;</td><td align="right"><i> =37</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_LEFT_PARENTHESIS</b> ;</td><td align="right"><i> =519</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_LESS</b> ;</td><td align="right"><i> =153</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_M</b> ;</td><td align="right"><i> =77</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_META</b> ;</td><td align="right"><i> =157</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_MINUS</b> ;</td><td align="right"><i> =45</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_MODECHANGE</b> ;</td><td align="right"><i> =31</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_MULTIPLY</b> ;</td><td align="right"><i> =106</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_N</b> ;</td><td align="right"><i> =78</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_NONCONVERT</b> ;</td><td align="right"><i> =29</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_NUM_LOCK</b> ;</td><td align="right"><i> =144</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_NUMBER_SIGN</b> ;</td><td align="right"><i> =520</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_NUMPAD0</b> ;</td><td align="right"><i> =96</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_NUMPAD1</b> ;</td><td align="right"><i> =97</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_NUMPAD2</b> ;</td><td align="right"><i> =98</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_NUMPAD3</b> ;</td><td align="right"><i> =99</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_NUMPAD4</b> ;</td><td align="right"><i> =100</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_NUMPAD5</b> ;</td><td align="right"><i> =101</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_NUMPAD6</b> ;</td><td align="right"><i> =102</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_NUMPAD7</b> ;</td><td align="right"><i> =103</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_NUMPAD8</b> ;</td><td align="right"><i> =104</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_NUMPAD9</b> ;</td><td align="right"><i> =105</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_O</b> ;</td><td align="right"><i> =79</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_OPEN_BRACKET</b> ;</td><td align="right"><i> =91</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_P</b> ;</td><td align="right"><i> =80</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_PAGE_DOWN</b> ;</td><td align="right"><i> =34</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_PAGE_UP</b> ;</td><td align="right"><i> =33</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_PASTE</b> ;</td><td align="right"><i> =65487</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_PAUSE</b> ;</td><td align="right"><i> =19</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_PERIOD</b> ;</td><td align="right"><i> =46</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_PLUS</b> ;</td><td align="right"><i> =521</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_PREVIOUS_CANDIDATE</b> ;</td><td align="right"><i> =257</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_PRINTSCREEN</b> ;</td><td align="right"><i> =154</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_PROPS</b> ;</td><td align="right"><i> =65482</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_Q</b> ;</td><td align="right"><i> =81</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_QUOTE</b> ;</td><td align="right"><i> =222</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_QUOTEDBL</b> ;</td><td align="right"><i> =152</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_R</b> ;</td><td align="right"><i> =82</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_RIGHT</b> ;</td><td align="right"><i> =39</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_RIGHT_PARENTHESIS</b> ;</td><td align="right"><i> =522</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_ROMAN_CHARACTERS</b> ;</td><td align="right"><i> =245</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_S</b> ;</td><td align="right"><i> =83</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_SCROLL_LOCK</b> ;</td><td align="right"><i> =145</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_SEMICOLON</b> ;</td><td align="right"><i> =59</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_SEPARATER</b> ;</td><td align="right"><i> =108</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_SHIFT</b> ;</td><td align="right"><i> =16</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_SLASH</b> ;</td><td align="right"><i> =47</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_SPACE</b> ;</td><td align="right"><i> =32</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_STOP</b> ;</td><td align="right"><i> =65480</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_SUBTRACT</b> ;</td><td align="right"><i> =109</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_T</b> ;</td><td align="right"><i> =84</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_TAB</b> ;</td><td align="right"><i> =9</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_U</b> ;</td><td align="right"><i> =85</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_UNDEFINED</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_UNDERSCORE</b> ;</td><td align="right"><i> =523</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public static final int <b class="function">VK_UNDO</b> ;</td><td align="right"><i> =65483</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_UP</b> ;</td><td align="right"><i> =38</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_V</b> ;</td><td align="right"><i> =86</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_W</b> ;</td><td align="right"><i> =87</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_X</b> ;</td><td align="right"><i> =88</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_Y</b> ;</td><td align="right"><i> =89</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VK_Z</b> ;</td><td align="right"><i> =90</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">getKeyModifiersText</b> (int <i class="parameter">modifiers</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">getKeyText</b> (int <i class="parameter">keyCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isActionKey</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getKeyChar</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setKeyChar</b> (char <i class="parameter">keyChar</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getKeyCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setKeyCode</b> (int <i class="parameter">keyCode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModifiers</b> (int <i class="parameter">modifiers</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding ComponentEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->ComponentEvent-->InputEvent-->KeyEvent</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.event.MenuKeyEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>KeyListener</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event listener PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1898"></a><a name="INDEX-1899"></a><a name="INDEX-1900"></a>
This interface defines the methods that an object must
implement to listen for key events on AWT components.
When a <tt class="literal">KeyEvent</tt> occurs, an AWT component
notifies its registered <tt class="literal">KeyListener</tt> objects by
invoking one of their methods.
An easy way to implement this interface is by subclassing
the <tt class="literal">KeyAdapter</tt> class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">KeyListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">keyPressed</b> (KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">keyReleased</b> (KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">keyTyped</b> (KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(KeyListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AWTEventMulticaster, KeyAdapter</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}, Component.{addKeyListener(), removeKeyListener()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MouseAdapter</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event adapter PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1901"></a><a name="INDEX-1902"></a><a name="INDEX-1903"></a>
This class is a trivial implementation of
<tt class="literal">MouseListener</tt>; it provides empty bodies for each
of the methods of that interface.  When you are not
interested in all of these methods, it is often easier to
subclass <tt class="literal">MouseAdapter</tt> than it is to implement
<tt class="literal">MouseListener</tt> from scratch.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">MouseAdapter</b> implements MouseListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MouseAdapter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MouseListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseClicked</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseEntered</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseExited</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mousePressed</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseReleased</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->MouseAdapter(MouseListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.ToolTipManager, javax.swing.text.html.FormView.MouseEventListener, javax.swing.text.html.HTMLEditorKit.LinkController</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MouseEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1904"></a><a name="INDEX-1905"></a>
An event of this type indicates that the user has moved the
mouse or pressed one of the mouse buttons.
<a name="INDEX-1906"></a>
Call <tt class="literal">getID()</tt> to determine the specific type of mouse
event that has occurred.  This method returns one of the
following seven constants, which corresponds to a method in
either the <tt class="literal">MouseListener</tt> or
<tt class="literal">MouseMotionListener</tt> interface:
</p>
<dl>
<dt>
<b><tt class="literal">MOUSE_PRESSED</tt></b>
</dt>
<dd>
<p>The user has pressed a mouse button.
</p>
</dd>
<dt>
<b><tt class="literal">MOUSE_RELEASED</tt></b>
</dt>
<dd>
<p>The user has released a mouse button.
</p>
</dd>
<dt>
<b><tt class="literal">MOUSE_CLICKED</tt></b>
</dt>
<dd>
<p>The user has pressed and released
a mouse button without any intervening mouse drag.
</p>
</dd>
<dt>
<b><tt class="literal">MOUSE_DRAGGED</tt></b>
</dt>
<dd>
<p>The user has moved the mouse while
holding a button down.
</p>
</dd>
<dt>
<b><tt class="literal">MOUSE_MOVED</tt></b>
</dt>
<dd>
<p>The user has moved the mouse without holding any buttons
down.
</p>
</dd>
<dt>
<b><tt class="literal">MOUSE_ENTERED</tt></b>
</dt>
<dd>
<p>The mouse pointer has entered the component.
</p>
</dd>
<dt>
<b><tt class="literal">MOUSE_EXITED</tt></b>
</dt>
<dd>
<p>The mouse pointer has left the component.</p>
</dd>
</dl>
<a name="INDEX-1907"></a>
<p>
<a name="INDEX-1908"></a><a name="INDEX-1909"></a><a name="INDEX-1910"></a>
Use <tt class="literal">getX()</tt> and <tt class="literal">getY()</tt> or <tt class="literal">getPoint()</tt>
to obtain the coordinates of the mouse event.  Use
<tt class="literal">translatePoint()</tt> to modify these coordinates by a
specified amount.</p>
<p>
<a name="INDEX-1911"></a><a name="INDEX-1912"></a>
Use <tt class="literal">getModifiers()</tt> and other methods and constants
inherited from <tt class="literal">InputEvent</tt> to determine the mouse
button or keyboard modifiers that were down when the event
occurred.  See <tt class="literal">InputEvent</tt> for details.  Note
that mouse button modifiers are not reported for
<tt class="literal">MOUSE_RELEASED</tt> events, since, technically, the mouse
button in question is no longer pressed.  </p>
<p>
<a name="INDEX-1913"></a>
Use <tt class="literal">getComponent()</tt>, inherited from
<tt class="literal">ComponentEvent</tt>, to determine over which component the event
occurred.
<a name="INDEX-1914"></a>
For mouse events of type <tt class="literal">MOUSE_CLICKED</tt>,
<tt class="literal">MOUSE_PRESSED</tt>, or <tt class="literal">MOUSE_RELEASED</tt>, call
<tt class="literal">getClickCount()</tt> to determine how many consecutive
clicks have occurred.
<a name="INDEX-1915"></a>
If you are using popup menus, use <tt class="literal">isPopupTrigger()</tt>
to test whether the current event represents the standard
platform-dependent popup menu trigger event.  </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MouseEvent</b> extends InputEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MouseEvent</b> (Component <i class="parameter">source</i>, int <i class="parameter">id</i>, long <i class="parameter">when</i>, int <i class="parameter">modifiers</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">clickCount</i>, boolean <i class="parameter">popupTrigger</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_CLICKED</b> ;</td><td align="right"><i> =500</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_DRAGGED</b> ;</td><td align="right"><i> =506</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_ENTERED</b> ;</td><td align="right"><i> =504</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_EXITED</b> ;</td><td align="right"><i> =505</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_FIRST</b> ;</td><td align="right"><i> =500</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_LAST</b> ;</td><td align="right"><i> =506</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_MOVED</b> ;</td><td align="right"><i> =503</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_PRESSED</b> ;</td><td align="right"><i> =501</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MOUSE_RELEASED</b> ;</td><td align="right"><i> =502</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getClickCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Point <b class="function">getPoint</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isPopupTrigger</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getX</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getY</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">translatePoint</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding ComponentEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->ComponentEvent-->InputEvent-->MouseEvent</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.event.MenuDragMouseEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">javax.swing.SwingUtilities.convertMouseEvent()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MouseListener</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event listener PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1916"></a><a name="INDEX-1917"></a><a name="INDEX-1918"></a>
This interface defines the methods that an object must
implement to listen for mouse events on AWT components.
When a <tt class="literal">MouseEvent</tt> occurs, an AWT component
notifies its registered <tt class="literal">MouseListener</tt> objects (or
<tt class="literal">MouseMotionListener</tt> objects, if the event involves
mouse motion) by 

invoking one of their methods.
An easy way to implement this interface is by subclassing
the <tt class="literal">MouseAdapter</tt> class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">MouseListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">mouseClicked</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">mouseEntered</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">mouseExited</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">mousePressed</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">mouseReleased</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(MouseListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AWTEventMulticaster, java.awt.dnd.MouseDragGestureRecognizer, MouseAdapter, javax.swing.event.MouseInputListener, javax.swing.text.DefaultCaret</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}, Component.{addMouseListener(), removeMouseListener()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MouseMotionAdapter</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event adapter PJ1.1</i></b></font></td>
</tr>
</table>

<p>
This class is a trivial implementation of
<tt class="literal">MouseMotionListener</tt>; it provides empty bodies for each
of the methods of that interface.  When you are not
interested in all of these methods, it is often easier to
subclass <tt class="literal">MouseMotionAdapter</tt>
than it is to implement
<tt class="literal">MouseMotionListener</tt> from scratch.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">MouseMotionAdapter</b> implements MouseMotionListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MouseMotionAdapter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MouseMotionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseDragged</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseMoved</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->MouseMotionAdapter(MouseMotionListener(java.util.EventListener))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MouseMotionListener</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event listener PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1919"></a><a name="INDEX-1920"></a>
This interface defines the methods that an object must
implement to listen for mouse motion events on AWT
components.  When a <tt class="literal">MouseEvent</tt> involving a
mouse drag or mouse motion with no buttons down occurs, an AWT
component notifies its registered
<tt class="literal">MouseMotionListener</tt> objects by 

invoking one of their
methods.
An easy way to implement this is by subclassing
the <tt class="literal">MouseMotionAdapter</tt> class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">MouseMotionListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">mouseDragged</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">mouseMoved</b> (MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(MouseMotionListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AWTEventMulticaster, java.awt.dnd.MouseDragGestureRecognizer, MouseMotionAdapter, javax.swing.ToolTipManager, javax.swing.event.MouseInputListener, javax.swing.text.DefaultCaret</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}, Component.{addMouseMotionListener(), removeMouseMotionListener()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PaintEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1921"></a><a name="INDEX-1922"></a><a name="INDEX-1923"></a><a name="INDEX-1924"></a><a name="INDEX-1925"></a>
An event of this type indicates that a component should have
its <tt class="literal">update()</tt> method invoked.  (The <tt class="literal">update()</tt>
method typically, by default, invokes the
<tt class="literal">paint()</tt> method.)</p>
<p>
<tt class="literal">PaintEvent</tt> differs from the other event types in
<tt class="literal">java.awt.event</tt> in that it does not have a
corresponding <tt class="literal">EventListener</tt> interface.
<tt class="literal">PaintEvent</tt> is essentially for internal use by the
AWT redisplay framework, so your programs should not try to
handle it the way they handle other events.  Instead, applets
and custom components should simply override their
<tt class="literal">paint()</tt> and/or <tt class="literal">update()</tt> methods to redraw
themselves appropriately.  AWT automatically invokes
<tt class="literal">update()</tt> (which typically invokes
<tt class="literal">paint()</tt>) when a <tt class="literal">PaintEvent</tt> arrives.</p>
<p>Although you do not typically use <tt class="literal">PaintEvent</tt>,
redraw events are implemented through this class for
simplicity, so that they are on equal footing with other
event types and so that advanced programs can manipulate
them through the <tt class="literal">EventQueue</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">PaintEvent</b> extends ComponentEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">PaintEvent</b> (Component <i class="parameter">source</i>, int <i class="parameter">id</i>, Rectangle <i class="parameter">updateRect</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PAINT</b> ;</td><td align="right"><i> =800</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PAINT_FIRST</b> ;</td><td align="right"><i> =800</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PAINT_LAST</b> ;</td><td align="right"><i> =801</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">UPDATE</b> ;</td><td align="right"><i> =801</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Rectangle <b class="function">getUpdateRect</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUpdateRect</b> (Rectangle <i class="parameter">updateRect</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding ComponentEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->ComponentEvent-->PaintEvent</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TextEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1926"></a><a name="INDEX-1927"></a><a name="INDEX-1928"></a>
An event of this type indicates that the user has edited the
text value that appears in a <tt class="literal">TextField</tt>,
<tt class="literal">TextArea</tt>, or other <tt class="literal">TextComponent</tt>.  This
event is triggered by any change to the displayed text.  Note that this
is not the same as the <tt class="literal">ActionEvent</tt> sent by the
<tt class="literal">TextField</tt> object when the user edits the text and
strikes the <b class="emphasis-bold">Return</b> key.</p>
<p>
<a name="INDEX-1929"></a><a name="INDEX-1930"></a>
Use the inherited <tt class="literal">getSource()</tt> to determine the
object that was the source of this event.  You have to cast
that object to its <tt class="literal">TextComponent</tt> type.  Call
<tt class="literal">getID()</tt> to determine the type of a <tt class="literal">TextEvent</tt>.
The standard AWT components always generate text events of
type <tt class="literal">TEXT_VALUE_CHANGED</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">TextEvent</b> extends AWTEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">TextEvent</b> (Object <i class="parameter">source</i>, int <i class="parameter">id</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TEXT_FIRST</b> ;</td><td align="right"><i> =900</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TEXT_LAST</b> ;</td><td align="right"><i> =900</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TEXT_VALUE_CHANGED</b> ;</td><td align="right"><i> =900</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AWTEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->TextEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.textValueChanged(), TextComponent.processTextEvent(), TextListener.textValueChanged()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>TextListener</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event listener PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1931"></a><a name="INDEX-1932"></a><a name="INDEX-1933"></a>
This interface defines the method that an object must
implement to listen for text events on AWT components.
When a <tt class="literal">TextEvent</tt> occurs, an AWT component
notifies its registered <tt class="literal">TextListener</tt> objects by
invoking their <tt class="literal">textValueChanged()</tt> methods.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">TextListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">textValueChanged</b> (TextEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(TextListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AWTEventMulticaster</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}, TextComponent.{addTextListener(), removeTextListener()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">TextComponent.textListener</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>WindowAdapter</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event adapter PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1934"></a><a name="INDEX-1935"></a><a name="INDEX-1936"></a>
This class is a trivial implementation of
<tt class="literal">WindowListener</tt>; it provides empty bodies for each
of the methods of that interface.  When you are not
interested in all of these methods, it is often easier to
subclass <tt class="literal">WindowAdapter</tt> than it is to implement
<tt class="literal">WindowListener</tt> from scratch.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">WindowAdapter</b> implements WindowListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">WindowAdapter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing WindowListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowActivated</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowClosed</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowClosing</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowDeactivated</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowDeiconified</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowIconified</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowOpened</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->WindowAdapter(WindowListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.JMenu.WinListener</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>WindowEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>serializable event PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1937"></a><a name="INDEX-1938"></a><a name="INDEX-1939"></a>
An event of this type indicates that an important action has
occurred for a <tt class="literal">Window</tt> object.
<a name="INDEX-1940"></a><a name="INDEX-1941"></a>
Call <tt class="literal">getWindow()</tt> to determine the <tt class="literal">Window</tt>
object that is the source of this event.  Call
<tt class="literal">getID()</tt> to determine the specific type of event that
has occurred.  Each of the following seven constants
corresponds to one of the methods of the
<tt class="literal">WindowListener</tt> interface:</p>

<dl>
<dt>
<b><tt class="literal">WINDOW_OPENED</tt></b>
</dt>
<dd>
<p>Indicates that the window has been created and
opened; it is delivered only the first time that a window is
opened.
</p>
</dd>
<dt>
<b><tt class="literal">WINDOW_CLOSING</tt></b>
</dt>
<dd>
<p>Indicates that the user has requested that the
window be closed through the system menu, through a close
button on the window's border, or by invoking a
platform-defined keystroke, such as <b class="emphasis-bold">Alt-F4</b> in
Windows.  The application should respond to this event by
calling <tt class="literal">hide()</tt> or <tt class="literal">dispose()</tt> on the
<tt class="literal">Window</tt> object.
<a name="INDEX-1942"></a><a name="INDEX-1943"></a>
</p>
</dd>
<dt>
<b><tt class="literal">WINDOW_CLOSED</tt></b>
</dt>
<dd>
<p>Delivered after a window is closed by a
call to <tt class="literal">hide()</tt> or <tt class="literal">dispose()</tt>.
</p>
</dd>
<dt>
<b><tt class="literal">WINDOW_ICONIFIED</tt></b>
</dt>
<dd>
<p>Delivered when the user iconifies the window.
</p>
</dd>
<dt>
<b><tt class="literal">WINDOW_DEICONIFIED</tt></b>
</dt>
<dd>
<p>Delivered when the user deiconifies the window.
</p>
</dd>
<dt>
<b><tt class="literal">WINDOW_ACTIVATED</tt></b>
</dt>
<dd>
<p>Delivered when the window is
activated--that is, when it is given the keyboard focus and
becomes the active window.
</p>
</dd>
<dt>
<b><tt class="literal">WINDOW_DEACTIVATED</tt></b>
</dt>
<dd>
<p>Delivered when the window ceases to be
the active window, typically when the user activates some
other window.</p>
</dd>
</dl>
<a name="INDEX-1944"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">WindowEvent</b> extends ComponentEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">WindowEvent</b> (Window <i class="parameter">source</i>, int <i class="parameter">id</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_ACTIVATED</b> ;</td><td align="right"><i> =205</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_CLOSED</b> ;</td><td align="right"><i> =202</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_CLOSING</b> ;</td><td align="right"><i> =201</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_DEACTIVATED</b> ;</td><td align="right"><i> =206</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_DEICONIFIED</b> ;</td><td align="right"><i> =204</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_FIRST</b> ;</td><td align="right"><i> =200</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_ICONIFIED</b> ;</td><td align="right"><i> =203</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_LAST</b> ;</td><td align="right"><i> =206</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WINDOW_OPENED</b> ;</td><td align="right"><i> =200</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Window <b class="function">getWindow</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding ComponentEvent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->AWTEvent-->ComponentEvent-->WindowEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>WindowListener</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.awt.event</b></font></td><td align="right"><font size="+1"><b><i>event listener PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-1945"></a><a name="INDEX-1946"></a><a name="INDEX-1947"></a>
This interface defines the methods that an object must
implement to listen for window events on AWT components.
When a <tt class="literal">WindowEvent</tt> occurs, an AWT component
notifies its registered <tt class="literal">WindowListener</tt> objects by
invoking one of their methods.
An easy way to implement this interface is by subclassing
the <tt class="literal">WindowAdapter</tt> class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">WindowListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">windowActivated</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">windowClosed</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">windowClosing</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">windowDeactivated</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">windowDeiconified</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">windowIconified</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">windowOpened</b> (WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(WindowListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AWTEventMulticaster, WindowAdapter</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}, Window.{addWindowListener(), removeWindowListener()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AWTEventMulticaster.{add(), remove()}</tt>
</p>
</div>
<a name="INDEX-1948"></a>
<a name="INDEX-1949"></a>
<a name="INDEX-1950"></a>
<a name="INDEX-1951"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch13_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch13_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch15_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch15_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">13.1. The java.awt.dnd.peer Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">15. The java.awt.font Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
