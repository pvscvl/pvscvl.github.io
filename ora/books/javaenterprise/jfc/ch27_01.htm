<html>
<head>
<title>The javax.swing.filechooser Package (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The javax.swing.filechooser Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch26_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch26_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch28_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch28_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 27.  The javax.swing.filechooser Package</h1>

<p>  The <tt class="literal">javax.swing.filechooser</tt>
  package defines auxiliary classes used by the
  <tt class="literal">javax.

swing.JFileChooser</tt> component.  You can
  customize the behavior of a <tt class="literal">JFileChooser</tt> by
  defining concrete subclasses of these abstract classes.  Define a
  <tt class="literal">FileFilter</tt> to specify what files should be
  displayed by the <tt class="literal">JFileChooser</tt>.  Define a
  <tt class="literal">FileView</tt> to specify how it should display those
  classes.  And define a <tt class="literal">FileSystemView</tt> to specify
  how it should traverse the file system.
  <a href="#jfcnut-ch-javax.swing.filechooser-fig-1">Figure 27-1</a> shows the class hierarchy of
  this package.</p>
<a name="INDEX-2778"></a>
<a name="INDEX-2779"></a>
<a name="jfcnut-ch-javax.swing.filechooser-fig-1"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.2701.gif" webstripperlinkwas="figs/jfcn.2701.gif"></div>
<h4 class="objtitle">Figure 27-1. The javax.swing.filechooser package</h4>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FileFilter</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.filechooser</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2780"></a>
<a name="INDEX-2781"></a>
<p>  This abstract class defines the methods used by the
  <tt class="literal">JFileChooser</tt> component to select a subset of files
  for display.  When the <tt class="literal">accept()</tt> method is passed a
  <tt class="literal">File</tt> object, it should return
  <tt class="literal">true</tt> if that file should be displayed by the
  <tt class="literal">JFileChooser</tt> and <tt class="literal">false</tt>
  otherwise.  <tt class="literal">accept()</tt> often makes its
  determination based on the filename extension, but it can also take
  other factors into account, such as the readability and writability of
  the file.
  The <tt class="literal">getDescription()</tt> method must return a
  human-readable description (preferably localized for the current
  locale) of the filtering operation performed by the filter.  For
  example, if a <tt class="literal">FileFilter</tt> accepts files that end
  with extensions <em class="emphasis">.gif</em>, 
  <em class="emphasis">.jpg</em>, and <em class="emphasis">.png</em>, the
  <tt class="literal">getDescription()</tt> method might return the string
  "Image files". </p>
<a name="INDEX-2782"></a>
<p>  Once you have created a <tt class="literal">FileFilter</tt>, you can tell a
  <tt class="literal">JFileChooser</tt> to use it by passing the filter to the
  <tt class="literal">setFileFilter()</tt> method.  If you want to allow the
  user to choose among a set of file filters, pass the 
  <tt class="literal">FileFilter</tt> objects to the
  <tt class="literal">addChooseableFileFilter()</tt> method of
  <tt class="literal">JFileChooser</tt>.
  Do not confuse <tt class="literal">javax.swing.filechooser.FileFilter</tt>
  with its less-powerful relative,
  <tt class="literal">java.io.FilenameFilter</tt>.</p>
<a name="INDEX-2783"></a>
<a name="INDEX-2784"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">FileFilter</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FileFilter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">accept</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getDescription</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JFileChooser.{addChoosableFileFilter(), removeChoosableFileFilter(), setFileFilter()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JFileChooser.{getAcceptAllFileFilter(), getChoosableFileFilters(), getFileFilter()}, javax.swing.plaf.FileChooserUI.getAcceptAllFileFilter()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FileSystemView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.filechooser</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2785"></a>
<a name="INDEX-2786"></a>
<p>
<tt class="literal">FileSystemView</tt> abstracts the system dependencies of
  the native filesystem and provides a platform-independent view of the
  filesystem for the <tt class="literal">JFileChooser</tt> component.  As of
  Java 1.2, the features of <tt class="literal">FileSystemView</tt> are
  provided directly by the <tt class="literal">java.io.File</tt> class, so
  this class exists for portability to Java 1.1 systems.</p>
<a name="INDEX-2787"></a>
<a name="INDEX-2788"></a>
<a name="INDEX-2789"></a>
<a name="INDEX-2790"></a>
<a name="INDEX-2791"></a>
<p>  You can obtain the <tt class="literal">FileSystemView</tt> object for the current
  platform by calling the static <tt class="literal">getFileSystemView()</tt>
  method.  The <tt class="literal">getRoots()</tt> method returns a list of
  root directories for the system.  For Unix systems, there is only one,
  the <em class="emphasis">/</em> 
  directory.  On Windows systems, however, there is a root
  directory for each active drive letter.  Use
  <tt class="literal">getHomeDirectory()</tt> to obtain a user's home
  directory on systems that have such a concept.  Use
  <tt class="literal">isHiddenFile()</tt> to determine if a file is a hidden
  file according to the conventions of the native platform.  Use
  <tt class="literal">getFiles()</tt> to list the contents of a directory,
  optionally omitting hidden files.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">FileSystemView</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FileSystemView</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static FileSystemView <b class="function">getFileSystemView</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.io.File <b class="function">getHomeDirectory</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.io.File[ ] <b class="function">getRoots</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.io.File <b class="function">createFileObject</b> (String <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.io.File <b class="function">createFileObject</b> (java.io.File <i class="parameter">dir</i>, String <i class="parameter">filename</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.io.File <b class="function">createNewFolder</b> (java.io.File <i class="parameter">containingDir</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.io.File[ ] <b class="function">getFiles</b> (java.io.File <i class="parameter">dir</i>, boolean <i class="parameter">useFileHiding</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.io.File <b class="function">getParentDirectory</b> (java.io.File <i class="parameter">dir</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isHiddenFile</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isRoot</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JFileChooser.{JFileChooser(), setFileSystemView(), setup()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JFileChooser.getFileSystemView(), FileSystemView.getFileSystemView()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FileView</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing.filechooser</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2792"></a>
<p>  This abstract class defines methods that the
  <tt class="literal">JFileChooser</tt> component uses to obtain information
  about how it should display a file.  <tt class="literal">JFileChooser</tt>
  uses a <tt class="literal">FileView</tt> object provided by the current
  look-and-feel implementation to provide such things as the default
  icons for files and directories.  You can implement your own
  <tt class="literal">FileView</tt> object to override some or all of the
  default behavior of the <tt class="literal">FileView</tt> provided by a
  look-and-feel. To do so, pass your <tt class="literal">FileView</tt> to the
  <tt class="literal">setFileView()</tt> method of the
  <tt class="literal">JFileChooser</tt>.  The <tt class="literal">JFileChooser</tt>
  always queries your <tt class="literal">FileView</tt> object first, but 
  when any of your methods return <tt class="literal">null</tt>, 
  it calls the corresponding
  method of the look-and-feel <tt class="literal">FileView</tt>.
  By far, the most common reason to create a custom
  <tt class="literal">FileView</tt> class is to implement the
  <tt class="literal">getIcon()</tt> method to return custom icons for
  specific types of files.  The other methods of
  <tt class="literal">FileView</tt> are not so commonly used.</p>
<a name="INDEX-2793"></a>
<a name="INDEX-2794"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">FileView</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FileView</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getDescription</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Icon <b class="function">getIcon</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getName</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getTypeDescription</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Boolean <b class="function">isTraversable</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JFileChooser.setFileView()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JFileChooser.getFileView(), javax.swing.plaf.FileChooserUI.getFileView()</tt>
</p>
<a name="INDEX-2795"></a>
<a name="INDEX-2796"></a>
</div>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch26_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch26_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch28_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch28_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">26.1. The javax.swing.event Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">28. The javax.swing.plaf Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
