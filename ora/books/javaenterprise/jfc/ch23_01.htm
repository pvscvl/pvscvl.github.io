<html>
<head>
<title>The javax.swing Package (Java Foundation Classes)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-488-6E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The javax.swing Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch22_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch22_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch24_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch24_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 23.  The javax.swing Package</h1>

<a name="INDEX-2260"></a>
<p> 
  This large package contains the most important classes and interfaces
  of Swing.  Swing is a core part of Java 1.2 and is also available as a
  standard extension to Java 1.1.  The GUI
  component classes are at the heart of Swing.  
  These classes have names that begin with the
  letter <em class="emphasis">J</em>.    
  <a href="#jfcnut-ch-javax.swing-fig-1">Figure 23-1</a> shows the hierarchy of
  Swing components in <tt class="literal">javax.swing</tt>.  Note that
  this diagram does not show the fact that all the Swing components
  implement <tt class="literal">javax.accessibility.Accessible</tt>; 
  see the individual
  class synopses for this information.</p>
<a name="INDEX-2261"></a>
<a name="INDEX-2262"></a>
<a name="jfcnut-ch-javax.swing-fig-1"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.2301.gif" webstripperlinkwas="figs/jfcn.2301.gif"></div>
<h4 class="objtitle">Figure 23-1. Components of the javax.swing package</h4>
<p>  
  Most Swing components rely on a model object to hold
  their state information.  Various interfaces define the methods that
  these state objects must implement, and various abstract and concrete
  classes implement these interfaces.  These model interfaces and
  classes are recognizable by the word "Model" in their names.  
  <a href="#jfcnut-ch-javax.swing-fig-2">Figure 23-2</a> shows the model objects and
  layout managers in <tt class="literal">javax.swing</tt>.</p>
<p>  Classes
  with the word "Manager" in their names typically manage some important
  part of the Swing user-interface or application environment.  Other
  important classes and interfaces defined by this package include:
  <tt class="literal">Action</tt>, <tt class="literal">Icon</tt>,
  <tt class="literal">KeyStroke</tt>, <tt class="literal">Timer</tt>, and
  <tt class="literal">SwingUtilities</tt>.
  <a href="#jfcnut-ch-javax.swing-fig-3">Figure 23-3</a> shows the rest of the classes
  and interfaces in <tt class="literal">javax.swing</tt>.</p>
<p>All Swing components are <em class="emphasis">accessible</em>, which means that they implement the   
<tt class="literal">javax.accessiblity.Accessible</tt> interface and define <tt class="literal">getAccessibleContext()</tt> methods.  This method returns a <tt class="literal">javax.accessibility.AccessibleContext</tt> object that provides support to accessibility tools, such as screen readers for the vision impaired.  Each accessible component has its own specific subclass of <tt class="literal">AccessibleContext</tt>, which is typically defined as a protected inner class of the component.  
These <tt class="literal">AccessibleContext</tt> inner classes have been omitted from this chapter and from 
<a href="#jfcnut-ch-javax.swing-fig-1">Figure 23-1</a> because they contain little useful information and they detract from other, more important classes.  Practically everything you need to know about an <tt class="literal">AccessibleContext</tt> subclass can be found in the single-line inner class synopsis that appears in the containing class, the <em class="emphasis">accessible</em> flag of the containing class, and in <a href="ch22_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch22_01.htm">Chapter 22, "The javax.accessibility Package"</a>.</p>

<p>  See <a href="ch02_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch02_01.htm">Chapter 2, "Swing and AWTArchitecture"</a>, for an overview of GUI programming in
  Java, and see <a href="ch03_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch03_01.htm">Chapter 3, "Swing

Programming Topics"</a>, for detailed explanations
  of many important Swing components and capabilities.</p>
<a name="jfcnut-ch-javax.swing-fig-2"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.2302.gif" webstripperlinkwas="figs/jfcn.2302.gif"></div>
<h4 class="objtitle">Figure 23-2. Models and layout managers of the java.swing package</h4>
<a name="jfcnut-ch-javax.swing-fig-3"></a>
<div class="figure">
<img alt="figure" src="figs/jfcn.2303.gif" webstripperlinkwas="figs/jfcn.2303.gif"></div>
<h4 class="objtitle">Figure 23-3. Other classes and interfaces of the javax.swing package</h4>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2263"></a>
<p> 
  This class implements all the methods of the
  <tt class="literal">Action</tt> interface except for the crucial
  <tt class="literal">actionPerformed()</tt> method that provides the
  substance of the action.  Subclassing
  <tt class="literal">AbstractAction</tt> is one of the easiest ways to define
  <tt class="literal">Action</tt> objects for your application.  Note the one-
  and two-argument constructors.  These constructors automatically
  define name and icon attributes for the action and are simpler
  than using <tt class="literal">putValue()</tt>.</p>
<a name="INDEX-2264"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">AbstractAction</b> implements Action, Cloneable, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AbstractAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AbstractAction</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AbstractAction</b> (String <i class="parameter">name</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> Implements:Action synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> Implements:Action synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Action</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getValue</b> (String <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">putValue</b> (String <i class="parameter">key</i>, Object <i class="parameter">newValue</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEnabled</b> (boolean <i class="parameter">newValue</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ActionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Object <b class="function">clone</b> () throws CloneNotSupportedException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, Object <i class="parameter">oldValue</i>, Object <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.SwingPropertyChangeSupport <b class="function">changeSupport</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">enabled</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractAction(Action(java.awt.event.ActionListener(java.util.EventListener)),Cloneable,Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.text.TextAction</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractButton</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2265"></a>
<a name="INDEX-2266"></a>
<p> 
  This class serves as the superclass for Swing components with
  buttonlike behavior.  Because it is a general-purpose class, it
  defines a large number of properties. Like Swing labels, Swing buttons
  can display text and/or an icon, and several properties specify the
  relative positioning of the text and icon. (See
  <tt class="literal">JLabel</tt> for details on these positioning
  properties.)  Swing buttons can display different icons when in
  different states.  In addition to the default icon,
  <tt class="literal">AbstractButton</tt> has properties that specify icons to
  be displayed when the button is pressed, selected, disabled, disabled
  and selected, rolled over, and rolled over and selected.  If the
  <tt class="literal">rolloverIcon</tt> property is specified and if the
  <tt class="literal">rolloverEnabled</tt> property is
  <tt class="literal">true</tt>, the <tt class="literal">rolloverIcon</tt> is
  displayed when the mouse is over the button.</p>
<p>  By default, an <tt class="literal">AbstractButton</tt> displays a single
  line of text in a single font.  However, as of Swing 1.1.1 and Java
  1.2.2, if the <tt class="literal">text</tt> property begins with
  "&lt;html&gt;", the button text is formatted as HTML and may
  contain multiple fonts and multiple lines.</p>
<p>  A Swing button may be enabled and disabled with
  <tt class="literal">setEnabled()</tt>.  Disabled buttons are typically
  displayed with grayed-out graphics, although some other disabled icon
  can also be specified.  A mnemonic can be specified with
  <tt class="literal">setMnemonic()</tt>.  This causes the mnemonic character
  to be underlined in the button's text and allows the button to be
  operated via the keyboard.</p>
<p>  Swing buttons generate three types of events.  A
  <tt class="literal">java.awt.event.ActionEvent</tt> is generated when any
  button is pushed.  A <tt class="literal">java.awt.event.ItemEvent</tt> is
  generated when a toggle-type button is selected or deselected.  And a
  <tt class="literal">javax.swing.event.ChangeEvent</tt> is generated when
  the button's internal state changes--for example, when the mouse
  pointer enters the button or when the user arms the button by
  pressing the mouse button.</p>
<a name="INDEX-2267"></a>
<a name="INDEX-2268"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">AbstractButton</b> extends JComponent implements java.awt.ItemSelectable, SwingConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AbstractButton</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">BORDER_PAINTED_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="borderPainted"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">CONTENT_AREA_FILLED_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="contentAreaFilled"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">DISABLED_ICON_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="disabledIcon"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">DISABLED_SELECTED_ICON_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="disabledSelectedIcon"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">FOCUS_PAINTED_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="focusPainted"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="horizontalAlignment"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="horizontalTextPosition"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ICON_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="icon"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">MARGIN_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="margin"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">MNEMONIC_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="mnemonic"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">MODEL_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="model"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">PRESSED_ICON_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="pressedIcon"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ROLLOVER_ENABLED_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="rolloverEnabled"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ROLLOVER_ICON_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="rolloverIcon"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ROLLOVER_SELECTED_ICON_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="rolloverSelectedIcon"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">SELECTED_ICON_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="selectedIcon"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">TEXT_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="text"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">VERTICAL_ALIGNMENT_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="verticalAlignment"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">VERTICAL_TEXT_POSITION_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="verticalTextPosition"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ItemSelectable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ItemSelectable</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getActionCommand</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setActionCommand</b> (String <i class="parameter">actionCommand</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderPainted</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBorderPainted</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isContentAreaFilled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContentAreaFilled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getDisabledIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDisabledIcon</b> (Icon <i class="parameter">disabledIcon</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getDisabledSelectedIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDisabledSelectedIcon</b> (Icon <i class="parameter">disabledSelectedIcon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isFocusPainted</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFocusPainted</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getHorizontalAlignment</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setHorizontalAlignment</b> (int <i class="parameter">alignment</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getHorizontalTextPosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setHorizontalTextPosition</b> (int <i class="parameter">textPosition</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setIcon</b> (Icon <i class="parameter">defaultIcon</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getMargin</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMargin</b> (java.awt.Insets <i class="parameter">m</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMnemonic</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMnemonic</b> (int <i class="parameter">mnemonic</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMnemonic</b> (char <i class="parameter">mnemonic</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ButtonModel <b class="function">getModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModel</b> (ButtonModel <i class="parameter">newModel</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getPressedIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPressedIcon</b> (Icon <i class="parameter">pressedIcon</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isRolloverEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRolloverEnabled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getRolloverIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRolloverIcon</b> (Icon <i class="parameter">rolloverIcon</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getRolloverSelectedIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRolloverSelectedIcon</b> (Icon <i class="parameter">rolloverSelectedIcon</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelected</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelected</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getSelectedIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedIcon</b> (Icon <i class="parameter">selectedIcon</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i> Implements:ItemSelectable synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getText</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setText</b> (String <i class="parameter">text</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.ButtonUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.ButtonUI <i class="parameter">ui</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getVerticalAlignment</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVerticalAlignment</b> (int <i class="parameter">alignment</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getVerticalTextPosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVerticalTextPosition</b> (int <i class="parameter">textPosition</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">doClick</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">doClick</b> (int <i class="parameter">pressTime</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ItemSelectable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEnabled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">paintBorder</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">checkHorizontalKey</b> (int <i class="parameter">key</i>, String <i class="parameter">exception</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">checkVerticalKey</b> (int <i class="parameter">key</i>, String <i class="parameter">exception</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.event.ActionListener <b class="function">createActionListener</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.ChangeListener <b class="function">createChangeListener</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.event.ItemListener <b class="function">createItemListener</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireActionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireItemStateChanged</b> (java.awt.event.ItemEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireStateChanged</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">init</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.event.ActionListener <b class="function">actionListener</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.event.ChangeEvent <b class="function">changeEvent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.ChangeListener <b class="function">changeListener</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.event.ItemListener <b class="function">itemListener</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected ButtonModel <b class="function">model</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public String <b class="function">getLabel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setLabel</b> (String <i class="parameter">label</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->AbstractButton(java.awt.ItemSelectable,SwingConstants)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">JButton, JMenuItem, JToggleButton</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">ButtonGroup.{add(), remove()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractButton.ButtonChangeListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<p>  This protected inner class is a simple
  <tt class="literal">Serializable</tt> implementation of
  <tt class="literal">javax.swing.

event.ChangeListener</tt> that
  <tt class="literal">AbstractButton</tt> uses internally to receive change
  notifications from its <tt class="literal">ButtonModel</tt>.
  Application-level code never needs to use this class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">AbstractButton.ButtonChangeListener</b> implements javax.swing.event.ChangeListener, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ChangeListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">stateChanged</b> (javax.swing.event.ChangeEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AbstractListModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2269"></a>
<p> 
  This abstract class provides a partial implementation of the
  <tt class="literal">ListModel</tt> interface.  Subclassing
  <tt class="literal">AbstractListModel</tt> is usually easier than
  implementing <tt class="literal">ListModel</tt> from scratch.  Note,
  however, that the <tt class="literal">DefaultListModel</tt> class is a
  usually an adequate <tt class="literal">ListModel</tt> implementation, so
  you shouldn't need to subclass <tt class="literal">AbstractListModel</tt>
  very often.  Furthermore,
  the <tt class="literal">JList</tt> component provides convenience methods
  that often make it unnecessary to work with any kind of
  <tt class="literal">ListModel</tt> at all.</p>
<a name="INDEX-2270"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">AbstractListModel</b> implements ListModel, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AbstractListModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addListDataListener</b> (javax.swing.event.ListDataListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ListModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeListDataListener</b> (javax.swing.event.ListDataListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ListModel</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ListModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addListDataListener</b> (javax.swing.event.ListDataListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getElementAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeListDataListener</b> (javax.swing.event.ListDataListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireContentsChanged</b> (Object <i class="parameter">source</i>, int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireIntervalAdded</b> (Object <i class="parameter">source</i>, int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireIntervalRemoved</b> (Object <i class="parameter">source</i>, int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractListModel(ListModel,Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">DefaultComboBoxModel, DefaultListModel</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Action</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<a name="INDEX-2271"></a>
<p> 
  An action is a single piece of application functionality, such
  as saving a file or printing a document.  The actions performed by an
  application may be made available to the user in several different
  ways: in a pulldown or popup menu, in a toolbar, and from a keyboard
  binding, for example.</p>
<p>  The <tt class="literal">Action</tt> interface extends
  <tt class="literal">java.awt.event.ActionListener</tt> and adds the ability
  to enable or disable the action.  If an editor contains an empty
  document, its print action probably should not be enabled, for
  example.  <tt class="literal">setEnabled()</tt> specifies whether the action
  is enabled.  When an action is enabled or disabled, this change


  is broadcast by a <tt class="literal">java.beans.PropertyChangeEvent</tt>.</p>
<a name="INDEX-2272"></a>
<p>  The <tt class="literal">Action</tt> interface also defines methods that
  associate attributes with an action. The <tt class="literal">putValue()</tt>
  method maps an arbitrary attribute name to an arbitrary attribute
  value.  The <tt class="literal">getValue()</tt> method queries an attribute
  value.  The constants defined by the <tt class="literal">Action</tt>
  interface specify predefined names for commonly used attributes.
  <tt class="literal">NAME</tt> and <tt class="literal">SMALL_ICON</tt> are the most
  commonly used.
  Finally, the <tt class="literal">actionPerformed()</tt> method, inherited
  from <tt class="literal">ActionListener</tt>, is responsible for 
  performing the action.</p>
<a name="INDEX-2273"></a>
<a name="INDEX-2274"></a>
<a name="INDEX-2275"></a>
<p>
<tt class="literal">JMenu</tt>, <tt class="literal">JPopupMenu</tt>, and
  <tt class="literal">JToolBar</tt> define methods that allow
  <tt class="literal">Action</tt> objects to be added to them.  These methods
  query the action for its name and an icon that represents the
  action and use this information to present the action to the user.
  If the action is enabled, the component allows the user to invoke it.
  The <tt class="literal">JTextComponent</tt> and <tt class="literal">Keymap</tt>
  classes from the <tt class="literal">javax.swing.text</tt> package
  additionally provide techniques for mapping keystrokes to
  <tt class="literal">Action</tt> objects.</p>
<p>
<tt class="literal">AbstractAction</tt> provides a useful starting point for
  defining your own <tt class="literal">Action</tt> classes.</p>
<a name="INDEX-2276"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Action</b> extends java.awt.event.ActionListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">DEFAULT</b> ;</td><td align="right"><i> ="Default"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">LONG_DESCRIPTION</b> ;</td><td align="right"><i> ="LongDescription"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">NAME</b> ;</td><td align="right"><i> ="Name"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">SHORT_DESCRIPTION</b> ;</td><td align="right"><i> ="ShortDescription"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">SMALL_ICON</b> ;</td><td align="right"><i> ="SmallIcon"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addPropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removePropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getValue</b> (String <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">putValue</b> (String <i class="parameter">key</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setEnabled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(Action(java.awt.event.ActionListener(java.util.EventListener)))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AbstractAction</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JMenu.{add(), insert()}, JPopupMenu.{add(), insert()}, JToolBar.add(), javax.swing.text.JTextComponent.loadKeymap(), javax.swing.text.Keymap.{addActionForKeyStroke(), getKeyStrokesForAction(), setDefaultAction()}, javax.swing.text.TextAction.augmentList()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTextField.getActions(), javax.swing.text.DefaultEditorKit.getActions(), javax.swing.text.EditorKit.getActions(), javax.swing.text.JTextComponent.getActions(), javax.swing.text.Keymap.{getAction(), getBoundActions(), getDefaultAction()}, javax.swing.text.StyledEditorKit.getActions(), javax.swing.text.TextAction.augmentList(), javax.swing.text.html.HTMLEditorKit.getActions()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BorderFactory</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2277"></a>
<p> 
  The static methods of this class return various types of 
  <tt class="literal">Border</tt>
  objects.  These methods may return previously created shared objects,
  making their use more memory-efficient than creating unshared 
  <tt class="literal">Border</tt>
  objects with the <tt class="literal">new</tt> operator.  See the various
  classes of the <tt class="literal">javax.swing.border</tt> package for
  more information on the types of borders supported by Swing.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BorderFactory</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.Border <b class="function">createBevelBorder</b> (int <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.Border <b class="function">createBevelBorder</b> (int <i class="parameter">type</i>, java.awt.Color <i class="parameter">highlight</i>, java.awt.Color <i class="parameter">shadow</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.Border <b class="function">createBevelBorder</b> (int <i class="parameter">type</i>, java.awt.Color <i class="parameter">highlightOuter</i>, java.awt.Color <i class="parameter">highlightInner</i>, java.awt.Color <i class="parameter">shadowOuter</i>, java.awt.Color <i class="parameter">shadowInner</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.CompoundBorder <b class="function">createCompoundBorder</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.CompoundBorder <b class="function">createCompoundBorder</b> (javax.swing.border.Border <i class="parameter">outsideBorder</i>, javax.swing.border.Border <i class="parameter">insideBorder</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.Border <b class="function">createEmptyBorder</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.Border <b class="function">createEmptyBorder</b> (int <i class="parameter">top</i>, int <i class="parameter">left</i>, int <i class="parameter">bottom</i>, int <i class="parameter">right</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.Border <b class="function">createEtchedBorder</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.Border <b class="function">createEtchedBorder</b> (java.awt.Color <i class="parameter">highlight</i>, java.awt.Color <i class="parameter">shadow</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.Border <b class="function">createLineBorder</b> (java.awt.Color <i class="parameter">color</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.Border <b class="function">createLineBorder</b> (java.awt.Color <i class="parameter">color</i>, int <i class="parameter">thickness</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.Border <b class="function">createLoweredBevelBorder</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.MatteBorder <b class="function">createMatteBorder</b> (int <i class="parameter">top</i>, int <i class="parameter">left</i>, int <i class="parameter">bottom</i>, int <i class="parameter">right</i>, Icon <i class="parameter">tileIcon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.MatteBorder <b class="function">createMatteBorder</b> (int <i class="parameter">top</i>, int <i class="parameter">left</i>, int <i class="parameter">bottom</i>, int <i class="parameter">right</i>, java.awt.Color <i class="parameter">color</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.Border <b class="function">createRaisedBevelBorder</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.TitledBorder <b class="function">createTitledBorder</b> (javax.swing.border.Border <i class="parameter">border</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.TitledBorder <b class="function">createTitledBorder</b> (String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.TitledBorder <b class="function">createTitledBorder</b> (javax.swing.border.Border <i class="parameter">border</i>, String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.TitledBorder <b class="function">createTitledBorder</b> (javax.swing.border.Border <i class="parameter">border</i>, String <i class="parameter">title</i>, int <i class="parameter">titleJustification</i>, int <i class="parameter">titlePosition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.TitledBorder <b class="function">createTitledBorder</b> (javax.swing.border.Border <i class="parameter">border</i>, String <i class="parameter">title</i>, int <i class="parameter">titleJustification</i>, int <i class="parameter">titlePosition</i>, java.awt.Font <i class="parameter">titleFont</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.TitledBorder <b class="function">createTitledBorder</b> (javax.swing.border.Border <i class="parameter">border</i>, String <i class="parameter">title</i>, int <i class="parameter">titleJustification</i>, int <i class="parameter">titlePosition</i>, java.awt.Font <i class="parameter">titleFont</i>, java.awt.Color <i class="parameter">titleColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BoundedRangeModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2278"></a>
<p> 
  This interface defines the data model used by the
  <tt class="literal">JScrollBar</tt>, <tt class="literal">JSlider</tt>, and
  <tt class="literal">JProgressBar</tt> components.  The model is defined by
  four integer properties that obey the following relationship:</p>

<blockquote>
<pre class="programlisting">minimum &lt;= value &lt;= value+extent &lt;= maximum</pre>
</blockquote>

<p>The <tt class="literal">value</tt> property specifies the value currently displayed
  by the component.  It must be between the values specified
  by the <tt class="literal">minimum</tt> and 
  <tt class="literal">maximum</tt> properties.  The 
  <tt class="literal">extent</tt> property
  specifies the amount of data displayed.  For
  <tt class="literal">JScrollBar</tt> components, this property specifies the
  size of the scrollbar thumb, or knob.
  Note the convenience method <tt class="literal">setRangeProperties()</tt>
  that sets all properties of the model at once.</p>
<p>  When any value changes, interested listeners are notified with
  a <tt class="literal">javax.swing.event.ChangeEvent</tt>.  One additional
  property defined by this interface is
  <tt class="literal">valueIsAdjusting</tt>.  If this 
  property is <tt class="literal">true</tt>, it means that a series of rapid
  property changes (such as those caused when the user drags the
  scrollbar) is in progress.  This property is
  <tt class="literal">false</tt> for the last change in the series, so
  listeners can therefore choose to ignore transient changes that have
  this property set to <tt class="literal">true</tt>.</p>
<p>
<tt class="literal">DefaultBoundedRangeModel</tt> is an implementation of
  this interface appropriate for most uses.</p>
<a name="INDEX-2279"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">BoundedRangeModel</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getExtent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setExtent</b> (int <i class="parameter">newExtent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaximum</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setMaximum</b> (int <i class="parameter">newMaximum</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMinimum</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setMinimum</b> (int <i class="parameter">newMinimum</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getValue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setValue</b> (int <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getValueIsAdjusting</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setValueIsAdjusting</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setRangeProperties</b> (int <i class="parameter">value</i>, int <i class="parameter">extent</i>, int <i class="parameter">min</i>, int <i class="parameter">max</i>, boolean <i class="parameter">adjusting</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultBoundedRangeModel</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JProgressBar.{JProgressBar(), setModel()}, JScrollBar.setModel(), JSlider.{JSlider(), setModel()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JProgressBar.getModel(), JScrollBar.getModel(), JSlider.getModel(), JTextField.getHorizontalVisibility()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JProgressBar.model, JScrollBar.model, JSlider.sliderModel</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Box</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2280"></a>
<p> 
  This class is a container that uses the
  <tt class="literal">BoxLayout</tt> layout manager to arrange its children in
  a row or a column.  Pass one of the constants
  <tt class="literal">BoxLayout.X_AXIS</tt> or
  <tt class="literal">BoxLayout.Y_AXIS</tt> to the constructor to create a
  horizontal or vertical box or use the static methods
  <tt class="literal">createHorizontalBox()</tt> and
  <tt class="literal">createVerticalBox()</tt>.  A horizontal box attempts to
  lay out its children from left to right, one next to the other, at
  their preferred widths and tries to make each child as tall as the
  tallest child.  A vertical box does the opposite: it lays out its
  children from top to bottom, trying both to maintain the preferred height
  of each child and to make all children as wide as the widest
  child.</p>
<p>  The arrangement of children in a <tt class="literal">Box</tt> is often
  improved with the use of 
  struts and glue: invisible components that exist only to
  improve the appearance of a layout.  A horizontal strut has 0
  height and has a specified value as its minimum, preferred, and
  maximum width.  A vertical strut has 0 width and a fixed height.
  Struts are useful for inserting fixed amounts of space between
  components in a <tt class="literal">Box</tt>.  Use
  <tt class="literal">createHorizontalStrut()</tt> and
  <tt class="literal">createVerticalStrut()</tt> to create struts.</p>
<a name="INDEX-2281"></a>
<a name="INDEX-2282"></a>
<p>  Glue is a component with a preferred width or height of 0 but
  with an infinite maximum width or height.  Glue is used to specify
  where extra space in a layout should go.  For example, if you have
  three fixed-sized <tt class="literal">JButton</tt> components in a row that
  is wider than the sum of the button widths, placing glue between
  them forces them to be evenly spaced.  Use
  <tt class="literal">createHorizontalGlue()</tt> and
  <tt class="literal">createVerticalGlue()</tt> to create glue components.</p>
<a name="INDEX-2283"></a>
<a name="INDEX-2284"></a>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Box</b> extends Container implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Box</b> (int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Component <b class="function">createGlue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Box <b class="function">createHorizontalBox</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Component <b class="function">createHorizontalGlue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Component <b class="function">createHorizontalStrut</b> (int <i class="parameter">width</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Component <b class="function">createRigidArea</b> (java.awt.Dimension <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Box <b class="function">createVerticalBox</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Component <b class="function">createVerticalGlue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Component <b class="function">createVerticalStrut</b> (int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayout</b> (java.awt.LayoutManager <i class="parameter">l</i>);</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AccessibleContext <b class="function">accessibleContext</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->Box(Accessible)</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Box.{createHorizontalBox(), createVerticalBox()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Box.Filler</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2285"></a>
<p> 
  This class implements the invisible component used to create
  struts and glue for use with the <tt class="literal">Box</tt> container.  It
  allows you to create an invisible component with any specified
  minimum, preferred, and maximum sizes.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">Box.Filler</b> extends Component implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Filler</b> (java.awt.Dimension <i class="parameter">min</i>, java.awt.Dimension <i class="parameter">pref</i>, java.awt.Dimension <i class="parameter">max</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getMaximumSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getMinimumSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">changeShape</b> (java.awt.Dimension <i class="parameter">min</i>, java.awt.Dimension <i class="parameter">pref</i>, java.awt.Dimension <i class="parameter">max</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AccessibleContext <b class="function">accessibleContext</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BoxLayout</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable layout manager</i></b></font></td>
</tr>
</table>


<a name="INDEX-2286"></a>
<a name="INDEX-2287"></a>
<p> 
  This class is a layout manager that arranges its children into a
  row or a column.  It is the layout manager used by the
  <tt class="literal">Box</tt> container.  See <tt class="literal">Box</tt> for
  details.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BoxLayout</b> implements java.awt.LayoutManager2, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BoxLayout</b> (Container <i class="parameter">target</i>, int <i class="parameter">axis</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">X_AXIS</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">Y_AXIS</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addLayoutComponent</b> (String <i class="parameter">name</i>, Component <i class="parameter">comp</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">layoutContainer</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">minimumLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">preferredLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeLayoutComponent</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addLayoutComponent</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getLayoutAlignmentX</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getLayoutAlignmentY</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">invalidateLayout</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">maximumLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->BoxLayout(java.awt.LayoutManager2(java.awt.LayoutManager),Serializable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ButtonGroup</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<p> 
  This class enforces mutual exclusion (radio behavior) for a
  group of toggle buttons.  Once buttons are added to a
  <tt class="literal">ButtonGroup</tt> with the <tt class="literal">add()</tt>
  method, mutual exclusion is automatic, and no further action is
  necessary.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ButtonGroup</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ButtonGroup</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">getElements</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ButtonModel <b class="function">getSelection</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (AbstractButton <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelected</b> (ButtonModel <i class="parameter">m</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (AbstractButton <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelected</b> (ButtonModel <i class="parameter">m</i>, boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Vector <b class="function">buttons</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->ButtonGroup(Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">ButtonModel.setGroup(), DefaultButtonModel.setGroup()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DefaultButtonModel.group</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ButtonModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2288"></a>
<a name="INDEX-2289"></a>
<p> 
  This interface defines the model for Swing buttons.  This model
  consists of five <tt class="literal">boolean</tt> 
  properties that specify the current selection
  state of the button and three other properties that specify an
  optional mnemonic, <tt class="literal">ButtonGroup</tt>, and action command
  (a string passed with a <tt class="literal">java.awt.event.ActionEvent</tt>)
  for the button.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ButtonModel</b> extends java.awt.ItemSelectable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getActionCommand</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setActionCommand</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isArmed</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setArmed</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setEnabled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMnemonic</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setMnemonic</b> (int <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isPressed</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setPressed</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isRollover</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setRollover</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isSelected</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setSelected</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setGroup</b> (ButtonGroup <i class="parameter">group</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(ButtonModel(java.awt.ItemSelectable))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultButtonModel</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">AbstractButton.setModel(), ButtonGroup.{isSelected(), setSelected()}, JMenu.setModel()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">AbstractButton.getModel(), ButtonGroup.getSelection()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">AbstractButton.model</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CellEditor</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2290"></a>
<p> 
  This interface defines general methods that must be implemented
  by any cell editor object.  <tt class="literal">isCellEditable()</tt> should
  return <tt class="literal">true</tt> if the cell is editable and if the
  specified event is an appropriate event to trigger an edit. (For
  example, some programs might require a double-click to edit a cell.)
  <tt class="literal">shouldSelectCell()</tt> should return
  <tt class="literal">true</tt> if the given event should cause the cell to
  become selected or <tt class="literal">false</tt> otherwise.  However, this
  is only a minor secondary purpose of the method.  Despite its name,
  the primary purpose of <tt class="literal">shouldSelectCell()</tt> is to
  cause the cell editor to begin editing the cell.  The editor can use
  the specified event to set the initial state (e.g., cursor position) of
  the editor.</p>
<a name="INDEX-2291"></a>
<a name="INDEX-2292"></a>
<p>
<tt class="literal">getCellEditorValue()</tt> returns the value being
  edited.  <tt class="literal">cancelCellEditing()</tt> cancels an edit.
  <tt class="literal">stopCellEditing()</tt> instructs the editor to stop
  editing and accept a partially edited value.  An editor may return
  <tt class="literal">false</tt> if it cannot accept the current value
  (because the partial value is not valid, for example).  If the editor
  stops or cancels editing itself, it sends a
  <tt class="literal">javax.swing.event.ChangeEvent</tt> to any registered
  <tt class="literal">javax.swing.event.CellEditorListener</tt> objects.</p>
<a name="INDEX-2293"></a>
<a name="INDEX-2294"></a>
<a name="INDEX-2295"></a>
<p>
<tt class="literal">javax.swing.table.TableCellEditor</tt> and
  <tt class="literal">javax.swing.tree.TreeCellEditor</tt> are table- and
  tree-specific cell editor interfaces;
  <tt class="literal">DefaultCellEditor</tt> is an implementation of both
  those interfaces.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">CellEditor</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addCellEditorListener</b> (javax.swing.event.CellEditorListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeCellEditorListener</b> (javax.swing.event.CellEditorListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">cancelCellEditing</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getCellEditorValue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isCellEditable</b> (java.util.EventObject <i class="parameter">anEvent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">shouldSelectCell</b> (java.util.EventObject <i class="parameter">anEvent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">stopCellEditing</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">javax.swing.table.TableCellEditor, javax.swing.tree.TreeCellEditor</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CellRendererPane</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2296"></a>
<p> 
  This class is used by Swing components that rely on cell renderer
  interfaces, such as <tt class="literal">ListCellRenderer</tt>,
  <tt class="literal">javax.swing.table.TableCellRenderer</tt>, and
  <tt class="literal">javax.swing.tree.TreeCellRenderer</tt>.  The methods
  of this class are used to paint a single cell renderer component at
  various specified locations within a container.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">CellRendererPane</b> extends Container implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">CellRendererPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleCellRendererPane</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintComponent</b> (java.awt.Graphics <i class="parameter">g</i>, Component <i class="parameter">c</i>, Container <i class="parameter">p</i>, java.awt.Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintComponent</b> (java.awt.Graphics <i class="parameter">g</i>, Component <i class="parameter">c</i>, Container <i class="parameter">p</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">w</i>, int <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintComponent</b> (java.awt.Graphics <i class="parameter">g</i>, Component <i class="parameter">c</i>, Container <i class="parameter">p</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">w</i>, int <i class="parameter">h</i>, boolean <i class="parameter">shouldValidate</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleCellRendererPane</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">invalidate</b> ();</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">update</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">addImpl</b> (Component <i class="parameter">x</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AccessibleContext <b class="function">accessibleContext</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->CellRendererPane(Accessible)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ComboBoxEditor</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2297"></a>
<p>  This interface defines the methods that must be implemented by an
  object that wishes to serve as the editor object for a
  <tt class="literal">JComboBox</tt>
  component.  It is typically implemented as part of a pluggable
  look-and-feel and is not normally used by application programmers.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ComboBoxEditor</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Component <b class="function">getEditorComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getItem</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">selectAll</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setItem</b> (Object <i class="parameter">anObject</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JComboBox.{configureEditor(), setEditor()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JComboBox.getEditor()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JComboBox.editor</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ComboBoxModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2298"></a>
<p> 
  This interface defines the basic model used by the
  <tt class="literal">JComboBox</tt> component.  The
  <tt class="literal">JComboBox</tt> allows the user
  to select a value from a list or type a value directly.  Therefore,
  <tt class="literal">ComboBoxModel</tt> extends <tt class="literal">ListModel</tt>
  to add support for a selected item, in addition to the list of items
  that <tt class="literal">ListModel</tt> already supports.
  See also <tt class="literal">MutableComboBoxModel</tt> and
  <tt class="literal">DefaultComboBoxModel</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ComboBoxModel</b> extends ListModel {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getSelectedItem</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setSelectedItem</b> (Object <i class="parameter">anItem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(ComboBoxModel(ListModel))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">MutableComboBoxModel</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JComboBox.{JComboBox(), setModel()}, JComboBox.KeySelectionManager.selectionForKey()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JComboBox.getModel()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JComboBox.dataModel</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DebugGraphics</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2299"></a>
<p>  This subclass of <tt class="literal">java.awt.Graphics</tt> reimplements
  most of the methods of its superclass to facilitate debugging of
  drawing operations.  Instances of this class are rarely used directly;
  programs can enable graphics debugging by calling
  <tt class="literal">setDebugGraphicsOptions()</tt> on any Swing component.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DebugGraphics</b> extends java.awt.Graphics {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DebugGraphics</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DebugGraphics</b> (java.awt.Graphics <i class="parameter">graphics</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DebugGraphics</b> (java.awt.Graphics <i class="parameter">graphics</i>, JComponent <i class="parameter">component</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BUFFERED_OPTION</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">FLASH_OPTION</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LOG_OPTION</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NONE_OPTION</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Color <b class="function">flashColor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">flashCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">flashTime</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.io.PrintStream <b class="function">logStream</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setFlashColor</b> (java.awt.Color <i class="parameter">flashColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setFlashCount</b> (int <i class="parameter">flashCount</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setFlashTime</b> (int <i class="parameter">flashTime</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setLogStream</b> (java.io.PrintStream <i class="parameter">stream</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Shape <b class="function">getClip</b> ();</td><td align="right"><i> Overrides:Graphics</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setClip</b> (java.awt.Shape <i class="parameter">clip</i>);</td><td align="right"><i> Overrides:Graphics</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setClip</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i> Overrides:Graphics</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getClipBounds</b> ();</td><td align="right"><i> Overrides:Graphics</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getColor</b> ();</td><td align="right"><i> Overrides:Graphics</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setColor</b> (java.awt.Color <i class="parameter">aColor</i>);</td><td align="right"><i> Overrides:Graphics</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDebugOptions</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDebugOptions</b> (int <i class="parameter">options</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDrawingBuffer</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Font <b class="function">getFont</b> ();</td><td align="right"><i> Overrides:Graphics</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFont</b> (java.awt.Font <i class="parameter">aFont</i>);</td><td align="right"><i> Overrides:Graphics</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.FontMetrics <b class="function">getFontMetrics</b> ();</td><td align="right"><i> Overrides:Graphics</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.FontMetrics <b class="function">getFontMetrics</b> (java.awt.Font <i class="parameter">f</i>);</td><td align="right"><i> Overrides:Graphics</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Graphics</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clearRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clipRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">copyArea</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, int <i class="parameter">destX</i>, int <i class="parameter">destY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Graphics <b class="function">create</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Graphics <b class="function">create</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">dispose</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">draw3DRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, boolean <i class="parameter">raised</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawArc</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, int <i class="parameter">startAngle</i>, int <i class="parameter">arcAngle</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawBytes</b> (byte[ ] <i class="parameter">data</i>, int <i class="parameter">offset</i>, int <i class="parameter">length</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawChars</b> (char[ ] <i class="parameter">data</i>, int <i class="parameter">offset</i>, int <i class="parameter">length</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">drawImage</b> (java.awt.Image <i class="parameter">img</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">drawImage</b> (java.awt.Image <i class="parameter">img</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, java.awt.Color <i class="parameter">bgcolor</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">drawImage</b> (java.awt.Image <i class="parameter">img</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">drawImage</b> (java.awt.Image <i class="parameter">img</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, java.awt.Color <i class="parameter">bgcolor</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">drawImage</b> (java.awt.Image <i class="parameter">img</i>, int <i class="parameter">dx1</i>, int <i class="parameter">dy1</i>, int <i class="parameter">dx2</i>, int <i class="parameter">dy2</i>, int <i class="parameter">sx1</i>, int <i class="parameter">sy1</i>, int <i class="parameter">sx2</i>, int <i class="parameter">sy2</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">drawImage</b> (java.awt.Image <i class="parameter">img</i>, int <i class="parameter">dx1</i>, int <i class="parameter">dy1</i>, int <i class="parameter">dx2</i>, int <i class="parameter">dy2</i>, int <i class="parameter">sx1</i>, int <i class="parameter">sy1</i>, int <i class="parameter">sx2</i>, int <i class="parameter">sy2</i>, java.awt.Color <i class="parameter">bgcolor</i>, java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawLine</b> (int <i class="parameter">x1</i>, int <i class="parameter">y1</i>, int <i class="parameter">x2</i>, int <i class="parameter">y2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawOval</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawPolygon</b> (int[ ] <i class="parameter">xPoints</i>, int[ ] <i class="parameter">yPoints</i>, int <i class="parameter">nPoints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawPolyline</b> (int[ ] <i class="parameter">xPoints</i>, int[ ] <i class="parameter">yPoints</i>, int <i class="parameter">nPoints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawRoundRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, int <i class="parameter">arcWidth</i>, int <i class="parameter">arcHeight</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawString</b> (java.text.AttributedCharacterIterator <i class="parameter">iterator</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">drawString</b> (String <i class="parameter">aString</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fill3DRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, boolean <i class="parameter">raised</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fillArc</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, int <i class="parameter">startAngle</i>, int <i class="parameter">arcAngle</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fillOval</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fillPolygon</b> (int[ ] <i class="parameter">xPoints</i>, int[ ] <i class="parameter">yPoints</i>, int <i class="parameter">nPoints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fillRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fillRoundRect</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, int <i class="parameter">arcWidth</i>, int <i class="parameter">arcHeight</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPaintMode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setXORMode</b> (java.awt.Color <i class="parameter">aColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">translate</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.awt.Graphics-->DebugGraphics</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultBoundedRangeModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2300"></a>
<p>  This class is an implementation of the
  <tt class="literal">BoundedRangeModel</tt> appropriate for most uses.  See
  <tt class="literal">BoundedRangeModel</tt> for details.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultBoundedRangeModel</b> implements BoundedRangeModel, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultBoundedRangeModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultBoundedRangeModel</b> (int <i class="parameter">value</i>, int <i class="parameter">extent</i>, int <i class="parameter">min</i>, int <i class="parameter">max</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:BoundedRangeModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:BoundedRangeModel</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing BoundedRangeModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getExtent</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaximum</b> ();</td><td align="right"><i> default:100</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinimum</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getValue</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getValueIsAdjusting</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setExtent</b> (int <i class="parameter">n</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMaximum</b> (int <i class="parameter">n</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMinimum</b> (int <i class="parameter">n</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRangeProperties</b> (int <i class="parameter">newValue</i>, int <i class="parameter">newExtent</i>, int <i class="parameter">newMin</i>, int <i class="parameter">newMax</i>, boolean <i class="parameter">adjusting</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValue</b> (int <i class="parameter">n</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValueIsAdjusting</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireStateChanged</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.event.ChangeEvent <b class="function">changeEvent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DefaultBoundedRangeModel(BoundedRangeModel,Serializable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultButtonModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2301"></a>
<p>  This class is a straightforward implementation of the
  <tt class="literal">ButtonModel</tt> interface that is suitable for most
  uses.  It is the default model for <tt class="literal">JButton</tt> and
  <tt class="literal">JMenuItem</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultButtonModel</b> implements ButtonModel, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultButtonModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ARMED</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ENABLED</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PRESSED</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ROLLOVER</b> ;</td><td align="right"><i> =16</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SELECTED</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ButtonModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ButtonModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ButtonModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ButtonModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ButtonModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ButtonModel</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ButtonModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getActionCommand</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMnemonic</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isArmed</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEnabled</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isPressed</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isRollover</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelected</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setActionCommand</b> (String <i class="parameter">actionCommand</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setArmed</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEnabled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGroup</b> (ButtonGroup <i class="parameter">group</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMnemonic</b> (int <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPressed</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRollover</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelected</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ItemSelectable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i> constant default:null</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireActionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireItemStateChanged</b> (java.awt.event.ItemEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireStateChanged</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">actionCommand</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.event.ChangeEvent <b class="function">changeEvent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected ButtonGroup <b class="function">group</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">mnemonic</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">stateMask</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DefaultButtonModel(ButtonModel(java.awt.ItemSelectable),Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">JToggleButton.ToggleButtonModel</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultCellEditor</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2302"></a>
<p> 
  This class implements both the
  <tt class="literal">javax.swing.table.TableCellEditor</tt> and the
  <tt class="literal">javax.swing.tree.TreeCellEditor</tt> interfaces.  It
  is the default editor class used by <tt class="literal">JTable</tt>.
  Instances of this class can be created to
  use a specified <tt class="literal">JTextField</tt>,
  <tt class="literal">JCheckBox</tt>, or <tt class="literal">JComboBox</tt> as the
  editor component.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultCellEditor</b> implements Serializable, javax.swing.table.TableCellEditor, javax.swing.tree.TreeCellEditor {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultCellEditor</b> (JComboBox <i class="parameter">comboBox</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultCellEditor</b> (JTextField <i class="parameter">textField</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultCellEditor</b> (JCheckBox <i class="parameter">checkBox</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addCellEditorListener</b> (javax.swing.event.CellEditorListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:CellEditor</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeCellEditorListener</b> (javax.swing.event.CellEditorListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:CellEditor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getClickCountToStart</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setClickCountToStart</b> (int <i class="parameter">count</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing CellEditor</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addCellEditorListener</b> (javax.swing.event.CellEditorListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">cancelCellEditing</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getCellEditorValue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isCellEditable</b> (java.util.EventObject <i class="parameter">anEvent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeCellEditorListener</b> (javax.swing.event.CellEditorListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">shouldSelectCell</b> (java.util.EventObject <i class="parameter">anEvent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">stopCellEditing</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TableCellEditor</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getTableCellEditorComponent</b> (JTable <i class="parameter">table</i>, Object <i class="parameter">value</i>, boolean <i class="parameter">isSelected</i>, int <i class="parameter">row</i>, int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TreeCellEditor</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getTreeCellEditorComponent</b> (JTree <i class="parameter">tree</i>, Object <i class="parameter">value</i>, boolean <i class="parameter">isSelected</i>, boolean <i class="parameter">expanded</i>, boolean <i class="parameter">leaf</i>, int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireEditingCanceled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireEditingStopped</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.event.ChangeEvent <b class="function">changeEvent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">clickCountToStart</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected DefaultCellEditor.EditorDelegate <b class="function">delegate</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JComponent <b class="function">editorComponent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DefaultCellEditor(Serializable,javax.swing.table.TableCellEditor(CellEditor),javax.swing.tree.TreeCellEditor(CellEditor))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultCellEditor.EditorDelegate</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2303"></a>
<p> 
  This <tt class="literal">DefaultCellEditor</tt> class can use a
  <tt class="literal">JTextField</tt>, <tt class="literal">JComboBox</tt>, or
  <tt class="literal">JCheckBox</tt> as the cell editor component.  This
  protected inner class is used internally by
  <tt class="literal">DefaultCellEditor</tt> to encapsulate the differences
  between these three editor components.
  Application-level code never needs to use this class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">DefaultCellEditor.EditorDelegate</b> implements java.awt.event.ActionListener, java.awt.event.ItemListener, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">EditorDelegate</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getCellEditorValue</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">cancelCellEditing</b> ();</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isCellEditable</b> (java.util.EventObject <i class="parameter">anEvent</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValue</b> (Object <i class="parameter">x</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">startCellEditing</b> (java.util.EventObject <i class="parameter">anEvent</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">stopCellEditing</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ActionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ItemListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">itemStateChanged</b> (java.awt.event.ItemEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Object <b class="function">value</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DefaultCellEditor.delegate</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultComboBoxModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2304"></a>
<p> 
  This <tt class="literal">MutableComboBoxModel</tt> implementation is the
  default model object used by the <tt class="literal">JComboBox</tt>
  component.  In addition to the methods of the
  <tt class="literal">MutableComboBoxModel</tt>,
  <tt class="literal">ComboBoxModel</tt>, and <tt class="literal">ListModel</tt>
  interfaces, <tt class="literal">DefaultComboBoxModel</tt> also implements
  methods to remove all elements from the list and to find a
  specified element in the list.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultComboBoxModel</b> extends AbstractListModel implements MutableComboBoxModel, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultComboBoxModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultComboBoxModel</b> (Object[ ] <i class="parameter">items</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultComboBoxModel</b> (java.util.Vector <i class="parameter">v</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIndexOf</b> (Object <i class="parameter">anObject</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAllElements</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ComboBoxModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getSelectedItem</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedItem</b> (Object <i class="parameter">anObject</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ListModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getElementAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSize</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MutableComboBoxModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addElement</b> (Object <i class="parameter">anObject</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertElementAt</b> (Object <i class="parameter">anObject</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeElement</b> (Object <i class="parameter">anObject</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeElementAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractListModel(ListModel,Serializable)-->DefaultComboBoxModel(MutableComboBoxModel(ComboBoxModel(ListModel)),Serializable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultDesktopManager</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<p> 
  This class is a simple default implementation of the
  <tt class="literal">DesktopManager</tt> interface.  It can be used as a
  starting point for pluggable look-and-feel
  <tt class="literal">DesktopManager</tt> implementations.  It is also used to
  manage <tt class="literal">JInternalFrame</tt> components that are not
  within a <tt class="literal">JDesktopPane</tt>.  Appliations typically do not need to use this class.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultDesktopManager</b> implements DesktopManager, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultDesktopManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing DesktopManager</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">activateFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">beginDraggingFrame</b> (JComponent <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">beginResizingFrame</b> (JComponent <i class="parameter">f</i>, int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">closeFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">deactivateFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">deiconifyFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">dragFrame</b> (JComponent <i class="parameter">f</i>, int <i class="parameter">newX</i>, int <i class="parameter">newY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">endDraggingFrame</b> (JComponent <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">endResizingFrame</b> (JComponent <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">iconifyFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">maximizeFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">minimizeFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">openFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">resizeFrame</b> (JComponent <i class="parameter">f</i>, int <i class="parameter">newX</i>, int <i class="parameter">newY</i>, int <i class="parameter">newWidth</i>, int <i class="parameter">newHeight</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBoundsForFrame</b> (JComponent <i class="parameter">f</i>, int <i class="parameter">newX</i>, int <i class="parameter">newY</i>, int <i class="parameter">newWidth</i>, int <i class="parameter">newHeight</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Rectangle <b class="function">getBoundsForIconOf</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Rectangle <b class="function">getPreviousBounds</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">removeIconFor</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setPreviousBounds</b> (JInternalFrame <i class="parameter">f</i>, java.awt.Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setWasIcon</b> (JInternalFrame <i class="parameter">f</i>, Boolean <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">wasIcon</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DefaultDesktopManager(DesktopManager,Serializable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultFocusManager</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2305"></a>
<a name="INDEX-2306"></a>
<p>  This class is the default <tt class="literal">FocusManager</tt> used by
  Swing components.  It uses the <b class="emphasis-bold">Tab</b> and
  <b class="emphasis-bold">Shift-Tab</b> keys to move focus forward
  and backward.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultFocusManager</b> extends FocusManager {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultFocusManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">compareTabOrder</b> (Component <i class="parameter">a</i>, Component <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponentAfter</b> (Container <i class="parameter">aContainer</i>, Component <i class="parameter">aComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponentBefore</b> (Container <i class="parameter">aContainer</i>, Component <i class="parameter">aComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getFirstComponent</b> (Container <i class="parameter">aContainer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getLastComponent</b> (Container <i class="parameter">aContainer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding FocusManager</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">focusNextComponent</b> (Component <i class="parameter">aComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">focusPreviousComponent</b> (Component <i class="parameter">aComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">processKeyEvent</b> (Component <i class="parameter">focusedComponent</i>, java.awt.event.KeyEvent <i class="parameter">anEvent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->FocusManager-->DefaultFocusManager</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultListCellRenderer</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2307"></a>
<p>  This class is the default <tt class="literal">ListCellRenderer</tt> used by
  the <tt class="literal">JList</tt> component to render the items of the
  list.  This class extends <tt class="literal">JLabel</tt> and uses
  <tt class="literal">JLabel</tt> features to render list items.  Since
  <tt class="literal">JList</tt> uses this class by default, you should not
  have to instantiate or use it directly.</p>
<a name="INDEX-2308"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultListCellRenderer</b> extends JLabel implements ListCellRenderer, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultListCellRenderer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ListCellRenderer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getListCellRendererComponent</b> (JList <i class="parameter">list</i>, Object <i class="parameter">value</i>, int <i class="parameter">index</i>, boolean <i class="parameter">isSelected</i>, boolean <i class="parameter">cellHasFocus</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Class Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static javax.swing.border.Border <b class="function">noFocusBorder</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JLabel(Accessible,SwingConstants)-->DefaultListCellRenderer(ListCellRenderer,Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">DefaultListCellRenderer.UIResource</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultListCellRenderer.UIResource</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2309"></a>
<p>  This class is a trivial wrapper around
  <tt class="literal">DefaultListCellRenderer</tt>.  It implements the empty
  <tt class="literal">javax.swing.plaf.UIResource</tt> marker interface in
  order to distinguish cell renderers supplied by a look-and-feel from
  cell renderers supplied by the user.
  Like all classes that implement <tt class="literal">UIResource</tt>, this
  class is used by implementors of custom look-and-feels.  Applications
  do not need to use this class.</p>
<a name="INDEX-2310"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">DefaultListCellRenderer.UIResource</b> extends DefaultListCellRenderer implements javax.swing.plaf.UIResource {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">UIResource</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultListModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2311"></a>
<p>  This class is a <tt class="literal">ListModel</tt> implementation that is based on
  <tt class="literal">AbstractListModel</tt>, with the addition of
  <tt class="literal">java.util.Vector</tt> methods for modifying the values
  contained in the list.  This class is suitable for most uses of the
  <tt class="literal">JList</tt> component, but you may on occasion want to
  implement a custom <tt class="literal">ListModel</tt>, probably by
  subclassing <tt class="literal">AbstractListModel</tt>.</p>
<a name="INDEX-2312"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultListModel</b> extends AbstractListModel {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultListModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSize</b> ();</td><td align="right"><i> Overrides:AbstractListModel default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSize</b> (int <i class="parameter">newSize</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (int <i class="parameter">index</i>, Object <i class="parameter">element</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addElement</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">capacity</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clear</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Object <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">copyInto</b> (Object[ ] <i class="parameter">anArray</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">elementAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">elements</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">ensureCapacity</b> (int <i class="parameter">minCapacity</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">firstElement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">get</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">indexOf</b> (Object <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">indexOf</b> (Object <i class="parameter">elem</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertElementAt</b> (Object <i class="parameter">obj</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">lastElement</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">lastIndexOf</b> (Object <i class="parameter">elem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">lastIndexOf</b> (Object <i class="parameter">elem</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">remove</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAllElements</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">removeElement</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeElementAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeRange</b> (int <i class="parameter">fromIndex</i>, int <i class="parameter">toIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">set</b> (int <i class="parameter">index</i>, Object <i class="parameter">element</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setElementAt</b> (Object <i class="parameter">obj</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">size</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">toArray</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">trimToSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractListModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getElementAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->AbstractListModel(ListModel,Serializable)-->DefaultListModel</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultListSelectionModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2313"></a>
<a name="INDEX-2314"></a>
<p>  This class is the default implementation of the
  <tt class="literal">ListSelectionModel</tt> interface.  It is used by
  <tt class="literal">JList</tt> and <tt class="literal">JTable</tt> components.
  Typical applications do not need to explicitly use this class or
  the <tt class="literal">ListSelectionModel</tt> interface.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultListSelectionModel</b> implements Cloneable, ListSelectionModel, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultListSelectionModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addListSelectionListener</b> (javax.swing.event.ListSelectionListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ListSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeListSelectionListener</b> (javax.swing.event.ListSelectionListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:ListSelectionModel</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLeadAnchorNotificationEnabled</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLeadAnchorNotificationEnabled</b> (boolean <i class="parameter">flag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ListSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addListSelectionListener</b> (javax.swing.event.ListSelectionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clearSelection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAnchorSelectionIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLeadSelectionIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaxSelectionIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinSelectionIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectionMode</b> ();</td><td align="right"><i> default:2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getValueIsAdjusting</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertIndexInterval</b> (int <i class="parameter">index</i>, int <i class="parameter">length</i>, boolean <i class="parameter">before</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelectedIndex</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelectionEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeIndexInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeListSelectionListener</b> (javax.swing.event.ListSelectionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAnchorSelectionIndex</b> (int <i class="parameter">anchorIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLeadSelectionIndex</b> (int <i class="parameter">leadIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionMode</b> (int <i class="parameter">selectionMode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValueIsAdjusting</b> (boolean <i class="parameter">isAdjusting</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> () throws CloneNotSupportedException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireValueChanged</b> (boolean <i class="parameter">isAdjusting</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireValueChanged</b> (int <i class="parameter">firstIndex</i>, int <i class="parameter">lastIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireValueChanged</b> (int <i class="parameter">firstIndex</i>, int <i class="parameter">lastIndex</i>, boolean <i class="parameter">isAdjusting</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">leadAnchorNotificationEnabled</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DefaultListSelectionModel(Cloneable,ListSelectionModel,Serializable)</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.tree.DefaultTreeSelectionModel.listSelectionModel</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DefaultSingleSelectionModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2315"></a>
<p>  This class is the default implementation of the
  <tt class="literal">SingleSelectionModel</tt> interface.  It is used by
  <tt class="literal">JMenuBar</tt>, <tt class="literal">JPopupMenu</tt>, and
  <tt class="literal">JTabbedPane</tt>. </p>
<a name="INDEX-2316"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DefaultSingleSelectionModel</b> implements Serializable, SingleSelectionModel {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DefaultSingleSelectionModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:SingleSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:SingleSelectionModel</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing SingleSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clearSelection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectedIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelected</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedIndex</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireStateChanged</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.event.ChangeEvent <b class="function">changeEvent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DefaultSingleSelectionModel(Serializable,SingleSelectionModel)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DesktopManager</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2317"></a>
<p>  This interface defines the methods that must be defined by a pluggable
  look-and-feel to manage <tt class="literal">JInternalFrame</tt> windows
  within a <tt class="literal">JDesktopPane</tt> container.  Application
  programmers do not need to use this class.</p>
<a name="INDEX-2318"></a>
<a name="INDEX-2319"></a>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">DesktopManager</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">activateFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">beginDraggingFrame</b> (JComponent <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">beginResizingFrame</b> (JComponent <i class="parameter">f</i>, int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">closeFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">deactivateFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">deiconifyFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">dragFrame</b> (JComponent <i class="parameter">f</i>, int <i class="parameter">newX</i>, int <i class="parameter">newY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">endDraggingFrame</b> (JComponent <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">endResizingFrame</b> (JComponent <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">iconifyFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">maximizeFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">minimizeFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">openFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">resizeFrame</b> (JComponent <i class="parameter">f</i>, int <i class="parameter">newX</i>, int <i class="parameter">newY</i>, int <i class="parameter">newWidth</i>, int <i class="parameter">newHeight</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBoundsForFrame</b> (JComponent <i class="parameter">f</i>, int <i class="parameter">newX</i>, int <i class="parameter">newY</i>, int <i class="parameter">newWidth</i>, int <i class="parameter">newHeight</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultDesktopManager</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JDesktopPane.setDesktopManager()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JDesktopPane.getDesktopManager()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FocusManager</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2320"></a>
<p> 
  This abstract class defines three instance methods that must be
  implemented by an object that wants to manage keyboard focus for an
  application.  It also defines static methods that manipulate the
  installed focus manager. Applications that mix AWT components with
  Swing components should call
  <tt class="literal">disableSwingFocusManager()</tt> to disable Swing's focus
  management and rely on the AWT focus manager.  Call
  <tt class="literal">setCurrentManager()</tt> to replace the current focus
  manager with a custom manager of your own.</p>
<a name="INDEX-2321"></a>
<a name="INDEX-2322"></a>
<a name="INDEX-2323"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">FocusManager</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FocusManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">FOCUS_MANAGER_CLASS_PROPERTY</b> ;</td><td align="right"><i> ="FocusManagerClassName"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">disableSwingFocusManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static FocusManager <b class="function">getCurrentManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isFocusManagerEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setCurrentManager</b> (FocusManager <i class="parameter">aFocusManager</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">focusNextComponent</b> (Component <i class="parameter">aComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">focusPreviousComponent</b> (Component <i class="parameter">aComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">processKeyEvent</b> (Component <i class="parameter">focusedComponent</i>, java.awt.event.KeyEvent <i class="parameter">anEvent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">DefaultFocusManager</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">FocusManager.setCurrentManager()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">FocusManager.getCurrentManager()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>GrayFilter</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>cloneable</i></b></font></td>
</tr>
</table>


<a name="INDEX-2324"></a>
<a name="INDEX-2325"></a>
<p>  This class is a <tt class="literal">java.awt.image.ImageFilter</tt> that
  converts a color image to a grayscale image, suitable for use as an icon that
  represents a disabled action or an unavailable option.  In addition to the
  usual <tt class="literal">ImageFilter</tt> methods,
  <tt class="literal">GrayFilter</tt> provides the static
  <tt class="literal">createDisabledImage()</tt> method, which is all that most
  applications ever need to use.  The
  <tt class="literal">AbstractButton</tt> and <tt class="literal">JLabel</tt>
  classes use <tt class="literal">GrayFilter</tt> to automatically create a
  grayscale version of an image, if no disabled image is explicitly provided.</p>
<a name="INDEX-2326"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">GrayFilter</b> extends java.awt.image.RGBImageFilter {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">GrayFilter</b> (boolean <i class="parameter">b</i>, int <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Image <b class="function">createDisabledImage</b> (java.awt.Image <i class="parameter">i</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding RGBImageFilter</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">filterRGB</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">rgb</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.awt.image.ImageFilter(Cloneable,java.awt.image.ImageConsumer)-->java.awt.image.RGBImageFilter-->GrayFilter</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Icon</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2327"></a>
<a name="INDEX-2328"></a>
<p>  This interface defines the Swing notion of an icon: an object that
  knows how to draw a graphic of a fixed width and height at a fixed
  location.  Icons are most commonly implemented with images; see
  <tt class="literal">ImageIcon</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Icon</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getIconHeight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getIconWidth</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">paintIcon</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">ImageIcon, javax.swing.plaf.IconUIResource</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JInternalFrame.frameIcon, JOptionPane.icon, javax.swing.border.MatteBorder.tileIcon, javax.swing.tree.DefaultTreeCellEditor.editingIcon, javax.swing.tree.DefaultTreeCellRenderer.{closedIcon, leafIcon, openIcon}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ImageIcon</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2329"></a>
<p>  This class is an implementation of the <tt class="literal">Icon</tt>
  interface that uses an <tt class="literal">Image</tt> to draw the icon.  The
  various constructors allow the image to be specified as an
  <tt class="literal">Image</tt> object, as a URL, as a file name, or as an
  array of binary data.  Every <tt class="literal">ImageIcon</tt> can have a
  short textual description that may be used for accessibility (e.g., 
  to describe the icon to a blind user).</p>
<a name="INDEX-2330"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ImageIcon</b> implements Icon, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ImageIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ImageIcon</b> (java.awt.Image <i class="parameter">image</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ImageIcon</b> (String <i class="parameter">filename</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ImageIcon</b> (java.net.URL <i class="parameter">location</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ImageIcon</b> (byte[ ] <i class="parameter">imageData</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ImageIcon</b> (String <i class="parameter">filename</i>, String <i class="parameter">description</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ImageIcon</b> (java.net.URL <i class="parameter">location</i>, String <i class="parameter">description</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ImageIcon</b> (byte[ ] <i class="parameter">imageData</i>, String <i class="parameter">description</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ImageIcon</b> (java.awt.Image <i class="parameter">image</i>, String <i class="parameter">description</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final Component <b class="function">component</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final java.awt.MediaTracker <b class="function">tracker</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getDescription</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDescription</b> (String <i class="parameter">description</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIconHeight</b> ();</td><td align="right"><i> Implements:Icon default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIconWidth</b> ();</td><td align="right"><i> Implements:Icon default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Image <b class="function">getImage</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setImage</b> (java.awt.Image <i class="parameter">image</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getImageLoadStatus</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.image.ImageObserver <b class="function">getImageObserver</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setImageObserver</b> (java.awt.image.ImageObserver <i class="parameter">observer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Icon</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIconHeight</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIconWidth</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintIcon</b> (Component <i class="parameter">c</i>, java.awt.Graphics <i class="parameter">g</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">loadImage</b> (java.awt.Image <i class="parameter">image</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->ImageIcon(Icon,Serializable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JApplet</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component bean container</i></b></font></td>
</tr>
</table>
<a name="INDEX-2331"></a>
<a name="INDEX-2332"></a>
<p> 
  This class is the Swing version of its superclass,
  <tt class="literal">java.applet.Applet</tt>.  It creates a
  <tt class="literal">JRootPane</tt> as its sole child, and, like
  <tt class="literal">JFrame</tt>, <tt class="literal">JDialog</tt>, and similar
  classes, it implements <tt class="literal">RootPaneContainer</tt>.  Calling
  <tt class="literal">add()</tt> or <tt class="literal">setLayout()</tt> on a
  <tt class="literal">JApplet</tt> raises an exception.  Instead, call
  <tt class="literal">getContentPane()</tt> to obtain a reference to an
  internal container on which you can call <tt class="literal">add()</tt> and
  <tt class="literal">setLayout()</tt>.  The default layout manager for
  this content pane is a <tt class="literal">BorderLayout</tt>.  Because
  <tt class="literal">JApplet</tt> is a <tt class="literal">RootPaneContainer</tt>,
  it can display a Swing menubar.  Use <tt class="literal">setJMenuBar()</tt>
  and <tt class="literal">getJMenuBar()</tt>.</p>
<a name="INDEX-2333"></a>
<a name="INDEX-2334"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JApplet</b> extends java.applet.Applet implements Accessible, RootPaneContainer {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JApplet</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJApplet</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getContentPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContentPane</b> (Container <i class="parameter">contentPane</i>);</td><td align="right"><i> Implements:RootPaneContainer hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getGlassPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGlassPane</b> (Component <i class="parameter">glassPane</i>);</td><td align="right"><i> Implements:RootPaneContainer hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuBar <b class="function">getJMenuBar</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setJMenuBar</b> (JMenuBar <i class="parameter">menuBar</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JLayeredPane <b class="function">getLayeredPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayeredPane</b> (JLayeredPane <i class="parameter">layeredPane</i>);</td><td align="right"><i> Implements:RootPaneContainer hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayout</b> (java.awt.LayoutManager <i class="parameter">manager</i>);</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JRootPane <b class="function">getRootPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJApplet</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing RootPaneContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getContentPane</b> ();</td><td align="right"><i> default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getGlassPane</b> ();</td><td align="right"><i> default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JLayeredPane <b class="function">getLayeredPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JRootPane <b class="function">getRootPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContentPane</b> (Container <i class="parameter">contentPane</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGlassPane</b> (Component <i class="parameter">glassPane</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayeredPane</b> (JLayeredPane <i class="parameter">layeredPane</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">update</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">addImpl</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JRootPane <b class="function">createRootPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isRootPaneCheckingEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setRootPane</b> (JRootPane <i class="parameter">root</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setRootPaneCheckingEnabled</b> (boolean <i class="parameter">enabled</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AccessibleContext <b class="function">accessibleContext</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JRootPane <b class="function">rootPane</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">rootPaneCheckingEnabled</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->java.awt.Panel-->java.applet.Applet-->JApplet(Accessible,RootPaneContainer)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JButton</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(action,value) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2335"></a>
<a name="INDEX-2336"></a>
<a name="INDEX-2337"></a>
<a name="INDEX-2338"></a>
<p>  This class implements a push button.  The constructors allow a textual
  label and/or an icon to be specified for the button.
  <tt class="literal">isDefaultButton()</tt> checks to see if the button is
  the default button registered with the
  <tt class="literal">setDefaultButton()</tt> method of 
  <tt class="literal">JRootPane</tt>.  A
  <tt class="literal">JButton</tt> generates 
  a <tt class="literal">java.awt.event.ActionEvent</tt> when clicked.  Most of
  the interesting properties and methods of <tt class="literal">JButton</tt>
  are implemented by <tt class="literal">AbstractButton</tt>.
  The default <tt class="literal">JButton</tt> model is
  <tt class="literal">DefaultButtonModel</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JButton</b> extends AbstractButton implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JButton</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JButton</b> (Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JButton</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JButton</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJButton expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDefaultButton</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDefaultCapable</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDefaultCapable</b> (boolean <i class="parameter">defaultCapable</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"ButtonUI" expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJButton expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding AbstractButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->AbstractButton(java.awt.ItemSelectable,SwingConstants)-->JButton(Accessible)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JRootPane.setDefaultButton(), JToolBar.createActionChangeListener()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JRootPane.getDefaultButton(), JToolBar.add()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JRootPane.defaultButton</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JCheckBox</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(action,value) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2339"></a>
<a name="INDEX-2340"></a>
<a name="INDEX-2341"></a>
<a name="INDEX-2342"></a>
<p> 
  This class implements a check button: a toggle button with
  default graphics that indicate that the button does not
  have mutually exclusive behavior.  Because
  <tt class="literal">JCheckBox</tt> supplies its own default and selected
  icons, you typically do not use the constructors that take
  <tt class="literal">Icon</tt> arguments.  The initial selection state of a
  <tt class="literal">JCheckBox</tt> can be specified in the call to the
  constructor. The state can also be set 
  with <tt class="literal">setSelected()</tt> and
  queried with <tt class="literal">isSelected()</tt>.  Use
  <tt class="literal">JRadioButton</tt> and <tt class="literal">ButtonGroup</tt>
  instead of <tt class="literal">JCheckBox</tt> if you want to display a set
  of mutually exclusive choices.
  The default <tt class="literal">JCheckBox</tt> model is
  <tt class="literal">JToggleButton.ToggleButtonModel</tt>.
  Note that <tt class="literal">java.awt.Checkbox</tt> is spelled with a
  lowercase b, while <tt class="literal">JCheckBox</tt> has an uppercase B.</p>
<a name="INDEX-2343"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JCheckBox</b> extends JToggleButton implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JCheckBox</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JCheckBox</b> (Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JCheckBox</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JCheckBox</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JCheckBox</b> (Icon <i class="parameter">icon</i>, boolean <i class="parameter">selected</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JCheckBox</b> (String <i class="parameter">text</i>, boolean <i class="parameter">selected</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JCheckBox</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>, boolean <i class="parameter">selected</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJCheckBox expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JToggleButton default:"CheckBoxUI" expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJCheckBox expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JToggleButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JToggleButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->AbstractButton(java.awt.ItemSelectable,SwingConstants)-->JToggleButton(Accessible)-->JCheckBox(Accessible)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DefaultCellEditor.DefaultCellEditor()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JCheckBoxMenuItem</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(action,value) swing component</i></b></font></td>
</tr>
</table>


<a name="INDEX-2344"></a>
<p>  This class implements a check button that appears within a pulldown or
  popup menu.  Its use is similar to that of
  <tt class="literal">JCheckBox</tt>. Use <tt class="literal">isSelected()</tt> to
  query the selection state of the menu 
  item and <tt class="literal">setSelected()</tt> to select or deselect
  the item.  For 
  menu items with mutually-exclusive selection behavior, use
  <tt class="literal">JRadioButtonMenuItem</tt> instead.
  The default <tt class="literal">JCheckBoxMenuItem</tt> model is
  <tt class="literal">JToggleButton.ToggleButtonModel</tt>.</p>
<a name="INDEX-2345"></a>
<a name="INDEX-2346"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JCheckBoxMenuItem</b> extends JMenuItem implements Accessible, SwingConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JCheckBoxMenuItem</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JCheckBoxMenuItem</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JCheckBoxMenuItem</b> (Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JCheckBoxMenuItem</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JCheckBoxMenuItem</b> (String <i class="parameter">text</i>, boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JCheckBoxMenuItem</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>, boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJCheckBoxMenuItem</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i> Overrides:AbstractButton synchronized default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getState</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setState</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> synchronized hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JMenuItem</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJCheckBoxMenuItem</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JMenuItem</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">requestFocus</b> ();</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->AbstractButton(java.awt.ItemSelectable,SwingConstants)-->JMenuItem(Accessible,MenuElement)-->JCheckBoxMenuItem(Accessible,SwingConstants)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JColorChooser</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2347"></a>
<a name="INDEX-2348"></a>
<p>  This component allows the user to select a color.  The easiest way to
  use it is to call the static <tt class="literal">showDialog()</tt> method,
  specifying a parent <tt class="literal">Component</tt> for the dialog, a
  title, and an initial default color.  The method 
  creates a <tt class="literal">JColorChooser</tt> in a modal
  <tt class="literal">JDialog</tt> and blocks until the user dismisses the
  dialog.  If the user dismisses the dialog with the <b class="emphasis-bold">OK</b> button, the method returns the selected color.  If
  the user dismisses the dialog with the <b class="emphasis-bold">Cancel</b> button, or in any other way,
  <tt class="literal">showDialog()</tt> returns <tt class="literal">null</tt>.</p>
<a name="INDEX-2349"></a>
<a name="INDEX-2350"></a>
<p>  If you need more control over the color selection dialog, you can call
  <tt class="literal">createDialog()</tt>.  This static method creates a
  <tt class="literal">JDialog</tt> that contains the
  <tt class="literal">JColorChooser</tt> component you specify.  It allows you
  to specify <tt class="literal">java.awt.event.ActionListener</tt> objects to
  respond to the <b class="emphasis-bold">OK</b> and <b class="emphasis-bold">Cancel</b> buttons.  It does not automatically
  display the dialog for you, nor does it wait for the user to make a
  selection.</p>
<p>  You can also create and manipulate a <tt class="literal">JColorChooser</tt>
  on your own, placing it in any dialog or other container.  You can
  register a <tt class="literal">java.beans.PropertyChangeListener</tt> object
  (with the inherited <tt class="literal">addPropertyChangeListener()</tt>
  method) to receive notification when the <tt class="literal">color</tt>
  property changes.</p>
<p>
<tt class="literal">JColorChooser</tt> is highly customizable.  You can
  specify how colors are selected by specifying a custom
  subclass of
  <tt class="literal">javax.swing.colorchooser.AbstractColorChooserPanel</tt>
  to <tt class="literal">addChooserPanel()</tt> or
  <tt class="literal">setChooserPanels()</tt>. 
  And you can customize the way that colors are previewed by
  specifying an appropriate component to
  <tt class="literal">setPreviewPanel()</tt>.
  The default <tt class="literal">JColorChooser</tt> model is a 
  <tt class="literal">javax.swing.colorchooser.DefaultColorSelectionModel</tt>.</p>
<a name="INDEX-2351"></a>
<a name="INDEX-2352"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JColorChooser</b> extends JComponent implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JColorChooser</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JColorChooser</b> (java.awt.Color <i class="parameter">initialColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JColorChooser</b> (javax.swing.colorchooser.ColorSelectionModel <i class="parameter">model</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">CHOOSER_PANELS_PROPERTY</b> ;</td><td align="right"><i> ="chooserPanels"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">PREVIEW_PANEL_PROPERTY</b> ;</td><td align="right"><i> ="previewPanel"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">SELECTION_MODEL_PROPERTY</b> ;</td><td align="right"><i> ="selectionModel"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static JDialog <b class="function">createDialog</b> (Component <i class="parameter">c</i>, String <i class="parameter">title</i>, boolean <i class="parameter">modal</i>, JColorChooser <i class="parameter">chooserPane</i>, java.awt.event.ActionListener <i class="parameter">okListener</i>, java.awt.event.ActionListener <i class="parameter">cancelListener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Color <b class="function">showDialog</b> (Component <i class="parameter">component</i>, String <i class="parameter">title</i>, java.awt.Color <i class="parameter">initialColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJColorChooser</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.colorchooser.AbstractColorChooserPanel[ ] <b class="function">getChooserPanels</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setChooserPanels</b> (javax.swing.colorchooser.AbstractColorChooserPanel[ ] <i class="parameter">panels</i>);</td><td align="right"><i> bound hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getColor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setColor</b> (int <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setColor</b> (java.awt.Color <i class="parameter">color</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setColor</b> (int <i class="parameter">r</i>, int <i class="parameter">g</i>, int <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JComponent <b class="function">getPreviewPanel</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPreviewPanel</b> (JComponent <i class="parameter">preview</i>);</td><td align="right"><i> bound hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.colorchooser.ColorSelectionModel <b class="function">getSelectionModel</b> ();</td><td align="right"><i> default:DefaultColorSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionModel</b> (javax.swing.colorchooser.ColorSelectionModel <i class="parameter">newModel</i>);</td><td align="right"><i> bound hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.ColorChooserUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.ColorChooserUI <i class="parameter">ui</i>);</td><td align="right"><i> bound hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"ColorChooserUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChooserPanel</b> (javax.swing.colorchooser.AbstractColorChooserPanel <i class="parameter">panel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.colorchooser.AbstractColorChooserPanel <b class="function">removeChooserPanel</b> (javax.swing.colorchooser.AbstractColorChooserPanel <i class="parameter">panel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJColorChooser</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AccessibleContext <b class="function">accessibleContext</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JColorChooser(Accessible)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JColorChooser.createDialog(), javax.swing.colorchooser.AbstractColorChooserPanel.{installChooserPanel(), uninstallChooserPanel()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JComboBox</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(action) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2353"></a>
<a name="INDEX-2354"></a>
<p> 
  This class implements a combo box: a combination of a popup
  list of selectable items and an item editor that
  displays the selected value and, optionally, allows the user to
  enter an item that does not appear on the list.  The editor is
  usually a text field, but a <tt class="literal">JComboBox</tt> can be
  configured to use another component as its
  <tt class="literal">ComboBoxEditor</tt>.</p>
<p>  Typically, you create a <tt class="literal">JComboBox</tt> by passing
  a <tt class="literal">Vector</tt> or array of objects to a constructor.  
  Alternatively, you
  can create an empty <tt class="literal">JComboBox</tt> and add items to it
  with <tt class="literal">addItem()</tt>.  You can set and query the
  selection with <tt class="literal">setSelectedItem()</tt>,
  <tt class="literal">setSelectedIndex()</tt>,
  <tt class="literal">getSelectedItem()</tt>, and
  <tt class="literal">getSelectedIndex()</tt>.  The
  <tt class="literal">JComboBox</tt> generates a
  <tt class="literal">java.awt.event.ActionEvent</tt> when the selection
  changes. 
  The default <tt class="literal">JComboBox</tt> model is a private
  implementation of the <tt class="literal">ComboBoxModel</tt> interface.
  If you want to implement keyboard shortcuts for a
  <tt class="literal">JComboBox</tt>, implement the
  <tt class="literal">JComboBox.KeySelectionManager</tt> interface and pass
  an instance to the <tt class="literal">setKeySelectionManager()</tt>
  method. </p>
<a name="INDEX-2355"></a>
<a name="INDEX-2356"></a>
<a name="INDEX-2357"></a>
<a name="INDEX-2358"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JComboBox</b> extends JComponent implements Accessible, java.awt.event.ActionListener, java.awt.ItemSelectable, javax.swing.event.ListDataListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JComboBox</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JComboBox</b> (java.util.Vector <i class="parameter">items</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JComboBox</b> (ComboBoxModel <i class="parameter">aModel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JComboBox</b> (Object[ ] <i class="parameter">items</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">aListener</i>);</td><td align="right"><i> Implements:ItemSelectable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">aListener</i>);</td><td align="right"><i> Implements:ItemSelectable</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJComboBox</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getActionCommand</b> ();</td><td align="right"><i> default:"comboBoxChanged"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setActionCommand</b> (String <i class="parameter">aCommand</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEditable</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEditable</b> (boolean <i class="parameter">aFlag</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ComboBoxEditor <b class="function">getEditor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEditor</b> (ComboBoxEditor <i class="parameter">anEditor</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isFocusTraversable</b> ();</td><td align="right"><i> Overrides:JComponent default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getItemCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JComboBox.KeySelectionManager <b class="function">getKeySelectionManager</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setKeySelectionManager</b> (JComboBox.KeySelectionManager <i class="parameter">aManager</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLightWeightPopupEnabled</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLightWeightPopupEnabled</b> (boolean <i class="parameter">aFlag</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaximumRowCount</b> ();</td><td align="right"><i> default:8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMaximumRowCount</b> (int <i class="parameter">count</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ComboBoxModel <b class="function">getModel</b> ();</td><td align="right"><i> default:DefaultComboBoxModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModel</b> (ComboBoxModel <i class="parameter">aModel</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isPopupVisible</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPopupVisible</b> (boolean <i class="parameter">v</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ListCellRenderer <b class="function">getRenderer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRenderer</b> (ListCellRenderer <i class="parameter">aRenderer</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectedIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedIndex</b> (int <i class="parameter">anIndex</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getSelectedItem</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedItem</b> (Object <i class="parameter">anObject</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i> Implements:ItemSelectable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.ComboBoxUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.ComboBoxUI <i class="parameter">ui</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"ComboBoxUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addItem</b> (Object <i class="parameter">anObject</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">configureEditor</b> (ComboBoxEditor <i class="parameter">anEditor</i>, Object <i class="parameter">anItem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getItemAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">hidePopup</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertItemAt</b> (Object <i class="parameter">anObject</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAllItems</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeItem</b> (Object <i class="parameter">anObject</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeItemAt</b> (int <i class="parameter">anIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">selectWithKeyChar</b> (char <i class="parameter">keyChar</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">showPopup</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJComboBox</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ActionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ItemSelectable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addItemListener</b> (java.awt.event.ItemListener <i class="parameter">aListener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getSelectedObjects</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeItemListener</b> (java.awt.event.ItemListener <i class="parameter">aListener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ListDataListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">contentsChanged</b> (javax.swing.event.ListDataEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">intervalAdded</b> (javax.swing.event.ListDataEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">intervalRemoved</b> (javax.swing.event.ListDataEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">processKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEnabled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JComboBox.KeySelectionManager <b class="function">createDefaultKeySelectionManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireActionEvent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireItemStateChanged</b> (java.awt.event.ItemEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">installAncestorListener</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">selectedItemChanged</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">actionCommand</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected ComboBoxModel <b class="function">dataModel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected ComboBoxEditor <b class="function">editor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isEditable</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JComboBox.KeySelectionManager <b class="function">keySelectionManager</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">lightWeightPopupEnabled</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">maximumRowCount</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected ListCellRenderer <b class="function">renderer</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Object <b class="function">selectedItemReminder</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JComboBox(Accessible,java.awt.event.ActionListener(java.util.EventListener),java.awt.ItemSelectable,javax.swing.event.ListDataListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DefaultCellEditor.DefaultCellEditor(), javax.swing.plaf.ComboBoxUI.{isFocusTraversable(), isPopupVisible(), setPopupVisible()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JComboBox.KeySelectionManager</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2359"></a>
<p> 
  This interface defines the method that must be implemented to
  bind characters to items in a <tt class="literal">JComboBox</tt>.  Given a
  character, <tt class="literal">selectionForKey()</tt> should return the
  index of the item that should be selected or -1 if the character does
  not correspond to an item in the list.</p>
<a name="INDEX-2360"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static interface <b class="classname">JComboBox.KeySelectionManager</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">selectionForKey</b> (char <i class="parameter">aKey</i>, ComboBoxModel <i class="parameter">aModel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JComboBox.setKeySelectionManager()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JComboBox.{createDefaultKeySelectionManager(), getKeySelectionManager()}</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JComboBox.keySelectionManager</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JComponent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2361"></a>
<p>
<tt class="literal">JComponent</tt> is the root of the Swing component
  hierarchy.  It inherits the properties and methods of
  <tt class="literal">java.awt.Component</tt> and
  <tt class="literal">java.awt.Container</tt>, including such commonly used
  properties as <tt class="literal">foreground</tt>,
  <tt class="literal">background</tt>, <tt class="literal">font</tt>,
  <tt class="literal">cursor</tt>, <tt class="literal">enabled</tt>, and
  <tt class="literal">visible</tt>.  </p>
<p>  In addition to these inherited properties, <tt class="literal">JComponent</tt>
  defines a number of new properties that are commonly used.  The
  <tt class="literal">border</tt> property specifies a
  <tt class="literal">Border</tt> object that displays a border (or a blank
  space) around the component.  <tt class="literal">doubleBuffered</tt>
  specifies whether the <tt class="literal">JComponent</tt> should
  automatically use double-buffering to reduce flickering during
  redraws.  <tt class="literal">opaque</tt> specifies whether the component
  draws its background or lets its parent' background show through.
  <tt class="literal">toolTipText</tt> specifies the text to appear in a
  tooltip when the mouse pointer lingers over the component.</p>
<p>  In addition to the standard get/set property accessor methods,
  <tt class="literal">JComponent</tt> also defines
  <tt class="literal">getClientProperty()</tt> and 
  <tt class="literal">putClientProperty()</tt>.  In effect, every
  <tt class="literal">JComponent</tt> maintains a hashtable that maps arbitrary
  property names to values.  You can use this to associate arbitrary
  data with any Swing component.  It is also occasionally used to
  specify properties that are specific to certain look-and-feels.</p>
<a name="INDEX-2362"></a>
<a name="INDEX-2363"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">JComponent</b> extends Container implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">TOOL_TIP_TEXT_KEY</b> ;</td><td align="right"><i> ="ToolTipText"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">UNDEFINED_CONDITION</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WHEN_ANCESTOR_OF_FOCUSED_COMPONENT</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WHEN_FOCUSED</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WHEN_IN_FOCUSED_WINDOW</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isLightweightComponent</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addAncestorListener</b> (javax.swing.event.AncestorListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAncestorListener</b> (javax.swing.event.AncestorListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> Overrides:Component synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> Overrides:Component synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addVetoableChangeListener</b> (java.beans.VetoableChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeVetoableChangeListener</b> (java.beans.VetoableChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAlignmentX</b> ();</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAlignmentX</b> (float <i class="parameter">alignmentX</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getAlignmentY</b> ();</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAlignmentY</b> (float <i class="parameter">alignmentY</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getAutoscrolls</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAutoscrolls</b> (boolean <i class="parameter">autoscrolls</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBackground</b> (java.awt.Color <i class="parameter">bg</i>);</td><td align="right"><i> Overrides:Component bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.border.Border <b class="function">getBorder</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBorder</b> (javax.swing.border.Border <i class="parameter">border</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDebugGraphicsOptions</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDebugGraphicsOptions</b> (int <i class="parameter">debugOptions</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDoubleBuffered</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDoubleBuffered</b> (boolean <i class="parameter">aFlag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEnabled</b> (boolean <i class="parameter">enabled</i>);</td><td align="right"><i> Overrides:Component bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isFocusCycleRoot</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isFocusTraversable</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setForeground</b> (java.awt.Color <i class="parameter">fg</i>);</td><td align="right"><i> Overrides:Component bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Graphics <b class="function">getGraphics</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getHeight</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getInsets</b> ();</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getInsets</b> (java.awt.Insets <i class="parameter">insets</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isManagingFocus</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getMaximumSize</b> ();</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMaximumSize</b> (java.awt.Dimension <i class="parameter">maximumSize</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getMinimumSize</b> ();</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMinimumSize</b> (java.awt.Dimension <i class="parameter">minimumSize</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getNextFocusableComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setNextFocusableComponent</b> (Component <i class="parameter">aComponent</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isOpaque</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setOpaque</b> (boolean <i class="parameter">isOpaque</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isOptimizedDrawingEnabled</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isPaintingTile</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPreferredSize</b> (java.awt.Dimension <i class="parameter">preferredSize</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public KeyStroke[ ] <b class="function">getRegisteredKeyStrokes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isRequestFocusEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRequestFocusEnabled</b> (boolean <i class="parameter">aFlag</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JRootPane <b class="function">getRootPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getToolTipText</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getToolTipText</b> (java.awt.event.MouseEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setToolTipText</b> (String <i class="parameter">text</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getTopLevelAncestor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isValidateRoot</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVisible</b> (boolean <i class="parameter">aFlag</i>);</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getVisibleRect</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getWidth</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getX</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getY</b> ();</td><td align="right"><i> Overrides:Component</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">computeVisibleRect</b> (java.awt.Rectangle <i class="parameter">visibleRect</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JToolTip <b class="function">createToolTip</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, long <i class="parameter">oldValue</i>, long <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, int <i class="parameter">oldValue</i>, int <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, boolean <i class="parameter">oldValue</i>, boolean <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, short <i class="parameter">oldValue</i>, short <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, char <i class="parameter">oldValue</i>, char <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, byte <i class="parameter">oldValue</i>, byte <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, float <i class="parameter">oldValue</i>, float <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, double <i class="parameter">oldValue</i>, double <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.event.ActionListener <b class="function">getActionForKeyStroke</b> (KeyStroke <i class="parameter">aKeyStroke</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final Object <b class="function">getClientProperty</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getConditionForKeyStroke</b> (KeyStroke <i class="parameter">aKeyStroke</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Point <b class="function">getToolTipLocation</b> (java.awt.event.MouseEvent <i class="parameter">event</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">grabFocus</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintImmediately</b> (java.awt.Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintImmediately</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">w</i>, int <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final void <b class="function">putClientProperty</b> (Object <i class="parameter">key</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">registerKeyboardAction</b> (java.awt.event.ActionListener <i class="parameter">anAction</i>, KeyStroke <i class="parameter">aKeyStroke</i>, int <i class="parameter">aCondition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">registerKeyboardAction</b> (java.awt.event.ActionListener <i class="parameter">anAction</i>, String <i class="parameter">aCommand</i>, KeyStroke <i class="parameter">aKeyStroke</i>, int <i class="parameter">aCondition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">repaint</b> (java.awt.Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">requestDefaultFocus</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">resetKeyboardActions</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">revalidate</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">scrollRectToVisible</b> (java.awt.Rectangle <i class="parameter">aRect</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFont</b> (java.awt.Font <i class="parameter">font</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">unregisterKeyboardAction</b> (KeyStroke <i class="parameter">aKeyStroke</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">update</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (String <i class="parameter">propertyName</i>, java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getBounds</b> (java.awt.Rectangle <i class="parameter">rv</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Point <b class="function">getLocation</b> (java.awt.Point <i class="parameter">rv</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getSize</b> (java.awt.Dimension <i class="parameter">rv</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">hasFocus</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (String <i class="parameter">propertyName</i>, java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">repaint</b> (long <i class="parameter">tm</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">requestFocus</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">reshape</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">w</i>, int <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, Object <i class="parameter">oldValue</i>, Object <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processFocusEvent</b> (java.awt.event.FocusEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processMouseMotionEvent</b> (java.awt.event.MouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireVetoableChange</b> (String <i class="parameter">propertyName</i>, Object <i class="parameter">oldValue</i>, Object <i class="parameter">newValue</i>) throws java.beans.PropertyVetoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Graphics <b class="function">getComponentGraphics</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">paintBorder</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">paintChildren</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">paintComponent</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processComponentKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setUI</b> (javax.swing.plaf.ComponentUI <i class="parameter">newUI</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AccessibleContext <b class="function">accessibleContext</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.plaf.ComponentUI <b class="function">ui</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span>Too many classes to list.</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JColorChooser.getPreviewPanel(), JFileChooser.getAccessory(), JToolTip.getComponent(), javax.swing.colorchooser.ColorChooserComponentFactory.getPreviewPanel(), javax.swing.event.AncestorEvent.getComponent()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DefaultCellEditor.editorComponent</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JComponent.AccessibleJComponent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible context</i></b></font></td>
</tr>
</table>
<a name="INDEX-2364"></a>
<p> 
  This class provides default accessibility support for Swing
  components.  It is typically subclassed by component developers;
  application programmers never need to use it.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">JComponent.AccessibleJComponent</b> extends AccessibleContext implements AccessibleComponent, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">AccessibleJComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addFocusListener</b> (java.awt.event.FocusListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:AccessibleComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeFocusListener</b> (java.awt.event.FocusListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:AccessibleComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> Overrides:AccessibleContext</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> Overrides:AccessibleContext</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing AccessibleComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addFocusListener</b> (java.awt.event.FocusListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (java.awt.Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Accessible <b class="function">getAccessibleAt</b> (java.awt.Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getBackground</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Cursor <b class="function">getCursor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Font <b class="function">getFont</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.FontMetrics <b class="function">getFontMetrics</b> (java.awt.Font <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getForeground</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Point <b class="function">getLocation</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Point <b class="function">getLocationOnScreen</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isFocusTraversable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isShowing</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isVisible</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeFocusListener</b> (java.awt.event.FocusListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">requestFocus</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBackground</b> (java.awt.Color <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBounds</b> (java.awt.Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCursor</b> (java.awt.Cursor <i class="parameter">cursor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEnabled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFont</b> (java.awt.Font <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setForeground</b> (java.awt.Color <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLocation</b> (java.awt.Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSize</b> (java.awt.Dimension <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVisible</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AccessibleContext</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Accessible <b class="function">getAccessibleChild</b> (int <i class="parameter">i</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAccessibleChildrenCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleComponent <b class="function">getAccessibleComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getAccessibleDescription</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAccessibleIndexInParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getAccessibleName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Accessible <b class="function">getAccessibleParent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleRole <b class="function">getAccessibleRole</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleStateSet <b class="function">getAccessibleStateSet</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Locale <b class="function">getLocale</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">getBorderTitle</b> (javax.swing.border.Border <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.event.ContainerListener <b class="function">accessibleContainerHandler</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span>Too many classes to list.</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JDesktopPane</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<p> 
  This class is a container for <tt class="literal">JInternalFrame</tt>
  windows.  It provides window management functionality appropriate
  for the currently installed look-and-feel.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JDesktopPane</b> extends JLayeredPane implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JDesktopPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJDesktopPane</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JInternalFrame[ ] <b class="function">getAllFrames</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public DesktopManager <b class="function">getDesktopManager</b> ();</td><td align="right"><i> default:DefaultDesktopManager</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDesktopManager</b> (DesktopManager <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isOpaque</b> ();</td><td align="right"><i> Overrides:JComponent constant default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.DesktopPaneUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.DesktopPaneUI <i class="parameter">ui</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"DesktopPaneUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JInternalFrame[ ] <b class="function">getAllFramesInLayer</b> (int <i class="parameter">layer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJDesktopPane</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JLayeredPane</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JLayeredPane(Accessible)-->JDesktopPane(Accessible)</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JInternalFrame.getDesktopPane(), JInternalFrame.JDesktopIcon.getDesktopPane(), JOptionPane.getDesktopPaneForComponent()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JDialog</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component bean container</i></b></font></td>
</tr>
</table>
<a name="INDEX-2365"></a>
<a name="INDEX-2366"></a>
<p> 
  This class is used to display Swing dialog boxes.  Every
  <tt class="literal">JDialog</tt> component has an automatically created
  <tt class="literal">JRootPane</tt> as its single child.  Components must not
  be added directly to the <tt class="literal">JDialog</tt> component.
  Instead, they should be added to the container returned by
  <tt class="literal">getContentPane()</tt> method.  The default layout
  manager of this content pane is
  <tt class="literal">java.awt.BorderLayout</tt>.  Unlike its
  <tt class="literal">java.awt.Dialog</tt> superclass,
  <tt class="literal">JDialog</tt> can display a menubar.  Specify one with
  <tt class="literal">setJMenuBar()</tt>.
  <tt class="literal">setDefaultCloseOperation()</tt> specifies how the
  <tt class="literal">JDialog</tt> should behave when the user attempts to
  close it.  The argument should be one of the constants defined by the
  <tt class="literal">WindowConstants</tt> interface.  The default is
  <tt class="literal">HIDE_ON_CLOSE</tt>. 
  <tt class="literal">JDialog</tt> uses a native window.  Use
  <tt class="literal">JInternalFrame</tt> for lightweight dialogs.</p>
<a name="INDEX-2367"></a>
<a name="INDEX-2368"></a>
<a name="INDEX-2369"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JDialog</b> extends java.awt.Dialog implements Accessible, RootPaneContainer, WindowConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JDialog</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JDialog</b> (java.awt.Dialog <i class="parameter">owner</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JDialog</b> (java.awt.Frame <i class="parameter">owner</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JDialog</b> (java.awt.Dialog <i class="parameter">owner</i>, String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JDialog</b> (java.awt.Frame <i class="parameter">owner</i>, boolean <i class="parameter">modal</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JDialog</b> (java.awt.Frame <i class="parameter">owner</i>, String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JDialog</b> (java.awt.Dialog <i class="parameter">owner</i>, boolean <i class="parameter">modal</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JDialog</b> (java.awt.Frame <i class="parameter">owner</i>, String <i class="parameter">title</i>, boolean <i class="parameter">modal</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JDialog</b> (java.awt.Dialog <i class="parameter">owner</i>, String <i class="parameter">title</i>, boolean <i class="parameter">modal</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJDialog</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getContentPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContentPane</b> (Container <i class="parameter">contentPane</i>);</td><td align="right"><i> Implements:RootPaneContainer hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDefaultCloseOperation</b> ();</td><td align="right"><i> default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDefaultCloseOperation</b> (int <i class="parameter">operation</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getGlassPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGlassPane</b> (Component <i class="parameter">glassPane</i>);</td><td align="right"><i> Implements:RootPaneContainer hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuBar <b class="function">getJMenuBar</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setJMenuBar</b> (JMenuBar <i class="parameter">menu</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JLayeredPane <b class="function">getLayeredPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayeredPane</b> (JLayeredPane <i class="parameter">layeredPane</i>);</td><td align="right"><i> Implements:RootPaneContainer hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayout</b> (java.awt.LayoutManager <i class="parameter">manager</i>);</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JRootPane <b class="function">getRootPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLocationRelativeTo</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJDialog</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing RootPaneContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getContentPane</b> ();</td><td align="right"><i> default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getGlassPane</b> ();</td><td align="right"><i> default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JLayeredPane <b class="function">getLayeredPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JRootPane <b class="function">getRootPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContentPane</b> (Container <i class="parameter">contentPane</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGlassPane</b> (Component <i class="parameter">glassPane</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayeredPane</b> (JLayeredPane <i class="parameter">layeredPane</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Dialog</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Window</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processWindowEvent</b> (java.awt.event.WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">update</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">addImpl</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JRootPane <b class="function">createRootPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">dialogInit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isRootPaneCheckingEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setRootPane</b> (JRootPane <i class="parameter">root</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setRootPaneCheckingEnabled</b> (boolean <i class="parameter">enabled</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AccessibleContext <b class="function">accessibleContext</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JRootPane <b class="function">rootPane</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">rootPaneCheckingEnabled</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->java.awt.Window-->java.awt.Dialog-->JDialog(Accessible,RootPaneContainer,WindowConstants)</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JColorChooser.createDialog(), JOptionPane.createDialog()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JEditorPane</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(text,hypertext) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2370"></a>
<a name="INDEX-2371"></a>
<p>  This class is a subclass of
  <tt class="literal">javax.swing.text.JTextComponent</tt> that can be 
  easily configured to display and edit different formatted-text 
  content types using a
  <tt class="literal">javax.swing.text.EditorKit</tt> object.  To configure
  a <tt class="literal">JEditorPane</tt>, call
  <tt class="literal">setEditorKit()</tt> to specify an appropriate editor
  kit for the desired content type.  Alternatively, use the static
  <tt class="literal">registerEditorKitForContentType()</tt> to register a
  mapping between content types and their corresponding editor kits and
  then call <tt class="literal">setContentType()</tt>.  With such a mapping in
  place, you may also use <tt class="literal">setPage()</tt> to specify a URL
  to be displayed.  The <tt class="literal">JEditorPane</tt> determines
  the content type of the URL, installs an appropriate
  <tt class="literal">EditorKit</tt>, and loads the contents of the URL into
  the <tt class="literal">JEditorPane</tt>.
  Swing comes with two predefined <tt class="literal">EditorKit</tt>
  subclasses: <tt class="literal">javax.swing.text.html.HTMLEditorKit</tt>
  and <tt class="literal">javax.swing.text.rtf.RTFEditorKit</tt>.</p>
<a name="INDEX-2372"></a>
<a name="INDEX-2373"></a>
<a name="INDEX-2374"></a>
<a name="INDEX-2375"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JEditorPane</b> extends javax.swing.text.JTextComponent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JEditorPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JEditorPane</b> (String <i class="parameter">url</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JEditorPane</b> (java.net.URL <i class="parameter">initialPage</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JEditorPane</b> (String <i class="parameter">type</i>, String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.text.EditorKit <b class="function">createEditorKitForContentType</b> (String <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">registerEditorKitForContentType</b> (String <i class="parameter">type</i>, String <i class="parameter">classname</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">registerEditorKitForContentType</b> (String <i class="parameter">type</i>, String <i class="parameter">classname</i>, ClassLoader <i class="parameter">loader</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addHyperlinkListener</b> (javax.swing.event.HyperlinkListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeHyperlinkListener</b> (javax.swing.event.HyperlinkListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Overrides:JTextComponent default:AccessibleJEditorPane</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final String <b class="function">getContentType</b> ();</td><td align="right"><i> default:"text/plain"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final void <b class="function">setContentType</b> (String <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final javax.swing.text.EditorKit <b class="function">getEditorKit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEditorKit</b> (javax.swing.text.EditorKit <i class="parameter">kit</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isManagingFocus</b> ();</td><td align="right"><i> Overrides:JComponent constant default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.net.URL <b class="function">getPage</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPage</b> (java.net.URL <i class="parameter">page</i>) throws java.io.IOException;</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPage</b> (String <i class="parameter">url</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportHeight</b> ();</td><td align="right"><i> Overrides:JTextComponent default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportWidth</b> ();</td><td align="right"><i> Overrides:JTextComponent default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getText</b> ();</td><td align="right"><i> Overrides:JTextComponent default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setText</b> (String <i class="parameter">t</i>);</td><td align="right"><i> Overrides:JTextComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"EditorPaneUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fireHyperlinkUpdate</b> (javax.swing.event.HyperlinkEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.EditorKit <b class="function">getEditorKitForContentType</b> (String <i class="parameter">type</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">read</b> (java.io.InputStream <i class="parameter">in</i>, Object <i class="parameter">desc</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEditorKitForContentType</b> (String <i class="parameter">type</i>, javax.swing.text.EditorKit <i class="parameter">k</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JTextComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">replaceSelection</b> (String <i class="parameter">content</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JTextComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processComponentKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.text.EditorKit <b class="function">createDefaultEditorKit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.io.InputStream <b class="function">getStream</b> (java.net.URL <i class="parameter">page</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">scrollToReference</b> (String <i class="parameter">reference</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->javax.swing.text.JTextComponent(Accessible,Scrollable)-->JEditorPane</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">JTextPane</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.text.EditorKit.{deinstall(), install()}, javax.swing.text.StyledEditorKit.{deinstall(), install()}, javax.swing.text.StyledEditorKit.StyledTextAction.{getStyledDocument(), getStyledEditorKit(), setCharacterAttributes(), setParagraphAttributes()}, javax.swing.text.html.HTMLEditorKit.{deinstall(), install()}, javax.swing.text.html.HTMLEditorKit.HTMLTextAction.{getHTMLDocument(), getHTMLEditorKit()}, javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.{insertAtBoundry(), insertHTML()}, javax.swing.text.html.HTMLEditorKit.LinkController.activateLink()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">javax.swing.text.StyledEditorKit.StyledTextAction.getEditor()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JFileChooser</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2376"></a>
<a name="INDEX-2377"></a>
<a name="INDEX-2378"></a>
<p> 
  This component allows the user to select a file.  After creating a
  <tt class="literal">JFileChooser</tt> component, and setting any desired
  properties, the easiest way to use it is to call
  <tt class="literal">showOpenDialog()</tt> or
  <tt class="literal">showSaveDialog()</tt>.  These methods display the
  <tt class="literal">JFileChooser</tt> in a modal dialog box, using the
  component you specify as its parent.  They also customize the 
  "Okay"
  button to read <b class="emphasis-bold">Open</b> or <b class="emphasis-bold">Save</b> (or locale-appropriate equivalents).  You
  can also call <tt class="literal">showDialog()</tt> and explicitly specify
  the text to appear in the "Okay" button.  The methods return
  <tt class="literal">APPROVE_OPTION</tt> if the user selects a file and
  clicks the <b class="emphasis-bold">Save</b> or <b class="emphasis-bold">Open</b> button.  They return
  <tt class="literal">CANCEL_OPTION</tt> if the user clicks the <b class="emphasis-bold">Cancel</b> button or otherwise dismisses the dialog.
  They return <tt class="literal">ERROR_OPTION</tt> if some sort of error or
  exception occurs during file selection.  When the return value is
  <tt class="literal">APPROVE_OPTION</tt>, you can call
  <tt class="literal">getSelectedFile()</tt> to obtain a
  <tt class="literal">File</tt> object that represents the file the user
  selected. </p>
<p>  Other commonly used <tt class="literal">JFileChooser</tt> properties are
  <tt class="literal">currentDirectory</tt>, which specifies the initial or
  most recently selected directory displayed by the
  <tt class="literal">JFileChooser</tt>, and
  <tt class="literal">fileSelectionMode</tt>, which specifies whether the
  <tt class="literal">JFileChooser</tt> should allow the user to choose a
  file, a directory, or either.  The legal values for the
  <tt class="literal">fileSelectionMode</tt> property are
  <tt class="literal">FILES_ONLY</tt>, <tt class="literal">DIRECTORIES_ONLY</tt>, and
  <tt class="literal">FILES_AND_DIRECTORIES</tt>. </p>
<a name="INDEX-2379"></a>
<a name="INDEX-2380"></a>
<p>  You can selectively filter files, so that only certain choices are
  displayed to the user, by passing a
  <tt class="literal">javax.swing.filechooser.FileFilter</tt> object to
  <tt class="literal">setFileFilter()</tt>.  This allows you, for example, to
  tell the <tt class="literal">JFileChooser</tt> to display only files that
  have an extension of <em class="emphasis">.htm</em> or 
  <em class="emphasis">.html</em>.  The default
  <tt class="literal">FileFilter</tt> is one that display all files.  You can
  obtain an instance of it by calling
  <tt class="literal">getAcceptAllFileFilter()</tt>.  You can
  provide a set of file filters for the user to choose from by
  setting the <tt class="literal">choosableFileFilters</tt>
  property to an array of <tt class="literal">FileFilter</tt> objects.</p>
<p>  In addition to file filters, <tt class="literal">JFileChooser</tt> provides
  another powerful 
  way to customize the file selection dialog.  The
  <tt class="literal">accessory</tt> property allows you to specify a
  <tt class="literal">JComponent</tt> file selection accessory to be
  displayed within the <tt class="literal">JFileChooser</tt>.  Such
  accessories are typically used as file previewers.  For example, you
  might write an
  accessory to display a thumbnail version of a
  selected image file.  The accessory object must register a
  <tt class="literal">PropertyChangeListener</tt> on the
  <tt class="literal">JFileChooser</tt>, so that it can receive notification of
  changes in the <tt class="literal">selectedFile</tt> property.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JFileChooser</b> extends JComponent implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JFileChooser</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JFileChooser</b> (javax.swing.filechooser.FileSystemView <i class="parameter">fsv</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JFileChooser</b> (java.io.File <i class="parameter">currentDirectory</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JFileChooser</b> (String <i class="parameter">currentDirectoryPath</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JFileChooser</b> (java.io.File <i class="parameter">currentDirectory</i>, javax.swing.filechooser.FileSystemView <i class="parameter">fsv</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JFileChooser</b> (String <i class="parameter">currentDirectoryPath</i>, javax.swing.filechooser.FileSystemView <i class="parameter">fsv</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ACCESSORY_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="AccessoryChangedProperty"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="ApproveButtonMnemonicChangedProperty"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">APPROVE_BUTTON_TEXT_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="ApproveButtonTextChangedProperty"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="ApproveButtonToolTipTextChangedProperty"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">APPROVE_OPTION</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">APPROVE_SELECTION</b> ;</td><td align="right"><i> ="ApproveSelection"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CANCEL_OPTION</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">CANCEL_SELECTION</b> ;</td><td align="right"><i> ="CancelSelection"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="ChoosableFileFilterChangedProperty"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CUSTOM_DIALOG</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">DIALOG_TITLE_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="DialogTitleChangedProperty"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">DIALOG_TYPE_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="DialogTypeChangedProperty"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DIRECTORIES_ONLY</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">DIRECTORY_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="directoryChanged"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ERROR_OPTION</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">FILE_FILTER_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="fileFilterChanged"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">FILE_HIDING_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="FileHidingChanged"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">FILE_SELECTION_MODE_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="fileSelectionChanged"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">FILE_SYSTEM_VIEW_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="FileSystemViewChanged"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">FILE_VIEW_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="fileViewChanged"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">FILES_AND_DIRECTORIES</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">FILES_ONLY</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">MULTI_SELECTION_ENABLED_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="fileFilterChanged"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">OPEN_DIALOG</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SAVE_DIALOG</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">SELECTED_FILE_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="SelectedFileChangedProperty"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">SELECTED_FILES_CHANGED_PROPERTY</b> ;</td><td align="right"><i> ="SelectedFilesChangedProperty"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.filechooser.FileFilter <b class="function">getAcceptAllFileFilter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJFileChooser</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JComponent <b class="function">getAccessory</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAccessory</b> (JComponent <i class="parameter">newAccessory</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getApproveButtonMnemonic</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setApproveButtonMnemonic</b> (int <i class="parameter">mnemonic</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setApproveButtonMnemonic</b> (char <i class="parameter">mnemonic</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getApproveButtonText</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setApproveButtonText</b> (String <i class="parameter">approveButtonText</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getApproveButtonToolTipText</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setApproveButtonToolTipText</b> (String <i class="parameter">toolTipText</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.filechooser.FileFilter[ ] <b class="function">getChoosableFileFilters</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.io.File <b class="function">getCurrentDirectory</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurrentDirectory</b> (java.io.File <i class="parameter">dir</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getDialogTitle</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDialogTitle</b> (String <i class="parameter">dialogTitle</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDialogType</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDialogType</b> (int <i class="parameter">dialogType</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDirectorySelectionEnabled</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.filechooser.FileFilter <b class="function">getFileFilter</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFileFilter</b> (javax.swing.filechooser.FileFilter <i class="parameter">filter</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isFileHidingEnabled</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFileHidingEnabled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isFileSelectionEnabled</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getFileSelectionMode</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFileSelectionMode</b> (int <i class="parameter">mode</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.filechooser.FileSystemView <b class="function">getFileSystemView</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFileSystemView</b> (javax.swing.filechooser.FileSystemView <i class="parameter">fsv</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.filechooser.FileView <b class="function">getFileView</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFileView</b> (javax.swing.filechooser.FileView <i class="parameter">fileView</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isMultiSelectionEnabled</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMultiSelectionEnabled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.io.File <b class="function">getSelectedFile</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedFile</b> (java.io.File <i class="parameter">file</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.io.File[ ] <b class="function">getSelectedFiles</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedFiles</b> (java.io.File[ ] <i class="parameter">selectedFiles</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.FileChooserUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"FileChooserUI" expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">accept</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChoosableFileFilter</b> (javax.swing.filechooser.FileFilter <i class="parameter">filter</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">approveSelection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">cancelSelection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">changeToParentDirectory</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">ensureFileIsVisible</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getDescription</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getIcon</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getName</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getTypeDescription</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isTraversable</b> (java.io.File <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">removeChoosableFileFilter</b> (javax.swing.filechooser.FileFilter <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">rescanCurrentDirectory</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">resetChoosableFileFilters</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">showDialog</b> (Component <i class="parameter">parent</i>, String <i class="parameter">approveButtonText</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">showOpenDialog</b> (Component <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">showSaveDialog</b> (Component <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJFileChooser</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireActionPerformed</b> (String <i class="parameter">command</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setup</b> (javax.swing.filechooser.FileSystemView <i class="parameter">view</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AccessibleContext <b class="function">accessibleContext</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JFileChooser(Accessible)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.plaf.FileChooserUI.{ensureFileIsVisible(), getAcceptAllFileFilter(), getApproveButtonText(), getDialogTitle(), getFileView(), rescanCurrentDirectory()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JFrame</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component bean container</i></b></font></td>
</tr>
</table>
<a name="INDEX-2381"></a>
<a name="INDEX-2382"></a>
<p>  This class is used to display the main window (or windows) of a Swing
  application.  Every <tt class="literal">JFrame</tt> has a single
  automatically created <tt class="literal">JRootPane</tt> child.  You should
  not add children directly to the <tt class="literal">JFrame</tt>, but
  instead call <tt class="literal">getContentPane()</tt> and add children to
  the container returned by that method.  Similarly, if you set a layout
  manager, you should do so on the container returned by
  <tt class="literal">getContentPane()</tt>.  The default layout manager for
  this container is an instance of
  <tt class="literal">java.awt.BorderLayout</tt>. </p>
<a name="INDEX-2383"></a>
<a name="INDEX-2384"></a>
<a name="INDEX-2385"></a>
<p>  The <tt class="literal">JFrame</tt> has two other features of interest.
  First, <tt class="literal">setJMenuBar()</tt> automatically places a
  specified menubar at the top of the window, leaving the content pane
  free for other application content.  Second,
  <tt class="literal">setDefaultCloseOperation()</tt> specifies how the window
  should respond when the user attempts to close it (e.g., by
  typing <b class="emphasis-bold">Alt-F4</b> in Windows).  The
  argument to this method should be one of the constants defined by
  <tt class="literal">javax.swing.WindowConstants</tt>.  The default is
  <tt class="literal">HIDE_ON_CLOSE</tt>. 
  In addition to these features, <tt class="literal">JFrame</tt> also inherits
  useful methods from <tt class="literal">java.awt.Frame</tt>, including
  <tt class="literal">setCursor()</tt>, <tt class="literal">setIconImage()</tt>,
  <tt class="literal">setResizable()</tt>, and <tt class="literal">setTitle()</tt>.</p>
<a name="INDEX-2386"></a>
<a name="INDEX-2387"></a>
<a name="INDEX-2388"></a>
<p>
<tt class="literal">JFrame</tt> uses a heavyweight native window.  To
  create a lightweight
  window that appears entirely within the confines of a containing
  window, you can use <tt class="literal">JInternalFrame</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JFrame</b> extends java.awt.Frame implements Accessible, RootPaneContainer, WindowConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JFrame</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JFrame</b> (String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJFrame</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getContentPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContentPane</b> (Container <i class="parameter">contentPane</i>);</td><td align="right"><i> Implements:RootPaneContainer hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDefaultCloseOperation</b> ();</td><td align="right"><i> default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDefaultCloseOperation</b> (int <i class="parameter">operation</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getGlassPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGlassPane</b> (Component <i class="parameter">glassPane</i>);</td><td align="right"><i> Implements:RootPaneContainer hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuBar <b class="function">getJMenuBar</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setJMenuBar</b> (JMenuBar <i class="parameter">menubar</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JLayeredPane <b class="function">getLayeredPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayeredPane</b> (JLayeredPane <i class="parameter">layeredPane</i>);</td><td align="right"><i> Implements:RootPaneContainer hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayout</b> (java.awt.LayoutManager <i class="parameter">manager</i>);</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JRootPane <b class="function">getRootPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJFrame</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing RootPaneContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getContentPane</b> ();</td><td align="right"><i> default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getGlassPane</b> ();</td><td align="right"><i> default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JLayeredPane <b class="function">getLayeredPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JRootPane <b class="function">getRootPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContentPane</b> (Container <i class="parameter">contentPane</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGlassPane</b> (Component <i class="parameter">glassPane</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayeredPane</b> (JLayeredPane <i class="parameter">layeredPane</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Frame</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Window</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processWindowEvent</b> (java.awt.event.WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">update</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">addImpl</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JRootPane <b class="function">createRootPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">frameInit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isRootPaneCheckingEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setRootPane</b> (JRootPane <i class="parameter">root</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setRootPaneCheckingEnabled</b> (boolean <i class="parameter">enabled</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AccessibleContext <b class="function">accessibleContext</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JRootPane <b class="function">rootPane</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">rootPaneCheckingEnabled</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->java.awt.Window-->java.awt.Frame(java.awt.MenuContainer)-->JFrame(Accessible,RootPaneContainer,WindowConstants)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JInternalFrame</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(value) swing component bean container</i></b></font></td>
</tr>
</table>
<a name="INDEX-2389"></a>
<p>  This class is a lightweight Swing component that simulates a
  heavyweight native window, complete with titlebar and other window
  decorations appropriate to the installed look-and-feel.  Because it is
  a lightweight component, with no native window of its own, a
  <tt class="literal">JInternalFrame</tt> is constrained to stay within the
  bounds of its container.  This container is
  typically a <tt class="literal">JDesktopPane</tt>.  Within a
  <tt class="literal">JDesktopPane</tt>, a <tt class="literal">JInternalFrame</tt>
  can be moved, resized, iconified, and maximized, much like a
  <tt class="literal">JFrame</tt> can be.</p>
<a name="INDEX-2390"></a>
<p>
<tt class="literal">JInternalFrame</tt> is like <tt class="literal">JFrame</tt> in
  many ways.  A <tt class="literal">JInternalFrame</tt> has a
  <tt class="literal">JRootPane</tt> as its only child.  Components should not
  be added directly to a <tt class="literal">JInternalFrame</tt>, but rather
  to the container returned by <tt class="literal">getContentPane()</tt>.
  <tt class="literal">setJMenuBar()</tt> specifies a menubar for the
  lightweight window, and <tt class="literal">setDefaultCloseOperation()</tt>
  specifies how it should respond when the user closes it.  See
  <tt class="literal">JFrame</tt> for more on these two methods.</p>
<a name="INDEX-2391"></a>
<a name="INDEX-2392"></a>
<a name="INDEX-2393"></a>
<p>
<tt class="literal">setTitle()</tt> sets the title displayed in the internal
  frame's titlebar.  <tt class="literal">setFrameIcon()</tt> specifies a small
  image to be displayed in the titlebar and possibly also in the
  iconified representation of the <tt class="literal">JInternalFrame</tt>.
  <tt class="literal">setIconifiable()</tt> specifies whether the user is
  allowed to iconify the window, <tt class="literal">setIcon()</tt> actually
  iconifies or deiconifies the window, and <tt class="literal">isIcon()</tt>
  queries whether the window is currently iconified.
  <tt class="literal">setDesktopIcon()</tt> specifies the internal
  <tt class="literal">JInternalFrame.JDesktopIcon</tt> object used to
  represent the iconified version of the
  <tt class="literal">JInternalFrame</tt>.  This last method should not be
  used by application-level code.</p>
<a name="INDEX-2394"></a>
<a name="INDEX-2395"></a>
<a name="INDEX-2396"></a>
<p>  Similarly, <tt class="literal">setMaximizable()</tt> specifies whether the
  user can maximize the window, and <tt class="literal">setMaximum()</tt>
  maximizes the window.  <tt class="literal">setResizable()</tt> specifies
  whether the window can be resized.  <tt class="literal">setSelected()</tt>
  selects or deselects the window, and <tt class="literal">toFront()</tt> and
  <tt class="literal">toBack()</tt> move the window to the top and bottom of
  the stacking order relative to other <tt class="literal">JInternalFrame</tt>
  windows.  Finally, as with all components,
  <tt class="literal">setVisible()</tt> makes the window visible or invisible.</p>
<a name="INDEX-2397"></a>
<a name="INDEX-2398"></a>
<a name="INDEX-2399"></a>
<a name="INDEX-2400"></a>
<a name="INDEX-2401"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JInternalFrame</b> extends JComponent implements Accessible, RootPaneContainer, WindowConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JInternalFrame</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JInternalFrame</b> (String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JInternalFrame</b> (String <i class="parameter">title</i>, boolean <i class="parameter">resizable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JInternalFrame</b> (String <i class="parameter">title</i>, boolean <i class="parameter">resizable</i>, boolean <i class="parameter">closable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JInternalFrame</b> (String <i class="parameter">title</i>, boolean <i class="parameter">resizable</i>, boolean <i class="parameter">closable</i>, boolean <i class="parameter">maximizable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JInternalFrame</b> (String <i class="parameter">title</i>, boolean <i class="parameter">resizable</i>, boolean <i class="parameter">closable</i>, boolean <i class="parameter">maximizable</i>, boolean <i class="parameter">iconifiable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">CONTENT_PANE_PROPERTY</b> ;</td><td align="right"><i> ="contentPane"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">FRAME_ICON_PROPERTY</b> ;</td><td align="right"><i> ="frameIcon"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">GLASS_PANE_PROPERTY</b> ;</td><td align="right"><i> ="glassPane"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">IS_CLOSED_PROPERTY</b> ;</td><td align="right"><i> ="closed"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">IS_ICON_PROPERTY</b> ;</td><td align="right"><i> ="icon"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">IS_MAXIMUM_PROPERTY</b> ;</td><td align="right"><i> ="maximum"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">IS_SELECTED_PROPERTY</b> ;</td><td align="right"><i> ="selected"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">LAYERED_PANE_PROPERTY</b> ;</td><td align="right"><i> ="layeredPane"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">MENU_BAR_PROPERTY</b> ;</td><td align="right"><i> ="menuBar"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ROOT_PANE_PROPERTY</b> ;</td><td align="right"><i> ="rootPane"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">TITLE_PROPERTY</b> ;</td><td align="right"><i> ="title"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addInternalFrameListener</b> (javax.swing.event.InternalFrameListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeInternalFrameListener</b> (javax.swing.event.InternalFrameListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJInternalFrame</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isClosable</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setClosable</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isClosed</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setClosed</b> (boolean <i class="parameter">b</i>) throws java.beans.PropertyVetoException;</td><td align="right"><i> bound constrained</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getContentPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContentPane</b> (Container <i class="parameter">c</i>);</td><td align="right"><i> Implements:RootPaneContainer bound hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDefaultCloseOperation</b> ();</td><td align="right"><i> default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDefaultCloseOperation</b> (int <i class="parameter">operation</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JInternalFrame.JDesktopIcon <b class="function">getDesktopIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDesktopIcon</b> (JInternalFrame.JDesktopIcon <i class="parameter">d</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JDesktopPane <b class="function">getDesktopPane</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getFrameIcon</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFrameIcon</b> (Icon <i class="parameter">icon</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getGlassPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGlassPane</b> (Component <i class="parameter">glass</i>);</td><td align="right"><i> Implements:RootPaneContainer hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isIcon</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setIcon</b> (boolean <i class="parameter">b</i>) throws java.beans.PropertyVetoException;</td><td align="right"><i> bound constrained</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isIconifiable</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setIconifiable</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuBar <b class="function">getJMenuBar</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setJMenuBar</b> (JMenuBar <i class="parameter">m</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLayer</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayer</b> (Integer <i class="parameter">layer</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JLayeredPane <b class="function">getLayeredPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayeredPane</b> (JLayeredPane <i class="parameter">layered</i>);</td><td align="right"><i> Implements:RootPaneContainer bound hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayout</b> (java.awt.LayoutManager <i class="parameter">manager</i>);</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isMaximizable</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMaximizable</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isMaximum</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMaximum</b> (boolean <i class="parameter">b</i>) throws java.beans.PropertyVetoException;</td><td align="right"><i> constrained</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isResizable</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setResizable</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JRootPane <b class="function">getRootPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelected</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelected</b> (boolean <i class="parameter">selected</i>) throws java.beans.PropertyVetoException;</td><td align="right"><i> bound constrained</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getTitle</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTitle</b> (String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.InternalFrameUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.InternalFrameUI <i class="parameter">ui</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"InternalFrameUI"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final String <b class="function">getWarningString</b> ();</td><td align="right"><i> constant default:null</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">dispose</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">moveToBack</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">moveToFront</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">pack</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">toBack</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">toFront</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJInternalFrame</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing RootPaneContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getContentPane</b> ();</td><td align="right"><i> default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getGlassPane</b> ();</td><td align="right"><i> default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JLayeredPane <b class="function">getLayeredPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JRootPane <b class="function">getRootPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContentPane</b> (Container <i class="parameter">c</i>);</td><td align="right"><i> bound hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGlassPane</b> (Component <i class="parameter">glass</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayeredPane</b> (JLayeredPane <i class="parameter">layered</i>);</td><td align="right"><i> bound hidden</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">reshape</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVisible</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">paintComponent</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">addImpl</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">show</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JRootPane <b class="function">createRootPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireInternalFrameEvent</b> (int <i class="parameter">id</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isRootPaneCheckingEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setRootPane</b> (JRootPane <i class="parameter">root</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setRootPaneCheckingEnabled</b> (boolean <i class="parameter">enabled</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">closable</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JInternalFrame.JDesktopIcon <b class="function">desktopIcon</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Icon <b class="function">frameIcon</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">iconable</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isClosed</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isIcon</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isMaximum</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isSelected</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">maximizable</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">resizable</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JRootPane <b class="function">rootPane</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">rootPaneCheckingEnabled</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">title</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public JMenuBar <b class="function">getMenuBar</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setMenuBar</b> (JMenuBar <i class="parameter">m</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JInternalFrame(Accessible,RootPaneContainer,WindowConstants)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JDesktopPane.{getAllFrames(), getAllFramesInLayer()}, JInternalFrame.JDesktopIcon.getInternalFrame(), JOptionPane.createInternalFrame()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JInternalFrame.JDesktopIcon</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2402"></a>
<p>  This inner class represents an iconified version of a
  <tt class="literal">JInternalFrame</tt> to be displayed by a
  <tt class="literal">JDesktopPane</tt>.  The appearance of the
  <tt class="literal">JDesktopIcon</tt> is left entirely to the current
  look-and-feel, and <tt class="literal">JDesktopIcon</tt> does not define any
  properties you can set to change its appearance.
  <tt class="literal">JDesktopIcon</tt> may be removed in future versions of
  Swing; it should not be used by application-level code.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">JInternalFrame.JDesktopIcon</b> extends JComponent implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JDesktopIcon</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JDesktopPane <b class="function">getDesktopPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JInternalFrame <b class="function">getInternalFrame</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setInternalFrame</b> (JInternalFrame <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.DesktopIconUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.DesktopIconUI <i class="parameter">ui</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Passed To: </span><tt class="literal">JInternalFrame.setDesktopIcon()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JInternalFrame.getDesktopIcon()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JInternalFrame.desktopIcon</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JLabel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2403"></a>
<p> 
  This class displays a short string of text and/or an
  <tt class="literal">Icon</tt>.  <tt class="literal">JLabel</tt> is a
  display-only component with no behavior, so the displayed 
  text and/or icon does not respond to any input events.
  <tt class="literal">JLabel</tt>
  does not maintain any state and therefore does not use a model.  By
  default, a <tt class="literal">JLabel</tt> displays a single line of text in
  a single font.  However, as of Swing 1.1.1 and Java 1.2.2, if the <tt class="literal">text</tt> property
  begins with "&lt;html&gt;", the label is formatted as HTML
  text and may contain multiple fonts and multiple lines.</p>
<p>  The <tt class="literal">icon</tt>, <tt class="literal">text</tt>, and
  <tt class="literal">font</tt> properties need no explanation.
  <tt class="literal">disabledIcon</tt> specifies an alternate icon to display
  when the <tt class="literal">JLabel</tt> is disabled.  By default, a grayscale
  version of the regular icon is used.
  <tt class="literal">horizontalAlignment</tt> and
  <tt class="literal">verticalAlignment</tt> specify the justification of the
  label, and <tt class="literal">horizontalTextPosition</tt> and
  <tt class="literal">verticalTextPosition</tt> specify the position of the
  text relative to the icon.  Each of these properties should be set to one
  of the <tt class="literal">LEFT</tt>, <tt class="literal">CENTER</tt>,
  <tt class="literal">RIGHT</tt>, <tt class="literal">TOP</tt>, or
  <tt class="literal">BOTTOM</tt> constants defined by the
  <tt class="literal">SwingConstants</tt> interface.  The
  <tt class="literal">iconTextGap</tt> property specifies the number of pixels
  between the text and the icon.</p>
<p>  Although <tt class="literal">JLabel</tt> does not have any behavior of its
  own, it can display a mnemonic character.  If the
  <tt class="literal">displayedMnemonic</tt> property is set, the specified
  character is underlined in the label.  If the
  <tt class="literal">labelFor</tt> property refers to another component, 
  the <tt class="literal">JLabel</tt> requests keyboard focus for that
  component when the mnemonic is used.  This is useful for labeling
  <tt class="literal">JTextField</tt> components, for example.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JLabel</b> extends JComponent implements Accessible, SwingConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JLabel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JLabel</b> (Icon <i class="parameter">image</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JLabel</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JLabel</b> (Icon <i class="parameter">image</i>, int <i class="parameter">horizontalAlignment</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JLabel</b> (String <i class="parameter">text</i>, int <i class="parameter">horizontalAlignment</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JLabel</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>, int <i class="parameter">horizontalAlignment</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJLabel expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getDisabledIcon</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDisabledIcon</b> (Icon <i class="parameter">disabledIcon</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDisplayedMnemonic</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDisplayedMnemonic</b> (int <i class="parameter">key</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDisplayedMnemonic</b> (char <i class="parameter">aChar</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getHorizontalAlignment</b> ();</td><td align="right"><i> default:10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setHorizontalAlignment</b> (int <i class="parameter">alignment</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getHorizontalTextPosition</b> ();</td><td align="right"><i> default:11</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setHorizontalTextPosition</b> (int <i class="parameter">textPosition</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getIcon</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setIcon</b> (Icon <i class="parameter">icon</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIconTextGap</b> ();</td><td align="right"><i> default:4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setIconTextGap</b> (int <i class="parameter">iconTextGap</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getLabelFor</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLabelFor</b> (Component <i class="parameter">c</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getText</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setText</b> (String <i class="parameter">text</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.LabelUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.LabelUI <i class="parameter">ui</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"LabelUI"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getVerticalAlignment</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVerticalAlignment</b> (int <i class="parameter">alignment</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getVerticalTextPosition</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVerticalTextPosition</b> (int <i class="parameter">textPosition</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJLabel expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">checkHorizontalKey</b> (int <i class="parameter">key</i>, String <i class="parameter">message</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">checkVerticalKey</b> (int <i class="parameter">key</i>, String <i class="parameter">message</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">labelFor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JLabel(Accessible,SwingConstants)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">DefaultListCellRenderer, javax.swing.table.DefaultTableCellRenderer, javax.swing.tree.DefaultTreeCellRenderer</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JLayeredPane</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2404"></a>
<p>  This class is a Swing container that layers its children according to
  a specified stacking order.  When you add a child to a
  <tt class="literal">JLayeredPane</tt>, you specify an
  <tt class="literal">Integer</tt> as the constraints argument to the
  <tt class="literal">add()</tt> methods.  This <tt class="literal">Integer</tt>
  object specifies the layer number for the child, where higher numbers
  are nearer the top of the stack.  <tt class="literal">JLayeredPane</tt>
  defines a number of <tt class="literal">_LAYER</tt> constants as predefined
  layers.  The layer of a child can also be set with
  <tt class="literal">setLayer()</tt>.  If multiple children are in the same
  layer, their relative stacking order is determined by their insertion
  order.  This position within a layer can be modified with
  <tt class="literal">setPosition()</tt>,
  <tt class="literal">moveToFront()</tt>, and <tt class="literal">moveToBack()</tt>. 
  <tt class="literal">JLayeredPane</tt> is typically used without a layout
  manager; children have their size and position explicitly set.</p>
<a name="INDEX-2405"></a>
<a name="INDEX-2406"></a>
<a name="INDEX-2407"></a>
<a name="INDEX-2408"></a>
<a name="INDEX-2409"></a>
<p>  All <tt class="literal">JFrame</tt>, <tt class="literal">JDialog</tt>,
  <tt class="literal">JApplet</tt>, and <tt class="literal">JInternalFrame</tt>
  objects contain a <tt class="literal">JRootPane</tt> which, in turn,
  contains a <tt class="literal">JLayeredPane</tt>.  This internal
  <tt class="literal">JLayeredPane</tt> is used to correctly layer lightweight
  menus, dialogs, floating palettes, internal frames, and so forth.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JLayeredPane</b> extends JComponent implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JLayeredPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Integer <b class="function">DEFAULT_LAYER</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Integer <b class="function">DRAG_LAYER</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Integer <b class="function">FRAME_CONTENT_LAYER</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">LAYER_PROPERTY</b> ;</td><td align="right"><i> ="layeredContainerLayer"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Integer <b class="function">MODAL_LAYER</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Integer <b class="function">PALETTE_LAYER</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Integer <b class="function">POPUP_LAYER</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">getLayer</b> (JComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static JLayeredPane <b class="function">getLayeredPaneAbove</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">putLayer</b> (JComponent <i class="parameter">c</i>, int <i class="parameter">layer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJLayeredPane</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isOptimizedDrawingEnabled</b> ();</td><td align="right"><i> Overrides:JComponent default:true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getComponentCountInLayer</b> (int <i class="parameter">layer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component[ ] <b class="function">getComponentsInLayer</b> (int <i class="parameter">layer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIndexOf</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLayer</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getPosition</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">highestLayer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">lowestLayer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">moveToBack</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">moveToFront</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayer</b> (Component <i class="parameter">c</i>, int <i class="parameter">layer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayer</b> (Component <i class="parameter">c</i>, int <i class="parameter">layer</i>, int <i class="parameter">position</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPosition</b> (Component <i class="parameter">c</i>, int <i class="parameter">position</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJLayeredPane</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">addImpl</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Hashtable <b class="function">getComponentToLayer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Integer <b class="function">getObjectForLayer</b> (int <i class="parameter">layer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">insertIndexForLayer</b> (int <i class="parameter">layer</i>, int <i class="parameter">position</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JLayeredPane(Accessible)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">JDesktopPane</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JApplet.setLayeredPane(), JDialog.setLayeredPane(), JFrame.setLayeredPane(), JInternalFrame.setLayeredPane(), JRootPane.setLayeredPane(), JWindow.setLayeredPane(), RootPaneContainer.setLayeredPane()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JApplet.getLayeredPane(), JDialog.getLayeredPane(), JFrame.getLayeredPane(), JInternalFrame.getLayeredPane(), JLayeredPane.getLayeredPaneAbove(), JRootPane.{createLayeredPane(), getLayeredPane()}, JWindow.getLayeredPane(), RootPaneContainer.getLayeredPane()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JRootPane.layeredPane</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JList</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(selection) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2410"></a>
<p>  This class displays a list of items (typically strings)
  and allows the user to select one or more of them.  The objects to be
  displayed are stored in a <tt class="literal">ListModel</tt> object.  Two
  <tt class="literal">JList</tt> constructors allow list items to be
  specified as a static array or <tt class="literal">Vector</tt> of objects,
  however.  For a dynamic list of elements, you may want to use your own
  instance of <tt class="literal">DefaultListModel</tt>, which maintains a
  <tt class="literal">Vector</tt>-like list of objects.
  By default, <tt class="literal">JList</tt> displays lists of strings.  To
  display other types of list items, define an appropriate
  <tt class="literal">ListCellRenderer</tt> class and pass an instance of it
  to <tt class="literal">setCellRenderer()</tt>. </p>
<a name="INDEX-2411"></a>
<a name="INDEX-2412"></a>
<p>  The selection state of the <tt class="literal">JList</tt> is
  maintained by a <tt class="literal">ListSelectionModel</tt> object.  By
  default, <tt class="literal">JList</tt> uses a
  <tt class="literal">DefaultListSelectionModel</tt> object.
  Application programmers rarely need to work with the
  <tt class="literal">ListSelectionModel</tt> directly because
  <tt class="literal">JList</tt> provides a number of methods to query and set
  the selection state.  <tt class="literal">setSelectionMode()</tt> specifies
  the types of selections allowed by the <tt class="literal">JList</tt>. Its
  argument should be one of the three constants defined by
  <tt class="literal">ListSelectionModel</tt>.  
  <tt class="literal">SINGLE_SELECTION</tt> allows only a single item to
  be selected, while <tt class="literal">SINGLE_INTERVAL_SELECTION</tt> 
  allows multiple items in a single contiguous block to be selected and
  <tt class="literal">MULTIPLE_INTERVAL_SELECTION</tt> allows any number
  of items, contiguous or not, to be selected.</p>
<p>
<tt class="literal">JList</tt> generates a
  <tt class="literal">javax.swing.event.ListSelectionEvent</tt> when the
  selection state changes and sends it to the
  <tt class="literal">valueChanged()</tt> methods of any registered
  <tt class="literal">javax.swing.event.ListSelectionListener</tt>
  objects.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JList</b> extends JComponent implements Accessible, Scrollable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JList</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JList</b> (Object[ ] <i class="parameter">listData</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JList</b> (ListModel <i class="parameter">dataModel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JList</b> (java.util.Vector <i class="parameter">listData</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addListSelectionListener</b> (javax.swing.event.ListSelectionListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeListSelectionListener</b> (javax.swing.event.ListSelectionListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJList</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAnchorSelectionIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ListCellRenderer <b class="function">getCellRenderer</b> ();</td><td align="right"><i> default:DefaultListCellRenderer.UIResource</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCellRenderer</b> (ListCellRenderer <i class="parameter">cellRenderer</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getFirstVisibleIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getFixedCellHeight</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFixedCellHeight</b> (int <i class="parameter">height</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getFixedCellWidth</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFixedCellWidth</b> (int <i class="parameter">width</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLastVisibleIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLeadSelectionIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaxSelectionIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinSelectionIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ListModel <b class="function">getModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModel</b> (ListModel <i class="parameter">model</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredScrollableViewportSize</b> ();</td><td align="right"><i> Implements:Scrollable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getPrototypeCellValue</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPrototypeCellValue</b> (Object <i class="parameter">prototypeCellValue</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportHeight</b> ();</td><td align="right"><i> Implements:Scrollable default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportWidth</b> ();</td><td align="right"><i> Implements:Scrollable default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectedIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedIndex</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">getSelectedIndices</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedIndices</b> (int[ ] <i class="parameter">indices</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getSelectedValue</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getSelectedValues</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getSelectionBackground</b> ();</td><td align="right"><i> default:ColorUIResource</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionBackground</b> (java.awt.Color <i class="parameter">selectionBackground</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelectionEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getSelectionForeground</b> ();</td><td align="right"><i> default:ColorUIResource</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionForeground</b> (java.awt.Color <i class="parameter">selectionForeground</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectionMode</b> ();</td><td align="right"><i> default:2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionMode</b> (int <i class="parameter">selectionMode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ListSelectionModel <b class="function">getSelectionModel</b> ();</td><td align="right"><i> default:DefaultListSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionModel</b> (ListSelectionModel <i class="parameter">selectionModel</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.ListUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.ListUI <i class="parameter">ui</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"ListUI"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getValueIsAdjusting</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValueIsAdjusting</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getVisibleRowCount</b> ();</td><td align="right"><i> default:8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVisibleRowCount</b> (int <i class="parameter">visibleRowCount</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSelectionInterval</b> (int <i class="parameter">anchor</i>, int <i class="parameter">lead</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clearSelection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">ensureIndexIsVisible</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getCellBounds</b> (int <i class="parameter">index1</i>, int <i class="parameter">index2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Point <b class="function">indexToLocation</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelectedIndex</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">locationToIndex</b> (java.awt.Point <i class="parameter">location</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setListData</b> (Object[ ] <i class="parameter">listData</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setListData</b> (java.util.Vector <i class="parameter">listData</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedValue</b> (Object <i class="parameter">anObject</i>, boolean <i class="parameter">shouldScroll</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionInterval</b> (int <i class="parameter">anchor</i>, int <i class="parameter">lead</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJList</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Scrollable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredScrollableViewportSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getScrollableBlockIncrement</b> (java.awt.Rectangle <i class="parameter">visibleRect</i>, int <i class="parameter">orientation</i>, int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportHeight</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportWidth</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getScrollableUnitIncrement</b> (java.awt.Rectangle <i class="parameter">visibleRect</i>, int <i class="parameter">orientation</i>, int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected ListSelectionModel <b class="function">createSelectionModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireSelectionValueChanged</b> (int <i class="parameter">firstIndex</i>, int <i class="parameter">lastIndex</i>, boolean <i class="parameter">isAdjusting</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JList(Accessible,Scrollable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DefaultListCellRenderer.getListCellRendererComponent(), JList.AccessibleJList.AccessibleJListChild.AccessibleJListChild(), ListCellRenderer.getListCellRendererComponent(), javax.swing.plaf.ListUI.{getCellBounds(), indexToLocation(), locationToIndex()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JMenu</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(action,selection,value) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2413"></a>
<a name="INDEX-2414"></a>
<a name="INDEX-2415"></a>
<a name="INDEX-2416"></a>
<a name="INDEX-2417"></a>
<a name="INDEX-2418"></a>
<p>  This class implements a pulldown menu in a menubar or a
  pull-right menu nested within another menu.  As a subclass of
  <tt class="literal">JMenuItem</tt>, <tt class="literal">JMenu</tt> is effectively
  a menu button with an associated <tt class="literal">JPopupMenu</tt> that
  appears when the button is activated.
  Menu items can be added to a <tt class="literal">JMenu</tt> with the
  <tt class="literal">add()</tt>, <tt class="literal">insert()</tt>, 
  <tt class="literal">addSeparator()</tt>, and
  <tt class="literal">insertSeparator()</tt> methods.  Note that you can add
  <tt class="literal">String</tt> and <tt class="literal">Action</tt> objects in
  addition to regular <tt class="literal">JMenuItem</tt> objects.  In these
  cases, an appropriate <tt class="literal">JMenuItem</tt> is automatically
  created for the <tt class="literal">String</tt> or
  <tt class="literal">Action</tt>.
  <tt class="literal">JMenu</tt> generates a
  <tt class="literal">javax.swing.event.MenuEvent</tt> when it is selected
  and when its menu is popped up or down.
  The default <tt class="literal">JMenu</tt> model is
  <tt class="literal">DefaultButtonModel</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JMenu</b> extends JMenuItem implements Accessible, MenuElement {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JMenu</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JMenu</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JMenu</b> (String <i class="parameter">s</i>, boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addMenuListener</b> (javax.swing.event.MenuListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeMenuListener</b> (javax.swing.event.MenuListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAccelerator</b> (KeyStroke <i class="parameter">keyStroke</i>);</td><td align="right"><i> Overrides:JMenuItem hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJMenu</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponent</b> ();</td><td align="right"><i> Implements:MenuElement default:JMenu</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDelay</b> ();</td><td align="right"><i> default:200</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDelay</b> (int <i class="parameter">d</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getItemCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMenuComponentCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component[ ] <b class="function">getMenuComponents</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModel</b> (ButtonModel <i class="parameter">newModel</i>);</td><td align="right"><i> Overrides:AbstractButton bound expert hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JPopupMenu <b class="function">getPopupMenu</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isPopupMenuVisible</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPopupMenuVisible</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> expert hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelected</b> ();</td><td align="right"><i> Overrides:AbstractButton default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelected</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> Overrides:AbstractButton expert hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuElement[ ] <b class="function">getSubElements</b> ();</td><td align="right"><i> Implements:MenuElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isTearOff</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isTopLevelMenu</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JMenuItem default:"MenuUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuItem <b class="function">add</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuItem <b class="function">add</b> (JMenuItem <i class="parameter">menuItem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuItem <b class="function">add</b> (Action <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSeparator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuItem <b class="function">getItem</b> (int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getMenuComponent</b> (int <i class="parameter">n</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insert</b> (String <i class="parameter">s</i>, int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuItem <b class="function">insert</b> (JMenuItem <i class="parameter">mi</i>, int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuItem <b class="function">insert</b> (Action <i class="parameter">a</i>, int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertSeparator</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isMenuComponent</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (JMenuItem <i class="parameter">item</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMenuLocation</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJMenu</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MenuElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponent</b> ();</td><td align="right"><i> default:JMenu</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuElement[ ] <b class="function">getSubElements</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">menuSelectionChanged</b> (boolean <i class="parameter">isIncluded</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JMenuItem</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JMenuItem</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">doClick</b> (int <i class="parameter">pressTime</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">add</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAll</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.beans.PropertyChangeListener <b class="function">createActionChangeListener</b> (JMenuItem <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JMenu.WinListener <b class="function">createWinListener</b> (JPopupMenu <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireMenuCanceled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireMenuDeselected</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireMenuSelected</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JMenu.WinListener <b class="function">popupListener</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->AbstractButton(java.awt.ItemSelectable,SwingConstants)-->JMenuItem(Accessible,MenuElement)-->JMenu(Accessible,MenuElement)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JMenuBar.{add(), setHelpMenu()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JMenuBar.{add(), getHelpMenu(), getMenu()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JMenu.WinListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<p>  This protected inner class is a
  <tt class="literal">java.awt.event.WindowListener</tt> that is used
  internally by <tt class="literal">JMenu</tt> to determine when the popup
  window containing the menu items closes.  Application-level code never
  needs to use this class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">JMenu.WinListener</b> extends java.awt.event.WindowAdapter implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">WinListener</b> (JPopupMenu <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding WindowAdapter</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">windowClosing</b> (java.awt.event.WindowEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JMenu.createWinListener()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JMenu.popupListener</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JMenuBar</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(selection) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2419"></a>
<a name="INDEX-2420"></a>
<p>  This class implements a menu bar.  <tt class="literal">JMenu</tt> objects
  are placed in a <tt class="literal">JMenuBar</tt> with the
  <tt class="literal">add()</tt> method and can be removed with the
  <tt class="literal">remove()</tt> methods.  A <b class="emphasis-bold">Help</b> menu should be singled out for special
  treatment (typically by placing it at the right-hand edge of the menu
  bar) with <tt class="literal">setHelpMenu()</tt>.
  <tt class="literal">JMenuBar</tt> uses a
  <tt class="literal">SingleSelectionModel</tt> object to keep track of which
  of its <tt class="literal">JMenuItem</tt> children (if any) is currently
  selected.  By default, <tt class="literal">JMenuBar</tt> uses a
  <tt class="literal">DefaultSingleSelectionModel</tt> model object. </p>
<a name="INDEX-2421"></a>
<a name="INDEX-2422"></a>
<a name="INDEX-2423"></a>
<a name="INDEX-2424"></a>
<p>  In AWT, the <tt class="literal">MenuBar</tt> class is not a
  <tt class="literal">Component</tt>.  In Swing, <tt class="literal">JMenuBar</tt>
  is a <tt class="literal">JComponent</tt> and can be laid out in an
  application like any other component.  Note, however, that
  <tt class="literal">JFrame</tt>, <tt class="literal">JDialog</tt>,
  <tt class="literal">JApplet</tt>, and <tt class="literal">JInternalFrame</tt> all
  have <tt class="literal">setJMenuBar()</tt> methods that automatically
  position a <tt class="literal">JMenuBar</tt> at the top of the window.  This
  is the easiest and most common way to lay out a menu bar.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JMenuBar</b> extends JComponent implements Accessible, MenuElement {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JMenuBar</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJMenuBar</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderPainted</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBorderPainted</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponent</b> ();</td><td align="right"><i> Implements:MenuElement default:JMenuBar</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenu <b class="function">getHelpMenu</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setHelpMenu</b> (JMenu <i class="parameter">menu</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isManagingFocus</b> ();</td><td align="right"><i> Overrides:JComponent constant default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getMargin</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMargin</b> (java.awt.Insets <i class="parameter">m</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMenuCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelected</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelected</b> (Component <i class="parameter">sel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public SingleSelectionModel <b class="function">getSelectionModel</b> ();</td><td align="right"><i> default:DefaultSingleSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionModel</b> (SingleSelectionModel <i class="parameter">model</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuElement[ ] <b class="function">getSubElements</b> ();</td><td align="right"><i> Implements:MenuElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.MenuBarUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.MenuBarUI <i class="parameter">ui</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"MenuBarUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenu <b class="function">add</b> (JMenu <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponentAtIndex</b> (int <i class="parameter">i</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getComponentIndex</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenu <b class="function">getMenu</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJMenuBar</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MenuElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponent</b> ();</td><td align="right"><i> default:JMenuBar</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuElement[ ] <b class="function">getSubElements</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">menuSelectionChanged</b> (boolean <i class="parameter">isIncluded</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">processKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>, MenuElement[ ] <i class="parameter">path</i>, MenuSelectionManager <i class="parameter">manager</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">processMouseEvent</b> (java.awt.event.MouseEvent <i class="parameter">event</i>, MenuElement[ ] <i class="parameter">path</i>, MenuSelectionManager <i class="parameter">manager</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">paintBorder</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JMenuBar(Accessible,MenuElement)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JApplet.setJMenuBar(), JDialog.setJMenuBar(), JFrame.setJMenuBar(), JInternalFrame.{setJMenuBar(), setMenuBar()}, JRootPane.{setJMenuBar(), setMenuBar()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JApplet.getJMenuBar(), JDialog.getJMenuBar(), JFrame.getJMenuBar(), JInternalFrame.{getJMenuBar(), getMenuBar()}, JRootPane.{getJMenuBar(), getMenuBar()}</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JRootPane.menuBar</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JMenuItem</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(action,value) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2425"></a>
<a name="INDEX-2426"></a>
<a name="INDEX-2427"></a>
<a name="INDEX-2428"></a>
<p> 
  This class implements an item in a pulldown or popup menu.  As a
  subclass of <tt class="literal">AbstractButton</tt>, it shares most of the
  properties of <tt class="literal">JButton</tt>. One new feature is that it
  allows an
  accelerator to be specified.  An accelerator is a keyboard binding
  for the menu item.  Like all Swing buttons,
  <tt class="literal">JMenuItem</tt> also supports a mnemonic.  Accelerators
  differ from mnemonics in two important ways, however.  First,
  accelerators can be used at any time, while menu item mnemonics can
  be used only when the menu that contains them is displayed.  Second,
  accelerators are specified with a <tt class="literal">KeyStroke</tt> object,
  rather than a simple character.  This allows complex bindings
  that include function keys and arbitrary modifier keys.</p>
<p>  In addition to its <tt class="literal">AbstractButton</tt> functionality,
  <tt class="literal">JMenuItem</tt> also implements the
  <tt class="literal">MenuElement</tt> interface.
  The default <tt class="literal">JMenuItem</tt> model is
  <tt class="literal">DefaultButtonModel</tt>, and the UI
  delegate class is <tt class="literal">MenuItemUI</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JMenuItem</b> extends AbstractButton implements Accessible, MenuElement {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JMenuItem</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JMenuItem</b> (Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JMenuItem</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JMenuItem</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JMenuItem</b> (String <i class="parameter">text</i>, int <i class="parameter">mnemonic</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addMenuDragMouseListener</b> (javax.swing.event.MenuDragMouseListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeMenuDragMouseListener</b> (javax.swing.event.MenuDragMouseListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addMenuKeyListener</b> (javax.swing.event.MenuKeyListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeMenuKeyListener</b> (javax.swing.event.MenuKeyListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public KeyStroke <b class="function">getAccelerator</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAccelerator</b> (KeyStroke <i class="parameter">keyStroke</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJMenuItem</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isArmed</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setArmed</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponent</b> ();</td><td align="right"><i> Implements:MenuElement default:JMenuItem</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuElement[ ] <b class="function">getSubElements</b> ();</td><td align="right"><i> Implements:MenuElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"MenuItemUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">processMenuDragMouseEvent</b> (javax.swing.event.MenuDragMouseEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">processMenuKeyEvent</b> (javax.swing.event.MenuKeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.MenuItemUI <i class="parameter">ui</i>);</td><td align="right"><i> bound expert hidden</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJMenuItem</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MenuElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponent</b> ();</td><td align="right"><i> default:JMenuItem</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuElement[ ] <b class="function">getSubElements</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">menuSelectionChanged</b> (boolean <i class="parameter">isIncluded</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">processKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>, MenuElement[ ] <i class="parameter">path</i>, MenuSelectionManager <i class="parameter">manager</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">processMouseEvent</b> (java.awt.event.MouseEvent <i class="parameter">e</i>, MenuElement[ ] <i class="parameter">path</i>, MenuSelectionManager <i class="parameter">manager</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEnabled</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding AbstractButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">init</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireMenuDragMouseDragged</b> (javax.swing.event.MenuDragMouseEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireMenuDragMouseEntered</b> (javax.swing.event.MenuDragMouseEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireMenuDragMouseExited</b> (javax.swing.event.MenuDragMouseEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireMenuDragMouseReleased</b> (javax.swing.event.MenuDragMouseEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireMenuKeyPressed</b> (javax.swing.event.MenuKeyEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireMenuKeyReleased</b> (javax.swing.event.MenuKeyEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireMenuKeyTyped</b> (javax.swing.event.MenuKeyEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->AbstractButton(java.awt.ItemSelectable,SwingConstants)-->JMenuItem(Accessible,MenuElement)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">JCheckBoxMenuItem, JMenu, JRadioButtonMenuItem</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JMenu.{add(), createActionChangeListener(), insert(), remove()}, JPopupMenu.{add(), createActionChangeListener()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JMenu.{add(), getItem(), insert()}, JPopupMenu.add()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JOptionPane</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component bean container</i></b></font></td>
</tr>
</table>
<a name="INDEX-2429"></a>
<a name="INDEX-2430"></a>
<a name="INDEX-2431"></a>
<p> 
  This component is used to display various
  types of simple dialog boxes to the user (yes, its name is misleading).  
  It is almost always used
  through one of the 
  <tt class="literal">show<em class="replaceable">XXX</em>Dialog()</tt> static methods.
  The fact that there are more than 20 of these methods demonstrates the
  highly-configurable nature of this class.  The
  <tt class="literal">showInternal<em class="replaceable">XXX</em>Dialog()</tt> 
  methods display dialogs in
  lightweight <tt class="literal">JInternalFrame</tt> windows.  The other
  static methods display methods in heavyweight
  <tt class="literal">JDialog</tt> windows.</p>
<a name="INDEX-2432"></a>
<a name="INDEX-2433"></a>
<p>  You can create and display a simple message dialog with
  <tt class="literal">showMessageDialog()</tt> and
  <tt class="literal">showInternalMessageDialog()</tt>. These methods display
  a dialog box that contains the specified message, an optional icon, and
  an <b class="emphasis-bold">Okay</b> button that dismisses the
  dialog.  The dialog is modal, meaning it blocks, returning
  only when the user has dismissed the dialog.  The
  <em class="replaceable">parentComponent</em> argument specifies the
  component that serves as the parent of the dialog (the dialog
  typically pops up over this component), while
  <em class="replaceable">title</em> specifies a string to appear
  in the titlebar of the dialog.
  The <em class="replaceable">message</em> argument is more complex.  It
  is declared as an <tt class="literal">Object</tt>.  You typically pass a
  <tt class="literal">String</tt> value, which is automatically displayed in a
  <tt class="literal">JLabel</tt>.  However, you can also specify an
  <tt class="literal">Icon</tt>, which is also displayed in a
  <tt class="literal">JLabel</tt>, or any
  <tt class="literal">JComponent</tt>, which is displayed as is.
  Furthermore, instead of specifying a single message object, you can
  specify an array of objects that contains any combination of strings,
  icons, and components.
  The <em class="replaceable">messageType</em> argument must be one of the
  constants <tt class="literal">WARNING_MESSAGE</tt>,
  <tt class="literal">QUESTION_MESSAGE</tt>, <tt class="literal">INFO_MESSAGE</tt>,
  <tt class="literal">ERROR_MESSAGE</tt>, or
  <tt class="literal">PLAIN_MESSAGE</tt>.  These constants specify the basic
  type of message you are displaying.  The current look-and-feel may
  customize the appearance of the dialog based on this value.
  Typically, the customization is limited to the display of one of a
  standard set of icons.  If you'd like to override the default icon for
  the dialog, you can also explicitly specify an
  <em class="replaceable">icon</em> argument.</p>
<a name="INDEX-2434"></a>
<a name="INDEX-2435"></a>
<a name="INDEX-2436"></a>
<p>  The <tt class="literal">showConfirmDialog()</tt> and
  <tt class="literal">showInternalConfirmDialog()</tt> methods are much like
  <tt class="literal">showMessageDialog()</tt> and
  <tt class="literal">showInternalMessageDialog()</tt>, except that
  they ask the user to make a choice and provide several push buttons
  that represent the options available to the user.  (It is the
  options represented by these buttons from which the name
  <tt class="literal">JOptionPane</tt> derives.)  For example,
  <tt class="literal">showConfirmDialog()</tt> can be used to display a
  dialog that asks "Do you really want to quit?" and allows the user to
  respond by pushing either a <b class="emphasis-bold">Yes</b> button
  or a <b class="emphasis-bold">No</b> button.
  The <em class="replaceable">parentComponent</em>,
  <em class="replaceable">title</em>, <em class="replaceable">message</em>,
  <em class="replaceable">messageType</em>, and <em class="replaceable">icon</em>
  arguments to these methods are the same as for the message dialogs.  
  The confirm dialogs add an <em class="replaceable">optionType</em> argument
  and a return value.  <em class="replaceable">optionType</em> specifies
  which buttons should appear in the dialog.  It should be
  one of the constants <tt class="literal">DEFAULT_OPTION</tt>,
  <tt class="literal">YES_NO_OPTION</tt>,
  <tt class="literal">YES_NO_CANCEL_OPTION</tt>, or
  <tt class="literal">OK_CANCEL_OPTION</tt>.
  <tt class="literal">DEFAULT_OPTION</tt> provides a single <b class="emphasis-bold">Okay</b> button; the others provide buttons as
  indicated by their names.
  Like the message dialogs, the confirm dialogs are modal, and the static
  methods that display them block until the user has dismissed the dialog.
  Since confirm dialogs present choices to the user, they have return
  values that indicate the choice the user selected.  This return value
  is one of the constants <tt class="literal">OK_OPTION</tt>,
  <tt class="literal">CANCEL_OPTION</tt>, <tt class="literal">YES_OPTION</tt>,
  <tt class="literal">NO_OPTION</tt>, or <tt class="literal">CLOSED_OPTION</tt>.
  This last value indicates that the user closed the dialog window
  without selecting any of the available buttons; typically, it should be
  treated as a <tt class="literal">CANCEL_OPTION</tt> response.</p>
<a name="INDEX-2437"></a>
<a name="INDEX-2438"></a>
<a name="INDEX-2439"></a>
<p>
<tt class="literal">showOptionDialog()</tt> and
  <tt class="literal">showInternalOptionDialog()</tt> are generalizations of
  the confirm dialog.  They take an <em class="replaceable">options</em>
  argument, which specifies what buttons to display in the dialog box,
  and an <em class="replaceable">initialValue</em> argument, which specifies
  which of these buttons should be the default button.  The
  <em class="replaceable">options</em> argument is an array of objects.
  Typically, you specify string values that the
  <tt class="literal">JOptionPane</tt> displays in <tt class="literal">JButton</tt>
  components.  You can provide arbitrary components in the
  <em class="replaceable">options</em> array, but if you do so, you must
  arrange for each component to update the state of the
  <tt class="literal">JOptionPane</tt> by calling its
  <tt class="literal">setValue()</tt> method when selected.</p>
<a name="INDEX-2440"></a>
<a name="INDEX-2441"></a>
<p>  The final category of dialogs are the input dialogs, created with
  <tt class="literal">showInputDialog()</tt> and
  <tt class="literal">showInternalInputDialog()</tt>.  Most versions of these
  methods take the same arguments as the message dialogs.  However, in
  addition to displaying a message, they also contain a
  <tt class="literal">JTextField</tt> in which the user can enter
  whatever input value is requested.  These dialogs are modal, and the
  methods that display them block until the user has dismissed the dialog.
  If the user dismisses the dialog with the <b class="emphasis-bold">Okay</b> button, the methods return the user's input
  as a <tt class="literal">String</tt>.  If the user dismisses the dialog with
  the <b class="emphasis-bold">Cancel</b> button, these methods return
  <tt class="literal">null</tt>.
  One version of both <tt class="literal">showInputDialog()</tt> and 
  <tt class="literal">showInternalInputDialog()</tt> are different.  These
  methods take additional <em class="replaceable">selectionValues</em> and
  <em class="replaceable">initialSelectionValue</em> arguments.  Instead
  of asking the user to enter a string, they ask the user to choose
  among the values contained in the
  <em class="replaceable">selectionValues</em> array (presenting 
  <em class="replaceable">initialSelectionValue</em> as the default value).
  The display of these values is left to the current look-and-feel,
  although they are typically displayed using a
  <tt class="literal">JComboBox</tt> or <tt class="literal">JList</tt> component.
  The <em class="replaceable">selectionValues</em> array typically
  contains strings, but it may also contain <tt class="literal">Icon</tt>
  objects or other objects that can be meaningfully displayed by
  <tt class="literal">JList</tt> and <tt class="literal">JComboBox</tt> components.
  When you pass an array of <em class="replaceable">selectionValues</em> to
  <tt class="literal">showInputDialog()</tt> or
  <tt class="literal">showInternalInputDialog()</tt>, the return value is the
  value the user has chosen or <tt class="literal">null</tt>, if the user selected
  the <b class="emphasis-bold">Cancel</b> button.</p>
<a name="INDEX-2442"></a>
<a name="INDEX-2443"></a>
<p>  Instead of using one of the static methods to display a
  <tt class="literal">JOptionPane</tt> dialog, you can also create a
  <tt class="literal">JOptionPane</tt> component, set properties as desired,
  and then create a dialog to contain it by calling the
  <tt class="literal">createDialog()</tt> or
  <tt class="literal">createInternalFrame()</tt> instance method.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JOptionPane</b> extends JComponent implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JOptionPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JOptionPane</b> (Object <i class="parameter">message</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JOptionPane</b> (Object <i class="parameter">message</i>, int <i class="parameter">messageType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JOptionPane</b> (Object <i class="parameter">message</i>, int <i class="parameter">messageType</i>, int <i class="parameter">optionType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JOptionPane</b> (Object <i class="parameter">message</i>, int <i class="parameter">messageType</i>, int <i class="parameter">optionType</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JOptionPane</b> (Object <i class="parameter">message</i>, int <i class="parameter">messageType</i>, int <i class="parameter">optionType</i>, Icon <i class="parameter">icon</i>, Object[ ] <i class="parameter">options</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JOptionPane</b> (Object <i class="parameter">message</i>, int <i class="parameter">messageType</i>, int <i class="parameter">optionType</i>, Icon <i class="parameter">icon</i>, Object[ ] <i class="parameter">options</i>, Object <i class="parameter">initialValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CANCEL_OPTION</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CLOSED_OPTION</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DEFAULT_OPTION</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ERROR_MESSAGE</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ICON_PROPERTY</b> ;</td><td align="right"><i> ="icon"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INFORMATION_MESSAGE</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">INITIAL_SELECTION_VALUE_PROPERTY</b> ;</td><td align="right"><i> ="initialSelectionValue"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">INITIAL_VALUE_PROPERTY</b> ;</td><td align="right"><i> ="initialValue"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">INPUT_VALUE_PROPERTY</b> ;</td><td align="right"><i> ="inputValue"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">MESSAGE_PROPERTY</b> ;</td><td align="right"><i> ="message"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">MESSAGE_TYPE_PROPERTY</b> ;</td><td align="right"><i> ="messageType"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NO_OPTION</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">OK_CANCEL_OPTION</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">OK_OPTION</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">OPTION_TYPE_PROPERTY</b> ;</td><td align="right"><i> ="optionType"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">OPTIONS_PROPERTY</b> ;</td><td align="right"><i> ="options"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PLAIN_MESSAGE</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">QUESTION_MESSAGE</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">SELECTION_VALUES_PROPERTY</b> ;</td><td align="right"><i> ="selectionValues"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">UNINITIALIZED_VALUE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">VALUE_PROPERTY</b> ;</td><td align="right"><i> ="value"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">WANTS_INPUT_PROPERTY</b> ;</td><td align="right"><i> ="wantsInput"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WARNING_MESSAGE</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">YES_NO_CANCEL_OPTION</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">YES_NO_OPTION</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">YES_OPTION</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static JDesktopPane <b class="function">getDesktopPaneForComponent</b> (Component <i class="parameter">parentComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Frame <b class="function">getFrameForComponent</b> (Component <i class="parameter">parentComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Frame <b class="function">getRootFrame</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setRootFrame</b> (java.awt.Frame <i class="parameter">newRootFrame</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">showConfirmDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">showConfirmDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">optionType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">showConfirmDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">optionType</i>, int <i class="parameter">messageType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">showConfirmDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">optionType</i>, int <i class="parameter">messageType</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">showInputDialog</b> (Object <i class="parameter">message</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">showInputDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">showInputDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">messageType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Object <b class="function">showInputDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">messageType</i>, Icon <i class="parameter">icon</i>, Object[ ] <i class="parameter">selectionValues</i>, Object <i class="parameter">initialSelectionValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">showInternalConfirmDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">showInternalConfirmDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">optionType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">showInternalConfirmDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">optionType</i>, int <i class="parameter">messageType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">showInternalConfirmDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">optionType</i>, int <i class="parameter">messageType</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">showInternalInputDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">showInternalInputDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">messageType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Object <b class="function">showInternalInputDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">messageType</i>, Icon <i class="parameter">icon</i>, Object[ ] <i class="parameter">selectionValues</i>, Object <i class="parameter">initialSelectionValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">showInternalMessageDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">showInternalMessageDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">messageType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">showInternalMessageDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">messageType</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">showInternalOptionDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">optionType</i>, int <i class="parameter">messageType</i>, Icon <i class="parameter">icon</i>, Object[ ] <i class="parameter">options</i>, Object <i class="parameter">initialValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">showMessageDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">showMessageDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">messageType</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">showMessageDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">messageType</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">showOptionDialog</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">title</i>, int <i class="parameter">optionType</i>, int <i class="parameter">messageType</i>, Icon <i class="parameter">icon</i>, Object[ ] <i class="parameter">options</i>, Object <i class="parameter">initialValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJOptionPane expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getIcon</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setIcon</b> (Icon <i class="parameter">newIcon</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getInitialSelectionValue</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setInitialSelectionValue</b> (Object <i class="parameter">newValue</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getInitialValue</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setInitialValue</b> (Object <i class="parameter">newInitialValue</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getInputValue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setInputValue</b> (Object <i class="parameter">newValue</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaxCharactersPerLineCount</b> ();</td><td align="right"><i> default:2147483647</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getMessage</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMessage</b> (Object <i class="parameter">newMessage</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMessageType</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMessageType</b> (int <i class="parameter">newType</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getOptions</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setOptions</b> (Object[ ] <i class="parameter">newOptions</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getOptionType</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setOptionType</b> (int <i class="parameter">newType</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getSelectionValues</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionValues</b> (Object[ ] <i class="parameter">newValues</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.OptionPaneUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.OptionPaneUI <i class="parameter">ui</i>);</td><td align="right"><i> bound hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"OptionPaneUI"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getValue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValue</b> (Object <i class="parameter">newValue</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getWantsInput</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setWantsInput</b> (boolean <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JDialog <b class="function">createDialog</b> (Component <i class="parameter">parentComponent</i>, String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JInternalFrame <b class="function">createInternalFrame</b> (Component <i class="parameter">parentComponent</i>, String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">selectInitialValue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJOptionPane expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Icon <b class="function">icon</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Object <b class="function">initialSelectionValue</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Object <b class="function">initialValue</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Object <b class="function">inputValue</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Object <b class="function">message</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">messageType</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Object[ ] <b class="function">options</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">optionType</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Object[ ] <b class="function">selectionValues</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Object <b class="function">value</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">wantsInput</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JOptionPane(Accessible)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.plaf.OptionPaneUI.{containsCustomComponents(), selectInitialValue()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JPanel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2444"></a>
<p> 
  This component is a lightweight container that is commonly
  used to group other components within graphical user interfaces.  Use
  <tt class="literal">setLayout()</tt> to specify a
  <tt class="literal">java.awt.LayoutManager</tt> to control the arrangement
  of components within the <tt class="literal">JPanel</tt>.
  Various <tt class="literal">JPanel()</tt> constructors make it easy to set
  the values of the inherited <tt class="literal">layout</tt> and
  <tt class="literal">doubleBuffered</tt> properties.</p>
<a name="INDEX-2445"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JPanel</b> extends JComponent implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JPanel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JPanel</b> (boolean <i class="parameter">isDoubleBuffered</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JPanel</b> (java.awt.LayoutManager <i class="parameter">layout</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JPanel</b> (java.awt.LayoutManager <i class="parameter">layout</i>, boolean <i class="parameter">isDoubleBuffered</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"PanelUI" expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJPanel</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JPanel(Accessible)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">javax.swing.colorchooser.AbstractColorChooserPanel</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JPasswordField</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(text) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2446"></a>
<a name="INDEX-2447"></a>
<a name="INDEX-2448"></a>
<p>  This <tt class="literal">JTextField</tt> subclass is designed for entering
  passwords and other sensitive data.  It does not display the
  characters of the entered text, preventing it from being read by
  onlookers.  Use <tt class="literal">setEchoChar()</tt> to specify the
  character that should appear (e.g., an asterisk) 
  in place of the characters entered by the
  user.  </p>
<a name="INDEX-2449"></a>
<a name="INDEX-2450"></a>
<p>
<tt class="literal">JPasswordField</tt> overrides and deprecates the
  <tt class="literal">getText()</tt> method of <tt class="literal">JTextField</tt>.
  Instead, use <tt class="literal">getPassword()</tt> to obtain the user's
  input.  This method returns an array of characters
  instead of an immutable <tt class="literal">String</tt> object.  This means
  that after you use the password, you can set the elements of the array
  to 0 for additional security.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JPasswordField</b> extends JTextField {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JPasswordField</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JPasswordField</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JPasswordField</b> (int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JPasswordField</b> (String <i class="parameter">text</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JPasswordField</b> (javax.swing.text.Document <i class="parameter">doc</i>, String <i class="parameter">txt</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Overrides:JTextField default:AccessibleJPasswordField</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getEchoChar</b> ();</td><td align="right"><i> default:*</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEchoChar</b> (char <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char[ ] <b class="function">getPassword</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JTextField default:"PasswordFieldUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">echoCharIsSet</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JTextField</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JTextComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">copy</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">cut</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public String <b class="function">getText</b> ();</td><td align="right"><i> Overrides:JTextComponent default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public String <b class="function">getText</b> (int <i class="parameter">offs</i>, int <i class="parameter">len</i>) throws javax.swing.text.BadLocationException;</td><td align="right"><i> Overrides:JTextComponent</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->javax.swing.text.JTextComponent(Accessible,Scrollable)-->JTextField(SwingConstants)-->JPasswordField</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JPopupMenu</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2451"></a>
<a name="INDEX-2452"></a>
<a name="INDEX-2453"></a>
<p>  This component displays a menu of choices in a popup window.  It is
  used both for standalone popup menus that are posted when the user
  clicks the right mouse button and for the pulldown and pull-right
  menus that appear when the user selects a <tt class="literal">JMenu</tt>
  component.
  <tt class="literal">JPopupMenu</tt> uses a
  <tt class="literal">SingleSelectionModel</tt> to maintain its selection
  state.</p>
<a name="INDEX-2454"></a>
<a name="INDEX-2455"></a>
<a name="INDEX-2456"></a>
<p>  After you create a <tt class="literal">JPopupMenu</tt> object, you can 
  add items to it
  with the <tt class="literal">add()</tt> and
  <tt class="literal">addSeparator()</tt> methods.  The
  <tt class="literal">java.awt.event.ActionListener</tt> of a menu item is
  notified when that item is selected.  After adding items to the
  menu, you can pop it up at a specified location with the
  <tt class="literal">show()</tt> method.  This is usually done only after
  calling the <tt class="literal">isPopupTrigger()</tt> method of a
  <tt class="literal">java.awt.event.MouseEvent</tt> object.  The menu 
  automatically pops itself down when the user selects an item or stops
  interacting with it.
  Call <tt class="literal">setLightWeightPopupEnabled()</tt> to specify
  whether the popup should use a lightweight window or a heavyweight
  native window.  Call the static
  <tt class="literal">setDefaultLightWeightPopupEnabled()</tt> to specify a
  default behavior for all popup menus.</p>
<a name="INDEX-2457"></a>
<a name="INDEX-2458"></a>
<a name="INDEX-2459"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JPopupMenu</b> extends JComponent implements Accessible, MenuElement {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JPopupMenu</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JPopupMenu</b> (String <i class="parameter">label</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">getDefaultLightWeightPopupEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setDefaultLightWeightPopupEnabled</b> (boolean <i class="parameter">aFlag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addPopupMenuListener</b> (javax.swing.event.PopupMenuListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removePopupMenuListener</b> (javax.swing.event.PopupMenuListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJPopupMenu</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderPainted</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBorderPainted</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponent</b> ();</td><td align="right"><i> Implements:MenuElement default:JPopupMenu</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getInvoker</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setInvoker</b> (Component <i class="parameter">invoker</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getLabel</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLabel</b> (String <i class="parameter">label</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLightWeightPopupEnabled</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLightWeightPopupEnabled</b> (boolean <i class="parameter">aFlag</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getMargin</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public SingleSelectionModel <b class="function">getSelectionModel</b> ();</td><td align="right"><i> default:DefaultSingleSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionModel</b> (SingleSelectionModel <i class="parameter">model</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuElement[ ] <b class="function">getSubElements</b> ();</td><td align="right"><i> Implements:MenuElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.PopupMenuUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.PopupMenuUI <i class="parameter">ui</i>);</td><td align="right"><i> bound expert hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"PopupMenuUI"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isVisible</b> ();</td><td align="right"><i> Overrides:Component default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVisible</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuItem <b class="function">add</b> (Action <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuItem <b class="function">add</b> (JMenuItem <i class="parameter">menuItem</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuItem <b class="function">add</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSeparator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponentAtIndex</b> (int <i class="parameter">i</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getComponentIndex</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insert</b> (Action <i class="parameter">a</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insert</b> (Component <i class="parameter">component</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">pack</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPopupSize</b> (java.awt.Dimension <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPopupSize</b> (int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelected</b> (Component <i class="parameter">sel</i>);</td><td align="right"><i> expert hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">show</b> (Component <i class="parameter">invoker</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJPopupMenu</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MenuElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponent</b> ();</td><td align="right"><i> default:JPopupMenu</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuElement[ ] <b class="function">getSubElements</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">menuSelectionChanged</b> (boolean <i class="parameter">isIncluded</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">processKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>, MenuElement[ ] <i class="parameter">path</i>, MenuSelectionManager <i class="parameter">manager</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">processMouseEvent</b> (java.awt.event.MouseEvent <i class="parameter">event</i>, MenuElement[ ] <i class="parameter">path</i>, MenuSelectionManager <i class="parameter">manager</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">paintBorder</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Component</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLocation</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.beans.PropertyChangeListener <b class="function">createActionChangeListener</b> (JMenuItem <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">firePopupMenuCanceled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">firePopupMenuWillBecomeInvisible</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">firePopupMenuWillBecomeVisible</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JPopupMenu(Accessible,MenuElement)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JMenu.createWinListener(), JMenu.WinListener.WinListener()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JMenu.getPopupMenu()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JPopupMenu.Separator</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<p>  This inner class is a <tt class="literal">JSeparator</tt> component
  customized for use in <tt class="literal">JPopupMenu</tt> components.  The
  <tt class="literal">addSeparator()</tt> method of
  <tt class="literal">JPopupMenu</tt> returns an instance of this class.  
  This class is a trivial subclass of <tt class="literal">JSeparator</tt> that
  does nothing except to override the UI delegate class name and ensure
  that the separator is never vertical.
  Application-level code never needs to use this class.</p>
<a name="INDEX-2460"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">JPopupMenu.Separator</b> extends JSeparator {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Separator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JSeparator</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JProgressBar</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(value) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2461"></a>
<p> 
  This class implements a progress bar: a component that graphically
  displays a non-adjustable integer value.  It is typically used to
  display a program's progress on some time consuming task, but can also
  be used to simulate the display of a graphic equalizer, for example.
  <tt class="literal">ProgressMonitor</tt> is a useful class that displays a
  <tt class="literal">JProgressBar</tt> in a dialog box.</p>
<a name="INDEX-2462"></a>
<p>  Like <tt class="literal">JScrollBar</tt> and <tt class="literal">JSlider</tt>,
  <tt class="literal">JProgressBar</tt> uses a
  <tt class="literal">BoundedRangeModel</tt> to maintain its state.
  The <tt class="literal">value</tt> property is the most important; it
  specifies the currently displayed value.
  <tt class="literal">JProgressBar</tt> fires a
  <tt class="literal">javax.swing.event.ChangeEvent</tt> when its
  <tt class="literal">value</tt> property changes.  <tt class="literal">value</tt>
  must be between the <tt class="literal">minimum</tt> and
  <tt class="literal">maximum</tt> values.  The <tt class="literal">orientation</tt>
  property should be one of the <tt class="literal">HORIZONTAL</tt> or
  <tt class="literal">VERTICAL</tt> constants defined by
  <tt class="literal">SwingConstants</tt>.  Set the
  <tt class="literal">borderPainted</tt> property to <tt class="literal">false</tt>
  if you do not want the <tt class="literal">JProgressBar</tt> to display a
  border around itself.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JProgressBar</b> extends JComponent implements Accessible, SwingConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JProgressBar</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JProgressBar</b> (BoundedRangeModel <i class="parameter">newModel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JProgressBar</b> (int <i class="parameter">orient</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JProgressBar</b> (int <i class="parameter">min</i>, int <i class="parameter">max</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JProgressBar</b> (int <i class="parameter">orient</i>, int <i class="parameter">min</i>, int <i class="parameter">max</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJProgressBar expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderPainted</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBorderPainted</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaximum</b> ();</td><td align="right"><i> default:100</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMaximum</b> (int <i class="parameter">n</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinimum</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMinimum</b> (int <i class="parameter">n</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public BoundedRangeModel <b class="function">getModel</b> ();</td><td align="right"><i> default:DefaultBoundedRangeModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModel</b> (BoundedRangeModel <i class="parameter">newModel</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getOrientation</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setOrientation</b> (int <i class="parameter">newOrientation</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double <b class="function">getPercentComplete</b> ();</td><td align="right"><i> default:0.0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getString</b> ();</td><td align="right"><i> default:"0%"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setString</b> (String <i class="parameter">s</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isStringPainted</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setStringPainted</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.ProgressBarUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.ProgressBarUI <i class="parameter">ui</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"ProgressBarUI" expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getValue</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValue</b> (int <i class="parameter">n</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJProgressBar expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">paintBorder</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.ChangeListener <b class="function">createChangeListener</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireStateChanged</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.event.ChangeEvent <b class="function">changeEvent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.ChangeListener <b class="function">changeListener</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected BoundedRangeModel <b class="function">model</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">orientation</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">paintBorder</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">paintString</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">progressString</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JProgressBar(Accessible,SwingConstants)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JRadioButton</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(action,value) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2463"></a>
<a name="INDEX-2464"></a>
<a name="INDEX-2465"></a>
<p> 
  This class implements a radio button: a toggle button with
  default graphics that indicate mutually exclusive behavior.
  Because <tt class="literal">JRadioButton</tt> supplies its own default and
  selected icons, you typically do not use the constructors that take
  <tt class="literal">Icon</tt> arguments.  The selection state of a
  <tt class="literal">JRadioButton</tt> is stored in a 
  <tt class="literal">JToggleButton.ToggleButtonModel</tt> object by default.
  The initial selection state can be specified in the call to the
  constructor. The current state can be set with
  <tt class="literal">setSelected()</tt> and 
  queried with <tt class="literal">isSelected()</tt>.</p>
<a name="INDEX-2466"></a>
<p>  The default graphics of the <tt class="literal">JRadioButton</tt> are
  designed to indicate to the user that the button represents one of a
  group of mutually exclusive choices.  (The name "radio button" refers
  to the mechanical station-preset buttons on old-style car
  radios: only one button could be pressed at a time.)
  <tt class="literal">JRadioButton</tt> does not implement or enforce mutual
  exclusion; this is done by adding <tt class="literal">JRadioButton</tt>
  components to a <tt class="literal">ButtonGroup</tt> object.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JRadioButton</b> extends JToggleButton implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButton</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButton</b> (Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButton</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButton</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButton</b> (Icon <i class="parameter">icon</i>, boolean <i class="parameter">selected</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButton</b> (String <i class="parameter">text</i>, boolean <i class="parameter">selected</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButton</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>, boolean <i class="parameter">selected</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJRadioButton expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JToggleButton default:"RadioButtonUI" expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJRadioButton expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JToggleButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JToggleButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->AbstractButton(java.awt.ItemSelectable,SwingConstants)-->JToggleButton(Accessible)-->JRadioButton(Accessible)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JRadioButtonMenuItem</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(action,value) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2467"></a>
<a name="INDEX-2468"></a>
<a name="INDEX-2469"></a>
<p>  This class implements a radio button that appears within a pulldown or
  popup menu.  Its use is similar to that of
  <tt class="literal">JRadioButton</tt>. Use <tt class="literal">isSelected()</tt>
  to query the selection state of the menu
  item and <tt class="literal">setSelected()</tt> to select or deselect
  the item.  By default, the selection state is stored in a
  <tt class="literal">JToggleButton.ToggleButtonModel</tt> object.
  Note that <tt class="literal">JRadioButtonMenuItem</tt>, like
  <tt class="literal">JRadioButton</tt>, does not implement mutually exclusive
  selection behavior on its own.  Each
  <tt class="literal">JRadioButtonMenuItem</tt> in a mutually exclusive
  selection group must be added to a corresponding
  <tt class="literal">ButtonGroup</tt> object.  It is this
  <tt class="literal">ButtonGroup</tt> that enforces mutual exclusion.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JRadioButtonMenuItem</b> extends JMenuItem implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButtonMenuItem</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButtonMenuItem</b> (Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButtonMenuItem</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButtonMenuItem</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButtonMenuItem</b> (Icon <i class="parameter">icon</i>, boolean <i class="parameter">selected</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButtonMenuItem</b> (String <i class="parameter">text</i>, boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRadioButtonMenuItem</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>, boolean <i class="parameter">selected</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJRadioButtonMenuItem</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JMenuItem</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJRadioButtonMenuItem</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JMenuItem</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">requestFocus</b> ();</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->AbstractButton(java.awt.ItemSelectable,SwingConstants)-->JMenuItem(Accessible,MenuElement)-->JRadioButtonMenuItem(Accessible)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JRootPane</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2470"></a>
<p> 
  This component is used internally by all the top-level Swing
  containers: <tt class="literal">JWindow</tt>, <tt class="literal">JFrame</tt>,
  <tt class="literal">JDialog</tt>, <tt class="literal">JApplet</tt>, and
  <tt class="literal">JInternalFrame</tt>.  Most applications can simply use
  these top-level containers; they never need to use
  <tt class="literal">JRootPane</tt> directly.</p>
<a name="INDEX-2471"></a>
<p>
<tt class="literal">JRootPane</tt> is a container that manages a fixed
  hierarchy of children, including a content pane and an optional
  menubar.  You cannot add children directly to a
  <tt class="literal">JRootPane</tt>; instead, you must add them to the
  container returned by its <tt class="literal">getContentPane()</tt> method.
  Each of the top-level Swing containers that uses a
  <tt class="literal">JRootPane</tt> also provides a
  <tt class="literal">getContentPane()</tt> method that returns the content
  pane of its <tt class="literal">JRootPane</tt>.  Similarly, to add a
  menubar to a <tt class="literal">JRootPane</tt> or top-level container
  that uses <tt class="literal">JRootPane</tt>, you can use the
  <tt class="literal">setJMenuBar()</tt> method.  <tt class="literal">JRootPane</tt>
  has a custom layout manager that manages its various children.  You
  should not try to set your own layout manager on a
  <tt class="literal">JRootPane</tt>--instead, set it on the content pane.</p>
<a name="INDEX-2472"></a>
<p>  The content pane and menubar are not actually direct children of the
  <tt class="literal">JRootPane</tt>.  Instead, they are children of a
  <tt class="literal">JLayeredPane</tt> that is itself a child of the
  <tt class="literal">JRootPane</tt>.  The <tt class="literal">JLayeredPane</tt> of
  a <tt class="literal">JRootPane</tt> provides the layering features required
  for Swing to implement modal dialogs, floating palettes, popup menus,
  tooltips, and drag-and-drop-style graphical effects.  These features
  are used internally by Swing; only very advanced applications 
  need to use them directly.</p>
<p>  In addition to its <tt class="literal">JLayeredPane</tt>, a
  <tt class="literal">JRootPane</tt> also contains another child, known as the
  glass pane.  This child fills the entire
  <tt class="literal">JRootPane</tt> and sits on top of the
  <tt class="literal">JLayeredPane</tt>.  The glass pane either must be hidden or
  must be a transparent component.  Otherwise it obscures all other contents
  of the <tt class="literal">JRootPane</tt>.  The glass pane can be used both to
  intercept mouse events destined for other components within the
  <tt class="literal">JRootPane</tt> and for the temporary
  display of graphics on top of the components of a
  <tt class="literal">JRootPane</tt>.  Again, these glass pane features are
  used internally by Swing, and only advanced applications 
  need to use them directly.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JRootPane</b> extends JComponent implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JRootPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJRootPane</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getContentPane</b> ();</td><td align="right"><i> default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContentPane</b> (Container <i class="parameter">content</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JButton <b class="function">getDefaultButton</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDefaultButton</b> (JButton <i class="parameter">defaultButton</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isFocusCycleRoot</b> ();</td><td align="right"><i> Overrides:JComponent constant default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getGlassPane</b> ();</td><td align="right"><i> default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGlassPane</b> (Component <i class="parameter">glass</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JMenuBar <b class="function">getJMenuBar</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setJMenuBar</b> (JMenuBar <i class="parameter">menu</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JLayeredPane <b class="function">getLayeredPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayeredPane</b> (JLayeredPane <i class="parameter">layered</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isValidateRoot</b> ();</td><td align="right"><i> Overrides:JComponent constant default:true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJRootPane</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">findComponentAt</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">addImpl</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Container <b class="function">createContentPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">createGlassPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JLayeredPane <b class="function">createLayeredPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.LayoutManager <b class="function">createRootLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Container <b class="function">contentPane</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JButton <b class="function">defaultButton</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JRootPane.DefaultAction <b class="function">defaultPressAction</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JRootPane.DefaultAction <b class="function">defaultReleaseAction</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">glassPane</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JLayeredPane <b class="function">layeredPane</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JMenuBar <b class="function">menuBar</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public JMenuBar <b class="function">getMenuBar</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setMenuBar</b> (JMenuBar <i class="parameter">menu</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JRootPane(Accessible)</tt>
</p>

<p>
<span class="refsect1">Passed To: </span><tt class="literal">JApplet.setRootPane(), JDialog.setRootPane(), JFrame.setRootPane(), JInternalFrame.setRootPane(), JWindow.setRootPane()</tt>
</p>

<p>
<span class="refsect1">Returned By: </span><tt class="literal">JApplet.{createRootPane(), getRootPane()}, JComponent.getRootPane(), JDialog.{createRootPane(), getRootPane()}, JFrame.{createRootPane(), getRootPane()}, JInternalFrame.{createRootPane(), getRootPane()}, JWindow.{createRootPane(), getRootPane()}, RootPaneContainer.getRootPane(), SwingUtilities.getRootPane()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JApplet.rootPane, JDialog.rootPane, JFrame.rootPane, JInternalFrame.rootPane, JWindow.rootPane</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JRootPane.RootLayout</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable layout manager</i></b></font></td>
</tr>
</table>
<a name="INDEX-2473"></a>
<p>  This protected inner class is a custom
  <tt class="literal">java.awt.LayoutManager</tt> that is responsible for the
  layout of the children of a <tt class="literal">JRootPane</tt>.
  Application-level code never needs to use this class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">JRootPane.RootLayout</b> implements java.awt.LayoutManager2, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">RootLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addLayoutComponent</b> (String <i class="parameter">name</i>, Component <i class="parameter">comp</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">layoutContainer</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">minimumLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">preferredLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeLayoutComponent</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addLayoutComponent</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getLayoutAlignmentX</b> (Container <i class="parameter">target</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getLayoutAlignmentY</b> (Container <i class="parameter">target</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">invalidateLayout</b> (Container <i class="parameter">target</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">maximumLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JScrollBar</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(value) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2474"></a>
<a name="INDEX-2475"></a>
<p>  This class implements a scrollbar component that can be used to scroll
  the visible region of some entity, within a maximum and a minimum range.  The
  <tt class="literal">minimum</tt> and <tt class="literal">maximum</tt> properties
  specify the range within which scrolling takes place.  The
  <tt class="literal">value</tt> property specifies the current value of the
  scrollbar--the beginning of the visible region.  
  <tt class="literal">visibleAmount</tt> specifies how much of the range
  is visible at once
  and also specifies the size of the displayed thumb, or knob,
  of the scrollbar.  The values of these properties are all stored in a
  <tt class="literal">BoundedRangeModel</tt> object.
  <tt class="literal">JScrollBar</tt> uses
  <tt class="literal">DefaultBoundedRangeModel</tt> by default.
  (The <tt class="literal">visibleAmount</tt> property corresponds to
  the <tt class="literal">extent</tt> property of
  <tt class="literal">BoundedRangeModel</tt>.) 
  The <tt class="literal">orientation</tt> property specifies whether the
  <tt class="literal">JScrollBar</tt> is a horizontal or a vertical scrollbar.
  Use either the <tt class="literal">HORIZONTAL</tt> or
  the <tt class="literal">VERTICAL</tt> constant defined by the
  <tt class="literal">SwingConstants</tt> interface.  
  <tt class="literal">unitIncrement</tt> specifies the amount by which the
  scrollbar thumb should move when the user clicks on the arrows at
  either end of the scrollbar.  The default is 1.  The
  <tt class="literal">blockIncrement</tt> property specifies the amount that
  the scrollbar should move when the user scrolls a block at a time (how
  this is accomplished varies in different look-and-feels).</p>
<p>
<tt class="literal">JScrollBar</tt> fires a
  <tt class="literal">java.awt.event.AdjustmentEvent</tt> when one of the
  <tt class="literal">value</tt>, 
  <tt class="literal">minimum</tt>, <tt class="literal">maximum</tt>,
  <tt class="literal">visibleAmount</tt>, or
  <tt class="literal">valueIsAdjusting</tt> properties changes.
  Some programs may prefer to instead handle the
  <tt class="literal">javax.swing.event.ChangeEvent</tt> events generated
  by the model of the <tt class="literal">JScrollBar</tt>.  In either case, if
  the <tt class="literal">valueIsAdjusting</tt> property of the
  <tt class="literal">JScrollBar</tt> or its model is
  <tt class="literal">true</tt>, the change is one in a series of
  changes.  Listeners that prefer not to track these transient changes
  can ignore events when <tt class="literal">valueIsAdjusting</tt> is
  <tt class="literal">true</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JScrollBar</b> extends JComponent implements Accessible, java.awt.Adjustable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JScrollBar</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JScrollBar</b> (int <i class="parameter">orientation</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JScrollBar</b> (int <i class="parameter">orientation</i>, int <i class="parameter">value</i>, int <i class="parameter">extent</i>, int <i class="parameter">min</i>, int <i class="parameter">max</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addAdjustmentListener</b> (java.awt.event.AdjustmentListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:Adjustable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAdjustmentListener</b> (java.awt.event.AdjustmentListener <i class="parameter">l</i>);</td><td align="right"><i> Implements:Adjustable</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJScrollBar</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getBlockIncrement</b> ();</td><td align="right"><i> Implements:Adjustable default:10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getBlockIncrement</b> (int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBlockIncrement</b> (int <i class="parameter">blockIncrement</i>);</td><td align="right"><i> Implements:Adjustable bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaximum</b> ();</td><td align="right"><i> Implements:Adjustable default:100</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMaximum</b> (int <i class="parameter">maximum</i>);</td><td align="right"><i> Implements:Adjustable preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getMaximumSize</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinimum</b> ();</td><td align="right"><i> Implements:Adjustable default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMinimum</b> (int <i class="parameter">minimum</i>);</td><td align="right"><i> Implements:Adjustable preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getMinimumSize</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public BoundedRangeModel <b class="function">getModel</b> ();</td><td align="right"><i> default:DefaultBoundedRangeModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModel</b> (BoundedRangeModel <i class="parameter">newModel</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getOrientation</b> ();</td><td align="right"><i> Implements:Adjustable default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setOrientation</b> (int <i class="parameter">orientation</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.ScrollBarUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"ScrollBarUI"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getUnitIncrement</b> ();</td><td align="right"><i> Implements:Adjustable default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getUnitIncrement</b> (int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUnitIncrement</b> (int <i class="parameter">unitIncrement</i>);</td><td align="right"><i> Implements:Adjustable bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getValue</b> ();</td><td align="right"><i> Implements:Adjustable default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValue</b> (int <i class="parameter">value</i>);</td><td align="right"><i> Implements:Adjustable preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getValueIsAdjusting</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValueIsAdjusting</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getVisibleAmount</b> ();</td><td align="right"><i> Implements:Adjustable default:10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVisibleAmount</b> (int <i class="parameter">extent</i>);</td><td align="right"><i> Implements:Adjustable preferred</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValues</b> (int <i class="parameter">newValue</i>, int <i class="parameter">newExtent</i>, int <i class="parameter">newMin</i>, int <i class="parameter">newMax</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJScrollBar</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEnabled</b> (boolean <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireAdjustmentValueChanged</b> (int <i class="parameter">id</i>, int <i class="parameter">type</i>, int <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">blockIncrement</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected BoundedRangeModel <b class="function">model</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">orientation</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">unitIncrement</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JScrollBar(Accessible,java.awt.Adjustable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">JScrollPane.ScrollBar</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JScrollPane.{setHorizontalScrollBar(), setVerticalScrollBar()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JScrollPane.{createHorizontalScrollBar(), createVerticalScrollBar(), getHorizontalScrollBar(), getVerticalScrollBar()}, ScrollPaneLayout.{getHorizontalScrollBar(), getVerticalScrollBar()}</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JScrollPane.{horizontalScrollBar, verticalScrollBar}, ScrollPaneLayout.{hsb, vsb}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JScrollPane</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component bean container</i></b></font></td>
</tr>
</table>
<a name="INDEX-2476"></a>
<a name="INDEX-2477"></a>
<p>  This class is a container that allows a child component to be scrolled
  horizontally and vertically.  The component to be scrolled is not a
  direct child of the <tt class="literal">JScrollPane</tt>, so it must not be
  added directly with the <tt class="literal">add()</tt> method.  Instead,  it
  is a child of a <tt class="literal">JViewport</tt> contained within the
  <tt class="literal">JScrollPane</tt>.  You specify the component to be
  scrolled by passing it to the <tt class="literal">JScrollPane()</tt>
  constructor or to the <tt class="literal">setViewportView()</tt> method.  
  Any type of component can be used within a
  <tt class="literal">JScrollPane</tt>, but components that implement the
  <tt class="literal">Scrollable</tt> interface work best.
  The <tt class="literal">horizontalScrollBarPolicy</tt> and
  <tt class="literal">verticalScrollBarPolicy</tt> properties control the
  policy for displaying scrollbars.  The legal values are the various
  <tt class="literal">ALWAYS</tt>, <tt class="literal">AS_NEEDED</tt>, and
  <tt class="literal">NEVER</tt> constants defined by the
  <tt class="literal">ScrollPaneConstants</tt> interface.  Another useful
  property is <tt class="literal">viewportBorder</tt>, which allows you to
  specify a border to appear around the <tt class="literal">JViewport</tt>
  that contains the component being scrolled.</p>
<a name="INDEX-2478"></a>
<p>  In addition to the main scrolled component,
  <tt class="literal">JScrollPane</tt> supports column header and row
  header components.  The column header appears above the main
  scrolling component and scrolls horizontally, but not vertically, so
  that it is always visible at the top of the
  <tt class="literal">JScrollPane</tt>.  Similarly, the row header component
  scrolls vertically but not horizontally, so it is always visible at
  the left of the <tt class="literal">JScrollPane</tt>.  Specify the row and
  column header components with <tt class="literal">setColumnHeaderView()</tt>
  and <tt class="literal">setRowHeaderView()</tt>.
  The <tt class="literal">JScrollPane</tt> can also display arbitrary
  components in each of its four corners.  Use
  <tt class="literal">setCorner()</tt> to specify a component for a corner.
  The <tt class="literal">ScrollPaneConstants</tt> interface defines constants
  that specify which corner a component should appear in.  Note that the
  space available in the corners of a <tt class="literal">JScrollPane</tt> is
  determined by the width of the scrollbars and the widths of the
  column and row headers, if any.
  The layout management of the scrollable
  <tt class="literal">JViewport</tt>, the scrollbars, the column and row
  headers, and the corners is provided by the
  <tt class="literal">ScrollPaneLayout</tt> class, a specialized
  <tt class="literal">java.awt.LayoutManager</tt>.</p>
<a name="INDEX-2479"></a>
<a name="INDEX-2480"></a>
<a name="INDEX-2481"></a>
<p>  See also the <tt class="literal">JScrollBar</tt> and
  <tt class="literal">JViewport</tt> components, the
  <tt class="literal">ScrollPaneLayout</tt> layout manager, and the
  <tt class="literal">Scrollable</tt> and
  <tt class="literal">ScrollPaneConstants</tt> interfaces.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JScrollPane</b> extends JComponent implements Accessible, ScrollPaneConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JScrollPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JScrollPane</b> (Component <i class="parameter">view</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JScrollPane</b> (int <i class="parameter">vsbPolicy</i>, int <i class="parameter">hsbPolicy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JScrollPane</b> (Component <i class="parameter">view</i>, int <i class="parameter">vsbPolicy</i>, int <i class="parameter">hsbPolicy</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJScrollPane</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JViewport <b class="function">getColumnHeader</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setColumnHeader</b> (JViewport <i class="parameter">columnHeader</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JScrollBar <b class="function">getHorizontalScrollBar</b> ();</td><td align="right"><i> default:ScrollBar</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setHorizontalScrollBar</b> (JScrollBar <i class="parameter">horizontalScrollBar</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getHorizontalScrollBarPolicy</b> ();</td><td align="right"><i> default:30</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setHorizontalScrollBarPolicy</b> (int <i class="parameter">policy</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayout</b> (java.awt.LayoutManager <i class="parameter">layout</i>);</td><td align="right"><i> Overrides:Container hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isOpaque</b> ();</td><td align="right"><i> Overrides:JComponent default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JViewport <b class="function">getRowHeader</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRowHeader</b> (JViewport <i class="parameter">rowHeader</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.ScrollPaneUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.ScrollPaneUI <i class="parameter">ui</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"ScrollPaneUI" hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isValidateRoot</b> ();</td><td align="right"><i> Overrides:JComponent constant default:true hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JScrollBar <b class="function">getVerticalScrollBar</b> ();</td><td align="right"><i> default:ScrollBar</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVerticalScrollBar</b> (JScrollBar <i class="parameter">verticalScrollBar</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getVerticalScrollBarPolicy</b> ();</td><td align="right"><i> default:20</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVerticalScrollBarPolicy</b> (int <i class="parameter">policy</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JViewport <b class="function">getViewport</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setViewport</b> (JViewport <i class="parameter">viewport</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.border.Border <b class="function">getViewportBorder</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setViewportBorder</b> (javax.swing.border.Border <i class="parameter">viewportBorder</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getViewportBorderBounds</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JScrollBar <b class="function">createHorizontalScrollBar</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JScrollBar <b class="function">createVerticalScrollBar</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getCorner</b> (String <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setColumnHeaderView</b> (Component <i class="parameter">view</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCorner</b> (String <i class="parameter">key</i>, Component <i class="parameter">corner</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRowHeaderView</b> (Component <i class="parameter">view</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setViewportView</b> (Component <i class="parameter">view</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJScrollPane</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JViewport <b class="function">createViewport</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JViewport <b class="function">columnHeader</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JScrollBar <b class="function">horizontalScrollBar</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">horizontalScrollBarPolicy</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">lowerLeft</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">lowerRight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JViewport <b class="function">rowHeader</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">upperLeft</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">upperRight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JScrollBar <b class="function">verticalScrollBar</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">verticalScrollBarPolicy</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JViewport <b class="function">viewport</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JScrollPane(Accessible,ScrollPaneConstants)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">ScrollPaneLayout.{getViewportBorderBounds(), syncWithScrollPane()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTable.createScrollPaneForTable()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JScrollPane.ScrollBar</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(action) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2482"></a>
<p>  This protected inner class is a trivial subclass of
  <tt class="literal">JScrollBar</tt> that is used for the scrollbars of a
  <tt class="literal">JScrollPane</tt>.  This subclass exists for two simple
  reasons: to implement the
  <tt class="literal">javax.swing.plaf.UIResource</tt> interface and to make
  the scrollbars work with the <tt class="literal">Scrollable</tt> interface.
  Application-level code never needs to use this class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">JScrollPane.ScrollBar</b> extends JScrollBar implements javax.swing.plaf.UIResource {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ScrollBar</b> (int <i class="parameter">orientation</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBlockIncrement</b> (int <i class="parameter">blockIncrement</i>);</td><td align="right"><i> Overrides:JScrollBar</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUnitIncrement</b> (int <i class="parameter">unitIncrement</i>);</td><td align="right"><i> Overrides:JScrollBar</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JScrollBar</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getBlockIncrement</b> (int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getUnitIncrement</b> (int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JSeparator</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2483"></a>
<p>  This simple component draws a horizontal or vertical line that is as
  wide or as tall as the component itself.  The
  <tt class="literal">orientation</tt> property is the only property of
  interest.  It should be <tt class="literal">SwingConstants.HORIZONTAL</tt>
  or <tt class="literal">SwingConstants.VERTICAL</tt>.  There are no
  properties controlling the thickness, color, or other attributes of the
  <tt class="literal">JSeparator</tt>.
  Separator objects are commonly used in <tt class="literal">JPopupMenu</tt>
  and <tt class="literal">JToolBar</tt> components.  Note, however, that these
  components define <tt class="literal">addSeparator()</tt> methods and
  implement custom subclasses of <tt class="literal">JSeparator</tt>.  These
  custom subclasses have their own UI delegate subclasses, which allows
  them to provide a visual appearance precisely tailored for menus and
  toolbars.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JSeparator</b> extends JComponent implements Accessible, SwingConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JSeparator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JSeparator</b> (int <i class="parameter">orientation</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJSeparator</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isFocusTraversable</b> ();</td><td align="right"><i> Overrides:JComponent constant default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getOrientation</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setOrientation</b> (int <i class="parameter">orientation</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.SeparatorUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.SeparatorUI <i class="parameter">ui</i>);</td><td align="right"><i> bound expert hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"SeparatorUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJSeparator</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JSeparator(Accessible,SwingConstants)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">JPopupMenu.Separator, JToolBar.Separator</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JSlider</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(value) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2484"></a>
<p> 
  This class implements a component that allows the user to drag a
  knob, or pointer, in order to graphically adjust an integer value.  The
  <tt class="literal">minimum</tt> and <tt class="literal">maximum</tt> properties
  specify the range of the slider, and the <tt class="literal">value</tt>
  property specifies the current value.  <tt class="literal">extent</tt>
  specifies the width of the knob and also an adjustment increment.
  The values of these properties are maintained by a
  <tt class="literal">BoundedRangeModel</tt> object.  By default,
  <tt class="literal">JSlider</tt> uses a
  <tt class="literal">DefaultBoundedRangeModel</tt> object.
  <tt class="literal">orientation</tt> specifies the orientation of the
  slider; it should be one of the <tt class="literal">SwingConstants</tt>
  values <tt class="literal">HORIZONTAL</tt> or <tt class="literal">VERTICAL</tt>.
  If the <tt class="literal">inverted</tt> property is
  <tt class="literal">true</tt>, the range is inverted to run from 
  right to left or from top to bottom.</p>
<p>  A <tt class="literal">JSlider</tt> can display optional tick marks and
  labels along its length.  The <tt class="literal">paintTicks</tt> and
  <tt class="literal">paintLabels</tt> properties specify whether they should
  be displayed.  <tt class="literal">majorTickSpacing</tt> and
  <tt class="literal">minorTickSpacing</tt> specify the spacing of long and
  short tick marks.  Note that these spacings are measured in the
  coordinate space defined by the <tt class="literal">JSlider</tt> minimum
  and maximum value; they are not pixel spacings.  If the
  <tt class="literal">snapToTicks</tt> property is set
  <tt class="literal">true</tt>, the user can only adjust the
  <tt class="literal">value</tt> property to a value at which a tick mark
  appears. 
  If you set <tt class="literal">paintLabels</tt> and
  <tt class="literal">majorTickSpacing</tt>, the <tt class="literal">JSlider</tt>
  automatically
  displays a numeric label for each major tick mark.  You can call
  <tt class="literal">createStandardLabels()</tt> to force this behavior, even
  when tick marks are not displayed.  You can also specify custom labels
  by setting the <tt class="literal">labelTable</tt> property to a
  <tt class="literal">java.util.Dictionary</tt> that maps
  <tt class="literal">Integer</tt> coordinates to
  <tt class="literal">JComponent</tt> labels.</p>
<p>  A <tt class="literal">JSlider</tt> fires a
  <tt class="literal">javax.swing.event.ChangeEvent</tt> when one of its
  <tt class="literal">value</tt>,
  <tt class="literal">maximum</tt>, <tt class="literal">minimum</tt>,
  <tt class="literal">extent</tt>, or <tt class="literal">valueIsAdjusting</tt>
  properties changes.  If <tt class="literal">valueIsAdjusting</tt> is
  <tt class="literal">true</tt> when an event is fired, it means that the
  event is one of a series of changes.  Listeners that do not want to
  track these rapid-fire transient changes can ignore them.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JSlider</b> extends JComponent implements Accessible, SwingConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JSlider</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JSlider</b> (BoundedRangeModel <i class="parameter">brm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JSlider</b> (int <i class="parameter">orientation</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JSlider</b> (int <i class="parameter">min</i>, int <i class="parameter">max</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JSlider</b> (int <i class="parameter">min</i>, int <i class="parameter">max</i>, int <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JSlider</b> (int <i class="parameter">orientation</i>, int <i class="parameter">min</i>, int <i class="parameter">max</i>, int <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJSlider</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getExtent</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setExtent</b> (int <i class="parameter">extent</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getInverted</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setInverted</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Dictionary <b class="function">getLabelTable</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLabelTable</b> (java.util.Dictionary <i class="parameter">labels</i>);</td><td align="right"><i> bound hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMajorTickSpacing</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMajorTickSpacing</b> (int <i class="parameter">n</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaximum</b> ();</td><td align="right"><i> default:100</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMaximum</b> (int <i class="parameter">maximum</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinimum</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMinimum</b> (int <i class="parameter">minimum</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinorTickSpacing</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMinorTickSpacing</b> (int <i class="parameter">n</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public BoundedRangeModel <b class="function">getModel</b> ();</td><td align="right"><i> default:DefaultBoundedRangeModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModel</b> (BoundedRangeModel <i class="parameter">newModel</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getOrientation</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setOrientation</b> (int <i class="parameter">orientation</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getPaintLabels</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPaintLabels</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getPaintTicks</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPaintTicks</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getPaintTrack</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPaintTrack</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getSnapToTicks</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSnapToTicks</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.SliderUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.SliderUI <i class="parameter">ui</i>);</td><td align="right"><i> bound hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"SliderUI"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getValue</b> ();</td><td align="right"><i> default:50</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValue</b> (int <i class="parameter">n</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getValueIsAdjusting</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValueIsAdjusting</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Hashtable <b class="function">createStandardLabels</b> (int <i class="parameter">increment</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Hashtable <b class="function">createStandardLabels</b> (int <i class="parameter">increment</i>, int <i class="parameter">start</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJSlider</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.ChangeListener <b class="function">createChangeListener</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireStateChanged</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">updateLabelUIs</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.event.ChangeEvent <b class="function">changeEvent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.ChangeListener <b class="function">changeListener</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">majorTickSpacing</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">minorTickSpacing</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">orientation</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected BoundedRangeModel <b class="function">sliderModel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">snapToTicks</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JSlider(Accessible,SwingConstants)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JSplitPane</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(value) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2485"></a>
<p>  This class is a container that splits itself horizontally or
  vertically to display two children.  The orientation of the pane is
  specified by the <tt class="literal">orientation</tt> property, which
  should be set to either the <tt class="literal">HORIZONTAL_SPLIT</tt> or
  <tt class="literal">VERTICAL_SPLIT</tt> constant.  The two children are
  specified by a pair of properties that depend on the orientation of
  the <tt class="literal">JSplitPane</tt>.  If the orientation is
  <tt class="literal">HORIZONTAL_SPLIT</tt>, the children are specified
  with <tt class="literal">setLeftComponent()</tt> and
  <tt class="literal">setRightComponent()</tt>.  For a
  <tt class="literal">VERTICAL_SPLIT</tt><tt class="literal">JSplitPane</tt>, the
  children are specified with <tt class="literal">setTopComponent()</tt> and
  <tt class="literal">setBottomComponent()</tt>. 
  The position of the divider between the two panes of a
  <tt class="literal">JSplitPane</tt> can be set with
  <tt class="literal">setDividerLocation()</tt>.  The argument can be an
  integer that specifies a pixel position or a <tt class="literal">double</tt>
  between 0.0 and 1.0 that specifies a percentage of the size of the
  <tt class="literal">JSplitPane</tt>.</p>
<a name="INDEX-2486"></a>
<a name="INDEX-2487"></a>
<a name="INDEX-2488"></a>
<p>
<tt class="literal">JSplitPane</tt> allows the user to adjust the relative
  sizes of the two children by dragging the divider that appears between
  the children.  The adjustment is constrained, however, so that a child
  is never made smaller than its specified minimum size.  If the
  <tt class="literal">continuousLayout</tt> property is set to
  <tt class="literal">true</tt>, the children are resized
  continuously while the user drags the divider.  If this property is
  <tt class="literal">false</tt>, however, the child components are not
  resized until the user finishes the drag.
  Although the divider location of a
  <tt class="literal">JSplitPane</tt> can be thought of in terms of the
  <tt class="literal">BoundedRangeModel</tt>, the
  <tt class="literal">JSplitPane</tt> implementation does not use a separate
  model object.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JSplitPane</b> extends JComponent implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JSplitPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JSplitPane</b> (int <i class="parameter">newOrientation</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JSplitPane</b> (int <i class="parameter">newOrientation</i>, boolean <i class="parameter">newContinuousLayout</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JSplitPane</b> (int <i class="parameter">newOrientation</i>, Component <i class="parameter">newLeftComponent</i>, Component <i class="parameter">newRightComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JSplitPane</b> (int <i class="parameter">newOrientation</i>, boolean <i class="parameter">newContinuousLayout</i>, Component <i class="parameter">newLeftComponent</i>, Component <i class="parameter">newRightComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">BOTTOM</b> ;</td><td align="right"><i> ="bottom"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">CONTINUOUS_LAYOUT_PROPERTY</b> ;</td><td align="right"><i> ="continuousLayout"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">DIVIDER</b> ;</td><td align="right"><i> ="divider"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">DIVIDER_SIZE_PROPERTY</b> ;</td><td align="right"><i> ="dividerSize"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HORIZONTAL_SPLIT</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">LAST_DIVIDER_LOCATION_PROPERTY</b> ;</td><td align="right"><i> ="lastDividerLocation"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">LEFT</b> ;</td><td align="right"><i> ="left"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ONE_TOUCH_EXPANDABLE_PROPERTY</b> ;</td><td align="right"><i> ="oneTouchExpandable"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ORIENTATION_PROPERTY</b> ;</td><td align="right"><i> ="orientation"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">RIGHT</b> ;</td><td align="right"><i> ="right"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">TOP</b> ;</td><td align="right"><i> ="top"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VERTICAL_SPLIT</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJSplitPane expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getBottomComponent</b> ();</td><td align="right"><i> default:JButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBottomComponent</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isContinuousLayout</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContinuousLayout</b> (boolean <i class="parameter">newContinuousLayout</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDividerLocation</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDividerLocation</b> (int <i class="parameter">location</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDividerLocation</b> (double <i class="parameter">proportionalLocation</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDividerSize</b> ();</td><td align="right"><i> default:8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDividerSize</b> (int <i class="parameter">newSize</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLastDividerLocation</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLastDividerLocation</b> (int <i class="parameter">newLastLocation</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getLeftComponent</b> ();</td><td align="right"><i> default:JButton preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLeftComponent</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaximumDividerLocation</b> ();</td><td align="right"><i> default:93</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinimumDividerLocation</b> ();</td><td align="right"><i> default:93</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isOneTouchExpandable</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setOneTouchExpandable</b> (boolean <i class="parameter">newValue</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getOrientation</b> ();</td><td align="right"><i> default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setOrientation</b> (int <i class="parameter">orientation</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getRightComponent</b> ();</td><td align="right"><i> default:JButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRightComponent</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getTopComponent</b> ();</td><td align="right"><i> default:JButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTopComponent</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.SplitPaneUI <b class="function">getUI</b> ();</td><td align="right"><i> expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.SplitPaneUI <i class="parameter">ui</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"SplitPaneUI" expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isValidateRoot</b> ();</td><td align="right"><i> Overrides:JComponent constant default:true hidden</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">resetToPreferredSizes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJSplitPane expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">paintChildren</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (Component <i class="parameter">component</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAll</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">addImpl</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">continuousLayout</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">dividerSize</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">lastDividerLocation</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">leftComponent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">oneTouchExpandable</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">orientation</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">rightComponent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JSplitPane(Accessible)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.plaf.SplitPaneUI.{finishedPaintingChildren(), getDividerLocation(), getMaximumDividerLocation(), getMinimumDividerLocation(), resetToPreferredSizes(), setDividerLocation()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JTabbedPane</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(selection) swing component bean container</i></b></font></td>
</tr>
</table>
<a name="INDEX-2489"></a>
<p>
<tt class="literal">JTabbedPane</tt> is a container that can contain any
  number of children.  It displays one child at a time, but displays a
  tab for each child.  The user can click on these tabs to adjust the
  currently displayed child.    <tt class="literal">JTabbedPane</tt> uses a
  <tt class="literal">SingleSelectionModel</tt> to keep track of the currently
  selected and displayed child.
  By default, the tabs appear at the top of
  the <tt class="literal">JTabbedPane</tt>.  You can override this default,
  however, with <tt class="literal">setTabPlacement()</tt>.  The argument to
  this method should be one of the <tt class="literal">TOP</tt>,
  <tt class="literal">BOTTOM</tt>, <tt class="literal">LEFT</tt>, or
  <tt class="literal">RIGHT</tt> constants defined by the
  <tt class="literal">SwingConstants</tt> interface.</p>
<p>  Although you can add children to a <tt class="literal">JTabbedPane</tt>
  with the standard <tt class="literal">add()</tt> methods, this does not give
  you much flexibility in specifying the contents of the tab for that
  child.  Instead, <tt class="literal">JTabbedPane</tt> provides several
  <tt class="literal">addTab()</tt> methods that allow you to specify the
  child along with the <tt class="literal">String</tt>, <tt class="literal">Icon</tt>, 
  and tooltip text to use for its
  tab.  A corresponding <tt class="literal">insertTab()</tt> method allows you
  to specify a child, the contents of its tab, and the position of the
  tab within the list of tabs.  Use
  <tt class="literal">setSelectedComponent()</tt> or
  <tt class="literal">setSelectedIndex()</tt> to specify which child is
  currently displayed.
  <tt class="literal">setEnabledAt()</tt> allows you to enable or disable a
  tab, specified by its position within the list of tabs.
  <tt class="literal">setDisabledIconAt()</tt> allows you to specify an icon
  to display when a tab is disabled.  Various other methods whose names
  end with "At" allow you to alter properties of individual tabs,
  specified by position.</p>
<a name="INDEX-2490"></a>
<a name="INDEX-2491"></a>
<a name="INDEX-2492"></a>
<a name="INDEX-2493"></a>
<a name="INDEX-2494"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JTabbedPane</b> extends JComponent implements Accessible, Serializable, SwingConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTabbedPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTabbedPane</b> (int <i class="parameter">tabPlacement</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJTabbedPane</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public SingleSelectionModel <b class="function">getModel</b> ();</td><td align="right"><i> default:DefaultSingleSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModel</b> (SingleSelectionModel <i class="parameter">model</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getSelectedComponent</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedComponent</b> (Component <i class="parameter">c</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectedIndex</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedIndex</b> (int <i class="parameter">index</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getTabCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getTabPlacement</b> ();</td><td align="right"><i> default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTabPlacement</b> (int <i class="parameter">tabPlacement</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getTabRunCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.TabbedPaneUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.TabbedPaneUI <i class="parameter">ui</i>);</td><td align="right"><i> bound hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"TabbedPaneUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addTab</b> (String <i class="parameter">title</i>, Component <i class="parameter">component</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addTab</b> (String <i class="parameter">title</i>, Icon <i class="parameter">icon</i>, Component <i class="parameter">component</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addTab</b> (String <i class="parameter">title</i>, Icon <i class="parameter">icon</i>, Component <i class="parameter">component</i>, String <i class="parameter">tip</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getBackgroundAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getBoundsAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponentAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getDisabledIconAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getForegroundAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getIconAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getTitleAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">indexOfComponent</b> (Component <i class="parameter">component</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">indexOfTab</b> (Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">indexOfTab</b> (String <i class="parameter">title</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertTab</b> (String <i class="parameter">title</i>, Icon <i class="parameter">icon</i>, Component <i class="parameter">component</i>, String <i class="parameter">tip</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEnabledAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeTabAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBackgroundAt</b> (int <i class="parameter">index</i>, java.awt.Color <i class="parameter">background</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setComponentAt</b> (int <i class="parameter">index</i>, Component <i class="parameter">component</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDisabledIconAt</b> (int <i class="parameter">index</i>, Icon <i class="parameter">disabledIcon</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEnabledAt</b> (int <i class="parameter">index</i>, boolean <i class="parameter">enabled</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setForegroundAt</b> (int <i class="parameter">index</i>, java.awt.Color <i class="parameter">foreground</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setIconAt</b> (int <i class="parameter">index</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTitleAt</b> (int <i class="parameter">index</i>, String <i class="parameter">title</i>);</td><td align="right"><i> preferred</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJTabbedPane</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getToolTipText</b> (java.awt.event.MouseEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">add</b> (Component <i class="parameter">component</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (Component <i class="parameter">component</i>, Object <i class="parameter">constraints</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">add</b> (Component <i class="parameter">component</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">add</b> (String <i class="parameter">title</i>, Component <i class="parameter">component</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">add</b> (Component <i class="parameter">component</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (Component <i class="parameter">component</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeAll</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.ChangeListener <b class="function">createChangeListener</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireStateChanged</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.event.ChangeEvent <b class="function">changeEvent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.ChangeListener <b class="function">changeListener</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected SingleSelectionModel <b class="function">model</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">tabPlacement</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JTabbedPane(Accessible,Serializable,SwingConstants)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">javax.swing.plaf.TabbedPaneUI.{getTabBounds(), getTabRunCount(), tabForCoordinate()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JTabbedPane.ModelListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2495"></a>
<p> 
  This protected inner class is a trivial
  <tt class="literal">ChangeListener</tt> implementation used internally by
  <tt class="literal">JTabbedPane</tt> to listen for changes from its
  <tt class="literal">SingleSelectionModel</tt>.  Applications never need to
  use this class, and it probably should not have been made part of the
  public API.  If you want to use a different listener implementation,
  override the <tt class="literal">createChangeListener()</tt> method of
  <tt class="literal">JTabbedPane</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">JTabbedPane.ModelListener</b> implements javax.swing.event.ChangeListener, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">ModelListener</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ChangeListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">stateChanged</b> (javax.swing.event.ChangeEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JTable</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(selection) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2496"></a>
<a name="INDEX-2497"></a>
<p>
<tt class="literal">JTable</tt> is a powerful and complex Swing component
  for displaying and editing tabular data.  <tt class="literal">JTable</tt>
  relies on the auxiliary classes and interfaces in the
  <tt class="literal">javax.swing.table</tt> package.
  Two <tt class="literal">JTable</tt> constructors exist that make it
  easy to display tabular data that is stored in an
  <tt class="literal">Object[][]</tt> or in a <tt class="literal">Vector</tt> of
  rows, where each row is a <tt class="literal">Vector</tt> of cell values.
  These convenience constructors take an additional array or
  <tt class="literal">Vector</tt> of objects to be used as column headers for
  the table.  If your data is not already in one of these pure tabular
  forms, you must provide a
  <tt class="literal">javax.swing.table.TableModel</tt> object that enables
  the <tt class="literal">JTable</tt> to find the value for each cell.
  You typically do this by subclassing
  <tt class="literal">javax.swing.table.AbstractTableModel</tt>.</p>
<p>  When displaying a <tt class="literal">JTable</tt> that contains more than a
  few rows or columns, it is common to place the
  <tt class="literal">JTable</tt> within a <tt class="literal">JScrollPane</tt>.
  <tt class="literal">JTable</tt> components created with the convenience
  constructors or with a simple default subclass of
  <tt class="literal">AbstractTableModel</tt> are not editable.  However, you
  can enable editing on a cell-by-cell basis by overriding the
  <tt class="literal">isCellEditable()</tt> and
  <tt class="literal">setValueAt()</tt> methods of the
  <tt class="literal">AbstractTableModel</tt>.</p>
<a name="INDEX-2498"></a>
<p>  Unlike most Swing components, <tt class="literal">JTable</tt> relies on more
  than one associated model object.  In addition to the
  <tt class="literal">TableModel</tt> object that contains table data, a
  <tt class="literal">JTable</tt> also uses a
  <tt class="literal">TableColumnModel</tt> object to keep track of the
  columns of the table and their ordering and selection state and a
  <tt class="literal">ListSelectionModel</tt> used to keep track of selected
  rows in the table.</p>
<a name="INDEX-2499"></a>
<p>  The cell values returned by the <tt class="literal">TableModel</tt> are
  generic objects.  By default, <tt class="literal">JTable</tt> knows how to
  display and edit <tt class="literal">String</tt>, <tt class="literal">Boolean</tt>,
  and <tt class="literal">Number</tt> values.  If you want to display another
  type of objects, you can create a custom
  <tt class="literal">javax.swing.table.TableCellRenderer</tt> object and pass
  it to <tt class="literal">setDefaultRenderer()</tt>.  If you want to allow
  users to edit values of this type, you can create a custom
  <tt class="literal">javax.swing.table.TableCellEditor</tt> and pass it to
  <tt class="literal">setDefaultEditor()</tt>.</p>
<a name="INDEX-2500"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JTable</b> extends JComponent implements Accessible, javax.swing.event.CellEditorListener, javax.swing.event.ListSelectionListener, Scrollable, javax.swing.event.TableColumnModelListener, javax.swing.event.TableModelListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTable</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTable</b> (javax.swing.table.TableModel <i class="parameter">dm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTable</b> (int <i class="parameter">numRows</i>, int <i class="parameter">numColumns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTable</b> (Object[ ][ ] <i class="parameter">rowData</i>, Object[ ] <i class="parameter">columnNames</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTable</b> (javax.swing.table.TableModel <i class="parameter">dm</i>, javax.swing.table.TableColumnModel <i class="parameter">cm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTable</b> (java.util.Vector <i class="parameter">rowData</i>, java.util.Vector <i class="parameter">columnNames</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTable</b> (javax.swing.table.TableModel <i class="parameter">dm</i>, javax.swing.table.TableColumnModel <i class="parameter">cm</i>, ListSelectionModel <i class="parameter">sm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">AUTO_RESIZE_ALL_COLUMNS</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">AUTO_RESIZE_LAST_COLUMN</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">AUTO_RESIZE_NEXT_COLUMN</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">AUTO_RESIZE_OFF</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">AUTO_RESIZE_SUBSEQUENT_COLUMNS</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJTable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getAutoCreateColumnsFromModel</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAutoCreateColumnsFromModel</b> (boolean <i class="parameter">createColumns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getAutoResizeMode</b> ();</td><td align="right"><i> default:2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAutoResizeMode</b> (int <i class="parameter">mode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.table.TableCellEditor <b class="function">getCellEditor</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.table.TableCellEditor <b class="function">getCellEditor</b> (int <i class="parameter">row</i>, int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCellEditor</b> (javax.swing.table.TableCellEditor <i class="parameter">anEditor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getCellSelectionEnabled</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCellSelectionEnabled</b> (boolean <i class="parameter">flag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getColumnCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.table.TableColumnModel <b class="function">getColumnModel</b> ();</td><td align="right"><i> default:DefaultTableColumnModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setColumnModel</b> (javax.swing.table.TableColumnModel <i class="parameter">newModel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getColumnSelectionAllowed</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setColumnSelectionAllowed</b> (boolean <i class="parameter">flag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEditing</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getEditingColumn</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEditingColumn</b> (int <i class="parameter">aColumn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getEditingRow</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEditingRow</b> (int <i class="parameter">aRow</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getEditorComponent</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getGridColor</b> ();</td><td align="right"><i> default:ColorUIResource</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGridColor</b> (java.awt.Color <i class="parameter">newColor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getIntercellSpacing</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setIntercellSpacing</b> (java.awt.Dimension <i class="parameter">newSpacing</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isManagingFocus</b> ();</td><td align="right"><i> Overrides:JComponent constant default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.table.TableModel <b class="function">getModel</b> ();</td><td align="right"><i> default:DefaultTableModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModel</b> (javax.swing.table.TableModel <i class="parameter">newModel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredScrollableViewportSize</b> ();</td><td align="right"><i> Implements:Scrollable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPreferredScrollableViewportSize</b> (java.awt.Dimension <i class="parameter">size</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRowCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRowHeight</b> ();</td><td align="right"><i> default:16</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRowHeight</b> (int <i class="parameter">newHeight</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRowMargin</b> ();</td><td align="right"><i> default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRowMargin</b> (int <i class="parameter">rowMargin</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getRowSelectionAllowed</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRowSelectionAllowed</b> (boolean <i class="parameter">flag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportHeight</b> ();</td><td align="right"><i> Implements:Scrollable constant default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportWidth</b> ();</td><td align="right"><i> Implements:Scrollable default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectedColumn</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectedColumnCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">getSelectedColumns</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectedRow</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectedRowCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">getSelectedRows</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getSelectionBackground</b> ();</td><td align="right"><i> default:ColorUIResource</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionBackground</b> (java.awt.Color <i class="parameter">selectionBackground</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getSelectionForeground</b> ();</td><td align="right"><i> default:ColorUIResource</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionForeground</b> (java.awt.Color <i class="parameter">selectionForeground</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ListSelectionModel <b class="function">getSelectionModel</b> ();</td><td align="right"><i> default:DefaultListSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionModel</b> (ListSelectionModel <i class="parameter">newModel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getShowHorizontalLines</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setShowHorizontalLines</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getShowVerticalLines</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setShowVerticalLines</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.table.JTableHeader <b class="function">getTableHeader</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTableHeader</b> (javax.swing.table.JTableHeader <i class="parameter">newHeader</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.TableUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.TableUI <i class="parameter">ui</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"TableUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addColumn</b> (javax.swing.table.TableColumn <i class="parameter">aColumn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addColumnSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addRowSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clearSelection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">columnAtPoint</b> (java.awt.Point <i class="parameter">point</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">convertColumnIndexToModel</b> (int <i class="parameter">viewColumnIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">convertColumnIndexToView</b> (int <i class="parameter">modelColumnIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">createDefaultColumnsFromModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">editCellAt</b> (int <i class="parameter">row</i>, int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">editCellAt</b> (int <i class="parameter">row</i>, int <i class="parameter">column</i>, java.util.EventObject <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getCellRect</b> (int <i class="parameter">row</i>, int <i class="parameter">column</i>, boolean <i class="parameter">includeSpacing</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.table.TableCellRenderer <b class="function">getCellRenderer</b> (int <i class="parameter">row</i>, int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.table.TableColumn <b class="function">getColumn</b> (Object <i class="parameter">identifier</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Class <b class="function">getColumnClass</b> (int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getColumnName</b> (int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.table.TableCellEditor <b class="function">getDefaultEditor</b> (Class <i class="parameter">columnClass</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.table.TableCellRenderer <b class="function">getDefaultRenderer</b> (Class <i class="parameter">columnClass</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getValueAt</b> (int <i class="parameter">row</i>, int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isCellEditable</b> (int <i class="parameter">row</i>, int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isCellSelected</b> (int <i class="parameter">row</i>, int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isColumnSelected</b> (int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isRowSelected</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">moveColumn</b> (int <i class="parameter">column</i>, int <i class="parameter">targetColumn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">prepareEditor</b> (javax.swing.table.TableCellEditor <i class="parameter">editor</i>, int <i class="parameter">row</i>, int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">prepareRenderer</b> (javax.swing.table.TableCellRenderer <i class="parameter">renderer</i>, int <i class="parameter">row</i>, int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeColumn</b> (javax.swing.table.TableColumn <i class="parameter">aColumn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeColumnSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeEditor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeRowSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">rowAtPoint</b> (java.awt.Point <i class="parameter">point</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">selectAll</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setColumnSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDefaultEditor</b> (Class <i class="parameter">columnClass</i>, javax.swing.table.TableCellEditor <i class="parameter">editor</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDefaultRenderer</b> (Class <i class="parameter">columnClass</i>, javax.swing.table.TableCellRenderer <i class="parameter">renderer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRowSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionMode</b> (int <i class="parameter">selectionMode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setShowGrid</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setValueAt</b> (Object <i class="parameter">aValue</i>, int <i class="parameter">row</i>, int <i class="parameter">column</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">sizeColumnsToFit</b> (int <i class="parameter">resizingColumn</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJTable</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing CellEditorListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">editingCanceled</b> (javax.swing.event.ChangeEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">editingStopped</b> (javax.swing.event.ChangeEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ListSelectionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">valueChanged</b> (javax.swing.event.ListSelectionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Scrollable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredScrollableViewportSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getScrollableBlockIncrement</b> (java.awt.Rectangle <i class="parameter">visibleRect</i>, int <i class="parameter">orientation</i>, int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportHeight</b> ();</td><td align="right"><i> constant default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportWidth</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getScrollableUnitIncrement</b> (java.awt.Rectangle <i class="parameter">visibleRect</i>, int <i class="parameter">orientation</i>, int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TableColumnModelListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">columnAdded</b> (javax.swing.event.TableColumnModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">columnMarginChanged</b> (javax.swing.event.ChangeEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">columnMoved</b> (javax.swing.event.TableColumnModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">columnRemoved</b> (javax.swing.event.TableColumnModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">columnSelectionChanged</b> (javax.swing.event.ListSelectionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TableModelListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">tableChanged</b> (javax.swing.event.TableModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addNotify</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getToolTipText</b> (java.awt.event.MouseEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">reshape</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">configureEnclosingScrollPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.table.TableColumnModel <b class="function">createDefaultColumnModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.table.TableModel <b class="function">createDefaultDataModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">createDefaultEditors</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">createDefaultRenderers</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected ListSelectionModel <b class="function">createDefaultSelectionModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.table.JTableHeader <b class="function">createDefaultTableHeader</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">initializeLocalVars</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">resizeAndRepaint</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">autoCreateColumnsFromModel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">autoResizeMode</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.table.TableCellEditor <b class="function">cellEditor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">cellSelectionEnabled</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.table.TableColumnModel <b class="function">columnModel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.table.TableModel <b class="function">dataModel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient java.util.Hashtable <b class="function">defaultEditorsByColumnClass</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient java.util.Hashtable <b class="function">defaultRenderersByColumnClass</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient int <b class="function">editingColumn</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient int <b class="function">editingRow</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient Component <b class="function">editorComp</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">gridColor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Dimension <b class="function">preferredViewportSize</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">rowHeight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">rowMargin</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">rowSelectionAllowed</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">selectionBackground</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Color <b class="function">selectionForeground</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected ListSelectionModel <b class="function">selectionModel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">showHorizontalLines</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">showVerticalLines</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.table.JTableHeader <b class="function">tableHeader</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static JScrollPane <b class="function">createScrollPaneForTable</b> (JTable <i class="parameter">aTable</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">sizeColumnsToFit</b> (boolean <i class="parameter">lastColumnOnly</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JTable(Accessible,javax.swing.event.CellEditorListener(java.util.EventListener),javax.swing.event.ListSelectionListener(java.util.EventListener),Scrollable,javax.swing.event.TableColumnModelListener(java.util.EventListener),javax.swing.event.TableModelListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DefaultCellEditor.getTableCellEditorComponent(), JTable.createScrollPaneForTable(), JTable.AccessibleJTable.AccessibleJTableCell.AccessibleJTableCell(), javax.swing.table.DefaultTableCellRenderer.getTableCellRendererComponent(), javax.swing.table.JTableHeader.setTable(), javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry.AccessibleJTableHeaderEntry(), javax.swing.table.TableCellEditor.getTableCellEditorComponent(), javax.swing.table.TableCellRenderer.getTableCellRendererComponent()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">javax.swing.table.JTableHeader.getTable()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.table.JTableHeader.table</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JTextArea</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(text) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2501"></a>
<a name="INDEX-2502"></a>
<p>
<tt class="literal">JTextArea</tt> displays
  multiple lines of plain, unformatted text and allows the user to
  edit the text.  The
  <tt class="literal">JTextArea</tt> API is designed to be similar to the
  <tt class="literal">java.awt.TextArea</tt> API.</p>
<a name="INDEX-2503"></a>
<a name="INDEX-2504"></a>
<a name="INDEX-2505"></a>
<a name="INDEX-2506"></a>
<p>  You can specify the text to be displayed by passing a
  <tt class="literal">String</tt> to the <tt class="literal">JTextArea</tt>
  constructor or by using the <tt class="literal">setText()</tt> and
  <tt class="literal">getText()</tt> methods inherited from the superclass.
  Specify the number of rows and columns to be displayed by the
  <tt class="literal">JTextArea</tt> by passing these values to the
  constructor or by using the <tt class="literal">setRows()</tt> and
  <tt class="literal">setColumns()</tt> methods.  The
  <tt class="literal">lineWrap</tt> property specifies whether long lines
  should wrap.  The <tt class="literal">wrapStyleWord</tt> property
  specifies whether lines should wrap at word boundaries or at character
  boundaries.  If you are displaying
  more than a few lines of text, you probably want to place your
  <tt class="literal">JTextArea</tt> within a <tt class="literal">JScrollPane</tt>
  to enable scrolling as needed.</p>
<a name="INDEX-2507"></a>
<a name="INDEX-2508"></a>
<a name="INDEX-2509"></a>
<p>
<tt class="literal">JTextArea</tt> is a subclass of
 <tt class="literal">javax.swing.text.JTextComponent</tt> and inherits many
 features of that powerful text editor.  Many of the most commonly used
 <tt class="literal">JTextArea</tt> methods are actually inherited from its
 superclass.  They include the <tt class="literal">getText()</tt> and
 <tt class="literal">setText()</tt> methods already mentioned, as well as
 <tt class="literal">setEditable()</tt>,
 <tt class="literal">getCaretPosition()</tt>, and
 <tt class="literal">setCaretPosition()</tt>.
  Like its superclass, <tt class="literal">JTextArea</tt> uses a
  <tt class="literal">javax.swing.text.Document</tt> object as its model.
  Since a <tt class="literal">JTextArea</tt> displays only plain text, however,
  you can typically use a simple <tt class="literal">String</tt> object instead.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JTextArea</b> extends javax.swing.text.JTextComponent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextArea</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextArea</b> (javax.swing.text.Document <i class="parameter">doc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextArea</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextArea</b> (int <i class="parameter">rows</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextArea</b> (String <i class="parameter">text</i>, int <i class="parameter">rows</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextArea</b> (javax.swing.text.Document <i class="parameter">doc</i>, String <i class="parameter">text</i>, int <i class="parameter">rows</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Overrides:JTextComponent default:AccessibleJTextArea</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getColumns</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setColumns</b> (int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLineCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getLineWrap</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLineWrap</b> (boolean <i class="parameter">wrap</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isManagingFocus</b> ();</td><td align="right"><i> Overrides:JComponent constant default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredScrollableViewportSize</b> ();</td><td align="right"><i> Overrides:JTextComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRows</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRows</b> (int <i class="parameter">rows</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportWidth</b> ();</td><td align="right"><i> Overrides:JTextComponent default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getTabSize</b> ();</td><td align="right"><i> default:8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTabSize</b> (int <i class="parameter">size</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"TextAreaUI"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getWrapStyleWord</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setWrapStyleWord</b> (boolean <i class="parameter">word</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">append</b> (String <i class="parameter">str</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLineEndOffset</b> (int <i class="parameter">line</i>) throws javax.swing.text.BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLineOfOffset</b> (int <i class="parameter">offset</i>) throws javax.swing.text.BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLineStartOffset</b> (int <i class="parameter">line</i>) throws javax.swing.text.BadLocationException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insert</b> (String <i class="parameter">str</i>, int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">replaceRange</b> (String <i class="parameter">str</i>, int <i class="parameter">start</i>, int <i class="parameter">end</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JTextComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getScrollableUnitIncrement</b> (java.awt.Rectangle <i class="parameter">visibleRect</i>, int <i class="parameter">orientation</i>, int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JTextComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">processComponentKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFont</b> (java.awt.Font <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.text.Document <b class="function">createDefaultModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getColumnWidth</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getRowHeight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->javax.swing.text.JTextComponent(Accessible,Scrollable)-->JTextArea</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JTextField</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(text) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2510"></a>
<a name="INDEX-2511"></a>
<p>
<tt class="literal">JTextField</tt> allows the user to enter and edit a
  single line of plain text.  <tt class="literal">JTextField</tt> is designed
  to supersede <tt class="literal">java.awt.TextField</tt>, so it has a similar
  API.  
  You can set and query the text 
  with the <tt class="literal">setText()</tt> and
  <tt class="literal">getText()</tt> methods inherited from the superclass.
  Use <tt class="literal">setFont()</tt> to specify the font in which the text
  is displayed.  Use <tt class="literal">setColumns()</tt> to set the
  number of characters in the field.  Note that the specified number of
  columns is approximate unless you are using a monospaced font.


  Note that <tt class="literal">JTextField</tt> inherits a number of useful
  properties from its superclass.  These include
  <tt class="literal">enabled</tt>, <tt class="literal">editable</tt>,
  <tt class="literal">caretPosition</tt>, and <tt class="literal">selectedText</tt>.</p>
<a name="INDEX-2512"></a>
<a name="INDEX-2513"></a>
<a name="INDEX-2514"></a>
<a name="INDEX-2515"></a>
<a name="INDEX-2516"></a>
<p>
<tt class="literal">JTextField</tt> fires an <tt class="literal">ActionEvent</tt>
  to any registered <tt class="literal">ActionListener</tt> objects when the
  user types <b class="emphasis-bold">Enter</b>.  You can specify the
  action command text sent with the <tt class="literal">ActionEvent</tt> by
  calling <tt class="literal">setActionCommand()</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JTextField</b> extends javax.swing.text.JTextComponent implements SwingConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextField</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextField</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextField</b> (int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextField</b> (String <i class="parameter">text</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextField</b> (javax.swing.text.Document <i class="parameter">doc</i>, String <i class="parameter">text</i>, int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">notifyAction</b> ;</td><td align="right"><i> ="notify-field-accept"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeActionListener</b> (java.awt.event.ActionListener <i class="parameter">l</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Overrides:JTextComponent default:AccessibleJTextField</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Action[ ] <b class="function">getActions</b> ();</td><td align="right"><i> Overrides:JTextComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getColumns</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setColumns</b> (int <i class="parameter">columns</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getHorizontalAlignment</b> ();</td><td align="right"><i> default:2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setHorizontalAlignment</b> (int <i class="parameter">alignment</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public BoundedRangeModel <b class="function">getHorizontalVisibility</b> ();</td><td align="right"><i> default:DefaultBoundedRangeModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getScrollOffset</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setScrollOffset</b> (int <i class="parameter">scrollOffset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"TextFieldUI"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isValidateRoot</b> ();</td><td align="right"><i> Overrides:JComponent constant default:true</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">postActionEvent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setActionCommand</b> (String <i class="parameter">command</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JTextComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">scrollRectToVisible</b> (java.awt.Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFont</b> (java.awt.Font <i class="parameter">f</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.text.Document <b class="function">createDefaultModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireActionPerformed</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">getColumnWidth</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->javax.swing.text.JTextComponent(Accessible,Scrollable)-->JTextField(SwingConstants)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">JPasswordField, javax.swing.tree.DefaultTreeCellEditor.DefaultTextField</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DefaultCellEditor.DefaultCellEditor()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JTextPane</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(text) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2517"></a>
<a name="INDEX-2518"></a>
<p>
<tt class="literal">JTextPane</tt> is a component for displaying and
  editing multiline formatted text.  When combined with a GUI that
  allows the user to select fonts, colors, paragraph styles, and so
  forth, it provides substantial word-processing functionality for any
  Java application.
  <tt class="literal">JTextPane</tt> works with documents that implement the
  <tt class="literal">javax.swing.text.StyledDocument</tt> interface,
  typically a <tt class="literal">DefaultStyledDocument</tt>.
  <tt class="literal">JTextPane</tt> also relies on
  <tt class="literal">javax.swing.text.StyledEditorKit</tt> to provide
  auxiliary configuration information.</p>
<p>
<tt class="literal">JTextPane</tt> does not directly define methods for
  inserting styled text into the document.  You must work directly with
  the <tt class="literal">StyledDocument</tt> to do that.
  <tt class="literal">JTextPane</tt> allows the user to edit text but
  does not provide any means for the user to specify or change the style
  of that text.  Your application must provide additional GUI components
  (e.g., a menu of available styles or a dialog box for selecting a
  font) in order to allow the user to select styles.</p>
<a name="INDEX-2519"></a>
<a name="INDEX-2520"></a>
<p>  Call <tt class="literal">setCharacterAttributes()</tt> to specify
  attributes, such as font size and style, that apply to individual
  characters.  This method either sets the attributes of the
  currently selected text, or, if there is no selection, specifies
  attributes to be applied to text inserted in the future.  The boolean
  <em class="replaceable">replace</em> argument indicates whether these
  attributes should replace the previous attributes or should augment
  them.  <tt class="literal">setParagraphAttributes()</tt> is a similar
  method, but it sets attributes, such as margins and justification,
  that apply to entire paragraphs of text.</p>
<a name="INDEX-2521"></a>
<p>  In addition to displaying formatted text, <tt class="literal">JTextPane</tt>
  can also display images and arbitrary components.
  <tt class="literal">JTextPane</tt> provides the
  <tt class="literal">insertComponent()</tt> and
  <tt class="literal">insertIcon()</tt> methods to make it easy to insert
  objects of these types without having to manipulate the
  <tt class="literal">StyledDocument</tt> object.</p>
<a name="INDEX-2522"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JTextPane</b> extends JEditorPane {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTextPane</b> (javax.swing.text.StyledDocument <i class="parameter">doc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.AttributeSet <b class="function">getCharacterAttributes</b> ();</td><td align="right"><i> default:LeafElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDocument</b> (javax.swing.text.Document <i class="parameter">doc</i>);</td><td align="right"><i> Overrides:JTextComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final void <b class="function">setEditorKit</b> (javax.swing.text.EditorKit <i class="parameter">kit</i>);</td><td align="right"><i> Overrides:JEditorPane</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.MutableAttributeSet <b class="function">getInputAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Style <b class="function">getLogicalStyle</b> ();</td><td align="right"><i> default:NamedStyle</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLogicalStyle</b> (javax.swing.text.Style <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.AttributeSet <b class="function">getParagraphAttributes</b> ();</td><td align="right"><i> default:BranchElement</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportWidth</b> ();</td><td align="right"><i> Overrides:JEditorPane constant default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.StyledDocument <b class="function">getStyledDocument</b> ();</td><td align="right"><i> default:DefaultStyledDocument</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setStyledDocument</b> (javax.swing.text.StyledDocument <i class="parameter">doc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JEditorPane default:"TextPaneUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Style <b class="function">addStyle</b> (String <i class="parameter">nm</i>, javax.swing.text.Style <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.text.Style <b class="function">getStyle</b> (String <i class="parameter">nm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertComponent</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">insertIcon</b> (Icon <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeStyle</b> (String <i class="parameter">nm</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCharacterAttributes</b> (javax.swing.text.AttributeSet <i class="parameter">attr</i>, boolean <i class="parameter">replace</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setParagraphAttributes</b> (javax.swing.text.AttributeSet <i class="parameter">attr</i>, boolean <i class="parameter">replace</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JEditorPane</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">replaceSelection</b> (String <i class="parameter">content</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JEditorPane</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.text.EditorKit <b class="function">createDefaultEditorKit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final javax.swing.text.StyledEditorKit <b class="function">getStyledEditorKit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->javax.swing.text.JTextComponent(Accessible,Scrollable)-->JEditorPane-->JTextPane</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JToggleButton</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(action,value) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2523"></a>
<a name="INDEX-2524"></a>
<a name="INDEX-2525"></a>
<p> 
  This class implements a toggle button: a button that can be
  selected or deselected.  The user can toggle between the selected and
  deselected states by clicking the button.  Like all Swing buttons, a
  <tt class="literal">JToggleButton</tt> can display text and an icon.  The
  selection state is typically indicated by the button border and
  background color.  You can also 
  call <tt class="literal">setIcon()</tt>
  and <tt class="literal">setSelectedIcon()</tt> to specify different icons
  for the default and selected states.
  By default, <tt class="literal">JToggleButton</tt> keeps track of its
  selection state with a 
  <tt class="literal">JToggleButton.ToggleButtonModel</tt> object.
  <tt class="literal">JToggleButton</tt> is less commonly used than its
  subclasses <tt class="literal">JCheckBox</tt> and
  <tt class="literal">JRadioButton</tt>.</p>
<a name="INDEX-2526"></a>
<a name="INDEX-2527"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JToggleButton</b> extends AbstractButton implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JToggleButton</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JToggleButton</b> (Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JToggleButton</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JToggleButton</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JToggleButton</b> (Icon <i class="parameter">icon</i>, boolean <i class="parameter">selected</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JToggleButton</b> (String <i class="parameter">text</i>, boolean <i class="parameter">selected</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JToggleButton</b> (String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>, boolean <i class="parameter">selected</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJToggleButton expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"ToggleButtonUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJToggleButton expert</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding AbstractButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding AbstractButton</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->AbstractButton(java.awt.ItemSelectable,SwingConstants)-->JToggleButton(Accessible)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">JCheckBox, JRadioButton</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JToggleButton.ToggleButtonModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2528"></a>
<p> 
  This class is the <tt class="literal">ButtonModel</tt> used by default
  by <tt class="literal">JToggleButton</tt>, <tt class="literal">JCheckBox</tt>, and
  <tt class="literal">JRadioButton</tt> components.  It overrides several
  methods of <tt class="literal">DefaultButtonModel</tt> in order to delegate
  button selection state information to a <tt class="literal">ButtonGroup</tt>
  object.  Applications typically never need to instantiate this class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">JToggleButton.ToggleButtonModel</b> extends DefaultButtonModel {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ToggleButtonModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding DefaultButtonModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelected</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPressed</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelected</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JToolBar</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2529"></a>
<a name="INDEX-2530"></a>
<p>
<tt class="literal">JToolBar</tt> is a container that displays a row or
  column of children, typically <tt class="literal">JButton</tt> children, that
  represent application tools or actions.  <tt class="literal">JToolBar</tt>
  has two special features that make it useful in applications.
  First, it
  has a special <tt class="literal">add()</tt> method that allows you to add
  an <tt class="literal">Action</tt> object, rather than a
  <tt class="literal">Component</tt>, to it.  When you do this, an appropriate
  <tt class="literal">JButton</tt> is automatically created.  This
  created button tracks the enabled state of the action,
  so if the action is disabled, the button becomes disabled as well.
  The <tt class="literal">JMenu</tt> class has this same ability to accept
  <tt class="literal">Action</tt> objects as children; the commonly used
  actions of an application frequently appear in both
  <tt class="literal">JMenu</tt> and <tt class="literal">JToolBar</tt> components of
  the application.
  A <tt class="literal">JToolBar</tt> can contain special separator components
  that serve to group related tools and separate unrelated tools.  You
  can add a separator to a <tt class="literal">JToolBar</tt> with the special
  <tt class="literal">addSeparator()</tt> method.</p>
<a name="INDEX-2531"></a>
<a name="INDEX-2532"></a>
<p>  The second special feature of <tt class="literal">JToolBar</tt> is that it
  is draggable.  Unless this feature has been disabled with
  <tt class="literal">setFloatable()</tt>, a <tt class="literal">JToolBar</tt>
  displays a special grip that the user can use to drag the toolbar.
  If the user drags the toolbar out of the window in which it appears, it
  becomes a floating palette in a window of its own.  Additionally, if
  the <tt class="literal">JToolBar</tt> is positioned against one edge of a
  container that uses a <tt class="literal">java.awt.BorderLayout</tt> layout
  manager and if there are no other components positioned
  against the edges, the user can drag the
  <tt class="literal">JToolBar</tt> to any other edge of the container.  The
  conventional orientation and position for a
  <tt class="literal">JToolBar</tt> is a horizontal row of controls positioned
  just below the menubar at the top of a window.  By dragging the
  <tt class="literal">JToolBar</tt>, however, a user can automatically convert
  it to a vertical toolbar positioned against the left edge of the
  window, for example.</p>
<p>
<tt class="literal">JToolBar</tt> defines only a few interesting properties.
  As mentioned earlier, <tt class="literal">floatable</tt> specifies whether the
  user can drag the <tt class="literal">JToolBar</tt>.
  <tt class="literal">orientation</tt> specifies whether the
  <tt class="literal">JToolBar</tt> arranges its children into a horizontal or
  vertical bar.  The value of this property should be one of the
  <tt class="literal">SwingConstants</tt> constants
  <tt class="literal">HORIZONTAL</tt> or <tt class="literal">VERTICAL</tt>.  The
  default is <tt class="literal">HORIZONTAL</tt>.  Finally, the
  <tt class="literal">margin</tt> property specifies the amount of space
  between the border of the toolbar and its children.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JToolBar</b> extends JComponent implements Accessible, SwingConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JToolBar</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JToolBar</b> (int <i class="parameter">orientation</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJToolBar</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBorderPainted</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBorderPainted</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isFloatable</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFloatable</b> (boolean <i class="parameter">b</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getMargin</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMargin</b> (java.awt.Insets <i class="parameter">m</i>);</td><td align="right"><i> bound expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getOrientation</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setOrientation</b> (int <i class="parameter">o</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.ToolBarUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.ToolBarUI <i class="parameter">ui</i>);</td><td align="right"><i> bound expert hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"ToolBarUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JButton <b class="function">add</b> (Action <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSeparator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSeparator</b> (java.awt.Dimension <i class="parameter">size</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getComponentAtIndex</b> (int <i class="parameter">i</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getComponentIndex</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJToolBar</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">paintBorder</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">addImpl</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.beans.PropertyChangeListener <b class="function">createActionChangeListener</b> (JButton <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JToolBar(Accessible,SwingConstants)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JToolBar.Separator</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2533"></a>
<p>  This subclass of <tt class="literal">JSeparator</tt> defines a visual
  separator component specially tuned for use within a
  <tt class="literal">JToolBar</tt>.  Practically speaking, this class is no
  different than <tt class="literal">JSeparator</tt>.  You should rarely need
  to explicitly create or work with a
  <tt class="literal">JToolBar.Separator</tt>.  Just call
  <tt class="literal">JToolBar.addSeparator()</tt> as needed to create
  separators and add them to a <tt class="literal">JToolBar</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">JToolBar.Separator</b> extends JSeparator {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Separator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Separator</b> (java.awt.Dimension <i class="parameter">size</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getMaximumSize</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getMinimumSize</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredSize</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getSeparatorSize</b> ();</td><td align="right"><i> default:DimensionUIResource</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSeparatorSize</b> (java.awt.Dimension <i class="parameter">size</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JSeparator</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JToolTip</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2534"></a>
<a name="INDEX-2535"></a>
<a name="INDEX-2536"></a>
<a name="INDEX-2537"></a>
<p>
<tt class="literal">JToolTip</tt> is the component used to display tooltips
  in Swing applications.  To display a tooltip over a component, simply
  call <tt class="literal">setToolTipText()</tt> over that component.  You
  rarely or never need to work with the <tt class="literal">JToolTip</tt>
  class itself.  If you want to customize the appearance of the tooltip
  displayed by a component, you can override the
  <tt class="literal">createToolTip()</tt> method of that component, to return
  your own <tt class="literal">JToolTip</tt> object.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JToolTip</b> extends JComponent implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JToolTip</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJToolTip</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JComponent <b class="function">getComponent</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setComponent</b> (JComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getTipText</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTipText</b> (String <i class="parameter">tipText</i>);</td><td align="right"><i> bound preferred</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.ToolTipUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"ToolTipUI"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJToolTip</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JToolTip(Accessible)</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JComponent.createToolTip()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JTree</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible(selection) swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2538"></a>
<p>
<tt class="literal">JTree</tt> is a powerful Swing component for displaying
  hierarchical, tree-structured data in outline form.  The user can
  expand and collapse the outline to show or hide the children of
  any node in the tree.  The user can also select and optionally edit
  the values displayed in the tree.</p>
<p>
<tt class="literal">JTree</tt> relies on the classes and interfaces in the
  <tt class="literal">javax.swing.tree</tt> package.  Most importantly, it
  uses a <tt class="literal">TreeModel</tt> object to encapsulate the tree
  data it displays.  If your data already has a hierarchical structure,
  you should implement a <tt class="literal">TreeModel</tt> class to serve as
  an intermediary between your data structures and the
  <tt class="literal">JTree</tt> component.  If your data is not implicitly
  hierarchical, you can arrange it into a hierarchy by implementing the
  <tt class="literal">TreeNode</tt> or
  <tt class="literal">MutableTreeNode</tt> interface or by encapsulating
  your objects within <tt class="literal">DefaultMutableTreeNode</tt> objects
  that implement these interfaces for you.  Once you have done this,
  you can rely on the default <tt class="literal">JTree</tt> model,
  <tt class="literal">DefaultTreeModel</tt>.</p>
<p>
<tt class="literal">JTree</tt> also defines constructors that accept tree
  data in the form of an <tt class="literal">Object[]</tt>, a
  <tt class="literal">Vector</tt>, or a <tt class="literal">Hashtable</tt>.  If your
  data is relatively simple and you can express it in one of these forms,
  it is easy to use one of these
  constructors to display your data.  If you specify a vector or
  object array, the elements of the vector or array become the
  nodes of the tree.  If any of those elements are a vector, array, or
  hashtable, the contents of that element become the children of
  that node.  If you specify a <tt class="literal">Hashtable</tt>, the
  keys of the hashtable become the nodes of the tree and the values of
  the hashtable become the children of those nodes.  This is
  particularly useful, of course, if the hashtable values are arrays or
  vectors. </p>
<a name="INDEX-2539"></a>
<a name="INDEX-2540"></a>
<a name="INDEX-2541"></a>
<p>  By default, tree nodes are not editable.  You can change this, however,
  with the <tt class="literal">setEditable()</tt> method.  The selection state
  and selection mode of a <tt class="literal">JTree</tt> is maintained by a
  <tt class="literal">javax.swing.tree.TreeSelectionModel</tt> object.  By
  default, <tt class="literal">JTree</tt> uses a
  <tt class="literal">DefaultTreeSelectionModel</tt> object.  You can set your
  own object with <tt class="literal">setSelectionModel()</tt>.  Use the
  <tt class="literal">setSelectionMode()</tt> method of the
<tt class="literal">TreeSelectionModel</tt> to specify the type of 
  selection that is supported by the <tt class="literal">JTree</tt>.  To disable
  selection in a <tt class="literal">JTree</tt> altogether, pass
  <tt class="literal">null</tt> to <tt class="literal">setSelectionModel()</tt>.</p>
<p>
<tt class="literal">JTree</tt> defines a number of methods for setting and
  querying the current selection state of the tree.  It also defines
  methods for collapsing and expanding nodes and for querying nodes to
  determine whether they are expanded.  These
  methods use two different techniques for referring to a particular
  node in the tree.  One technique is to specify the integer row number
  at which the item appears.  While this is a convenient way to refer to
  an item that the user has selected, for example, it does not map
  naturally to an item in the <tt class="literal">TreeModel</tt>.  The other
  way to refer to an item in a <tt class="literal">JTree</tt> is with a
  <tt class="literal">javax.swing.tree.TreePath</tt> object.  A
  <tt class="literal">TreePath</tt> is essentially an array of objects that
  contains the node itself and all of its ancestors up to the root of
  the tree. The first element in the array is the root, and the last
  element is the tree node that is being referred to.  The methods
  <tt class="literal">getPathForRow()</tt> and
  <tt class="literal">getRowForPath()</tt> allow you to convert from
  one node representation to another.  Related methods convert between X,  
  Y coordinates (such as the coordinates contained in a
  <tt class="literal">MouseEvent</tt>) and the nearest
  <tt class="literal">TreePath</tt> or tree row.</p>
<a name="INDEX-2542"></a>
<a name="INDEX-2543"></a>
<a name="INDEX-2544"></a>
<p>
<tt class="literal">JTree</tt> displays its nodes using a
  <tt class="literal">javax.swing.tree.TreeCellRenderer</tt> object.  By
  default, it uses <tt class="literal">DefaultTreeCellRenderer</tt>, which
  displays any object in the tree in text form by calling its
  <tt class="literal">toString()</tt> method.  If you want to display custom
  objects in a tree, you can implement your own
  <tt class="literal">TreeCellRenderer</tt> and pass an instance to
  <tt class="literal">setCellRenderer()</tt>.  <tt class="literal">JTree</tt> does
  not allow its nodes to be edited by default, but when editing is
  enabled, it is done with a <tt class="literal">TreeCellEditor</tt> object.
  The <tt class="literal">DefaultTreeCellEditor</tt> allows editing of
  <tt class="literal">String</tt> and <tt class="literal">Boolean</tt> nodes.  You
  can implement your own <tt class="literal">TreeCellEditor</tt> if you
  want to allow the user to edit other node types.</p>
<a name="INDEX-2545"></a>
<a name="INDEX-2546"></a>
<p>
<tt class="literal">JTree</tt> defines quite a few methods for querying and
  setting the state of the tree.  The purpose of most of these methods
  is fairly obvious.  One thing to note is that different methods
  use the word "visible" to mean different things.  The methods
  <tt class="literal">isVisible()</tt> and <tt class="literal">makeVisible()</tt>
  use "visible" to refer to a node that is displayed under an
  expanded parent.  Under this definition, a node may be visible even
  if it is currently scrolled off the screen.  All other methods, such
  as <tt class="literal">scrollPathToVisible()</tt>, use "visible" 
  to mean
  that a node is actually on the screen and currently visible to the user.</p>
<a name="INDEX-2547"></a>
<p>
<tt class="literal">JTree</tt> implements the <tt class="literal">Scrollable</tt>
  interface, and, unless you are displaying a very small, fixed-size
  tree, you should almost always place a <tt class="literal">JTree</tt>
  within a <tt class="literal">JScrollPane</tt> container.  If you are using
  <tt class="literal">JTree</tt> to view a large amount of data, if all
  the nodes are of the same type, and if the
  <tt class="literal">TreeModel</tt> has an efficient implementation, you
  may get better performance by passing <tt class="literal">true</tt> to
  <tt class="literal">setLargeModel()</tt>.</p>
<a name="INDEX-2548"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JTree</b> extends JComponent implements Accessible, Scrollable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTree</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTree</b> (java.util.Vector <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTree</b> (javax.swing.tree.TreeNode <i class="parameter">root</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTree</b> (java.util.Hashtable <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTree</b> (Object[ ] <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTree</b> (javax.swing.tree.TreeModel <i class="parameter">newModel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JTree</b> (javax.swing.tree.TreeNode <i class="parameter">root</i>, boolean <i class="parameter">asksAllowsChildren</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">CELL_EDITOR_PROPERTY</b> ;</td><td align="right"><i> ="cellEditor"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">CELL_RENDERER_PROPERTY</b> ;</td><td align="right"><i> ="cellRenderer"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">EDITABLE_PROPERTY</b> ;</td><td align="right"><i> ="editable"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">INVOKES_STOP_CELL_EDITING_PROPERTY</b> ;</td><td align="right"><i> ="messagesStopCellEditing"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">LARGE_MODEL_PROPERTY</b> ;</td><td align="right"><i> ="largeModel"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ROOT_VISIBLE_PROPERTY</b> ;</td><td align="right"><i> ="rootVisible"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ROW_HEIGHT_PROPERTY</b> ;</td><td align="right"><i> ="rowHeight"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">SCROLLS_ON_EXPAND_PROPERTY</b> ;</td><td align="right"><i> ="scrollsOnExpand"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">SELECTION_MODEL_PROPERTY</b> ;</td><td align="right"><i> ="selectionModel"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">SHOWS_ROOT_HANDLES_PROPERTY</b> ;</td><td align="right"><i> ="showsRootHandles"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">TREE_MODEL_PROPERTY</b> ;</td><td align="right"><i> ="treeModel"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">VISIBLE_ROW_COUNT_PROPERTY</b> ;</td><td align="right"><i> ="visibleRowCount"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static javax.swing.tree.TreeModel <b class="function">createTreeModel</b> (Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static javax.swing.tree.TreeModel <b class="function">getDefaultTreeModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addTreeExpansionListener</b> (javax.swing.event.TreeExpansionListener <i class="parameter">tel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeTreeExpansionListener</b> (javax.swing.event.TreeExpansionListener <i class="parameter">tel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addTreeSelectionListener</b> (javax.swing.event.TreeSelectionListener <i class="parameter">tsl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeTreeSelectionListener</b> (javax.swing.event.TreeSelectionListener <i class="parameter">tsl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addTreeWillExpandListener</b> (javax.swing.event.TreeWillExpandListener <i class="parameter">tel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeTreeWillExpandListener</b> (javax.swing.event.TreeWillExpandListener <i class="parameter">tel</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJTree</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreeCellEditor <b class="function">getCellEditor</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCellEditor</b> (javax.swing.tree.TreeCellEditor <i class="parameter">cellEditor</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreeCellRenderer <b class="function">getCellRenderer</b> ();</td><td align="right"><i> default:DefaultTreeCellRenderer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCellRenderer</b> (javax.swing.tree.TreeCellRenderer <i class="parameter">x</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEditable</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEditable</b> (boolean <i class="parameter">flag</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEditing</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreePath <b class="function">getEditingPath</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isFixedRowHeight</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getInvokesStopCellEditing</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setInvokesStopCellEditing</b> (boolean <i class="parameter">newValue</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLargeModel</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLargeModel</b> (boolean <i class="parameter">newValue</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getLastSelectedPathComponent</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreePath <b class="function">getLeadSelectionPath</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getLeadSelectionRow</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaxSelectionRow</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinSelectionRow</b> ();</td><td align="right"><i> default:-1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreeModel <b class="function">getModel</b> ();</td><td align="right"><i> default:DefaultTreeModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setModel</b> (javax.swing.tree.TreeModel <i class="parameter">newModel</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredScrollableViewportSize</b> ();</td><td align="right"><i> Implements:Scrollable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isRootVisible</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRootVisible</b> (boolean <i class="parameter">rootVisible</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRowCount</b> ();</td><td align="right"><i> default:4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRowHeight</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRowHeight</b> (int <i class="parameter">rowHeight</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportHeight</b> ();</td><td align="right"><i> Implements:Scrollable default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportWidth</b> ();</td><td align="right"><i> Implements:Scrollable default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollsOnExpand</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setScrollsOnExpand</b> (boolean <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getSelectionCount</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSelectionEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreeSelectionModel <b class="function">getSelectionModel</b> ();</td><td align="right"><i> default:DefaultTreeSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionModel</b> (javax.swing.tree.TreeSelectionModel <i class="parameter">selectionModel</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreePath <b class="function">getSelectionPath</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionPath</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreePath[ ] <b class="function">getSelectionPaths</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionPaths</b> (javax.swing.tree.TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int[ ] <b class="function">getSelectionRows</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionRows</b> (int[ ] <i class="parameter">rows</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getShowsRootHandles</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setShowsRootHandles</b> (boolean <i class="parameter">newValue</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.TreeUI <b class="function">getUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setUI</b> (javax.swing.plaf.TreeUI <i class="parameter">ui</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getUIClassID</b> ();</td><td align="right"><i> Overrides:JComponent default:"TreeUI"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getVisibleRowCount</b> ();</td><td align="right"><i> default:20</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVisibleRowCount</b> (int <i class="parameter">newCount</i>);</td><td align="right"><i> bound</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSelectionPath</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSelectionPaths</b> (javax.swing.tree.TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSelectionRow</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSelectionRows</b> (int[ ] <i class="parameter">rows</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">cancelEditing</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clearSelection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">collapsePath</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">collapseRow</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">convertValueToText</b> (Object <i class="parameter">value</i>, boolean <i class="parameter">selected</i>, boolean <i class="parameter">expanded</i>, boolean <i class="parameter">leaf</i>, int <i class="parameter">row</i>, boolean <i class="parameter">hasFocus</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">expandPath</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">expandRow</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fireTreeCollapsed</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fireTreeExpanded</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fireTreeWillCollapse</b> (javax.swing.tree.TreePath <i class="parameter">path</i>) throws javax.swing.tree.ExpandVetoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fireTreeWillExpand</b> (javax.swing.tree.TreePath <i class="parameter">path</i>) throws javax.swing.tree.ExpandVetoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreePath <b class="function">getClosestPathForLocation</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getClosestRowForLocation</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">getExpandedDescendants</b> (javax.swing.tree.TreePath <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getPathBounds</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreePath <b class="function">getPathForLocation</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreePath <b class="function">getPathForRow</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getRowBounds</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRowForLocation</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getRowForPath</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">hasBeenExpanded</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isCollapsed</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isCollapsed</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isExpanded</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isExpanded</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isPathEditable</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isPathSelected</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isRowSelected</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isVisible</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">makeVisible</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeSelectionPath</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeSelectionPaths</b> (javax.swing.tree.TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeSelectionRow</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeSelectionRows</b> (int[ ] <i class="parameter">rows</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">scrollPathToVisible</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">scrollRowToVisible</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionRow</b> (int <i class="parameter">row</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">startEditingAtPath</b> (javax.swing.tree.TreePath <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">stopEditing</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">treeDidChange</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJTree</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Scrollable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getPreferredScrollableViewportSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getScrollableBlockIncrement</b> (java.awt.Rectangle <i class="parameter">visibleRect</i>, int <i class="parameter">orientation</i>, int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportHeight</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">getScrollableTracksViewportWidth</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getScrollableUnitIncrement</b> (java.awt.Rectangle <i class="parameter">visibleRect</i>, int <i class="parameter">orientation</i>, int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getToolTipText</b> (java.awt.event.MouseEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">updateUI</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">clearToggledPaths</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.TreeModelListener <b class="function">createTreeModelListener</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireValueChanged</b> (javax.swing.event.TreeSelectionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Enumeration <b class="function">getDescendantToggledPaths</b> (javax.swing.tree.TreePath <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.tree.TreePath[ ] <b class="function">getPathBetweenRows</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">removeDescendantToggledPaths</b> (java.util.Enumeration <i class="parameter">toRemove</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setExpandedState</b> (javax.swing.tree.TreePath <i class="parameter">path</i>, boolean <i class="parameter">state</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.tree.TreeCellEditor <b class="function">cellEditor</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.tree.TreeCellRenderer <b class="function">cellRenderer</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">editable</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">invokesStopCellEditing</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">largeModel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">rootVisible</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">rowHeight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">scrollsOnExpand</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.tree.TreeSelectionModel <b class="function">selectionModel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient JTree.TreeSelectionRedirector <b class="function">selectionRedirector</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">showsRootHandles</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">toggleClickCount</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.tree.TreeModel <b class="function">treeModel</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.event.TreeModelListener <b class="function">treeModelListener</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">visibleRowCount</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JTree(Accessible,Scrollable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.tree.DefaultTreeCellEditor.tree</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JTree.DynamicUtilTreeNode</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2549"></a>
<p> 
  This subclass of
  <tt class="literal">javax.swing.tree.DefaultMutableTreeNode</tt> is used by
  the <tt class="literal">JTree</tt> constructors that accept tree data in
  the form of a <tt class="literal">Vector</tt>, <tt class="literal">Hashtable</tt>,
  or <tt class="literal">Object[]</tt>.  The static
  <tt class="literal">createChildren()</tt> method is used to populate a node
  with the children contained in a specified <tt class="literal">Vector</tt>,
  <tt class="literal">Hashtable</tt>, or array.
  <tt class="literal">DynamicUtilTreeNode</tt> is dynamic in the sense that
  it dynamically creates children nodes when those nodes are requested
  for the first time.</p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">JTree.DynamicUtilTreeNode</b> extends javax.swing.tree.DefaultMutableTreeNode {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DynamicUtilTreeNode</b> (Object <i class="parameter">value</i>, Object <i class="parameter">children</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">createChildren</b> (javax.swing.tree.DefaultMutableTreeNode <i class="parameter">parent</i>, Object <i class="parameter">children</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding DefaultMutableTreeNode</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">children</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.tree.TreeNode <b class="function">getChildAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getChildCount</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLeaf</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">loadChildren</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Object <b class="function">childValue</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">hasChildren</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">loadedChildren</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JTree.EmptySelectionModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2550"></a>
<p>  This subclass of
  <tt class="literal">javax.swing.tree.DefaultTreeSelectionModel</tt> defines
  empty selection methods and is used
  to disable selection in a <tt class="literal">JTree</tt>.  You never need to
  instantiate this class explicitly; simply pass <tt class="literal">null</tt>
  to the <tt class="literal">setSelectionModel()</tt> method of
  <tt class="literal">JTree</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected static class <b class="classname">JTree.EmptySelectionModel</b> extends javax.swing.tree.DefaultTreeSelectionModel {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">EmptySelectionModel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final JTree.EmptySelectionModel <b class="function">sharedInstance</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static JTree.EmptySelectionModel <b class="function">sharedInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding DefaultTreeSelectionModel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addSelectionPaths</b> (javax.swing.tree.TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeSelectionPaths</b> (javax.swing.tree.TreePath[ ] <i class="parameter">paths</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectionPaths</b> (javax.swing.tree.TreePath[ ] <i class="parameter">pPaths</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JTree.EmptySelectionModel.sharedInstance()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JTree.EmptySelectionModel.sharedInstance</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JTree.TreeModelHandler</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2551"></a>
<p>  This class is a <tt class="literal">javax.swing.event.TreeModelListener</tt> 
  used internally
  by <tt class="literal">JTree</tt> to track changes made to the tree data
  contained in the <tt class="literal">TreeModel</tt>.  Applications never
  need to use this class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">JTree.TreeModelHandler</b> implements javax.swing.event.TreeModelListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">TreeModelHandler</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TreeModelListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">treeNodesChanged</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">treeNodesInserted</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">treeNodesRemoved</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">treeStructureChanged</b> (javax.swing.event.TreeModelEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JTree.TreeSelectionRedirector</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2552"></a>
<p>  This <tt class="literal">javax.swing.event.TreeSelectionListener</tt> 
  class is used internally
  by <tt class="literal">JTree</tt> to redirect
  <tt class="literal">javax.swing.tree.TreeSelectionEvent</tt> objects 
  so that they appear to
  come from the <tt class="literal">JTree</tt>, rather than the
  <tt class="literal">TreeSelectionModel</tt> object.  Applications never need
  to use this class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">JTree.TreeSelectionRedirector</b> implements Serializable, javax.swing.event.TreeSelectionListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">TreeSelectionRedirector</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing TreeSelectionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">valueChanged</b> (javax.swing.event.TreeSelectionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JTree.selectionRedirector</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JViewport</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component</i></b></font></td>
</tr>
</table>
<a name="INDEX-2553"></a>
<p>  This component displays a portion of the larger child component it
  contains.  It defines methods for efficiently scrolling the child
  component within the viewable area.  Pass <tt class="literal">true</tt> to
  <tt class="literal">setBackingStoreEnabled()</tt> to use an off-screen image
  to increase the efficiency of small scrolls.
  <tt class="literal">JViewport</tt> is used by
  <tt class="literal">JScrollPane</tt>, and most applications use
  <tt class="literal">JScrollPane</tt> instead of using
  <tt class="literal">JViewport</tt> directly.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JViewport</b> extends JComponent implements Accessible {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JViewport</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJViewport</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isBackingStoreEnabled</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBackingStoreEnabled</b> (boolean <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final void <b class="function">setBorder</b> (javax.swing.border.Border <i class="parameter">border</i>);</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getExtentSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setExtentSize</b> (java.awt.Dimension <i class="parameter">newExtent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final java.awt.Insets <b class="function">getInsets</b> ();</td><td align="right"><i> Overrides:JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final java.awt.Insets <b class="function">getInsets</b> (java.awt.Insets <i class="parameter">insets</i>);</td><td align="right"><i> Overrides:JComponent expert</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isOptimizedDrawingEnabled</b> ();</td><td align="right"><i> Overrides:JComponent constant default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getView</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setView</b> (Component <i class="parameter">view</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Point <b class="function">getViewPosition</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setViewPosition</b> (java.awt.Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getViewRect</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getViewSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setViewSize</b> (java.awt.Dimension <i class="parameter">newSize</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">toViewCoordinates</b> (java.awt.Dimension <i class="parameter">size</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Point <b class="function">toViewCoordinates</b> (java.awt.Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJViewport</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paint</b> (java.awt.Graphics <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">repaint</b> (long <i class="parameter">tm</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">w</i>, int <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">reshape</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">w</i>, int <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">scrollRectToVisible</b> (java.awt.Rectangle <i class="parameter">contentRect</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding JComponent</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, Object <i class="parameter">oldValue</i>, Object <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (Component <i class="parameter">child</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">addImpl</b> (Component <i class="parameter">child</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">computeBlit</b> (int <i class="parameter">dx</i>, int <i class="parameter">dy</i>, java.awt.Point <i class="parameter">blitFrom</i>, java.awt.Point <i class="parameter">blitTo</i>, java.awt.Dimension <i class="parameter">blitSize</i>, java.awt.Rectangle <i class="parameter">blitPaint</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.LayoutManager <b class="function">createLayoutManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JViewport.ViewListener <b class="function">createViewListener</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireStateChanged</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">backingStore</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient java.awt.Image <b class="function">backingStoreImage</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isViewSizeSet</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.awt.Point <b class="function">lastPaintPosition</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">scrollUnderway</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->JComponent(Serializable)-->JViewport(Accessible)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JScrollPane.{setColumnHeader(), setRowHeader(), setViewport()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JScrollPane.{createViewport(), getColumnHeader(), getRowHeader(), getViewport()}, ScrollPaneLayout.{getColumnHeader(), getRowHeader(), getViewport()}</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JScrollPane.{columnHeader, rowHeader, viewport}, JScrollPane.AccessibleJScrollPane.viewPort, ScrollPaneLayout.{colHead, rowHead, viewport}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JViewport.ViewListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2554"></a>
<p>  This <tt class="literal">ComponentListener</tt> is used internally by
  <tt class="literal">JViewport</tt> to detect changes to the child
  component.  Applications never use this class directly.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">JViewport.ViewListener</b> extends java.awt.event.ComponentAdapter implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">ViewListener</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding ComponentAdapter</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">componentResized</b> (java.awt.event.ComponentEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JViewport.createViewListener()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JWindow</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable accessible swing component bean container</i></b></font></td>
</tr>
</table>
<a name="INDEX-2555"></a>
<a name="INDEX-2556"></a>
<p> 
  This class is the Swing analog of the
  <tt class="literal">java.awt.Window</tt> class.  It is a basic heavyweight
  top-level window with no titlebar or other frame decorations.  Most
  applications use <tt class="literal">JFrame</tt> and
  <tt class="literal">JDialog</tt> in preference to
  <tt class="literal">JWindow</tt>.
  Like <tt class="literal">JFrame</tt> and <tt class="literal">JDialog</tt>,
  <tt class="literal">JWindow</tt> is a <tt class="literal">RootPaneContainer</tt>,
  which means that it has an automatically created
  <tt class="literal">JRootPane</tt> as its single child.  You are not allowed
  to add children or set a layout manager on the
  <tt class="literal">JWindow</tt> itself.  Instead, you must use the
  container returned by the <tt class="literal">getContentPane()</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JWindow</b> extends java.awt.Window implements Accessible, RootPaneContainer {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JWindow</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JWindow</b> (java.awt.Window <i class="parameter">owner</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JWindow</b> (java.awt.Frame <i class="parameter">owner</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> Implements:Accessible default:AccessibleJWindow</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getContentPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContentPane</b> (Container <i class="parameter">contentPane</i>);</td><td align="right"><i> Implements:RootPaneContainer hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getGlassPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGlassPane</b> (Component <i class="parameter">glassPane</i>);</td><td align="right"><i> Implements:RootPaneContainer hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JLayeredPane <b class="function">getLayeredPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayeredPane</b> (JLayeredPane <i class="parameter">layeredPane</i>);</td><td align="right"><i> Implements:RootPaneContainer hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayout</b> (java.awt.LayoutManager <i class="parameter">manager</i>);</td><td align="right"><i> Overrides:Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JRootPane <b class="function">getRootPane</b> ();</td><td align="right"><i> Implements:RootPaneContainer</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Accessible</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AccessibleContext <b class="function">getAccessibleContext</b> ();</td><td align="right"><i> default:AccessibleJWindow</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing RootPaneContainer</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Container <b class="function">getContentPane</b> ();</td><td align="right"><i> default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getGlassPane</b> ();</td><td align="right"><i> default:JPanel</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JLayeredPane <b class="function">getLayeredPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JRootPane <b class="function">getRootPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setContentPane</b> (Container <i class="parameter">contentPane</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGlassPane</b> (Component <i class="parameter">glassPane</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLayeredPane</b> (JLayeredPane <i class="parameter">layeredPane</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding Container</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">addImpl</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">paramString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JRootPane <b class="function">createRootPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">isRootPaneCheckingEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setRootPane</b> (JRootPane <i class="parameter">root</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">setRootPaneCheckingEnabled</b> (boolean <i class="parameter">enabled</i>);</td><td align="right"><i> hidden</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">windowInit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected AccessibleContext <b class="function">accessibleContext</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JRootPane <b class="function">rootPane</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">rootPaneCheckingEnabled</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Component(java.awt.image.ImageObserver,java.awt.MenuContainer,Serializable)-->Container-->java.awt.Window-->JWindow(Accessible,RootPaneContainer)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>KeyStroke</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2557"></a>
<a name="INDEX-2558"></a>
<p>  This class represents a single keystroke, specified either as a character
  or, more flexibly, as a keycode plus a set of keyboard modifiers.
  <tt class="literal">KeyStroke</tt> objects are immutable, and the
  <tt class="literal">KeyStroke</tt> class maintains a cache of the objects.
  There is no public <tt class="literal">KeyStroke</tt> constructor.
  Instead, call one of the static <tt class="literal">getKeyStroke()</tt>
  methods to obtain a reference to a <tt class="literal">KeyStroke</tt> object
  that represents the desired keystroke.  Note that some versions of
  <tt class="literal">getKeyStroke()</tt> take a <tt class="literal">boolean</tt> 
  argument that
  specifies whether the <tt class="literal">KeyStroke</tt> represents a key
  release event instead of a key press event.
  The <em class="replaceable">keyCode</em> argument 
  to <tt class="literal">getKeyStroke()</tt> should be
  one of the <tt class="literal">VK_</tt> virtual key constants defined by
  <tt class="literal">java.awt.event.KeyEvent</tt>.  The 
  <em class="replaceable">modifiers</em> argument
  should be a bitmask composed of the <tt class="literal">ALT_MASK</tt>,
  <tt class="literal">CTRL_MASK</tt>, <tt class="literal">META_MASK</tt>, and
  <tt class="literal">SHIFT_MASK</tt> constants defined by
  <tt class="literal">java.awt.Event</tt>. </p>
<a name="INDEX-2559"></a>
<a name="INDEX-2560"></a>
<p>  See also the <tt class="literal">registerKeyboardAction()</tt> method of
  <tt class="literal">JComponent</tt>, the <tt class="literal">setAccelerator()</tt>
  method of <tt class="literal">JMenuItem</tt>, and
  <tt class="literal">javax.awt.swing.text.Keymap</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">KeyStroke</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static KeyStroke <b class="function">getKeyStroke</b> (char <i class="parameter">keyChar</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static KeyStroke <b class="function">getKeyStroke</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static KeyStroke <b class="function">getKeyStroke</b> (int <i class="parameter">keyCode</i>, int <i class="parameter">modifiers</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static KeyStroke <b class="function">getKeyStroke</b> (int <i class="parameter">keyCode</i>, int <i class="parameter">modifiers</i>, boolean <i class="parameter">onKeyRelease</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static KeyStroke <b class="function">getKeyStrokeForEvent</b> (java.awt.event.KeyEvent <i class="parameter">anEvent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getKeyChar</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getKeyCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getModifiers</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isOnKeyRelease</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">anObject</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public static KeyStroke <b class="function">getKeyStroke</b> (char <i class="parameter">keyChar</i>, boolean <i class="parameter">onKeyRelease</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->KeyStroke(Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JComponent.{getActionForKeyStroke(), getConditionForKeyStroke(), registerKeyboardAction(), unregisterKeyboardAction()}, JMenu.setAccelerator(), JMenuItem.setAccelerator(), javax.swing.text.JTextComponent.KeyBinding.KeyBinding(), javax.swing.text.Keymap.{addActionForKeyStroke(), getAction(), isLocallyDefined(), removeKeyStrokeBinding()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JComponent.getRegisteredKeyStrokes(), JMenuItem.getAccelerator(), KeyStroke.{getKeyStroke(), getKeyStrokeForEvent()}, javax.swing.text.Keymap.{getBoundKeyStrokes(), getKeyStrokesForAction()}</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.text.JTextComponent.KeyBinding.key</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ListCellRenderer</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2561"></a>
<p> 
  This interface defines the method that must be implemented by any
  object that wants to be able to render items in a
  <tt class="literal">JList</tt> component.  Most applications can rely on the
  default behavior of <tt class="literal">JList</tt> (to use a
  <tt class="literal">DefaultListCellRenderer</tt>) and never need to
  implement or use this interface.
  <tt class="literal">getListCellRendererComponent()</tt> is passed
  information about the list item that is to be rendered; it should
  return a lightweight <tt class="literal">java.awt.Component</tt> capable of
  rendering the list item.  The <tt class="literal">JList</tt> object 
  first positions this component at the desired location by calling its
  <tt class="literal">setBounds()</tt> method and then asks the component to
  draw itself by calling <tt class="literal">paint()</tt>.  Note, however,
  that the component is never actually added to the component
  hierarchy.</p>
<a name="INDEX-2562"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ListCellRenderer</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Component <b class="function">getListCellRendererComponent</b> (JList <i class="parameter">list</i>, Object <i class="parameter">value</i>, int <i class="parameter">index</i>, boolean <i class="parameter">isSelected</i>, boolean <i class="parameter">cellHasFocus</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultListCellRenderer</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JComboBox.setRenderer(), JList.setCellRenderer()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JComboBox.getRenderer(), JList.getCellRenderer()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JComboBox.renderer</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ListModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2563"></a>
<p>  This interface defines the methods that must be implemented by any
  object that wants to maintain a list of values for display in a
  <tt class="literal">JList</tt> or similar component.  A
  <tt class="literal">ListModel</tt> must be able to return the size of the
  list, return any numbered element of the list, and 
  fire a <tt class="literal">ListDataEvent</tt> event to any registered
  <tt class="literal">ListDataListener</tt> objects whenever the contents of the
  list changes.  <tt class="literal">ListModel</tt> implementations that
  represent immutable lists can provide dummy no-op implementations of
  the event registration methods.
  Most applications do not need to implement this interface; they can
  work with <tt class="literal">JList</tt> directly or use the
  <tt class="literal">DefaultListModel</tt> class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ListModel</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addListDataListener</b> (javax.swing.event.ListDataListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeListDataListener</b> (javax.swing.event.ListDataListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getElementAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AbstractListModel, ComboBoxModel</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JList.{JList(), setModel()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JList.getModel()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ListSelectionModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2564"></a>
<p>  This interface defines the methods that an object must implement if it
  wants to keep track of the selection state for a
  <tt class="literal">JList</tt>, <tt class="literal">JTable</tt>, or similar
  component.  Most applications use
  <tt class="literal">DefaultListSelectionModel</tt> and never have to
  implement this interface.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ListSelectionModel</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MULTIPLE_INTERVAL_SELECTION</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SINGLE_INTERVAL_SELECTION</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SINGLE_SELECTION</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addListSelectionListener</b> (javax.swing.event.ListSelectionListener <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeListSelectionListener</b> (javax.swing.event.ListSelectionListener <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getAnchorSelectionIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setAnchorSelectionIndex</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getLeadSelectionIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLeadSelectionIndex</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMaxSelectionIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getMinSelectionIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isSelectionEmpty</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getSelectionMode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setSelectionMode</b> (int <i class="parameter">selectionMode</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getValueIsAdjusting</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setValueIsAdjusting</b> (boolean <i class="parameter">valueIsAdjusting</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">clearSelection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">insertIndexInterval</b> (int <i class="parameter">index</i>, int <i class="parameter">length</i>, boolean <i class="parameter">before</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isSelectedIndex</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeIndexInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setSelectionInterval</b> (int <i class="parameter">index0</i>, int <i class="parameter">index1</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultListSelectionModel</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JList.setSelectionModel(), JTable.{JTable(), setSelectionModel()}, javax.swing.table.DefaultTableColumnModel.setSelectionModel(), javax.swing.table.TableColumnModel.setSelectionModel()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JList.{createSelectionModel(), getSelectionModel()}, JTable.{createDefaultSelectionModel(), getSelectionModel()}, javax.swing.table.DefaultTableColumnModel.{createSelectionModel(), getSelectionModel()}, javax.swing.table.TableColumnModel.getSelectionModel()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JTable.selectionModel, javax.swing.table.DefaultTableColumnModel.selectionModel</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>LookAndFeel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2565"></a>
<a name="INDEX-2566"></a>
<p>  This abstract class defines the methods that a pluggable look-and-feel
  must implement.  It also defines some useful static convenience methods.
  Application programmers should never have to use or subclass this class.
  If you are implementing a look-and-feel, you have to 
  subclass this class and define
  the abstract methods, of course.  You probably also want to
  override the default no-op <tt class="literal">initialize()</tt> and
  <tt class="literal">getDefaults()</tt> methods.  Finally, you have to provide
  implementations of all the abstract classes in 
  <tt class="literal">javax.swing.plaf</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">LookAndFeel</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">LookAndFeel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">installBorder</b> (JComponent <i class="parameter">c</i>, String <i class="parameter">defaultBorderName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">installColors</b> (JComponent <i class="parameter">c</i>, String <i class="parameter">defaultBgName</i>, String <i class="parameter">defaultFgName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">installColorsAndFont</b> (JComponent <i class="parameter">c</i>, String <i class="parameter">defaultBgName</i>, String <i class="parameter">defaultFgName</i>, String <i class="parameter">defaultFontName</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Object <b class="function">makeIcon</b> (Class <i class="parameter">baseClass</i>, String <i class="parameter">gifFile</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.text.JTextComponent.KeyBinding[ ] <b class="function">makeKeyBindings</b> (Object[ ] <i class="parameter">keyBindingList</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">uninstallBorder</b> (JComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public UIDefaults <b class="function">getDefaults</b> ();</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getDescription</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getID</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isNativeLookAndFeel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isSupportedLookAndFeel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">initialize</b> ();</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">uninitialize</b> ();</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>

<p>
<span class="refsect1">Passed To: </span><tt class="literal">UIManager.{addAuxiliaryLookAndFeel(), removeAuxiliaryLookAndFeel(), setLookAndFeel()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">UIManager.{getAuxiliaryLookAndFeels(), getLookAndFeel()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MenuElement</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2567"></a>
<p> 
  This interface defines methods that all menu components must
  implement.  The methods allow menu navigation and event handling to be
  performed in a standard way.  Application programmers should never
  have to implement this interface or use the methods it defines, unless
  they want to place components other than <tt class="literal">JMenuItem</tt>
  and its subclasses into menus.  See also
  <tt class="literal">MenuSelectionManager</tt>.</p>
<a name="INDEX-2568"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">MenuElement</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Component <b class="function">getComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract MenuElement[ ] <b class="function">getSubElements</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">menuSelectionChanged</b> (boolean <i class="parameter">isIncluded</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">processKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">event</i>, MenuElement[ ] <i class="parameter">path</i>, MenuSelectionManager <i class="parameter">manager</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">processMouseEvent</b> (java.awt.event.MouseEvent <i class="parameter">event</i>, MenuElement[ ] <i class="parameter">path</i>, MenuSelectionManager <i class="parameter">manager</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">JMenu, JMenuBar, JMenuItem, JPopupMenu</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JMenuBar.{processKeyEvent(), processMouseEvent()}, JMenuItem.{processKeyEvent(), processMouseEvent()}, JPopupMenu.{processKeyEvent(), processMouseEvent()}, MenuElement.{processKeyEvent(), processMouseEvent()}, MenuSelectionManager.setSelectedPath(), javax.swing.event.MenuDragMouseEvent.MenuDragMouseEvent(), javax.swing.event.MenuKeyEvent.MenuKeyEvent()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JMenu.getSubElements(), JMenuBar.getSubElements(), JMenuItem.getSubElements(), JPopupMenu.getSubElements(), MenuElement.getSubElements(), MenuSelectionManager.getSelectedPath(), javax.swing.event.MenuDragMouseEvent.getPath(), javax.swing.event.MenuKeyEvent.getPath()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MenuSelectionManager</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2569"></a>
<p> 
  This class defines methods that manipulate hierarchies of menus.
  Application programmers do not need to use this class.  There is only
  one instance of <tt class="literal">MenuSelectionManager</tt>, returned by
  the static <tt class="literal">defaultManager()</tt> method.  Menu items
  rely on <tt class="literal">MenuSelectionManager</tt> for 
  implementations of <tt class="literal">MenuElement</tt> methods, and
  <tt class="literal">MenuSelectionManager</tt> relies on the methods of the
  <tt class="literal">MenuElement</tt> interface to allow it to traverse menu
  hierarchies.</p>
<a name="INDEX-2570"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MenuSelectionManager</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MenuSelectionManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static MenuSelectionManager <b class="function">defaultManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">l</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clearSelectedPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">componentForPoint</b> (Component <i class="parameter">source</i>, java.awt.Point <i class="parameter">sourcePoint</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public MenuElement[ ] <b class="function">getSelectedPath</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isComponentPartOfCurrentMenu</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">processKeyEvent</b> (java.awt.event.KeyEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">processMouseEvent</b> (java.awt.event.MouseEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setSelectedPath</b> (MenuElement[ ] <i class="parameter">path</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireStateChanged</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient javax.swing.event.ChangeEvent <b class="function">changeEvent</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JMenuBar.{processKeyEvent(), processMouseEvent()}, JMenuItem.{processKeyEvent(), processMouseEvent()}, JPopupMenu.{processKeyEvent(), processMouseEvent()}, MenuElement.{processKeyEvent(), processMouseEvent()}, javax.swing.event.MenuDragMouseEvent.MenuDragMouseEvent(), javax.swing.event.MenuKeyEvent.MenuKeyEvent()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">MenuSelectionManager.defaultManager(), javax.swing.event.MenuDragMouseEvent.getMenuSelectionManager(), javax.swing.event.MenuKeyEvent.getMenuSelectionManager()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MutableComboBoxModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2571"></a>
<p>  This interface extends <tt class="literal">ComboBoxModel</tt> to add support
  for adding and removing elements from the list of choices displayed by
  a <tt class="literal">JComboBox</tt>.  See also
  <tt class="literal">ComboBoxModel</tt> and
  <tt class="literal">DefaultComboBoxModel</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">MutableComboBoxModel</b> extends ComboBoxModel {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addElement</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">insertElementAt</b> (Object <i class="parameter">obj</i>, int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeElement</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeElementAt</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(MutableComboBoxModel(ComboBoxModel(ListModel)))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultComboBoxModel</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>OverlayLayout</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable layout manager</i></b></font></td>
</tr>
</table>
<a name="INDEX-2572"></a>
<a name="INDEX-2573"></a>
<a name="INDEX-2574"></a>
<p> 
  This layout manager arranges the children of the container it manages
  so that the alignment points (specified with the
  <tt class="literal">setAlignmentX()</tt> and
  <tt class="literal">setAlignmentY()</tt> methods of
  <tt class="literal">JComponent</tt>) are on top of each other.  This usually
  means that the children overlap.  <tt class="literal">AbstractButton</tt>
  relies on this layout manager, but applications rarely use it.</p>
<a name="INDEX-2575"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">OverlayLayout</b> implements java.awt.LayoutManager2, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">OverlayLayout</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addLayoutComponent</b> (String <i class="parameter">name</i>, Component <i class="parameter">comp</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">layoutContainer</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">minimumLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">preferredLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeLayoutComponent</b> (Component <i class="parameter">comp</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addLayoutComponent</b> (Component <i class="parameter">comp</i>, Object <i class="parameter">constraints</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getLayoutAlignmentX</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">getLayoutAlignmentY</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">invalidateLayout</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">maximumLayoutSize</b> (Container <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->OverlayLayout(java.awt.LayoutManager2(java.awt.LayoutManager),Serializable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ProgressMonitor</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2576"></a>
<a name="INDEX-2577"></a>
<a name="INDEX-2578"></a>
<a name="INDEX-2579"></a>
<p>  This class implements a progress monitor.  After creating a
  <tt class="literal">ProgressMonitor</tt>, a program periodically calls
  <tt class="literal">setProgress()</tt> to indicate its progress toward the
  completion of a task.  Unless progress is quite rapid, the
  <tt class="literal">ProgressMonitor</tt> displays a dialog box that uses
  a <tt class="literal">JProgressBar</tt> to display progress to the user.
  Call <tt class="literal">setNote()</tt> to set the text to display in the
  dialog box.  You can also specify a permanent title or heading for the
  dialog box with the second argument to the constructor.  
  The <tt class="literal">ProgressMonitor</tt> dialog box automatically closes
  when the <tt class="literal">progress</tt> property reaches the value of the
  <tt class="literal">maximum</tt> property.  If you want to close it before
  the task completes, call <tt class="literal">close()</tt>.</p>
<a name="INDEX-2580"></a>
<p>
<tt class="literal">ProgressMonitor</tt> suffers from an important flaw: if
  the user clicks the <b class="emphasis-bold">Cancel</b> buttons in
  the dialog box, the dialog is dismissed.  Unfortunately, the dialog does not
  fire any event to indicate that this has happened, so your program
  must call <tt class="literal">isCancelled()</tt> each time it calls
  <tt class="literal">setProgress()</tt>, to determine whether the user has
  requested that the operation be cancelled.  A related flaw is that the
  dialog box contains an extraneous <b class="emphasis-bold">Okay</b>
  button that behaves just like the <b class="emphasis-bold">Cancel</b> button.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ProgressMonitor</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ProgressMonitor</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, String <i class="parameter">note</i>, int <i class="parameter">min</i>, int <i class="parameter">max</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isCanceled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaximum</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMaximum</b> (int <i class="parameter">m</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMillisToDecideToPopup</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMillisToDecideToPopup</b> (int <i class="parameter">millisToDecideToPopup</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMillisToPopup</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMillisToPopup</b> (int <i class="parameter">millisToPopup</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinimum</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMinimum</b> (int <i class="parameter">m</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getNote</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setNote</b> (String <i class="parameter">note</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">close</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setProgress</b> (int <i class="parameter">nv</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">ProgressMonitorInputStream.getProgressMonitor()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ProgressMonitorInputStream</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2581"></a>
<p> 
  This class combines a <tt class="literal">java.io.InputStream</tt>
  with a <tt class="literal">ProgressMonitor</tt> to display a program's
  progress in reading a stream.  It is useful when reading a long file
  or when doing time-consuming processing on data from a shorter
  file. If the user clicks the <b class="emphasis-bold">Cancel</b>
  button in the dialog, the next call to read data from the stream
  results in an <tt class="literal">InterruptedIOException</tt>.  
  A <tt class="literal">ProgressMonitorInputStream</tt> can only be wrapped
  around a stream whose <tt class="literal">available()</tt> method returns 
  the total remaining number of bytes in the stream, 
  such as a <tt class="literal">java.io.FileInputStream</tt>.  It does not work with
  <tt class="literal">java.io.PipedInputStream</tt>, for example.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ProgressMonitorInputStream</b> extends java.io.FilterInputStream {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ProgressMonitorInputStream</b> (Component <i class="parameter">parentComponent</i>, Object <i class="parameter">message</i>, java.io.InputStream <i class="parameter">in</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public ProgressMonitor <b class="function">getProgressMonitor</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding FilterInputStream</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">close</b> () throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">read</b> () throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">read</b> (byte[ ] <i class="parameter">b</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">read</b> (byte[ ] <i class="parameter">b</i>, int <i class="parameter">off</i>, int <i class="parameter">len</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">reset</b> () throws java.io.IOException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public long <b class="function">skip</b> (long <i class="parameter">n</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.io.InputStream-->java.io.FilterInputStream-->ProgressMonitorInputStream</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Renderer</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2582"></a>
<p> 
  This interface defines the basic methods that must be implemented
  by any class that wants to render a value of some specified type on
  behalf of a general-purpose component, such as a
  <tt class="literal">JList</tt>.  In practice, the
  <tt class="literal">setValue()</tt> method defined by this interface is
  under-constrained, and this interface is unused in the Swing API.
  Three interfaces, with more specialized methods, are used in its
  place: <tt class="literal">ListCellRenderer</tt>,
  <tt class="literal">javax.swing.table.TableCellRenderer</tt> and
  <tt class="literal">javax.swing.tree.TreeCellRenderer</tt>.</p>
<a name="INDEX-2583"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Renderer</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Component <b class="function">getComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setValue</b> (Object <i class="parameter">aValue</i>, boolean <i class="parameter">isSelected</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RepaintManager</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2584"></a>
<p> 
  This class manages the repaint and relayout process for all Swing
  components in an application.  It also provides a shared off-screen
  image for Swing components that perform double-buffering.
  <tt class="literal">RepaintManager</tt> is an integral part of the Swing GUI
  framework and is used extensively by <tt class="literal">JComponent</tt>
  internals.  Applications rarely need to use it directly.  If yours
  does, you can obtain the current <tt class="literal">RepaintManager</tt>
  with the static <tt class="literal">currentManager()</tt> method.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">RepaintManager</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">RepaintManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static RepaintManager <b class="function">currentManager</b> (JComponent <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static RepaintManager <b class="function">currentManager</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setCurrentManager</b> (RepaintManager <i class="parameter">aRepaintManager</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDoubleBufferingEnabled</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDoubleBufferingEnabled</b> (boolean <i class="parameter">aFlag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getDoubleBufferMaximumSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDoubleBufferMaximumSize</b> (java.awt.Dimension <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addDirtyRegion</b> (JComponent <i class="parameter">c</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">w</i>, int <i class="parameter">h</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addInvalidComponent</b> (JComponent <i class="parameter">invalidComponent</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Rectangle <b class="function">getDirtyRegion</b> (JComponent <i class="parameter">aComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Image <b class="function">getOffscreenBuffer</b> (Component <i class="parameter">c</i>, int <i class="parameter">proposedWidth</i>, int <i class="parameter">proposedHeight</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isCompletelyDirty</b> (JComponent <i class="parameter">aComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">markCompletelyClean</b> (JComponent <i class="parameter">aComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">markCompletelyDirty</b> (JComponent <i class="parameter">aComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">paintDirtyRegions</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeInvalidComponent</b> (JComponent <i class="parameter">component</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">validateInvalidComponents</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">RepaintManager.setCurrentManager()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">RepaintManager.currentManager()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RootPaneContainer</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2585"></a>
<a name="INDEX-2586"></a>
<p> 
  This interface is implemented by all Swing window and applet
  classes that have a <tt class="literal">JRootPane</tt> as their single
  child.  It defines <tt class="literal">getRootPane()</tt> to return that
  <tt class="literal">JRootPane</tt>.  It also defines other methods to
  return the various children of the <tt class="literal">JRootPane</tt>.
  <tt class="literal">getContentPane()</tt> is the most frequently used method
  of this interface: it returns the container to which children are
  added.</p>
<a name="INDEX-2587"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">RootPaneContainer</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Container <b class="function">getContentPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setContentPane</b> (Container <i class="parameter">contentPane</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Component <b class="function">getGlassPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setGlassPane</b> (Component <i class="parameter">glassPane</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract JLayeredPane <b class="function">getLayeredPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setLayeredPane</b> (JLayeredPane <i class="parameter">layeredPane</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract JRootPane <b class="function">getRootPane</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">JApplet, JDialog, JFrame, JInternalFrame, JWindow</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Scrollable</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2588"></a>
<a name="INDEX-2589"></a>
<p> 
  This interface defines methods that should be implemented by any
  component that is likely to be placed within a
  <tt class="literal">JScrollPane</tt> or similar scrolling container.  A
  <tt class="literal">JScrollPane</tt> can provide more intelligent scrolling
  services for a <tt class="literal">Scrollable</tt> component than 
  for a non-<tt class="literal">Scrollable</tt> component.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">Scrollable</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.Dimension <b class="function">getPreferredScrollableViewportSize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getScrollableBlockIncrement</b> (java.awt.Rectangle <i class="parameter">visibleRect</i>, int <i class="parameter">orientation</i>, int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getScrollableTracksViewportHeight</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">getScrollableTracksViewportWidth</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getScrollableUnitIncrement</b> (java.awt.Rectangle <i class="parameter">visibleRect</i>, int <i class="parameter">orientation</i>, int <i class="parameter">direction</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">JList, JTable, JTree, javax.swing.text.JTextComponent</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ScrollPaneConstants</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2590"></a>
<p> 
  This interface defines constants used by
  <tt class="literal">JScrollPane</tt> and
  <tt class="literal">ScrollPaneLayout</tt>.  The <tt class="literal">int</tt>
  constants are the most interesting ones.  They are the legal values
  for the <tt class="literal">setHorizontalScrollBarPolicy()</tt> and
  <tt class="literal">setVerticalScrollBarPolicy()</tt> methods of
  <tt class="literal">JScrollPane</tt>.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">ScrollPaneConstants</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">COLUMN_HEADER</b> ;</td><td align="right"><i> ="COLUMN_HEADER"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">HORIZONTAL_SCROLLBAR</b> ;</td><td align="right"><i> ="HORIZONTAL_SCROLLBAR"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HORIZONTAL_SCROLLBAR_ALWAYS</b> ;</td><td align="right"><i> =32</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HORIZONTAL_SCROLLBAR_AS_NEEDED</b> ;</td><td align="right"><i> =30</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HORIZONTAL_SCROLLBAR_NEVER</b> ;</td><td align="right"><i> =31</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">HORIZONTAL_SCROLLBAR_POLICY</b> ;</td><td align="right"><i> ="HORIZONTAL_SCROLLBAR_POLICY"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">LOWER_LEFT_CORNER</b> ;</td><td align="right"><i> ="LOWER_LEFT_CORNER"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">LOWER_RIGHT_CORNER</b> ;</td><td align="right"><i> ="LOWER_RIGHT_CORNER"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">ROW_HEADER</b> ;</td><td align="right"><i> ="ROW_HEADER"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">UPPER_LEFT_CORNER</b> ;</td><td align="right"><i> ="UPPER_LEFT_CORNER"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">UPPER_RIGHT_CORNER</b> ;</td><td align="right"><i> ="UPPER_RIGHT_CORNER"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">VERTICAL_SCROLLBAR</b> ;</td><td align="right"><i> ="VERTICAL_SCROLLBAR"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VERTICAL_SCROLLBAR_ALWAYS</b> ;</td><td align="right"><i> =22</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VERTICAL_SCROLLBAR_AS_NEEDED</b> ;</td><td align="right"><i> =20</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VERTICAL_SCROLLBAR_NEVER</b> ;</td><td align="right"><i> =21</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">VERTICAL_SCROLLBAR_POLICY</b> ;</td><td align="right"><i> ="VERTICAL_SCROLLBAR_POLICY"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">VIEWPORT</b> ;</td><td align="right"><i> ="VIEWPORT"</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">JScrollPane, ScrollPaneLayout</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ScrollPaneLayout</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable layout manager</i></b></font></td>
</tr>
</table>
<a name="INDEX-2591"></a>
<p> 
  This class is the layout manager used by
  <tt class="literal">JScrollPane</tt>.  It arranges up to nine components: the
  <tt class="literal">JViewport</tt> that contains the component being
  scrolled, the horizontal and vertical scrollbars, the column and row
  header components, and up to four small corner components.
  Applications typically use <tt class="literal">JScrollPane</tt> directly
  and do not have to use this class.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ScrollPaneLayout</b> implements java.awt.LayoutManager, ScrollPaneConstants, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ScrollPaneLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JViewport <b class="function">getColumnHeader</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JScrollBar <b class="function">getHorizontalScrollBar</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getHorizontalScrollBarPolicy</b> ();</td><td align="right"><i> default:30</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setHorizontalScrollBarPolicy</b> (int <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JViewport <b class="function">getRowHeader</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JScrollBar <b class="function">getVerticalScrollBar</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getVerticalScrollBarPolicy</b> ();</td><td align="right"><i> default:20</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setVerticalScrollBarPolicy</b> (int <i class="parameter">x</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JViewport <b class="function">getViewport</b> ();</td><td align="right"><i> default:null</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Component <b class="function">getCorner</b> (String <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">syncWithScrollPane</b> (JScrollPane <i class="parameter">sp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addLayoutComponent</b> (String <i class="parameter">s</i>, Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">layoutContainer</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">minimumLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">preferredLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeLayoutComponent</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">addSingletonComponent</b> (Component <i class="parameter">oldC</i>, Component <i class="parameter">newC</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JViewport <b class="function">colHead</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JScrollBar <b class="function">hsb</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">hsbPolicy</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">lowerLeft</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">lowerRight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JViewport <b class="function">rowHead</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">upperLeft</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Component <b class="function">upperRight</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JViewport <b class="function">viewport</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected JScrollBar <b class="function">vsb</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected int <b class="function">vsbPolicy</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public java.awt.Rectangle <b class="function">getViewportBorderBounds</b> (JScrollPane <i class="parameter">scrollpane</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->ScrollPaneLayout(java.awt.LayoutManager,ScrollPaneConstants,Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">ScrollPaneLayout.UIResource</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ScrollPaneLayout.UIResource</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable layout manager</i></b></font></td>
</tr>
</table>
<a name="INDEX-2592"></a>
<p>  This class is a trivial subclass of <tt class="literal">ScrollPaneLayout</tt> 
  that implements
  the <tt class="literal">UIResource</tt> marker interface.  It is used
  only by look-and-feel implementations.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">ScrollPaneLayout.UIResource</b> extends ScrollPaneLayout implements javax.swing.plaf.UIResource {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">UIResource</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SingleSelectionModel</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>model</i></b></font></td>
</tr>
</table>
<a name="INDEX-2593"></a>
<p> 
  This interface defines the methods that must be implemented by a
  class that wants to keep track of a single selected item for a
  <tt class="literal">JTabbedPane</tt>, <tt class="literal">JMenuBar</tt>,
  <tt class="literal">JPopupMenu</tt>, or similar component.  Applications do
  not often implement this interface.  Instead, they rely on the
  <tt class="literal">DefaultSingleSelectionModel</tt> class, which is the
  default model for components that allow a single selected item.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">SingleSelectionModel</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeChangeListener</b> (javax.swing.event.ChangeListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">clearSelection</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getSelectedIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">isSelected</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setSelectedIndex</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DefaultSingleSelectionModel</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JMenuBar.setSelectionModel(), JPopupMenu.setSelectionModel(), JTabbedPane.setModel()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">JMenuBar.getSelectionModel(), JPopupMenu.getSelectionModel(), JTabbedPane.getModel()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">JTabbedPane.model</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SizeRequirements</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2594"></a>
<a name="INDEX-2595"></a>
<p>  This class exists for the convenience of layout managers.  It is used
  internally by <tt class="literal">BoxLayout</tt> and
  <tt class="literal">OverlayLayout</tt>.  Application programmers should not
  need to use it.  Component developers writing custom layout managers
  may find it useful.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">SizeRequirements</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SizeRequirements</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SizeRequirements</b> (int <i class="parameter">min</i>, int <i class="parameter">pref</i>, int <i class="parameter">max</i>, float <i class="parameter">a</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int[ ] <b class="function">adjustSizes</b> (int <i class="parameter">delta</i>, SizeRequirements[ ] <i class="parameter">children</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">calculateAlignedPositions</b> (int <i class="parameter">allocated</i>, SizeRequirements <i class="parameter">total</i>, SizeRequirements[ ] <i class="parameter">children</i>, int[ ] <i class="parameter">offsets</i>, int[ ] <i class="parameter">spans</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">calculateTiledPositions</b> (int <i class="parameter">allocated</i>, SizeRequirements <i class="parameter">total</i>, SizeRequirements[ ] <i class="parameter">children</i>, int[ ] <i class="parameter">offsets</i>, int[ ] <i class="parameter">spans</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static SizeRequirements <b class="function">getAlignedSizeRequirements</b> (SizeRequirements[ ] <i class="parameter">children</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static SizeRequirements <b class="function">getTiledSizeRequirements</b> (SizeRequirements[ ] <i class="parameter">children</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public float <b class="function">alignment</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">maximum</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">minimum</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">preferred</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->SizeRequirements(Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list.</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">SizeRequirements.{getAlignedSizeRequirements(), getTiledSizeRequirements()}, javax.swing.text.BoxView.{baselineRequirements(), calculateMajorAxisRequirements(), calculateMinorAxisRequirements()}, javax.swing.text.ParagraphView.calculateMinorAxisRequirements(), javax.swing.text.TableView.calculateMinorAxisRequirements(), javax.swing.text.html.BlockView.{calculateMajorAxisRequirements(), calculateMinorAxisRequirements()}, javax.swing.text.html.ParagraphView.calculateMinorAxisRequirements()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SwingConstants</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This interface defines a number of constants used throughout the Swing
  API to specify component positions and orientations.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">SwingConstants</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">BOTTOM</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CENTER</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">EAST</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HORIZONTAL</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LEADING</b> ;</td><td align="right"><i> =10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LEFT</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NORTH</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NORTH_EAST</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NORTH_WEST</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">RIGHT</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SOUTH</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SOUTH_EAST</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SOUTH_WEST</b> ;</td><td align="right"><i> =6</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TOP</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TRAILING</b> ;</td><td align="right"><i> =11</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">VERTICAL</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WEST</b> ;</td><td align="right"><i> =7</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AbstractButton, JCheckBoxMenuItem, JLabel, JProgressBar, JSeparator, JSlider, JTabbedPane, JTextField, JToolBar, SwingUtilities, javax.swing.text.View</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SwingUtilities</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2596"></a>
<p>  This class defines a variety of static methods that are useful in
  Swing applications.  Highlights include:
<a name="INDEX-2597"></a><a name="INDEX-2598"></a>
</p>

  <dl>
<dt>
<b><tt class="literal">invokeLater()</tt>, <tt class="literal">invokeAndWait()</tt></b>
</dt>
<dd>
<p>	  Place the specified <tt class="literal">Runnable</tt> object on the
	  event queue, so that its <tt class="literal">run()</tt> method is
	  invoked (later) from the event dispatch thread.
	  <tt class="literal">invokeLater()</tt> returns immediately;
	  <tt class="literal">invokeAndWait()</tt> blocks until the
	  <tt class="literal">run()</tt> method has run.  Since Swing is not
	  generally thread safe, these methods are useful when you need
	  to update the GUI from a thread that is not the event dispatch
	  thread.
	</p>
</dd>
<a name="INDEX-2599"></a>
<dt>
<b><tt class="literal">isEventDispatchThread()</tt></b>
</dt>
<dd>
<p>	  Determines whether the current thread is the event dispatch
	  thread.
	</p>
</dd>
<a name="INDEX-2600"></a>
<dt>
<b><tt class="literal">updateComponentTreeUI()</tt></b>
</dt>
<dd>
<p>	  Traverses the entire component tree rooted at the
	  specified component and asks each component to update its UI
	  delegate.  This method is useful after you have changed the pluggable
	  look-and-feel of a running application.
	</p>
</dd>
<a name="INDEX-2601"></a>
<a name="INDEX-2602"></a>
<a name="INDEX-2603"></a>
<dt>
<b><tt class="literal">isLeftMouseButton()</tt>, <tt class="literal">isMiddleMouseButton()</tt>, <tt class="literal">isRightMouseButton()</tt></b>
</dt>
<dd>
<p>	  Determine whether a
	  specified <tt class="literal">MouseEvent</tt> involves the left,
	  middle, or right mouse button.  For portability reasons, this
	  information is encoded in the <tt class="literal">modifiers</tt>
	  property that the <tt class="literal">MouseEvent</tt> 
	  inherits.  These methods simplify
	  access to it.
	</p>
</dd>
<a name="INDEX-2604"></a>
<dt>
<b><tt class="literal">getAncestorOfClass()</tt></b>
</dt>
<dd>
<p>	  Given a component and a component class, this method searches
	  the ancestors of the component until it finds one of the
	  specified class.  <tt class="literal">getRoot()</tt>,
	  <tt class="literal">getRootPane()</tt>,
	  <tt class="literal">windowForComponent()</tt>, and
	  <tt class="literal">getAncestorNamed()</tt> are related methods.
	</p>
</dd>
</dl>

<a name="INDEX-2605"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">SwingUtilities</b> implements SwingConstants {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Rectangle[ ] <b class="function">computeDifference</b> (java.awt.Rectangle <i class="parameter">rectA</i>, java.awt.Rectangle <i class="parameter">rectB</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Rectangle <b class="function">computeIntersection</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, java.awt.Rectangle <i class="parameter">dest</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">computeStringWidth</b> (java.awt.FontMetrics <i class="parameter">fm</i>, String <i class="parameter">str</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Rectangle <b class="function">computeUnion</b> (int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">width</i>, int <i class="parameter">height</i>, java.awt.Rectangle <i class="parameter">dest</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.event.MouseEvent <b class="function">convertMouseEvent</b> (Component <i class="parameter">source</i>, java.awt.event.MouseEvent <i class="parameter">sourceEvent</i>, Component <i class="parameter">destination</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Point <b class="function">convertPoint</b> (Component <i class="parameter">source</i>, java.awt.Point <i class="parameter">aPoint</i>, Component <i class="parameter">destination</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Point <b class="function">convertPoint</b> (Component <i class="parameter">source</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, Component <i class="parameter">destination</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">convertPointFromScreen</b> (java.awt.Point <i class="parameter">p</i>, Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">convertPointToScreen</b> (java.awt.Point <i class="parameter">p</i>, Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Rectangle <b class="function">convertRectangle</b> (Component <i class="parameter">source</i>, java.awt.Rectangle <i class="parameter">aRectangle</i>, Component <i class="parameter">destination</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Component <b class="function">findFocusOwner</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Accessible <b class="function">getAccessibleAt</b> (Component <i class="parameter">c</i>, java.awt.Point <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Accessible <b class="function">getAccessibleChild</b> (Component <i class="parameter">c</i>, int <i class="parameter">i</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">getAccessibleChildrenCount</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">getAccessibleIndexInParent</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static AccessibleStateSet <b class="function">getAccessibleStateSet</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Container <b class="function">getAncestorNamed</b> (String <i class="parameter">name</i>, Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Container <b class="function">getAncestorOfClass</b> (Class <i class="parameter">c</i>, Component <i class="parameter">comp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Component <b class="function">getDeepestComponentAt</b> (Component <i class="parameter">parent</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Rectangle <b class="function">getLocalBounds</b> (Component <i class="parameter">aComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Component <b class="function">getRoot</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static JRootPane <b class="function">getRootPane</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">invokeAndWait</b> (Runnable <i class="parameter">doRun</i>) throws InterruptedException, java.lang.reflect.InvocationTargetException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">invokeLater</b> (Runnable <i class="parameter">doRun</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isDescendingFrom</b> (Component <i class="parameter">a</i>, Component <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isEventDispatchThread</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isLeftMouseButton</b> (java.awt.event.MouseEvent <i class="parameter">anEvent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isMiddleMouseButton</b> (java.awt.event.MouseEvent <i class="parameter">anEvent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final boolean <b class="function">isRectangleContainingRectangle</b> (java.awt.Rectangle <i class="parameter">a</i>, java.awt.Rectangle <i class="parameter">b</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">isRightMouseButton</b> (java.awt.event.MouseEvent <i class="parameter">anEvent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">layoutCompoundLabel</b> (java.awt.FontMetrics <i class="parameter">fm</i>, String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>, int <i class="parameter">verticalAlignment</i>, int <i class="parameter">horizontalAlignment</i>, int <i class="parameter">verticalTextPosition</i>, int <i class="parameter">horizontalTextPosition</i>, java.awt.Rectangle <i class="parameter">viewR</i>, java.awt.Rectangle <i class="parameter">iconR</i>, java.awt.Rectangle <i class="parameter">textR</i>, int <i class="parameter">textIconGap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">layoutCompoundLabel</b> (JComponent <i class="parameter">c</i>, java.awt.FontMetrics <i class="parameter">fm</i>, String <i class="parameter">text</i>, Icon <i class="parameter">icon</i>, int <i class="parameter">verticalAlignment</i>, int <i class="parameter">horizontalAlignment</i>, int <i class="parameter">verticalTextPosition</i>, int <i class="parameter">horizontalTextPosition</i>, java.awt.Rectangle <i class="parameter">viewR</i>, java.awt.Rectangle <i class="parameter">iconR</i>, java.awt.Rectangle <i class="parameter">textR</i>, int <i class="parameter">textIconGap</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">paintComponent</b> (java.awt.Graphics <i class="parameter">g</i>, Component <i class="parameter">c</i>, Container <i class="parameter">p</i>, java.awt.Rectangle <i class="parameter">r</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">paintComponent</b> (java.awt.Graphics <i class="parameter">g</i>, Component <i class="parameter">c</i>, Container <i class="parameter">p</i>, int <i class="parameter">x</i>, int <i class="parameter">y</i>, int <i class="parameter">w</i>, int <i class="parameter">h</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">updateComponentTreeUI</b> (Component <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Window <b class="function">windowForComponent</b> (Component <i class="parameter">aComponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->SwingUtilities(SwingConstants)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Timer</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2606"></a>
<p>  This utility class fires an <tt class="literal">ActionEvent</tt>
  to a list of registered <tt class="literal">ActionListener</tt> objects after a
  specified period of time has elapsed.  Optionally, it may continue to
  fire action events at specified time intervals.  This class is
  useful for triggering delayed or repeated actions, such as
  animations. 
  After creating a <tt class="literal">Timer</tt> object, adding one or
  more <tt class="literal">ActionListener</tt> objects, and setting any
  necessary properties, call <tt class="literal">start()</tt> to make the
  <tt class="literal">Timer</tt> object start timing and firing events.  If
  you have configured the <tt class="literal">Timer</tt> to fire events
  repeatedly, use the <tt class="literal">stop()</tt> method when you want the
  events to stop.</p>
<p>  The <tt class="literal">initialDelay</tt> property specifies the time in
  milliseconds between the invocation of the <tt class="literal">start()</tt>
  method and the firing of the first <tt class="literal">ActionEvent</tt>.
  The <tt class="literal">repeats</tt> property specifies whether the
  <tt class="literal">Timer</tt> fires events repeatedly.
  If <tt class="literal">repeats</tt> is
  <tt class="literal">true</tt>, the <tt class="literal">delay</tt> property
  specifies the interval (in milliseconds) between repeated events.  If
  the <tt class="literal">delay</tt> property is set to a short interval or
  if the <tt class="literal">ActionEvent</tt> triggers a complex action, 
  the <tt class="literal">Timer</tt> may sometimes get behind and develop a
  backlog of events.  Set the <tt class="literal">coalesce</tt> property to
  <tt class="literal">true</tt> if the <tt class="literal">Timer</tt> is allowed to
  coalesce multiple pending events into a single
  <tt class="literal">ActionEvent</tt> in this situation.  The
  <tt class="literal">Timer</tt> constructor sets the
  <tt class="literal">repeats</tt> and <tt class="literal">coalesce</tt> properties to
  <tt class="literal">true</tt>, so be sure to change these properties if
  you don't want that behavior.  The constructor also 
  sets both the <tt class="literal">delay</tt>
  and <tt class="literal">initialDelay</tt> properties to the specified
  interval. 
  The static <tt class="literal">setLogTimers()</tt> method is useful when
  debugging code that uses the <tt class="literal">Timer</tt> class.  Passing
  <tt class="literal">true</tt> to this method causes <tt class="literal">Timer</tt>
  to print a debugging message to standard output each time it fires an
  event. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Timer</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Timer</b> (int <i class="parameter">delay</i>, java.awt.event.ActionListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">getLogTimers</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setLogTimers</b> (boolean <i class="parameter">flag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addActionListener</b> (java.awt.event.ActionListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeActionListener</b> (java.awt.event.ActionListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isCoalesce</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCoalesce</b> (boolean <i class="parameter">flag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDelay</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDelay</b> (int <i class="parameter">delay</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getInitialDelay</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setInitialDelay</b> (int <i class="parameter">initialDelay</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isRepeats</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setRepeats</b> (boolean <i class="parameter">flag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isRunning</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">restart</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">start</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">stop</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">fireActionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected javax.swing.event.EventListenerList <b class="function">listenerList</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Timer(Serializable)</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">javax.swing.tree.DefaultTreeCellEditor.timer</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ToolTipManager</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2607"></a>
<a name="INDEX-2608"></a>
<p>  This class manages tooltips for a Swing application.  There is only
  one <tt class="literal">ToolTipManager</tt> per application; you can obtain
  a reference to it with the static <tt class="literal">sharedInstance()</tt>
  method.  
  Any Swing component that has a tooltip set on it (with
  <tt class="literal">setToolTipText()</tt>) is automatically registered with
  the <tt class="literal">ToolTipManager</tt>, so applications do not usually
  have to work with this class explicitly.  If you want to
  explicitly register or unregister a component without setting its
  tooltip text, you can do so with
  <tt class="literal">registerComponent()</tt> and
  <tt class="literal">unregisterComponent()</tt>, respectively.</p>
<a name="INDEX-2609"></a>
<a name="INDEX-2610"></a>
<a name="INDEX-2611"></a>
<p>  To disable all tooltips in an application (at the request of
  an advanced user, for example), set the <tt class="literal">enabled</tt>
  property to <tt class="literal">false</tt>.  The other
  <tt class="literal">ToolTipManager</tt> properties are various delays that
  affect the behavior of tooltips.  These values are user preferences,
  and an application should not modify them except in response to an
  explicit user request made through some kind of preferences dialog or
  control panel.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ToolTipManager</b> extends java.awt.event.MouseAdapter implements java.awt.event.MouseMotionListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static ToolTipManager <b class="function">sharedInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDismissDelay</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDismissDelay</b> (int <i class="parameter">microSeconds</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEnabled</b> (boolean <i class="parameter">flag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getInitialDelay</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setInitialDelay</b> (int <i class="parameter">microSeconds</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLightWeightPopupEnabled</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getReshowDelay</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setReshowDelay</b> (int <i class="parameter">microSeconds</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">registerComponent</b> (JComponent <i class="parameter">component</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">unregisterComponent</b> (JComponent <i class="parameter">component</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing MouseMotionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseDragged</b> (java.awt.event.MouseEvent <i class="parameter">event</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseMoved</b> (java.awt.event.MouseEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding MouseAdapter</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseEntered</b> (java.awt.event.MouseEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mouseExited</b> (java.awt.event.MouseEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">mousePressed</b> (java.awt.event.MouseEvent <i class="parameter">event</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">heavyWeightPopupEnabled</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">lightWeightPopupEnabled</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Deprecated Public Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">#</span></td><td align="left">public void <b class="function">setLightWeightPopupEnabled</b> (boolean <i class="parameter">aFlag</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.awt.event.MouseAdapter(java.awt.event.MouseListener(java.util.EventListener))-->ToolTipManager(java.awt.event.MouseMotionListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">ToolTipManager.sharedInstance()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ToolTipManager.insideTimerAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2612"></a>
<p>  This protected inner class is used internally by
  <tt class="literal">ToolTipManager</tt>.  Applications never need to use it,
  and it probably should not be part of the public API.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">ToolTipManager.insideTimerAction</b> implements java.awt.event.ActionListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">insideTimerAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ActionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ToolTipManager.outsideTimerAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This protected inner class is used internally by
  <tt class="literal">ToolTipManager</tt>.  Applications never need to use it,
  and it probably should not be part of the public API.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">ToolTipManager.outsideTimerAction</b> implements java.awt.event.ActionListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">outsideTimerAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ActionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ToolTipManager.stillInsideTimerAction</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  This protected inner class is used internally by
  <tt class="literal">ToolTipManager</tt>.  Applications never need to use it,
  and it probably should not be part of the public API.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">ToolTipManager.stillInsideTimerAction</b> implements java.awt.event.ActionListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">stillInsideTimerAction</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing ActionListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">actionPerformed</b> (java.awt.event.ActionEvent <i class="parameter">e</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>UIDefaults</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable collection</i></b></font></td>
</tr>
</table>
<a name="INDEX-2613"></a>
<p>
<tt class="literal">UIDefaults</tt> is a <tt class="literal">Hashtable</tt>
  subclass used to maintain a table of named resources for use by a
  look-and-feel implementation.  Like any hashtable,
  <tt class="literal">UIDefaults</tt> defines a <tt class="literal">get()</tt> and a
  <tt class="literal">put()</tt> method.  In addition, it defines numerous
  more specific 
  <tt class="literal">get<em class="replaceable">XXX</em>()</tt> methods 
  that are used to
  look up resources of specific types.  
  Unless you are defining a custom look-and-feel, you probably do not
  have to use this class explicitly.</p>
<a name="INDEX-2614"></a>
<a name="INDEX-2615"></a>
<a name="INDEX-2616"></a>
<p>  The generic <tt class="literal">get()</tt> method and all the more specific
  methods that use it have a special
  behavior if the returned resource value implements either of the inner
  interfaces defined by <tt class="literal">UIDefaults</tt>.  If the returned
  object is a <tt class="literal">UIDefaults.ActiveValue</tt>, the
  value returned by the <tt class="literal">get()</tt> method is computed by
  calling the <tt class="literal">createValue()</tt> method of the
  <tt class="literal">ActiveValue</tt> object.  Similarly, if the returned
  value is a <tt class="literal">LazyValue</tt>, the final return value
  of the <tt class="literal">get()</tt> method is computed by calling the
  <tt class="literal">createValue()</tt> method of the
  <tt class="literal">LazyValue</tt> object.  Once this computation is done
  the first time, however, the <tt class="literal">LazyValue</tt> is replaced
  in the <tt class="literal">UIDefaults</tt> table with the computed value it
  yielded.  This is a useful technique for resources such as icons that
  have to be read in from external files.  It prevents them from being
  created unless they are actually needed.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">UIDefaults</b> extends java.util.Hashtable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">UIDefaults</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">UIDefaults</b> (Object[ ] <i class="parameter">keyValueList</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.border.Border <b class="function">getBorder</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Color <b class="function">getColor</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">getDimension</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Font <b class="function">getFont</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Icon <b class="function">getIcon</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Insets <b class="function">getInsets</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getInt</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getString</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public javax.swing.plaf.ComponentUI <b class="function">getUI</b> (JComponent <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Class <b class="function">getUIClass</b> (String <i class="parameter">uiClassID</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Class <b class="function">getUIClass</b> (String <i class="parameter">uiClassID</i>, ClassLoader <i class="parameter">uiClassLoader</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">putDefaults</b> (Object[ ] <i class="parameter">keyValueList</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Hashtable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">get</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">put</b> (Object <i class="parameter">key</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">firePropertyChange</b> (String <i class="parameter">propertyName</i>, Object <i class="parameter">oldValue</i>, Object <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">getUIError</b> (String <i class="parameter">msg</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.Dictionary-->java.util.Hashtable(Cloneable,java.util.Map,Serializable)-->UIDefaults</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">UIDefaults.ActiveValue.createValue(), UIDefaults.LazyValue.createValue()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">LookAndFeel.getDefaults(), UIManager.{getDefaults(), getLookAndFeelDefaults()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>UIDefaults.ActiveValue</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p> 
  This interface defines a special kind of resource that can be stored
  in a <tt class="literal">UIDefaults</tt> hashtable.  When the
  <tt class="literal">get()</tt> method of <tt class="literal">UIDefaults</tt> finds
  a <tt class="literal">ActiveValue</tt> in the table, it does not return the
  <tt class="literal">ActiveValue</tt> object.  Instead, it invokes its
  <tt class="literal">createValue()</tt> method and returns the object
  returned by that method.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static interface <b class="classname">UIDefaults.ActiveValue</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">createValue</b> (UIDefaults <i class="parameter">table</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>UIDefaults.LazyValue</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2617"></a>
<p> 
  This interface defines a special kind of resource that can be stored
  in a <tt class="literal">UIDefaults</tt> hashtable.  When the
  <tt class="literal">get()</tt> method of <tt class="literal">UIDefaults</tt> finds
  an <tt class="literal">LazyValue</tt> in the table, it does not return the
  <tt class="literal">LazyValue</tt> object.  Instead, it invokes its
  <tt class="literal">createValue()</tt> method.  The object returned by
  <tt class="literal">createValue()</tt> is used to replace the
  <tt class="literal">LazyValue</tt> in the 
  <tt class="literal">UIDefaults</tt> table and is then returned by the
  <tt class="literal">get()</tt> method.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract static interface <b class="classname">UIDefaults.LazyValue</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">createValue</b> (UIDefaults <i class="parameter">table</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>UIManager</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<a name="INDEX-2618"></a>
<p>  The static methods of this class perform a number of 
  look-and-feel related functions.  <tt class="literal">setLookAndFeel()</tt>
  is the most important.  It takes a <tt class="literal">LookAndFeel</tt>
  object or the class name of the desired look-and-feel and makes it
  the current look-and-feel.  <tt class="literal">getLookAndFeel()</tt>
  returns the <tt class="literal">LookAndFeel</tt> object that represents the
  current look-and-feel.
  <tt class="literal">getCrossPlatformLookAndFeelClassName()</tt> and
  <tt class="literal">getSystemLookAndFeelClassName()</tt> return class names
  for the default Java look-and-feel and for the look-and-feel that
  mimics the native platform look-and-feel, if one exists.
<tt class="literal">getInstalledLookAndFeels()</tt> returns information
  about all look-and-feels that are installed on the system.</p>
<a name="INDEX-2619"></a>
<a name="INDEX-2620"></a>
<a name="INDEX-2621"></a>
<a name="INDEX-2622"></a>
<a name="INDEX-2623"></a>
<p>  The <tt class="literal">UIManager</tt> also manages user interface defaults
  specified both by the current look-and-feel and by the application.
  The <tt class="literal">get()</tt> method looks up a value for the named
  key, checking the table of application defaults first and then
  checking the defaults specified by the look-and-feel.  The
  <tt class="literal">put()</tt> method inserts a new key/value binding into
  the application defaults table; it does not modify the look-and-feel
  defaults.  <tt class="literal">UIManager</tt> defines various other
  type-specific 
  <tt class="literal">get<em class="replaceable">XXX</em>()</tt> methods 
  that can be used to
  look up default UI resources of various types.</p>
<p>  Although all the methods of <tt class="literal">UIManager</tt> are static,
  they are implemented in such a way that each separate application
  context can independently set its own look-and-feel defaults.
  This means, for example, that multiple applets running in the same
  Java VM can install and use different look-and-feel implementations.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">UIManager</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">UIManager</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">addAuxiliaryLookAndFeel</b> (LookAndFeel <i class="parameter">laf</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">addPropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Object <b class="function">get</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static LookAndFeel[ ] <b class="function">getAuxiliaryLookAndFeels</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.border.Border <b class="function">getBorder</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Color <b class="function">getColor</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">getCrossPlatformLookAndFeelClassName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static UIDefaults <b class="function">getDefaults</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Dimension <b class="function">getDimension</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Font <b class="function">getFont</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Icon <b class="function">getIcon</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.awt.Insets <b class="function">getInsets</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static UIManager.LookAndFeelInfo[ ] <b class="function">getInstalledLookAndFeels</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static int <b class="function">getInt</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static LookAndFeel <b class="function">getLookAndFeel</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static UIDefaults <b class="function">getLookAndFeelDefaults</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">getString</b> (Object <i class="parameter">key</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">getSystemLookAndFeelClassName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static javax.swing.plaf.ComponentUI <b class="function">getUI</b> (JComponent <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">installLookAndFeel</b> (UIManager.LookAndFeelInfo <i class="parameter">info</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">installLookAndFeel</b> (String <i class="parameter">name</i>, String <i class="parameter">className</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Object <b class="function">put</b> (Object <i class="parameter">key</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static boolean <b class="function">removeAuxiliaryLookAndFeel</b> (LookAndFeel <i class="parameter">laf</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">removePropertyChangeListener</b> (java.beans.PropertyChangeListener <i class="parameter">listener</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setInstalledLookAndFeels</b> (UIManager.LookAndFeelInfo[ ] <i class="parameter">infos</i>) throws SecurityException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setLookAndFeel</b> (LookAndFeel <i class="parameter">newLookAndFeel</i>) throws UnsupportedLookAndFeelException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static void <b class="function">setLookAndFeel</b> (String <i class="parameter">className</i>) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->UIManager(Serializable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>UIManager.LookAndFeelInfo</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>


<a name="INDEX-2624"></a>
<a name="INDEX-2625"></a>
<p>  Instances of this class are returned by the
  <tt class="literal">getInstalledLookAndFeels()</tt> method of
  <tt class="literal">UIManager</tt>.  The <tt class="literal">getName()</tt> method
  of each <tt class="literal">LookAndFeelInfo</tt> provides a simple
  human-presentable name that can be displayed to the user in a list or


  menu that allows the user to choose a look-and-feel.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">UIManager.LookAndFeelInfo</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">LookAndFeelInfo</b> (String <i class="parameter">name</i>, String <i class="parameter">className</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getClassName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">UIManager.{installLookAndFeel(), setInstalledLookAndFeels()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">UIManager.getInstalledLookAndFeels()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>UnsupportedLookAndFeelException</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<a name="INDEX-2626"></a>
<p>  Thrown by the <tt class="literal">setLookAndFeel()</tt>
  method of the <tt class="literal">UIManager</tt> class to indicate that the
  requested look-and-feel is not installed, not supported, or not
  licensed on the current system.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">UnsupportedLookAndFeelException</b> extends Exception {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">UnsupportedLookAndFeelException</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->UnsupportedLookAndFeelException</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span><tt class="literal">UIManager.setLookAndFeel()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ViewportLayout</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i>serializable layout manager</i></b></font></td>
</tr>
</table>
<p>  This class is the default <tt class="literal">LayoutManager</tt> for the
  <tt class="literal">JViewport</tt> component.  Applications should never
  need to use this class explicitly.</p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ViewportLayout</b> implements java.awt.LayoutManager, Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ViewportLayout</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing LayoutManager</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addLayoutComponent</b> (String <i class="parameter">name</i>, Component <i class="parameter">c</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">layoutContainer</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">minimumLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.awt.Dimension <b class="function">preferredLayoutSize</b> (Container <i class="parameter">parent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeLayoutComponent</b> (Component <i class="parameter">c</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->ViewportLayout(java.awt.LayoutManager,Serializable)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>WindowConstants</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>javax.swing</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<a name="INDEX-2627"></a>
<a name="INDEX-2628"></a>
<p> 
  This interface defines three constants that describe possible
  actions that can be taken when the user requests that a window be
  closed.  These three constants are the legal arguments to the
  <tt class="literal">setDefaultCloseOperation()</tt> methods of
  <tt class="literal">JFrame</tt>, <tt class="literal">JInternalFrame</tt>, and
  <tt class="literal">JDialog</tt>.  Note that
  <tt class="literal">setDefaultCloseOperation()</tt> specifies only the default
  action when the user tries to close the window.  An application that
  registers a <tt class="literal">WindowListener</tt> object can augment this
  default operation with one of its own.</p>
<a name="INDEX-2629"></a>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract interface <b class="classname">WindowConstants</b> {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DISPOSE_ON_CLOSE</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DO_NOTHING_ON_CLOSE</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HIDE_ON_CLOSE</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">JDialog, JFrame, JInternalFrame</tt>
</p>
</div>
<a name="INDEX-2630"></a>
<a name="INDEX-2631"></a>
<a name="INDEX-2632"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch22_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch22_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch24_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/ch24_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">22.1. The javax.accessibility Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">24. The javax.swing.border Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
