<html>
<head>
<title>The java.beans.beancontext Package (Java in a Nutshell)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-487-8E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The java.beans.beancontext Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch09_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch09_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch11_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch11_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 10.  The java.beans.beancontext Package</h1>

<p>
<a name="INDEX-1274"></a>
  The <tt class="literal">java.beans.beancontext</tt> 
  package extends the JavaBeans component model to add the notion
  of a containment hierarchy. It also supports bean containers that
  provide an execution context for the beans they contain and that may
  also provide a set of services to those beans. This package is
  typically used by advanced bean developers and developers of bean-manipulation tools. Application programmers who are simply using
  beans do not typically use this package. <a href="#javanut3-java.beans-beancontext-1">Figure 10-1</a> shows the class
  hierarchy.</p>

<a name="javanut3-java.beans-beancontext-1"></a>
<div class="figure">
<img alt="figure" src="figs/JN3_1001.gif" webstripperlinkwas="figs/JN3_1001.gif"></div>
<h4 class="objtitle">Figure 10-1. The java.beans.beancontext package</h4>

<p>
<a name="INDEX-1275"></a><tt class="literal">BeanContext</tt> is the central interface of this
  package. It is a container for beans and also defines several methods
  that specify context information for beans. <tt class="literal">BeanContextServices</tt> extends
  <tt class="literal">BeanContext</tt> to define methods that allow a
  contained bean to query and request available services. A bean that
  wishes to be told about its containing 
  <tt class="literal">BeanContext</tt> implements
  the <tt class="literal">BeanContextChild</tt> interface. <tt class="literal">BeanContext</tt> is itself a
  <tt class="literal">BeanContextChild</tt>, which means that contexts can be
  nested within other contexts. </p>
<p>  See <a href="ch06_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch06_01.htm">Chapter 6, "JavaBeans"</a>, for more information on beans and
  bean contexts. </p>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContext</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>collection</i></b></font></td>
</tr>
</table>
<p>  This interface defines the methods that must be implemented by any
  class that wants to act as a logical container for JavaBeans components. Every <tt class="literal">BeanContext</tt> is also a
  <tt class="literal">BeanContextChild</tt> and can therefore be nested
  within a higher-level bean context. <tt class="literal">BeanContext</tt> is extended by
  <tt class="literal">BeanContextServices</tt>; any bean context that wants
  to provide services to the beans it contains must implement this more
  specialized interface. </p>
<p>
<a name="INDEX-1276"></a><a name="INDEX-1277"></a><a name="INDEX-1278"></a>
  The <tt class="literal">BeanContext</tt> interface extends the
  <tt class="literal">java.util.Collection</tt> interface; the children it
  contains are accessed using the methods of that interface. In
  addition, <tt class="literal">BeanContext</tt> defines several important
  methods of its own. <tt class="literal">instantiateChild()</tt>
  instantiates a new bean, in the same manner as the standard
  <tt class="literal">Beans.instantiate()</tt> method, and then makes
  that new bean a child of the context. Calling this method is
  typically the same as calling the three-argument version of
  <tt class="literal">Beans.instantiate()</tt>. <tt class="literal">getResource()</tt> and
  <tt class="literal">getResourceAsStream()</tt> are the
  <tt class="literal">BeanContext</tt> versions of the
  <tt class="literal">java.lang.Class</tt> and
  <tt class="literal">java.lang.ClassLoader</tt> methods of the same name. Some bean-context implementations may provide special behavior for
  these methods; others may simply delegate to the
  <tt class="literal">Class</tt> or <tt class="literal">ClassLoader</tt> of the bean. The remaining two methods allow the registration and deregistration of
  event listeners that the <tt class="literal">BeanContext</tt> notifies
  when bean children are added or removed from the context. </p>
<p>  Implementing a <tt class="literal">BeanContext</tt> is a more specialized
  task than developing a JavaBeans component. Many bean developers will never
  have to implement a bean context themselves. If you do
  implement a bean context, you'll probably find it easier to use
  <tt class="literal">BeanContextSupport</tt>, either by extending it or
  using an instance as a proxy. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">BeanContext</b> extends 
BeanContextChild, java.util.Collection, java.beans.DesignMode, java.beans.Visibility {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Object <b class="function">globalHierarchyLock</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addBeanContextMembershipListener</b> (BeanContextMembershipListener <i class="parameter">bcml</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeBeanContextMembershipListener</b> (BeanContextMembershipListener <i class="parameter">bcml</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.net.URL <b class="function">getResource</b> (String <i class="parameter">name</i>, BeanContextChild <i class="parameter">bcc</i>) throws IllegalArgumentException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.io.InputStream <b class="function">getResourceAsStream</b> (String <i class="parameter">name</i>, BeanContextChild <i class="parameter">bcc</i>) throws IllegalArgumentException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">instantiateChild</b> (String <i class="parameter">beanName</i>) throws java.io.IOExceptionClassNotFoundException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(BeanContext(BeanContextChild,java.util.Collection,java.beans.DesignMode,java.beans.Visibility))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">BeanContextServices, BeanContextSupport</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">java.beans.AppletInitializer.initialize(), java.beans.Beans.instantiate(), BeanContextChild.setBeanContext(), BeanContextChildSupport.{setBeanContext(), validatePendingSetBeanContext()}, BeanContextEvent.{BeanContextEvent(), setPropagatedFrom()}, BeanContextMembershipEvent.BeanContextMembershipEvent(), BeanContextSupport.BeanContextSupport()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">BeanContextChild.getBeanContext(), BeanContextChildSupport.getBeanContext(), BeanContextEvent.{getBeanContext(), getPropagatedFrom()}, BeanContextSupport.getBeanContextPeer()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">BeanContextChildSupport.beanContext, BeanContextEvent.propagatedFrom</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextChild</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1279"></a><a name="INDEX-1280"></a><a name="INDEX-1281"></a><a name="INDEX-1282"></a><a name="INDEX-1283"></a>

  JavaBeans components that are designed to be nested within a bean context
  and need to be aware of that context must
  implement this interface. <tt class="literal">BeanContextChild</tt>
  implements a single <tt class="literal">beanContext</tt> property that
  identifies the <tt class="literal">BeanContext</tt> within which the bean is
  contained. The <tt class="literal">beanContext</tt> property is bound and
  constrained, which means that it must fire
  <tt class="literal">PropertyChangeEvent</tt> events when
  <tt class="literal">setBeanContext()</tt> is called, and any call to
  <tt class="literal">setBeanContext()</tt> may result in a
  <tt class="literal">PropertyVetoException</tt> if one of the
  <tt class="literal">VetoableChangeListener</tt> objects vetoes the change. The <tt class="literal">setBeanContext()</tt> method is not intended for use
  by beans or by applications. When a bean is instantiated or
  deserialized, its containing bean context calls this method to
  introduce itself to the bean. The bean must store a reference to
  its <tt class="literal">BeanContext</tt> in a <tt class="literal">transient</tt>
  field so that the context is not serialized along with the bean
  itself. </p>
<p>  Implementing a <tt class="literal">BeanContextChild</tt> from scratch can be
  somewhat tricky because you must correctly handle the
  <tt class="literal">VetoableChangeListener</tt> protocol and correctly implement important conventions, such as storing the
  <tt class="literal">BeanContext</tt> reference in a
  <tt class="literal">transient</tt> field. Therefore, most bean developers
  do not implement the interface directly, but instead use
  <tt class="literal">BeanContextSupport</tt>, either by subclassing it or by
  using an instance as a delegate. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">BeanContextChild</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addPropertyChangeListener</b> (String <i class="parameter">name</i>, java.beans.PropertyChangeListener <i class="parameter">pcl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addVetoableChangeListener</b> (String <i class="parameter">name</i>, java.beans.VetoableChangeListener <i class="parameter">vcl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract BeanContext <b class="function">getBeanContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removePropertyChangeListener</b> (String <i class="parameter">name</i>, java.beans.PropertyChangeListener <i class="parameter">pcl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeVetoableChangeListener</b> (String <i class="parameter">name</i>, java.beans.VetoableChangeListener <i class="parameter">vcl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setBeanContext</b> (BeanContext <i class="parameter">bc</i>) throws java.beans.PropertyVetoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">BeanContext, BeanContextChildSupport</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">BeanContext.{getResource(), getResourceAsStream()}, BeanContextChildSupport.BeanContextChildSupport(), BeanContextServices.{getService(), releaseService()}, BeanContextServicesSupport.{getService(), releaseService()}, BeanContextSupport.{getResource(), getResourceAsStream()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">BeanContextChildSupport.getBeanContextChildPeer(), BeanContextProxy.getBeanContextProxy(), BeanContextSupport.getChildBeanContextChild()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">BeanContextChildSupport.beanContextChildPeer</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextChildComponentProxy</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>  If a <tt class="literal">BeanContextChild</tt> is not a
  <tt class="literal">Component</tt> subclass but has an associated
  <tt class="literal">Component</tt> object to display its visual
  representation, it implements this interface to allow access to that
  component. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">BeanContextChildComponentProxy</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.Component <b class="function">getComponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextChildSupport</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1284"></a><a name="INDEX-1285"></a><a name="INDEX-1286"></a><a name="INDEX-1287"></a><a name="INDEX-1288"></a>
  This class provides support for implementing the
  <tt class="literal">BeanContextChild</tt> interface in a way that correctly
  conforms to the details of the bean context specification. A subclass should implement
  <tt class="literal">initializeBeanContextResources()</tt> and
  <tt class="literal">releaseBeanContextResources()</tt> to obtain and release
  whatever resources the bean context child requires, such as service
  objects obtained from the containing <tt class="literal">BeanContext</tt>. These methods are called when the containing bean context
  introduces itself by calling <tt class="literal">setBeanContext()</tt>. Any
  resources obtained with these methods should be stored in
  <tt class="literal">transient</tt> fields so that they are not
  serialized along with the bean. A bean that wants a chance to approve
  any call to <tt class="literal">setBeanContext()</tt> before that call
  succeeds can implement
  <tt class="literal">validatePendingSetBeanContext()</tt>. If this method
  returns <tt class="literal">false</tt>, the
  <tt class="literal">setBeanContext()</tt> call that triggered it fails
  with a <tt class="literal">PropertyVetoException</tt>. </p>
<p>
<a name="INDEX-1289"></a><a name="INDEX-1290"></a>

  Many beans are AWT or Swing components and cannot subclass both
  <tt class="literal">Component</tt> 
  and <tt class="literal">BeanContextChildSupport</tt>. Therefore,
  many bean developers find it useful to delegate to an internal
  instance of <tt class="literal">BeanContextChildSupport</tt>. One way to do
  this is to have your bean implement the
  <tt class="literal">BeanContextProxy</tt> interface and simply return an
  instance of <tt class="literal">BeanContextChildSupport</tt> from the
  <tt class="literal">getBeanContextProxy()</tt> method. Another technique is
  to actually implement the <tt class="literal">BeanContextChild</tt>
  interface in your bean, but provide dummy methods that call the
  corresponding methods of <tt class="literal">BeanContextChildSupport</tt>. If you do this, you should pass an instance of your bean to the
  <tt class="literal">BeanContextChildSupport()</tt> constructor. This
  makes the delegation transparent so events appear to come
  directly from your bean. In either case, you can instantiate
  <tt class="literal">BeanContextChildSupport</tt> directly. Often, however,
  you want to create a custom subclass (perhaps as an inner class)
  to implement methods such as
  <tt class="literal">initializeBeanContextResources()</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BeanContextChildSupport</b> implements BeanContextChildBeanContextServicesListenerSerializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextChildSupport</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextChildSupport</b> (BeanContextChild <i class="parameter">bcc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">firePropertyChange</b> (String <i class="parameter">name</i>, Object <i class="parameter">oldValue</i>, Object <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">fireVetoableChange</b> (String <i class="parameter">name</i>, Object <i class="parameter">oldValue</i>, Object <i class="parameter">newValue</i>) throws java.beans.PropertyVetoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public BeanContextChild <b class="function">getBeanContextChildPeer</b> ();</td><td align="right"><i> default:BeanContextChildSupport</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDelegated</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">validatePendingSetBeanContext</b> (BeanContext <i class="parameter">newValue</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing BeanContextChild</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addPropertyChangeListener</b> (String <i class="parameter">name</i>, java.beans.PropertyChangeListener <i class="parameter">pcl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addVetoableChangeListener</b> (String <i class="parameter">name</i>, java.beans.VetoableChangeListener <i class="parameter">vcl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public BeanContext <b class="function">getBeanContext</b> ();</td><td align="right"><i> synchronized default:null</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removePropertyChangeListener</b> (String <i class="parameter">name</i>, java.beans.PropertyChangeListener <i class="parameter">pcl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeVetoableChangeListener</b> (String <i class="parameter">name</i>, java.beans.VetoableChangeListener <i class="parameter">vcl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBeanContext</b> (BeanContext <i class="parameter">bc</i>) throws java.beans.PropertyVetoException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing BeanContextServiceRevokedListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">serviceRevoked</b> (BeanContextServiceRevokedEvent <i class="parameter">bcsre</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing BeanContextServicesListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">serviceAvailable</b> (BeanContextServiceAvailableEvent <i class="parameter">bcsae</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">initializeBeanContextResources</b> ();</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">releaseBeanContextResources</b> ();</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public BeanContextChild <b class="function">beanContextChildPeer</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient BeanContext <b class="function">beanContext</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.beans.PropertyChangeSupport <b class="function">pcSupport</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient boolean <b class="function">rejectedSetBCOnce</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.beans.VetoableChangeSupport <b class="function">vcSupport</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->BeanContextChildSupport(BeanContextChild,BeanContextServicesListener(BeanContextServiceRevokedListener(java.util.EventListener)),Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">BeanContextSupport</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextContainerProxy</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1291"></a><a name="INDEX-1292"></a>
  This interface is implemented by a <tt class="literal">BeanContext</tt>
  that has a <tt class="literal">java.awt.Container</tt> associated with it. The <tt class="literal">getContainer()</tt> method allows any interested
  parties to obtain a reference to the container associated with the bean
  context. It is a common practice for bean contexts to be associated with
  containers. Unfortunately, <tt class="literal">BeanContext</tt>
  implements <tt class="literal">java.util.Collection</tt>, which has method-name conflicts with <tt class="literal">java.awt.Container</tt>, so no
  <tt class="literal">Container</tt> subclass can implement the
  <tt class="literal">BeanContext</tt> interface. See also <tt class="literal">BeanContextProxy</tt>, which
  reverses the direction of the proxy relationship. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">BeanContextContainerProxy</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.awt.Container <b class="function">getContainer</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1293"></a><a name="INDEX-1294"></a><a name="INDEX-1295"></a><a name="INDEX-1296"></a>
  This is the abstract superclass of all bean context-related events. <tt class="literal">getBeanContext()</tt> returns the source of the event. If <tt class="literal">isPropagated()</tt> returns
  <tt class="literal">true</tt>, the event has been propagated through a
  hierarchy of bean contexts, and <tt class="literal">getPropagatedFrom()</tt>
  returns the most recent bean context to propagate the event. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">BeanContextEvent</b> extends java.util.EventObject {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">BeanContextEvent</b> (BeanContext <i class="parameter">bc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public BeanContext <b class="function">getBeanContext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public BeanContext <b class="function">getPropagatedFrom</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isPropagated</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPropagatedFrom</b> (BeanContext <i class="parameter">bc</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected BeanContext <b class="function">propagatedFrom</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->BeanContextEvent</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">BeanContextMembershipEvent, BeanContextServiceAvailableEvent, BeanContextServiceRevokedEvent</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextMembershipEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1297"></a><a name="INDEX-1298"></a><a name="INDEX-1299"></a><a name="INDEX-1300"></a><a name="INDEX-1301"></a>
  An event of this type is generated by a <tt class="literal">BeanContext</tt>
  when beans are added to it or removed from it. The event object
  contains the list of children that were added or removed and allows
  access to that list in several ways. The <tt class="literal">size()</tt>
  method returns the number of affected children. The
  <tt class="literal">contains()</tt> method checks whether a specified object
  was one of the affected children. <tt class="literal">toArray()</tt>
  returns the list of affected children as an array, and
  <tt class="literal">iterator()</tt> returns the list in the form of a
  <tt class="literal">java.util.Iterator</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BeanContextMembershipEvent</b> extends BeanContextEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextMembershipEvent</b> (BeanContext <i class="parameter">bc</i>, Object[ ] <i class="parameter">changes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextMembershipEvent</b> (BeanContext <i class="parameter">bc</i>, java.util.Collection <i class="parameter">changes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Object <i class="parameter">child</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Iterator <b class="function">iterator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">size</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">toArray</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Collection <b class="function">children</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->BeanContextEvent-->BeanContextMembershipEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">BeanContextMembershipListener.{childrenAdded(), childrenRemoved()}, BeanContextSupport.{fireChildrenAdded(), fireChildrenRemoved()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextMembershipListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1302"></a><a name="INDEX-1303"></a>
  This interface should be implemented by any object that wants to be
  notified when children are added to or removed from a
  <tt class="literal">BeanContext</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">BeanContextMembershipListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">childrenAdded</b> (BeanContextMembershipEvent <i class="parameter">bcme</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">childrenRemoved</b> (BeanContextMembershipEvent <i class="parameter">bcme</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(BeanContextMembershipListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">BeanContext.{addBeanContextMembershipListener(), removeBeanContextMembershipListener()}, BeanContextSupport.{addBeanContextMembershipListener(), removeBeanContextMembershipListener()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">BeanContextSupport.getChildBeanContextMembershipListener()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextProxy</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1304"></a><a name="INDEX-1305"></a>

  This interface is implemented by a JavaBeans component 
  (often, but not always, an
  AWT <tt class="literal">Component</tt> or <tt class="literal">Container</tt>
  object) that is not itself a <tt class="literal">BeanContext</tt> or
  <tt class="literal">BeanContextChild</tt>, but has a
  <tt class="literal">BeanContext</tt> or <tt class="literal">BeanContextChild</tt>
  object associated with it. The
  <tt class="literal">getBeanContextProxy()</tt> method returns the associated
  object. The return type of this method is
  <tt class="literal">BeanContextChild</tt>. Depending on the context in
  which you call this method, however, the returned object may actually
  be a <tt class="literal">BeanContext</tt> or
  <tt class="literal">BeanContextServices</tt> object. You should test for
  this using the <tt class="literal">instanceof</tt> operator before casting
  the object to these more specific types. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">BeanContextProxy</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract BeanContextChild <b class="function">getBeanContextProxy</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextServiceAvailableEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1306"></a><a name="INDEX-1307"></a><a name="INDEX-1308"></a><a name="INDEX-1309"></a>
  An event of this type is generated to notify interested
  <tt class="literal">BeanContextServicesListener</tt> objects that a new class
  of service is available from a
  <tt class="literal">BeanContextServices</tt> object. <tt class="literal">getServiceClass()</tt> returns the class of the service,
  and <tt class="literal">getCurrentServiceSelectors()</tt> may return a set
  of additional arguments that can parameterize the service. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BeanContextServiceAvailableEvent</b> extends BeanContextEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextServiceAvailableEvent</b> (BeanContextServices <i class="parameter">bcs</i>, Class <i class="parameter">sc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Iterator <b class="function">getCurrentServiceSelectors</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Class <b class="function">getServiceClass</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public BeanContextServices <b class="function">getSourceAsBeanContextServices</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Class <b class="function">serviceClass</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->BeanContextEvent-->BeanContextServiceAvailableEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">BeanContextChildSupport.serviceAvailable(), BeanContextServicesListener.serviceAvailable(), BeanContextServicesSupport.{fireServiceAdded(), serviceAvailable()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextServiceProvider</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1310"></a>
  This interface defines the methods that must be implemented by a
  factory class that wants to provide service objects to beans. To
  provide its service, a <tt class="literal">BeanContextServiceProvider</tt>
  is passed to the <tt class="literal">addService()</tt> method of a
  <tt class="literal">BeanContextServices</tt> object. This creates a mapping
  in the <tt class="literal">BeanContextServices</tt> object between a class
  of service (such as <tt class="literal">java.awt.print.PrinterJob</tt>) and
  a <tt class="literal">BeanContextServiceProvider</tt> that can return a suitable
  instance of that class to provide the service. </p>
<p>
<a name="INDEX-1311"></a><a name="INDEX-1312"></a>
  When a <tt class="literal">BeanContextChild</tt> requests a service of a
  particular class from its <tt class="literal">BeanContextServices</tt>
  container, the <tt class="literal">BeanContextServices</tt> object finds the
  appropriate <tt class="literal">BeanContextServiceProvider</tt> object and
  forwards the request to its <tt class="literal">getService()</tt> method. When the bean relinquishes the service,
  <tt class="literal">releaseService()</tt> is called. A
  <tt class="literal">getService()</tt> request may include an arbitrary
  object as an additional parameter or service selector. Service
  providers that use the service selector argument and that support a
  finite set of legal service selector values should implement the
  <tt class="literal">getCurrentServiceSelectors()</tt> method to allow the
  list of legal selector values to be queried. </p>
<p>  Bean developers typically do not have to use or implement this
  interface. From the point of view of a bean context child, service
  objects are obtained from a <tt class="literal">BeanContextServices</tt>
  object. Developers creating <tt class="literal">BeanContextServices</tt>
  implementations, however, must implement appropriate
  <tt class="literal">BeanContextServiceProvider</tt> objects to provide the
  services. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">BeanContextServiceProvider</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Iterator <b class="function">getCurrentServiceSelectors</b> (BeanContextServices <i class="parameter">bcs</i>, Class <i class="parameter">serviceClass</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getService</b> (BeanContextServices <i class="parameter">bcs</i>, Object <i class="parameter">requestor</i>, Class <i class="parameter">serviceClass</i>, Object <i class="parameter">serviceSelector</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">releaseService</b> (BeanContextServices <i class="parameter">bcs</i>, Object <i class="parameter">requestor</i>, Object <i class="parameter">service</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">BeanContextServicesSupport.BCSSProxyServiceProvider</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">BeanContextServices.{addService(), revokeService()}, BeanContextServicesSupport.{addService(), createBCSSServiceProvider(), revokeService()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">BeanContextServicesSupport.BCSSServiceProvider.getServiceProvider()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">BeanContextServicesSupport.BCSSServiceProvider.serviceProvider</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextServiceProviderBeanInfo</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1313"></a>
  A <tt class="literal">BeanContextServiceProvider</tt> that wishes to
  provide information to a GUI builder tool about the service or
  services it offers should implement this <tt class="literal">BeanInfo</tt>
  subinterface. Following the standard <tt class="literal">BeanInfo</tt>
  naming conventions, the implementing class should have the same name
  as the service provider class, with "BeanInfo" appended. This 
  enables a design tool to look for and dynamically load the bean info
  class when necessary. </p>
<p>
<a name="INDEX-1314"></a><tt class="literal">getServicesBeanInfo()</tt> should return an array of
  <tt class="literal">BeanInfo</tt> objects, one for each class of service
  offered by the <tt class="literal">BeanContextServiceProvider</tt>. These
  <tt class="literal">BeanInfo</tt> objects enable a design tool to allow
  the user to visually configure the service object. This can be quite
  useful, since service objects may be instances of existing classes
  that were not designed with the standard JavaBeans naming conventions
  in mind. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">BeanContextServiceProviderBeanInfo</b> extends java.beans.BeanInfo {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.beans.BeanInfo[ ] <b class="function">getServicesBeanInfo</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(BeanContextServiceProviderBeanInfo(java.beans.BeanInfo))</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextServiceRevokedEvent</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>serializable event</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1315"></a><a name="INDEX-1316"></a><a name="INDEX-1317"></a>
  This event class provides details about a service
  revocation initiated by a <tt class="literal">BeanContextServices</tt> object. <tt class="literal">getServiceClass()</tt> specifies the class of service
  being revoked. <tt class="literal">isCurrentServiceInvalidNow()</tt>
  specifies whether the currently owned service object has become
  invalid. If this method returns <tt class="literal">true</tt>, the bean that
  receives this event must stop using the service object immediately. If the method returns <tt class="literal">false</tt>, the bean can
  continue to use the service object, but future requests for services
  of this class will fail. </p>

<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BeanContextServiceRevokedEvent</b> extends BeanContextEvent {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextServiceRevokedEvent</b> (BeanContextServices <i class="parameter">bcs</i>, Class <i class="parameter">sc</i>, boolean <i class="parameter">invalidate</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Class <b class="function">getServiceClass</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public BeanContextServices <b class="function">getSourceAsBeanContextServices</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isCurrentServiceInvalidNow</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isServiceClass</b> (Class <i class="parameter">service</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Class <b class="function">serviceClass</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.EventObject(Serializable)-->BeanContextEvent-->BeanContextServiceRevokedEvent</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">BeanContextChildSupport.serviceRevoked(), BeanContextServiceRevokedListener.serviceRevoked(), BeanContextServicesSupport.{fireServiceRevoked(), serviceRevoked()}, BeanContextServicesSupport.BCSSProxyServiceProvider.serviceRevoked()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextServiceRevokedListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1318"></a><a name="INDEX-1319"></a><a name="INDEX-1320"></a>

  This interface defines a method that is invoked when a service
  object returned by a <tt class="literal">BeanContextServices</tt> object is forcibly revoked. Unlike other types of event listeners, the
  <tt class="literal">BeanContextServiceRevokedListener</tt> is not registered
  and deregistered with a pair of add and remove methods. Instead, an
  implementation of this interface must be passed to every
  <tt class="literal">getService()</tt> call on a
  <tt class="literal">BeanContextServices</tt> object. If the returned
  service is ever revoked by the granting
  <tt class="literal">BeanContextServiceProvider</tt> object before the bean
  has relinquished the service, the
  <tt class="literal">serviceRevoked()</tt> method of this interface is
  called. </p>
<p>  When a service is revoked, it means that future requests for the
  service will not succeed. But it may also mean that current service
  objects have become invalid and must not be used anymore. The
  <tt class="literal">serviceRevoked()</tt> method should call the
  <tt class="literal">isCurrentServiceInvalidNow()</tt> method of the supplied
  event object to determine if this is the case. If so, it must
  immediately stop using the service object. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">BeanContextServiceRevokedListener</b> extends java.util.EventListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">serviceRevoked</b> (BeanContextServiceRevokedEvent <i class="parameter">bcsre</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(BeanContextServiceRevokedListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">BeanContextServicesListener, BeanContextServicesSupport.BCSSProxyServiceProvider</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">BeanContextServices.getService(), BeanContextServicesSupport.getService()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextServices</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>collection event listener</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1321"></a><a name="INDEX-1322"></a><a name="INDEX-1323"></a><a name="INDEX-1324"></a><a name="INDEX-1325"></a><a name="INDEX-1326"></a>
 
  This interface defines additional methods a bean context
  class must implement if it wants to provide services to the
  beans it contains. A bean calls <tt class="literal">hasService()</tt> to determine if a service
  of a particular type is available from its bean context. It calls
  <tt class="literal">getService()</tt> to request an instance of the specified
  service class and then calls <tt class="literal">releaseService()</tt> when it
  no longer needs the service object. A bean that wants to find the
  complete list of available services can call
  <tt class="literal">getCurrentServiceClasses()</tt>. Some services allow
  (or require) a service selector object to be passed to
  the <tt class="literal">getService()</tt> method to provide additional
  information about the service object. If a service
  defines a fixed set of legal service selectors, 
  <tt class="literal">getCurrentServiceSelectors()</tt> allows a bean to
  iterate through the set of selector objects. Beans that want to know
  when new services become available or when existing services are
  revoked should register a
  <tt class="literal">BeanContextServicesListener</tt> object with
  <tt class="literal">addBeanContextServicesListener()</tt>. </p>
<p>  If a <tt class="literal">BeanContextServices</tt> object does not provide a
  requested service, but is nested within another
  <tt class="literal">BeanContext</tt>, it should check whether any of its
  ancestor bean contexts can provide the service. The
  <tt class="literal">BeanContextServices</tt> interface extends
  <tt class="literal">BeanContextServicesListener</tt>. This means that every
  <tt class="literal">BeanContextServices</tt> object can be listening to the
  set of services available from its container. </p>
<p>
<a name="INDEX-1327"></a><a name="INDEX-1328"></a><a name="INDEX-1329"></a>
  The previous methods are the ones beans call to obtain
  services. <tt class="literal">BeanContextServices</tt> defines a different
  set of methods service providers use to deliver services. <tt class="literal">addService()</tt> defines a
  <tt class="literal">BeanContextServiceProvider</tt> for a specified
  <tt class="literal">Class</tt> of service. <tt class="literal">revokeService()</tt> removes this mapping between
  service class and service provider, and indicates that the specified
  service is no longer available. When a service is revoked, the
  <tt class="literal">BeanContextServices</tt> object must notify any beans
  that have been granted service objects (and have not released them
  yet) that the service has been revoked. It does this by notifying the
  <tt class="literal">BeanContextServiceRevokedListener</tt> objects passed to
  the <tt class="literal">getService()</tt> method. </p>
<p>  Bean context developers may find it easier to use the
  <tt class="literal">BeanContextServicesSupport</tt> class, either by
  subclassing or by delegation, instead of implementing
  <tt class="literal">BeanContextServices</tt> from scratch. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">BeanContextServices</b> extends BeanContext, BeanContextServicesListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">addBeanContextServicesListener</b> (BeanContextServicesListener <i class="parameter">bcsl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">removeBeanContextServicesListener</b> (BeanContextServicesListener <i class="parameter">bcsl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">addService</b> (Class <i class="parameter">serviceClass</i>, BeanContextServiceProvider <i class="parameter">serviceProvider</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Iterator <b class="function">getCurrentServiceClasses</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Iterator <b class="function">getCurrentServiceSelectors</b> (Class <i class="parameter">serviceClass</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getService</b> (BeanContextChild <i class="parameter">child</i>, Object <i class="parameter">requestor</i>, Class <i class="parameter">serviceClass</i>, Object <i class="parameter">serviceSelector</i>, BeanContextServiceRevokedListener <i class="parameter">bcsrl</i>) throws java.util.TooManyListenersException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract boolean <b class="function">hasService</b> (Class <i class="parameter">serviceClass</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">releaseService</b> (BeanContextChild <i class="parameter">child</i>, Object <i class="parameter">requestor</i>, Object <i class="parameter">service</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">revokeService</b> (Class <i class="parameter">serviceClass</i>, BeanContextServiceProvider <i class="parameter">serviceProvider</i>, boolean <i class="parameter">revokeCurrentServicesNow</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(BeanContextServices(BeanContext(BeanContextChild,java.util.Collection,java.beans.DesignMode,java.beans.Visibility),BeanContextServicesListener(BeanContextServiceRevokedListener(java.util.EventListener))))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">BeanContextServicesSupport</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">BeanContextServiceAvailableEvent.BeanContextServiceAvailableEvent(), BeanContextServiceProvider.{getCurrentServiceSelectors(), getService(), releaseService()}, BeanContextServiceRevokedEvent.BeanContextServiceRevokedEvent(), BeanContextServicesSupport.BeanContextServicesSupport(), BeanContextServicesSupport.BCSSProxyServiceProvider.{getCurrentServiceSelectors(), getService(), releaseService()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">BeanContextServiceAvailableEvent.getSourceAsBeanContextServices(), BeanContextServiceRevokedEvent.getSourceAsBeanContextServices(), BeanContextServicesSupport.getBeanContextServicesPeer()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextServicesListener</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>event listener</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1330"></a><a name="INDEX-1331"></a><a name="INDEX-1332"></a>

 
  This interface adds a <tt class="literal">serviceAvailable()</tt>
  method to the <tt class="literal">serviceRevoked()</tt> method of
  <tt class="literal">BeanContextServiceRevokedListener</tt>. Listeners of this
  type can be registered with a <tt class="literal">BeanContextServices</tt>
  object and are notified when a new class of service becomes
  available or when an existing class of service is revoked. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">BeanContextServicesListener</b> extends BeanContextServiceRevokedListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">serviceAvailable</b> (BeanContextServiceAvailableEvent <i class="parameter">bcsae</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(BeanContextServicesListener(BeanContextServiceRevokedListener(java.util.EventListener)))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">BeanContextChildSupport, BeanContextServices</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">BeanContextServices.{addBeanContextServicesListener(), removeBeanContextServicesListener()}, BeanContextServicesSupport.{addBeanContextServicesListener(), removeBeanContextServicesListener()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">BeanContextServicesSupport.getChildBeanContextServicesListener()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextServicesSupport</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>serializable collection</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1333"></a>

  This class is a useful implementation of the
  <tt class="literal">BeanContextServices</tt> interface that correctly
  conforms to the bean context specifications and conventions. Most
  bean context implementors find it easier to subclass this class
  or delegate to an instance of this class rather than implement
  <tt class="literal">BeanContextServices</tt> from scratch. The most common technique is to implement the
  <tt class="literal">BeanContextProxy</tt> interface and return an instance
  of <tt class="literal">BeanContextServicesSupport</tt> from the
  <tt class="literal">getBeanContextProxy()</tt> method. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BeanContextServicesSupport</b> extends BeanContextSupport implements BeanContextServices {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextServicesSupport</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextServicesSupport</b> (BeanContextServices <i class="parameter">peer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextServicesSupport</b> (BeanContextServices <i class="parameter">peer</i>, java.util.Locale <i class="parameter">lcle</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextServicesSupport</b> (BeanContextServices <i class="parameter">peer</i>, java.util.Locale <i class="parameter">lcle</i>, boolean <i class="parameter">dtime</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextServicesSupport</b> (BeanContextServices <i class="parameter">peer</i>, java.util.Locale <i class="parameter">lcle</i>, boolean <i class="parameter">dTime</i>, boolean <i class="parameter">visible</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final BeanContextServicesListener <b class="function">getChildBeanContextServicesListener</b> (Object <i class="parameter">child</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addBeanContextServicesListener</b> (BeanContextServicesListener <i class="parameter">bcsl</i>);</td><td align="right"><i> Implements:BeanContextServices</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeBeanContextServicesListener</b> (BeanContextServicesListener <i class="parameter">bcsl</i>);</td><td align="right"><i> Implements:BeanContextServices</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public BeanContextServices <b class="function">getBeanContextServicesPeer</b> ();</td><td align="right"><i> default:BeanContextServicesSupport</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing BeanContextServiceRevokedListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">serviceRevoked</b> (BeanContextServiceRevokedEvent <i class="parameter">bcssre</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing BeanContextServices</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addBeanContextServicesListener</b> (BeanContextServicesListener <i class="parameter">bcsl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">addService</b> (Class <i class="parameter">serviceClass</i>, BeanContextServiceProvider <i class="parameter">bcsp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Iterator <b class="function">getCurrentServiceClasses</b> ();</td><td align="right"><i> default:BeanContextSupport.BCSIterator</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Iterator <b class="function">getCurrentServiceSelectors</b> (Class <i class="parameter">serviceClass</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getService</b> (BeanContextChild <i class="parameter">child</i>, Object <i class="parameter">requestor</i>, Class <i class="parameter">serviceClass</i>, Object <i class="parameter">serviceSelector</i>, BeanContextServiceRevokedListener <i class="parameter">bcsrl</i>) throws java.util.TooManyListenersException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">hasService</b> (Class <i class="parameter">serviceClass</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">releaseService</b> (BeanContextChild <i class="parameter">child</i>, Object <i class="parameter">requestor</i>, Object <i class="parameter">service</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeBeanContextServicesListener</b> (BeanContextServicesListener <i class="parameter">bcsl</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">revokeService</b> (Class <i class="parameter">serviceClass</i>, BeanContextServiceProvider <i class="parameter">bcsp</i>, boolean <i class="parameter">revokeCurrentServicesNow</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing BeanContextServicesListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">serviceAvailable</b> (BeanContextServiceAvailableEvent <i class="parameter">bcssae</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding BeanContextSupport</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">initialize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding BeanContextSupport</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">bcsPreDeserializationHook</b> (java.io.ObjectInputStream <i class="parameter">ois</i>) throws java.io.IOExceptionClassNotFoundException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">bcsPreSerializationHook</b> (java.io.ObjectOutputStream <i class="parameter">oos</i>) throws java.io.IOException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">childJustRemovedHook</b> (Object <i class="parameter">child</i>, BeanContextSupport.BCSChild <i class="parameter">bcsc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected BeanContextSupport.BCSChild <b class="function">createBCSChild</b> (Object <i class="parameter">targetChild</i>, Object <i class="parameter">peer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding BeanContextChildSupport</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">initializeBeanContextResources</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">releaseBeanContextResources</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">addService</b> (Class <i class="parameter">serviceClass</i>, BeanContextServiceProvider <i class="parameter">bcsp</i>, boolean <i class="parameter">fireEvent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected BeanContextServicesSupport.BCSSServiceProvider <b class="function">createBCSSServiceProvider</b> (Class <i class="parameter">sc</i>, BeanContextServiceProvider <i class="parameter">bcsp</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">fireServiceAdded</b> (BeanContextServiceAvailableEvent <i class="parameter">bcssae</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">fireServiceAdded</b> (Class <i class="parameter">serviceClass</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">fireServiceRevoked</b> (BeanContextServiceRevokedEvent <i class="parameter">bcsre</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">fireServiceRevoked</b> (Class <i class="parameter">serviceClass</i>, boolean <i class="parameter">revokeNow</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient java.util.ArrayList <b class="function">bcsListeners</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient BeanContextServicesSupport.BCSSProxyServiceProvider <b class="function">proxy</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient int <b class="function">serializable</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient java.util.HashMap <b class="function">services</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->BeanContextChildSupport(BeanContextChild,BeanContextServicesListener(BeanContextServiceRevokedListener(java.util.EventListener)),Serializable)-->BeanContextSupport(BeanContext(BeanContextChild,java.util.Collection,java.beans.DesignMode,java.beans.Visibility),java.beans.PropertyChangeListener(java.util.EventListener),Serializable,java.beans.VetoableChangeListener(java.util.EventListener))-->BeanContextServicesSupport(BeanContextServices(BeanContext(BeanContextChild,java.util.Collection,java.beans.DesignMode,java.beans.Visibility),BeanContextServicesListener(BeanContextServiceRevokedListener(java.util.EventListener))))</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextServicesSupport.BCSSChild</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1334"></a><a name="INDEX-1335"></a>
  This class is used internally by
  <tt class="literal">BeanContextServicesSupport</tt> to associate additional
  information with each child of the bean context. It has no
  <tt class="literal">public</tt> or <tt class="literal">protected</tt> method or
  fields, but may be customized by subclassing. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">BeanContextServicesSupport.BCSSChild</b> extends BeanContextSupport.BCSChild {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextServicesSupport.BCSSProxyServiceProvider</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1336"></a><a name="INDEX-1337"></a>
  This inner class is used internally by
  <tt class="literal">BeanContextServicesSupport</tt> to properly handle
  delegation to the services provided by containing bean contexts. It
  implements the <tt class="literal">BeanContextServiceProvider</tt> interface
  in terms of the methods of a containing
  <tt class="literal">BeanContextServices</tt> object. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">BeanContextServicesSupport.BCSSProxyServiceProvider</b> implements BeanContextServiceProviderBeanContextServiceRevokedListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing BeanContextServiceProvider</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Iterator <b class="function">getCurrentServiceSelectors</b> (BeanContextServices <i class="parameter">bcs</i>, Class <i class="parameter">serviceClass</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getService</b> (BeanContextServices <i class="parameter">bcs</i>, Object <i class="parameter">requestor</i>, Class <i class="parameter">serviceClass</i>, Object <i class="parameter">serviceSelector</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">releaseService</b> (BeanContextServices <i class="parameter">bcs</i>, Object <i class="parameter">requestor</i>, Object <i class="parameter">service</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing BeanContextServiceRevokedListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">serviceRevoked</b> (BeanContextServiceRevokedEvent <i class="parameter">bcsre</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">BeanContextServicesSupport.proxy</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextServicesSupport.BCSSServiceProvider</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1338"></a><a name="INDEX-1339"></a>
  This inner class is a trivial wrapper around a
  <tt class="literal">BeanContextServiceProvider</tt> object. Subclasses that want to
  associate additional information with each service provider can
  subclass this class and override the
  <tt class="literal">createBCSSServiceProvider()</tt> method of 
  <tt class="literal">BeanContextServicesSupport</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected static class <b class="classname">BeanContextServicesSupport.BCSSServiceProvider</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected BeanContextServiceProvider <b class="function">getServiceProvider</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected BeanContextServiceProvider <b class="function">serviceProvider</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">BeanContextServicesSupport.createBCSSServiceProvider()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextSupport</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>serializable collection</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1340"></a>

  This class provides a simple, easily customizable implementation of
  <tt class="literal">BeanContext</tt>. Most bean context implementors
  find it easier to subclass <tt class="literal">BeanContextSupport</tt> or
  create a <tt class="literal">BeanContextSupport</tt> delegate object rather than implement the <tt class="literal">BeanContext</tt> interface from scratch. </p>
<p>  Bean contexts are often AWT or Swing containers and cannot (because
  of a method-naming conflict) implement <tt class="literal">BeanContext</tt>. Therefore, a context object implements the
  <tt class="literal">BeanContextProxy</tt> interface and returns a
  <tt class="literal">BeanContext</tt> object from its
  <tt class="literal">getBeanContextProxy()</tt> method. A
  <tt class="literal">BeanContextSupport</tt> object is a suitable object to
  return from this method. </p>
<p>
<a name="INDEX-1341"></a><a name="INDEX-1342"></a>
  Some bean contexts require customized behavior, however, and
  <tt class="literal">BeanContextSupport</tt> is designed to be easily
  customized through subclassing. Protected methods such as
  <tt class="literal">childJustAddedHook()</tt> and
  <tt class="literal">validatePendingAdd()</tt> are particularly useful when
  subclassing. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">BeanContextSupport</b> extends BeanContextChildSupport implements BeanContext, java.beans.PropertyChangeListener, Serializable, java.beans.VetoableChangeListener {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextSupport</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextSupport</b> (BeanContext <i class="parameter">peer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextSupport</b> (BeanContext <i class="parameter">peer</i>, java.util.Locale <i class="parameter">lcle</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextSupport</b> (BeanContext <i class="parameter">peer</i>, java.util.Locale <i class="parameter">lcle</i>, boolean <i class="parameter">dtime</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">BeanContextSupport</b> (BeanContext <i class="parameter">peer</i>, java.util.Locale <i class="parameter">lcle</i>, boolean <i class="parameter">dTime</i>, boolean <i class="parameter">visible</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final boolean <b class="function">classEquals</b> (Class <i class="parameter">first</i>, Class <i class="parameter">second</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final BeanContextChild <b class="function">getChildBeanContextChild</b> (Object <i class="parameter">child</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final BeanContextMembershipListener <b class="function">getChildBeanContextMembershipListener</b> (Object <i class="parameter">child</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final java.beans.PropertyChangeListener <b class="function">getChildPropertyChangeListener</b> (Object <i class="parameter">child</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final Serializable <b class="function">getChildSerializable</b> (Object <i class="parameter">child</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final java.beans.VetoableChangeListener <b class="function">getChildVetoableChangeListener</b> (Object <i class="parameter">child</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected static final java.beans.Visibility <b class="function">getChildVisibility</b> (Object <i class="parameter">child</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Event Registration Methods (by event name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addBeanContextMembershipListener</b> (BeanContextMembershipListener <i class="parameter">bcml</i>);</td><td align="right"><i> Implements:BeanContext</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeBeanContextMembershipListener</b> (BeanContextMembershipListener <i class="parameter">bcml</i>);</td><td align="right"><i> Implements:BeanContext</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public BeanContext <b class="function">getBeanContextPeer</b> ();</td><td align="right"><i> default:BeanContextSupport</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDesignTime</b> ();</td><td align="right"><i> Implements:DesignMode synchronized default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDesignTime</b> (boolean <i class="parameter">dTime</i>);</td><td align="right"><i> Implements:DesignMode synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> Implements:Collection default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Locale <b class="function">getLocale</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLocale</b> (java.util.Locale <i class="parameter">newLocale</i>) throws java.beans.PropertyVetoException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isSerializing</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsKey</b> (Object <i class="parameter">o</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final void <b class="function">readChildren</b> (java.io.ObjectInputStream <i class="parameter">ois</i>) throws java.io.IOExceptionClassNotFoundException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final void <b class="function">writeChildren</b> (java.io.ObjectOutputStream <i class="parameter">oos</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing BeanContext</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addBeanContextMembershipListener</b> (BeanContextMembershipListener <i class="parameter">bcml</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.net.URL <b class="function">getResource</b> (String <i class="parameter">name</i>, BeanContextChild <i class="parameter">bcc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.io.InputStream <b class="function">getResourceAsStream</b> (String <i class="parameter">name</i>, BeanContextChild <i class="parameter">bcc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">instantiateChild</b> (String <i class="parameter">beanName</i>) throws java.io.IOExceptionClassNotFoundException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">removeBeanContextMembershipListener</b> (BeanContextMembershipListener <i class="parameter">bcml</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Collection</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">add</b> (Object <i class="parameter">targetChild</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">addAll</b> (java.util.Collection <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clear</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">contains</b> (Object <i class="parameter">o</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsAll</b> (java.util.Collection <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Iterator <b class="function">iterator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">remove</b> (Object <i class="parameter">targetChild</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">removeAll</b> (java.util.Collection <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">retainAll</b> (java.util.Collection <i class="parameter">c</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">size</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">toArray</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">toArray</b> (Object[ ] <i class="parameter">arry</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing DesignMode</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDesignTime</b> ();</td><td align="right"><i> synchronized default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDesignTime</b> (boolean <i class="parameter">dTime</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing PropertyChangeListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">propertyChange</b> (java.beans.PropertyChangeEvent <i class="parameter">pce</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing VetoableChangeListener</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">vetoableChange</b> (java.beans.PropertyChangeEvent <i class="parameter">pce</i>) throws java.beans.PropertyVetoException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Visibility</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">avoidingGui</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">dontUseGui</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">needsGui</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">okToUseGui</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Iterator <b class="function">bcsChildren</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">bcsPreDeserializationHook</b> (java.io.ObjectInputStream <i class="parameter">ois</i>) throws java.io.IOExceptionClassNotFoundException;</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">bcsPreSerializationHook</b> (java.io.ObjectOutputStream <i class="parameter">oos</i>) throws java.io.IOException;</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">childDeserializedHook</b> (Object <i class="parameter">child</i>, BeanContextSupport.BCSChild <i class="parameter">bcsc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">childJustAddedHook</b> (Object <i class="parameter">child</i>, BeanContextSupport.BCSChild <i class="parameter">bcsc</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">childJustRemovedHook</b> (Object <i class="parameter">child</i>, BeanContextSupport.BCSChild <i class="parameter">bcsc</i>);</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final Object[ ] <b class="function">copyChildren</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected BeanContextSupport.BCSChild <b class="function">createBCSChild</b> (Object <i class="parameter">targetChild</i>, Object <i class="parameter">peer</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">deserialize</b> (java.io.ObjectInputStream <i class="parameter">ois</i>, java.util.Collection <i class="parameter">coll</i>) throws java.io.IOExceptionClassNotFoundException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">fireChildrenAdded</b> (BeanContextMembershipEvent <i class="parameter">bcme</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">fireChildrenRemoved</b> (BeanContextMembershipEvent <i class="parameter">bcme</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected void <b class="function">initialize</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">remove</b> (Object <i class="parameter">targetChild</i>, boolean <i class="parameter">callChildSetBC</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected final void <b class="function">serialize</b> (java.io.ObjectOutputStream <i class="parameter">oos</i>, java.util.Collection <i class="parameter">coll</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">validatePendingAdd</b> (Object <i class="parameter">targetChild</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">validatePendingRemove</b> (Object <i class="parameter">targetChild</i>);</td><td align="right"><i> constant</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient java.util.ArrayList <b class="function">bcmListeners</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected transient java.util.HashMap <b class="function">children</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">designTime</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Locale <b class="function">locale</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected boolean <b class="function">okToUseGui</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->BeanContextChildSupport(BeanContextChild,BeanContextServicesListener(BeanContextServiceRevokedListener(java.util.EventListener)),Serializable)-->BeanContextSupport(BeanContext(BeanContextChild,java.util.Collection,java.beans.DesignMode,java.beans.Visibility),java.beans.PropertyChangeListener(java.util.EventListener),Serializable,java.beans.VetoableChangeListener(java.util.EventListener))</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">BeanContextServicesSupport</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextSupport.BCSChild</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1343"></a><a name="INDEX-1344"></a>
  This class is used internally by
  <tt class="literal">BeanContextSupport</tt> to keep track of additional
  information about its children. In particular, for children that
  implement the <tt class="literal">BeanContextProxy</tt> interface, it keeps
  track of the <tt class="literal">BeanContextChild</tt> object associated
  with the child. This class does not define any <tt class="literal">public</tt> or
  <tt class="literal">protected</tt> fields or methods. <tt class="literal">BeanContextSupport</tt> subclasses that want to
  associate additional information with each child can subclass this
  class and override the <tt class="literal">createBCSChild()</tt> method to
  instantiate the new subclass. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected class <b class="classname">BeanContextSupport.BCSChild</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">BeanContextServicesSupport.BCSSChild</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">BeanContextServicesSupport.childJustRemovedHook(), BeanContextSupport.{childDeserializedHook(), childJustAddedHook(), childJustRemovedHook()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">BeanContextServicesSupport.createBCSChild(), BeanContextSupport.createBCSChild()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BeanContextSupport.BCSIterator</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.beans.beancontext</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-1345"></a><a name="INDEX-1346"></a><a name="INDEX-1347"></a>
  This class implements the <tt class="literal">java.util.Iterator</tt>
  interface. An instance of this class is returned by the
  <tt class="literal">iterator()</tt> method implemented by
  <tt class="literal">BeanContextSupport</tt>. The
  <tt class="literal">remove()</tt> method has an empty implementation and
  does not actually remove a child of the bean context. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">protected static final class <b class="classname">BeanContextSupport.BCSIterator</b> implements java.util.Iterator {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Iterator</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">hasNext</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">next</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">remove</b> ();</td><td align="right"><i> empty</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<a name="INDEX-1348"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch09_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch09_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch11_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch11_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">9.1. The java.beans Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">11. The java.io Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
