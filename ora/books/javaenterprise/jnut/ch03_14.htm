<html>
<head>
<title>Modifier Summary (Java in a Nutshell)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-487-8E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Modifier Summary">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch03_13.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch03_13.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch03_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch03_01.htm">Chapter 3: Object-Oriented Programming in Java</a></td><td align="right" valign="top" width="172"><a href="ch03_15.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch03_15.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h2 class="sect1">3.14. Modifier Summary</h2>
<p>
<a name="INDEX-576"></a>

      As we've seen, classes, interfaces, and their members can be
      declared with one or more <em class="emphasis">modifiers</em>--keywords
      such as <tt class="literal">public</tt>, <tt class="literal">static</tt>, and
      <tt class="literal">final</tt>. This chapter has introduced the 
      <tt class="literal">public</tt>, <tt class="literal">protected</tt>,
      and <tt class="literal">private</tt> access modifiers, as well as the 
      <tt class="literal">abstract</tt>, <tt class="literal">final</tt>, and
      <tt class="literal">static</tt> modifiers. In addition to these six,
      Java defines five other less commonly used modifiers. <a href="#javanut3-ch-3-tab-2">Table 3-2</a> lists the Java modifiers,
      explains what types of Java constructs they can modify, and
      explains what they do. </p>
<a name="javanut3-ch-3-tab-2"></a>
<h4 class="objtitle">Table 3-2. Java Modifiers</h4>
<table border="1">
<tr>
<th>Modifier</th><th>Used on</th><th>Meaning</th>
</tr>
<tr>
<td><tt class="literal">abstract</tt></td><td>class</td><td>
<p>		The class contains unimplemented methods and cannot be
		instantiated. </p>
</td>
</tr>
<tr>
<td></td><td>interface</td><td>
<p>                All interfaces are <tt class="literal">abstract</tt>. The modifier is
		optional in interface declarations. </p>
</td>
</tr>
<tr>
<td><tt class="literal">abstract</tt></td><td>method</td><td>
<p>		No body is provided for the method; it is provided by a
		subclass. The signature is followed by a semicolon. The
		enclosing class must also be <tt class="literal">abstract</tt>. </p>
</td>
</tr>
<tr>
<td><tt class="literal">final</tt></td><td>class</td><td>
<p>		The class cannot be subclassed. </p>
</td>
</tr>
<tr>
<td></td><td>method</td><td>
<p>		The method cannot be overridden (and is not subject to
		dynamic method lookup). </p>
</td>
</tr>
<tr>
<td></td><td>field</td><td>
<p>		The field cannot have its value changed. <tt class="literal">static
		final</tt> fields are compile-time constants. </p>
</td>
</tr>
<tr>
<td></td><td>variable</td><td>
<p>		A local variable, method parameter,
		or exception parameter cannot have its value changed 
		( Java 1.1 and later). Useful with local classes. </p>
</td>
</tr>
<tr>
<td><tt class="literal">native</tt></td><td>method</td><td>
<p>		The method is implemented in some 
		platform-dependent way (often in C). No body is provided; the signature
		is followed by a semicolon. </p>
</td>
</tr>
<tr>
<td><em class="emphasis">none (package)</em></td><td>class</td><td>
<p>		A non-<tt class="literal">public</tt> class is accessible only
		in its package. </p>
</td>
</tr>
<tr>
<td></td><td>interface</td><td>
<p>		A non-<tt class="literal">public</tt> interface is accessible
		only in its package. </p>
</td>
</tr>
<tr>
<td></td><td>member</td><td>
<p>		A member that is not <tt class="literal">private</tt>,
		<tt class="literal">protected</tt>, or 
		<tt class="literal">public</tt> has package visibility and is
		accessible only within its package. </p>
</td>
</tr>
<tr>
<td><tt class="literal">private</tt></td><td>member</td><td>
<p>		The member is accessible only within the class that
		defines it. </p>
</td>
</tr>
<tr>
<td><tt class="literal">protected</tt></td><td>member</td><td>
<p>		The member is accessible only within the package in which it
		is defined and within subclasses. </p>
</td>
</tr>
<tr>
<td><tt class="literal">public</tt></td><td>class</td><td>
<p>		The class is accessible anywhere its package is. </p>
</td>
</tr>
<tr>
<td></td><td>interface</td><td>
<p>		The interface is accessible anywhere its package is. </p>
</td>
</tr>
<tr>
<td></td><td>member</td><td>
<p>		The member is accessible anywhere its class is. </p>
</td>
</tr>
<tr>
<td><tt class="literal">strictfp</tt></td><td>class</td><td>
<p>		All methods of the class are implicitly
		<tt class="literal">strictfp</tt> ( Java 1.2 and later). </p>
</td>
</tr>
<tr>
<td><tt class="literal">strictfp</tt></td><td>method</td><td>
<p>		All floating-point computation done by the method must be
		performed in a way that strictly conforms to the IEEE 754
		standard. In particular, all values, including
		intermediate results, must be expressed as IEEE
		<tt class="literal">float</tt> or <tt class="literal">double</tt>
		values and cannot take advantage of any extra precision
		or range offered by native platform floating-point formats
		or hardware ( Java 1.2 and later). This modifier is rarely used. </p>
</td>
</tr>
<tr>
<td><tt class="literal">static</tt></td><td>class</td><td>
<p>		An inner class declared
		<tt class="literal">static</tt> is 
		a top-level class, not associated with a member of the
		containing class (Java 1.1 and later). </p>
</td>
</tr>
<tr>
<td></td><td>method</td><td>
<p>		A <tt class="literal">static</tt> method is a class method. It is not passed an implicit <tt class="literal">this</tt>
		object reference. It can be invoked through the class name. </p>
</td>
</tr>
<tr>
<td></td><td>field</td><td>
<p>		A <tt class="literal">static</tt> field is a class field. There is only one instance of the field, regardless of
		the number of class instances created. It can be
		accessed through the class name. </p>
</td>
</tr>
<tr>
<td></td><td>initializer</td><td>
<p>		The initializer is run when the class is loaded, rather than
		when an instance is created. </p>
</td>
</tr>
<tr>
<td><tt class="literal">synchronized</tt></td><td>method</td><td>
<p>		The method makes non-atomic modifications to the class
		or instance, so care must be taken to ensure that two
		threads cannot modify the class or instance at the same
		time. For a <tt class="literal">static</tt> method, a lock
		for the class is acquired before executing the
	    method. For a non-<tt class="literal">static</tt> method, a lock for
		the specific object instance is acquired. </p>
</td>
</tr>
<tr>
<td><tt class="literal">transient</tt></td><td>field</td><td>
<p>		The field is not part of the persistent state of the
		object and should not be serialized with the object. Used with object serialization; see
		<tt class="literal">java.io.ObjectOutputStream</tt>. </p>
</td>
</tr>
<tr>
<td><tt class="literal">volatile</tt></td><td>field</td><td>
<p>		The field can be accessed by unsynchronized threads, so
		certain optimizations must not be performed on it. This
		modifier can sometimes be used as an alternative to
		<tt class="literal">synchronized</tt>. This modifier is very
		rarely used.
<a name="INDEX-577"></a>
</p>
</td>
</tr>
</table>

<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch03_13.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch03_13.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch03_15.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch03_15.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">3.13. How Inner Classes Work</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">3.15. C++ Features Not Found in Java</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
