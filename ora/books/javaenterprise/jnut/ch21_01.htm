<html>
<head>
<title>The java.security.spec Package (Java in a Nutshell)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-487-8E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The java.security.spec Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch20_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch20_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch22_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch22_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 21.  The java.security.spec Package</h1>

<p>
<a name="INDEX-2633"></a><a name="INDEX-2634"></a><a name="INDEX-2635"></a><a name="INDEX-2636"></a>
  The <tt class="literal">java.security.spec</tt> 
  package contains classes that define transparent representations
  for DSA and RSA public and private keys and for X.509 and PKCS#8
  encodings of those keys. It also defines a transparent representation
  for DSA algorithm parameters. The classes in this package are used in
  conjunction with <tt class="literal">java.security.KeyFactory</tt> and
  <tt class="literal">java.security.AlgorithmParameters</tt> for converting
  opaque <tt class="literal">Key</tt> and
  <tt class="literal">AlgorithmParameters</tt> objects to and from transparent
  representations. <a href="#javanut3-java.security.spec">Figure 21-1</a> shows the class hierarchy of
  this package.</p>

<a name="javanut3-java.security.spec"></a>
<div class="figure">
<img alt="figure" src="figs/JN3_2101.gif" webstripperlinkwas="figs/JN3_2101.gif"></div>
<h4 class="objtitle">Figure 21-1. The java.security.spec package</h4>

<p>  This package is not frequently used. To make use of it, you
  must be somewhat familiar with the mathematics that underlies DSA and RSA
  public-key encryption and the encoding standards that specify how
  keys are encoded as byte streams. </p>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AlgorithmParameterSpec</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2637"></a>
  This interface defines no methods; it marks classes that
  define a transparent representation of cryptographic parameters. You
  can use an <tt class="literal">AlgorithmParameterSpec</tt> object to
  initialize an opaque
  <tt class="literal">java.security.AlgorithmParameters</tt> object. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">AlgorithmParameterSpec</b>  {</td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DSAParameterSpec, RSAKeyGenParameterSpec, javax.crypto.spec.DHGenParameterSpec, javax.crypto.spec.DHParameterSpec, javax.crypto.spec.IvParameterSpec, javax.crypto.spec.PBEParameterSpec, javax.crypto.spec.RC2ParameterSpec, javax.crypto.spec.RC5ParameterSpec</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list. </p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.security.AlgorithmParameters.getParameterSpec(), java.security.AlgorithmParametersSpi.engineGetParameterSpec()</tt>
</p>
</div>

<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DSAParameterSpec</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2638"></a>
  This class represents algorithm parameters used with DSA public-key
  cryptography. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DSAParameterSpec</b> implements AlgorithmParameterSpecjava.security.interfaces.DSAParams {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DSAParameterSpec</b> (java.math.BigInteger <i class="parameter">p</i>, java.math.BigInteger <i class="parameter">q</i>, java.math.BigInteger <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing DSAParams</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getG</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getP</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getQ</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DSAParameterSpec(AlgorithmParameterSpec,java.security.interfaces.DSAParams)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DSAPrivateKeySpec</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2639"></a>
  This class is a transparent representation of a DSA private key. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DSAPrivateKeySpec</b> implements KeySpec {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DSAPrivateKeySpec</b> (java.math.BigInteger <i class="parameter">x</i>, java.math.BigInteger <i class="parameter">p</i>, java.math.BigInteger <i class="parameter">q</i>, java.math.BigInteger <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getG</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getP</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getQ</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getX</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DSAPrivateKeySpec(KeySpec)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DSAPublicKeySpec</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2640"></a>
  This class is a transparent representation of a DSA public key. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DSAPublicKeySpec</b> implements KeySpec {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DSAPublicKeySpec</b> (java.math.BigInteger <i class="parameter">y</i>, java.math.BigInteger <i class="parameter">p</i>, java.math.BigInteger <i class="parameter">q</i>, java.math.BigInteger <i class="parameter">g</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getG</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getP</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getQ</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getY</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DSAPublicKeySpec(KeySpec)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>EncodedKeySpec</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2641"></a>
  This abstract class represents a public or private key in an encoded
  format. It serves as the superclass for encoding-specific classes. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">EncodedKeySpec</b> implements KeySpec {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">EncodedKeySpec</b> (byte[ ] <i class="parameter">encodedKey</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public byte[ ] <b class="function">getEncoded</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract String <b class="function">getFormat</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->EncodedKeySpec(KeySpec)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">PKCS8EncodedKeySpec, X509EncodedKeySpec</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>InvalidKeySpecException</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2642"></a>
  Signals a problem with a <tt class="literal">KeySpec</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">InvalidKeySpecException</b> extends java.security.GeneralSecurityException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InvalidKeySpecException</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InvalidKeySpecException</b> (String <i class="parameter">msg</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->java.security.GeneralSecurityException-->InvalidKeySpecException</tt>
</p>

<p>
<span class="refsect1">Thrown By: </span><tt class="literal">java.security.KeyFactory.{generatePrivate(), generatePublic(), getKeySpec()}, java.security.KeyFactorySpi.{engineGeneratePrivate(), engineGeneratePublic(), engineGetKeySpec()}, javax.crypto.SecretKeyFactory.{generateSecret(), getKeySpec()}, javax.crypto.SecretKeyFactorySpi.{engineGenerateSecret(), engineGetKeySpec()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>InvalidParameterSpecException</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2643"></a>
  Signals a problem with an <tt class="literal">AlgorithmParameterSpec</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">InvalidParameterSpecException</b> extends java.security.GeneralSecurityException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InvalidParameterSpecException</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">InvalidParameterSpecException</b> (String <i class="parameter">msg</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->java.security.GeneralSecurityException-->InvalidParameterSpecException</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span><tt class="literal">java.security.AlgorithmParameters.{getParameterSpec(), init()}, java.security.AlgorithmParametersSpi.{engineGetParameterSpec(), engineInit()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>KeySpec</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2644"></a>

  This interface defines no methods; it marks classes that
  define a transparent representation of a cryptographic key. Use a
  <tt class="literal">java.security.KeyFactory</tt> to convert a
  <tt class="literal">KeySpec</tt> to and from an opaque
  <tt class="literal">java.security.Key</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">KeySpec</b>  {</td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">DSAPrivateKeySpec, DSAPublicKeySpec, EncodedKeySpec, RSAPrivateKeySpec, RSAPublicKeySpec, javax.crypto.spec.DESedeKeySpec, javax.crypto.spec.DESKeySpec, javax.crypto.spec.DHPrivateKeySpec, javax.crypto.spec.DHPublicKeySpec, javax.crypto.spec.PBEKeySpec, javax.crypto.spec.SecretKeySpec</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">java.security.KeyFactory.{generatePrivate(), generatePublic()}, java.security.KeyFactorySpi.{engineGeneratePrivate(), engineGeneratePublic()}, javax.crypto.SecretKeyFactory.generateSecret(), javax.crypto.SecretKeyFactorySpi.engineGenerateSecret()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.security.KeyFactory.getKeySpec(), java.security.KeyFactorySpi.engineGetKeySpec(), javax.crypto.SecretKeyFactory.getKeySpec(), javax.crypto.SecretKeyFactorySpi.engineGetKeySpec()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>PKCS8EncodedKeySpec</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2645"></a>
  This class represents a private key, encoded according to the PKCS#8
  standard. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">PKCS8EncodedKeySpec</b> extends EncodedKeySpec {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">PKCS8EncodedKeySpec</b> (byte[ ] <i class="parameter">encodedKey</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding EncodedKeySpec</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public byte[ ] <b class="function">getEncoded</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final String <b class="function">getFormat</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->EncodedKeySpec(KeySpec)-->PKCS8EncodedKeySpec</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RSAKeyGenParameterSpec</b></font></td><td align="right"><font size="+1"><b>Java 1.3 Beta</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2646"></a>
  This class represents parameters that generate public/private key
  pairs for RSA cryptography. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">RSAKeyGenParameterSpec</b> implements AlgorithmParameterSpec {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">RSAKeyGenParameterSpec</b> (int <i class="parameter">keysize</i>, java.math.BigInteger <i class="parameter">publicExponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final java.math.BigInteger <b class="function">F0</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final java.math.BigInteger <b class="function">F4</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getKeysize</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getPublicExponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->RSAKeyGenParameterSpec(AlgorithmParameterSpec)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RSAPrivateCrtKeySpec</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2647"></a>
  This class is a transparent representation of an RSA private key
  including, for convenience, the Chinese remainder theorem values
  associated with the key. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">RSAPrivateCrtKeySpec</b> extends RSAPrivateKeySpec {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">RSAPrivateCrtKeySpec</b> (java.math.BigInteger <i class="parameter">modulus</i>, java.math.BigInteger <i class="parameter">publicExponent</i>, java.math.BigInteger <i class="parameter">privateExponent</i>, java.math.BigInteger <i class="parameter">primeP</i>, java.math.BigInteger <i class="parameter">primeQ</i>, java.math.BigInteger <i class="parameter">primeExponentP</i>, java.math.BigInteger <i class="parameter">primeExponentQ</i>, java.math.BigInteger <i class="parameter">crtCoefficient</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getCrtCoefficient</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getPrimeExponentP</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getPrimeExponentQ</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getPrimeP</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getPrimeQ</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getPublicExponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->RSAPrivateKeySpec(KeySpec)-->RSAPrivateCrtKeySpec</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RSAPrivateKeySpec</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2648"></a>
  This class is a transparent representation of an RSA private key. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">RSAPrivateKeySpec</b> implements KeySpec {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">RSAPrivateKeySpec</b> (java.math.BigInteger <i class="parameter">modulus</i>, java.math.BigInteger <i class="parameter">privateExponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getModulus</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getPrivateExponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->RSAPrivateKeySpec(KeySpec)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">RSAPrivateCrtKeySpec</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RSAPublicKeySpec</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2649"></a>
  This class is a transparent representation of an RSA public key. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">RSAPublicKeySpec</b> implements KeySpec {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">RSAPublicKeySpec</b> (java.math.BigInteger <i class="parameter">modulus</i>, java.math.BigInteger <i class="parameter">publicExponent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getModulus</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.math.BigInteger <b class="function">getPublicExponent</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->RSAPublicKeySpec(KeySpec)</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>X509EncodedKeySpec</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.security.spec</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2650"></a>
  This class represents a public or private key encoded according to
  the X.509 standard. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">X509EncodedKeySpec</b> extends EncodedKeySpec {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">X509EncodedKeySpec</b> (byte[ ] <i class="parameter">encodedKey</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding EncodedKeySpec</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public byte[ ] <b class="function">getEncoded</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final String <b class="function">getFormat</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->EncodedKeySpec(KeySpec)-->X509EncodedKeySpec</tt>
</p>
</div>
<a name="INDEX-2651"></a>
<a name="INDEX-2652"></a>
<a name="INDEX-2653"></a>
<a name="INDEX-2654"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch20_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch20_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch22_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch22_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">20.1. The java.security.interfaces Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">22. The java.text Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
