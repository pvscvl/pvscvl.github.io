<html>
<head>
<title>The java.util.jar Package (Java in a Nutshell)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-487-8E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The java.util.jar Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch23_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch23_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch25_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch25_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 24.  The java.util.jar Package</h1>

<p>
<a name="INDEX-3117"></a><a name="INDEX-3118"></a><a name="INDEX-3119"></a>
  The <tt class="literal">java.util.jar</tt> 
  package contains classes for reading and writing Java archive,
  or JAR, files. A JAR file is nothing more than a ZIP file whose first
  entry is a specially named manifest file that contains attributes and
  digital signatures for the ZIP file entries that follow it. Many of
  the classes in this package are relatively simple extensions of
  classes from the <tt class="literal">java.util.zip</tt> package. <a href="#javanut3-java.util.jar-1">Figure 24-1</a> shows the class hierarchy of this
  package. </p>

<a name="javanut3-java.util.jar-1"></a>
<div class="figure">
<img alt="figure" src="figs/JN3_2401.gif" webstripperlinkwas="figs/JN3_2401.gif"></div>
<h4 class="objtitle">Figure 24-1. The java.util.jar package</h4>

<p>
<a name="INDEX-3120"></a><a name="INDEX-3121"></a>
  The easiest way to read a JAR file is with the random-access
  <tt class="literal">JarFile</tt> class. This class allows you to obtain the
  <tt class="literal">JarEntry</tt> that describes any named file within the JAR
  archive. It also allows you to obtain an enumeration of all entries
  in the archive and an <tt class="literal">InputStream</tt> for
  reading the bytes of a specific <tt class="literal">JarEntry</tt>. Each
  <tt class="literal">JarEntry</tt> describes a single entry in the archive
  and allows access to the <tt class="literal">Attributes</tt> and the digital
  signatures associated with the entry. The <tt class="literal">JarFile</tt>
  also provides access to the <tt class="literal">Manifest</tt> object for the
  JAR archive; this object contains <tt class="literal">Attributes</tt> for
  all entries in the JAR file. <tt class="literal">Attributes</tt> is a
  mapping of attribute name/value pairs, of course, and the inner class
  <tt class="literal">Attributes.Name</tt> defines constants for various
  standard attribute names. </p>
<p>
<a name="INDEX-3122"></a><a name="INDEX-3123"></a><a name="INDEX-3124"></a>
  You can also read a JAR file with <tt class="literal">JarInputStream</tt>. This class requires to you read each entry of the file sequentially,
  however. <tt class="literal">JarOutputStream</tt> allows you to
  write out a JAR file sequentially. Finally, you can also read an
  entry within a JAR file and manifest attributes for that entry
  with a <tt class="literal">java.net.JarURLConnection</tt> object. </p>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Attributes</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.util.jar</b></font></td><td align="right"><font size="+1"><b><i>cloneable collection</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3125"></a><a name="INDEX-3126"></a>

  This class is a <tt class="literal">java.util.Map</tt> that maps the
  attribute names of a JAR file manifest to arbitrary string values. The JAR manifest format specifies that attribute names can
  contain only the ASCII characters A to Z (uppercase and lowercase), the
  digits 0 through 9, and the hyphen and underscore characters. Thus,
  this class uses <tt class="literal">Attributes.Name</tt> as the type of
  attribute names, in addition to the more general
  <tt class="literal">String</tt> class. Although you can create your own
  <tt class="literal">Attributes</tt> objects, you more commonly obtain
  <tt class="literal">Attributes</tt> objects from a
  <tt class="literal">Manifest</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Attributes</b> implements Cloneablejava.util.Map {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Attributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Attributes</b> (java.util.jar.Attributes <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Attributes</b> (int <i class="parameter">size</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getValue</b> (Attributes.Name <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getValue</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">putValue</b> (String <i class="parameter">name</i>, String <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Map</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clear</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsKey</b> (Object <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">containsValue</b> (Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Set <b class="function">entrySet</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">o</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">get</b> (Object <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isEmpty</b> ();</td><td align="right"><i> default:true</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Set <b class="function">keySet</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">put</b> (Object <i class="parameter">name</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">putAll</b> (java.util.Map <i class="parameter">attr</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">remove</b> (Object <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">size</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Collection <b class="function">values</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Map <b class="function">map</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.jar.Attributes(Cloneable,java.util.Map)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">java.util.jar.Attributes.Attributes()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.net.JarURLConnection.{getAttributes(), getMainAttributes()}, JarEntry.getAttributes(), Manifest.{getAttributes(), getMainAttributes()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Attributes.Name</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.util.jar</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3127"></a><a name="INDEX-3128"></a>
  This class represents the name of an attribute in an
  <tt class="literal">Attributes</tt> object. It defines constants for the
  various standard attribute names used in JAR file manifests. Attribute names can contain only ASCII letters, digits, and the hyphen
  and underscore characters. Any other Unicode characters are illegal. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">Attributes.Name</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Name</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Attributes.Name <b class="function">CLASS_PATH</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Attributes.Name <b class="function">CONTENT_TYPE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.3</span></td><td align="left">public static final Attributes.Name <b class="function">EXTENSION_INSTALLATION</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.3</span></td><td align="left">public static final Attributes.Name <b class="function">EXTENSION_LIST</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.3</span></td><td align="left">public static final Attributes.Name <b class="function">EXTENSION_NAME</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Attributes.Name <b class="function">IMPLEMENTATION_TITLE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.3</span></td><td align="left">public static final Attributes.Name <b class="function">IMPLEMENTATION_URL</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Attributes.Name <b class="function">IMPLEMENTATION_VENDOR</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.3</span></td><td align="left">public static final Attributes.Name <b class="function">IMPLEMENTATION_VENDOR_ID</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Attributes.Name <b class="function">IMPLEMENTATION_VERSION</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Attributes.Name <b class="function">MAIN_CLASS</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Attributes.Name <b class="function">MANIFEST_VERSION</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Attributes.Name <b class="function">SEALED</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Attributes.Name <b class="function">SIGNATURE_VERSION</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Attributes.Name <b class="function">SPECIFICATION_TITLE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Attributes.Name <b class="function">SPECIFICATION_VENDOR</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final Attributes.Name <b class="function">SPECIFICATION_VERSION</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">o</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">java.util.jar.Attributes.getValue()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span>Too many fields to list. </p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JarEntry</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.util.jar</b></font></td><td align="right"><font size="+1"><b><i>cloneable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3129"></a><a name="INDEX-3130"></a><a name="INDEX-3131"></a>
  This class extends <tt class="literal">java.util.zip.ZipEntry</tt>; it
  represents a single file in a JAR archive and the manifest attributes
  and digital signatures associated with that file. <tt class="literal">JarEntry</tt> objects can be read from a JAR file with
  <tt class="literal">JarFile</tt> or <tt class="literal">JarInputStream</tt>, and
  they can be written to a JAR file with
  <tt class="literal">JarOutputStream</tt>. Use
  <tt class="literal">getAttributes()</tt> to obtain the
  <tt class="literal">Attributes</tt> for the entry. Use
  <tt class="literal">getCertificates()</tt> to obtain a
  <tt class="literal">java.security.cert.Certificate</tt> array that contains
  the certificate chains for all digital signatures associated with the
  file. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JarEntry</b> extends java.util.zip.ZipEntry {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JarEntry</b> (JarEntry <i class="parameter">je</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JarEntry</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JarEntry</b> (java.util.zip.ZipEntry <i class="parameter">ze</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.jar.Attributes <b class="function">getAttributes</b> () throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.security.cert.Certificate[ ] <b class="function">getCertificates</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.zip.ZipEntry(Cloneable,java.util.zip.ZipConstants)-->JarEntry</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">JarEntry.JarEntry()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.net.JarURLConnection.getJarEntry(), JarFile.getJarEntry(), JarInputStream.getNextJarEntry()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JarException</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.util.jar</b></font></td><td align="right"><font size="+1"><b><i>serializable checked</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3132"></a>
  Signals an error while reading or writing a JAR file. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JarException</b> extends java.util.zip.ZipException {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JarException</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JarException</b> (String <i class="parameter">s</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->java.io.IOException-->java.util.zip.ZipException-->JarException</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JarFile</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.util.jar</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3133"></a>
  This class represents a JAR file and allows the manifest, file list,
  and individual files to be read from the JAR file. It extends
  <tt class="literal">java.util.zip.ZipFile</tt>, and its use is similar to
  that of its superclass. Create a <tt class="literal">JarFile</tt> by
  specifying a filename or <tt class="literal">File</tt> object. If you do
  not want <tt class="literal">JarFile</tt> to attempt to verify any digital
  signatures contained in the <tt class="literal">JarFile</tt>, pass an
  optional boolean argument of <tt class="literal">false</tt> to the
  <tt class="literal">JarFile()</tt> constructor. In Java 1.3, temporary JAR files can be automatically deleted when
  they are closed. To take advantage of this feature, pass
  <tt class="literal">ZipFile.OPEN_READ|ZipFile.OPEN_DELETE</tt> as the
  <em class="replaceable">mode</em> argument to the
  <tt class="literal">JarFile()</tt> constructor. </p>
<p>
<a name="INDEX-3134"></a><a name="INDEX-3135"></a><a name="INDEX-3136"></a><a name="INDEX-3137"></a>
  Once you have created a <tt class="literal">JarFile</tt> object, obtain the
  JAR <tt class="literal">Manifest</tt> with <tt class="literal">getManifest()</tt>. Obtain an enumeration of the <tt class="literal">java.util.zip.ZipEntry</tt>
  objects in the file with <tt class="literal">entries()</tt>. Get the
  <tt class="literal">JarEntry</tt> for a specified file in the JAR file with
  <tt class="literal">getJarEntry()</tt>. To read the contents of a specific
  entry in the JAR file, obtain the <tt class="literal">JarEntry</tt> or
  <tt class="literal">ZipEntry</tt> object that represents that entry, pass it
  to <tt class="literal">getInputStream()</tt>, and then read until the end of
  that stream. <tt class="literal">JarFile</tt> does not support the creation 
  of new JAR files or the modification of existing files. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JarFile</b> extends java.util.zip.ZipFile {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JarFile</b> (java.io.File <i class="parameter">file</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JarFile</b> (String <i class="parameter">name</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JarFile</b> (java.io.File <i class="parameter">file</i>, boolean <i class="parameter">verify</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JarFile</b> (String <i class="parameter">name</i>, boolean <i class="parameter">verify</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.3</span></td><td align="left">public <b class="function">JarFile</b> (java.io.File <i class="parameter">file</i>, boolean <i class="parameter">verify</i>, int <i class="parameter">mode</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final String <b class="function">MANIFEST_NAME</b> ;</td><td align="right"><i> ="META-INF/MANIFEST.MF"</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JarEntry <b class="function">getJarEntry</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Manifest <b class="function">getManifest</b> () throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding ZipFile</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Enumeration <b class="function">entries</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.zip.ZipEntry <b class="function">getEntry</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.io.InputStream <b class="function">getInputStream</b> (java.util.zip.ZipEntry <i class="parameter">ze</i>) throws java.io.IOException;</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.util.zip.ZipFile(java.util.zip.ZipConstants)-->JarFile</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.net.JarURLConnection.getJarFile()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JarInputStream</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.util.jar</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3138"></a><a name="INDEX-3139"></a><a name="INDEX-3140"></a>
  This class allows a JAR file to be read from an input stream. It
  extends <tt class="literal">java.util.ZipInputStream</tt> and is used much
  like that class is used. To create a
  <tt class="literal">JarInputStream</tt>, simply specify the
  <tt class="literal">InputStream</tt> from which to read. If you do not want the
  <tt class="literal">JarInputStream</tt> to attempt to verify any digital
  signatures contained in the JAR file, pass <tt class="literal">false</tt> as
  the second argument to the <tt class="literal">JarInputStream()</tt>
  constructor. The <tt class="literal">JarInputStream()</tt> constructor
  first reads the JAR manifest entry, if one exists. The manifest must
  be the first entry in the JAR file. <tt class="literal">getManifest()</tt>
  returns the <tt class="literal">Manifest</tt> object for the JAR file. </p>
<p>
<a name="INDEX-3141"></a><a name="INDEX-3142"></a><a name="INDEX-3143"></a>
  Once you have created a <tt class="literal">JarInputStream</tt>, call
  <tt class="literal">getNextJarEntry()</tt> or
  <tt class="literal">getNextEntry()</tt> to obtain the
  <tt class="literal">JarEntry</tt> or <tt class="literal">java.util.zip.ZipEntry</tt> 
  object that
  describes the next entry in the JAR file. Then, call a
  <tt class="literal">read()</tt> method (including the inherited versions)
  to read the contents of that entry. When
  the stream reaches the end of file, call
  <tt class="literal">getNextJarEntry()</tt> again to start reading the next
  entry in the file. When all entries have been read from the JAR file,
  <tt class="literal">getNextJarEntry()</tt> and
  <tt class="literal">getNextEntry()</tt> return <tt class="literal">null</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JarInputStream</b> extends java.util.zip.ZipInputStream {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JarInputStream</b> (java.io.InputStream <i class="parameter">in</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JarInputStream</b> (java.io.InputStream <i class="parameter">in</i>, boolean <i class="parameter">verify</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Manifest <b class="function">getManifest</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public JarEntry <b class="function">getNextJarEntry</b> () throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding ZipInputStream</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.zip.ZipEntry <b class="function">getNextEntry</b> () throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">read</b> (byte[ ] <i class="parameter">b</i>, int <i class="parameter">off</i>, int <i class="parameter">len</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Methods Overriding ZipInputStream</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.zip.ZipEntry <b class="function">createZipEntry</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.io.InputStream-->java.io.FilterInputStream-->java.util.zip.InflaterInputStream-->java.util.zip.ZipInputStream(java.util.zip.ZipConstants)-->JarInputStream</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>JarOutputStream</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.util.jar</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3144"></a><a name="INDEX-3145"></a>
  This class can write a JAR file to an arbitrary
  <tt class="literal">OutputStream</tt>. <tt class="literal">JarOutputStream</tt>
  extends <tt class="literal">java.util.zip.ZipOutputStream</tt> and is used
  much like that class is used. Create a
  <tt class="literal">JarOutputStream</tt> by specifying the stream to write
  to and, optionally, the <tt class="literal">Manifest</tt> object for the
  JAR file. The <tt class="literal">JarOutputStream()</tt> constructor 
  starts by writing the contents of the <tt class="literal">Manifest</tt>
  object into an appropriate JAR file entry. It is the
  programmer's responsibility to ensure that the contents of
  the JAR entries written subsequently match those specified in the
  <tt class="literal">Manifest</tt> object. This class
  provides no explicit support for attaching digital signatures to
  entries in the JAR file. </p>
<p>
<a name="INDEX-3146"></a><a name="INDEX-3147"></a><a name="INDEX-3148"></a><a name="INDEX-3149"></a><a name="INDEX-3150"></a>
  After creating a <tt class="literal">JarOutputStream</tt>, call
  <tt class="literal">putNextEntry()</tt> to specify the
  <tt class="literal">JarEntry</tt> or
  <tt class="literal">java.util.zip.ZipEntry</tt> to be written to the
  stream. Then, call any of the inherited <tt class="literal">write()</tt>
  methods to write the contents of the entry to the stream. When
  that entry is finished, call <tt class="literal">putNextEntry()</tt> again
  to begin writing the next entry. When you have written all JAR file entries in this
  way, call <tt class="literal">close()</tt>. Before writing any entry, you
  may call the inherited <tt class="literal">setMethod()</tt> and
  <tt class="literal">setLevel()</tt> methods to specify how the entry should
  be compressed. See <tt class="literal">java.util.zip.ZipOutputStream</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">JarOutputStream</b> extends java.util.zip.ZipOutputStream {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JarOutputStream</b> (java.io.OutputStream <i class="parameter">out</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">JarOutputStream</b> (java.io.OutputStream <i class="parameter">out</i>, Manifest <i class="parameter">man</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding ZipOutputStream</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">putNextEntry</b> (java.util.zip.ZipEntry <i class="parameter">ze</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->java.io.OutputStream-->java.io.FilterOutputStream-->java.util.zip.DeflaterOutputStream-->java.util.zip.ZipOutputStream(java.util.zip.ZipConstants)-->JarOutputStream</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Manifest</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.util.jar</b></font></td><td align="right"><font size="+1"><b><i>cloneable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-3151"></a><a name="INDEX-3152"></a><a name="INDEX-3153"></a><a name="INDEX-3154"></a><a name="INDEX-3155"></a><a name="INDEX-3156"></a>
  This class represents the manifest entry of a JAR file. <tt class="literal">getMainAttributes()</tt> returns an
  <tt class="literal">Attributes</tt> object that represents the manifest
  attributes that apply to the entire JAR file. <tt class="literal">getAttributes()</tt> returns an
  <tt class="literal">Attributes</tt> object that represents the manifest
  attributes specified for a single file in the JAR file. <tt class="literal">getEntries()</tt> returns a
  <tt class="literal">java.util.Map</tt> that maps the names of entries in the
  JAR file to the <tt class="literal">Attributes</tt> objects associated with
  those entries. <tt class="literal">getEntries()</tt> returns the
  <tt class="literal">Map</tt> object used internally by the
  <tt class="literal">Manifest</tt>. You can edit the contents of the
  <tt class="literal">Manifest</tt> by adding, deleting, or editing entries in
  the <tt class="literal">Map</tt>. <tt class="literal">read()</tt> reads manifest entries from an input stream,
  merging them into the current set of entries. <tt class="literal">write()</tt> writes the <tt class="literal">Manifest</tt> out
  to the specified output stream. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Manifest</b> implements Cloneable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Manifest</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Manifest</b> (Manifest <i class="parameter">man</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Manifest</b> (java.io.InputStream <i class="parameter">is</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">clear</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.jar.Attributes <b class="function">getAttributes</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Map <b class="function">getEntries</b> ();</td><td align="right"><i> default:HashMap</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.jar.Attributes <b class="function">getMainAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">read</b> (java.io.InputStream <i class="parameter">is</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">write</b> (java.io.OutputStream <i class="parameter">out</i>) throws java.io.IOException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">o</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Manifest(Cloneable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">java.net.URLClassLoader.definePackage(), JarOutputStream.JarOutputStream(), Manifest.Manifest()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.net.JarURLConnection.getManifest(), JarFile.getManifest(), JarInputStream.getManifest()</tt>
</p>
</div>
<a name="INDEX-3157"></a>
<a name="INDEX-3158"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch23_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch23_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch25_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch25_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">23.3. The java.util Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">25. The java.util.zip Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
