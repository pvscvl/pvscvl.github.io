<html>
<head>
<title>Portability Conventions and Pure Java Rules (Java in a Nutshell)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-487-8E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Portability Conventions and Pure Java Rules">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch07_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch07_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="ch07_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch07_01.htm">Chapter 7: Java Programming and

Documentation Conventions</a></td><td align="right" valign="top" width="172"><a href="ch07_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch07_03.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h2 class="sect1">7.2. Portability Conventions and Pure Java Rules</h2>
<p>
<a name="INDEX-1015"></a><a name="INDEX-1016"></a><a name="INDEX-1017"></a><a name="INDEX-1018"></a>


      Sun's motto, or core value proposition, for Java is "Write once,
      run anywhere."  Java makes it easy to write portable
      programs, but Java programs do not automatically run successfully
      on any Java platform. To ensure portability, you must follow a
      few fairly simple rules that can be 
      summarized as follows:
    </p>
<dl>
<dt>
<b>Native methods</b>
</dt>
<dd>
<p>
<a name="INDEX-1019"></a>

	    Portable Java code can use any methods in the core Java
	    APIs, including methods implemented as
	    <tt class="literal">native</tt> methods. However, portable code
	    must not define its own native methods. By their very
	    nature, native methods must be ported to each new 


platform,
	    so they directly subvert the "Write once, run anywhere"
	    promise of Java. </p>
</dd>
<dt>
<b>The Runtime.exec( ) method</b>
</dt>
<dd>
<p>
<a name="INDEX-1020"></a>

	    Calling the <tt class="literal">Runtime.exec()</tt> method
	    to spawn a process and execute an external command on the
	    native system is rarely allowed in portable code. This is
	    because the native OS command to be executed is never guaranteed
	    to exist or behave the same way on all platforms. The
	    only time it is legal to use
	    <tt class="literal">Runtime.exec()</tt> is when the user is
	    allowed to specify the command to run, either by typing the
	    command at runtime or by specifying the command in a
	    configuration file or preferences dialog box. </p>
</dd>
<dt>
<b>The System.getenv( ) method</b>
</dt>
<dd>
<p>
<a name="INDEX-1021"></a>

	    Using <tt class="literal">System.getenv()</tt> is nonportable,
	    without exception. The method has actually been
	    deprecated for this reason. </p>
</dd>
<dt>
<b>Undocumented classes</b>
</dt>
<dd>
<p>
<a name="INDEX-1022"></a>

	    Portable Java code must use only classes and interfaces that
	    are a documented part of the Java platform. Most Java
	    implementations ship with additional undocumented public
	    classes that are part of the implementation, but not
	    of the Java platform specification. There is nothing to
	    prevent a program from using and relying on these
	    undocumented classes, but doing so is not portable because
	    the classes are not guaranteed to exist in all Java
	    implementations or on all platforms. </p>
</dd>
<dt>
<b>The java.awt.peer package</b>
</dt>
<dd>
<p>
<a name="INDEX-1023"></a>

	    The interfaces in the <tt class="literal">java.awt.peer</tt> package
	    are part of the Java platform, but are documented for use by
	    AWT implementors only. Applications that use these
	    interfaces directly are not portable. </p>
</dd>
<dt>
<b>Implementation-specific features</b>
</dt>
<dd>
<p>
<a name="INDEX-1024"></a>

	    Portable code must not rely on features specific to a single
	    implementation. For example, in a widely controversial
	    move, Microsoft distributed a version of the Java runtime system
	    that included a number of additional methods that were not part of
	    the Java platform as defined by Sun. Legal action between
	    Sun and Microsoft is pending because of this. Any program
	    that depends on the Microsoft-specific extensions is
	    obviously not portable to other platforms. </p>
</dd>
<dt>
<b>Implementation-specific bugs</b>
</dt>
<dd>
<p>	    Just as portable code must not depend on
	    implementation-specific features, it must not depend on
	    implementation-specific bugs. If a class or method behaves
	    differently than the specification says it should, a
	    portable program cannot rely on this behavior, which may be
	    different on different platforms. </p>
</dd>
<dt>
<b>Implementation-specific behavior</b>
</dt>
<dd>
<p>	    Sometimes different platforms and different implementations
	    may present different behaviors, all of which are legal
	    according to the Java specification. Portable code must not
	    depend on any one specific behavior. For example,
	    the Java specification does not specify whether
	    threads of equal priority share the CPU or if one
	    long-running thread can starve another thread at the same
	    priority. If an application assumes one behavior or the
	    other, it may not run properly on all platforms. </p>
</dd>
<dt>
<b>Standard extensions</b>
</dt>
<dd>
<p>
<a name="INDEX-1025"></a>

	    Portable code can rely on standard extensions to the Java
	    platform, but, if it does so, it should clearly specify which
	    extensions it uses and exit cleanly with an appropriate
	    error message when run on a system that does not have the
	    extensions installed. </p>
</dd>
<dt>
<b>Complete programs</b>
</dt>
<dd>
<p>
<a name="INDEX-1026"></a>

	    Any portable Java program must be complete and
	    self-contained: it must supply all the classes it uses,
	    except core platform and standard extension classes. </p>
</dd>
<dt>
<b>Defining system classes</b>
</dt>
<dd>
<p>
<a name="INDEX-1027"></a>


	    Portable Java code never defines classes in any of the
	    system or standard extension packages. Doing so violates
	    the protection boundaries of those packages and exposes
	    package-visible implementation details. </p>
</dd>
<dt>
<b>Hardcoded filenames</b>
</dt>
<dd>
<p>
<a name="INDEX-1028"></a><a name="INDEX-1029"></a>

	    A portable program contains no hardcoded file or directory
	    names. This is because different platforms have
	    significantly different filesystem organizations and use
	    different directory separator characters. If you need to
	    work with a file or directory, have the user specify the
	    filename, or at least the base directory beneath which the file
	    can be found. This specification can be done at runtime, in
	    a configuration file, or as a command-line argument to the
	    program. When concatenating a file or directory name to
	    a directory name, use the <tt class="literal">File()</tt>
	    constructor or the <tt class="literal">File.separator</tt>
	    constant. </p>
</dd>
<dt>
<b>Line separators</b>
</dt>
<dd>
<p>
<a name="INDEX-1030"></a>

	    Different systems use different characters or sequences of
	    characters as line separators. Do not hardcode "\n", "\r",
	    or "\r\n" as the line separator in your program. Instead,
	    use the <tt class="literal">println()</tt> method of
	    <tt class="literal">PrintStream</tt> or
	    <tt class="literal">PrintWriter</tt>, which automatically
	    terminates a line with the line separator appropriate for
	    the platform, or use the value of the
	    <tt class="literal">line.separator</tt> system property. </p>
</dd>
<dt>
<b>Mixed event models</b>
</dt>
<dd>
<p>
<a name="INDEX-1031"></a>

	    The AWT event model changed dramatically between Java 1.0
	    and Java 1.1. Although it is often possible to mix these
	    two event models in a program, doing so is not technically
	    portable. </p>
</dd>
</dl>
<p>
<a name="INDEX-1032"></a><a name="INDEX-1033"></a><a name="INDEX-1034"></a><a name="INDEX-1035"></a><a name="INDEX-1036"></a>

      The previous rules are the focus of Sun's "100% Pure
      Java" portability certification program; you can find out more
      about this program and read more about the "Pure Java"
      requirements at
      <a href="../../../../../../../java.sun.com/100percent/">http://java.sun.com/100percent/</a>.
<a name="INDEX-1037"></a><a name="INDEX-1038"></a><a name="INDEX-1039"></a><a name="INDEX-1040"></a>
</p>

<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch07_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch07_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch07_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch07_03.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">7.1. Naming and Capitalization Conventions</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">7.3. Java Documentation Comments</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
