<html>
<head>
<title>The java.text Package (Java in a Nutshell)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="David Flanagan">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-487-8E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="The java.text Package">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm" alt="Java Enterprise in a Nutshell"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch21_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch21_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part2.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/part2.htm">Part 2: API Quick Reference</a></td><td align="right" valign="top" width="172"><a href="ch23_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch23_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY --><h1 class="chapter">Chapter 22.  The java.text Package</h1>

<p>
<a name="INDEX-2655"></a>

The <tt class="literal">java.text</tt> package consists of classes and
interfaces that are useful for writing internationalized programs
that handle local customs, such as date and time formatting
and string alphabetization, correctly. This package is new
as of Java 1.1. <a href="#javanut3-java.text-1">Figure 22-1</a>
shows its class hierarchy. </p>
<p>
<a name="INDEX-2656"></a>
The <tt class="literal">NumberFormat</tt> class formats numbers, monetary
quantities, and percentages as appropriate for the default
or specified locale. <tt class="literal">DateFormat</tt> formats dates and
<a name="INDEX-2657"></a><a name="INDEX-2658"></a><a name="INDEX-2659"></a>
times in a locale-specific way. The concrete
<tt class="literal">DecimalFormat</tt> and <tt class="literal">SimpleDateFormat</tt>
subclasses of these classes can be used for customized
number, date, and time formatting. <tt class="literal">MessageFormat</tt><a name="INDEX-2660"></a>
allows substitution of dynamic values, including formatted
numbers and dates, into static message strings. <a name="INDEX-2661"></a><a name="INDEX-2662"></a><tt class="literal">ChoiceFormat</tt> formats a number using an enumerated
set of string values. <tt class="literal">Collator</tt> compares strings
according to the customary sorting order for a locale. <a name="INDEX-2663"></a><tt class="literal">BreakIterator</tt> scans text to find word, line, and
sentence boundaries following locale-specific rules. </p>

<a name="javanut3-java.text-1"></a>
<div class="figure">
<img alt="figure" src="figs/JN3_2201.gif" webstripperlinkwas="figs/JN3_2201.gif"></div>
<h4 class="objtitle">Figure 22-1. The java.text package</h4>


<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Annotation</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2664"></a>
  This class is a wrapper for a the value of a text attribute that
  represents an annotation. Annotations differ from other types of text
  attributes in two ways. First, annotations are linked to the text
  they are applied to, so changing the text invalidates or corrupts
  the meaning of the annotation. Second, annotations cannot be merged
  with adjacent annotations, even if they have the same value. Putting
  an annotation value in an <tt class="literal">Annotation</tt> wrapper serves
  to indicate these special characteristics. Note that two of the
  attribute keys defined by
  <tt class="literal">AttributedCharaterIterator.Attribute</tt>,
  <tt class="literal">READING</tt> and <tt class="literal">INPUT_METHOD_SEGMENT</tt>,
  must be used with <tt class="literal">Annotation</tt> objects. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">Annotation</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Annotation</b> (Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">getValue</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AttributedCharacterIterator</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2665"></a><a name="INDEX-2666"></a><a name="INDEX-2667"></a><a name="INDEX-2668"></a>
  This interface extends <tt class="literal">CharacterIterator</tt> for
  working with text that is marked up with attributes in some way. It
  defines an inner class,
  <tt class="literal">AttributedCharaterIterator.Attribute</tt>, that represents attribute keys. <tt class="literal">AttributedCharacterIterator</tt> defines methods for
  querying the attribute keys, values, and runs for the text being
  iterated over. <tt class="literal">getAllAttributeKeys()</tt> returns the
  <tt class="literal">Set</tt> of all attribute keys that appear anywhere in
  the text. <tt class="literal">getAttributes()</tt> returns a
  <tt class="literal">Map</tt> that contains the attribute keys and values
  that apply to the current character. <tt class="literal">getAttribute()</tt> returns the value associated with
  the specified attribute key for the current character. </p>
<p>
<a name="INDEX-2669"></a><a name="INDEX-2670"></a><tt class="literal">getRunStart()</tt> and <tt class="literal">getRunLimit()</tt>
  return the index of the first and last characters in a run. A <em class="emphasis">run</em> is
  a string of adjacent characters for which an attribute has the same
  value or is undefined (i.e., has a value of <tt class="literal">null</tt>). A run can also be
  defined for a set of attributes, in which case it is a set of adjacent
  characters for which all attributes in the set hold a constant value
  (which may include <tt class="literal">null</tt>). Programs that process or display attributed
  text must usually work with it one run at a time. The no-argument
  versions of <tt class="literal">getRunStart()</tt> and
  <tt class="literal">getRunLimit()</tt> return the start and end of the run
  that includes the current character and all attributes that are
  applied to the current character. The other versions of these methods
  return the start and end of the run of the specified attribute or set
  of attributes that includes the current character. </p>
<p>
<a name="INDEX-2671"></a>
  The <tt class="literal">AttributedString</tt> class provides a simple way to
  define short strings of attributed text and obtain an
  <tt class="literal">AttributedCharacterIterator</tt> over them. Most
  applications that process attributed text are working with
  attributed text from specialized data sources, stored in some
  specialized data format, so they need to define a custom
  implementation of <tt class="literal">AttributedCharacterIterator</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">AttributedCharacterIterator</b> extends CharacterIterator {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Inner Classes</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Set <b class="function">getAllAttributeKeys</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">getAttribute</b> (AttributedCharacterIterator.Attribute <i class="parameter">attribute</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Map <b class="function">getAttributes</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getRunLimit</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getRunLimit</b> (java.util.Set <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getRunLimit</b> (AttributedCharacterIterator.Attribute <i class="parameter">attribute</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getRunStart</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getRunStart</b> (AttributedCharacterIterator.Attribute <i class="parameter">attribute</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getRunStart</b> (java.util.Set <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(AttributedCharacterIterator(CharacterIterator(Cloneable)))</tt>
</p>
<p>
<span class="refsect1">Passed To: </span>Too many methods to list. </p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.awt.event.InputMethodEvent.getText(), java.awt.im.InputMethodRequests.{cancelLatestCommittedText(), getCommittedText(), getSelectedText()}, AttributedString.getIterator()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AttributedCharacterIterator.Attribute</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>serializable</i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2672"></a><a name="INDEX-2673"></a>

  This class defines the types of the attribute keys used with
  <tt class="literal">AttributedCharacterIterator</tt> and
  <tt class="literal">AttributedString</tt>. It defines several constant
  <tt class="literal">Attribute</tt> keys that are commonly used with
  multilingual text and input methods. The <tt class="literal">LANGUAGE</tt>
  key represents the language of the underlying text. The value of this
  key should be a <tt class="literal">Locale</tt> object. The
  <tt class="literal">READING</tt> key represents arbitrary reading
  information associated with text. The value must be an
  <tt class="literal">Annotation</tt> object. The
  <tt class="literal">INPUT_METHOD_SEGMENT</tt> key serves to define text
  segments (usually words) that an input method operates on. The value
  of this attribute should be an <tt class="literal">Annotation</tt> object
  that contains <tt class="literal">null</tt>. Other classes may subclass this
  class and define other attribute keys that are useful in other
  circumstances or problem domains. See, for example,
  <tt class="literal">java.awt.font.TextAttribute</tt> in <em class="emphasis">Java
  Foundation Classes in a Nutshell</em> (O'Reilly). </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public static class <b class="classname">AttributedCharacterIterator.Attribute</b> implements Serializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">Attribute</b> (String <i class="parameter">name</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final AttributedCharacterIterator.Attribute <b class="function">INPUT_METHOD_SEGMENT</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final AttributedCharacterIterator.Attribute <b class="function">LANGUAGE</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final AttributedCharacterIterator.Attribute <b class="function">READING</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected String <b class="function">getName</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected Object <b class="function">readResolve</b> () throws java.io.InvalidObjectException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">java.awt.font.TextAttribute</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">java.awt.im.InputMethodRequests.{cancelLatestCommittedText(), getCommittedText(), getSelectedText()}, AttributedCharacterIterator.{getAttribute(), getRunLimit(), getRunStart()}, AttributedString.{addAttribute(), AttributedString(), getIterator()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">java.awt.Font.getAvailableAttributes()</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">AttributedCharacterIterator.Attribute.{INPUT_METHOD_SEGMENT, LANGUAGE, READING}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>AttributedString</b></font></td><td align="right"><font size="+1"><b>Java 1.2</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i></i></b></font></td>
</tr>
</table>
<p>
<a name="INDEX-2674"></a><a name="INDEX-2675"></a><a name="INDEX-2676"></a><a name="INDEX-2677"></a>
  This class represents text and associated attributes. An
  <tt class="literal">AttributedString</tt> can be defined in terms of an
  underlying <tt class="literal">AttributedCharacterIterator</tt> or an
  underlying <tt class="literal">String</tt>. Additional attributes can be
  specified with the <tt class="literal">addAttribute()</tt> and
  <tt class="literal">addAttributes()</tt> methods. <tt class="literal">getIterator()</tt> returns an
  <tt class="literal">AttributedCharacterIterator</tt> over the
  <tt class="literal">AttributedString</tt> or over a specified portion of the
  string. Note that two of the <tt class="literal">getIterator()</tt> methods
  take an array of <tt class="literal">Attribute</tt> keys as an argument. These methods return an <tt class="literal">AttributedCharacterIterator</tt>
  that ignores all attributes that are not in the specified array. If
  the array argument is <tt class="literal">null</tt>, however, the returned
  iterator contains all attributes. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">AttributedString</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AttributedString</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AttributedString</b> (AttributedCharacterIterator <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AttributedString</b> (String <i class="parameter">text</i>, java.util.Map <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AttributedString</b> (AttributedCharacterIterator <i class="parameter">text</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">endIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">AttributedString</b> (AttributedCharacterIterator <i class="parameter">text</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">endIndex</i>, AttributedCharacterIterator.Attribute[ ] <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addAttribute</b> (AttributedCharacterIterator.Attribute <i class="parameter">attribute</i>, Object <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addAttribute</b> (AttributedCharacterIterator.Attribute <i class="parameter">attribute</i>, Object <i class="parameter">value</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">endIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">addAttributes</b> (java.util.Map <i class="parameter">attributes</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">endIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributedCharacterIterator <b class="function">getIterator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributedCharacterIterator <b class="function">getIterator</b> (AttributedCharacterIterator.Attribute[ ] <i class="parameter">attributes</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public AttributedCharacterIterator <b class="function">getIterator</b> (AttributedCharacterIterator.Attribute[ ] <i class="parameter">attributes</i>, int <i class="parameter">beginIndex</i>, int <i class="parameter">endIndex</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>BreakIterator</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2678"></a>
This class determines character, word, sentence,
and line breaks in a block of text in a way that is
independent of locale and text encoding. As an abstract
class, <tt class="literal">BreakIterator</tt> cannot be instantiated
directly. Instead, you must use one of the class methods
<a name="INDEX-2679"></a><a name="INDEX-2680"></a><a name="INDEX-2681"></a><a name="INDEX-2682"></a><tt class="literal">getCharacterInstance()</tt>, <tt class="literal">getWordInstance()</tt>,
<tt class="literal">getSentenceInstance()</tt>, or <tt class="literal">getLineInstance()</tt> to
return an instance of a nonabstract subclass of
<tt class="literal">BreakIterator</tt>. These various factory methods
return a <tt class="literal">BreakIterator</tt> object that is configured to
locate the requested boundary types and is localized to
work for the optionally specified locale. </p>
<p>
<a name="INDEX-2683"></a>
Once you have obtained an appropriate <tt class="literal">BreakIterator</tt>
object, use <tt class="literal">setText()</tt> to specify the text in which 
to locate boundaries. To locate boundaries in a Java
<tt class="literal">String</tt> object, simply specify the string. To locate
boundaries in text that uses some other encoding, you must
specify a <tt class="literal">CharacterIterator</tt> object for that text so
that the <tt class="literal">BreakIterator</tt> object can locate the
individual characters of the text. <a name="INDEX-2684"></a><a name="INDEX-2685"></a><a name="INDEX-2686"></a><a name="INDEX-2687"></a><a name="INDEX-2688"></a>
Having set the text to be searched, you can determine the
character positions of characters, words, sentences, or line
breaks with the <tt class="literal">first()</tt>, <tt class="literal">last()</tt>,
<tt class="literal">next()</tt>, <tt class="literal">previous()</tt>, <tt class="literal">current()</tt>, and
<tt class="literal">following()</tt> methods, which perform the obvious functions. Note that these methods do not return text itself, but
merely the position of the appropriate word,
sentence, or line break. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">BreakIterator</b> implements Cloneable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">BreakIterator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DONE</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.util.Locale[ ] <b class="function">getAvailableLocales</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static BreakIterator <b class="function">getCharacterInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static BreakIterator <b class="function">getCharacterInstance</b> (java.util.Locale <i class="parameter">where</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static BreakIterator <b class="function">getLineInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static BreakIterator <b class="function">getLineInstance</b> (java.util.Locale <i class="parameter">where</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static BreakIterator <b class="function">getSentenceInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static BreakIterator <b class="function">getSentenceInstance</b> (java.util.Locale <i class="parameter">where</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static BreakIterator <b class="function">getWordInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static BreakIterator <b class="function">getWordInstance</b> (java.util.Locale <i class="parameter">where</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">current</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">first</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">following</b> (int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract CharacterIterator <b class="function">getText</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">isBoundary</b> (int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">last</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">next</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">next</b> (int <i class="parameter">n</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">preceding</b> (int <i class="parameter">offset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">previous</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract void <b class="function">setText</b> (CharacterIterator <i class="parameter">newText</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setText</b> (String <i class="parameter">newText</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->BreakIterator(Cloneable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">java.awt.font.LineBreakMeasurer.LineBreakMeasurer()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">BreakIterator.{getCharacterInstance(), getLineInstance(), getSentenceInstance(), getWordInstance()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CharacterIterator</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2689"></a>
This interface defines an API for portably iterating through
the characters that make up a string of text, regardless of
the encoding of that text. Such an API is necessary because
the number of bytes per character is different for different
encodings, and some encodings even use variable-width
characters within the same string of text. In addition to
allowing iteration, a class that implements the
<tt class="literal">CharacterIterator</tt> interface for non-Unicode text also performs
translation of characters from their native encoding to
standard Java Unicode characters. </p>
<p>
<a name="INDEX-2690"></a><a name="INDEX-2691"></a><a name="INDEX-2692"></a><a name="INDEX-2693"></a><tt class="literal">CharacterIterator</tt> is similar to
<tt class="literal">java.util.Enumeration</tt>, but is somewhat more complex
than that interface. The <tt class="literal">first()</tt> and <tt class="literal">last()</tt>
methods return the first and last characters in the text,
and the <tt class="literal">next()</tt> and <tt class="literal">prev()</tt> methods allow you
to loop forward or backwards through the characters of the
text. These methods return the <tt class="literal">DONE</tt> constant when
they go beyond the first or last character in the text; a
test for this constant can be used to terminate a loop. <a name="INDEX-2694"></a><a name="INDEX-2695"></a>
The <tt class="literal">CharacterIterator</tt> interface also allows random
access to the characters in a string of text. The
<tt class="literal">getBeginIndex()</tt> and <tt class="literal">getEndIndex()</tt> methods return
the character positions for the start and end of the string,
<a name="INDEX-2696"></a><a name="INDEX-2697"></a><a name="INDEX-2698"></a>
and <tt class="literal">setIndex()</tt> sets the current position. <tt class="literal">getIndex()</tt> returns the index of the current
position, and <tt class="literal">current()</tt> returns the character at
that position. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public interface <b class="classname">CharacterIterator</b> extends Cloneable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final char <b class="function">DONE</b> ;</td><td align="right"><i> ='\uFFFF'</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract char <b class="function">current</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract char <b class="function">first</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getBeginIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getEndIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">getIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract char <b class="function">last</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract char <b class="function">next</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract char <b class="function">previous</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract char <b class="function">setIndex</b> (int <i class="parameter">position</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">(CharacterIterator(Cloneable))</tt>
</p>
<p>
<span class="refsect1">Implementations: </span><tt class="literal">AttributedCharacterIterator, StringCharacterIterator, javax.swing.text.Segment</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">java.awt.Font.{canDisplayUpTo(), createGlyphVector(), getLineMetrics(), getStringBounds()}, java.awt.FontMetrics.{getLineMetrics(), getStringBounds()}, BreakIterator.setText(), CollationElementIterator.setText(), RuleBasedCollator.getCollationElementIterator()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">BreakIterator.getText()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ChoiceFormat</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2699"></a>
This class is a subclass of <tt class="literal">Format</tt> that converts a
number to a <tt class="literal">String</tt> in a way reminiscent of a
<tt class="literal">switch</tt> statement or an enumerated type. Each
<tt class="literal">ChoiceFormat</tt> object has an array of doubles known as
its <em class="emphasis">limits</em> and an array of strings known as its
<a name="INDEX-2700"></a><em class="emphasis">formats</em>. When the <tt class="literal">format()</tt> method is called to
format a number <tt class="literal">x</tt>, the <tt class="literal">ChoiceFormat</tt> finds an
index <tt class="literal">i</tt> such that:</p>

<blockquote>
<pre class="programlisting">limits[i] &lt;= x &lt; limits[i+1]</pre>
</blockquote>

<p>If <tt class="literal">x</tt> is less than the first element of the array,
the first element is used, and if it is greater than
the last, the last element is used. Once the index
<tt class="literal">i</tt> has been determined, it is used as the index
into the array of strings, and the indexed string is
returned as the result of the <tt class="literal">format()</tt> method. </p>
<p>A <tt class="literal">ChoiceFormat</tt> object may also be created by
encoding its limits and formats into a single string
known as its <em class="emphasis">pattern</em>. A typical pattern looks like the
one below, used to return the singular or plural form of a
word based on the numeric value passed to the
<tt class="literal">format()</tt> method:</p>

<blockquote>
<pre class="programlisting">ChoiceFormat cf = new ChoiceFormat("0#errors|1#error|2#errors");</pre>
</blockquote>

<p>A <tt class="literal">ChoiceFormat</tt> object created in this way returns
the string "errors" when it formats the number 0 or any
number greater than or equal to 2. It returns
"error" when it formats the number 1. In the syntax shown
here, note the pound sign (<tt class="literal">#</tt>) used to separate the
limit number from the string that corresponds to that case
and the vertical bar (<tt class="literal">|</tt>) used to separate the
<a name="INDEX-2701"></a><a name="INDEX-2702"></a>

individual cases. You can use the <tt class="literal">applyPattern()</tt>
method to change the pattern used by a <tt class="literal">ChoiceFormat</tt>
object; use <tt class="literal">toPattern()</tt> to query the pattern it
uses. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ChoiceFormat</b> extends NumberFormat {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ChoiceFormat</b> (String <i class="parameter">newPattern</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ChoiceFormat</b> (double[ ] <i class="parameter">limits</i>, String[ ] <i class="parameter">formats</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final double <b class="function">nextDouble</b> (double <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static double <b class="function">nextDouble</b> (double <i class="parameter">d</i>, boolean <i class="parameter">positive</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final double <b class="function">previousDouble</b> (double <i class="parameter">d</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">applyPattern</b> (String <i class="parameter">newPattern</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">getFormats</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public double[ ] <b class="function">getLimits</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setChoices</b> (double[ ] <i class="parameter">limits</i>, String[ ] <i class="parameter">formats</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toPattern</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding NumberFormat</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public StringBuffer <b class="function">format</b> (long <i class="parameter">number</i>, StringBuffer <i class="parameter">toAppendTo</i>, FieldPosition <i class="parameter">status</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public StringBuffer <b class="function">format</b> (double <i class="parameter">number</i>, StringBuffer <i class="parameter">toAppendTo</i>, FieldPosition <i class="parameter">status</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Number <b class="function">parse</b> (String <i class="parameter">text</i>, ParsePosition <i class="parameter">status</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Format(Cloneable,Serializable)-->NumberFormat-->ChoiceFormat</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CollationElementIterator</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2703"></a><a name="INDEX-2704"></a>
A <tt class="literal">CollationElementIterator</tt> object is returned by
the <tt class="literal">getCollationElementIterator()</tt> method of the
<tt class="literal">RuleBasedCollator</tt> object. The purpose of this class
is to allow a program to iterate (with the <tt class="literal">next()</tt><a name="INDEX-2705"></a>
method) through the characters of a string, returning
ordering values for each of the collation keys in the
string. Note that collation keys are not exactly the same
as characters. In the traditional Spanish collation
order, for example, the two-character sequence "ch" is
treated as a single collation key that comes alphabetically
between the letters "c" and "d". The value returned by the <tt class="literal">next()</tt> method is the
collation order of the next collation key in the string. This numeric value can be directly compared to the value
returned by <tt class="literal">next()</tt> for other
<tt class="literal">CollationElementIterator</tt> objects. The value
returned by <tt class="literal">next()</tt> can also be decomposed into
primary, secondary, and tertiary ordering values with the
static methods of this class. <a name="INDEX-2706"></a>
This class is used by <tt class="literal">RuleBasedCollator</tt> to implement
its <tt class="literal">compare()</tt> method and to create
<tt class="literal">CollationKey</tt> objects. Few applications ever
need to use it directly. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">CollationElementIterator</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NULLORDER</b> ;</td><td align="right"><i> =-1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">primaryOrder</b> (int <i class="parameter">order</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final short <b class="function">secondaryOrder</b> (int <i class="parameter">order</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final short <b class="function">tertiaryOrder</b> (int <i class="parameter">order</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">getMaxExpansion</b> (int <i class="parameter">order</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">next</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">previous</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">reset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setOffset</b> (int <i class="parameter">newOffset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setText</b> (CharacterIterator <i class="parameter">source</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setText</b> (String <i class="parameter">source</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">RuleBasedCollator.getCollationElementIterator()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>CollationKey</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>comparable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2707"></a><a name="INDEX-2708"></a><a name="INDEX-2709"></a><tt class="literal">CollationKey</tt> objects compare strings
more quickly than is possible with
<tt class="literal">Collation.compare()</tt>. Objects of this class are
returned by <tt class="literal">Collation.getCollationKey()</tt>. To compare
two <tt class="literal">CollationKey</tt> objects, invoke the
<tt class="literal">compareTo()</tt> method of key <tt class="literal">A</tt>, passing
the key <tt class="literal">B</tt> as an
argument (both <tt class="literal">CollationKey</tt> objects must be created
through the same <tt class="literal">Collation</tt> object). The return
value of this method is less than zero if the key <tt class="literal">A</tt> is
collated before the key <tt class="literal">B</tt>, equal to zero if they are
equivalent for the purposes of collation, or greater
than zero if the key <tt class="literal">A</tt> is collated after the key <tt class="literal">B</tt>. <a name="INDEX-2710"></a>
Use <tt class="literal">getSourceString()</tt> to obtain the string
represented by a <tt class="literal">CollationKey</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">CollationKey</b> implements Comparable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">No Constructor</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">compareTo</b> (CollationKey <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getSourceString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public byte[ ] <b class="function">toByteArray</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Comparable</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">compareTo</b> (Object <i class="parameter">o</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->CollationKey(Comparable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">CollationKey.compareTo()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Collator.getCollationKey(), RuleBasedCollator.getCollationKey()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Collator</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2711"></a>
This class compares, orders, and sorts strings in a
way appropriate for the default locale or some other
specified locale. Because it is an abstract class, it
cannot be instantiated directly. Instead, you must use the
<a name="INDEX-2712"></a>
static <tt class="literal">getInstance()</tt> method to obtain an instance of
a <tt class="literal">Collator</tt> subclass that is appropriate for the
default or specified locale. You can use
<a name="INDEX-2713"></a><tt class="literal">getAvailableLocales()</tt> to determine whether a
<tt class="literal">Collator</tt> object is available for a desired locale. </p>
<p>
<a name="INDEX-2714"></a>
Once an appropriate <tt class="literal">Collator</tt> object has been
obtained, you can use the <tt class="literal">compare()</tt> method to
compare strings. The possible return values of this method
are -1, 0, and 1, which indicate, respectively, that the
first string is collated before the second, that the two are
equivalent for collation purposes, and that the first string
is collated after the second. The <tt class="literal">equals()</tt> method
is a convenient shortcut for testing two strings for
collation equivalence. <a name="INDEX-2715"></a>
</p>
<p>When sorting an array of strings, each string in the array
is typically compared more than once. Using the
<tt class="literal">compare()</tt> method in this case is inefficient. A
more efficient method for comparing strings multiple times is to use
<a name="INDEX-2716"></a><tt class="literal">getCollationKey()</tt> for each string to create
<tt class="literal">CollationKey</tt> objects. These objects can then be
compared to each other more quickly than the strings
themselves can be compared. </p>
<p>
<a name="INDEX-2717"></a>
You can customize the way the <tt class="literal">Collator</tt> object
performs comparisons by calling <tt class="literal">setStrength()</tt>. If
you pass the constant <tt class="literal">PRIMARY</tt> to this method,
the comparison looks only at primary differences in the
strings; it compares letters but ignores accents and case
differences. If you pass the constant <tt class="literal">SECONDARY</tt>,
it ignores case differences but does not ignore
accents. And if you pass <tt class="literal">TERTIARY</tt> (the default), the
<tt class="literal">Collator</tt> object takes both accents and case
differences into account in its comparison. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">Collator</b> implements Cloneablejava.util.Comparator {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">Collator</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">CANONICAL_DECOMPOSITION</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">FULL_DECOMPOSITION</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">IDENTICAL</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">NO_DECOMPOSITION</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">PRIMARY</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SECONDARY</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TERTIARY</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.util.Locale[ ] <b class="function">getAvailableLocales</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Collator <b class="function">getInstance</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static Collator <b class="function">getInstance</b> (java.util.Locale <i class="parameter">desiredLocale</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">compare</b> (String <i class="parameter">source</i>, String <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (String <i class="parameter">source</i>, String <i class="parameter">target</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract CollationKey <b class="function">getCollationKey</b> (String <i class="parameter">source</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getDecomposition</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getStrength</b> ();</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDecomposition</b> (int <i class="parameter">decompositionMode</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setStrength</b> (int <i class="parameter">newStrength</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing Comparator</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">compare</b> (Object <i class="parameter">o1</i>, Object <i class="parameter">o2</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">that</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Collator(Cloneable,java.util.Comparator)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">RuleBasedCollator</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">Collator.getInstance()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DateFormat</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2718"></a><a name="INDEX-2719"></a>
This class formats and parses dates and times in a
locale-specific way. As an abstract class, it cannot be
instantiated directly, but it provides a number of static
methods that return instances of a concrete subclass
you can use to format dates in a variety of ways. The
<a name="INDEX-2720"></a><tt class="literal">getDateInstance()</tt> methods return a
<tt class="literal">DateFormat</tt> object suitable for formatting dates in
either the default locale or a specified locale. A
formatting style may also optionally be specified; the
constants <tt class="literal">FULL</tt>, <tt class="literal">LONG</tt>, <tt class="literal">MEDIUM</tt>,
<tt class="literal">SHORT</tt>, and <tt class="literal">DEFAULT</tt> specify this style. <a name="INDEX-2721"></a><a name="INDEX-2722"></a>
Similarly, the <tt class="literal">getTimeInstance()</tt> methods return a
<tt class="literal">DateFormat</tt> object that formats and parses times, and
the <tt class="literal">getDateTimeInstance()</tt> methods return a
<tt class="literal">DateFormat</tt> object that formats both dates and times. These methods also optionally take a format style constant
and a <tt class="literal">Locale</tt>. Finally, <tt class="literal">getInstance()</tt>
returns a default <tt class="literal">DateFormat</tt> object that formats
both dates and times in the <tt class="literal">SHORT</tt> format. <a name="INDEX-2723"></a>
</p>
<p>
<a name="INDEX-2724"></a><a name="INDEX-2725"></a>
Once you have created a <tt class="literal">DateFormat</tt> object, you can
use the <tt class="literal">setCalendar()</tt> and <tt class="literal">setTimeZone()</tt>
methods if you want to format the date using a calendar or
time zone other than the default. <a name="INDEX-2726"></a>
The various <tt class="literal">format()</tt> methods convert
<tt class="literal">java.util.Date</tt> objects to strings using whatever
format is encapsulated in the <tt class="literal">DateFormat</tt> object. The
<a name="INDEX-2727"></a><a name="INDEX-2728"></a><tt class="literal">parse()</tt> and <tt class="literal">parseObject()</tt> methods perform
the reverse operation; they parse a string formatted
according to the rules of the <tt class="literal">DateFormat</tt> object and convert
it into to a <tt class="literal">Date</tt> object. The <tt class="literal">DEFAULT</tt>, <tt class="literal">FULL</tt>, <tt class="literal">MEDIUM</tt>,
<tt class="literal">LONG</tt>, and <tt class="literal">SHORT</tt> constants
specify how verbose or compact the formatted date or time
should be. The remaining constants, which all end with
<tt class="literal">_FIELD</tt>, specify various fields of formatted dates and
times and are used with the <tt class="literal">FieldPosition</tt> object
that is optionally passed to <tt class="literal">format()</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">DateFormat</b> extends Format {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected <b class="function">DateFormat</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">AM_PM_FIELD</b> ;</td><td align="right"><i> =14</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DATE_FIELD</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DAY_OF_WEEK_FIELD</b> ;</td><td align="right"><i> =9</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DAY_OF_WEEK_IN_MONTH_FIELD</b> ;</td><td align="right"><i> =11</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DAY_OF_YEAR_FIELD</b> ;</td><td align="right"><i> =10</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">DEFAULT</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">ERA_FIELD</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">FULL</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HOUR0_FIELD</b> ;</td><td align="right"><i> =16</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HOUR1_FIELD</b> ;</td><td align="right"><i> =15</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HOUR_OF_DAY0_FIELD</b> ;</td><td align="right"><i> =5</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">HOUR_OF_DAY1_FIELD</b> ;</td><td align="right"><i> =4</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">LONG</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MEDIUM</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MILLISECOND_FIELD</b> ;</td><td align="right"><i> =8</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MINUTE_FIELD</b> ;</td><td align="right"><i> =6</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">MONTH_FIELD</b> ;</td><td align="right"><i> =2</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SECOND_FIELD</b> ;</td><td align="right"><i> =7</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">SHORT</b> ;</td><td align="right"><i> =3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">TIMEZONE_FIELD</b> ;</td><td align="right"><i> =17</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WEEK_OF_MONTH_FIELD</b> ;</td><td align="right"><i> =13</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">WEEK_OF_YEAR_FIELD</b> ;</td><td align="right"><i> =12</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">YEAR_FIELD</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.util.Locale[ ] <b class="function">getAvailableLocales</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DateFormat <b class="function">getDateInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DateFormat <b class="function">getDateInstance</b> (int <i class="parameter">style</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DateFormat <b class="function">getDateInstance</b> (int <i class="parameter">style</i>, java.util.Locale <i class="parameter">aLocale</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DateFormat <b class="function">getDateTimeInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DateFormat <b class="function">getDateTimeInstance</b> (int <i class="parameter">dateStyle</i>, int <i class="parameter">timeStyle</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DateFormat <b class="function">getDateTimeInstance</b> (int <i class="parameter">dateStyle</i>, int <i class="parameter">timeStyle</i>, java.util.Locale <i class="parameter">aLocale</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DateFormat <b class="function">getInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DateFormat <b class="function">getTimeInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DateFormat <b class="function">getTimeInstance</b> (int <i class="parameter">style</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final DateFormat <b class="function">getTimeInstance</b> (int <i class="parameter">style</i>, java.util.Locale <i class="parameter">aLocale</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Calendar <b class="function">getCalendar</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCalendar</b> (java.util.Calendar <i class="parameter">newCalendar</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isLenient</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLenient</b> (boolean <i class="parameter">lenient</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public NumberFormat <b class="function">getNumberFormat</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setNumberFormat</b> (NumberFormat <i class="parameter">newNumberFormat</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.TimeZone <b class="function">getTimeZone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setTimeZone</b> (java.util.TimeZone <i class="parameter">zone</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final String <b class="function">format</b> (java.util.Date <i class="parameter">date</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract StringBuffer <b class="function">format</b> (java.util.Date <i class="parameter">date</i>, StringBuffer <i class="parameter">toAppendTo</i>, FieldPosition <i class="parameter">fieldPosition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Date <b class="function">parse</b> (String <i class="parameter">text</i>) throws ParseException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract java.util.Date <b class="function">parse</b> (String <i class="parameter">text</i>, ParsePosition <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Format</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final StringBuffer <b class="function">format</b> (Object <i class="parameter">obj</i>, StringBuffer <i class="parameter">toAppendTo</i>, FieldPosition <i class="parameter">fieldPosition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">parseObject</b> (String <i class="parameter">source</i>, ParsePosition <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Protected Instance Fields</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected java.util.Calendar <b class="function">calendar</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">protected NumberFormat <b class="function">numberFormat</b> ;</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Format(Cloneable,Serializable)-->DateFormat</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">SimpleDateFormat</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DateFormat.{getDateInstance(), getDateTimeInstance(), getInstance(), getTimeInstance()}</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DateFormatSymbols</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2729"></a>
This class defines accessor methods for the various pieces
of data, such as names of months and days, used by
<tt class="literal">SimpleDateFormat</tt> to format and parse dates and
times. You do not typically need to use this class unless you are
formatting dates for an unsupported locale or in some highly
customized way. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DateFormatSymbols</b> implements CloneableSerializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DateFormatSymbols</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DateFormatSymbols</b> (java.util.Locale <i class="parameter">locale</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String[ ] <b class="function">getAmPmStrings</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setAmPmStrings</b> (String[ ] <i class="parameter">newAmpms</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String[ ] <b class="function">getEras</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEras</b> (String[ ] <i class="parameter">newEras</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getLocalPatternChars</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLocalPatternChars</b> (String <i class="parameter">newLocalPatternChars</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String[ ] <b class="function">getMonths</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMonths</b> (String[ ] <i class="parameter">newMonths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String[ ] <b class="function">getShortMonths</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setShortMonths</b> (String[ ] <i class="parameter">newShortMonths</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String[ ] <b class="function">getShortWeekdays</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setShortWeekdays</b> (String[ ] <i class="parameter">newShortWeekdays</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String[ ] <b class="function">getWeekdays</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setWeekdays</b> (String[ ] <i class="parameter">newWeekdays</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String[ ][ ] <b class="function">getZoneStrings</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setZoneStrings</b> (String[ ][ ] <i class="parameter">newZoneStrings</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DateFormatSymbols(Cloneable,Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">SimpleDateFormat.{setDateFormatSymbols(), SimpleDateFormat()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">SimpleDateFormat.getDateFormatSymbols()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DecimalFormat</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2730"></a><a name="INDEX-2731"></a>
This is the concrete <tt class="literal">Format</tt> class used by
<tt class="literal">NumberFormat</tt> for all locales that use base 10
numbers. Most applications do not need to use this class
directly; they can use the static methods of
<tt class="literal">NumberFormat</tt> to obtain a default <tt class="literal">NumberFormat</tt> object
for a desired locale and then perform minor
locale-independent customizations on that object. </p>
<p>Applications that require highly customized number
formatting and parsing may create custom
<tt class="literal">DecimalFormat</tt> objects by passing a suitable pattern
to the <tt class="literal">DecimalFormat()</tt> constructor method. The
<a name="INDEX-2732"></a><tt class="literal">applyPattern()</tt> method can change this
pattern. A pattern consists of a string of characters from
the table below. For example:</p>

<blockquote>
<pre class="programlisting">"$#,##0.00;($#,##0.00)"</pre>
</blockquote>

<table border="1">
<tr>
<th>Character</th><th>Meaning</th>
</tr>
<tr>
<td><tt class="literal">#</tt></td><td>A digit; zeros show as absent</td>
</tr>
<tr>
<td><tt class="literal">0</tt></td><td>A digit; zeros show as 0</td>
</tr>
<tr>
<td><tt class="literal">.</tt></td><td>The locale-specific decimal separator</td>
</tr>
<tr>
<td><tt class="literal">,</tt></td><td>The locale-specific grouping separator (comma)</td>
</tr>
<tr>
<td><tt class="literal">-</tt></td><td>The locale-specific negative prefix</td>
</tr>
<tr>
<td><tt class="literal">%</tt></td><td>Shows value as a percentage</td>
</tr>
<tr>
<td><tt class="literal">;</tt></td><td>
<p>Separates positive number format (on left) from optional
             negative number format (on right)</p>
</td>
</tr>
<tr>
<td><tt class="literal">'</tt></td><td>
<p>Quotes a reserved character, so it appears literally in
the output (apostrophe)</p>
</td>
</tr>
<tr>
<td><em class="emphasis">other</em></td><td>Appears literally in output</td>
</tr>
</table>
<p>A <tt class="literal">DecimalFormatSymbols</tt> object can be
specified optionally when creating a <tt class="literal">DecimalFormat</tt> object. If
one is not specified, a <tt class="literal">DecimalFormatSymbols</tt> object
suitable for the default locale is used. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">DecimalFormat</b> extends NumberFormat {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DecimalFormat</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DecimalFormat</b> (String <i class="parameter">pattern</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DecimalFormat</b> (String <i class="parameter">pattern</i>, DecimalFormatSymbols <i class="parameter">symbols</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public DecimalFormatSymbols <b class="function">getDecimalFormatSymbols</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDecimalFormatSymbols</b> (DecimalFormatSymbols <i class="parameter">newSymbols</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isDecimalSeparatorAlwaysShown</b> ();</td><td align="right"><i> default:false</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDecimalSeparatorAlwaysShown</b> (boolean <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getGroupingSize</b> ();</td><td align="right"><i> default:3</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGroupingSize</b> (int <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setMaximumFractionDigits</b> (int <i class="parameter">newValue</i>);</td><td align="right"><i> Overrides:NumberFormat</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setMaximumIntegerDigits</b> (int <i class="parameter">newValue</i>);</td><td align="right"><i> Overrides:NumberFormat</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setMinimumFractionDigits</b> (int <i class="parameter">newValue</i>);</td><td align="right"><i> Overrides:NumberFormat</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setMinimumIntegerDigits</b> (int <i class="parameter">newValue</i>);</td><td align="right"><i> Overrides:NumberFormat</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMultiplier</b> ();</td><td align="right"><i> default:1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMultiplier</b> (int <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getNegativePrefix</b> ();</td><td align="right"><i> default:"-"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setNegativePrefix</b> (String <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getNegativeSuffix</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setNegativeSuffix</b> (String <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getPositivePrefix</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPositivePrefix</b> (String <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getPositiveSuffix</b> ();</td><td align="right"><i> default:""</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPositiveSuffix</b> (String <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">applyLocalizedPattern</b> (String <i class="parameter">pattern</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">applyPattern</b> (String <i class="parameter">pattern</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toLocalizedPattern</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toPattern</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding NumberFormat</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public StringBuffer <b class="function">format</b> (long <i class="parameter">number</i>, StringBuffer <i class="parameter">result</i>, FieldPosition <i class="parameter">fieldPosition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public StringBuffer <b class="function">format</b> (double <i class="parameter">number</i>, StringBuffer <i class="parameter">result</i>, FieldPosition <i class="parameter">fieldPosition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Number <b class="function">parse</b> (String <i class="parameter">text</i>, ParsePosition <i class="parameter">parsePosition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Format(Cloneable,Serializable)-->NumberFormat-->DecimalFormat</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>DecimalFormatSymbols</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2733"></a>
This class defines the various characters and strings, such
as the decimal point, percent sign, and thousands separator,
used by <tt class="literal">DecimalFormat</tt> when formatting numbers. You
do not typically use this class directly unless you are
formatting dates for an unsupported locale or in some highly
customized way. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">DecimalFormatSymbols</b> implements CloneableSerializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DecimalFormatSymbols</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">DecimalFormatSymbols</b> (java.util.Locale <i class="parameter">locale</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getCurrencySymbol</b> ();</td><td align="right"><i> default:"$"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setCurrencySymbol</b> (String <i class="parameter">currency</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getDecimalSeparator</b> ();</td><td align="right"><i> default:.</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDecimalSeparator</b> (char <i class="parameter">decimalSeparator</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getDigit</b> ();</td><td align="right"><i> default:#</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDigit</b> (char <i class="parameter">digit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getGroupingSeparator</b> ();</td><td align="right"><i> default:,</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGroupingSeparator</b> (char <i class="parameter">groupingSeparator</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getInfinity</b> ();</td><td align="right"><i> default:"\u221E"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setInfinity</b> (String <i class="parameter">infinity</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getInternationalCurrencySymbol</b> ();</td><td align="right"><i> default:"USD"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setInternationalCurrencySymbol</b> (String <i class="parameter">currency</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getMinusSign</b> ();</td><td align="right"><i> default:-</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMinusSign</b> (char <i class="parameter">minusSign</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getMonetaryDecimalSeparator</b> ();</td><td align="right"><i> default:.</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMonetaryDecimalSeparator</b> (char <i class="parameter">sep</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getNaN</b> ();</td><td align="right"><i> default:"\uFFFD"</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setNaN</b> (String <i class="parameter">NaN</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getPatternSeparator</b> ();</td><td align="right"><i> default:;</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPatternSeparator</b> (char <i class="parameter">patternSeparator</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getPercent</b> ();</td><td align="right"><i> default:%</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPercent</b> (char <i class="parameter">percent</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getPerMill</b> ();</td><td align="right"><i> default:\u2030</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setPerMill</b> (char <i class="parameter">perMill</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">getZeroDigit</b> ();</td><td align="right"><i> default:0</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setZeroDigit</b> (char <i class="parameter">zeroDigit</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->DecimalFormatSymbols(Cloneable,Serializable)</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DecimalFormat.{DecimalFormat(), setDecimalFormatSymbols()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DecimalFormat.getDecimalFormatSymbols()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>FieldPosition</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2734"></a><tt class="literal">FieldPosition</tt> objects are optionally passed to the
<tt class="literal">format()</tt> methods of the <tt class="literal">Format</tt> class and its
subclasses to return additional information about the
formatting that has been performed. The
<a name="INDEX-2735"></a><a name="INDEX-2736"></a><tt class="literal">getBeginIndex()</tt> and <tt class="literal">getEndIndex()</tt> methods of
this class return the starting and ending
character positions of some field of the formatted string. The integer value passed to the <tt class="literal">FieldPosition()</tt>
constructor specifies what field of the returned string
should have its bounds returned. The <tt class="literal">NumberFormat</tt>
and <tt class="literal">DateFormat</tt> classes define various constants
(which end with the string <tt class="literal">_FIELD</tt>) that can be used
here. Typically, this bounds information is useful for
aligning formatted strings in columns--for example, aligning
the decimal points in a column of numbers. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">FieldPosition</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">FieldPosition</b> (int <i class="parameter">field</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getBeginIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getEndIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getField</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setBeginIndex</b> (int <i class="parameter">bi</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setEndIndex</b> (int <i class="parameter">ei</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">ChoiceFormat.format(), DateFormat.format(), DecimalFormat.format(), Format.format(), MessageFormat.format(), NumberFormat.format(), SimpleDateFormat.format()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>Format</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2737"></a>
This abstract class is the base class for all number, date,
and string formatting classes in the <tt class="literal">java.text</tt>
package. It defines two abstract methods that are
implemented by subclasses. <tt class="literal">format()</tt> converts an
<a name="INDEX-2738"></a>
object to a string using the formatting rules encapsulated
by the <tt class="literal">Format</tt> subclass and optionally appends the
resulting string to an existing
<a name="INDEX-2739"></a><tt class="literal">StringBuffer</tt>. <tt class="literal">parseObject()</tt> performs the
reverse operation; it parses a formatted string and returns
the corresponding object. Status information for these two
operations is returned in <tt class="literal">FieldPosition</tt> and
<tt class="literal">ParsePosition</tt> objects. The nonabstract methods of
this class are simple shortcuts that rely on implementations
of the abstract methods. See <tt class="literal">ChoiceFormat</tt>, <tt class="literal">DateFormat</tt>,
<tt class="literal">MessageFormat</tt>, and <tt class="literal">NumberFormat</tt>. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">Format</b> implements CloneableSerializable {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">Format</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final String <b class="function">format</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract StringBuffer <b class="function">format</b> (Object <i class="parameter">obj</i>, StringBuffer <i class="parameter">toAppendTo</i>, FieldPosition <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">parseObject</b> (String <i class="parameter">source</i>) throws ParseException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Object <b class="function">parseObject</b> (String <i class="parameter">source</i>, ParsePosition <i class="parameter">status</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Format(Cloneable,Serializable)</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">DateFormat, MessageFormat, NumberFormat</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">MessageFormat.{setFormat(), setFormats()}</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">MessageFormat.getFormats()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>MessageFormat</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2740"></a>
This class formats and substitutes objects into specified
positions in a message string (also known as the pattern
string). It provides the closest Java equivalent to the
<tt class="literal">printf()</tt> function of the C programming language. If a message is to be displayed only a single time, the
simplest way to use the <tt class="literal">MessageFormat</tt> class is
<a name="INDEX-2741"></a>
through the static <tt class="literal">format()</tt> method. This method is passed
a message or pattern string and an array of argument objects to
be formatted and substituted into the string. If the message is to be displayed
several times, it makes more sense to create a
<tt class="literal">MessageFormat</tt> object, supplying the pattern string, 
and then 
call the <tt class="literal">format()</tt> instance method of this object,
supplying the array of objects to be formatted into the
message. </p>
<p>The message or pattern string used by the
<tt class="literal">MessageFormat</tt> contains digits enclosed in
curly braces to indicate where each argument should be
substituted. The sequence "<tt class="literal">{0}</tt>" indicates that the
first object should be converted to a string (if necessary)
and inserted at that point, while the sequence "<tt class="literal">{3}</tt>"
indicates that the fourth object should be inserted. If the object to be inserted is not a string,
<tt class="literal">MessageFormat</tt> checks to see if it is a <tt class="literal">Date</tt>
or a subclass of <tt class="literal">Number</tt>. If so, it uses a default
<tt class="literal">DateFormat</tt> or <tt class="literal">NumberFormat</tt> object to convert
the value to a string. If not, it simply invokes the
object's <tt class="literal">toString()</tt> method to convert it. <a name="INDEX-2742"></a>
</p>
<p>A digit within curly braces in a pattern string may be
followed optionally by a comma, and one of the words "date",
"time", "number", or "choice", to indicate that the
corresponding argument should be formatted as a date, time,
number, or choice before being substituted into the pattern
string. Any of these keywords can additionally be followed
by a comma and additional pattern information to be used in
formatting the date, time, number, or choice. (See
<tt class="literal">SimpleDateFormat</tt>, <tt class="literal">DecimalFormat</tt>, and
<tt class="literal">ChoiceFormat</tt> for more information.)</p>
<p>
<a name="INDEX-2743"></a>
You can use the <tt class="literal">setLocale()</tt> method to specify a
nondefault <tt class="literal">Locale</tt> that the <tt class="literal">MessageFormat</tt>
should use when obtaining <tt class="literal">DateFormat</tt> and
<tt class="literal">NumberFormat</tt> objects to format dates, time, and
numbers inserted into the pattern. <a name="INDEX-2744"></a>
You can change the <tt class="literal">Format</tt> object used at a
particular position in the pattern with the
<tt class="literal">setFormat()</tt> method. You can set a new pattern for
the <tt class="literal">MessageFormat</tt> object by calling
<a name="INDEX-2745"></a><tt class="literal">applyPattern()</tt>, and you can obtain a string that
represents the current formatting pattern by calling
<tt class="literal">toPattern()</tt>. <a name="INDEX-2746"></a><a name="INDEX-2747"></a><tt class="literal">MessageFormat</tt> also supports a <tt class="literal">parse()</tt> method
that can parse an array of objects out of a specified
string, according to the specified pattern. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">MessageFormat</b> extends Format {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">MessageFormat</b> (String <i class="parameter">pattern</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static String <b class="function">format</b> (String <i class="parameter">pattern</i>, Object[ ] <i class="parameter">arguments</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">applyPattern</b> (String <i class="parameter">newPattern</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final StringBuffer <b class="function">format</b> (Object[ ] <i class="parameter">source</i>, StringBuffer <i class="parameter">result</i>, FieldPosition <i class="parameter">ignore</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Format[ ] <b class="function">getFormats</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Locale <b class="function">getLocale</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">parse</b> (String <i class="parameter">source</i>) throws ParseException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object[ ] <b class="function">parse</b> (String <i class="parameter">source</i>, ParsePosition <i class="parameter">status</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFormat</b> (int <i class="parameter">variable</i>, Format <i class="parameter">newFormat</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setFormats</b> (Format[ ] <i class="parameter">newFormats</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setLocale</b> (java.util.Locale <i class="parameter">theLocale</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toPattern</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Format</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final StringBuffer <b class="function">format</b> (Object <i class="parameter">source</i>, StringBuffer <i class="parameter">result</i>, FieldPosition <i class="parameter">ignore</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">parseObject</b> (String <i class="parameter">text</i>, ParsePosition <i class="parameter">status</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Format(Cloneable,Serializable)-->MessageFormat</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>NumberFormat</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2748"></a>
This class formats and parses numbers in a locale-specific
way. As an abstract class, it cannot be instantiated
directly, but it provides a number of static methods that
return instances of a concrete subclass you can use
<a name="INDEX-2749"></a>
for formatting. The <tt class="literal">getInstance()</tt> method returns a
<tt class="literal">NumberFormat</tt> object suitable for normal formatting of
numbers in either the default locale or in a specified
<a name="INDEX-2750"></a><a name="INDEX-2751"></a>
locale. <tt class="literal">getCurrencyInstance()</tt> and
<tt class="literal">getPercentInstance()</tt> return <tt class="literal">NumberFormat</tt> objects for
formatting numbers that represent monetary amounts and
percentages, in either the default locale or in a specified
locale. <tt class="literal">getAvailableLocales()</tt> returns an array of
locales for which <tt class="literal">NumberFormat</tt> objects are available. 
<a name="INDEX-2752"></a>
</p>
<p>
<a name="INDEX-2753"></a><a name="INDEX-2754"></a>
Once you have created a suitable <tt class="literal">NumberFormat</tt> object, you
can customize its locale-independent behavior with
<tt class="literal">setMaximumFractionDigits()</tt>, <tt class="literal">setGroupingUsed()</tt>,
and similar <tt class="literal">set</tt> methods. In order to
customize the locale-dependent behavior, you can use
<tt class="literal">instanceof</tt> to test if the <tt class="literal">NumberFormat</tt>
object is an instance of <tt class="literal">DecimalFormat</tt>, and, if so,
cast it to that type. The <tt class="literal">DecimalFormat</tt> class
provides complete control over number formatting. Note,
however, that a <tt class="literal">NumberFormat</tt> customized in this way


may no longer be appropriate for the desired locale. </p>
<p>
<a name="INDEX-2755"></a>
After creating and customizing a <tt class="literal">NumberFormat</tt>
object, you can use the various <tt class="literal">format()</tt> methods to
convert numbers to strings or string buffers, and you can
use the <tt class="literal">parse()</tt> or <tt class="literal">parseObject()</tt> methods to
convert strings to numbers. <a name="INDEX-2756"></a><a name="INDEX-2757"></a>
The constants defined by this class are to be used
by the <tt class="literal">FieldPosition</tt> object. The <tt class="literal">NumberFormat</tt> class in not intended for the
display of very large or very small numbers that require
exponential notation, and it may not gracefully handle
infinite or <tt class="literal">NaN</tt> (not-a-number) values. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public abstract class <b class="classname">NumberFormat</b> extends Format {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">NumberFormat</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constants</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">FRACTION_FIELD</b> ;</td><td align="right"><i> =1</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final int <b class="function">INTEGER_FIELD</b> ;</td><td align="right"><i> =0</i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Class Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static java.util.Locale[ ] <b class="function">getAvailableLocales</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final NumberFormat <b class="function">getCurrencyInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static NumberFormat <b class="function">getCurrencyInstance</b> (java.util.Locale <i class="parameter">inLocale</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final NumberFormat <b class="function">getInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static NumberFormat <b class="function">getInstance</b> (java.util.Locale <i class="parameter">inLocale</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final NumberFormat <b class="function">getNumberInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static NumberFormat <b class="function">getNumberInstance</b> (java.util.Locale <i class="parameter">inLocale</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static final NumberFormat <b class="function">getPercentInstance</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public static NumberFormat <b class="function">getPercentInstance</b> (java.util.Locale <i class="parameter">inLocale</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Property Accessor Methods (by property name)</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isGroupingUsed</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setGroupingUsed</b> (boolean <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaximumFractionDigits</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMaximumFractionDigits</b> (int <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMaximumIntegerDigits</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMaximumIntegerDigits</b> (int <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinimumFractionDigits</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMinimumFractionDigits</b> (int <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getMinimumIntegerDigits</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setMinimumIntegerDigits</b> (int <i class="parameter">newValue</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">isParseIntegerOnly</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setParseIntegerOnly</b> (boolean <i class="parameter">value</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final String <b class="function">format</b> (long <i class="parameter">number</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final String <b class="function">format</b> (double <i class="parameter">number</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract StringBuffer <b class="function">format</b> (long <i class="parameter">number</i>, StringBuffer <i class="parameter">toAppendTo</i>, FieldPosition <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract StringBuffer <b class="function">format</b> (double <i class="parameter">number</i>, StringBuffer <i class="parameter">toAppendTo</i>, FieldPosition <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Number <b class="function">parse</b> (String <i class="parameter">text</i>) throws ParseException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public abstract Number <b class="function">parse</b> (String <i class="parameter">text</i>, ParsePosition <i class="parameter">parsePosition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Format</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final StringBuffer <b class="function">format</b> (Object <i class="parameter">number</i>, StringBuffer <i class="parameter">toAppendTo</i>, FieldPosition <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public final Object <b class="function">parseObject</b> (String <i class="parameter">source</i>, ParsePosition <i class="parameter">parsePosition</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Format(Cloneable,Serializable)-->NumberFormat</tt>
</p>
<p>
<span class="refsect1">Subclasses: </span><tt class="literal">ChoiceFormat, DecimalFormat</tt>
</p>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">DateFormat.setNumberFormat()</tt>
</p>
<p>
<span class="refsect1">Returned By: </span><tt class="literal">DateFormat.getNumberFormat(), NumberFormat.{getCurrencyInstance(), getInstance(), getNumberInstance(), getPercentInstance()}</tt>
</p>
<p>
<span class="refsect1">Type Of: </span><tt class="literal">DateFormat.numberFormat</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ParseException</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>serializable checked PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2758"></a>
Signals that a string has an incorrect format
and cannot be parsed. It is typically thrown by the
<tt class="literal">parse()</tt> or <tt class="literal">parseObject()</tt> methods of
<tt class="literal">Format</tt> and its subclasses, but is also thrown by
certain methods in the <tt class="literal">java.text</tt> package that are
passed patterns or other rules in string form. The
<tt class="literal">getErrorOffset()</tt> method of this class returns the
character position at which the parsing error occurred in
the offending string. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ParseException</b> extends Exception {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ParseException</b> (String <i class="parameter">s</i>, int <i class="parameter">errorOffset</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getErrorOffset</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Throwable(Serializable)-->Exception-->ParseException</tt>
</p>
<p>
<span class="refsect1">Thrown By: </span><tt class="literal">DateFormat.parse(), Format.parseObject(), MessageFormat.parse(), NumberFormat.parse(), RuleBasedCollator.RuleBasedCollator()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>ParsePosition</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2759"></a><a name="INDEX-2760"></a><a name="INDEX-2761"></a><tt class="literal">ParsePosition</tt> objects are passed to the
<tt class="literal">parse()</tt> and <tt class="literal">parseObject()</tt> methods of
<tt class="literal">Format</tt> and its subclasses. The
<tt class="literal">ParsePosition</tt> class represents the position in a
string at which parsing should begin or at which parsing
stopped. Before calling a <tt class="literal">parse()</tt> method, you can
specify the starting position of parsing by passing the
desired index to the <tt class="literal">ParsePosition()</tt> constructor or
<a name="INDEX-2762"></a><a name="INDEX-2763"></a>
by calling the <tt class="literal">setIndex()</tt> of an existing
<tt class="literal">ParsePosition</tt> object. When <tt class="literal">parse()</tt> returns,
you can determine where parsing ended by calling
<tt class="literal">getIndex()</tt>. When parsing multiple objects or values
from a string, a single <tt class="literal">ParsePosition</tt> object can be
used sequentially. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">ParsePosition</b>  {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">ParsePosition</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">getErrorIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setErrorIndex</b> (int <i class="parameter">ei</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setIndex</b> (int <i class="parameter">index</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public String <b class="function">toString</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Passed To: </span><tt class="literal">ChoiceFormat.parse(), DateFormat.{parse(), parseObject()}, DecimalFormat.parse(), Format.parseObject(), MessageFormat.{parse(), parseObject()}, NumberFormat.{parse(), parseObject()}, SimpleDateFormat.parse()</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>RuleBasedCollator</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2764"></a><a name="INDEX-2765"></a><a name="INDEX-2766"></a>
This class is a concrete subclass of the abstract
<tt class="literal">Collator</tt> class. It performs collations using a
table of rules that are specified in textual form. Most
applications do not use this class directly; instead they
call <tt class="literal">Collator.getInstance()</tt> to obtain a
<tt class="literal">Collator</tt> object (typically a <tt class="literal">RuleBasedCollator</tt>
object) that implements the default collation order for a
specified or default locale. You should need to use
this class only if you are collating strings for a locale that is
not supported by default or if you need to implement a
highly customized collation order. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">RuleBasedCollator</b> extends Collator {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">RuleBasedCollator</b> (String <i class="parameter">rules</i>) throws ParseException;</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public CollationElementIterator <b class="function">getCollationElementIterator</b> (CharacterIterator <i class="parameter">source</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public CollationElementIterator <b class="function">getCollationElementIterator</b> (String <i class="parameter">source</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">getRules</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Collator</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">compare</b> (String <i class="parameter">source</i>, String <i class="parameter">target</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public CollationKey <b class="function">getCollationKey</b> (String <i class="parameter">source</i>);</td><td align="right"><i> synchronized</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Collator(Cloneable,java.util.Comparator)-->RuleBasedCollator</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>SimpleDateFormat</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable serializable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2767"></a><a name="INDEX-2768"></a>
This is the concrete <tt class="literal">Format</tt> subclass used by
<tt class="literal">DateFormat</tt> to handle the formatting and parsing of
dates. Most applications should not use this class
directly; instead, they should obtain a localized
<tt class="literal">DateFormat</tt> object by calling one of the static
methods of <tt class="literal">DateFormat</tt>. </p>
<p>
<tt class="literal">SimpleDateFormat</tt> formats dates and times according to a
pattern, which specifies the positions of the various fields
of the date, and a <tt class="literal">DateFormatSymbols</tt> object, which
specifies important auxiliary data, such as the names of
months. Applications that require highly customized date or
time formatting can create a custom <tt class="literal">SimpleDateFormat</tt>
object by specifying the desired pattern. This creates
a <tt class="literal">SimpleDateFormat</tt> object that uses the
<tt class="literal">DateFormatSymbols</tt> object for the default locale. You may also specify an locale explicitly, to use the
<tt class="literal">DateFormatSymbols</tt> object for that locale. You
can even provide an explicit <tt class="literal">DateFormatSymbols</tt>
object of your own if you need to format dates and times
for an unsupported locale. </p>
<p>
<a name="INDEX-2769"></a>
You can use the <tt class="literal">applyPattern()</tt> method of a
<tt class="literal">SimpleDateFormat</tt> to change the formatting pattern
used by the object. The syntax of this pattern is described
in the table below. Any characters in the format string
that do not appear in this table appear literally in the
formatted date. </p>
<table border="1">
<tr>
<th>Field</th><th>Full Form</th><th>Short Form</th>
</tr>
<tr>
<td>Year</td><td><tt class="literal">yyyy</tt> (4 digits)</td><td><tt class="literal">yy</tt> (2 digits)</td>
</tr>
<tr>
<td>Month</td><td><tt class="literal">MMM</tt> (name)</td><td><tt class="literal">MM</tt> (2 digits), <tt class="literal">M</tt> (1 or 2 digits)</td>
</tr>
<tr>
<td>Day of week</td><td><tt class="literal">EEEE</tt></td><td><tt class="literal">EE</tt></td>
</tr>
<tr>
<td>Day of month</td><td><tt class="literal">dd</tt> (2 digits)</td><td><tt class="literal">d</tt> (1 or 2 digits)</td>
</tr>
<tr>
<td>Hour (1-12)</td><td><tt class="literal">hh</tt> (2 digits)</td><td><tt class="literal">h</tt> (1 or 2 digits)</td>
</tr>
<tr>
<td>Hour (0-23)</td><td><tt class="literal">HH</tt> (2 digits)</td><td><tt class="literal">H</tt> (1 or 2 digits)</td>
</tr>
<tr>
<td>Hour (0-11)</td><td><tt class="literal">KK</tt></td><td><tt class="literal">K</tt></td>
</tr>
<tr>
<td>Hour (1-24)</td><td><tt class="literal">kk</tt></td><td><tt class="literal">k</tt></td>
</tr>
<tr>
<td>Minute</td><td><tt class="literal">mm</tt></td><td></td>
</tr>
<tr>
<td>Second</td><td><tt class="literal">ss</tt></td><td></td>
</tr>
<tr>
<td>Millisecond</td><td><tt class="literal">SSS</tt></td><td></td>
</tr>
<tr>
<td>AM/PM</td><td><tt class="literal">a</tt></td><td></td>
</tr>
<tr>
<td>Time zone</td><td><tt class="literal">zzzz</tt></td><td><tt class="literal">zz</tt></td>
</tr>
<tr>
<td>Day of week in month</td><td><tt class="literal">F</tt> (e.g., 3rd Thursday)</td><td></td>
</tr>
<tr>
<td>Day in year</td><td><tt class="literal">DDD</tt> (3 digits)</td><td><tt class="literal">D</tt> (1, 2, or 3 digits)</td>
</tr>
<tr>
<td>Week in year</td><td><tt class="literal">ww</tt></td><td></td>
</tr>
<tr>
<td>Era (e.g., BC/AD)</td><td><tt class="literal">G</tt></td><td></td>
</tr>
</table>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public class <b class="classname">SimpleDateFormat</b> extends DateFormat {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SimpleDateFormat</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SimpleDateFormat</b> (String <i class="parameter">pattern</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SimpleDateFormat</b> (String <i class="parameter">pattern</i>, DateFormatSymbols <i class="parameter">formatData</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">SimpleDateFormat</b> (String <i class="parameter">pattern</i>, java.util.Locale <i class="parameter">loc</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">applyLocalizedPattern</b> (String <i class="parameter">pattern</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">applyPattern</b> (String <i class="parameter">pattern</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public java.util.Date <b class="function">get2DigitYearStart</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public DateFormatSymbols <b class="function">getDateFormatSymbols</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">set2DigitYearStart</b> (java.util.Date <i class="parameter">startDate</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public void <b class="function">setDateFormatSymbols</b> (DateFormatSymbols <i class="parameter">newFormatSymbols</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toLocalizedPattern</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public String <b class="function">toPattern</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding DateFormat</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public StringBuffer <b class="function">format</b> (java.util.Date <i class="parameter">date</i>, StringBuffer <i class="parameter">toAppendTo</i>, FieldPosition <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public java.util.Date <b class="function">parse</b> (String <i class="parameter">text</i>, ParsePosition <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->Format(Cloneable,Serializable)-->DateFormat-->SimpleDateFormat</tt>
</p>
</div>
<div class="refentry">
<table width="515" border="0" cellpadding="5">
<tr>
<td align="left"><font size="+1"><b>StringCharacterIterator</b></font></td><td align="right"><font size="+1"><b>Java 1.1</b></font></td>
</tr>
<tr>
<td colspan="2">
<table width="100%">
<tr>
<td bgcolor="#000000"><img src="gifs/spacer.gif" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/gifs/spacer.gif" width="1" height="1"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td align="left"><font size="+1"><b>java.text</b></font></td><td align="right"><font size="+1"><b><i>cloneable PJ1.1</i></b></font></td>
</tr>
</table>

<p>
<a name="INDEX-2770"></a>
This class is a trivial implementation of the
<tt class="literal">CharacterIterator</tt> interface that works for text
stored in Java <tt class="literal">String</tt> objects. See
<tt class="literal">CharacterIterator</tt> for details. </p>
<div class="refsynopsisdiv">
<table border="0">
<tr>
<td colspan="3">public final class <b class="classname">StringCharacterIterator</b> implements CharacterIterator {</td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Constructors</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">StringCharacterIterator</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">StringCharacterIterator</b> (String <i class="parameter">text</i>, int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public <b class="function">StringCharacterIterator</b> (String <i class="parameter">text</i>, int <i class="parameter">begin</i>, int <i class="parameter">end</i>, int <i class="parameter">pos</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Instance Methods</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision">1.2</span></td><td align="left">public void <b class="function">setText</b> (String <i class="parameter">text</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Methods Implementing CharacterIterator</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public Object <b class="function">clone</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">current</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">first</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getBeginIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getEndIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">getIndex</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">last</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">next</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">previous</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public char <b class="function">setIndex</b> (int <i class="parameter">p</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td><i class="members">// </i></td><td colspan="2"><i class="members">Public Methods Overriding Object</i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public boolean <b class="function">equals</b> (Object <i class="parameter">obj</i>);</td><td align="right"><i></i></td>
</tr>
<tr>
<td width="10"><span class="java-revision"></span></td><td align="left">public int <b class="function">hashCode</b> ();</td><td align="right"><i></i></td>
</tr>
<tr>
<td colspan="3">}</td>
</tr>
</table>
</div>
<p>
<span class="refsect1">Hierarchy: </span><tt class="literal">Object-->StringCharacterIterator(CharacterIterator(Cloneable))</tt>
</p>
</div>
<a name="INDEX-2771"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch21_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch21_01.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch23_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/ch23_01.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">21.1. The java.security.spec Package</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">23. The java.util Package</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
