<html>
<head>
<title>Java Application Security (Java Security)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="Scott Oaks">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-403-7E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Java Application Security">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm" alt="Java Security"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch00_07.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/ch00_07.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm">Java Security</a></td><td align="right" valign="top" width="172"><a href="ch01_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/ch01_02.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->

<h1 class="chapter">Chapter 1.  Java Application Security</h1>
<div class="htmltoc">
<h4 class="tochead">Contents:</h4>
<p>
<a href="ch01_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/ch01_01.htm">What Is Security?</a>
<br>
<a href="ch01_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/ch01_02.htm">The Java Sandbox</a>
<br>
<a href="ch01_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/ch01_03.htm">Applications, Applets, and Programs</a>
<br>
<a href="ch01_04.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/ch01_04.htm">Running a Java Application</a>
<br>
<a href="ch01_05.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/ch01_05.htm">Summary</a>
<br>
</p>
</div>


<p>When Java was first released by Sun Microsystems, it attracted the
attention of programmers throughout the world. These developers were
attracted to Java for different reasons: some were drawn to Java
because of its cross-platform capabilities, some because of its ease
of programming (especially compared to object-oriented languages like
C++), some because of its robustness and memory management, some
because of Java's security, and some for still other reasons.
</p>

<p>Just as different developers came to Java with different
expectations, so too did they bring different expectations as to what
was meant by the ubiquitous phrase "Java is secure."
Security means different things to different people, and many
developers who had certain expectations about the word
"security" were surprised to find that their expectations
were not necessarily shared by the designers of Java.
</p>

<p>This book discusses the features of Java that make it secure. In this
book, we'll discuss why Java is said to be secure, what that
security means (and doesn't mean), and--most
importantly--how to use the security features of the Java
platform within your own programs. This last point is actually the
focus of this book: while some of Java's security features are
automatically a part of all Java programs, many of them are not. In
this book, we'll learn about all those features, and how to
utilize them in our own Java applications.
</p>



<h2 class="sect1">1.1. What Is Security?</h2>

<p>
<a name="INDEX-3"></a>The first thing that we must do to
facilitate our discussion of Java security is to discuss just what
Java's security goals are. The term "security" is
somewhat vague unless it is discussed in some context; different
expectations of the term "security" might lead us to
expect that Java programs would be:
</p>

<ul>
<li>
<p>
<em class="emphasis">Safe from malevolent programs</em>: Programs should not be allowed to
harm a user's computing environment. This includes Trojan
horses as well as harmful programs that can replicate
themselves--computer viruses.
</p>
</li>
<li>
<p>
<em class="emphasis">Non-intrusive</em>: Programs should be prevented from discovering private
information on the host computer or the host computer's
network.
</p>
</li>
<li>
<p>
<em class="emphasis">Authenticated</em>: The identity of parties involved in the program should
be verified.
</p>
</li>
<li>
<p>
<em class="emphasis">Encrypted</em>: Data that the program sends and receives should be
encrypted.
</p>
</li>
<li>
<p>
<em class="emphasis">Audited</em>: Potentially sensitive operations should always be logged.</p>
</li>
<li>
<p>
<em class="emphasis">Well-defined</em>: A well-defined security specification would be followed.</p>
</li>
<li>
<p>
<em class="emphasis">Verified</em>: Rules of operation should be set and verified.</p>
</li>
<li>
<p>
<em class="emphasis">Well-behaved</em>: Programs should be prevented from consuming too many
system resources.
</p>
</li>
<li>
<p>
<em class="emphasis">C2 or B1 certified</em>: Programs should have certification from the U.S.
government that certain security procedures are included.
</p>
</li>
</ul>

<p>In fact, while all of these features could be part of a secure
system, only the first two were within the province of Java's
1.0 default security model. Other items in the list have been
introduced in later versions of Java: authentication was added in
1.1, encryption is available as an extension to 1.2,<a href="#FOOTNOTE-1">[1]</a> and auditing can be added
to any Java program by providing an auditing security manager. Still
others of these items will be added in the future. But the basic
premise remains that Java security was originally and fundamentally
designed to protect the information on a computer from being accessed
or modified (including a modification that would introduce a virus)
while still allowing the Java program to run on that computer.
</p>
<blockquote class="footnote">
<a name="FOOTNOTE-1"></a>
<p>[1]1.2 is now Java 2.</p> </blockquote>

<p>The point driving this notion of security is the new distribution
model for Java programs. One of the driving forces behind Java, of
course, is its ability to download programs over a network and run
those programs on another machine within the context of a
Java-enabled browser (or within the context of other Java
applications). Coupled with the widespread growth of Internet
use--and the public-access nature of the
Internet--Java's ability to bring programs to a user on an
as-needed, just-in-time basis has been a strong reason for its rapid
deployment and acceptance.
</p>

<p>The nature of the Internet created a new and largely unprecedented
requirement for programs to be free of <a name="INDEX-4"></a><a name="INDEX-5"></a><a name="INDEX-6"></a>viruses and Trojan horses.
Computer users had always been used to purchasing shrink-wrapped
software. Many soon began downloading software via ftp or other means
and then running that software on their machines. But widespread
downloading also led to a pervasive problem of malevolent attributes
both in free and (ironically) in commercial software (a problem which
continues unabated). The introduction of Java into this equation had
the potential to multiply this problem by orders of magnitude, as
computer users now download programs automatically and frequently.
</p>

<p>For Java to succeed, it needed to circumvent the virus/trojan horse
problems that plagued other models of software distribution. Hence,
the early work on Java focused on just that issue: Java programs are
considered safe because they cannot install, run, or propagate
viruses, and because the program itself cannot perform any action
that is harmful to the user's computing environment. And in
this context, safety means security.<a name="INDEX-7"></a><a name="INDEX-8"></a><a name="INDEX-9"></a> This is not to say that the other
issues in the above list are not important--each has its place
and its importance (in fact, we'll spend a great deal of time
in this book on the third and fourth topics in that list). But the
issues of protecting information and preventing viruses were
considered most important; hence, features to provide that level of
security were the first to be adopted. Like all parts of Java, its
security model is evolving (and has evolved through its various
releases); many of the notions about security in our list will
eventually make their way into Java.
</p>

<p>One of the primary goals of this book, then, is to explain
Java's security model and its evolution through releases. In
the final analysis, whether or not Java is secure is a subjective
judgment that individual users will have to make based on their own
requirements. If all you want from Java is freedom from viruses, any
release of Java should meet your needs. If you need to introduce
authentication or encryption into your program, you'll need to
use a 1.1 or later release of Java. If you have a requirement that
all operations be audited, you'll need to build that auditing
into your applications. If you really need conformance with a U.S.
government-approved definition of security, Java is not the platform
for you. We take a very pragmatic view of security in this book: the
issue is not whether a system that lacks a particular feature
qualifies as "secure" according to someone's
definition of security. The issue is whether Java possesses the
features that meet your needs.
</p>

<p>When Java security is discussed, the discussion typically centers
around Java's applet-based security model--the security
model that is embodied by Java-enabled browsers. This model is
designed for the Internet. For many users, this is not necessarily
the most appropriate model: it is somewhat restrictive, and the
security concerns on a private, corporate network are not the same as
those on the Internet.
</p>

<p>In this book, we take a different tack: the goal of this book is to
show how to use the security model and how to write your own secure
Java applications. While some of the information we present will be
applicable to a browser environment, the security of any particular
browser is ultimately up to the provider of the browser. Some
browsers allow us to change the security policy the browser uses, but
many do not. Hence, reading about the security manager in this book
may help you understand how a particular browser works (and why it
works that way), but that won't necessarily allow you to change
the security model provided by that browser.<a name="INDEX-10"></a>
</p>












<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch00_07.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/ch00_07.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch01_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/ch01_02.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">0.7. Feedback for the Author</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">1.2. The Java Sandbox</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="../dist/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
