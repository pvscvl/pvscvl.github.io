<html>
<head>
<title>Using the Examples in Applets (Java Distributed Computing)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="Jim Farley">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-206-9E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Using the Examples in Applets">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm" alt="Java Distributed Computing"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch10_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/ch10_02.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm">Java Distributed Computing</a></td><td align="right" valign="top" width="172"><a href="appa_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/appa_02.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->

<h1 class="chapter">Appendix A.  Using the Examples in Applets</h1>
<div class="htmltoc">
<h4 class="tochead">Contents:</h4>
<p>
<a href="appa_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/appa_01.htm">Whiteboard Applet</a>
<br>
<a href="appa_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/appa_02.htm">Class Downloads</a>
<br>
</p>
</div>



<p>
<a name="INDEX-1328"></a>You may
have noticed that most of the examples in this book are provided in a
form suitable for use as Java applications, not as applets. Rather
than interspersing applet examples with applications throughout the
book, we decided to concentrate on distributed system development
issues without the additional complications of applet programming. In
this appendix, we'll see how some of the examples could be
modified for use in applets.
</p>




<h2 class="sect1">A.1. Whiteboard Applet</h2>

<p>
<a name="INDEX-1329"></a><a name="INDEX-1330"></a><a name="INDEX-1331"></a>One of the examples that seems like an
obvious candidate for use as an applet is <a name="INDEX-1332"></a> our whiteboard example from <a href="ch10_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/ch10_01.htm">Chapter 10, "Building Collaborative Applications"</a>. Currently, support for RMI within web
browsers is scarce, so let's concentrate on a message-passing
version of the whiteboard, instead of the RMI-based version shown in
<a href="ch10_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/ch10_02.htm">Example A-3</a>. The message-passing version is very
similar, but is based on the <tt class="literal">MessageCollaborator</tt>
and <tt class="literal">MessageMediator</tt> classes from that chapter.
This version, which we called the
<tt class="literal">MsgWhiteboardUser</tt>, is shown in <a href="#JDP-AP-A-EX-2">Example A-1</a>. Since the differences between this and the
RMI-based <tt class="literal">WhiteboardUser</tt> are minor, we
won't go into details about the code here.
<a name="INDEX-1333"></a>
</p>

<a name="JDP-AP-A-EX-2"></a>
<div class="example">
<h4 class="objtitle">Example A-1. Message-Passing Whiteboard</h4>
<blockquote>
<pre class="programlisting">package dcj.examples.Collaborative;

import dcj.util.Collaborative.*;
import java.awt.event.*;
import java.awt.*;
import java.util.Hashtable;
import java.util.Properties;
import java.io.IOException;
import java.util.Vector;

class Msg {
  public Object data;
  public String tag;

  public Msg(Object o, String t) {
    data = o;
    tag = t;
  }
}

class CommHelper extends Thread {
  Collaborator collaborator;
  static Vector msgs = new Vector();

  public CommHelper(Collaborator c) {
    collaborator = c;
  }

  public static void addMsg(Object o, String t) {
    synchronized (msgs) {
      msgs.addElement(new Msg(o, t));
    }
  }

  public void run() {
    while (true) {
      try {
        Msg m = null;
        synchronized (msgs) {
          m = (Msg)msgs.elementAt(0);
          msgs.removeElementAt(0);
        }
        collaborator.broadcast(m.tag, m.data);
      }
      catch (Exception e) {}
    }
  }
}

public class MsgWhiteboardUser 
    extends MessageCollaborator
    implements java.awt.event.MouseListener,
               java.awt.event.MouseMotionListener
{
  protected Hashtable lastPts = new Hashtable();
  protected Component whiteboard;
  protected Image buffer;

  public MsgWhiteboardUser(String name, Color color,
                           String host, int port) {
    super(host, port, name);
    getIdentity().setProperty("color", color);
    System.out.println("color = " + color.getRed()
                       + " " + color.getGreen() + " "
                       + color.getBlue());
    buildUI();
    CommHelper helper = new CommHelper(this);
    helper.start();
  }

  protected void buildUI() {
    Frame f = new Frame();
    GridBagLayout gridbag = new GridBagLayout();
    GridBagConstraints c = new GridBagConstraints();
    f.setLayout(gridbag);
    f.addNotify();
    c.fill = GridBagConstraints.BOTH;
    c.gridwidth = GridBagConstraints.REMAINDER;
    Canvas canvas1 = new java.awt.Canvas();
    canvas1.setSize(240,180);
    canvas1.setBackground(Color.white);
    gridbag.setConstraints(canvas1, c);
    f.add(canvas1);
    String name = null;
    try {
      name = getIdentity().getName();
    }
    catch (Exception e) {
      name = "unknown";
    }
    Label label1 = new java.awt.Label("Your name: " + name);
    label1.setSize(100,30);
    gridbag.setConstraints(label1, c);
    f.add(label1);
    f.setSize(240,210);
    f.show();
    whiteboard = canvas1;
    whiteboard.addMouseListener(this);
    whiteboard.addMouseMotionListener(this);
    buffer = whiteboard.createImage(f.getSize().width,
                                    f.getSize().height);
  }

  protected void nextLine(String agent, Point pt, Color c) {
    Graphics g = buffer.getGraphics();
    g.setColor(c);
    Point lastPt = (Point)lastPts.get(agent);
    g.drawLine(lastPt.x, lastPt.y, pt.x, pt.y);
    whiteboard.getGraphics().drawImage(buffer, 0, 0, whiteboard);
  }

  public void mousePressed(MouseEvent ev) {
    Point evPt = ev.getPoint();
    try {
      lastPts.put(getIdentity().getName(), evPt);
      CommHelper.addMsg(evPt, "start");
    }
    catch (Exception e) {}
  }

  public void mouseReleased(MouseEvent ev) {
    Point evPt = ev.getPoint();
    try {
      nextLine(getIdentity().getName(), evPt,
               (Color)getIdentity().getProperty("color"));
      lastPts.remove(getIdentity().getName());

      CommHelper.addMsg(evPt, "end");
    }
    catch (Exception e) {}
  }

  public void mouseDragged(MouseEvent ev) {
    Point evPt = ev.getPoint();
    try {
      nextLine(getIdentity().getName(), evPt,
               (Color)getIdentity().getProperty("color"));
      lastPts.put(getIdentity().getName(), evPt);

      CommHelper.addMsg(evPt, "drag");
    }
    catch (Exception e) {
    }
  }

  public void mouseExited(MouseEvent ev) {}
  public void mouseMoved(MouseEvent ev) {}
  public void mouseClicked(MouseEvent ev) {}
  public void mouseEntered(MouseEvent ev) {}

  public boolean notify(String tag, Object data, Identity src)
                throws IOException {

    if (src.getName().compareTo(getIdentity().getName()) == 0) {
      return true;
    }
    Color origColor = null;
    Color agentColor = null;
    Graphics gr = buffer.getGraphics();
    try {
      agentColor = (Color)src.getProperty("color");
      if (agentColor != null) {
        gr.setColor(agentColor);
      }
      else {
        System.out.println("No agent color available.");
      }
    }
    catch (Exception exc) {
      System.out.println("Exception while switching colors.");
      exc.printStackTrace();
    }

    if (tag.compareTo("start") == 0) {
      lastPts.put(src.getName(), data);
    }
    else if (tag.compareTo("drag") == 0) {
      Point lastPt = (Point)lastPts.get(src.getName());
      Point currPt = (Point)data;
      gr.drawLine(lastPt.x, lastPt.y, currPt.x, currPt.y);
      lastPts.put(src.getName(), data);
    }
    else if (tag.compareTo("end") == 0) {
      Point lastPt = (Point)lastPts.get(src.getName());
      Point currPt = (Point)data;
      gr.drawLine(lastPt.x, lastPt.y, currPt.x, currPt.y);
      lastPts.remove(src.getName());
    }

    whiteboard.getGraphics().drawImage(buffer, 0, 0, whiteboard);

    return true;
  }
}</pre>
</blockquote>
</div>

<p>A quick and dirty way to use our message-passing whiteboard in an
applet context is to just create a
<tt class="literal">MsgWhiteboardUser</tt><a name="INDEX-1334"></a> from inside the
<tt class="literal">init()</tt> method of an <tt class="literal">Applet</tt>:
</p>

<blockquote>
<pre class="programlisting">public class WhiteboardApplet extends Applet {
  private MsgWhiteboardUser wbUser;
  public WhiteboardApplet() {}
  public void init() {
    wbUser = new MsgWhiteboardUser("Fred", new Color(255, 0, 0),
                                   "medhost", 5009);
  }
}</pre>
</blockquote>

<p>When the <tt class="literal">MsgWhiteboardUser</tt> initializes itself,
one of the things it does is try to connect to a
<tt class="literal">MessageMediator</tt> at the host and port number
given to the constructor. This will work just fine, assuming that the
applet security policy for your browser allows you to make network
connections to the host on which the mediator is running. Typically a
browser will only allow an applet to open connections to the host it
came from, so you may be forced to have the mediator running on the
same host serving the HTML page with your
applet.
</p>

<p>Since the whiteboard constructs its own top-level
<tt class="literal">Frame</tt> inside the <tt class="literal">buildUI()</tt>
method, using the <tt class="literal">WhiteboardApplet</tt> in a web page
will cause a separate window to pop up on the user's
machine.<a name="INDEX-1335"></a>
It would be nice to have the whiteboard GUI appear embedded in the
web page itself. To do this, we'll need a way to pass the
<tt class="literal">Applet</tt>'s top-level
<tt class="literal">Container</tt> into the constructor for the
<tt class="literal">MsgWhiteboardUser</tt>, so that it adds all of its
user interface elements to the <tt class="literal">Container</tt> instead
of a separate window. We just need to add an additional argument to
the <tt class="literal">MsgWhiteboardUser</tt> constructor:
</p>

<blockquote>
<pre class="programlisting">public MsgWhiteboardUser(String name, Color color,
                         String host, int port, Container c) {
        . . .</pre>
</blockquote>

<p>Then we pass the external <tt class="literal">Container</tt> into the
<tt class="literal">buildUI()</tt><a name="INDEX-1336"></a>
method, which then uses it instead of a new
<tt class="literal">Frame</tt> as the container for all of its AWT
elements:
</p>

<blockquote>
<pre class="programlisting">protected void buildUI(Container cont) {
    if (cont == null)
      cont = new Frame();
    GridBagLayout gridbag = new GridBagLayout();
    GridBagConstraints c = new GridBagConstraints();
    cont.setLayout(gridbag);
    cont.addNotify();
    c.fill = GridBagConstraints.BOTH;
    c.gridwidth = GridBagConstraints.REMAINDER;
    Canvas canvas1 = new java.awt.Canvas();
    canvas1.setSize(240,180);
    canvas1.setBackground(Color.white);
    gridbag.setConstraints(canvas1, c);
    cont.add(canvas1);
    String name = null;
    try {
      name = getIdentity().getName();
    }
    catch (Exception e) {
      name = "unknown";
    }
    Label label1 = new java.awt.Label("Your name: " + name);
    label1.setSize(100,30);
    gridbag.setConstraints(label1, c);
    cont.add(label1);
    cont.setSize(240,210);
    cont.setVisible(true);
    whiteboard = canvas1;
    whiteboard.addMouseListener(this);
    whiteboard.addMouseMotionListener(this);
    buffer = whiteboard.createImage(cont.getSize().width,
                                    cont.getSize().height);
  }</pre>
</blockquote>

<p>Now our whiteboard will appear within the web page itself.</p>

<p>Many of the other examples in the book are even easier to apply in an
applet context. They can be used within an applet you have developed,
assuming that the browsers support the libraries used (e.g., RMI,
CORBA, etc.). Of course, you must take applet security restrictions
into account when you're deciding how to distribute your agents
and how they'll talk to each other. (For example, if you put a
server agent on machine X, will any browser running one of your
client agents allow the agent to connect to the server
machine?<a name="INDEX-1337"></a>
)<a name="INDEX-1338"></a><a name="INDEX-1339"></a><a name="INDEX-1340"></a>
</p>






<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch10_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/ch10_02.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="appa_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/appa_02.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">10.2. A Shared Whiteboard</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">A.2. Class Downloads</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
