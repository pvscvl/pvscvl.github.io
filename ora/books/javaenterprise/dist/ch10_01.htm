<html>
<head>
<title>Building Collaborative Applications (Java Distributed Computing)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css" webstripperlinkwas="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="Jim Farley">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="1-56592-206-9E" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Building Collaborative Applications">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"><img src="gifs/smbanner.gif" webstripperlinkwas="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home"></a>
<map name="banner-map"><map name="banner-map"> <area shape="rect" coords="0,0,466,65" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm" alt="Java Distributed Computing"> <area shape="rect" coords="467,0,514,18" href="jobjects/fsearch.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/jobjects/fsearch.htm" alt="Search this book"> </map>
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch09_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/ch09_03.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm">Java Distributed Computing</a></td><td align="right" valign="top" width="172"><a href="ch10_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/ch10_02.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->

<h1 class="chapter">Chapter 10.  Building Collaborative Applications</h1>
<div class="htmltoc">
<h4 class="tochead">Contents:</h4>
<p>
<a href="ch10_01.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/ch10_01.htm">A Simple Chat System</a>
<br>
<a href="ch10_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/ch10_02.htm">A Shared Whiteboard</a>
<br>
</p>
</div>



<p>In the previous chapter we built up a set of base classes for
building collaborative applications, in both RMI and message-passing
forms. In this chapter, we'll put those classes to work, using
them to build some collaborative applications: a simple chat system
and a shared whiteboard. We'll only be building applications
based on the RMI version of our collaborative framework, but the
mapping to message-passing versions is straightforward.
</p>




<h2 class="sect1">10.1. A Simple Chat System</h2>

<p>
<a name="INDEX-1301"></a><a name="INDEX-1302"></a><a name="INDEX-1303"></a>It's a pretty simple matter to
build a basic chat system on top of our base classes. All we need to
do is write a subclass of our collaborator that acts as a chat
client, receiving messages from remote chat clients and displaying
them in a text window next to their name. We can pull each
client's name from its <tt class="literal">Identity</tt>. <a href="#JDP-CH-10-EX-1">Example 10-1</a> shows an
<tt class="literal">RMIChatClient</tt><a name="INDEX-1304"></a> based on our RMI collaborative
system. The <tt class="literal">RMIChatClient</tt> extends the
<tt class="literal">RMICollaboratorImpl</tt><a name="INDEX-1305"></a> class, and also implements the
<tt class="literal">java.awt.event.ActionListener</tt> interface, so that
it can act as a listener for its own AWT elements. This AWT interface
includes a <tt class="literal">TextArea</tt> for showing the chat
session, a <tt class="literal">TextField</tt> for the user to type in
chat messages, and a <tt class="literal">Button</tt> to submit the
messages to the chat server, which in our case is simply one of our
<tt class="literal">RMIMediatorImpl</tt> objects routing messages to
other <tt class="literal">RMIChatClient</tt>s. The constructor for the
<tt class="literal">RMIChatClient</tt> simply connects to the specified
mediator, then initializes its graphical elements by calling its
<tt class="literal">initGraphics()</tt> method. The
<tt class="literal">initGraphics()</tt> method creates a
<tt class="literal">Frame</tt>, inserts the
<tt class="literal">TextArea</tt>, <tt class="literal">TextField</tt>, and
<tt class="literal">Button</tt> in the correct locations, then registers
itself as an <tt class="literal">ActionListener</tt> for the button. The
<tt class="literal">RMIChatClient</tt>'s
<tt class="literal">actionPerformed()</tt> method, which is called
whenever the "Send" button is pressed, simply gets the
text in the <tt class="literal">TextField</tt> when the button is
pressed, and broadcasts it to all the other chat clients by calling
its <tt class="literal">broadcast()</tt> method with a message tag of
"chat." It then clears the <tt class="literal">TextField</tt>
to let the user type in the next message. The
<tt class="literal">RMIChatClient</tt> also has a
<tt class="literal">notify()</tt> implementation that accepts chat
messages from the mediator, and writes them to the
<tt class="literal">TextArea</tt> along with the name of the sender (from
its <tt class="literal">Identity</tt>). <a href="#JDP-CH-10-FIG-2">Figure 10-1</a>
shows the chat screen that a user would see.
</p>

<a name="JDP-CH-10-FIG-2"></a>
<div class="figure">
<img alt="figure" src="figs/jdc_1001.gif" webstripperlinkwas="figs/jdc_1001.gif"></div>
<h4 class="objtitle">Figure 10-1. A chat client implemented using the RMICollaborator</h4>

<a name="JDP-CH-10-EX-1"></a>
<div class="example">
<h4 class="objtitle">Example 10-1. An RMI-Based Chat Client</h4>
<blockquote>
<pre class="programlisting">package dcj.util.Collaborative;

import java.awt.Frame;
import java.awt.TextArea;
import java.awt.TextField;
import java.awt.Button;
import java.awt.Label;
import java.awt.event.*;
import java.rmi.RemoteException;
import java.util.Properties;
import java.io.IOException;

public class RMIChatClient extends RMICollaboratorImpl
                           implements java.awt.event.ActionListener {
  TextArea chatArea;
  TextField chatInput;

  public RMIChatClient(String name, String host, String mname)
         throws RemoteException {
    super(name);
    Properties p = new Properties();
    p.put("host", host);
    p.put("mediatorName", mname);
    connect(p);
    initGraphics();
  }

  public boolean notify(String tag, String msg, Identity src)
                 throws IOException, RemoteException {
    // Print the message in the chat area.
    chatArea.append("\n" + src.getName() + ": " + msg);
    return true;
  }
  
  protected void initGraphics() throws RemoteException {
    Frame f = new Frame();
    f.setLayout(null);
    f.addNotify();
    f.setSize(f.getInsets().left + 405, f.getInsets().top + 324);
    chatArea = new java.awt.TextArea();
    chatArea.setBounds(f.getInsets().left, f.getInsets().top,405, 300);
    f.add(chatArea);
    chatInput = new java.awt.TextField();
    chatInput.setBounds(f.getInsets().left + 84,
                        f.getInsets().top + 300,264,24);
    f.add(chatInput);
    Button button = new java.awt.Button("Send");
    button.setBounds(f.getInsets().left + 348,
                     f.getInsets().top + 300,60,24);
    f.add(button);
    button.addActionListener(this);
    Label label = new java.awt.Label("Chat here:");
    label.setBounds(f.getInsets().left,f.getInsets().top + 300,84,24);
    label.setAlignment(label.RIGHT);
    f.add(label);
    f.setTitle("RMI Chat Client");
    f.show();
  }

  public void actionPerformed(ActionEvent e) {
    // See if there's something to say...
    String msg = chatInput.getText();
    if (msg.length() &gt; 0) {
      try {
        // Broadcast our message to the rest of the chat clients
        boolean success = broadcast("chat", msg);
        if (success) {
          System.out.println("Sent message OK.");
        }
        else {
          System.out.println("Failed to send message.");
        }
        // Clear the chat input field
        chatInput.setText("");
      }
      catch (Exception exc) {
      }
    }
  }
}</pre>
</blockquote>
</div>

<p>Our <tt class="literal">RMIChatClient</tt>'s
<tt class="literal">notify()</tt> method doesn't include any
synchronized code blocks. Since each chat client connects to a single
mediator, and since the mediator synchronizes all of its
message-routing functions at any given time, there's only one
thread that could be making remote calls to the chat client's
<tt class="literal">notify()</tt> method.<tt class="literal"></tt><a name="INDEX-1306"></a>
</p>

<p>This chat system was simple to implement because many of the really
hard issues with collaborative systems are not a problem here. The
data passed between the agents is small and simple ( just text
strings), so communication performance shouldn't be a problem.
Every message is broadcast to every other chat client, so flexible
communications aren't an issue either. And while there is a
kind of shared "state" between the chatting agents (the
list of chat messages that each displays), it isn't a problem
keeping this shared state consistent. Each chat client sends its chat
messages using the <tt class="literal">broadcast()</tt> method, but
doesn't display the message locally until it's received
back from the chat mediator. This way all messages displayed in each
client's chat window are synchronized, because they all pass
through the mediator and are sent in the same order to each chat
client.<a name="INDEX-1307"></a><a name="INDEX-1308"></a><a name="INDEX-1309"></a>
</p>






<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch09_03.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/ch09_03.htm"><img src="../gifs/txtpreva.gif" webstripperlinkwas="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"><img src="../gifs/txthome.gif" webstripperlinkwas="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch10_02.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/ch10_02.htm"><img src="../gifs/txtnexta.gif" webstripperlinkwas="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">9.3. A Basic Collaborative Infrastructure</td><td align="center" valign="top" width="171"><a href="index/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index/index.htm"><img src="../gifs/index.gif" webstripperlinkwas="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">10.2. A Shared Whiteboard</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" webstripperlinkwas="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <map name="library-map"> <area shape="rect" coords="-8,-5,72,97" href="../index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/index.htm"> <area shape="rect" coords="75,2,150,109" href="../jenut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jenut/index.htm"> <area shape="rect" coords="154,0,225,99" href="../jnut/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jnut/index.htm"> <area shape="rect" coords="228,3,298,112" href="../jfc/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/jfc/index.htm"> <area shape="rect" coords="306,1,373,124" href="../ebeans/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/ebeans/index.htm"> <area shape="rect" coords="380,2,446,115" href="../servlet/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/servlet/index.htm"> <area shape="rect" coords="452,1,524,101" href="../security/index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/security/index.htm"> <area shape="rect" coords="528,2,610,102" href="index.htm" webstripperlinkwas="http://ext.rlab.cs.nyu.edu/~jsr/oreilly/dist/index.htm"> </map>
</map>

<!-- END OF BODY -->

</body>
</html>
