<HTML
><HEAD
>
<TITLE>The Perl Language (Perl in a Nutshell)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl in a Nutshell"><META
NAME="DC.creator"
CONTENT="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:29:57Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-286-7"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="part02.htm"
TITLE="II. Language Basics"><LINK
REL="prev"
HREF="ch03_05.htm"
TITLE="3.5 Threads"><LINK
REL="next"
HREF="ch04_02.htm"
TITLE="4.2 Data Types and Variables"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl in a Nutshell"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,71"
HREF="index.htm"
ALT="Perl in a Nutshell"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch03_05.htm"
TITLE="3.5 Threads"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.5 Threads"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
>Chapter 4</FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch04_02.htm"
TITLE="4.2 Data Types and Variables"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 4.2 Data Types and Variables"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="CHAPTER"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="PNUT-CH-4"
>4. The Perl Language</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="SECT1"
HREF="#PNUT-CH-4-SECT-1"
TITLE="4.1 Program Structure"
>Program Structure</A
><BR><A
CLASS="SECT1"
HREF="ch04_02.htm"
TITLE="4.2 Data Types and Variables"
>Data Types and Variables</A
><BR><A
CLASS="SECT1"
HREF="ch04_03.htm"
TITLE="4.3 Statements"
>Statements</A
><BR><A
CLASS="SECT1"
HREF="ch04_04.htm"
TITLE="4.4 Special Variables"
>Special Variables</A
><BR><A
CLASS="SECT1"
HREF="ch04_05.htm"
TITLE="4.5 Operators"
>Operators</A
><BR><A
CLASS="SECT1"
HREF="ch04_06.htm"
TITLE="4.6 Regular Expressions"
>Regular Expressions</A
><BR><A
CLASS="SECT1"
HREF="ch04_07.htm"
TITLE="4.7 Subroutines"
>Subroutines</A
><BR><A
CLASS="SECT1"
HREF="ch04_08.htm"
TITLE="4.8 References and Complex Data Structures"
>References and Complex Data Structures</A
><BR><A
CLASS="SECT1"
HREF="ch04_09.htm"
TITLE="4.9 Filehandles"
>Filehandles</A
><BR><A
CLASS="SECT1"
HREF="ch04_10.htm"
TITLE="4.10 Formats"
>Formats</A
><BR><A
CLASS="SECT1"
HREF="ch04_11.htm"
TITLE="4.11 Pod"
>Pod</A
></P
><P
></P
></DIV
><P
CLASS="para"
>This chapter is a quick and merciless guide to the 
Perl language itself.  
If you're trying to learn Perl from
scratch, and you'd prefer to be taught rather than to have things 
thrown at you, then you might be better off with 
<A
CLASS="citetitle"
HREF="../../../../../../../www.oreilly.com/catalog/lperl2/"
TITLE="Learning Perl"
><CITE
CLASS="citetitle"
>Learning Perl</CITE
></A
>
by Randal Schwartz and Tom Christiansen, or <A
CLASS="citetitle"
HREF="../../../../../../../www.oreilly.com/catalog/lperlwin/"
TITLE="Learning Perl
on Win32 Systems"
><CITE
CLASS="citetitle"
>Learning Perl
on Win32 Systems</CITE
></A
> by Randal Schwartz, Erik Olson, and Tom Christiansen.
However, if you already know some other programming languages
and just want to hear the particulars of Perl, this chapter 
is for you.  Sit tight, and forgive us for being terse: we have 
a lot of ground to cover.</P
><P
CLASS="para"
>If you want a more complete discussion of the Perl language
and its idiosyncrasies (and we mean <EM
CLASS="emphasis"
>complete</EM
>), see 
<A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> by Larry
Wall, Tom Christiansen, and Randal Schwartz.</P
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="PNUT-CH-4-SECT-1"
>4.1 Program Structure</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-2457"
></A
><A
CLASS="indexterm"
NAME="AUTOID-2459"
></A
>Perl is a particularly forgiving language, as far as program
layout goes.  There are no rules about indentation, newlines, 
etc.  Most lines end with semicolons, but not everything has to.
Most things don't have to be declared, except for a couple
of things that do.  Here are the bare essentials:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Whitespace</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-2467"
></A
>Whitespace is required only between items that would otherwise be confused
as a single term. All types of whitespace&nbsp;- spaces, tabs, newlines, etc.&nbsp;- are
equivalent in this context. A comment counts as whitespace. Different types
of whitespace are distinguishable within quoted strings, formats, and
certain line-oriented forms of quoting. For example, in a quoted string,
a newline, a space, and a tab are interpreted as unique characters.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Semicolons</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-2475"
></A
><A
CLASS="indexterm"
NAME="AUTOID-2478"
></A
>Every simple statement must end with a semicolon. Compound statements
contain brace-delimited blocks of other statements and do not require
terminating semicolons after the ending brace. A final simple statement
in a block also does not require a semicolon.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Declarations</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-2486"
></A
>Only subroutines and report formats need to be explicitly declared. 
All other user-created
objects are automatically created with a null or 0 value unless they are
defined by some explicit operation such as assignment.
The <EM
CLASS="emphasis"
>-w</EM
> command-line switch will warn
you about using undefined values.</P
><P
CLASS="para"
>You may force yourself to declare your variables
by including the <CODE
CLASS="literal"
>use strict</CODE
> pragma in your programs (see
<A
CLASS="xref"
HREF="ch08_01.htm"
TITLE="Standard Modules"
>Chapter 8, <CITE
CLASS="chapter"
>Standard Modules</CITE
></A
>, for more information on pragmas and <CODE
CLASS="literal"
>strict</CODE
>
in particular). This
makes it an error to not explicitly declare your variables. </P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Comments and documentation</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-2498"
></A
><A
CLASS="indexterm"
NAME="AUTOID-2500"
></A
><A
CLASS="indexterm"
NAME="AUTOID-2503"
></A
>Comments within a program are indicated by a pound sign (<CODE
CLASS="literal"
>#</CODE
>). Everything
following a pound sign to the end of the line is interpreted as a comment.</P
><P
CLASS="para"
>Lines starting with <CODE
CLASS="literal"
>=</CODE
> are interpreted as the start<A
CLASS="indexterm"
NAME="AUTOID-2509"
></A
><A
CLASS="indexterm"
NAME="AUTOID-2513"
></A
><A
CLASS="indexterm"
NAME="AUTOID-2516"
></A
><A
CLASS="indexterm"
NAME="AUTOID-2519"
></A
><A
CLASS="indexterm"
NAME="AUTOID-2522"
></A
>
of a section of embedded documentation (pod), and all
subsequent lines until the next <CODE
CLASS="literal"
>=cut</CODE
> are ignored by the
compiler.  See <A
CLASS="xref"
HREF="ch04_11.htm"
TITLE="Pod"
>Section 4.11, "Pod</A
>&quot; later in this 
chapter for more information on pod format.</P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch03_05.htm"
TITLE="3.5 Threads"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.5 Threads"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl in a Nutshell"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl in a Nutshell"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch04_02.htm"
TITLE="4.2 Data Types and Variables"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 4.2 Data Types and Variables"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.5 Threads</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>4.2 Data Types and Variables</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<p><!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
