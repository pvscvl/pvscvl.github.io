<HTML
><HEAD
>
<TITLE>11.4 Running CGI Scripts with mod_perl (Perl in a Nutshell)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl in a Nutshell"><META
NAME="DC.creator"
CONTENT="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:56:04Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-286-7"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch11_01.htm"
TITLE="11. Web Server Programming with mod_perl"><LINK
REL="prev"
HREF="ch11_03.htm"
TITLE="11.3 mod_perl Handlers"><LINK
REL="next"
HREF="ch11_05.htm"
TITLE="11.5 Server-Side Includes with mod_perl"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl in a Nutshell"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,71"
HREF="index.htm"
ALT="Perl in a Nutshell"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch11_03.htm"
TITLE="11.3 mod_perl Handlers"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 11.3 mod_perl Handlers"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch11_01.htm"
TITLE="11. Web Server Programming with mod_perl"
>Chapter 11<BR>Web Server Programming with mod_perl</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch11_05.htm"
TITLE="11.5 Server-Side Includes with mod_perl"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 11.5 Server-Side Includes with mod_perl"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="PNUT-CH-11-SECT-4"
>11.4 Running CGI Scripts with mod_perl</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="PNUT-CH-11-IX-CGI-PROGRAMS-RUNNING-WITH-MOD-PERL"
></A
><A
CLASS="indexterm"
NAME="PNUT-CH-11-IX-MOD-PERL-MODULE-RUNNING-CGI-SCRIPTS-WITH"
></A
><A
CLASS="indexterm"
NAME="PNUT-CH-11-IX-PERFORMANCE-CGI-SCRIPTS-WITH-MOD-PERL"
></A
>What most people want to do with <EM
CLASS="emphasis"
>mod_perl</EM
> is improve
CGI performance.<A
CLASS="indexterm"
NAME="AUTOID-26668"
></A
><A
CLASS="indexterm"
NAME="AUTOID-26670"
></A
>
The <EM
CLASS="emphasis"
>mod_perl</EM
> installation assumes this request by enabling the <CODE
CLASS="literal"
>PerlHandler</CODE
>
callback hook by default, and by installing the Apache::Registry module.
<CODE
CLASS="literal"
>PerlHandler</CODE
> is the handler used for the content retrieval stage of the
server transaction.
Apache::Registry is the
Perl module that emulates the CGI environment so you can use
&quot;standard&quot; Perl CGI scripts with <EM
CLASS="emphasis"
>mod_perl</EM
> without
having to rewrite them (much).  This is by far the cheapest way to get
improved CGI performance.</P
><P
CLASS="para"
>With Apache::Registry, 
each individual CGI program is compiled and 
cached the first time it is called (or whenever it 
is changed), and then remains available
for all subsequent instances of that CGI script.  
This process avoids the costs of startup time.  </P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-26679"
></A
>Whereas most CGI scripts are kept in <EM
CLASS="emphasis"
>/cgi-bin/</EM
>,
scripts that use Apache::Registry are placed in a
separate directory, e.g., <EM
CLASS="emphasis"
>/perl-bin/</EM
>.<A
CLASS="indexterm"
NAME="AUTOID-26683"
></A
>
The <EM
CLASS="emphasis"
>access.conf</EM
> Apache configuration file needs to point
to this directory by setting an alias and defining
a handler for this new location.


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>Alias /perl-bin/ /usr/local/apache/perl-bin/

&lt;Location /perl-bin&gt;
SetHandler perl-script
PerlHandler Apache::Registry
PerlSendHeader On
Options ExecCGI
&lt;/Location&gt;</PRE
></BLOCKQUOTE
>

<A
CLASS="indexterm"
NAME="AUTOID-26687"
></A
>
Instead of using the <CODE
CLASS="literal"
>cgi-script</CODE
> handler, we use
the <CODE
CLASS="literal"
>perl-script</CODE
> handler to give control to <EM
CLASS="emphasis"
>mod_perl</EM
>.
Next, the <CODE
CLASS="literal"
>PerlHandler</CODE
>
directive tells <EM
CLASS="emphasis"
>mod_perl</EM
> that the Apache::Registry module should
be used for serving all files in that directory.<A
CLASS="indexterm"
NAME="AUTOID-26694"
></A
>
<CODE
CLASS="literal"
>PerlSendHeader</CODE
> is another <EM
CLASS="emphasis"
>mod_perl</EM
>-specific 
directive; in this case, it tells <EM
CLASS="emphasis"
>mod_perl</EM
> to send response
lines and common headers&nbsp;- by default, none are sent.  (For NPH scripts,
you'll want to turn this feature off again.)
<CODE
CLASS="literal"
>Options ExecCGI</CODE
> is a standard Apache header 
needed to tell Apache to treat the script as a CGI script.</P
><P
CLASS="para"
>If you want to load Perl modules in addition to Apache::Registry,
you can use the PerlModule directive:<A
CLASS="indexterm"
NAME="AUTOID-26701"
></A
>


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>PerlModule CGI</PRE
></BLOCKQUOTE
>


If you include this line, you shouldn't need to explicitly
<CODE
CLASS="literal"
>use CGI</CODE
> in each Perl CGI script anymore, as CGI.pm
will be loaded directly from the Apache server.  Up to ten
modules can be listed with the <CODE
CLASS="literal"
>PerlModule</CODE
> directive.</P
><P
CLASS="para"
>CGI scripts in the new directory should work now.  However,
if you have problems, the <EM
CLASS="emphasis"
>mod_perl</EM
> manpage offers some 
words of wisdom:</P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
>Always <CODE
CLASS="literal"
>use strict</CODE
>.  </P
><P
CLASS="para"
>&quot;Standard&quot; CGI scripts start with a clean slate every time.
When switching to <EM
CLASS="emphasis"
>mod_perl</EM
>, CGI programmers are often 
surprised to learn how often
they take advantage of this fact.  <CODE
CLASS="literal"
>use strict</CODE
> 
tells you when your variables haven't been properly declared
and might inherit values from previous invocations of the script.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
>Don't call <CODE
CLASS="literal"
>exit()</CODE
>.  <A
CLASS="indexterm"
NAME="AUTOID-26718"
></A
></P
><P
CLASS="para"
>Calling <CODE
CLASS="literal"
>exit()</CODE
> at the end of every program is a habit
of many programmers.  While often totally unnecessary, it 
usually doesn't hurt...except with <EM
CLASS="emphasis"
>mod_perl</EM
>.
If you're using <EM
CLASS="emphasis"
>mod_perl</EM
> without Apache::Registry, 
<CODE
CLASS="literal"
>exit()</CODE
> kills the server 
process.  If <CODE
CLASS="literal"
>exit()</CODE
> is the
last function call, you can just remove it.  
If the structure of your program is such that it is called
from the middle of the script, you can just put a label 
at the end of the script and use <CODE
CLASS="literal"
>goto()</CODE
>.  There's
also an <CODE
CLASS="literal"
>Apache-&gt;exit()</CODE
> call you can use if you're
really attached to <CODE
CLASS="literal"
>exit()</CODE
>s.  </P
><P
CLASS="para"
>If you're using Apache::Registry, you don't
have to worry about this problem.  Apache::Registry is
smart enough to override all <CODE
CLASS="literal"
>exit()</CODE
> calls with
<CODE
CLASS="literal"
>Apache-&gt;exit()</CODE
>.</P
></LI
></UL
><P
CLASS="para"
>In addition, it is recommended that you should use a recent
version of Perl and of CGI.pm.  You should scan the <EM
CLASS="emphasis"
>mod_perl</EM
>
documentation for the very latest compatibility news.</P
><A
CLASS="indexterm"
NAME="AUTOID-26734"
></A
><A
CLASS="indexterm"
NAME="AUTOID-26735"
></A
><A
CLASS="indexterm"
NAME="AUTOID-26736"
></A
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch11_03.htm"
TITLE="11.3 mod_perl Handlers"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 11.3 mod_perl Handlers"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl in a Nutshell"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl in a Nutshell"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch11_05.htm"
TITLE="11.5 Server-Side Includes with mod_perl"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 11.5 Server-Side Includes with mod_perl"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>11.3 mod_perl Handlers</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>11.5 Server-Side Includes with mod_perl</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<p><!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
