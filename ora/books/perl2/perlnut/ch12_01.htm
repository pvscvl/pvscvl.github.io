<HTML
><HEAD
>
<TITLE>Databases and Perl (Perl in a Nutshell)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl in a Nutshell"><META
NAME="DC.creator"
CONTENT="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:56:07Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-286-7"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="part05.htm"
TITLE="V. Databases"><LINK
REL="prev"
HREF="part05.htm"
TITLE="V. Databases"><LINK
REL="next"
HREF="ch12_02.htm"
TITLE="12.2 Design of DBI"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl in a Nutshell"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,71"
HREF="index.htm"
ALT="Perl in a Nutshell"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="PART"
HREF="part05.htm"
TITLE="V. Databases"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: V. Databases"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
>Chapter 12</FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch12_02.htm"
TITLE="12.2 Design of DBI"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 12.2 Design of DBI"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="CHAPTER"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="PNUT-CH-12"
>12. Databases and Perl</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="SECT1"
HREF="#PNUT-CH-12-SECT-1"
TITLE="12.1 DBM Databases and DBM Hashes"
>DBM Databases and DBM Hashes</A
><BR><A
CLASS="SECT1"
HREF="ch12_02.htm"
TITLE="12.2 Design of DBI"
>Design of DBI</A
><BR><A
CLASS="SECT1"
HREF="ch12_03.htm"
TITLE="12.3 DBI Methods"
>DBI Methods</A
><BR><A
CLASS="SECT1"
HREF="ch12_04.htm"
TITLE="12.4 DBI Environment Variables"
>DBI Environment Variables</A
></P
><P
></P
></DIV
><P
CLASS="para"
>Since one of Perl's greatest strengths is working with text, 
a genuine concern is how to store data.
Flat files are one possibility, but don't scale very well, to
say the least.  Instead, you'll need to use a database.  </P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="PNUT-CH-12-IX-DATABASES"
></A
>There are two general solutions to using databases with Perl.
For simple database purposes, DBM (Database Management)
will serve your needs.  DBM 
is a library supported by many (if not all) Unix systems
and many non-Unix systems as well.  If you use DBM with Perl,
you can manipulate databases just like any hash.  </P
><P
CLASS="para"
>For more elaborate databases with SQL interfaces, you can
get a complete database product or shareware equivalent
(depending on your needs) and <A
CLASS="indexterm"
NAME="AUTOID-27169"
></A
><A
CLASS="indexterm"
NAME="AUTOID-27171"
></A
>
use DBI and DBD.  DBI is a module
that provides a consistent interface for database solutions.
A DBD is a database-specific driver that translates DBI 
calls as needed for that database.  </P
><P
CLASS="para"
>In this chapter, we'll quickly cover DBM and then talk more
at length about DBI/DBD.</P
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="PNUT-CH-12-SECT-1"
>12.1 DBM Databases and DBM Hashes</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="PNUT-CH-12-IX-DBM-DATABASE-MANAGEMENT-FACILITY"
></A
><A
CLASS="indexterm"
NAME="PNUT-CH-12-IX-DATABASES-DBM-DATABASE-MANAGEMENT-FACILITY"
></A
>DBM is a 
simple database management facility for Unix systems.
It allows programs to store a collection of 
key-value pairs in binary form, thus providing
rudimentary database support for Perl.  Practically
all Unix systems support DBM, and for those that don't,
you can get Berkeley DB from <A
CLASS="systemitem.sitename"
HREF="../../../../../../../www.sleepycat.com/db"
>http://www.sleepycat.com/db</A
>.</P
><P
CLASS="para"
>To use DBM databases in Perl, you can associate
a hash with a DBM database through a process similar to 
opening a file. This hash (called a DBM array) is 
then used to access and modify 
the DBM database. <A
CLASS="indexterm"
NAME="AUTOID-27184"
></A
>
To associate a DBM database with a DBM array, you can use either the
<CODE
CLASS="literal"
>dbmopen</CODE
> function or the 
<CODE
CLASS="literal"
>tie</CODE
> function with a DBM-style
module. (<CODE
CLASS="literal"
>dbmopen</CODE
> is actually just a front-end to <CODE
CLASS="literal"
>tie</CODE
>.)
For example, with <CODE
CLASS="literal"
>dbmopen</CODE
>:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>dbmopen(%ARRAYNAME, &quot;dbmfilename&quot;, $mode);</PRE
></BLOCKQUOTE
>


or (using <CODE
CLASS="literal"
>tie</CODE
> with the DB_File module):


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>use DB_File;
tie(%ARRAYNAME, &quot;DB_File&quot;, &quot;dbmfilename&quot;);</PRE
></BLOCKQUOTE
>


The <CODE
CLASS="literal"
>%ARRAYNAME</CODE
> parameter is a Perl hash. (If it already has values, the 
values are discarded.) This hash becomes connected to the DBM database called 
<CODE
CLASS="literal"
>dbmfilename</CODE
>. This database
may be stored on 
disk as a single file, or as two files called <EM
CLASS="emphasis"
>dbmfilename.dir</EM
> and 
<EM
CLASS="emphasis"
>dbmfilename.pag</EM
>, depending on the DBM implementation.</P
><P
CLASS="para"
>The <CODE
CLASS="literal"
>$mode</CODE
> parameter is a number that controls the permissions of 
the pair of files if the files need to be created. The number is 
typically specified in octal.
If the files already exist, this parameter 
has no effect. For example:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>dbmopen(%BOOKS, &quot;bookdb&quot;, 0666); # open %BOOKS onto bookdb</PRE
></BLOCKQUOTE
>

<A
CLASS="indexterm"
NAME="AUTOID-27201"
></A
>
This invocation associates the hash <CODE
CLASS="literal"
>%BOOKS</CODE
> with the disk files <EM
CLASS="emphasis"
>bookdb.dir</EM
> and 
<EM
CLASS="emphasis"
>bookdb.pag</EM
> in the current directory. If the files don't already exist, they are 
created with a mode of 0666, modified by the current <EM
CLASS="emphasis"
>umask</EM
>.</P
><P
CLASS="para"
>The return value from <CODE
CLASS="literal"
>dbmopen</CODE
> is true if the database could be opened or 
created, and false otherwise, just like the <CODE
CLASS="literal"
>open</CODE
> function. If you don't want the 
files created, use a <CODE
CLASS="literal"
>$mode</CODE
> value of <CODE
CLASS="literal"
>undef</CODE
>. </P
><P
CLASS="para"
>Once the database is opened, anything you do to the DBM hash is
immediately written to the database.  See <A
CLASS="xref"
HREF="ch04_01.htm"
TITLE="The Perl Language"
>Chapter 4, <CITE
CLASS="chapter"
>The Perl Language</CITE
></A
>, for more
information on hashes.


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>dbmopen(%BOOKS, &quot;bookdb&quot;, 0666) || die &quot;Can't open database bookdb!&quot;;
$BOOKS{&quot;1-56592-286-7&quot;} = &quot;Perl in a Nutshell&quot;;</PRE
></BLOCKQUOTE
>


The DBM array stays open throughout the program. When the program termi-
nates, the association is terminated. You can also break the association in a 
manner similar to closing a filehandle, by using the <CODE
CLASS="literal"
>dbmclose</CODE
>
function (or <CODE
CLASS="literal"
>untie</CODE
> if you used
<CODE
CLASS="literal"
>tie</CODE
>). See <A
CLASS="xref"
HREF="ch05_01.htm"
TITLE="Function Reference"
>Chapter 5, <CITE
CLASS="chapter"
>Function Reference</CITE
></A
>, for more information on <CODE
CLASS="literal"
>dbmclose</CODE
>,
<CODE
CLASS="literal"
>dbmopen</CODE
>, and <CODE
CLASS="literal"
>tie</CODE
>.  <A
CLASS="indexterm"
NAME="AUTOID-27222"
></A
><A
CLASS="indexterm"
NAME="AUTOID-27223"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="PART"
HREF="part05.htm"
TITLE="V. Databases"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: V. Databases"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl in a Nutshell"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl in a Nutshell"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch12_02.htm"
TITLE="12.2 Design of DBI"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 12.2 Design of DBI"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>V. Databases</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>12.2 Design of DBI</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<p><!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
