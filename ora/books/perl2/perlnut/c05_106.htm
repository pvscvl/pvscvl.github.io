<HTML
><HEAD
>
<TITLE>Reference: pack (Perl in a Nutshell)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl in a Nutshell"><META
NAME="DC.creator"
CONTENT="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:36:41Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-286-7"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch05_02.htm"
TITLE="5.2 Perl Functions in Alphabetical Order"><LINK
REL="prev"
HREF="c05_105.htm#"
TITLE="Reference: ord"><LINK
REL="next"
HREF="c05_107.htm#"
TITLE="Reference: package"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl in a Nutshell"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,71"
HREF="index.htm"
ALT="Perl in a Nutshell"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="NUTENTRY"
HREF="c05_105.htm#"
TITLE="Reference: ord"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: Reference: ord"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch05_01.htm"
TITLE="5. Function Reference"
>Chapter 5<BR>Function Reference</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="NUTENTRY"
HREF="c05_107.htm#"
TITLE="Reference: package"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: Reference: package"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="NUTENTRY"
><H2
CLASS="nutentry"
><A
CLASS="term"
NAME="AUTOID-9098"
>pack</A
></H2
><PRE
CLASS="nutsynopsis"
>pack <EM
CLASS="emphasis"
>template</EM
>, <EM
CLASS="emphasis"
>list</EM
></PRE
><DL
CLASS="nutentrybody"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-9105"
></A
>Takes a list of values and packs it into a
binary structure, returning the string containing the structure.
The <EM
CLASS="emphasis"
>template</EM
> is a sequence of characters that give the order and type
of values, as follows:
</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Character</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Meaning</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>a</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>An ASCII string, will be null padded</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>A</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>An ASCII string, will be space padded</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>b</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A bit string, low-to-high order (like <CODE
CLASS="literal"
>vec()</CODE
>)</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>B</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A bit string, high-to-low order</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>c</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A signed char value</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>C</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>An unsigned char value</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>d</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A double-precision float in the native format</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>f</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A single-precision float in the native format</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>h</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A hexadecimal string, low nybble first</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>H</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A hexadecimal string, high nybble first</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>i</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A signed integer value</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>I</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>An unsigned integer value</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>l</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A signed long value</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>L</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>An unsigned long value</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>n</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A short in &quot;network&quot; (big-endian) order</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>N</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A long in &quot;network&quot; (big-endian) order</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>p</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A pointer to a string</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>P</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A pointer to a structure (fixed-length string)</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>s</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A signed short value</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>S</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>An unsigned short value</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>v</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A short in &quot;VAX&quot; (little-endian) order</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>V</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A long in &quot;VAX&quot; (little-endian) order</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>u</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A uuencoded string</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>w</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A BER compressed integer</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>x</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>A null byte</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>X</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Back up a byte</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>@</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Null-fill to absolute position</TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>
Each character may optionally be followed by a number that gives a repeat
count. Together the character and the repeat count make a field specifier.
Field specifiers may be separated by whitespace, which will be ignored. With
all types except <CODE
CLASS="literal"
>a</CODE
> and <CODE
CLASS="literal"
>A</CODE
>, the <CODE
CLASS="literal"
>pack</CODE
> function will gobble up that many values from
the <EM
CLASS="emphasis"
>list</EM
>. Saying <CODE
CLASS="literal"
>*</CODE
> for the
repeat count means to use however many items are left. The
<CODE
CLASS="literal"
>a</CODE
> and <CODE
CLASS="literal"
>A</CODE
> types gobble just one value,
but pack it as a string of length <EM
CLASS="emphasis"
>count</EM
>, padding with nulls
or spaces as necessary. (When unpacking, <CODE
CLASS="literal"
>A</CODE
> strips trailing
spaces and nulls, but <CODE
CLASS="literal"
>a</CODE
> does not.)  Real numbers (floats
and doubles) are in the native machine format only; due to the multiplicity of
floating formats around, and the lack of a standard network representation, no
facility for interchange has been made.</P
><P
CLASS="para"
>The same template may generally also be used in the <CODE
CLASS="literal"
>unpack</CODE
> function. 
If you want to join variable length
fields with a delimiter, use the <CODE
CLASS="literal"
>join</CODE
>
function.</P
></DL
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="NUTENTRY"
HREF="c05_105.htm#"
TITLE="Reference: ord"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: Reference: ord"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl in a Nutshell"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl in a Nutshell"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="NUTENTRY"
HREF="c05_107.htm#"
TITLE="Reference: package"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: Reference: package"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>Reference: ord</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>Reference: package</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<p><!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
