<HTML
><HEAD
>
<TITLE>19.17 Win32 Extensions (Perl in a Nutshell)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl in a Nutshell"><META
NAME="DC.creator"
CONTENT="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T02:00:21Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-286-7"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch19_01.htm"
TITLE="19. Win32 Modules and Extensions"><LINK
REL="prev"
HREF="ch19_16.htm"
TITLE="19.16 Win32::Shortcut"><LINK
REL="next"
HREF="ch19_18.htm"
TITLE="19.18 OLE Automation"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl in a Nutshell"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,71"
HREF="index.htm"
ALT="Perl in a Nutshell"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch19_16.htm"
TITLE="19.16 Win32::Shortcut"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.16 Win32::Shortcut"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch19_01.htm"
TITLE="19. Win32 Modules and Extensions"
>Chapter 19<BR>Win32 Modules and Extensions</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch19_18.htm"
TITLE="19.18 OLE Automation"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 19.18 OLE Automation"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="PNUT-CH-19-SECT-17"
>19.17 Win32 Extensions</A
></H2
><P
CLASS="para"
>In addition to the modules listed above, Perl for Win32 can use an additional
set of functions from the Win32 extension. These functions provide useful
tools for some Windows-specific tasks that don't require their own modules.
They are exported from the Win32 package with:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>use Win32;</PRE
></BLOCKQUOTE
>


Many of these functions do not take arguments, and they return the value (or values)
of the requested information, unless otherwise noted.</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::GetLastError()</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44350"
></A
>Returns the last error value generated by a call to a Win32 API function.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::OLELastError()</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44358"
></A
>Returns the last error value generated by a call to a Win32 OLE API function.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::BuildNumber()</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44366"
></A
>Returns the build number of Perl for Win32.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::LoginName()</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44374"
></A
>Returns the username of the owner of the current Perl process. </P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::NodeName()</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44382"
></A
>Returns the Microsoft network node-name of the current machine. </P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::DomainName()</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44390"
></A
>Returns the name of the Microsoft network domain that the owner of the current 
Perl process is logged into.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::FsType()</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44398"
></A
>Returns a string naming the filesystem type of the currently active drive.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::GetCwd()</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44406"
></A
>Returns the current active drive and directory. This function does not return 
a UNC path, since the functionality required for such a feature 
is not available under Windows 95.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::SetCwd(<CODE
CLASS="replaceable"
><I
>newdir</I
></CODE
>)</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44415"
></A
>Sets the current active drive and directory to <CODE
CLASS="replaceable"
><I
>newdir</I
></CODE
>. This function does not work with 
UNC paths, since the functionality required for such a feature is 
not available under Windows 95.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::GetOSVersion()</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44424"
></A
>Returns a list of elements describing the version of the operating system.
The elements of the list are: an arbitrary descriptive string, the major version number of the 
operating system, the minor version number, the build number, and a digit indicating 
the actual operating system, which will be <CODE
CLASS="literal"
>0</CODE
> for Win32s, <CODE
CLASS="literal"
>1</CODE
> for Windows 95,
and <CODE
CLASS="literal"
>2</CODE
> for Windows NT. For example:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>use Win32;
($string, $major, $minor, $build, $id) = Win32::GetOSVersion();</PRE
></BLOCKQUOTE
>
&#13;</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::FormatMessage(<CODE
CLASS="replaceable"
><I
>error</I
></CODE
>)</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44437"
></A
>Converts the Win32 error number supplied by <CODE
CLASS="replaceable"
><I
>error</I
></CODE
>
into a descriptive string. The error number can be retrieved using
<CODE
CLASS="literal"
>Win32::GetLastError</CODE
> or <CODE
CLASS="literal"
>Win32::OLELastError</CODE
>.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::Spawn(<CODE
CLASS="replaceable"
><I
>command</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>args</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>$pid</I
></CODE
>)</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44451"
></A
>Spawns a new process for the given <CODE
CLASS="replaceable"
><I
>command</I
></CODE
>, passing the arguments in <CODE
CLASS="replaceable"
><I
>args</I
></CODE
>.
The ID of the new process in saved in the variable named by <CODE
CLASS="replaceable"
><I
>pid</I
></CODE
>.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::LookupAccountName(<CODE
CLASS="replaceable"
><I
>sys</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>acct</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>$domain</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>$sid</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>$type</I
></CODE
>)</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44467"
></A
>Returns the domain name, SID, and SID type to the specified variables for the account
<CODE
CLASS="replaceable"
><I
>acct</I
></CODE
> on system <CODE
CLASS="replaceable"
><I
>sys</I
></CODE
>.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::LookupAccountSID(<CODE
CLASS="replaceable"
><I
>sys</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>sid</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>$acct</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>$domain</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>$type</I
></CODE
>)</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44482"
></A
>Returns the account name, domain name, and SID type to the specified variables for
the SID <CODE
CLASS="replaceable"
><I
>sid</I
></CODE
> on system <CODE
CLASS="replaceable"
><I
>sys</I
></CODE
>.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::InitiateSystemShutdown(<CODE
CLASS="replaceable"
><I
>machine</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>message</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>timeout</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>forceclose</I
></CODE
>, <CODE
CLASS="replaceable"
><I
>reboot</I
></CODE
>)</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44497"
></A
>Shuts down the specified <CODE
CLASS="replaceable"
><I
>machine</I
></CODE
> in the specified <CODE
CLASS="replaceable"
><I
>timeout</I
></CODE
> interval. <CODE
CLASS="replaceable"
><I
>message</I
></CODE
>
is broadcast to all users.
If <CODE
CLASS="replaceable"
><I
>forceclose</I
></CODE
> is true, all documents are closed (forcefully) without prompting the user.
If <CODE
CLASS="replaceable"
><I
>reboot</I
></CODE
> is true, the machine is rebooted.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::AbortSystemShutdown(<CODE
CLASS="replaceable"
><I
>machine</I
></CODE
>)</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44511"
></A
>Aborts a shutdown on the specified <CODE
CLASS="replaceable"
><I
>machine</I
></CODE
>.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::GetTickCount()</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44520"
></A
>Returns the Win32 tick count.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::IsWinNT()</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44528"
></A
>Returns true (non-zero) if the Win32 subsystem is Windows NT.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::IsWin95()</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44536"
></A
>Returns true (non-zero) if the Win32 subsystem is Windows 95.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::ExpandEnvironmentStrings(<CODE
CLASS="replaceable"
><I
>envstring</I
></CODE
>)</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44545"
></A
>Returns a string in which any environment variables in the given <CODE
CLASS="replaceable"
><I
>envstring</I
></CODE
>
are replaced with their values.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::GetShortPathName(<CODE
CLASS="replaceable"
><I
>longpathname</I
></CODE
>)</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44555"
></A
>Returns the short (8.3) path name of <CODE
CLASS="replaceable"
><I
>longpathname</I
></CODE
>.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::GetNextAvailDrive()</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44564"
></A
>Returns a string in the form of <CODE
CLASS="literal"
>&quot;<CODE
CLASS="replaceable"
><I
>d</I
></CODE
>:\&quot;</CODE
>, where <CODE
CLASS="replaceable"
><I
>d</I
></CODE
> is the first available drive letter.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::RegisterServer(<CODE
CLASS="replaceable"
><I
>libraryname</I
></CODE
>)</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44576"
></A
>Loads the DLL <CODE
CLASS="replaceable"
><I
>libraryname</I
></CODE
> and calls the function <CODE
CLASS="literal"
>DllRegisterServer</CODE
>.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::UnregisterServer(<CODE
CLASS="replaceable"
><I
>libraryname</I
></CODE
>)</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44587"
></A
>Loads the DLL <CODE
CLASS="replaceable"
><I
>libraryname</I
></CODE
> and calls the function <CODE
CLASS="literal"
>DllUnregisterServer</CODE
>.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>Win32::Sleep(<CODE
CLASS="replaceable"
><I
>time</I
></CODE
>)</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-44598"
></A
>Pauses for the number of milliseconds specified by <CODE
CLASS="replaceable"
><I
>time</I
></CODE
>.</P
></DD
></DL
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch19_16.htm"
TITLE="19.16 Win32::Shortcut"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.16 Win32::Shortcut"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl in a Nutshell"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl in a Nutshell"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch19_18.htm"
TITLE="19.18 OLE Automation"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 19.18 OLE Automation"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>19.16 Win32::Shortcut</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>19.18 OLE Automation</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<p><!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
