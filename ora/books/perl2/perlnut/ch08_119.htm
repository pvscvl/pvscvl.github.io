<HTML
><HEAD
>
<TITLE>8.119 overload (Perl in a Nutshell)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl in a Nutshell"><META
NAME="DC.creator"
CONTENT="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:50:39Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-286-7"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch08_01.htm"
TITLE="8. Standard Modules"><LINK
REL="prev"
HREF="ch08_118.htm"
TITLE="8.118 ops"><LINK
REL="next"
HREF="ch08_120.htm"
TITLE="8.120 Pod::Functions"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl in a Nutshell"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,71"
HREF="index.htm"
ALT="Perl in a Nutshell"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch08_118.htm"
TITLE="8.118 ops"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.118 ops"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch08_01.htm"
TITLE="8. Standard Modules"
>Chapter 8<BR>Standard Modules</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch08_120.htm"
TITLE="8.120 Pod::Functions"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.120 Pod::Functions"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="PNUT-CH-SECT-119"
>8.119 overload</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-20144"
></A
>Lets you substitute class methods or your own subroutines
for standard Perl operators.  For example, the code:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>package Number;
use overload
    &quot;+&quot;  =&gt; \add,
    &quot;*=&quot; =&gt; &quot;muas&quot;;</PRE
></BLOCKQUOTE
>


declares function <CODE
CLASS="literal"
>add</CODE
> for addition and method
<CODE
CLASS="literal"
>muas</CODE
> in the Number class (or one of its base classes) for
the assignment form <CODE
CLASS="literal"
>*=</CODE
> of multiplication.</P
><P
CLASS="para"
>Arguments to <CODE
CLASS="literal"
>use overload</CODE
> are key/value pairs,
where the key is the operation being overloaded, and the value is
the function or method that is to be substituted.  Legal values
are values permitted inside a <CODE
CLASS="literal"
>&amp;{ ... }</CODE
> call, so a
subroutine name, a subroutine reference, or an anonymous subroutine are
all legal.  Legal keys (overloadable operations) are:

</P
><TABLE
CLASS="informaltable"
BORDER="1"
CELLPADDING="3"
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Type</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>Operations</TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Arithmetic</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>+ - * / % ** &lt;&lt; &gt;&gt; x .</CODE
> 
<CODE
CLASS="literal"
>+= -= *= /= %= **= &lt;&lt;= &gt;&gt;= x= .=</CODE
></P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Comparison</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>&lt; &lt;= &gt; &gt;= == != &lt;=&gt;</CODE
>
<CODE
CLASS="literal"
>lt le gt ge eq ne cmp</CODE
></P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Bit and unary</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>% ^ | neg ! ~</CODE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Increment, decrement</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>++ -</CODE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Transcendental</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>atan2 cos sin exp abs log sqrt</CODE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
> 
Boolean, string, numeric conversion</P
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
><CODE
CLASS="literal"
>bool</CODE
> <CODE
CLASS="literal"
>&quot;&quot;</CODE
> <CODE
CLASS="literal"
>0+</CODE
></P
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Special</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>nomethod fallback =</CODE
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>
The functions specified with the <CODE
CLASS="literal"
>use overload</CODE
> directive are
typically called with three arguments.  If the corresponding operation is
binary, then the first two arguments are the two arguments of the operation.
However, the first argument should
always be an object in the package, so in some cases, the order
of the arguments will be interchanged before the method is called. The
third argument provides information on the order and can have these
values:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>false (<CODE
CLASS="literal"
>0</CODE
>)</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The order of arguments is as in the current operation.</P
></DD
><DT
CLASS="term"
>true (<CODE
CLASS="literal"
>1</CODE
>)</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The arguments are reversed.</P
></DD
><DT
CLASS="term"
>undefined</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The current operation is an assignment variant, but the usual 
function is called instead.</P
></DD
></DL
><P
CLASS="para"
>Unary operations are considered binary operations with the second argument 
undefined.</P
><P
CLASS="para"
>The special <CODE
CLASS="literal"
>nomethod</CODE
> key should be followed by a reference to a
function of four parameters and called when the overloading
mechanism cannot find a method for some operation. The first three arguments
are the arguments for the corresponding method if it
were found; the fourth argument is the symbol corresponding to the missing
method.  If several methods are tried, the last one is used.  </P
><P
CLASS="para"
>For example, <CODE
CLASS="literal"
>1-$a</CODE
> can be equivalent to:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>&amp;nomethodMethod($a, 1, 1, &quot;-&quot;)</PRE
></BLOCKQUOTE
>


if the pair <CODE
CLASS="literal"
>&quot;nomethod&quot;</CODE
> <CODE
CLASS="literal"
>=&gt;</CODE
> <CODE
CLASS="literal"
>&quot;nomethodMethod&quot;</CODE
> was specified 
in the <CODE
CLASS="literal"
>use overload</CODE
> directive.</P
><P
CLASS="para"
>The special <CODE
CLASS="literal"
>fallback</CODE
> key governs what to do if a method for a
particular operation is not found.  There are three possible cases,
depending on the value associated with the <CODE
CLASS="literal"
>fallback</CODE
> key:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>undefined</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Tries to use a substituted method.
If that fails, it tries to call the method
specified for <CODE
CLASS="literal"
>nomethod</CODE
>; if that also fails, an exception is raised.</P
></DD
><DT
CLASS="term"
>true</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The same as undefined, but no exception is raised.  Instead,
Perl silently reverts to non-overloaded operation.</P
></DD
><DT
CLASS="term"
>defined, but false</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Tries to call the method specified
for <CODE
CLASS="literal"
>nomethod</CODE
>; if that fails, an exception is raised.</P
></DD
></DL
><P
CLASS="para"
>The overload module provides the following public functions:</P
><UL
CLASS="nutlist"
><LI
CLASS="term"
><A
CLASS="nutentry"
HREF="c08_319.htm"
TITLE="Reference: StrVal"
>StrVal</A
></LI
><LI
CLASS="term"
><A
CLASS="nutentry"
HREF="c08_320.htm"
TITLE="Reference: Overloaded"
>Overloaded</A
></LI
><LI
CLASS="term"
><A
CLASS="nutentry"
HREF="c08_321.htm"
TITLE="Reference: Method"
>Method</A
></LI
></UL
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch08_118.htm"
TITLE="8.118 ops"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.118 ops"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl in a Nutshell"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl in a Nutshell"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch08_120.htm"
TITLE="8.120 Pod::Functions"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.120 Pod::Functions"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>8.118 ops</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>8.120 Pod::Functions</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<p><!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
