<HTML
><HEAD
>
<TITLE>The CGI.pm Module (Perl in a Nutshell)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl in a Nutshell"><META
NAME="DC.creator"
CONTENT="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:55:44Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-286-7"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="part04.htm"
TITLE="IV. CGI"><LINK
REL="prev"
HREF="ch09_04.htm"
TITLE="9.4 CGI Environment Variables"><LINK
REL="next"
HREF="ch10_02.htm"
TITLE="10.2 Importing Method Groups"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl in a Nutshell"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,71"
HREF="index.htm"
ALT="Perl in a Nutshell"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch09_04.htm"
TITLE="9.4 CGI Environment Variables"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.4 CGI Environment Variables"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
>Chapter 10</FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch10_02.htm"
TITLE="10.2 Importing Method Groups"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.2 Importing Method Groups"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="CHAPTER"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="PNUT-CH-10"
>10. The CGI.pm Module</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="SECT1"
HREF="#PNUT-CH-10-SECT-1"
TITLE="10.1 HTML Tag Generation"
>HTML Tag Generation</A
><BR><A
CLASS="SECT1"
HREF="ch10_02.htm"
TITLE="10.2 Importing Method Groups"
>Importing Method Groups</A
><BR><A
CLASS="SECT1"
HREF="ch10_03.htm"
TITLE="10.3 Maintaining State"
>Maintaining State</A
><BR><A
CLASS="SECT1"
HREF="ch10_04.htm"
TITLE="10.4 Named Parameters"
>Named Parameters</A
><BR><A
CLASS="SECT1"
HREF="ch10_05.htm"
TITLE="10.5 Using JavaScript Features"
>Using JavaScript Features</A
><BR><A
CLASS="SECT1"
HREF="ch10_06.htm"
TITLE="10.6 Debugging"
>Debugging</A
><BR><A
CLASS="SECT1"
HREF="ch10_07.htm"
TITLE="10.7 CGI.pm Reference"
>CGI.pm Reference</A
></P
><P
></P
></DIV
><P
CLASS="para"
></P
><P
CLASS="para"
>CGI.pm is a Perl module for creating
and parsing CGI forms.  <A
CLASS="indexterm"
NAME="PNUT-CH-10-IX-CGI.PM-MODULE"
></A
>
It is distributed with core Perl as of Perl 5.004, but you can also retrieve
CGI.pm from CPAN, and you can get the very latest version
at any time from <A
CLASS="systemitem.sitename"
HREF="ftp://ftp-hygenome.wi.mit.edu/pub/software/WWW/"
>ftp://ftp-hygenome.wi.mit.edu/pub/software/WWW/</A
>.</P
><P
CLASS="para"
>CGI is an object-oriented module.  
Don't let the object-oriented nature
scare you off, though; CGI.pm is very easy to use, as evidenced
by its overwhelming popularity among all levels of Perl 
programmers.
To give you an idea of how easy it is to use CGI.pm, 
let's take a scenario in which a user fills out
and submits a form containing her birthday.
Without CGI.pm, the script would
have to translate the URL-encoded input by hand
(probably using a series of regular expressions)
and assign it to a variable.  For example, you might try something 
like this:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>#!/usr/bin/perl 
# cgi script without CGI.pm

$size_of_form_info = $ENV{'CONTENT_LENGTH'};
read ($STDIN, $form_info, $size_of_form_info);

# Split up each pair of key=value pairs
foreach $pair (split (/&amp;/, $form_info)) {

   # For each pair, split into $key and $value variables
   ($key, $value) = split (/=/, $pair);

   # Get rid of the pesky %xx encodings
   $key =~ s/%([\dA-Fa-f][\dA-Fa-f])/pack (&quot;C&quot;, hex ($1))/eg;
   $value =~ s/%([\dA-Fa-f][\dA-Fa-f])/pack (&quot;C&quot;, hex ($1))/eg;

   # Use $key as index for $parameters hash, $value as value
   $parameters{$key} = $value;
}

# Print out the obligatory content-type line
print &quot;Content-type: text/plain\n\n&quot;;

# Tell the user what they said
print &quot;Your birthday is on &quot; . $parameters{birthday} . &quot;.\n&quot;;</PRE
></BLOCKQUOTE
>


Regardless of whether this code actually works, you must admit
it's ugly.
With CGI.pm, the script could be written:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>#!/usr/bin/perl -w
# cgi script with CGI.pm

use CGI;

$query = CGI::new();
$bday = $query-&gt;param(&quot;birthday&quot;);
print $query-&gt;header();
print $query-&gt;p(&quot;Your birthday is $bday.&quot;);</PRE
></BLOCKQUOTE
>


Even for this tiny program, you can see that CGI.pm
can alleviate many of the headaches associated with CGI
programming.  </P
><P
CLASS="para"
>As with any Perl module, the first thing you do is call
the module with <CODE
CLASS="literal"
>use</CODE
>.  You then call the constructor
(<CODE
CLASS="literal"
>new()</CODE
>), creating a new CGI object called
<CODE
CLASS="literal"
>$query</CODE
>. Next, get the value of the <CODE
CLASS="literal"
>birthday</CODE
> parameter from<A
CLASS="indexterm"
NAME="AUTOID-24338"
></A
>
the CGI program using the <CODE
CLASS="literal"
>param</CODE
> method.  
Note that CGI.pm does all the work of determining
whether the CGI program is being called by the GET or POST methods,
and it also does all the URL decoding for you.  <A
CLASS="indexterm"
NAME="AUTOID-24341"
></A
>
To generate output, use the <CODE
CLASS="literal"
>header</CODE
> method to 
return the content type header, and the <CODE
CLASS="literal"
>p</CODE
> method
to generate a paragraph marker <CODE
CLASS="literal"
>&lt;P&gt;</CODE
> tag.  </P
><P
CLASS="para"
>However, this is only the tip of the iceberg as far as what
CGI.pm can do for you.  
There are three basic categories of CGI.pm methods:
CGI handling, creating forms, and retrieving environment variables.
(A fourth category is creating HTML tags, but we don't cover those
in detail.)
<A
CLASS="xref"
HREF="ch10_01.htm"
TITLE="CGI.pm Methods"
>Table 10.1</A
>
lists most of these methods.  They are also
covered in more detail later in this chapter.</P
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="PNUT-CH-10-TAB-0"
>Table 10.1: CGI.pm Methods</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
>CGI Handling</TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>keywords</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets keywords from an <CODE
CLASS="literal"
>&lt;ISINDEX&gt;</CODE
> search.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>param</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets (or sets) the value of parameters.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>append</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Appends to a parameter.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>import_names</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Imports variables into a namespace.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>delete</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Deletes a parameter.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>delete_all</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Deletes all parameters.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>save</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Saves all parameters to a file.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>self_url</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Creates self-referencing URL.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>url</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets URL of current script without query information.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>header</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Creates HTTP header.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>redirect</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Creates redirection header.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>cookie</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets (or sets) a cookie.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>nph</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Declares this to be a NPH script.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>dump</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Prints all name/value pairs.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Form Generation</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>start_html</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates an <CODE
CLASS="literal"
>&lt;HTML&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>end_html</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates an <CODE
CLASS="literal"
>&lt;/HTML&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>autoEscape</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Sets whether to use automatic escaping.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>isindex</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates an <CODE
CLASS="literal"
>&lt;ISINDEX&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>startform</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates a <CODE
CLASS="literal"
>&lt;FORM&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>start_multipart_form</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates a <CODE
CLASS="literal"
>&lt;FORM&gt;</CODE
> tag for
<CODE
CLASS="literal"
>multipart/ form-data</CODE
> encoding.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>textfield</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates an <CODE
CLASS="literal"
>&lt;INPUT TYPE=TEXT&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>textarea</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates an <CODE
CLASS="literal"
>&lt;TEXTAREA&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>password_field</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates an <CODE
CLASS="literal"
>&lt;INPUT TYPE=PASSWORD&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>filefield</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates an <CODE
CLASS="literal"
>&lt;INPUT TYPE=FILE&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>popup_menu</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates a popup menu via <CODE
CLASS="literal"
>&lt;SELECT SIZE=1&gt;</CODE
> and <CODE
CLASS="literal"
>&lt;OPTION&gt;</CODE
> tags.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>scrolling_list</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates a scrolling list via <CODE
CLASS="literal"
>&lt;SELECT&gt;</CODE
> and <CODE
CLASS="literal"
>&lt;OPTION&gt;</CODE
> tags.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>checkbox_group</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates a group of checkboxes via multiple <CODE
CLASS="literal"
>&lt;INPUT TYPE=CHECKBOX&gt;</CODE
> tags.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>checkbox</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates a single checkbox via a <CODE
CLASS="literal"
>&lt;INPUT TYPE=CHECKBOX&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>radio_group</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates a group of radio buttons via <CODE
CLASS="literal"
>&lt;INPUT TYPE=RADIO&gt;</CODE
> tags.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>submit</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates a <CODE
CLASS="literal"
>&lt;SUBMIT&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>reset</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates a <CODE
CLASS="literal"
>&lt;RESET&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>defaults</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates a <CODE
CLASS="literal"
>&lt;DEFAULTS&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>hidden</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates an <CODE
CLASS="literal"
>&lt;INPUT TYPE=HIDDEN&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>image_button</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates a clickable image button via a <CODE
CLASS="literal"
>&lt;SELECT&gt;</CODE
> tag.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>button</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Generates a JavaScript button.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Handling Environment Variables</TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>accept</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets accept types from ACCEPT header.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>user_agent</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets value of USER_AGENT header.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>path_info</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets value of EXTRA_PATH_INFO header.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>path_translated</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets value of PATH_TRANSLATED header.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>remote_host</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets value of REMOTE_HOST header.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>raw_cookie</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets value of HTTP_COOKIE header.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>script_name</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets value of SCRIPT_NAME header.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>referer</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets value of REFERER header.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>auth_type</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets value of AUTH_TYPE header.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>remote_user</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets value of REMOTE_USER header.</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>user_name</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets user name (not via headers).</TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><CODE
CLASS="literal"
>request_method</CODE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
>Gets value of REQUEST_METHOD header.</TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
>Each of these methods is covered later in this chapter, 
in alphabetical order.</P
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="PNUT-CH-10-SECT-1"
>10.1 HTML Tag Generation</A
></H2
><P
CLASS="para"
>In addition to the form-generation methods, CGI.pm also<A
CLASS="indexterm"
NAME="AUTOID-24578"
></A
><A
CLASS="indexterm"
NAME="AUTOID-24581"
></A
>
includes a group of methods for creating HTML tags.
The names of the HTML tag methods generally
follow the HTML tag name (e.g., <CODE
CLASS="literal"
>p</CODE
> for <CODE
CLASS="literal"
>&lt;P&gt;</CODE
>)
and take named parameters that are assumed to be valid
attributes for the tag (e.g., <CODE
CLASS="literal"
>img(src=&gt;'camel.gif')</CODE
>
becomes <CODE
CLASS="literal"
>&lt;IMG SRC=&quot;camel.gif&quot;&gt;</CODE
>).  We do not list all 
tags in this book; see the CGI.pm manpage for more information,
or the book <EM
CLASS="emphasis"
>Official Guide to Programming with CGI.pm</EM
> by Lincoln
Stein (John Wiley &amp; Sons, 1998).</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch09_04.htm"
TITLE="9.4 CGI Environment Variables"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.4 CGI Environment Variables"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl in a Nutshell"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl in a Nutshell"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch10_02.htm"
TITLE="10.2 Importing Method Groups"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.2 Importing Method Groups"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>9.4 CGI Environment Variables</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>10.2 Importing Method Groups</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<p><!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
