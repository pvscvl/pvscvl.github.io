<HTML
><HEAD
>
<TITLE>8.54 ExtUtils::MakeMaker (Perl in a Nutshell)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl in a Nutshell"><META
NAME="DC.creator"
CONTENT="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:45:40Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-286-7"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch08_01.htm"
TITLE="8. Standard Modules"><LINK
REL="prev"
HREF="ch08_53.htm"
TITLE="8.53 ExtUtils::Liblist"><LINK
REL="next"
HREF="ch08_55.htm"
TITLE="8.55 ExtUtils::Manifest"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl in a Nutshell"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,71"
HREF="index.htm"
ALT="Perl in a Nutshell"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch08_53.htm"
TITLE="8.53 ExtUtils::Liblist"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.53 ExtUtils::Liblist"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch08_01.htm"
TITLE="8. Standard Modules"
>Chapter 8<BR>Standard Modules</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch08_55.htm"
TITLE="8.55 ExtUtils::Manifest"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.55 ExtUtils::Manifest"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="SECT1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="PNUT-CH-8-SECT-54"
>8.54 ExtUtils::MakeMaker</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-15937"
></A
>Writes a Makefile for use during module installation. 
Provides a function, <CODE
CLASS="literal"
>WriteMakefile</CODE
>, which
creates an object whose attributes are set from various
sources and which actually writes the Makefile. See <A
CLASS="xref"
HREF="ch02_01.htm"
TITLE="Installing Perl"
>Chapter 2</A
> for
information about the use of the Makefile and MakeMaker during
module installation. This section explains the details of actually 
creating the Makefile with MakeMaker. It assumes an understanding of
<EM
CLASS="emphasis"
>make</EM
> and Makefiles.</P
><P
CLASS="para"
>If you are a Perl programmer writing a module, you should run <EM
CLASS="emphasis"
>h2xs</EM
>
to generate the template for your module.  Among other things, <EM
CLASS="emphasis"
>h2xs</EM
>
creates a file called <EM
CLASS="emphasis"
>Makefile.PL</EM
>, and it's <EM
CLASS="emphasis"
>Makefile.PL</EM
> that runs
MakeMaker. On the other hand, if you are installing a module, you can
usually just run the <EM
CLASS="emphasis"
>Makefile.PL</EM
> that came with the module, perhaps adding
a PREFIX argument if you are installing the module locally (see <A
CLASS="xref"
HREF="ch02_01.htm"
TITLE="Installing Perl"
>Chapter 2</A
>).
In either case, you shouldn't need to run ExtUtils::MakeMaker directly
unless you have special requirements.</P
><P
CLASS="para"
>A typical call to MakeMaker might look like this example from the CGI
distribution:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>use ExtUtils::MakeMaker;
WriteMakefile(
        NAME =&gt; &quot;CGI&quot;,
        DISTNAME =&gt; &quot;CGI-modules&quot;,
        VERSION =&gt; &quot;2.76&quot;,
        linkext =&gt; { LINKTYPE =&gt; '' },
        dist =&gt; {COMPRESS=&gt;'gzip -9f', SUFFIX =&gt; 'gz'},
);</PRE
></BLOCKQUOTE
>


MakeMaker attributes can be passed as arguments to <CODE
CLASS="literal"
>WriteMakefile</CODE
>,
as in the example, or they can be passed as <EM
CLASS="emphasis"
>name=value</EM
> pairs on the
command line:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>perl Makefile.PL PREFIX=/home/mydir/Perl/Modules</PRE
></BLOCKQUOTE
>


To see what MakeMaker is doing, you can say:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>perl Makefile.PL verbose</PRE
></BLOCKQUOTE
>


The following attributes can be specified:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>C</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to array of <EM
CLASS="emphasis"
>*.c</EM
> filenames. Initialized from a
directory scan and the values portion of the XS attribute
hash. Not currently used by MakeMaker but may be
handy in <EM
CLASS="emphasis"
>Makefile.PL</EM
>s.</P
></DD
><DT
CLASS="term"
>CCFLAGS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>String to be included in the compiler call command
line between the INC and OPTIMIZE arguments.</P
></DD
><DT
CLASS="term"
>CONFIG</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>An array reference containing a list of attributes to get from <CODE
CLASS="literal"
>%Config</CODE
>.
The following values are always added to CONFIG:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>ar       cc          cccdlflags   ccdlflags
dlext    dlsrc       ld           lddlflags
ldflags  libc        lib_ext      obj_ext
ranlib   sitelibexp  sitearchexp  so</PRE
></BLOCKQUOTE
>
&#13;</P
></DD
><DT
CLASS="term"
>CONFIGURE</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to a subroutine that should return a hash
reference. The hash may contain further attributes
that need to be determined by some evaluation method.</P
></DD
><DT
CLASS="term"
>DEFINE</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>An attribute containing additional defines.</P
></DD
><DT
CLASS="term"
>DIR</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to array of subdirectories containing <EM
CLASS="emphasis"
>Makefile.PL</EM
> files.</P
></DD
><DT
CLASS="term"
>DISTNAME</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Your name for distributing the package (by <EM
CLASS="emphasis"
>tar</EM
> file). Defaults 
to NAME, below.</P
></DD
><DT
CLASS="term"
>DL_FUNCS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to a hash of symbol names for routines to be made available
as universal symbols.  Each key/value pair consists of the
package name and an array of routine names in that
package.  Used only under AIX (export lists) and VMS
(linker options) at present.  Defaults to <CODE
CLASS="literal"
>&quot;$PKG&quot; =&gt; [&quot;boot_$PKG&quot;]</CODE
>.</P
></DD
><DT
CLASS="term"
>DL_VARS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Array of symbol names for variables to be made available
as universal symbols.  Used only under AIX (export lists)
and VMS (linker options) at present.  Defaults to <CODE
CLASS="literal"
>[<CODE
CLASS="replaceable"
><I
></I
></CODE
>]</CODE
>.</P
></DD
><DT
CLASS="term"
>EXCLUDE_EXT</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Array of module names to exclude when doing a static
build.  Ignored if INCLUDE_EXT is present.</P
></DD
><DT
CLASS="term"
>EXE_FILES</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to array of executable files to be copied
to the INST_SCRIPT directory. <EM
CLASS="emphasis"
>make realclean</EM
> deletes
them from there.</P
></DD
><DT
CLASS="term"
>NO_VC</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>If set, the Makefile does not check the current version of MakeMaker against
the version the Makefile was built under.  Should be used interactively,
not written into your <EM
CLASS="emphasis"
>Makefile.PL</EM
> file.</P
></DD
><DT
CLASS="term"
>FIRST_MAKEFILE</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Name of the Makefile to be produced. Defaults to the
contents of MAKEFILE, but can be overridden.</P
></DD
><DT
CLASS="term"
>FULLPERL</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Perl binary that can run this module.</P
></DD
><DT
CLASS="term"
>H</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to array of <EM
CLASS="emphasis"
>*.h</EM
> filenames. Similar to C attribute.</P
></DD
><DT
CLASS="term"
>IMPORTS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Used only on OS/2.</P
></DD
><DT
CLASS="term"
>INC</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Directories containing include files, in <EM
CLASS="emphasis"
>-I</EM
> form. For example:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>INC =&gt; &quot;-I/usr/5include -I/path/to/inc&quot;</PRE
></BLOCKQUOTE
>
&#13;</P
></DD
><DT
CLASS="term"
>INCLUDE_EXT</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Array of module names to be included when doing a
static build.  If present, only those modules that are explicitly
mentioned are used for the build (instead of all installed extensions).
It is not necessary to mention DynaLoader or the current
module when filling in INCLUDE_EXT&nbsp;- they are always included.</P
></DD
><DT
CLASS="term"
>INSTALLARCHLIB</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Used by <EM
CLASS="emphasis"
>make install</EM
>, which copies files from
INST_ARCHLIB to this directory if INSTALLDIRS is set to <EM
CLASS="emphasis"
>perl</EM
>.</P
></DD
><DT
CLASS="term"
>INSTALLBIN</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Directory to install binary files into.</P
></DD
><DT
CLASS="term"
>INSTALLDIRS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Determines which of the two sets of installation
directories to choose.  There are two possible values:</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>perl</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Uses INSTALLLPRIVLIB and INSTALLARCHLIB directories.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>site</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The default. Uses 
INSTALLSITELIB and INSTALLSITEARCH directories.</P
></DD
><DT
CLASS="term"
>INSTALLMAN1DIR</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Directory where command man pages are put during <EM
CLASS="emphasis"
>make install</EM
>.
Defaults to <CODE
CLASS="literal"
>$Config{installman1dir}</CODE
>.</P
></DD
><DT
CLASS="term"
>INSTALLMAN3DIR</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Directory where library man pages are put during <EM
CLASS="emphasis"
>make install</EM
>.
Defaults to <CODE
CLASS="literal"
>$Config{installman3dir}</CODE
>.</P
></DD
><DT
CLASS="term"
>INSTALLPRIVLIB</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Used by <EM
CLASS="emphasis"
>make install</EM
>, which copies files from INST_LIB
to this directory if INSTALLDIRS is set to <CODE
CLASS="literal"
>perl</CODE
>.</P
></DD
><DT
CLASS="term"
>INSTALLSCRIPT</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Used by <EM
CLASS="emphasis"
>make install</EM
>, which copies files from INST_SCRIPT
to this directory.</P
></DD
><DT
CLASS="term"
>INSTALLSITELIB</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Used by <EM
CLASS="emphasis"
>make install</EM
>, which copies files from INST_LIB
to this directory if INSTALLDIRS is set to <CODE
CLASS="literal"
>site</CODE
> (the default).</P
></DD
><DT
CLASS="term"
>INSTALLSITEARCH</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Used by <EM
CLASS="emphasis"
>make install</EM
>, which copies files from
INST_ARCHLIB to this directory if INSTALLDIRS is set to
<CODE
CLASS="literal"
>site</CODE
> (the default).</P
></DD
><DT
CLASS="term"
>INST_ARCHLIB</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Same as INST_LIB for architecture-dependent files.</P
></DD
><DT
CLASS="term"
>INST_BIN</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Directory where real binary files are put during <EM
CLASS="emphasis"
>make</EM
>, for later
copying to INSTALLBIN during <EM
CLASS="emphasis"
>make install</EM
>.</P
></DD
><DT
CLASS="term"
>INST_EXE</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Deprecated. Old name for INST_SCRIPT, which you should use instead.</P
></DD
><DT
CLASS="term"
>INST_LIB</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Directory to hold library files for this module while 
it is being built.</P
></DD
><DT
CLASS="term"
>INST_MAN1DIR</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Directory to hold the command manpages at <EM
CLASS="emphasis"
>make</EM
> time.</P
></DD
><DT
CLASS="term"
>INST_MAN3DIR</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Directory to hold the library manpages at <EM
CLASS="emphasis"
>make</EM
> time.</P
></DD
><DT
CLASS="term"
>INST_SCRIPT</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Directory where executable files should be installed
during <EM
CLASS="emphasis"
>make</EM
>. Defaults to <EM
CLASS="emphasis"
>./blib/bin</EM
>, to have a
dummy location during testing. <EM
CLASS="emphasis"
>make install</EM
> copies the
files in INST_SCRIPT to INSTALLSCRIPT.</P
></DD
><DT
CLASS="term"
>LDFROM</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Used by the <EM
CLASS="emphasis"
>ld</EM
> command to specify the files to link/load from.
Defaults to <CODE
CLASS="literal"
>$(OBJECT)</CODE
>.</P
></DD
><DT
CLASS="term"
>LIBPERL_A</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Filename of the Perl library that will be used
with this module. Defaults to <EM
CLASS="emphasis"
>libperl.a</EM
>.</P
></DD
><DT
CLASS="term"
>LIB</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Can only be set at when <EM
CLASS="emphasis"
>Makefile.PL</EM
> is run; both INSTALLPRIVLIB
and INSTALLSITELIB are set to the value of LIB.</P
></DD
><DT
CLASS="term"
>LIBS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Anonymous array of alternative library specifications
to be searched for (in order) until at least one library
is found. Note that any element of the array contains a complete
set of arguments for the <EM
CLASS="emphasis"
>ld</EM
> command.</P
></DD
><DT
CLASS="term"
>LINKTYPE</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Should be used only to force static linking (see <CODE
CLASS="literal"
>linkext</CODE
> below).
Possible values are <CODE
CLASS="literal"
>static</CODE
> or <CODE
CLASS="literal"
>dynamic</CODE
>. Default is
<CODE
CLASS="literal"
>dynamic</CODE
> unless <CODE
CLASS="literal"
>usedl=undef</CODE
> in <EM
CLASS="emphasis"
>config.sh</EM
>.</P
></DD
><DT
CLASS="term"
>MAKEAPERL</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Boolean. Tells MakeMaker to include the
rules for making a Perl binary. Normally handled automatically
by MakeMaker and not needed by the user.</P
></DD
><DT
CLASS="term"
>MAKEFILE</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Name of the Makefile to be produced.</P
></DD
><DT
CLASS="term"
>MAN1PODS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to a hash of pod-containing files to be converted
to manpages and installed as requested at configure time. Default is
all EXE_FILES files that include pod directives.</P
></DD
><DT
CLASS="term"
>MAN3PODS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to a hash of <EM
CLASS="emphasis"
>.pm</EM
> and <EM
CLASS="emphasis"
>.pod</EM
> files to be 
converted to manpages and
installed as requested at configure time. Default is all <EM
CLASS="emphasis"
>.pod</EM
> 
and any <EM
CLASS="emphasis"
>.pm</EM
> files that include pod directives.</P
></DD
><DT
CLASS="term"
>MAP_TARGET</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Name for new Perl binary if one is to be produced. Default is <CODE
CLASS="literal"
>perl</CODE
>.</P
></DD
><DT
CLASS="term"
>MYEXTLIB</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Name of library that the module builds and links to.</P
></DD
><DT
CLASS="term"
>NAME</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Perl module name for this module (e.g., DBD::Oracle). Defaults
to the directory name but should be explicitly defined in
the <EM
CLASS="emphasis"
>Makefile.PL</EM
>.</P
></DD
><DT
CLASS="term"
>NEEDS_LINKING</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Boolean. Can be set to speed up MakeMaker processing a very little bit, but
not needed since MakeMaker will figure out if linking is needed.</P
></DD
><DT
CLASS="term"
>NOECHO</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Controls <EM
CLASS="emphasis"
>make</EM
>'s echo (<CODE
CLASS="literal"
>@</CODE
>) feature. Defaults to <CODE
CLASS="literal"
>@</CODE
>.
By setting it to an empty string, you can
generate a Makefile that echos all commands. Used mainly 
in debugging MakeMaker itself.</P
></DD
><DT
CLASS="term"
>NORECURS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Boolean.  If set, inhibits descending into subdirectories.</P
></DD
><DT
CLASS="term"
>OBJECT</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>List of object files.  Defaults to <CODE
CLASS="literal"
>$(BASEEXT)$(OBJ_EXT)</CODE
>;
can be set to a long string containing all object files.</P
></DD
><DT
CLASS="term"
>OPTIMIZE</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>If set to <CODE
CLASS="literal"
>-g</CODE
>, turns debugging on. Defaults to <CODE
CLASS="literal"
>-O</CODE
>. Passed
to subdirectory <EM
CLASS="emphasis"
>make</EM
>s.</P
></DD
><DT
CLASS="term"
>PERL</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Perl binary for tasks that can be done by miniperl.</P
></DD
><DT
CLASS="term"
>PERLMAINCC</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The call to the program that can compile
<EM
CLASS="emphasis"
>perlmain.c</EM
>. Defaults to <CODE
CLASS="literal"
>$(CC)</CODE
>.</P
></DD
><DT
CLASS="term"
>PERL_LIB</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Directory containing the Perl library to use.</P
></DD
><DT
CLASS="term"
>PERL_ARCHLIB</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Same as PERL_LIB for architecture-dependent files.</P
></DD
><DT
CLASS="term"
>PERL_SRC</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Directory containing the Perl source code. Avoid using this attribute, since
it may be undefined.</P
></DD
><DT
CLASS="term"
>PL_FILES</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to hash of files to be processed as Perl programs. By default,
MakeMaker turns any <EM
CLASS="emphasis"
>*.PL</EM
> file it finds (except the
<EM
CLASS="emphasis"
>Makefile.PL</EM
>) into a key and the basename of the file into
the value. The <EM
CLASS="emphasis"
>*.PL</EM
> files are expected to produce output to the
target files themselves.</P
></DD
><DT
CLASS="term"
>PM</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to hash of <EM
CLASS="emphasis"
>.pm</EM
> and <EM
CLASS="emphasis"
>*.pl</EM
> files to be installed.</P
></DD
><DT
CLASS="term"
>PMLIBDIRS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to array of subdirectories containing library files.
Defaults to <CODE
CLASS="literal"
>['lib', $(BASEEXT)]</CODE
>. The directories are
scanned and any files they contain are installed in
the corresponding location in the library.  A <CODE
CLASS="literal"
>libscan</CODE
>
method can be used to alter the behavior.  Defining PM in
the <EM
CLASS="emphasis"
>Makefile.PL</EM
> overrides PMLIBDIRS.</P
></DD
><DT
CLASS="term"
>PREFIX</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Can be used to set the three INSTALL* attributes at once so that
they have PREFIX as a common directory node.</P
></DD
><DT
CLASS="term"
>PREREQ_PM</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to a hash of modules that need to be available to run
this module (e.g., Fcntl for SDBM_File). The name of each required module 
is the key and the desired version is the value. If the
required version is 0, MakeMaker just checks to see if any version
is installed.</P
></DD
><DT
CLASS="term"
>SKIP</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to an array specifying sections of the Makefile that shouldn't
be written. Do not use the SKIP attribute for the negligible 
speedup, which may seriously damage the resulting Makefile.</P
></DD
><DT
CLASS="term"
>TYPEMAPS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to array of typemap filenames.  Use when the
typemaps are in a directory other than the current
directory or when they are not named typemap. The last
typemap in the list takes precedence, but a typemap in the
current directory has highest precedence even if it isn't
listed in TYPEMAPS. The default system typemap has lowest
precedence.</P
></DD
><DT
CLASS="term"
>VERSION</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Your version number for the package.  Defaults to 0.1.</P
></DD
><DT
CLASS="term"
>VERSION_FROM</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Names a file for MakeMaker to parse to find the version number for
the package, so you don't need to specify VERSION.  The file must
contain a single line to compute the
version number. The first line in the file that contains
the regular expression:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>/([\$*])(([\w:\']*)\bVERSION)\b.*\=/</PRE
></BLOCKQUOTE
>


is evaluated with <CODE
CLASS="literal"
>eval</CODE
> and the result assigned to VERSION.</P
></DD
><DT
CLASS="term"
>XS</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Reference to a hash of <EM
CLASS="emphasis"
>.xs</EM
> files. MakeMaker defaults this.  For
example:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>{'name_of_file.xs' =&gt; 'name_of_file.c'}</PRE
></BLOCKQUOTE
>


The <EM
CLASS="emphasis"
>.c</EM
> files are automatically deleted by a <EM
CLASS="emphasis"
>make clean</EM
>.</P
></DD
><DT
CLASS="term"
>XSOPT</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>String of options to pass to <EM
CLASS="emphasis"
>xsubpp</EM
>, which might include
<CODE
CLASS="literal"
>-C++</CODE
> or <CODE
CLASS="literal"
>-extern</CODE
> but not typemaps, which go in TYPEMAPS.</P
></DD
><DT
CLASS="term"
>XSPROTOARG</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>May be set to an empty string, which is identical to
<CODE
CLASS="literal"
>-prototypes</CODE
> or <CODE
CLASS="literal"
>-noprototypes</CODE
>. Defaults to the
empty string.</P
></DD
><DT
CLASS="term"
>XS_VERSION</DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Your version number for the package's <EM
CLASS="emphasis"
>.xs</EM
> file. Defaults
to the value of VERSION.</P
></DD
></DL
><P
CLASS="para"
>The following lowercase attributes can be used to pass 
parameters to the methods that implement the corresponding part of 
the Makefile:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><EM
CLASS="emphasis"
>clean</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Extra files to <CODE
CLASS="literal"
>clean</CODE
>.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>depend</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Extra dependencies.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>dist</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Distribution options.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>dynamic_lib</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Options for dynamic library support.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>installpm</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Installation options related to AutoSplit.
Deprecated as of MakeMaker 5.23. See the <EM
CLASS="emphasis"
>pm_to_blib</EM
> entry
for ExtUtils::Install.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>linkext</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Linking style.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>macro</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Extra macros to define.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>realclean</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Extra files to <EM
CLASS="emphasis"
>make realclean</EM
>.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>tool_autosplit</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>Attributes for the <CODE
CLASS="literal"
>tool_autosplit</CODE
> method. </P
></DD
></DL
><P
CLASS="para"
>If specifying attributes isn't sufficient to accomplish what you want,
you can define your own subroutines in the <EM
CLASS="emphasis"
>Makefile.PL</EM
> that returns
the text to be written to the Makefile.  You can also override MakeMaker's
subroutines (described in <A
CLASS="xref"
HREF="ch08_60.htm"
TITLE="ExtUtils::MM_Unix"
>Section 8.60, "ExtUtils::MM_Unix</A
>&quot;) this way.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch08_53.htm"
TITLE="8.53 ExtUtils::Liblist"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.53 ExtUtils::Liblist"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl in a Nutshell"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl in a Nutshell"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch08_55.htm"
TITLE="8.55 ExtUtils::Manifest"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.55 ExtUtils::Manifest"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>8.53 ExtUtils::Liblist</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>8.55 ExtUtils::Manifest</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<p><!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
