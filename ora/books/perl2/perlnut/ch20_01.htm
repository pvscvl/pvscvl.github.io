<HTML
><HEAD
>
<TITLE>PerlScript (Perl in a Nutshell)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl in a Nutshell"><META
NAME="DC.creator"
CONTENT="Ellen Siever, Stephen Spainhour &amp; Nathan Patwardhan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T02:00:46Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-286-7"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="part08.htm"
TITLE="VIII. Win32"><LINK
REL="prev"
HREF="ch19_18.htm"
TITLE="19.18 OLE Automation"><LINK
REL="next"
HREF="ch20_02.htm"
TITLE="20.2 Server-Side PerlScript"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl in a Nutshell"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,71"
HREF="index.htm"
ALT="Perl in a Nutshell"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch19_18.htm"
TITLE="19.18 OLE Automation"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.18 OLE Automation"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
>Chapter 20</FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch20_02.htm"
TITLE="20.2 Server-Side PerlScript"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 20.2 Server-Side PerlScript"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="CHAPTER"
><H1
CLASS="chapter"
><A
CLASS="title"
NAME="PNUT-CH-20"
>20. PerlScript</A
></H1
><DIV
CLASS="htmltoc"
><P
><B
>Contents:</B
><BR><A
CLASS="SECT1"
HREF="#PNUT-CH-20-SECT-1"
TITLE="20.1 Client-Side PerlScript"
>Client-Side PerlScript</A
><BR><A
CLASS="SECT1"
HREF="ch20_02.htm"
TITLE="20.2 Server-Side PerlScript"
>Server-Side PerlScript</A
></P
><P
></P
></DIV
><P
CLASS="para"
></P
><P
CLASS="para"
>PerlScript is an ActiveX scripting engine that allows you to incorporate 
Perl within any ActiveX scripting host. PerlScript can be used on <A
CLASS="indexterm"
NAME="AUTOID-45113"
></A
><A
CLASS="indexterm"
NAME="AUTOID-45115"
></A
>
the client side (Internet Explorer 4.0) or in Active Server Pages (ASP) generated by
web servers like IIS or WebSite Pro. To use PerlScript with these applications,
you must have Active State's ActivePerl with PerlScript installed on the local machine
(or you can use a network-based installation of each).<A
CLASS="indexterm"
NAME="PNUT-CH-20-IX-PERLSCRIPT"
></A
></P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45120"
></A
>Since a local Perl and PerlScript installation is required, it is not practical
to deploy applications that use client-side PerlScript across the Internet.
Nevertheless, in situations where you have control over the desktop configurations,
as in an Intranet environment, client-side PerlScript offers tremendous opportunities
for browser-based application development.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45123"
></A
>Server-side PerlScript does not have this limitation. To use PerlScript on your
web server, you don't need to worry about how the end user's desktop is configured.
As long as you are running a web server that can use ASP, you
can use PerlScript on your web server.</P
><P
CLASS="para"
>With the free distribution of Netscape Navigator source code, the availability
of PerlScript is likely to broaden significantly. This is an area of development
that you should keep an eye on if you like the idea of extending Perl's
power to web authoring.</P
><P
CLASS="para"
>PerlScript is implemented into HTML pages or ASP pages via the Document Object
Model used by the ActiveX scripting engine. Scripts are virtually the same as
any other Perl script. They use Perl's object-oriented features on an object
hierarchy defined by the script engine. The object model is different for clients
and servers, but the same scheme is used throughout:
top-level objects with sub-objects, each containing
their own properties and methods.</P
><P
CLASS="para"
>Properties of objects, like the name of a frame or the background color
of a window, are available as hash elements from a referenced object. For example:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>$object-&gt;subobject{'property'} = &quot;value&quot;;
$val = $object-&gt;subobject-&gt;{'property'};</PRE
></BLOCKQUOTE
>


Thus, properties can be set or retrieved.</P
><P
CLASS="para"
>Objects have a predefined set of methods available to them as well.
Methods define actions such as writing to a document or performing
actions on a mouse click. Methods are accessible in the usual way:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>$object-&gt;method(args);</PRE
></BLOCKQUOTE
>


This chapter provides information on the parts of 
the object model that you will use most often. A complete
reference for the object models for both ASP and ActiveX scripting
clients is beyond the scope of this book. For more detailed information,
consult the documentation for your server, or the Microsoft web site,
which has complete client and server information.</P
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="PNUT-CH-20-SECT-1"
>20.1 Client-Side PerlScript</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="PNUT-CH-20-IX-CLIENT-SIDE-PERLSCRIPT"
></A
><A
CLASS="indexterm"
NAME="PNUT-CH-20-IX-PERLSCRIPT-CLIENT-SIDE-PERLSCRIPT"
></A
><A
CLASS="indexterm"
NAME="AUTOID-45139"
></A
>All PerlScript code must be contained within a <CODE
CLASS="literal"
>&lt;SCRIPT LANGUAGE=&quot;PerlScript&quot;&gt;&lt;/SCRIPT&gt;</CODE
> 
element. You may include any number of these elements in your program, so it is
possible to intersperse Perl and HTML freely. For example:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Hello, World&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

&lt;H1&gt;Hello, from the Old Edition!&lt;/H1&gt;

&lt;SCRIPT LANGUAGE=&quot;PerlScript&quot;&gt;

    my @one_hit = ('Bel', 'Biv', 'DeVoe');

    foreach (@one_hit) {
       $window-&gt;document-&gt;write(qq[$_ says &quot;Hello&quot;!&lt;BR&gt;]);
       }
    
    $window-&gt;document-&gt;write(qq[&lt;P&gt;&lt;I&gt;&quot;That girl is Poison!&quot;&lt;/I&gt;&lt;/P&gt;]);

&lt;/SCRIPT&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;</PRE
></BLOCKQUOTE
>

<A
CLASS="indexterm"
NAME="AUTOID-45143"
></A
>
The <CODE
CLASS="literal"
>write</CODE
> method is used on the document object to &quot;write&quot; HTML and text
to the document displayed in the window.</P
><P
CLASS="para"
>The top-level object is the window. This is the default object that contains
the script. (Even though the script is contained in the HTML file, the script object
is a level below the window, just like the document object.)</P
><P
CLASS="para"
>Every window contains the following objects:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Frame</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45155"
></A
>This object contains an array of frames in the window. Each frame object
is accessible via the index, i.e., <CODE
CLASS="literal"
>$window-&gt;frame[2]</CODE
> is the third frame
object. Each frame object is a container that acts like its own window object.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>History</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45163"
></A
>This object stores the browser history&nbsp;- all the sites a client has been
to in its current session.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Navigator</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45170"
></A
>This object contains information about the client application, like the
UserAgent header it provides.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Location</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45177"
></A
>This object contains information about the current URL for the window.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Script</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45184"
></A
>This object contains any script elements in the current window scope.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Document</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="PNUT-CH-20-IX-DOCUMENT-OBJECT-PERLSCRIPT"
></A
>This object contains all of the displayed content in a window: the HTML,
text, forms, objects, etc.</P
></DD
></DL
><P
CLASS="para"
>The most important object in this hierarchy is the document object. The
following section explains the objects it contains, their properties, and 
their methods.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="PNUT-CH-20-SECT-1.1"
>20.1.1 The Document Object</A
></H3
><P
CLASS="para"
>The document object represents what is displayed within the client window. In the
example above, we showed that the <CODE
CLASS="literal"
>write</CODE
> method tells the client to show
the given HTML and text. The document object contains a number of methods and properties
that can be manipulated within a script. It also is a container for other objects
that hold information about the document:</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Anchor</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45204"
></A
>An array of anchors (<CODE
CLASS="literal"
>&lt;a name=&quot;<CODE
CLASS="replaceable"
><I
>string</I
></CODE
>&quot;&gt; &lt;/a&gt;</CODE
> tags) in the document.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Form</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45213"
></A
>An array of forms contained in the document.</P
></DD
><DT
CLASS="term"
><EM
CLASS="emphasis"
>Link</EM
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45220"
></A
>An array of hyperlinks (<CODE
CLASS="literal"
>&lt;a href=&quot;<CODE
CLASS="replaceable"
><I
>url</I
></CODE
>&quot;&gt; &lt;/a&gt;</CODE
> in the document.</P
></DD
></DL
><P
CLASS="para"
>The anchor and link objects both provide arrays. Each element in the
array is a string with the name of the anchor or location of the hyperlink.
The elements in the link array are read-only. Anchor names can be
manipulated by the script.</P
><P
CLASS="para"
>The form object provides access to the elements of the forms within your
document. Each form is an indexed element of the form object array and
can be accessed like this:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>$obj = $window-&gt;document-&gt;form[1];</PRE
></BLOCKQUOTE
>


This would be the second form in the document. Under this form
object are objects representing the various parameters of the form
and input tags. They are accessible by the names of the attributes
used in the HTML tags.</P
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="PNUT-CH-20-SECT-1.1.1"
>20.1.1.1 Document methods</A
></H4
><P
CLASS="para"
>The following methods can be used on the document object.
They are accessed using the usual object-method syntax: <CODE
CLASS="literal"
>$obj-&gt;method(args)</CODE
>.</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
>write</CODE
> (<CODE
CLASS="replaceable"
><I
>string</I
></CODE
>)</DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45238"
></A
>Places the given <CODE
CLASS="replaceable"
><I
>string</I
></CODE
> into the document at the current position. The
string can contain HTML tags and text that will be interpreted by the browser
or other HTML-capable client.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>writeLn (</CODE
><CODE
CLASS="replaceable"
><I
>string</I
></CODE
>)</DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45248"
></A
>Same as the <CODE
CLASS="literal"
>write</CODE
> method, except that it places a new line after
the given <CODE
CLASS="replaceable"
><I
>string</I
></CODE
>.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>open</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45257"
></A
>Opens a document object for writing. The current document is already open
for writing. This method may be used on another document object from another
frame or window to send output to. After <CODE
CLASS="literal"
>open</CODE
> is
called, output to a document is not displayed immediately; it displays only after a <CODE
CLASS="literal"
>close</CODE
> call is
used on the document.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>close</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45267"
></A
>Closes a document and writes all output to it.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>clear</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45275"
></A
>Clears an output stream on a document.</P
></DD
></DL
></DIV
><DIV
CLASS="sect3"
><H4
CLASS="sect3"
><A
CLASS="title"
NAME="PNUT-CH-20-SECT-1.1.2"
>20.1.1.2 Document properties</A
></H4
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="AUTOID-45280"
></A
>The document object contains a set of properties described below.
Properties can be set or retrieved, and are accessed as hash variables
under the document object. They are accessible via the following
syntax:


<BLOCKQUOTE
CLASS="screen"
><PRE
CLASS="screen"
>$val = $window-&gt;document-&gt;{property};</PRE
></BLOCKQUOTE
>
&#13;</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
><CODE
CLASS="literal"
>linkColor</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The color of hyperlinks in the document, given by an RGB-color value.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>vLinkColor</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The color of visited hyperlinks in the document, given by an RGB-color value.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>bgColor</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The background color of a document, given by an RGB-color value.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>fgColor</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The foreground color of a document, given by an RGB-color value.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>location</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The URL of the current document.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>lastModified</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The timestamp for the last modification of the document.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>title</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The title of the document as given by the <CODE
CLASS="literal"
>&lt;TITLE&gt;</CODE
> tag.</P
></DD
><DT
CLASS="term"
><CODE
CLASS="literal"
>cookie</CODE
></DT
><DD
CLASS="listitem"
><P
CLASS="para"
>The string value of the cookie for the document, if there is one.</P
></DD
></DL
><A
CLASS="indexterm"
NAME="AUTOID-45325"
></A
><A
CLASS="indexterm"
NAME="AUTOID-45326"
></A
><A
CLASS="indexterm"
NAME="AUTOID-45327"
></A
></DIV
></DIV
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch19_18.htm"
TITLE="19.18 OLE Automation"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.18 OLE Automation"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl in a Nutshell"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl in a Nutshell"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="SECT1"
HREF="ch20_02.htm"
TITLE="20.2 Server-Side PerlScript"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 20.2 Server-Side PerlScript"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>19.18 OLE Automation</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>20.2 Server-Side PerlScript</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<p><!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
