<HTML
><HEAD
>
<TITLE>5.3 Watch Your Quotes (Advanced Perl Programming)</TITLE>
<META
NAME="DC.title"
CONTENT="Advanced Perl Programming"><META
NAME="DC.creator"
CONTENT="Sriram Srinivasan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:32:37Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-220-4"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch05_01.htm"
TITLE="5. Eval"><LINK
REL="prev"
HREF="ch05_02.htm"
TITLE="5.2 The Block Form: Exception Handling"><LINK
REL="next"
HREF="ch05_04.htm"
TITLE="5.4 Using Eval for Expression Evaluation"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Perl Programming"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Advanced Perl Programming"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_02.htm"
TITLE="5.2 The Block Form: Exception Handling"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.2 The Block Form: Exception Handling"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch05_01.htm"
TITLE="5. Eval"
>Chapter 5<BR>Eval</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_04.htm"
TITLE="5.4 Using Eval for Expression Evaluation"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.4 Using Eval for Expression Evaluation"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch05-21695"
>5.3 Watch Your Quotes</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch05-idx-951232-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-951232-1"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-951232-2"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-951232-3"
></A
>There are some subtleties associated with the way quotes or blocks are interpreted by Perl. Consider the differences between the following statements: </P
><PRE
CLASS="programlisting"
>$str = '$c = 10';
#
eval  $str;     # 1 
eval  &quot;$str&quot;;   # 2
eval  '$str';   # 3
eval  { $str }; # 4</PRE
><P
CLASS="para"
>Cases 1 and 2 have identical results, and cases 3 and 4 behave identically. Can you see why? The trick is to know what the interpreter does <EM
CLASS="emphasis"
>before</EM
> handing it over to <KBD
CLASS="command"
>eval</KBD
>.</P
><P
CLASS="para"
>In case 1, Perl gives the <EM
CLASS="emphasis"
>contents</EM
> of <KBD
CLASS="command"
>$str</KBD
> to <KBD
CLASS="command"
>eval</KBD
>, just as it would for any other function. Hence <KBD
CLASS="command"
>eval</KBD
> sees the string <CODE
CLASS="literal"
>'$c</CODE
><KBD
CLASS="command"
> = </KBD
><CODE
CLASS="literal"
>10'</CODE
>, treats it like a little program, and executes it.</P
><P
CLASS="para"
>In case 2, Perl does variable interpolation on the double-quoted string before handing it over to <KBD
CLASS="command"
>eval</KBD
>. Again, <KBD
CLASS="command"
>eval</KBD
> sees the contents of <KBD
CLASS="command"
>$str</KBD
>, compiles it, and executes it, assigning 10 to <KBD
CLASS="command"
>$c</KBD
>.</P
><P
CLASS="para"
>In case 3, the argument to <KBD
CLASS="command"
>eval</KBD
> is a single-quoted string, which is not expanded during the variable interpolation stage. For this reason, <KBD
CLASS="command"
>eval</KBD
> sees a hardcoded string (with the characters "$", "s", "t", "r") and treats it like a little program as before. As a standalone program, it is quite useless, of course. Since <KBD
CLASS="command"
>eval</KBD
> returns the result of the last expression, it returns the value of <KBD
CLASS="command"
>$str</KBD
> (the string <KBD
CLASS="command"
>$c</KBD
> <KBD
CLASS="command"
>=</KBD
> <KBD
CLASS="command"
>10</KBD
>). That is, if you say, </P
><PRE
CLASS="programlisting"
>$s = eval '$str';</PRE
><P
CLASS="para"
><KBD
CLASS="command"
>$s</KBD
> will contain <KBD
CLASS="command"
>$c</KBD
> <KBD
CLASS="command"
>=</KBD
> <KBD
CLASS="command"
>10</KBD
>.</P
><P
CLASS="para"
>Case 4 is identical to case 3, except that the code inside the block is checked for syntax errors at compile-time (at the same time as the rest of the script).</P
><P
CLASS="para"
>That's all there is to know about <KBD
CLASS="command"
>eval</KBD
>. Now, let us see how to use it for expression evaluation, exception handling, and efficiency.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_02.htm"
TITLE="5.2 The Block Form: Exception Handling"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.2 The Block Form: Exception Handling"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Perl Programming"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Perl Programming"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_04.htm"
TITLE="5.4 Using Eval for Expression Evaluation"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.4 Using Eval for Expression Evaluation"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>5.2 The Block Form: Exception Handling</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>5.4 Using Eval for Expression Evaluation</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
