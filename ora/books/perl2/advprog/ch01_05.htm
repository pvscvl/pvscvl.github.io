<HTML
><HEAD
>
<TITLE>1.5 Symbolic References (Advanced Perl Programming)</TITLE>
<META
NAME="DC.title"
CONTENT="Advanced Perl Programming"><META
NAME="DC.creator"
CONTENT="Sriram Srinivasan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:30:03Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-220-4"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch01_01.htm"
TITLE="1. Data References and Anonymous Storage"><LINK
REL="prev"
HREF="ch01_04.htm"
TITLE="1.4 Querying a Reference"><LINK
REL="next"
HREF="ch01_06.htm"
TITLE="1.6 A View of the Internals"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Perl Programming"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Advanced Perl Programming"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_04.htm"
TITLE="1.4 Querying a Reference"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.4 Querying a Reference"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch01_01.htm"
TITLE="1. Data References and Anonymous Storage"
>Chapter 1<BR>Data References and Anonymous Storage</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_06.htm"
TITLE="1.6 A View of the Internals"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.6 A View of the Internals"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch01-38915"
>1.5 Symbolic References</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch01-idx-953732-0"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-953732-1"
></A
>Normally, a construct such as <KBD
CLASS="command"
>$$var</KBD
> indicates that <KBD
CLASS="command"
>$var</KBD
> is a reference variable, and the programmer expects this expression to return the value that was pointed to by <KBD
CLASS="command"
>$var</KBD
> when the references were taken.</P
><P
CLASS="para"
>What if <KBD
CLASS="command"
>$var</KBD
> is not a reference variable at all? Instead of complaining loudly, Perl checks to see whether <KBD
CLASS="command"
>$var</KBD
> contains a string. If so, it uses that string as a regular variable name and messes around with this variable! Consider the following:</P
><PRE
CLASS="programlisting"
>$x = 10;
$var = &quot;x&quot;;
$$var = 30;   # Modifies $x to 30 , because $var is a symbolic
              # reference !</PRE
><P
CLASS="para"
>When evaluating <KBD
CLASS="command"
>$$var</KBD
>, Perl first checks to see whether <KBD
CLASS="command"
>$var</KBD
> is a reference, which it is not; it's a string. Perl then decides to give the expression one more chance: it treats <KBD
CLASS="command"
>$var</KBD
>'s contents as a variable identifier (<KBD
CLASS="command"
>$x</KBD
>). The example hence ends up modifying <KBD
CLASS="command"
>$x</KBD
> to 30.</P
><P
CLASS="para"
>It is important to note that symbolic references work only for global variables, not for those marked private using <KBD
CLASS="command"
>my</KBD
>. </P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch01-idx-953736-0"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-953736-1"
></A
>Symbolic references work equally well for arrays and hashes also:</P
><PRE
CLASS="programlisting"
>$var = &quot;x&quot;;
@$var = (1, 2, 3);   # Sets @x to the enumerated list on the right</PRE
><P
CLASS="para"
>Note that the symbol used before <KBD
CLASS="command"
>$var</KBD
> dictates the type of variable to access: <KBD
CLASS="command"
>$$var</KBD
> is equivalent to <KBD
CLASS="command"
>$x</KBD
>, and <CODE
CLASS="literal"
>@</CODE
><KBD
CLASS="command"
>$var</KBD
> is equivalent to saying<B
CLASS="emphasis.bold"
> </B
><CODE
CLASS="literal"
>@</CODE
><KBD
CLASS="command"
>x</KBD
>.</P
><P
CLASS="para"
>This facility is immensely useful, and, for those who have done this kind of thing before with earlier versions of Perl, is much more efficient than using <KBD
CLASS="command"
>eval</KBD
>. Let us say you want your script to process a command-line option such as "<KBD
CLASS="command"
>-Ddebug_level=3</KBD
>" and set the <KBD
CLASS="command"
>$debug_level</KBD
> variable. This is one way of doing it:</P
><PRE
CLASS="programlisting"
>while ($arg = shift @ARGV){
    if ($arg =~ /-D(\w+)=(\w+)/) {
         $var_name = $1; $value = $2;
         $$var_name = $value;     # Or more compactly, $$1 = $2;
    }
}</PRE
><P
CLASS="para"
>On the other hand, Perl's eagerness to try its damnedest to get an expression to work sometimes doesn't help. In the preceding examples, if you expected the program logic to have a real reference instead of a string, then you would have wanted Perl to point it out instead of making assumptions about your usage. Fortunately, there's a way to switch this eagerness off. Perl has a number of compile-time directives, or pragmas. The <KBD
CLASS="command"
>strict</KBD
><A
CLASS="indexterm"
NAME="ch01-idx-953737-0"
></A
> pragma tells Perl to do strict error checking. You can even enumerate specific aspects to be strict about, one of which is `refs':</P
><PRE
CLASS="programlisting"
>use strict 'refs';  # Tell Perl not to allow symbolic references
$var = &quot;x&quot;;
$$var = 30;</PRE
><P
CLASS="para"
>This results in a run-time error whenever you try to use a symbolic reference:</P
><PRE
CLASS="programlisting"
>Can't use string (&quot;x&quot;) as a SCALAR ref while &quot;strict refs&quot; in use at try.pl line 3</PRE
><P
CLASS="para"
>The <KBD
CLASS="command"
>strict</KBD
> directive remains in effect until the end of the block. It can be turned off by saying <KBD
CLASS="command"
>no strict</KBD
> or, more specifically, <KBD
CLASS="command"
>no strict 'refs'</KBD
>.<A
CLASS="indexterm"
NAME="ch01-idx-953734-0"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-953734-1"
></A
></P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_04.htm"
TITLE="1.4 Querying a Reference"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.4 Querying a Reference"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Perl Programming"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Perl Programming"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_06.htm"
TITLE="1.6 A View of the Internals"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.6 A View of the Internals"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>1.4 Querying a Reference</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>1.6 A View of the Internals</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
