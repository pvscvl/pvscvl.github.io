<HTML
><HEAD
>
<TITLE>6.7 Autoloading (Advanced Perl Programming)</TITLE>
<META
NAME="DC.title"
CONTENT="Advanced Perl Programming"><META
NAME="DC.creator"
CONTENT="Sriram Srinivasan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:33:22Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-220-4"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch06_01.htm"
TITLE="6. Modules"><LINK
REL="prev"
HREF="ch06_06.htm"
TITLE="6.6 Nesting Packages"><LINK
REL="next"
HREF="ch06_08.htm"
TITLE="6.8 Accessing the Symbol Table"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Perl Programming"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Advanced Perl Programming"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_06.htm"
TITLE="6.6 Nesting Packages"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.6 Nesting Packages"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch06_01.htm"
TITLE="6. Modules"
>Chapter 6<BR>Modules</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_08.htm"
TITLE="6.8 Accessing the Symbol Table"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.8 Accessing the Symbol Table"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch06-41106"
>6.7 Autoloading</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch06-idx-960847-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-960847-1"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-960847-2"
></A
>If you invoke a function called <KBD
CLASS="command"
>Test::func()</KBD
>, for example, and if <KBD
CLASS="command"
>func()</KBD
> has not been defined in module Test, Perl automatically looks for a subroutine called <KBD
CLASS="command"
>Test::AUTOLOAD()</KBD
><A
CLASS="indexterm"
NAME="ch06-idx-960851-0"
></A
>. If such a subroutine exists, Perl calls it with the arguments that were passed to <KBD
CLASS="command"
>func()</KBD
>. In addition, a variable called <KBD
CLASS="command"
>$AUTOLOAD</KBD
> is set to the full name of the function that was called (&quot;<KBD
CLASS="command"
>Test::func</KBD
>&quot;). Objective-C programmers will recognize this as being similar to the ":forward" declaration, in which an object uses this statement to trap all procedure calls it doesn't handle, in order to forward it to a "delegate."</P
><P
CLASS="para"
>The <KBD
CLASS="command"
>AUTOLOAD</KBD
> subroutine can do just about anything it wants. For example, it can do one of the following:</P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch06-pgfId-959006"
></A
>Handle the call itself. The caller of Test::func does not know that <KBD
CLASS="command"
>AUTOLOAD</KBD
> really handled the call.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch06-pgfId-959007"
></A
>Automatically create a subroutine on the fly (using <KBD
CLASS="command"
>eval</KBD
>) to do the right thing, and then call that new subroutine. In fact, instead of <EM
CLASS="emphasis"
>calling</EM
> that subroutine, you can simply go to it, like this:</P
><PRE
CLASS="programlisting"
>    sub AUTOLOAD {
        ... create subroutine ...
        goto &amp;$AUTOLOAD;  # jump to it
    }</PRE
><P
CLASS="para"
>This is a special form of <KBD
CLASS="command"
>goto</KBD
> that erases the stack-frame of the <KBD
CLASS="command"
>AUTOLOAD</KBD
> routine so that Test::func will not know it has been being called from <KBD
CLASS="command"
>AUTOLOAD</KBD
>.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch06-pgfId-959013"
></A
>Dynamically load an object file (or a DLL in Microsoft Windows), using the standard Dynaloader module, and then execute the appropriate call. This is one of the more popular uses of <KBD
CLASS="command"
>AUTOLOAD</KBD
>.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch06-pgfId-959014"
></A
>Use the <KBD
CLASS="command"
>system</KBD
> function to launch another program by the same name. <EM
CLASS="emphasis"
>Shell.pm</EM
> in your Perl library is the really fancy version of this facility. Here is a simplified version:</P
><PRE
CLASS="programlisting"
>#------------------------------------------------------------------
package Shell;
#------------------------------------------------------------------
sub AUTOLOAD {
    my($program) = $AUTOLOAD;
    # We are just interested in the command name, not in 
    # the package name
    $program =~ s/^.*:://; 
    system (&quot;$program @_&quot;);
}
#------------------------------------------------------------------
use Shell;
ls ('-lR'); # Triggers a call to AUTOLOAD since sub ls() doesn't exist
mail ('-s &quot;This is a test&quot; joe@foo.com &lt; letter.txt');</PRE
></LI
></UL
><P
CLASS="para"
>Autoloading can also be used to delay the loading of subroutines until they are absolutely necessary. A module called <A
CLASS="indexterm"
NAME="ch06-idx-960852-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-960852-1"
></A
>Autosplit (in the standard distribution) is used to split a module into multiple modules, each with one subroutine from the original, and the Autoloader module can subsequently be used to subsequently load only the file corresponding to the called subroutine.<A
CLASS="indexterm"
NAME="ch06-idx-960849-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-960849-1"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-960849-2"
></A
></P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_06.htm"
TITLE="6.6 Nesting Packages"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.6 Nesting Packages"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Perl Programming"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Perl Programming"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_08.htm"
TITLE="6.8 Accessing the Symbol Table"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.8 Accessing the Symbol Table"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>6.6 Nesting Packages</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>6.8 Accessing the Symbol Table</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
