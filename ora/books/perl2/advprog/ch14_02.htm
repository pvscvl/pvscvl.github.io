<HTML
><HEAD
>
<TITLE>14.2 Starting with Perl/Tk (Advanced Perl Programming)</TITLE>
<META
NAME="DC.title"
CONTENT="Advanced Perl Programming"><META
NAME="DC.creator"
CONTENT="Sriram Srinivasan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:38:04Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-220-4"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch14_01.htm"
TITLE="14. User Interfaces with Tk"><LINK
REL="prev"
HREF="ch14_01.htm"
TITLE="14.1 Introduction to GUIs, Tk, and Perl/Tk"><LINK
REL="next"
HREF="ch14_03.htm"
TITLE="14.3 Widget Tour"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Perl Programming"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Advanced Perl Programming"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_01.htm"
TITLE="14.1 Introduction to GUIs, Tk, and Perl/Tk"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 14.1 Introduction to GUIs, Tk, and Perl/Tk"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch14_01.htm"
TITLE="14. User Interfaces with Tk"
>Chapter 14<BR>User Interfaces with Tk</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_03.htm"
TITLE="14.3 Widget Tour"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 14.3 Widget Tour"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch14-25758"
>14.2 Starting with Perl/Tk</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch14-idx-1000756-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000756-1"
></A
>All user interfaces developed with Perl/Tk follow this general sequence:</P
><OL
CLASS="orderedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch14-pgfId-995096"
></A
>Create a <I
CLASS="firstterm"
>main</I
><A
CLASS="indexterm"
NAME="ch14-idx-1000734-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000734-1"
></A
> window (also known as the <I
CLASS="firstterm"
>top-level</I
> window).</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch14-pgfId-995097"
></A
>Instantiate one or more widgets, configure them, and arrange them inside the main window. A widget is simply a collection of data and methods that produce some visible element of the interface, like a button or listbox, and make it behave properly when clicked or otherwise manipulated.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch14-pgfId-995098"
></A
>Start the event loop. After this, the user's actions (events) determine what the program does.</P
></LI
></OL
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch14_02.htm"
TITLE="Simple UI Code"
>Example 14.1</A
> shows these steps executed in serial order; they result in the simple GUI[<A
CLASS="footnote"
HREF="#ch14-pgfId-995105"
>3</A
>] shown in <A
CLASS="xref"
HREF="ch14_02.htm"
TITLE="Our first Perl/TK screen"
>Figure 14.1</A
>.</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch14-pgfId-995105"
>[3]</A
> Though there's nothing interactive about it&nbsp;- nothing much graphical either, actually.</P
></DIV
></BLOCKQUOTE
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch14-30586"
>Example 14.1: Simple UI Code</A
></H4
><PRE
CLASS="programlisting"
>use Tk;                                          # Slurp the module in.
# -------------------------------------------------------
# Create a main window 
# -------------------------------------------------------
$top = MainWindow-&gt;new(); 
$top-&gt;title (&quot;Simple&quot;);
# -------------------------------------------------------
# Instantiate widgets and arrange them
# -------------------------------------------------------
$l = $top-&gt;Label(text   =&gt; 'hello',            # label properties
                 anchor =&gt; 'n',                 # anchor text to &quot;north&quot;
                 relief =&gt; 'groove',            # border style
                 width  =&gt;  10, height =&gt; 3);  # 10 chars wide, 3 high.

$l-&gt;pack();      # Give it a default place within the main window
# -------------------------------------------------------
# Sit in an infinite loop dispatching incoming events.
# -------------------------------------------------------
MainLoop();</PRE
></DIV
><H4
CLASS="figure"
><A
CLASS="title"
NAME="ch14-23635"
>Figure 14.1: Our first Perl/TK screen</A
></H4
><IMG
CLASS="graphic"
SRC="figs/wpa_1401.gif"
ALT="Figure 14.1"><P
CLASS="para"
>This example captures a number of significant Tk concepts (and those of most GUI toolkits in general).</P
><P
CLASS="para"
>The main window is the outermost shell and contains the resize handles, system menu, and minimize and maximize boxes (also known as <I
CLASS="firstterm"
>decorations</I
>). An application can have any number of main windows.</P
><P
CLASS="para"
>The main window is then asked to create a label widget with preconfigured properties. You can change your mind about a widget's properties by invoking the <KBD
CLASS="command"
>configure</KBD
> method on it:<I
CLASS="firstterm"
></I
><A
CLASS="indexterm"
NAME="ch14-idx-1000736-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000736-1"
></A
></P
><PRE
CLASS="programlisting"
>$label-&gt;configure (text =&gt; 'foobar', foreground =&gt; 'red');</PRE
><P
CLASS="para"
>Some widgets, such as Frame and Notebook, are themselves capable of containing other widgets, so the widget hierarchy can be arbitrarily nested. A main window is always at the root of the hierarchy.</P
><P
CLASS="para"
>The widget's <KBD
CLASS="command"
>pack</KBD
><A
CLASS="indexterm"
NAME="ch14-idx-1000740-0"
></A
> method is then called to do <I
CLASS="firstterm"
>geometry management</I
><A
CLASS="indexterm"
NAME="ch14-idx-1000738-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000738-1"
></A
>: the scheme for allocating the position and the width and height for the widget. This call is simply delegated to the widget's <EM
CLASS="emphasis"
>container</EM
>, the main window, which calculates the amount of screen real estate to apportion to each contained widget. This is akin to saying "<KBD
CLASS="command"
>socks-&gt;pack</KBD
>" and having the suitcase figure out where to put the socks and how much to bunch them up. </P
><P
CLASS="para"
>Packing is only one of many geometry management schemes available for placing widgets around. Tk supplies a <I
CLASS="firstterm"
>grid</I
> geometry manager and a <I
CLASS="firstterm"
>placer </I
>; we'll study both in the section <A
CLASS="xref"
HREF="ch14_04.htm"
TITLE="Geometry Management"
>"Geometry Management</A
>" later in this chapter. </P
><P
CLASS="para"
>You can create and pack a widget in one fell swoop, like this:</P
><PRE
CLASS="programlisting"
>$l = $top-&gt;Label (text =&gt; 'Oh my')-&gt;pack();</PRE
><P
CLASS="para"
>In most cases, you don't even need to capture the return value unless you plan to invoke methods on that widget later. The typical approach is to set up all the parameters at creation time and call <KBD
CLASS="command"
>MainLoop</KBD
>. We will use this style extensively in this book.</P
><P
CLASS="para"
>We have already studied the concept of <A
CLASS="indexterm"
NAME="ch14-idx-1000741-0"
></A
>event loops in <A
CLASS="xref"
HREF="ch12_01.htm"
TITLE="Networking with Sockets"
>Chapter 12</A
>, and we will have more to say on this topic in the section <A
CLASS="xref"
HREF="ch14_07.htm"
TITLE="Event Loops"
>"Event Loops</A
>" later in this chapter. Meanwhile, suffice it to say that <KBD
CLASS="command"
>MainLoop</KBD
> is an "event dispatcher," which returns only when you close the window by double-clicking on the system menu. It is essential to call this function; otherwise, you'll never see the form on your display. (Incidentally, it is essential to call <KBD
CLASS="command"
>pack</KBD
> on a widget; otherwise, you'll never see the widget on the display.)</P
><P
CLASS="para"
>That's all there is to it. Now it is a simple matter of knowing which widgets are available, what properties they support, and how to hook them up together. Read on!</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch14-pgfId-995190"
>14.2.1 GUI Forms: The Easy Way</A
></H3
><P
CLASS="para"
>Why write code to create static screens when you can draw them? Stephen <A
CLASS="indexterm"
NAME="ch14-idx-1000742-0"
></A
>Uhler, of the Tcl/Tk team at Sun Microsystems, has written a WYSIWIG GUI builder called <A
CLASS="indexterm"
NAME="ch14-idx-1000743-0"
></A
>SpecTcl (pronounced "spectacle"), with an intention to support multiple languages. This tool has since been customized for Perl/Tk, Java/Tk, and Python/Tk; the resulting variations are called SpecPerl, SpecJava, and SpecPython, respectively. Mark Kvale has done the port for Perl/Tk, and it is available from his home page:[<A
CLASS="footnote"
HREF="#ch14-pgfId-996605"
>4</A
>] <A
CLASS="systemitem.url"
HREF="../../../../../../../www.keck.ucsf.edu/~kvale/specPerl"
>http://www.keck.ucsf.edu/~kvale/specPerl</A
>/.</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch14-pgfId-996605"
>[4]</A
> Sun has since started selling SpecTcl commercially, so SpecPerl is necessarily dependent on older (and free) SpecTcl code. </P
></DIV
></BLOCKQUOTE
><P
CLASS="para"
>Using <A
CLASS="indexterm"
NAME="ch14-idx-1000744-0"
></A
>SpecPerl, you can lay the widgets out visually, set widget-specific properties in corresponding forms, and select colors and fonts from palettes&nbsp;- very convenient.</P
><P
CLASS="para"
>However, in this chapter (and the next two), we will hand-write GUI code instead of using SpecPerl, for a number of reasons. First, we don't build elaborate forms. Second, most of the examples focus more on the dynamic aspects of Tk, and a GUI builder can only help you build static forms. Third, once you understand this chapter, you'll know what SpecPerl produces.<A
CLASS="indexterm"
NAME="ch14-idx-1000732-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000732-1"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_01.htm"
TITLE="14.1 Introduction to GUIs, Tk, and Perl/Tk"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 14.1 Introduction to GUIs, Tk, and Perl/Tk"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Perl Programming"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Perl Programming"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_03.htm"
TITLE="14.3 Widget Tour"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 14.3 Widget Tour"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>14.1 Introduction to GUIs, Tk, and Perl/Tk</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>14.3 Widget Tour</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
