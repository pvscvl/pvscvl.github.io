<HTML
><HEAD
>
<TITLE>B.5 Objects (Advanced Perl Programming)</TITLE>
<META
NAME="DC.title"
CONTENT="Advanced Perl Programming"><META
NAME="DC.creator"
CONTENT="Sriram Srinivasan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:43:19Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-220-4"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="appb_01.htm"
TITLE="B. Syntax Summary"><LINK
REL="prev"
HREF="appb_04.htm"
TITLE="B.4 Modules"><LINK
REL="next"
HREF="appb_06.htm"
TITLE="B.6 Dynamic Behavior"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Perl Programming"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Advanced Perl Programming"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appb_04.htm"
TITLE="B.4 Modules"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: B.4 Modules"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="appendix"
REL="up"
HREF="appb_01.htm"
TITLE="B. Syntax Summary"
>Appendix B<BR>Syntax Summary</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appb_06.htm"
TITLE="B.6 Dynamic Behavior"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: B.6 Dynamic Behavior"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="appb-16132"
>B.5 Objects</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="appb-idx-951415-0"
></A
>Salient points: </P
><UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appb-pgfId-948330"
></A
>A class is a package. There's no keyword such as <CODE
CLASS="literal"
>struct</CODE
> or <CODE
CLASS="literal"
>class</CODE
> to define layout of object.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appb-pgfId-949317"
></A
>You choose object representation&nbsp;- object layout is not dictated by you.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appb-pgfId-948335"
></A
>No special syntax for constructor. You choose the name of the subroutine that is going to allocate the object and return a blessed or typed reference to that object.</P
></LI
></UL
><OL
CLASS="orderedlist"
START="17"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appb-15191"
></A
>Creating an OO package&nbsp;- Method 1 (see also #<A
CLASS="xref"
HREF="appb_05.htm"
TITLE=""
>19</A
>).</P
><P
CLASS="para"
>The C++ class:</P
><PRE
CLASS="programlisting"
>class Employee {
    String _name; int _age; double _salary;
    create (String n, int age) : _name(n), _age(age), _salary(0) {}
    ~Employee {printf (&quot;Ahh ... %s is dying\n&quot;, _name)}
    set_salary (double new_salary) { this-&gt;_salary = new_salary}
};</PRE
><P
CLASS="para"
>becomes:</P
><PRE
CLASS="programlisting"
>package Employee;
sub create {                # Allocator and Initializer 
     my ($pkg, $name, $age) = @_;
     # Allocate anon hash, bless it, return it.
     return (bless {name =&gt; $name, age=&gt; $age, salary=&gt;0}, $pkg);
}
sub DESTROY {               # destructor (like Java's finalize)
    my $obj = shift;
    print &quot;Ahh ... &quot;, $obj-&gt;{name}, &quot; is dying\n&quot;;
}
sub set_salary {
    my ($obj, $new_salary) = @_;
    $obj-&gt;{salary} = $new_salary; # Remember: $obj is ref-to-hash
    return $new_salary;
}</PRE
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appb-28940"
></A
>Using object package:</P
><PRE
CLASS="programlisting"
>use Employee;
$emp = Employee-&gt;new(&quot;Ada&quot;, 35);
$emp-&gt;set_salary(1000);</PRE
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appb-25966"
></A
>Creating OO package&nbsp;- Method 2 (see also #<A
CLASS="xref"
HREF="appb_05.htm"
TITLE=""
>17</A
>). Inherit from ObjectTemplate, use the attributes method to declare attribute names, and obtain the constructor <KBD
CLASS="command"
>new </KBD
>and attribute accessor functions for free:</P
><PRE
CLASS="programlisting"
>package Employee;
use ObjectTemplate;
@ISA = (&quot;ObjectTemplate&quot;);
attributes(&quot;name&quot;, &quot;age&quot;, &quot;salary&quot;);
sub DESTROY {
   my $obj = shift;
   print &quot;Ahh ... &quot;, $obj-&gt;name(), &quot; is dying\n&quot;;
}
sub set_salary {
    my ($obj, $new_salary) = @_;
    $obj-&gt;salary($new_salary); 
} </PRE
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appb-26382"
></A
>Class methods:</P
><PRE
CLASS="programlisting"
>Employee-&gt;print();    # 1. &quot;Arrow notation&quot; used for class method
new Employee ();      # 2. Class method using &quot;Indirect notation&quot;. </PRE
><P
CLASS="para"
>These two class methods must expect the package name as the first parameter, followed by the rest of the arguments.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="appb-35325"
></A
>Instance methods. There are two ways of invoking methods on an object:</P
><PRE
CLASS="programlisting"
>$emp-&gt;promote();
promote $obj;<A
CLASS="indexterm"
NAME="appb-idx-951417-0"
></A
></PRE
></LI
></OL
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appb_04.htm"
TITLE="B.4 Modules"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: B.4 Modules"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Perl Programming"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Perl Programming"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="appb_06.htm"
TITLE="B.6 Dynamic Behavior"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: B.6 Dynamic Behavior"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>B.4 Modules</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>B.6 Dynamic Behavior</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
