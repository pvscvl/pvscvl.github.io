<HTML
><HEAD
>
<TITLE>2.4 Pass the Envelope (Advanced Perl Programming)</TITLE>
<META
NAME="DC.title"
CONTENT="Advanced Perl Programming"><META
NAME="DC.creator"
CONTENT="Sriram Srinivasan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:30:55Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-220-4"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch02_01.htm"
TITLE="2. Implementing Complex Data Structures"><LINK
REL="prev"
HREF="ch02_03.htm"
TITLE="2.3 Professors, Students, Courses"><LINK
REL="next"
HREF="ch02_05.htm"
TITLE="2.5 Pretty-Printing"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Perl Programming"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Advanced Perl Programming"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_03.htm"
TITLE="2.3 Professors, Students, Courses"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.3 Professors, Students, Courses"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch02_01.htm"
TITLE="2. Implementing Complex Data Structures"
>Chapter 2<BR>Implementing Complex Data Structures</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_05.htm"
TITLE="2.5 Pretty-Printing"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.5 Pretty-Printing"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch02-23435"
>2.4 Pass the Envelope</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch02-idx-949554-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-949554-1"
></A
>Let us say we are given a text file containing Academy Award (Oscar) winners by year and category, formatted as follows:</P
><PRE
CLASS="programlisting"
>1995:Actor:Nicholas Cage
1995:Picture:Braveheart
1995:Supporting Actor:Kevin Spacey
1994:Actor:Tom Hanks
1994:Picture:Forrest Gump
1928:Picture:WINGS</PRE
><P
CLASS="para"
>We would like to provide the following services:[<A
CLASS="footnote"
HREF="#ch02-pgfId-946543"
>2</A
>]<UL
CLASS="itemizedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch02-pgfId-944142"
></A
>Given a year and category, print the corresponding entry.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch02-pgfId-944143"
></A
>Given a year, print all entries for that year.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch02-pgfId-944144"
></A
>Given a category, print the year and title of all entries for that category.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch02-pgfId-944145"
></A
>Print all entries sorted by category or by year.</P
></LI
></UL
></P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch02-pgfId-946543"
>[2]</A
> To see real historical databases for the Oscars, look at <A
CLASS="systemitem.url"
HREF="../../../../../../../oscars.guide.com/"
>http://oscars.guide.com/</A
>. (Illustra, an object-oriented database from Informix, is used for the grunge work.)</P
></DIV
></BLOCKQUOTE
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-945658"
>2.4.1 Data Representation</A
></H3
><P
CLASS="para"
>Since we would like to retrieve entries by category or by year, we use a <A
CLASS="indexterm"
NAME="ch02-idx-949560-0"
></A
>double indexing scheme, as shown in <A
CLASS="xref"
HREF="ch02_04.htm"
TITLE="Data structure to represent Oscar winners"
>Figure 2.2</A
>.</P
><H4
CLASS="figure"
><A
CLASS="title"
NAME="ch02-41974"
>Figure 2.2: Data structure to represent Oscar winners</A
></H4
><IMG
CLASS="graphic"
SRC="figs/wpa_0202.gif"
ALT="Figure 2.2"><P
CLASS="para"
>Each entry includes a category, a year, and the name of the corresponding winner. We choose to keep this information in an anonymous array (an anonymous hash would do just as well). The two indices <KBD
CLASS="command"
>%year_index</KBD
> and <KBD
CLASS="command"
>%category_index</KBD
> map the year and category to anonymous arrays containing references to the entries. Here is one way to build this structure:</P
><PRE
CLASS="programlisting"
>open (F, &quot;oscar.txt&quot;) || die &quot;Could not open database: $:&quot;;
%category_index = (); %year_index = ();
while ($line = &lt;F&gt;) {
    chomp $line;
    ($year, $category, $name) = split (/:/, $line);
    create_entry($year, $category, $name) if $name;
}

sub create_entry {             # create_entry (year, category, name)
    my($year, $category, $name) = @_;
    # Create an anonymous array for each entry
    $rlEntry = [$year, $category, $name];
    # Add this to the two indices
    push (@{$year_index {$year}}, $rlEntry);         # By Year
    push (@{$category_index{$category}}, $rlEntry);  # By Category
}  </PRE
><P
CLASS="para"
>Notice that each <KBD
CLASS="command"
>push</KBD
> statement does a fair bit of work. It creates an entry in the index (if required), hangs an anonymous array off that entry (if required), and pushes the reference to the entry into that array.</P
><P
CLASS="para"
>Another important thing to notice is how braces have been used to specify the correct precedence in the expression <CODE
CLASS="literal"
>@{$year_index{$year}}</CODE
>. If we had omitted the braces, the expression <KBD
CLASS="command"
>@$year_index</KBD
> would be evaluated first and then indexed as a hash, according to the rules explained in the section <A
CLASS="xref"
HREF="ch01_01.htm"
TITLE="Confusion About Precedence"
>"Confusion About Precedence"</A
> in <A
CLASS="xref"
HREF="ch01_01.htm"
TITLE="Data References and Anonymous Storage"
>Chapter 1</A
>.<A
CLASS="indexterm"
NAME="ch02-idx-949562-0"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-944223"
>2.4.2 Print All Entries for a Given Year</A
></H3
><P
CLASS="para"
>This is a simple matter of traversing the <KBD
CLASS="command"
>%year_index</KBD
> hash:</P
><PRE
CLASS="programlisting"
>sub print_entries_for_year {
    my($year) = @_;
    print (&quot;Year : $year \n&quot;);
    foreach $rlEntry (@{$year_index{$year}}) {
        print (&quot;\t&quot;,$rlEntry-&gt;[1], &quot;  : &quot;,$rlEntry-&gt;[2], &quot;\n&quot;);
    }
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-944233"
>2.4.3 Print All Entries Sorted by Year</A
></H3
><P
CLASS="para"
>We already know how to print entries for a given year. Find out all years for which we have data, sort them, and call <KBD
CLASS="command"
>print_entries_for_year </KBD
>for each year: </P
><PRE
CLASS="programlisting"
>sub print_all_entries_for_year {
    foreach $year (sort keys %year_index) {
        print_entries_for_year($year);
    }
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-944240"
>2.4.4 Print a Specific Entry, Given a Year and Category</A
></H3
><P
CLASS="para"
>We can traverse either index, and we choose to traverse the <KBD
CLASS="command"
>%year_index</KBD
> index, since there are substantially fewer categories per year than the number of years for which a category is valid:</P
><PRE
CLASS="programlisting"
>sub print_entry {
    my($year, $category) = @_;
    foreach $rlEntry (@{$year_index{$year}}) {
        if ($rlEntry-&gt;[1] eq $category) {
            print &quot;$category ($year), &quot;, $rlEntry-&gt;[2], &quot;\n&quot;;
            return;
        }
    }
    print &quot;No entry for $category ($year) \n&quot;;<A
CLASS="indexterm"
NAME="ch02-idx-949557-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-949557-1"
></A
>
}</PRE
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_03.htm"
TITLE="2.3 Professors, Students, Courses"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.3 Professors, Students, Courses"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Perl Programming"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Perl Programming"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_05.htm"
TITLE="2.5 Pretty-Printing"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.5 Pretty-Printing"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>2.3 Professors, Students, Courses</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>2.5 Pretty-Printing</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
