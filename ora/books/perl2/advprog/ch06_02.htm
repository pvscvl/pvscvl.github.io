<HTML
><HEAD
>
<TITLE>6.2 Packages and Files (Advanced Perl Programming)</TITLE>
<META
NAME="DC.title"
CONTENT="Advanced Perl Programming"><META
NAME="DC.creator"
CONTENT="Sriram Srinivasan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:33:03Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-220-4"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch06_01.htm"
TITLE="6. Modules"><LINK
REL="prev"
HREF="ch06_01.htm"
TITLE="6.1 Basic Package"><LINK
REL="next"
HREF="ch06_03.htm"
TITLE="6.3 Package Initialization and Destruction"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Perl Programming"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Advanced Perl Programming"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_01.htm"
TITLE="6.1 Basic Package"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.1 Basic Package"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch06_01.htm"
TITLE="6. Modules"
>Chapter 6<BR>Modules</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_03.htm"
TITLE="6.3 Package Initialization and Destruction"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.3 Package Initialization and Destruction"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch06-19089"
>6.2 Packages and Files</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch06-idx-960772-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-960772-1"
></A
>The same package declaration can be present in multiple files. Or multiple packages can be declared in one file. By convention, a package is usually assigned its own file and named <EM
CLASS="emphasis"
>package.pm</EM
> or <EM
CLASS="emphasis"
>package.pl</EM
>. <A
CLASS="indexterm"
NAME="ch06-idx-960810-0"
></A
>Files with the suffix <I
CLASS="filename"
>.pm</I
> are called Perl <I
CLASS="firstterm"
>modules</I
>, and packages inside files with the suffix <I
CLASS="filename"
>.pl</I
> are usually referred to as <I
CLASS="firstterm"
>libraries</I
><A
CLASS="indexterm"
NAME="ch06-idx-960811-0"
></A
>. The former naming convention is preferred now because the <KBD
CLASS="command"
>use</KBD
> statement requires it, as we will soon see.</P
><P
CLASS="para"
>The <KBD
CLASS="command"
>require</KBD
><A
CLASS="indexterm"
NAME="ch06-idx-960812-0"
></A
> keyword simply loads a file into your program (<EM
CLASS="emphasis"
>sources</EM
> it, in shell parlance). This is identical in spirit to <CODE
CLASS="literal"
>#include</CODE
> in C, except that Perl does not bother about a file that has already been loaded:[<A
CLASS="footnote"
HREF="#ch06-pgfId-957137"
>1</A
>]<PRE
CLASS="programlisting"
>require &quot;test.pl&quot;; # load test.pl if it hasn't already been loaded</PRE
></P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch06-pgfId-957137"
>[1]</A
> Another important distinction from C or C++ is that modules are not split up into separate declaration and implementation files (header files versus ".c" files) and it is not necessary to go through a linker to bring modules together.</P
></DIV
></BLOCKQUOTE
><P
CLASS="para"
>If you omit the suffix and the quotes, a <I
CLASS="filename"
>.pm</I
> suffix is assumed. The <KBD
CLASS="command"
>use</KBD
><A
CLASS="indexterm"
NAME="ch06-idx-960813-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-960813-1"
></A
> statement is similar in that respect, but is more restrictive in that it accepts only module names, not filenames. So, while there is no necessary relation between module names and filenames in general, <KBD
CLASS="command"
>use</KBD
> does force you to adopt a standard naming convention, which is a very good thing indeed, in my opinion. But there is more to <KBD
CLASS="command"
>use</KBD
> than just syntactic sugar.</P
><P
CLASS="para"
>The big difference between <KBD
CLASS="command"
>use</KBD
> and <KBD
CLASS="command"
>require</KBD
> is that the <KBD
CLASS="command"
>use</KBD
> statement is executed as soon as it is <EM
CLASS="emphasis"
>parsed</EM
>. For this reason, the following attempt to load a module dynamically won't work, because the assignment statement is executed only after everything has been parsed and compiled:</P
><PRE
CLASS="programlisting"
>$pkg_name = &quot;Account&quot;;  # executes at run-time
use $pkg_name;          # executes at compile-time</PRE
><P
CLASS="para"
>It is, in fact, a syntax error; you have to use <KBD
CLASS="command"
>require</KBD
> in this case. The advantage of <KBD
CLASS="command"
>use</KBD
> is that when a program starts executing, there's a guarantee that all required modules have been successfully loaded, and there won't be any surprises at run-time.</P
><P
CLASS="para"
>Another important difference between <KBD
CLASS="command"
>use</KBD
> and <KBD
CLASS="command"
>require</KBD
> is described later, in the section <A
CLASS="xref"
HREF="ch06_05.htm"
TITLE="Importing Symbols"
>"Importing Symbols</A
>."</P
><P
CLASS="para"
>When a file is <KBD
CLASS="command"
>require</KBD
>'d or <KBD
CLASS="command"
>use</KBD
>'d, it is expected to return a Boolean success value (zero for failure, nonzero for success). That is, the last executing statement at global scope must be a statement such as "<KBD
CLASS="command"
>return</KBD
> <KBD
CLASS="command"
>1;</KBD
>" or just "<KBD
CLASS="command"
>1;</KBD
>". Note that this is not necessarily the last statement in the file; it is just the last executing statement.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-955483"
>6.2.1 Load Path</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch06-idx-960814-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-960814-1"
></A
>Perl first looks for the file given to <KBD
CLASS="command"
>use</KBD
> or <KBD
CLASS="command"
>require</KBD
> in the current directory and then looks up the <KBD
CLASS="command"
>@INC</KBD
> built-in array to search the include paths. By default, <KBD
CLASS="command"
>@INC</KBD
> contains a few standard directory names specified when the interpreter was installed and built. On my machine, <KBD
CLASS="command"
>@INC</KBD
> looks like this:</P
><PRE
CLASS="programlisting"
>%<B
CLASS="emphasis.bold"
> perl -e 'print &quot;@INC \n&quot;;'</B
>
/opt/lib/perl5/sun4-solaris/5.004 /opt/lib/perl5 /opt/lib/perl5/site_perl/sun4-solaris /opt/lib/perl5/site_perl .</PRE
><P
CLASS="para"
>You can also use <KBD
CLASS="command"
>perl</KBD
> <KBD
CLASS="command"
>-V</KBD
><A
CLASS="indexterm"
NAME="ch06-idx-960815-0"
></A
> to get this and other configuration information.</P
><P
CLASS="para"
>If you want to specify additional directories of your own, you have these choices:</P
><OL
CLASS="orderedlist"
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch06-pgfId-942924"
></A
>Use the <KBD
CLASS="command"
>-I</KBD
><A
CLASS="indexterm"
NAME="ch06-idx-960816-0"
></A
> command-line option as you would with the C preprocessor:</P
><PRE
CLASS="programlisting"
><B
CLASS="emphasis.bold"
>   </B
>%<B
CLASS="emphasis.bold"
> perl -I/home/sriram/perl -I/local/mylib script.pl</B
></PRE
><P
CLASS="para"
>I sometimes have instrumented or development versions of my modules in a separate directory. This option makes it easy to use these modules without having to change any of the code that uses them.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch06-pgfId-942926"
></A
>Set the <KBD
CLASS="command"
>PERL5LIB</KBD
><A
CLASS="indexterm"
NAME="ch06-idx-960817-0"
></A
> environment variable as a set of paths, separated by colons.</P
></LI
><LI
CLASS="listitem"
><P
CLASS="para"
><A
CLASS="listitem"
NAME="ch06-pgfId-946713"
></A
>Modify <KBD
CLASS="command"
>@INC</KBD
> before calling <KBD
CLASS="command"
>require</KBD
>:</P
><PRE
CLASS="programlisting"
>   unshift (@INC, &quot;/usr/perl/include&quot;); # Prepend a directory name
   require 'foo.pl';<A
CLASS="indexterm"
NAME="ch06-idx-960790-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-960790-1"
></A
></PRE
></LI
></OL
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_01.htm"
TITLE="6.1 Basic Package"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.1 Basic Package"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Perl Programming"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Perl Programming"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_03.htm"
TITLE="6.3 Package Initialization and Destruction"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.3 Package Initialization and Destruction"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>6.1 Basic Package</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>6.3 Package Initialization and Destruction</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
