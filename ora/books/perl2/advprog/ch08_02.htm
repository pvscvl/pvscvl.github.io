<HTML
><HEAD
>
<TITLE>8.2 Delegation (Advanced Perl Programming)</TITLE>
<META
NAME="DC.title"
CONTENT="Advanced Perl Programming"><META
NAME="DC.creator"
CONTENT="Sriram Srinivasan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:34:41Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-220-4"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch08_01.htm"
TITLE="8. Object Orientation: The Next Few Steps"><LINK
REL="prev"
HREF="ch08_01.htm"
TITLE="8.1 Efficient Attribute Storage"><LINK
REL="next"
HREF="ch08_03.htm"
TITLE="8.3 On Inheritance"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Perl Programming"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Advanced Perl Programming"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_01.htm"
TITLE="8.1 Efficient Attribute Storage"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.1 Efficient Attribute Storage"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch08_01.htm"
TITLE="8. Object Orientation: The Next Few Steps"
>Chapter 8<BR>Object Orientation: The Next Few Steps</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_03.htm"
TITLE="8.3 On Inheritance"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.3 On Inheritance"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch08-27573"
>8.2 Delegation</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch08-idx-968003-0"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-968003-1"
></A
>Delegation is a technique whereby an object forwards method calls to an appointed <EM
CLASS="emphasis"
>delegate</EM
> object. In the following example, an <CODE
CLASS="literal"
>Employee</CODE
> class simply delegates all tax-related functionality to the <KBD
CLASS="command"
>$acccounting_dept</KBD
> object:</P
><PRE
CLASS="programlisting"
>package Employee;
sub compute_after_tax_income {
    $me = $_[0];
    return $accounting_dept-&gt;compute_after_tax_income($me);
}</PRE
><P
CLASS="para"
>There are cases in which you want all method calls that are not handled by a class to be automatically forwarded to a delegate. This is a cinch in Perl, since the <KBD
CLASS="command"
>AUTOLOAD</KBD
> function is called when a procedure is not found within that package or its base classes:</P
><PRE
CLASS="programlisting"
>package Employee;
sub AUTOLOAD {
    my $obj = $_[0];
    # $AUTOLOAD contains the name of the missing method

    # Never propagate DESTROY methods
    return if $AUTOLOAD =~ /::DESTROY$/;

    # Strip it off its leading package name (such as Employee::)
    $AUTOLOAD =~ s/^.*:://; 
    $obj-&gt;{delegate}-&gt;$AUTOLOAD(@_); # Note, $obj is still part of @_,
                                     # so the delegated function knows
                                     # the original target
}</PRE
><P
CLASS="para"
>Notice that <KBD
CLASS="command"
>AUTOLOAD</KBD
> is called if <KBD
CLASS="command"
>DESTROY</KBD
> is not defined, and it is important that you not forward that message, or the delegate will think Perl is about to destroy it and release its resources prematurely. </P
><P
CLASS="para"
>This technique is often employed in the guts of client/server libraries. In a typical client/server system, the server has the "real" objects. But the system is written in such a way that a client can remotely invoke a method of the object, with familiar OO syntax. For example, if a client program wants to invoke a method on a remote bank account, it should be able to say something like this:</P
><PRE
CLASS="programlisting"
>$account-&gt;deposit(100); # Deposit 100 bucks.</PRE
><P
CLASS="para"
>On the surface, it seems like an ordinary method call. What the library hides from you is that the <KBD
CLASS="command"
>deposit()</KBD
> functionality is actually sitting on a different machine. How is this accomplished? Well, the <KBD
CLASS="command"
>$account</KBD
> object reference is actually a reference to a lightweight <EM
CLASS="emphasis"
>proxy</EM
> object on the client side. Its sole purpose is to forward calls to the remote machine (by sending messages over a socket, for example) and to wait for the response to come back. In other words, the <KBD
CLASS="command"
>account</KBD
> object is not the real account. It is only a message forwarder. It delegates its functionality to the remote object with the help of the messaging system underneath. <A
CLASS="indexterm"
NAME="ch08-idx-968005-0"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-968005-1"
></A
></P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_01.htm"
TITLE="8.1 Efficient Attribute Storage"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.1 Efficient Attribute Storage"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Perl Programming"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Perl Programming"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_03.htm"
TITLE="8.3 On Inheritance"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.3 On Inheritance"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>8.1 Efficient Attribute Storage</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>8.3 On Inheritance</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
