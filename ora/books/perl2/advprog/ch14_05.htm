<HTML
><HEAD
>
<TITLE>14.5 Timers (Advanced Perl Programming)</TITLE>
<META
NAME="DC.title"
CONTENT="Advanced Perl Programming"><META
NAME="DC.creator"
CONTENT="Sriram Srinivasan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:39:06Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-220-4"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch14_01.htm"
TITLE="14. User Interfaces with Tk"><LINK
REL="prev"
HREF="ch14_04.htm"
TITLE="14.4 Geometry Management"><LINK
REL="next"
HREF="ch14_06.htm"
TITLE="14.6 Event Bindings"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Perl Programming"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Advanced Perl Programming"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_04.htm"
TITLE="14.4 Geometry Management"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 14.4 Geometry Management"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch14_01.htm"
TITLE="14. User Interfaces with Tk"
>Chapter 14<BR>User Interfaces with Tk</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_06.htm"
TITLE="14.6 Event Bindings"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 14.6 Event Bindings"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch14-15487"
>14.5 Timers</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch14-idx-1000878-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000878-1"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000878-2"
></A
>Tk provides a lightweight timer mechanism that can call back a procedure after a specified delay (specified in milliseconds). To create one-shot timers, use the <KBD
CLASS="command"
>after</KBD
><A
CLASS="indexterm"
NAME="ch14-idx-1000879-0"
></A
> method on any widget; for repeating timers, use <KBD
CLASS="command"
>repeat</KBD
><A
CLASS="indexterm"
NAME="ch14-idx-1000880-0"
></A
>. In the following example, the button changes its label when pressed and resets its label after 300 milliseconds:</P
><PRE
CLASS="programlisting"
>$button-&gt;configure (text =&gt; 'hello',
                    command =&gt; \&amp;change_title));
sub change_title {
    my ($old_title) = $button-&gt;cget('text');
    $button-&gt;configure (text =&gt; 'Ouch'); 
    $button-&gt;after (300, 
                    sub {$button-&gt;configure(text =&gt; $old_title)});
}</PRE
><P
CLASS="para"
>We will use <KBD
CLASS="command"
>after</KBD
> extensively in <A
CLASS="xref"
HREF="ch15_01.htm"
TITLE="GUI Example: Tetris"
>Chapter 15</A
> for animation.</P
><P
CLASS="para"
>Both <KBD
CLASS="command"
>after</KBD
> and <KBD
CLASS="command"
>repeat</KBD
> return timer objects. Because these mechanisms are quite efficient and lightweight (unlike using <KBD
CLASS="command"
>alarm()</KBD
><A
CLASS="indexterm"
NAME="ch14-idx-1000882-0"
></A
> and <KBD
CLASS="command"
>SIGALRM</KBD
>), you can have a large number of timers. To cancel a timer, use <KBD
CLASS="command"
>cancel</KBD
>:</P
><PRE
CLASS="programlisting"
>$timer = $button-&gt;after(100, sub {print &quot;foo&quot;});
$timer-&gt;cancel();</PRE
><P
CLASS="para"
>Tk's time-out facility, unlike <KBD
CLASS="command"
>SIGALRM</KBD
><A
CLASS="indexterm"
NAME="ch14-idx-1000881-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000881-1"
></A
>, is not preemptive. It requires that control return to the event loop before it can check if it is time for the next timer to fire. A long subroutine can delay the timed event.</P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_04.htm"
TITLE="14.4 Geometry Management"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 14.4 Geometry Management"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Perl Programming"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Perl Programming"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_06.htm"
TITLE="14.6 Event Bindings"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 14.6 Event Bindings"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>14.4 Geometry Management</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>14.6 Event Bindings</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
