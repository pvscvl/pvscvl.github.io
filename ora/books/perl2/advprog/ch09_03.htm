<HTML
><HEAD
>
<TITLE>9.3 Tying Hashes (Advanced Perl Programming)</TITLE>
<META
NAME="DC.title"
CONTENT="Advanced Perl Programming"><META
NAME="DC.creator"
CONTENT="Sriram Srinivasan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:34:55Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-220-4"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch09_01.htm"
TITLE="9. Tie"><LINK
REL="prev"
HREF="ch09_02.htm"
TITLE="9.2 Tying Arrays"><LINK
REL="next"
HREF="ch09_04.htm"
TITLE="9.4 Tying Filehandles"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Perl Programming"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Advanced Perl Programming"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_02.htm"
TITLE="9.2 Tying Arrays"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.2 Tying Arrays"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch09_01.htm"
TITLE="9. Tie"
>Chapter 9<BR>Tie</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_04.htm"
TITLE="9.4 Tying Filehandles"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.4 Tying Filehandles"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch09-42446"
>9.3 Tying Hashes</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch09-idx-955111-0"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-955111-1"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-955111-2"
></A
>Accesses to tied hash tables are fully supported, unlike arrays. The tie-hash facility allows you to trap operations on the entire hash table (<KBD
CLASS="command"
>%h</KBD
> <KBD
CLASS="command"
>=</KBD
> <KBD
CLASS="command"
>()</KBD
>), accesses to individual elements, and queries (<KBD
CLASS="command"
>exists</KBD
>, <KBD
CLASS="command"
>defined</KBD
>, <KBD
CLASS="command"
>each</KBD
>, <KBD
CLASS="command"
>keys</KBD
>, and <KBD
CLASS="command"
>values</KBD
>). <A
CLASS="xref"
HREF="ch09_03.htm"
TITLE="tie and Hash Access"
>Table 9.3</A
> shows how these actions are mapped to method invocations on the tied object. </P
><BR><TABLE
CLASS="table"
BORDER="1"
CELLPADDING="3"
><CAPTION
CLASS="table"
><A
CLASS="title"
NAME="ch09-38081"
>Table 9.3: tie and Hash Access</A
></CAPTION
><THEAD
CLASS="thead"
><TR
CLASS="row"
VALIGN="TOP"
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>When you say:</P
></TH
><TH
CLASS="entry"
ALIGN="LEFT"
ROWSPAN="1"
COLSPAN="1"
><P
CLASS="para"
>Perl translates it to:</P
></TH
></TR
></THEAD
><TBODY
CLASS="tbody"
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>tie %h, 'Foo', 'a' =&gt; 1</PRE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>$obj = Foo-&gt;TIEHASH('a',1);</PRE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>$h{a}</PRE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>$obj-&gt;FETCH ('a')</PRE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>$h{a} = 1</PRE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>$obj-&gt;STORE ('a', 1)</PRE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>delete $h{a}</PRE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>$obj-&gt;DELETE('a')</PRE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>exists $h{a}</PRE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>$obj-&gt;EXISTS('a')</PRE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>keys (%h),values(%h)
each (%h)</PRE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>$lk = $obj-&gt;FIRSTKEY ();
do {
   $val = $obj-&gt;FETCH{$lk};
} while ($lk = $obj-&gt;NEXTKEY($lk));</PRE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>%h = ()</PRE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>$obj-&gt;CLEAR()</PRE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>%h = (a=&gt; 1)</PRE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>$obj-&gt;CLEAR()
$obj-&gt;STORE('a',1)</PRE
></TD
></TR
><TR
CLASS="row"
VALIGN="TOP"
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>untie %h</PRE
></TD
><TD
CLASS="entry"
ROWSPAN="1"
COLSPAN="1"
><PRE
CLASS="programlisting"
>$obj-&gt;DESTROY()</PRE
></TD
></TR
></TBODY
></TABLE
><P
CLASS="para"
><KBD
CLASS="command"
>FIRSTKEY</KBD
><A
CLASS="indexterm"
NAME="ch09-idx-955153-0"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-955153-1"
></A
> and <KBD
CLASS="command"
>NEXTKEY</KBD
> are expected to return the next key in the sequence. This suffices if <KBD
CLASS="command"
>keys</KBD
> is invoked by the calling code; but if <KBD
CLASS="command"
>values</KBD
> or <KBD
CLASS="command"
>each</KBD
> is called, it calls <KBD
CLASS="command"
>FETCH</KBD
> for each key.</P
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch09-idx-955154-0"
></A
>The most common (and natural-looking) use of <KBD
CLASS="command"
>tie</KBD
> is as a frontend for DBM files, which, as we mentioned earlier, are disk-based hash tables. Perl comes enabled with various flavors of DBM support. The following example uses the <A
CLASS="indexterm"
NAME="ch09-idx-955156-0"
></A
>SDBM module, which comes with the standard Perl distribution: </P
><PRE
CLASS="programlisting"
>use Fcntl;
use SDBM_File;
tie (%h, 'SDBM_File', 'foo.dbm', O_RDWR|O_CREAT, 0640)
     || die $!;                    # Open dbm file
$h{a} = 10;                        # Write to file transparently
while (($k, $v) = each %h) {       # Iterate over all keys in file
    print &quot;$k,$v\n&quot;
}
untie %h;                          # Flush and close the dbm file</PRE
><P
CLASS="para"
>Perl old-timers may recognize the similarity to the <KBD
CLASS="command"
>dbm_open</KBD
> function. <KBD
CLASS="command"
>tie</KBD
> just happens to be a more general facility. </P
><P
CLASS="para"
>Tied hashes have the same problem outlined in the last section: You cannot store references unless you explicitly serialize the structures referred to into one stream (from which you can recreate the data structure later). The MLDBM module, which we will explore further in <A
CLASS="xref"
HREF="ch10_01.htm"
TITLE="Persistence"
>Chapter 10</A
>, attempts to tie multilevel hashes to a DBM file.</P
><P
CLASS="para"
>Two other modules in the standard Perl distribution use <KBD
CLASS="command"
>tie</KBD
> internally. Config makes all information known to the build environment (that is, to <KBD
CLASS="command"
>configure</KBD
>) as a hash (<KBD
CLASS="command"
>%Config</KBD
>) in the caller's namespace, like this:</P
><PRE
CLASS="programlisting"
>use Config;
while (($k, $v) = each %Config) {
    print &quot;$k =&gt; $v \n&quot;;
}</PRE
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch09-idx-955155-0"
></A
>Env is another standard library that uses <KBD
CLASS="command"
>tie</KBD
> to make environment variables appear as ordinary variables. We saw a non-<KBD
CLASS="command"
>tie</KBD
> variant of Env in the section <A
CLASS="xref"
HREF="ch06_05.htm"
TITLE="Importing Symbols"
>"Importing Symbols"</A
> in <A
CLASS="xref"
HREF="ch06_01.htm"
TITLE="Modules"
>Chapter 6, <CITE
CLASS="chapter"
>Modules</CITE
></A
>.<A
CLASS="indexterm"
NAME="ch09-idx-955114-0"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-955114-1"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-955114-2"
></A
></P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_02.htm"
TITLE="9.2 Tying Arrays"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.2 Tying Arrays"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Perl Programming"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Perl Programming"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_04.htm"
TITLE="9.4 Tying Filehandles"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.4 Tying Filehandles"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>9.2 Tying Arrays</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>9.4 Tying Filehandles</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
