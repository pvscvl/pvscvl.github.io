<HTML
><HEAD
>
<TITLE>3.3 Typeglobs and References (Advanced Perl Programming)</TITLE>
<META
NAME="DC.title"
CONTENT="Advanced Perl Programming"><META
NAME="DC.creator"
CONTENT="Sriram Srinivasan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:31:31Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-220-4"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch03_01.htm"
TITLE="3. Typeglobs and Symbol Tables"><LINK
REL="prev"
HREF="ch03_02.htm"
TITLE="3.2 Typeglobs"><LINK
REL="next"
HREF="ch03_04.htm"
TITLE="3.4 Filehandles, Directory Handles, and Formats"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Perl Programming"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Advanced Perl Programming"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_02.htm"
TITLE="3.2 Typeglobs"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2 Typeglobs"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch03_01.htm"
TITLE="3. Typeglobs and Symbol Tables"
>Chapter 3<BR>Typeglobs and Symbol Tables</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_04.htm"
TITLE="3.4 Filehandles, Directory Handles, and Formats"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.4 Filehandles, Directory Handles, and Formats"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch03-19676"
>3.3 Typeglobs and References</A
></H2
><P
CLASS="para"
>You might have noticed that both typeglobs and references point to <EM
CLASS="emphasis"
>values</EM
>. A variable <KBD
CLASS="command"
>$a</KBD
> can be seen simply as a dereference of a typeglob <KBD
CLASS="command"
>${*a}</KBD
>. For this reason, Perl makes the two expressions <KBD
CLASS="command"
>${\$a}</KBD
> and <KBD
CLASS="command"
>${*a}</KBD
> refer to the same scalar value. This equivalence of typeglobs and ordinary references has some interesting properties and results in three useful idioms, described here.</P
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch03-pgfId-950671"
>3.3.1 Selective Aliasing</A
></H3
><P
CLASS="para"
>Earlier, we saw how a statement like <KBD
CLASS="command"
>*b</KBD
> <KBD
CLASS="command"
>=</KBD
> <KBD
CLASS="command"
>*a</KBD
> makes everything named "<CODE
CLASS="literal"
>a</CODE
>" be referred to as "<CODE
CLASS="literal"
>b</CODE
>" also. There is a way to create <A
CLASS="indexterm"
NAME="ch03-idx-954070-0"
></A
><A
CLASS="indexterm"
NAME="ch03-idx-954070-1"
></A
><A
CLASS="indexterm"
NAME="ch03-idx-954070-2"
></A
>selective aliases, using the reference syntax:</P
><PRE
CLASS="programlisting"
>*b = \$a;     # Assigning a scalar reference to a typeglob</PRE
><P
CLASS="para"
>Perl arranges it such that <KBD
CLASS="command"
>$b</KBD
> and <KBD
CLASS="command"
>$a</KBD
> are aliases, but <KBD
CLASS="command"
>@b</KBD
> and <KBD
CLASS="command"
>@a</KBD
> (or <KBD
CLASS="command"
>&amp;b</KBD
> and <KBD
CLASS="command"
>&amp;a</KBD
>, and so on) are not.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch03-pgfId-950675"
>3.3.2 Constants</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch03-idx-954071-0"
></A
><A
CLASS="indexterm"
NAME="ch03-idx-954071-1"
></A
><A
CLASS="indexterm"
NAME="ch03-idx-954071-2"
></A
><A
CLASS="indexterm"
NAME="ch03-idx-954071-3"
></A
>We get read-only variables by creating references to constants, like this:</P
><PRE
CLASS="programlisting"
>*PI = \3.1415927;
# Now try to modify it.
$PI = 10;  </PRE
><P
CLASS="para"
>Perl complains: "Modification of a read-only value attempted at try.pl line 3."</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch03-pgfId-950681"
>3.3.3 Naming Anonymous Subroutines</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch03-idx-954076-0"
></A
><A
CLASS="indexterm"
NAME="ch03-idx-954076-1"
></A
><A
CLASS="indexterm"
NAME="ch03-idx-954076-2"
></A
>We will cover anonymous subroutines in the next chapter, so you might want to come back to this example later.</P
><P
CLASS="para"
>If you find it painful to call a subroutine indirectly through a reference (<KBD
CLASS="command"
>&amp;$rs()</KBD
>), you can assign a name to it for convenience:</P
><PRE
CLASS="programlisting"
>sub generate_greeting {
     my ($greeting) = @_;
        sub { print &quot;$greeting world\n&quot;;}
}
$rs = generate_greeting(&quot;hello&quot;);
# Instead of invoking it as $&amp;rs(), give it your own name.
*greet = $rs;
greet();    # Equivalent to calling $&amp;rs(). Prints &quot;hello world\n&quot;</PRE
><P
CLASS="para"
>Of course, you can also similarly give a name to other types of references.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch03-pgfId-950692"
>3.3.4 References to Typeglobs</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch03-idx-954085-0"
></A
><A
CLASS="indexterm"
NAME="ch03-idx-954085-1"
></A
>We have seen how references and typeglobs are equivalent (in the sense that references can be assigned to typeglobs). Perl also allows you to take references <EM
CLASS="emphasis"
>to</EM
> typeglobs by prefixing it with a backslash as usual:</P
><PRE
CLASS="programlisting"
>$ra = \*a;</PRE
><P
CLASS="para"
>References to typeglobs are not used much in practice, because it is very efficient to pass typeglobs around directly. This is similar to the case of ordinary scalars, which don't need references to pass them around for efficiency.</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_02.htm"
TITLE="3.2 Typeglobs"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 3.2 Typeglobs"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Perl Programming"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Perl Programming"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch03_04.htm"
TITLE="3.4 Filehandles, Directory Handles, and Formats"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 3.4 Filehandles, Directory Handles, and Formats"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>3.2 Typeglobs</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>3.4 Filehandles, Directory Handles, and Formats</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
