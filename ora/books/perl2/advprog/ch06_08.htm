<HTML
><HEAD
>
<TITLE>6.8 Accessing the Symbol Table (Advanced Perl Programming)</TITLE>
<META
NAME="DC.title"
CONTENT="Advanced Perl Programming"><META
NAME="DC.creator"
CONTENT="Sriram Srinivasan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:33:24Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-220-4"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch06_01.htm"
TITLE="6. Modules"><LINK
REL="prev"
HREF="ch06_07.htm"
TITLE="6.7 Autoloading"><LINK
REL="next"
HREF="ch06_09.htm"
TITLE="6.9 Language Comparisons"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Perl Programming"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Advanced Perl Programming"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_07.htm"
TITLE="6.7 Autoloading"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.7 Autoloading"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch06_01.htm"
TITLE="6. Modules"
>Chapter 6<BR>Modules</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_09.htm"
TITLE="6.9 Language Comparisons"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.9 Language Comparisons"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch06-29376"
>6.8 Accessing the Symbol Table</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch06-idx-960853-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-960853-1"
></A
>Perl has a number of features that permit introspection, chief among them the ability to get information about the contents of the symbol table. This property is sometimes called <I
CLASS="firstterm"
>reflection</I
><A
CLASS="indexterm"
NAME="ch06-idx-960865-0"
></A
> or <EM
CLASS="emphasis"
>introspection</EM
>. </P
><P
CLASS="para"
>Reflection makes it easy to write system-level tools such as debuggers and profilers. We will also use this property in <A
CLASS="xref"
HREF="ch11_01.htm"
TITLE="Implementing Object Persistence"
>Chapter 11, <CITE
CLASS="chapter"
>Implementing Object Persistence</CITE
></A
>, to develop a module that can transparently dump an object's data to a file or a database (and subsequently restore it) without having to write any application-specific code.</P
><P
CLASS="para"
>We saw earlier in this chapter that each package gets its own symbol table (also called <I
CLASS="firstterm"
>stash</I
><A
CLASS="indexterm"
NAME="ch06-idx-960864-0"
></A
>, short for "symbol table hash"). Perl makes these stashes available as regular associative arrays. The stash for a package named Foo can be accessed by using the hash called <KBD
CLASS="command"
>%Foo::</KBD
>. The <KBD
CLASS="command"
>main</KBD
> package is available as <KBD
CLASS="command"
>%main::</KBD
>, or simply as <KBD
CLASS="command"
>%::</KBD
>. In fact, all other packages' hash tables are available from the <KBD
CLASS="command"
>main</KBD
> stash (<KBD
CLASS="command"
>%main::</KBD
> hence points to itself), as illustrated in <A
CLASS="xref"
HREF="ch06_08.htm"
TITLE="Packages' stashes are available in main's namespace"
>Figure 6.1</A
>.</P
><H4
CLASS="figure"
><A
CLASS="title"
NAME="ch06-18264"
>Figure 6.1: Packages' stashes are available in main's namespace</A
></H4
><IMG
CLASS="graphic"
SRC="figs/wpa_0601.gif"
ALT="Figure 6.1"><P
CLASS="para"
>Iterating through the all the symbolic names inside a package is simple:</P
><PRE
CLASS="programlisting"
>foreach $name (keys %main::) {
    print &quot;$name, \n&quot;; 
}</PRE
><P
CLASS="para"
>As we saw earlier, each of these symbolic names maps to a typeglob, which itself points to one or more values (one or more of each type: scalar, array, hash, subroutine, filehandle, format name, or directory handle). Unfortunately, there's no direct way to find out which values actually exist. <A
CLASS="xref"
HREF="ch06_08.htm"
TITLE="Dumping All Symbols in a Package"
>Example 6.2</A
> shows a way to dump all the variables in a given package and also demonstrates a way to find out which values exist for a given typeglob.</P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch06-23892"
>Example 6.2: Dumping All Symbols in a Package</A
></H4
><PRE
CLASS="programlisting"
>package DUMPVAR;
sub dumpvar {
    my ($packageName) = @_;
    local (*alias);             # a local typeglob
    # We want to get access to the stash corresponding to the package
    # name
    *stash = *{&quot;${packageName}::&quot;};  # Now %stash is the symbol table
    $, = &quot; &quot;;                        # Output separator for print
    # Iterate through the symbol table, which contains glob values
    # indexed by symbol names.
    while (($varName, $globValue) = each %stash) {
        print &quot;$varName ============================= \n&quot;;
        *alias = $globValue;
        if (defined ($alias)) {
            print &quot;\t \$$varName $alias \n&quot;;
        } 
        if (defined (@alias)) {
            print &quot;\t \@$varName @alias \n&quot;;
        } 
        if (defined (%alias)) {
            print &quot;\t \%$varName &quot;,%alias,&quot; \n&quot;;
        }
     }
}</PRE
></DIV
><P
CLASS="para"
>This snippet of a code illustrates how to use <KBD
CLASS="command"
>DUMPVAR</KBD
>:</P
><PRE
CLASS="programlisting"
>package XX;
$x = 10;
@y = (1,3,4);
%z = (1,2,3,4, 5, 6);
$z = 300;
DUMPVAR::dumpvar(&quot;XX&quot;); </PRE
><P
CLASS="para"
>This prints:</P
><PRE
CLASS="programlisting"
>x =============================
         $x 10
y =============================
         @y 1 3 4
z =============================
         $z 300
         %z  1 2 3 4 5 6</PRE
><P
CLASS="para"
><KBD
CLASS="command"
>dumpvar()</KBD
> works by creating an alias to each typeglob successively and then enumerating each type to see whether that value is defined. It is important to realize that it merely dumps the global data at the topmost level, because anonymous data structures hanging off various references are not dumped at all.<A
CLASS="indexterm"
NAME="ch06-idx-960856-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-960856-1"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-960856-2"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-960856-3"
></A
></P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_07.htm"
TITLE="6.7 Autoloading"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.7 Autoloading"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Perl Programming"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Perl Programming"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_09.htm"
TITLE="6.9 Language Comparisons"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.9 Language Comparisons"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>6.7 Autoloading</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>6.9 Language Comparisons</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
