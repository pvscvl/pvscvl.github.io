<HTML
><HEAD
>
<TITLE>17.5 Sample Specification Parser (Advanced Perl Programming)</TITLE>
<META
NAME="DC.title"
CONTENT="Advanced Perl Programming"><META
NAME="DC.creator"
CONTENT="Sriram Srinivasan"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:39:53Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-220-4"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch17_01.htm"
TITLE="17. Template-Driven Code Generation"><LINK
REL="prev"
HREF="ch17_04.htm"
TITLE="17.4 Jeeves Implementation"><LINK
REL="next"
HREF="ch17_06.htm"
TITLE="17.6 Resources"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Advanced Perl Programming"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,54"
HREF="index.htm"
ALT="Advanced Perl Programming"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_04.htm"
TITLE="17.4 Jeeves Implementation"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 17.4 Jeeves Implementation"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch17_01.htm"
TITLE="17. Template-Driven Code Generation"
>Chapter 17<BR>Template-Driven Code Generation</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_06.htm"
TITLE="17.6 Resources"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 17.6 Resources"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch17-38404"
>17.5 Sample Specification Parser</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch17-idx-977923-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-977923-1"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-977923-2"
></A
>The input specification parser is particular to an application domain. In this section, we look at the parser that is required for our toy object model specification, primarily to review how the AST library is used; the parsing code itself is quite trivial. For more involved parsing tasks, you can use a version of Berkeley <EM
CLASS="emphasis"
>yacc</EM
>, which has been hacked up to output Perl instead of C (available from <A
CLASS="systemitem.url"
HREF="../../../../../../../ftp.sterling.com/local/perl-byacc.tar.Z"
>http://ftp.sterling.com:/local/perl-byacc.tar.Z</A
>). I have successfully used this combination to produce IDL parsers for the CORBA specification. </P
><P
CLASS="para"
>The parser in <A
CLASS="xref"
HREF="ch17_05.htm"
TITLE="OO_Schema.pm: The Specification Parser"
>Example 17.4</A
> allows attributes to have additional annotations like this:</P
><PRE
CLASS="programlisting"
>class Foo {
    int  id,  access=readonly, db_col_name=id, index=yes;
};</PRE
><P
CLASS="para"
>In the template, these attribute properties can be used just like "standard" properties such as <EM
CLASS="emphasis"
>attr_name</EM
> and <EM
CLASS="emphasis"
>attr_type</EM
>. </P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch17-34178"
>Example 17.4: OO_Schema.pm: The Specification Parser</A
></H4
><PRE
CLASS="programlisting"
>package SchemaParser;
use Ast;
use Carp;
sub parse{
    my ($package, $filename) = @_;
    open (P, $filename) || die &quot;Could not open $filename : $@&quot;;
    my $root = Ast-&gt;new(&quot;Root&quot;);
    eval {
        while (1) {
            get_line();
            next unless ($line =~ /^\s*class +(\w+)/);
            $c = Ast-&gt;new($1);
            $c-&gt;add_prop(&quot;class_name&quot; =&gt; $1);
            $root-&gt;add_prop_list(&quot;class_list&quot;, $c);
            while (1) {
                get_line();
                last if $line =~ /^\s*}/;
                if ($line =~ s/^\s*(\w+)\s*(\w+)//) {
                    $a = Ast-&gt;new($2);  #attribute name
                    $a-&gt;add_prop (&quot;attr_name&quot;, $2);  #attribute type
                    $a-&gt;add_prop (&quot;attr_type&quot;, $1);  #attribute type
                    $c-&gt;add_prop_list(&quot;attr_list&quot;, $a);
                }
                $curr_line = $line;
                while ($curr_line !~ /;/) {
                    get_line();
                    $curr_line .= $line;
                }
                @props = split (/[,;]/,$curr_line);
                foreach $prop (@props) {
                    if ($prop =~ /\s*(\w*)\s*=\s*(.*)\s*/) {
                         $a-&gt;add_prop($1, $2);
                    }
                }
            }
        }
    };
    # Comes here if &quot;END OF FILE&quot; exception is thrown
    die $@ if ($@ &amp;&amp; ($@  !~ /END OF FILE/));
    return $root;
}
sub get_line {
    while (defined($line = &lt;P&gt;)) {
        chomp $line;
        $line =~ s#//.*$##;          # remove comments
        return if $line !~ /^\s*$/;  # return if not white-space
    } 
    die &quot;END OF FILE&quot;; 
}
1;</PRE
></DIV
><P
CLASS="para"
>OO_Schema::parse starts by creating a new AST root node, and whenever it encounters a new class declaration, it adds it to the root's <EM
CLASS="emphasis"
>class_list</EM
> property. Similarly, for each attribute, it creates a new node and adds it to the <EM
CLASS="emphasis"
>attr_list</EM
> property of the AST node representing the class being examined.</P
><P
CLASS="para"
>The procedure <CODE
CLASS="literal"
>get_line</CODE
> throws an end of file exception when there's nothing more to read. This way, the user of <KBD
CLASS="command"
>get_line</KBD
> can wrap multiple calls to <KBD
CLASS="command"
>get_line</KBD
> inside an <KBD
CLASS="command"
>eval</KBD
> <KBD
CLASS="command"
>w</KBD
>ithout having to check at each place if it has prematurely reached the end of input. <A
CLASS="indexterm"
NAME="ch17-idx-977985-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-977985-1"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-977985-2"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-977985-3"
></A
></P
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_04.htm"
TITLE="17.4 Jeeves Implementation"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 17.4 Jeeves Implementation"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Advanced Perl Programming"
><IMG
SRC="../gifs/txthome.gif"
ALT="Advanced Perl Programming"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_06.htm"
TITLE="17.6 Resources"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 17.6 Resources"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>17.4 Jeeves Implementation</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>17.6 Resources</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
