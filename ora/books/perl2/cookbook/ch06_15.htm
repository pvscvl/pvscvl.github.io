<HTML
><HEAD
>
<TITLE>Recipe 6.14. Matching from Where the Last Pattern Left Off (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:34:33Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch06_01.htm"
TITLE="6. Pattern Matching"><LINK
REL="prev"
HREF="ch06_14.htm"
TITLE="6.13. Approximate Matching"><LINK
REL="next"
HREF="ch06_16.htm"
TITLE="6.15. Greedy and Non-Greedy Matches"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_14.htm"
TITLE="6.13. Approximate Matching"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.13. Approximate Matching"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch06_01.htm"
TITLE="6. Pattern Matching"
>Chapter 6<BR>Pattern Matching</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_16.htm"
TITLE="6.15. Greedy and Non-Greedy Matches"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.15. Greedy and Non-Greedy Matches"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch06-chap06_matching_4"
>6.14. Matching from Where the Last Pattern Left Off</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-1599"
>Problem<A
CLASS="indexterm"
NAME="ch06-idx-1000007652-0"
></A
></A
></H3
><P
CLASS="para"
>You want to match again from where the last pattern left off.</P
><P
CLASS="para"
>This is a useful approach to take when repeatedly extracting data in chunks from a string.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-1607"
>Solution</A
></H3
><P
CLASS="para"
>Use a combination of the <CODE
CLASS="literal"
>/g</CODE
> match modifier, the <CODE
CLASS="literal"
>\G</CODE
> pattern anchor, and the <CODE
CLASS="literal"
>pos</CODE
> function.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-1613"
>Discussion</A
></H3
><P
CLASS="para"
>If you use the <CODE
CLASS="literal"
>/g</CODE
><A
CLASS="indexterm"
NAME="ch06-idx-1000007653-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007653-1"
></A
> modifier on a match, the regular expression engine keeps track of its position in the string when it finished matching. The next time you match with <CODE
CLASS="literal"
>/g</CODE
>, the engine starts looking for a match from this remembered position. This lets you use a <CODE
CLASS="literal"
>while</CODE
> loop to extract the information you want from the string.</P
><PRE
CLASS="programlisting"
>while (/(\d+)/g) {
    print &quot;Found $1\n&quot;;
}</PRE
><P
CLASS="para"
>You can also use <CODE
CLASS="literal"
>\G</CODE
> in your pattern to anchor it to the end of the previous match. For example, if you had a number stored in a string with leading blanks, you could change each leading blank into the digit zero this way:</P
><PRE
CLASS="programlisting"
>$n = &quot;   49 here&quot;;
$n =~ s/\G /0/g;
print $n;
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>00049 here</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>You can also make good use of <CODE
CLASS="literal"
>\G</CODE
> in a <CODE
CLASS="literal"
>while</CODE
> loop. Here we use <CODE
CLASS="literal"
>\G</CODE
> to parse a comma-separated list of numbers (e.g., <CODE
CLASS="literal"
>&quot;3,4,5,9,120&quot;</CODE
>):</P
><PRE
CLASS="programlisting"
>while (/\G,?(\d+)/g) {
    print &quot;Found number $1\n&quot;;
}</PRE
><P
CLASS="para"
>By default, when your match fails (when we run out of numbers in the examples, for instance) the remembered position is reset to the start. If you don't want this to happen, perhaps because you want to continue matching from that position but with a different pattern, use the modifier <CODE
CLASS="literal"
>/c</CODE
> with <CODE
CLASS="literal"
>/g</CODE
>:</P
><PRE
CLASS="programlisting"
>$_ = &quot;The year 1752 lost 10 days on the 3rd of September&quot;;

while (/(\d+)/gc) {
    print &quot;Found number $1\n&quot;;
}

if (/\G(\S+)/g) {
    print &quot;Found $1 after the last number.\n&quot;;
}

<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Found number 1752</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Found number 10</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Found number 3</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Found rd after the last number.</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>As you can see, successive patterns can use <CODE
CLASS="literal"
>/g</CODE
> on a string and in doing so change the location of the last successful match. The position of the last successful match is associated with the scalar being matched against, not with the pattern. Further, the position is not copied when you copy the string, nor saved if you use the ill-named <CODE
CLASS="literal"
>local</CODE
> operator.</P
><P
CLASS="para"
>The location of the last successful match can be read and set with the <CODE
CLASS="literal"
>pos</CODE
><A
CLASS="indexterm"
NAME="ch06-idx-1000007654-0"
></A
> function, which takes as its argument the string whose position you want to get or set. If no argument is given, <CODE
CLASS="literal"
>pos</CODE
> operates on <CODE
CLASS="literal"
>$_ </CODE
>:</P
><PRE
CLASS="programlisting"
>print &quot;The position in \$a is &quot;, pos($a);
pos($a) = 30;
print &quot;The position in \$_ is &quot;, pos;
pos = 30;<CODE
CLASS="literal"
></CODE
><A
CLASS="indexterm"
NAME="ch06-idx-1000007656-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007656-1"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007656-2"
></A
></PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch06-pgfId-1685"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>/g</CODE
> modifier is discussed in <I
CLASS="filename"
>perlre </I
>(1) and the <A
CLASS="olink"
HREF="../prog/ch02_04.htm"
>"the rules of regular expression matching"</A
> section of <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_14.htm"
TITLE="6.13. Approximate Matching"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.13. Approximate Matching"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_16.htm"
TITLE="6.15. Greedy and Non-Greedy Matches"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 6.15. Greedy and Non-Greedy Matches"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>6.13. Approximate Matching</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>6.15. Greedy and Non-Greedy Matches</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
