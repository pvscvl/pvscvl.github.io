<HTML
><HEAD
>
<TITLE>Recipe 9.4. Recognizing Two Names for the Same File (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:39:06Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch09_01.htm"
TITLE="9. Directories"><LINK
REL="prev"
HREF="ch09_04.htm"
TITLE="9.3. Copying or Moving a File"><LINK
REL="next"
HREF="ch09_06.htm"
TITLE="9.5. Processing All Files in a Directory"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_04.htm"
TITLE="9.3. Copying or Moving a File"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.3. Copying or Moving a File"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch09_01.htm"
TITLE="9. Directories"
>Chapter 9<BR>Directories</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_06.htm"
TITLE="9.5. Processing All Files in a Directory"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.5. Processing All Files in a Directory"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch09-chap09_recognizing_0"
>9.4. Recognizing Two Names for the Same File</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch09-pgfId-462"
>Problem<A
CLASS="indexterm"
NAME="ch09-idx-1000004376-0"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004376-1"
></A
></A
></H3
><P
CLASS="para"
>You want to identify if two filenames in a list correspond to the same file on disk (because of hard and soft links, two filenames can refer to a single file). You might do this to make sure that you don't change a file you've already worked with.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch09-pgfId-468"
>Solution</A
></H3
><P
CLASS="para"
>Maintain a hash, keyed by the device and inode number of the files you've seen. The values are the names of the files:</P
><PRE
CLASS="programlisting"
>%seen = ();

sub do_my_thing {
    my $filename = shift;
    my ($dev, $ino) = stat $filename;

    unless ($seen{$dev, $ino}++) {
        # do something with $filename because we haven't
        # seen it before
    }
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch09-pgfId-496"
>Discussion</A
></H3
><P
CLASS="para"
>A key in <CODE
CLASS="literal"
>%seen</CODE
> is made by combining the device number (<CODE
CLASS="literal"
>$dev</CODE
>) and inode number (<CODE
CLASS="literal"
>$ino</CODE
>) of each file. Files that are the same will have the same device and inode numbers, so they will have the same key.</P
><P
CLASS="para"
>If you want to maintain a list of all files of the same name, instead of counting the number of times seen, save the name of the file in an anonymous array.</P
><PRE
CLASS="programlisting"
>foreach $filename (@files) {
    ($dev, $ino) = stat $filename;
    push( @{ $seen{$dev,$ino} }, $filename);
}

foreach $devino (sort keys %seen) {
    ($dev, $ino) = split(/$;/o, $devino);
    if (@{$seen{$devino}} &gt; 1) {
        # @{$seen{$devino}} is a list of filenames for the same file
    }
}</PRE
><P
CLASS="para"
>The <CODE
CLASS="literal"
>$;</CODE
><A
CLASS="indexterm"
NAME="ch09-idx-1000005018-0"
></A
> variable contains the separator string using the old <A
CLASS="indexterm"
NAME="ch09-idx-1000005017-0"
></A
>multidimensional associative array emulation syntax,<SPAN
CLASS="acronym"
> </SPAN
><CODE
CLASS="literal"
>$hash{$x,$y,$z}</CODE
>. It's still a one-dimensional hash, but it has composite keys. The key is really <CODE
CLASS="literal"
>join($;</CODE
> <CODE
CLASS="literal"
>=&gt;</CODE
> <CODE
CLASS="literal"
>$x,</CODE
> <CODE
CLASS="literal"
>$y,</CODE
> <CODE
CLASS="literal"
>$z)</CODE
>. The <CODE
CLASS="literal"
>split</CODE
> separates them again. Although you'd normally just use a real multilevel hash directly, here there's no need, and it's cheaper not to.<A
CLASS="indexterm"
NAME="ch09-idx-1000004378-0"
></A
><A
CLASS="indexterm"
NAME="ch09-idx-1000004378-1"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch09-pgfId-528"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>$;</CODE
> variable in <I
CLASS="filename"
>perlvar </I
>(1), and in the <A
CLASS="olink"
HREF="../prog/ch02_09.htm"
>"Special Variables"</A
> section of <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; the <CODE
CLASS="literal"
>stat</CODE
> function in <I
CLASS="filename"
>perlfunc </I
>(1) and in <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; <A
CLASS="xref"
HREF="ch05_01.htm"
TITLE="Hashes"
>Chapter 5, <CITE
CLASS="chapter"
>Hashes</CITE
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_04.htm"
TITLE="9.3. Copying or Moving a File"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 9.3. Copying or Moving a File"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch09_06.htm"
TITLE="9.5. Processing All Files in a Directory"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 9.5. Processing All Files in a Directory"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>9.3. Copying or Moving a File</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>9.5. Processing All Files in a Directory</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
