<HTML
><HEAD
>
<TITLE>Recipe 10.7. Passing by Named Parameter (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:39:47Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch10_01.htm"
TITLE="10. Subroutines"><LINK
REL="prev"
HREF="ch10_07.htm"
TITLE="10.6. Detecting Return Context"><LINK
REL="next"
HREF="ch10_09.htm"
TITLE="10.8. Skipping Selected Return Values"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_07.htm"
TITLE="10.6. Detecting Return Context"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.6. Detecting Return Context"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch10_01.htm"
TITLE="10. Subroutines"
>Chapter 10<BR>Subroutines</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_09.htm"
TITLE="10.8. Skipping Selected Return Values"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.8. Skipping Selected Return Values"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch10-21245"
>10.7. Passing by Named Parameter</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-576"
>Problem</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch10-idx-1000004683-0"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004683-1"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004683-2"
></A
>You want to make a function with many parameters easy to invoke so that programmers remember what the arguments do, rather than having to memorize their order.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-582"
>Solution</A
></H3
><P
CLASS="para"
>Name each parameter in the call:</P
><PRE
CLASS="programlisting"
>thefunc(INCREMENT =&gt; &quot;20s&quot;, START =&gt; &quot;+5m&quot;, FINISH =&gt; &quot;+30m&quot;);
thefunc(START =&gt; &quot;+5m&quot;, FINISH =&gt; &quot;+30m&quot;);
thefunc(FINISH =&gt; &quot;+30m&quot;);
thefunc(START =&gt; &quot;+5m&quot;, INCREMENT =&gt; &quot;15s&quot;);</PRE
><P
CLASS="para"
>Then in the subroutine, create a hash loaded up with default values plus the array of named pairs.</P
><PRE
CLASS="programlisting"
>sub thefunc {
    my %args = ( 
        INCREMENT   =&gt; '10s', 
        FINISH      =&gt; 0, 
        START       =&gt; 0, 
        @_,         # argument pair list goes here
    );
    if ($args{INCREMENT}  =~ /m$/ ) { ..... }
} </PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-616"
>Discussion</A
></H3
><P
CLASS="para"
>Functions whose arguments require a particular order work well for short argument lists, but as the number of parameters increases, it's awkward to make some of them optional or have default values. You can only leave out trailing arguments, never initial ones.</P
><P
CLASS="para"
>Having the caller supply value pairs is a more flexible approach. The first element of the pair is the argument name, and the second is its value. This makes for self-documenting code, because you can see the parameters' intended meanings without having to read the full function definition. Even better, programmers using your function no longer have to remember the order of the arguments and can omit any arguments.</P
><P
CLASS="para"
>This works by having the function declare a private hash variable to hold the default parameter values. Put the current arguments, <CODE
CLASS="literal"
>@_</CODE
> , after the default values, so the actual arguments will override the defaults because of the order of the values in the assignment. <A
CLASS="indexterm"
NAME="ch10-idx-1000004685-0"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004685-1"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004685-2"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-626"
>See Also</A
></H3
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch04_01.htm"
TITLE="Arrays"
>Chapter 4, <CITE
CLASS="chapter"
>Arrays</CITE
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_07.htm"
TITLE="10.6. Detecting Return Context"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.6. Detecting Return Context"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_09.htm"
TITLE="10.8. Skipping Selected Return Values"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.8. Skipping Selected Return Values"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>10.6. Detecting Return Context</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>10.8. Skipping Selected Return Values</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
