<HTML
><HEAD
>
<TITLE>Recipe 8.13. Updating a Random-Access File (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:38:49Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch08_01.htm"
TITLE="8. File Contents"><LINK
REL="prev"
HREF="ch08_13.htm"
TITLE="8.12. Using Random-Access I/O"><LINK
REL="next"
HREF="ch08_15.htm"
TITLE="8.14. Reading a String from a Binary File"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_13.htm"
TITLE="8.12. Using Random-Access I/O"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.12. Using Random-Access I/O"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch08_01.htm"
TITLE="8. File Contents"
>Chapter 8<BR>File Contents</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_15.htm"
TITLE="8.14. Reading a String from a Binary File"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.14. Reading a String from a Binary File"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch08-14803"
>8.13. Updating a Random-Access File</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch08-pgfId-1156"
>Problem</A
></H3
><P
CLASS="para"
>You want to read in an old record from a binary file, change its values, and write back the record.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch08-pgfId-1162"
>Solution</A
></H3
><P
CLASS="para"
>After <CODE
CLASS="literal"
>read</CODE
>ing the old record, <CODE
CLASS="literal"
>pack</CODE
><A
CLASS="indexterm"
NAME="ch08-idx-1000004687-0"
></A
> up the updated values, <CODE
CLASS="literal"
>seek</CODE
> to the previous address, and write it back.</P
><PRE
CLASS="programlisting"
>use Fcntl;                          # for SEEK_SET and SEEK_CUR

$ADDRESS = $RECSIZE * $RECNO;
seek(FH, $ADDRESS, SEEK_SET)        or die &quot;Seeking: $!&quot;;
read(FH, $BUFFER, $RECSIZE) == $RECSIZE
                                    or die &quot;Reading: $!&quot;;
@FIELDS = unpack($FORMAT, $BUFFER);
# update fields, then
$BUFFER = pack($FORMAT, @FIELDS);
seek(FH, -$RECSIZE, SEEK_CUR)       or die &quot;Seeking: $!&quot;;
print FH $BUFFER;
close FH                            or die &quot;Closing: $!&quot;;</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch08-pgfId-1192"
>Discussion</A
></H3
><P
CLASS="para"
>You don't have to use anything fancier than <CODE
CLASS="literal"
>print</CODE
> in Perl to output a record. Remember that the opposite of <CODE
CLASS="literal"
>read</CODE
> is not <CODE
CLASS="literal"
>write</CODE
> but <CODE
CLASS="literal"
>print</CODE
>, although oddly enough, the opposite of <CODE
CLASS="literal"
>sysread</CODE
> actually is <CODE
CLASS="literal"
>syswrite</CODE
>. (<CODE
CLASS="literal"
>split</CODE
> and <CODE
CLASS="literal"
>join</CODE
> are opposites, but there's no <CODE
CLASS="literal"
>speak</CODE
> to match <CODE
CLASS="literal"
>listen</CODE
>, no <CODE
CLASS="literal"
>resurrect</CODE
> for <CODE
CLASS="literal"
>kill</CODE
>, and no <CODE
CLASS="literal"
>curse</CODE
> for <CODE
CLASS="literal"
>bless</CODE
>.)</P
><P
CLASS="para"
>The example program shown in <A
CLASS="xref"
HREF="ch08_14.htm"
TITLE="weekearly"
>Example 8.4</A
>, <EM
CLASS="emphasis"
>weekearly</EM
><A
CLASS="indexterm"
NAME="ch08-idx-1000004686-0"
></A
>, takes one argument: the user whose record you want to backdate by a week. (Of course, in practice, you wouldn't really want to (nor be able to!) mess with the system accounting files.) This program requires write access to the file to be updated, since it opens the file in update mode. After fetching and altering the record, it packs it up again, skips backwards in the file one record, and writes it out.</P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch08-24725"
>Example 8.4: weekearly</A
></H4
><PRE
CLASS="programlisting"
>#!/usr/bin/perl
# <A
CLASS="indexterm"
NAME="ch08-idx-1000004828-0"
></A
>weekearly -- set someone's login date back a week
use User::pwent;
use IO::Seekable;

$typedef = 'L A12 A16';         # linux fmt; sunos is &quot;L A8 A16&quot;
$sizeof  = length(pack($typedef, ()));
$user    = shift(@ARGV) || $ENV{USER} || $ENV{LOGNAME};

$address = getpwnam($user)-&gt;uid * $sizeof;

open (LASTLOG, &quot;+&lt;/var/log/lastlog&quot;)
    or die &quot;can't update /usr/adm/lastlog: $!&quot;;
seek(LASTLOG, $address, SEEK_SET)
    or die &quot;seek failed: $!&quot;;
read(LASTLOG, $buffer, $sizeof) == $sizeof
    or die &quot;read failed: $!&quot;;

($time, $line, $host) = unpack($typedef, $buffer);
$time  -= 24 * 7 * 60 * 60;         # back-date a week
$buffer = pack($typedef, $time, $line, $time);

seek(LASTLOG, -$sizeof, SEEK_CUR)   # backup one record
    or die &quot;seek failed: $!&quot;;
print LASTLOG $record;
    
close(LASTLOG)
    or die &quot;close failed: $!&quot;;<A
CLASS="indexterm"
NAME="ch08-idx-1000004682-0"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-1000004682-1"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-1000004682-2"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-1000004682-3"
></A
><A
CLASS="indexterm"
NAME="ch08-idx-1000004682-4"
></A
></PRE
></DIV
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch08-pgfId-1256"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>open</CODE
>, <CODE
CLASS="literal"
>seek</CODE
>, <CODE
CLASS="literal"
>read</CODE
>, <CODE
CLASS="literal"
>pack</CODE
>, and <CODE
CLASS="literal"
>unpack</CODE
> functions in the <I
CLASS="filename"
>perlfunc </I
>(1) and in <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; <A
CLASS="xref"
HREF="ch08_13.htm"
TITLE="Using Random-Access I/O"
>Recipe 8.12</A
>; <A
CLASS="xref"
HREF="ch08_15.htm"
TITLE="Reading a String from a Binary File"
>Recipe 8.14</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_13.htm"
TITLE="8.12. Using Random-Access I/O"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 8.12. Using Random-Access I/O"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch08_15.htm"
TITLE="8.14. Reading a String from a Binary File"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 8.14. Reading a String from a Binary File"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>8.12. Using Random-Access I/O</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>8.14. Reading a String from a Binary File</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
