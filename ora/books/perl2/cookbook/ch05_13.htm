<HTML
><HEAD
>
<TITLE>Recipe 5.12. Hashing References (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:32:53Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch05_01.htm"
TITLE="5. Hashes"><LINK
REL="prev"
HREF="ch05_12.htm"
TITLE="5.11. Finding Common or Different Keys in Two Hashes"><LINK
REL="next"
HREF="ch05_14.htm"
TITLE="5.13. Presizing a Hash"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_12.htm"
TITLE="5.11. Finding Common or Different Keys in Two Hashes"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.11. Finding Common or Different Keys in Two Hashes"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch05_01.htm"
TITLE="5. Hashes"
>Chapter 5<BR>Hashes</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_14.htm"
TITLE="5.13. Presizing a Hash"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.13. Presizing a Hash"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch05-23263"
>5.12. Hashing References</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-1154"
>Problem</A
></H3
><P
CLASS="para"
>When you use <CODE
CLASS="literal"
>keys</CODE
> on a hash whose keys are references, the references that <CODE
CLASS="literal"
>keys</CODE
> returns no longer work. This situation often arises when you want to cross-reference two different hashes.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-1160"
>Solution</A
></H3
><P
CLASS="para"
>Use <A
CLASS="indexterm"
NAME="ch05-idx-1000006504-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006504-1"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006504-2"
></A
>Tie::RefHash:</P
><PRE
CLASS="programlisting"
>use Tie::RefHash;
tie %hash, &quot;Tie::RefHash&quot;;
# you may now use references as the keys to %hash</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-1172"
>Discussion</A
></H3
><P
CLASS="para"
>Hash keys are automatically "stringified," that is, treated as though they appeared between double quotes. In the case of numbers or strings, nothing is lost. This isn't the case with references, though.</P
><P
CLASS="para"
>Stringified references look like these:</P
><PRE
CLASS="programlisting"
><CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Class::Somewhere=HASH(0x72048)</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>ARRAY(0x72048)</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>A stringified reference can't be dereferenced, because it is just a string and no longer a reference. This means you can't use references as the keys to a hash without losing their "magic."</P
><P
CLASS="para"
>Hand-rolled solutions to this problem involve maintaining a distinct hash whose keys are stringified references and whose values are the actual references. This is what Tie::RefHash does. We'll use IO objects for filehandles here to show you that even such strange references can be used to index a hash tied with Tie::RefHash.</P
><P
CLASS="para"
>Here's an example:</P
><PRE
CLASS="programlisting"
>use Tie::RefHash;
use IO::File;

tie %name, &quot;Tie::RefHash&quot;;
foreach $filename (&quot;/etc/termcap&quot;, &quot;/vmunix&quot;, &quot;/bin/cat&quot;) {
    $fh = IO::File-&gt;new(&quot;&lt; $filename&quot;) or next;
    $name{$fh} = $filename;
}
print &quot;open files: &quot;, join(&quot;, &quot;, values %name), &quot;\n&quot;;
foreach $file (keys %name) {
    seek($file, 0, 2);      # seek to the end
    printf(&quot;%s is %d bytes long.\n&quot;, $name{$file}, tell($file));
}</PRE
><P
CLASS="para"
>If you're storing objects as the keys to a hash, though, you almost always should be storing a unique attribute of the object (e.g., name or ID number) instead.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-1218"
>See Also</A
></H3
><P
CLASS="para"
>The documentation for the standard Tie::RefHash module; the <A
CLASS="olink"
HREF="../prog/ch04_05.htm"
>"Hard References Don't Work as Hash Keys"</A
> section of <A
CLASS="olink"
HREF="../prog/ch04_01.htm"
>Chapter 4</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>, and the "Warning" section of <I
CLASS="filename"
>perlref </I
>(1) <A
CLASS="indexterm"
NAME="ch05-idx-1000006506-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006506-1"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006506-2"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_12.htm"
TITLE="5.11. Finding Common or Different Keys in Two Hashes"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.11. Finding Common or Different Keys in Two Hashes"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_14.htm"
TITLE="5.13. Presizing a Hash"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.13. Presizing a Hash"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>5.11. Finding Common or Different Keys in Two Hashes</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>5.13. Presizing a Hash</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
