<HTML
><HEAD
>
<TITLE>Recipe 10.15. Trapping Undefined Function Calls with AUTOLOAD (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:40:07Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch10_01.htm"
TITLE="10. Subroutines"><LINK
REL="prev"
HREF="ch10_15.htm"
TITLE="10.14. Redefining a Function"><LINK
REL="next"
HREF="ch10_17.htm"
TITLE="10.16. Nesting Subroutines"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_15.htm"
TITLE="10.14. Redefining a Function"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.14. Redefining a Function"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch10_01.htm"
TITLE="10. Subroutines"
>Chapter 10<BR>Subroutines</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_17.htm"
TITLE="10.16. Nesting Subroutines"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.16. Nesting Subroutines"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch10-42363"
>10.15. Trapping Undefined Function Calls with AUTOLOAD</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-1158"
>Problem</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch10-idx-1000004745-0"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004745-1"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004745-2"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004745-3"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004745-4"
></A
>You want to intercept calls to undefined functions so you can handle them gracefully.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-1164"
>Solution</A
></H3
><P
CLASS="para"
>Declare a function called <CODE
CLASS="literal"
>AUTOLOAD</CODE
> for the package whose undefined function calls you'd like to trap. While running, that package's <CODE
CLASS="literal"
>$AUTOLOAD</CODE
> variable contains the name of the undefined function being called.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-1170"
>Discussion</A
></H3
><P
CLASS="para"
>Another strategy for creating similar functions is to use a proxy function. If you call an undefined function, instead of automatically raising an exception, you can trap the call. If the function's package has a function named <CODE
CLASS="literal"
>AUTOLOAD</CODE
>, then this function is called in its place, with the special package global <CODE
CLASS="literal"
>$AUTOLOAD</CODE
> set to the fully qualified function name. The <CODE
CLASS="literal"
>AUTOLOAD</CODE
> subroutine can then do whatever that function would do.</P
><PRE
CLASS="programlisting"
>sub AUTOLOAD {
    use vars qw($AUTOLOAD);
    my $color = $AUTOLOAD;
    $color =~ s/.*:://;
    return &quot;&lt;FONT COLOR='$color'&gt;@_&lt;/FONT&gt;&quot;;
} 
#note: sub chartreuse isn't defined.
print chartreuse(&quot;stuff&quot;);</PRE
><P
CLASS="para"
>When the nonexistent <CODE
CLASS="literal"
>main::chartreuse</CODE
> function is called, rather than raising an exception, <CODE
CLASS="literal"
>main::AUTOLOAD</CODE
> is called with the same arguments as you passed <CODE
CLASS="literal"
>chartreuse </CODE
>. The package variable <CODE
CLASS="literal"
>$AUTOLOAD</CODE
> would contain the string <CODE
CLASS="literal"
>main::chartreuse</CODE
> because that's the function it's proxying.</P
><P
CLASS="para"
>The technique using typeglob assignments shown in <A
CLASS="xref"
HREF="ch10_15.htm"
TITLE="Redefining a Function"
>Recipe 10.14</A
> is faster and more flexible than using <CODE
CLASS="literal"
>AUTOLOAD</CODE
>. It's faster because you don't have to run the copy and substitute. It's more flexible because it lets you do this:</P
><PRE
CLASS="programlisting"
>{
    local *yellow = \&amp;violet;  
    local (*red, *green) = (\&amp;green, \&amp;red);
    print_stuff();
} </PRE
><P
CLASS="para"
>While <CODE
CLASS="literal"
>print_stuff()</CODE
> is running, or while in any functions it calls, anything printed in yellow will come out violet, and the red and green texts will exchange colors.</P
><P
CLASS="para"
>Aliasing subroutines like this won't handle calls to undefined subroutines. <CODE
CLASS="literal"
>AUTOLOAD</CODE
> does.<A
CLASS="indexterm"
NAME="ch10-idx-1000004747-0"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004747-1"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004747-2"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004747-3"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004747-4"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-1210"
>See Also</A
></H3
><P
CLASS="para"
>The section on <A
CLASS="olink"
HREF="../prog/ch05_01.htm"
>"Autoloading"</A
> in <A
CLASS="olink"
HREF="../prog/ch05_01.htm"
>Chapter 5</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> and in <I
CLASS="filename"
>perlsub </I
>(1); the documentation for the standard modules AutoLoader and AutoSplit, also in <A
CLASS="olink"
HREF="../prog/ch07_01.htm"
>Chapter 7</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; <A
CLASS="xref"
HREF="ch10_13.htm"
TITLE="Handling Exceptions"
>Recipe 10.12</A
>; <A
CLASS="xref"
HREF="ch12_11.htm"
TITLE="Speeding Up Module Loading with Autoloader"
>Recipe 12.10</A
>, <A
CLASS="xref"
HREF="ch13_12.htm"
TITLE="Generating Attribute Methods Using AUTOLOAD"
>Recipe 13.11</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_15.htm"
TITLE="10.14. Redefining a Function"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.14. Redefining a Function"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_17.htm"
TITLE="10.16. Nesting Subroutines"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.16. Nesting Subroutines"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>10.14. Redefining a Function</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>10.16. Nesting Subroutines</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
