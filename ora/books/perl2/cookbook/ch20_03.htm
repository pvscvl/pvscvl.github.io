<HTML
><HEAD
>
<TITLE>Recipe 20.2. Automating Form Submission (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:45:55Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch20_01.htm"
TITLE="20. Web Automation"><LINK
REL="prev"
HREF="ch20_02.htm"
TITLE="20.1. Fetching a URL from a Perl Script"><LINK
REL="next"
HREF="ch20_04.htm"
TITLE="20.3. Extracting URLs"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch20_02.htm"
TITLE="20.1. Fetching a URL from a Perl Script"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 20.1. Fetching a URL from a Perl Script"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch20_01.htm"
TITLE="20. Web Automation"
>Chapter 20<BR>Web Automation</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch20_04.htm"
TITLE="20.3. Extracting URLs"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 20.3. Extracting URLs"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch20-41131"
>20.2. Automating Form Submission</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch20-pgfId-211"
>Problem<A
CLASS="indexterm"
NAME="ch20-idx-1000002591-0"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002591-1"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002591-2"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002591-3"
></A
></A
></H3
><P
CLASS="para"
>You want to submit form values to a CGI script from your program.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch20-pgfId-217"
>Solution</A
></H3
><P
CLASS="para"
>If you're submitting form values using the GET method, create a URL and encode the form using the <CODE
CLASS="literal"
>query_form</CODE
><A
CLASS="indexterm"
NAME="ch20-idx-1000002601-0"
></A
> method:</P
><PRE
CLASS="programlisting"
>use LWP::Simple;
use URI::URL;

my $url = url('http://www.perl.com/cgi-bin/cpan_mod');
$url-&gt;query_form(module =&gt; 'DB_File', readme =&gt; 1);
$content = get($url);</PRE
><P
CLASS="para"
>If you're using the <A
CLASS="indexterm"
NAME="ch20-idx-1000003769-0"
></A
>POST method, create your own user agent and encode the content appropriately:</P
><PRE
CLASS="programlisting"
>use HTTP::Request::Common qw(POST);
use LWP::UserAgent;

$ua = LWP::UserAgent-&gt;new();
my $req = POST 'http://www.perl.com/cgi-bin/cpan_mod',
               [ module =&gt; 'DB_File', readme =&gt; 1 ];
$content = $ua-&gt;request($req)-&gt;as_string;</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch20-pgfId-251"
>Discussion</A
></H3
><P
CLASS="para"
>For simple operations, the procedural interface of the LWP::Simple module is sufficient. For fancier ones, the LWP::UserAgent module provides a virtual browser object, which you manipulate using method calls.</P
><P
CLASS="para"
>The format of a query string is:</P
><PRE
CLASS="programlisting"
>field1=value1&amp;field2=value2&amp;field3=value3</PRE
><P
CLASS="para"
>In GET requests, this is encoded in the URL being requested:</P
><PRE
CLASS="programlisting"
>http://www.site.com/path/to/
script.cgi?field1=value1&amp;field2=value2&amp;field3=value3</PRE
><P
CLASS="para"
>Fields must still be properly escaped, so setting the <CODE
CLASS="literal"
>arg</CODE
> form parameter to <CODE
CLASS="literal"
>&quot;this</CODE
> <CODE
CLASS="literal"
>isn't</CODE
> <CODE
CLASS="literal"
>&lt;EASY&gt;&amp;&lt;FUN&gt;&quot;</CODE
> would yield:</P
><PRE
CLASS="programlisting"
>http://www.site.com/path/to/
script.cgi?arg=%22this+isn%27t+%3CEASY%3E+%26+%3CFUN%3E%22</PRE
><P
CLASS="para"
>The <CODE
CLASS="literal"
>query_form</CODE
> method called on a URL object correctly escapes the form values for you, or you could use the <CODE
CLASS="literal"
>URI::Escape::uri_escape</CODE
> or <CODE
CLASS="literal"
>CGI::escape_html</CODE
> functions on your own. In POST requests, the query string is the body of the HTTP document sent to the CGI script.</P
><P
CLASS="para"
>We can use the LWP::Simple module to submit data in a GET request, but there is no corresponding LWP::Simple interface for POST requests. Instead, the HTTP::Request::Common module's POST function conveniently creates a properly formatted request with everything properly escaped.</P
><P
CLASS="para"
>If you need to go through a proxy, construct your user agent and tell it to use a proxy this way:</P
><PRE
CLASS="programlisting"
>$ua-&gt;proxy(['http', 'ftp'] =&gt; 'http://proxy.myorg.com:8081');</PRE
><P
CLASS="para"
>That says that both HTTP and FTP requests through this user agent should be routed through the proxy on port 8081 at<EM
CLASS="emphasis"
> </EM
><I
CLASS="systemitem.example"
>proxy.myorg.com</I
>.<A
CLASS="indexterm"
NAME="ch20-idx-1000002593-0"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002593-1"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002593-2"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002593-3"
></A
><A
CLASS="indexterm"
NAME="ch20-idx-1000002593-4"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch20-pgfId-279"
>See Also</A
></H3
><P
CLASS="para"
>The documentation for the CPAN modules LWP::Simple, LWP::UserAgent, HTTP::Request::Common, URI::Escape, and URI::URL; <A
CLASS="xref"
HREF="ch20_02.htm"
TITLE="Fetching a URL from a Perl Script"
>Recipe 20.1</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch20_02.htm"
TITLE="20.1. Fetching a URL from a Perl Script"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 20.1. Fetching a URL from a Perl Script"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch20_04.htm"
TITLE="20.3. Extracting URLs"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 20.3. Extracting URLs"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>20.1. Fetching a URL from a Perl Script</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>20.3. Extracting URLs</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
