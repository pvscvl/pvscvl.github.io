<HTML
><HEAD
>
<TITLE>Recipe 12.19. Program: Finding Versions and Descriptions of Installed Modules (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:42:06Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch12_01.htm"
TITLE="12. Packages, Libraries, and Modules"><LINK
REL="prev"
HREF="ch12_19.htm"
TITLE="12.18. Example: Module Template"><LINK
REL="next"
HREF="ch13_01.htm"
TITLE="13. Classes, Objects, and Ties"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch12_19.htm"
TITLE="12.18. Example: Module Template"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 12.18. Example: Module Template"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch12_01.htm"
TITLE="12. Packages, Libraries, and Modules"
>Chapter 12<BR>Packages, Libraries, and Modules</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch13_01.htm"
TITLE="13. Classes, Objects, and Ties"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13. Classes, Objects, and Ties"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch12-chap12_program_1"
>12.19. Program: Finding Versions and Descriptions of Installed Modules</A
></H2
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch12-idx-1000005323-0"
></A
><A
CLASS="indexterm"
NAME="ch12-idx-1000005323-1"
></A
>Perl is shipped with many modules. Even more can be found on CPAN. The following program prints out the names, versions, and descriptions of all modules installed on your system. It uses standard modules like File::Find and includes several techniques described in this chapter.</P
><P
CLASS="para"
>To run it, type:</P
><PRE
CLASS="programlisting"
>% pmdesc</PRE
><P
CLASS="para"
>It prints a list of modules and their descriptions:</P
><PRE
CLASS="programlisting"
><CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>FileHandle (2.00) - supply object methods for filehandles</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>IO::File (1.06021) - supply object methods for filehandles</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>IO::Select (1.10) - OO interface to the select system call</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>IO::Socket (1.1603) - Object interface to socket communications</I
></CODE
></B
></CODE
>
<B
CLASS="emphasis.bold"
>...</B
></PRE
><P
CLASS="para"
>With the <B
CLASS="emphasis.bold"
>-v</B
> flag, <EM
CLASS="emphasis"
>pmdesc</EM
> provides the names of the directories the files are in:</P
><PRE
CLASS="programlisting"
>% pmdesc -v

<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>&lt;&lt;&lt;Modules from /usr/lib/perl5/i686-linux/5.00404&gt;&gt;&gt;</I
></CODE
></B
></CODE
>

<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>FileHandle (2.00) - supply object methods for filehandles</I
></CODE
></B
></CODE
>
<B
CLASS="emphasis.bold"
>    ...</B
></PRE
><P
CLASS="para"
>The <B
CLASS="emphasis.bold"
>-w</B
> flag warns if a module doesn't come with a pod description, and <B
CLASS="emphasis.bold"
>-s</B
> sorts the module list within each directory.</P
><P
CLASS="para"
>The program is given in <A
CLASS="xref"
HREF="ch12_20.htm"
TITLE="pmdesc"
>Example 12.3</A
>.</P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch12-39484"
>Example 12.3: pmdesc</A
></H4
><PRE
CLASS="programlisting"
>#!/usr/bin/perl -w
# <A
CLASS="indexterm"
NAME="ch12-idx-1000005374-0"
></A
>pmdesc - describe pm files
# tchrist@perl.com

use strict;
use File::Find      qw(find);
use Getopt::Std     qw(getopts);
use Carp;

use vars (
    q!$opt_v!,              # give debug info
    q!$opt_w!,              # warn about missing descs on modules
    q!$opt_a!,              # include relative paths
    q!$opt_s!,              # sort output within each directory
);

$| = 1;

getopts('wvas')             or die &quot;bad usage&quot;;

@ARGV = @INC unless @ARGV;

# Globals.  wish I didn't really have to do this.
use vars (
    q!$Start_Dir!,          # The top directory find was called with
    q!%Future!,             # topdirs find will handle later
);

my $Module;

# install an output filter to sort my module list, if wanted.
if ($opt_s) {
    if (open(ME, &quot;-|&quot;)) {
        $/ = '';
        while (&lt;ME&gt;) {
            chomp;
            print join(&quot;\n&quot;, sort split /\n/), &quot;\n&quot;;
        }
        exit;
    }
}

MAIN: {
    my %visited;
    my ($dev,$ino);

    @Future{@ARGV} = (1) x @ARGV;

    foreach $Start_Dir (@ARGV) {
        delete $Future{$Start_Dir};

        print &quot;\n&lt;&lt;Modules from $Start_Dir&gt;&gt;\n\n&quot;
            if $opt_v;

        next unless ($dev,$ino) = stat($Start_Dir);
        next if $visited{$dev,$ino}++;
        next unless $opt_a || $Start_Dir =~ m!^/!;

        find(\&amp;wanted, $Start_Dir);
    }
    exit;
}

# calculate module name from file and directory
sub modname {
    local $_ = $File::Find::name;

    if (index($_, $Start_Dir . '/') == 0) {
        substr($_, 0, 1+length($Start_Dir)) = '';
    }

    s { /              }    {::}gx;
    s { \.p(m|od)$     }    {}x;

    return $_;
}

# decide if this is a module we want
sub wanted {
    if ( $Future{$File::Find::name} ) {
        warn &quot;\t(Skipping $File::Find::name, qui venit in futuro.)\n&quot;
            if 0 and $opt_v;
        $File::Find::prune = 1;
        return;
    }
    return unless /\.pm$/ &amp;&amp; -f;
    $Module = &amp;modname;
    # skip obnoxious modules
    if ($Module =~ /^CPAN(\Z|::)/) {
        warn(&quot;$Module -- skipping because it misbehaves\n&quot;);
        return;
    }

    my    $file = $_;

    unless (open(POD, &quot;&lt; $file&quot;)) {
        warn &quot;\tcannot open $file: $!&quot;;
            # if $opt_w;
        return 0;
    }

    $: = &quot; -:&quot;;

    local $/ = '';
    local $_;
    while (&lt;POD&gt;) {
        if (/=head\d\s+NAME/) {
            chomp($_ = &lt;POD&gt;);
            s/^.*?-\s+//s;
            s/\n/ /g;
            #write;
            my $v;
            if (defined ($v = getversion($Module))) {
                print &quot;$Module ($v) &quot;;
            } else {
                print &quot;$Module &quot;;
            }
            print &quot;- $_\n&quot;;
            return 1;
        }
    }

    warn &quot;\t(MISSING DESC FOR $File::Find::name)\n&quot;
        if $opt_w;

    return 0;
}

# run Perl to load the module and print its verson number, redirecting
# errors to /dev/null
sub getversion {
    my $mod = shift;

    my $vers = `$^X -m$mod -e 'print \$${mod}::VERSION' 2&gt;/dev/null`;
    $vers =~ s/^\s*(.*?)\s*$/$1/; # remove stray whitespace
    return ($vers || undef);
}

format  =
^&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;~~^&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;
$Module,        $_
.<A
CLASS="indexterm"
NAME="ch12-idx-1000005325-0"
></A
><A
CLASS="indexterm"
NAME="ch12-idx-1000005325-1"
></A
><A
CLASS="indexterm"
NAME="ch12-idx-1000005325-2"
></A
></PRE
></DIV
><I
CLASS="comment"
></I
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch12_19.htm"
TITLE="12.18. Example: Module Template"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 12.18. Example: Module Template"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch13_01.htm"
TITLE="13. Classes, Objects, and Ties"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 13. Classes, Objects, and Ties"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>12.18. Example: Module Template</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>13. Classes, Objects, and Ties</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
