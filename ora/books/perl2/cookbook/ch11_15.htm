<HTML
><HEAD
>
<TITLE>Recipe 11.14. Transparently Persistent Data Structures (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:40:54Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch11_01.htm"
TITLE="11. References and Records"><LINK
REL="prev"
HREF="ch11_14.htm"
TITLE="11.13. Storing Data Structures to Disk"><LINK
REL="next"
HREF="ch11_16.htm"
TITLE="11.15. Program: Binary Trees"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch11_14.htm"
TITLE="11.13. Storing Data Structures to Disk"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 11.13. Storing Data Structures to Disk"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch11_01.htm"
TITLE="11. References and Records"
>Chapter 11<BR>References and Records</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch11_16.htm"
TITLE="11.15. Program: Binary Trees"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 11.15. Program: Binary Trees"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch11-11536"
>11.14. Transparently Persistent Data Structures</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch11-pgfId-1440"
>Problem<A
CLASS="indexterm"
NAME="ch11-idx-1000004879-0"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004879-1"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004879-2"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004879-3"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004879-4"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004879-5"
></A
></A
></H3
><P
CLASS="para"
>You have a complex data structure that you want to persist outside your program.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch11-pgfId-1446"
>Solution</A
></H3
><P
CLASS="para"
>Use MLDBM and either (preferably) DB_File, or else GDBM_File:</P
><PRE
CLASS="programlisting"
>use MLDBM qw(DB_File);
use Fcntl;                            

tie(%hash, 'MLDBM', 'testfile.db', O_CREAT|O_RDWR, 0666)
    or die &quot;can't open tie to testfile.db: $!&quot;;

# ... act on %hash

untie %hash;</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch11-pgfId-1470"
>Discussion</A
></H3
><P
CLASS="para"
>A hash with 100,000 items in it would undoubtably take considerable time to build. Storing this to disk, either slowly by hand or quickly with Storable, is still an expensive operation in memory and computation.</P
><P
CLASS="para"
>The DBM modules solve this by tying hashes to disk database files. Rather than reading the whole structure in at once, they only pull in what they need, when they need it. To the user, it looks like a hash that persists across program invocations.</P
><P
CLASS="para"
>Unfortunately, the values in this persistent hash must be plain strings. You cannot readily use a database file as a backing store for a hash of hashes, a hash of arrays, and so on, just for a hash of strings.</P
><P
CLASS="para"
>However, the MLDBM module from CPAN allows you to store references in a database. It uses Data::Dumper to stringify these references for external storage:</P
><PRE
CLASS="programlisting"
>use MLDBM qw(DB_File);
use Fcntl;                            
tie(%hash, 'MLDBM', 'testfile.db', O_CREAT|O_RDWR, 0666)
    or die &quot;can't open tie to testfile.db: $!&quot;;</PRE
><P
CLASS="para"
>Now you can use <CODE
CLASS="literal"
>%hash</CODE
> to fetch or store complex records from disk. The only drawback is that you can't access the references piecemeal. You have to pull in the reference from the database, work with it, and then store it back.</P
><PRE
CLASS="programlisting"
># this doesn't work!
$hash{&quot;some key&quot;}[4] = &quot;fred&quot;;

# RIGHT
$aref = $hash{&quot;some key&quot;};
$aref-&gt;[4] = &quot;fred&quot;;
$hash{&quot;some key&quot;} = $aref;<A
CLASS="indexterm"
NAME="ch11-idx-1000004881-0"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004881-1"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004881-2"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004881-3"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004881-4"
></A
><A
CLASS="indexterm"
NAME="ch11-idx-1000004881-5"
></A
></PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch11-pgfId-1506"
>See Also</A
></H3
><P
CLASS="para"
>The documentation for the CPAN module MLDBM; <A
CLASS="xref"
HREF="ch14_02.htm"
TITLE="Making and Using a DBM File"
>Recipe 14.1</A
>; <A
CLASS="xref"
HREF="ch14_08.htm"
TITLE="Treating a Text File as a Database Array"
>Recipe 14.7</A
>; <A
CLASS="xref"
HREF="ch14_12.htm"
TITLE="Program: ggh&nbsp- Grep Netscape Global History"
>Recipe 14.11</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch11_14.htm"
TITLE="11.13. Storing Data Structures to Disk"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 11.13. Storing Data Structures to Disk"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch11_16.htm"
TITLE="11.15. Program: Binary Trees"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 11.15. Program: Binary Trees"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>11.13. Storing Data Structures to Disk</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>11.15. Program: Binary Trees</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
