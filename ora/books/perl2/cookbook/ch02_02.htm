<HTML
><HEAD
>
<TITLE>Recipe 2.1. Checking Whether a String Is a Valid Number (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:30:01Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch02_01.htm"
TITLE="2. Numbers"><LINK
REL="prev"
HREF="ch02_01.htm"
TITLE="2.0. Introduction"><LINK
REL="next"
HREF="ch02_03.htm"
TITLE="2.2. Comparing Floating-Point Numbers"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_01.htm"
TITLE="2.0. Introduction"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.0. Introduction"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch02_01.htm"
TITLE="2. Numbers"
>Chapter 2<BR>Numbers</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_03.htm"
TITLE="2.2. Comparing Floating-Point Numbers"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.2. Comparing Floating-Point Numbers"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch02-36504"
>2.1. Checking Whether a String Is a Valid Number</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-69"
>Problem <A
CLASS="indexterm"
NAME="ch02-idx-1000007977-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000007977-1"
></A
></A
></H3
><P
CLASS="para"
>You want to check whether a string represents a valid number. This is a common problem when validating input, as in a CGI script.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-75"
>Solution</A
></H3
><P
CLASS="para"
><A
CLASS="indexterm"
NAME="ch02-idx-1000007987-0"
></A
>Compare it against a regular expression that matches the kinds of numbers you're interested in.</P
><PRE
CLASS="programlisting"
>if ($string =~ /PATTERN/) {
    # is a number
} else {
    # is not
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-91"
>Discussion</A
></H3
><P
CLASS="para"
>This problem gets to the heart of what we mean by a number. Even things that sound simple, like <EM
CLASS="emphasis"
>integer</EM
>, make you think hard about what you will accept ("Is a leading + for positive numbers optional, mandatory, or forbidden?"). The many ways that floating-point numbers can be represented could overheat your brain.</P
><P
CLASS="para"
>You must decide what you will and will not accept. Then, construct a regular expression to match those things alone. Here are some precooked solutions (the cookbook's equivalent of just-add-water meals) for most common cases.</P
><PRE
CLASS="programlisting"
>warn &quot;has nondigits&quot;        if     /\D/;
warn &quot;not a natural number&quot; unless /^\d+$/;             # rejects -3
warn &quot;not an integer&quot;       unless /^-?\d+$/;           # rejects +3
warn &quot;not an integer&quot;       unless /^[+-]?\d+$/;
warn &quot;not a decimal number&quot; unless /^-?\d+\.?\d*$/;     # rejects .2
warn &quot;not a decimal number&quot; unless /^-?(?:\d+(?:\.\d*)?|\.\d+)$/;
warn &quot;not a C float&quot;
       unless /^([+-]?)(?=\d|\.\d)\d*(\.\d*)?([Ee]([+-]?\d+))?$/;</PRE
><P
CLASS="para"
>These lines do not catch the IEEE notations of "Infinity" and "NaN", but unless you're worried that IEEE committee members will stop by your workplace and beat you over the head with copies of the relevant standards documents, you can probably forget about these strange numbers.</P
><P
CLASS="para"
>If your number has leading or trailing whitespace, those patterns won't work. Either add the appropriate logic directly, or call the <CODE
CLASS="literal"
>trim</CODE
> function from <A
CLASS="xref"
HREF="ch01_15.htm"
TITLE="Trimming Blanks from the Ends of a String"
>Recipe 1.14</A
>.</P
><P
CLASS="para"
>If you're on a POSIX system, Perl supports the <CODE
CLASS="literal"
>POSIX::strtod</CODE
> function. Its semantics are cumbersome, so here's a <CODE
CLASS="literal"
>getnum</CODE
> wrapper function for more convenient access. This function takes a string and returns the number it found or <CODE
CLASS="literal"
>undef</CODE
> for input that isn't a C float. The <CODE
CLASS="literal"
>is_numeric</CODE
> function is a front end to <CODE
CLASS="literal"
>getnum</CODE
> for when you just want to say "Is this a float?"</P
><PRE
CLASS="programlisting"
>sub getnum {
    use POSIX qw(strtod);
    my $str = shift;
    $str =~ s/^\s+//;
    $str =~ s/\s+$//;
    $! = 0;
    my($num, $unparsed) = strtod($str);
    if (($str eq '') || ($unparsed != 0) || $!) {
        return;
    } else {
        return $num;
    } 
} 

sub is_numeric { defined scalar &amp;getnum } </PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-151"
>See Also</A
></H3
><P
CLASS="para"
>The regular expression syntax in <EM
CLASS="emphasis"
>perlre </EM
>(1) and <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; your system's <I
CLASS="filename"
>strtod</I
> (3) manpage; the documentation for the standard POSIX module (also in <A
CLASS="olink"
HREF="../prog/ch07_01.htm"
>Chapter 7</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>) <A
CLASS="indexterm"
NAME="ch02-idx-1000007979-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000007979-1"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000007979-2"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_01.htm"
TITLE="2.0. Introduction"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.0. Introduction"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_03.htm"
TITLE="2.2. Comparing Floating-Point Numbers"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.2. Comparing Floating-Point Numbers"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>2.0. Introduction</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>2.2. Comparing Floating-Point Numbers</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
