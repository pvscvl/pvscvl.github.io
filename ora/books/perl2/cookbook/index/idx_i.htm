<HTML>
<HEAD>
<TITLE>Index</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
 <IMG SRC="../gifs/smbanner.gif" ALT="Perl Cookbook" USEMAP="#srchmap" BORDER="0"></H1><MAP NAME="srchmap"><AREA SHAPE="RECT" COORDS="0,0,466,54" HREF="../index.htm" ALT="Perl Cookbook"><AREA SHAPE="RECT" COORDS="467,0,514,18" HREF="../jobjects/fsearch.htm" ALT="Search this book"></MAP>

<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| <A HREF="idx_c.htm">C</A>
| <A HREF="idx_d.htm">D</A>
| <A HREF="idx_e.htm">E</A>
| <A HREF="idx_f.htm">F</A>
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| I
| <A HREF="idx_j.htm">J</A>
| <A HREF="idx_k.htm">K</A>
| <A HREF="idx_l.htm">L</A>
| <A HREF="idx_m.htm">M</A>
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| <A HREF="idx_p.htm">P</A>
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_x.htm">X</A>
| <A HREF="idx_y.htm">Y</A>
| <A HREF="idx_z.htm">Z</A></FONT>

<H1>Index: I</H1>

<DL>
<DT><A NAME=".2di-command.2dline-option">-I command-line option</A>
: <A HREF="../ch12_08.htm">12.7. Keeping Your Own Module Directory</A>
<DT><A NAME=".2di-command.2dline-option">-i command-line option</A>
: <A HREF="../ch07_08.htm">7.7. Writing a Filter</A>
<DD><DL>
  <DT>modifying files with
: <A HREF="../ch07_10.htm">7.9. Modifying a File in Place with -i Switch</A>
</DL>
<DT><A NAME=".2fi-pattern.2dmatching-modifier">/i pattern-matching modifier</A>
: <A HREF="../ch06_01.htm">6.0. Introduction</A>
<DT><A NAME="i.2fo-operations">I/O operations</A>
: <A HREF="../ch07_01.htm">7.0. Introduction</A>
<DD><DL>
  <DT>buffering
  <DD><DL>
    <DT><A HREF="../ch07_01.htm">7.0. Introduction</A>
    <DT><A HREF="../ch07_13.htm">7.12. Flushing Output</A>
    <DT><A HREF="../ch08_01.htm">8.0. Introduction</A>
    <DT><A HREF="../ch17_04.htm">17.3. Communicating over TCP</A>
  </DL>
  <DT>controlling for other programs
: <A HREF="../ch16_09.htm">16.8. Controlling Input and Output of Another Program</A>
  <DT>flushing output
: <A HREF="../ch07_13.htm">7.12. Flushing Output</A>
  <DT>non-blocking
: <A HREF="../ch07_15.htm">7.14. Doing Non-Blocking I/O</A>
  <DT>preprocessing input
: <A HREF="../ch16_07.htm">16.6. Preprocessing Input</A>
  <DT>random-access I/O
: <A HREF="../ch08_13.htm">8.12. Using Random-Access I/O</A>
  <DT>reading/writing to other programs
: <A HREF="../ch16_05.htm">16.4. Reading or Writing to Another Program</A>
</DL>
<DT><A NAME="ic.5fcookies-program">ic_cookies program (example)</A>
: <A HREF="../ch19_11.htm">19.10. Managing Cookies</A>
<DT><A NAME="idempotency">idempotency</A>
: <A HREF="../ch19_01.htm">19.0. Introduction</A>
<DT><A NAME="if.2dmodified.2dsince-header">If-Modified-Since header</A>
: <A HREF="../ch20_11.htm">20.10. Mirroring Web Pages</A>
<DT><A NAME="imaginary-numbers">imaginary numbers</A>
: <A HREF="../ch02_16.htm">2.15. Using Complex Numbers</A>
<DT><A NAME="importing-from-modules">importing from modules</A>
<DD><DL>
  <DT><A HREF="../ch10_15.htm">10.14. Redefining a Function</A>
  <DT><A HREF="../ch12_01.htm">12.0. Introduction</A>
</DL>
<DT><A NAME="inaddr.5fany">INADDR_ANY</A>
<DD><DL>
  <DT><A HREF="../ch17_02.htm">17.1. Writing a TCP Client</A>
  <DT><A HREF="../ch17_15.htm">17.14. Writing a Multi-Homed Server</A>
</DL>
<DT><A NAME=".40inc-array">@INC array</A>
: <A HREF="../ch12_08.htm">12.7. Keeping Your Own Module Directory</A>
<DT><A NAME=".23include-header">#include header, translating with h2ph</A>
: <A HREF="../ch12_15.htm">12.14. Using h2ph to Translate C #include Files</A>
<DT><A NAME="indeces-of-array-elements">indeces of array elements</A>
: (see <A HREF="idx_a.htm">arrays</A>)
<DT><A NAME="indents">indents</A>
: (see <A HREF="idx_w.htm">whitespace</A>)
<DT><A NAME="indices-of-hash-elements">indices of hash elements</A>
: <A HREF="../ch05_01.htm">5.0. Introduction</A>
<DT><A NAME="indirect-filehandles">indirect filehandles</A>
<DD><DL>
  <DT><A HREF="../ch07_01.htm">7.0. Introduction</A>
  <DT><A HREF="../ch07_17.htm">7.16. Storing Filehandles in Variables</A>
</DL>
<DT><A NAME="indirect-notation">indirect notation</A>
: <A HREF="../ch13_01.htm">13.0. Introduction</A>
<DT><A NAME="inet.5fntoa">inet_ntoa( )</A>
: <A HREF="../ch17_01.htm">17.0. Introduction</A>
<DT><A NAME="infix">infix (-&gt;) notation</A>
: <A HREF="../ch11_01.htm">11.0. Introduction</A>
<DT><A NAME="inheritance">inheritance</A>
<DD><DL>
  <DT><A HREF="../ch13_01.htm">13.0. Introduction</A>
  <DT><A HREF="../ch13_10.htm">13.9. Writing an Inheritable Class</A>
  <DT><A HREF="../ch13_13.htm">13.12. Solving the Data Inheritance Problem</A>
</DL>
<DT><A NAME="initializers">initializers</A>
: (see <A HREF="idx_c.htm">constructors</A>)
<DT><A NAME="initializing">initializing</A>
<DD><DL>
  <DT>arrays
: <A HREF="../ch04_02.htm">4.1. Specifying a List In Your Program</A>
  <DT>hashes
: <A HREF="../ch05_01.htm">5.0. Introduction</A>
  <DT>modules
: <A HREF="../ch12_07.htm">12.6. Automating Module Clean-Up</A>
</DL>
<DT><A NAME="inodes">inodes</A>
: <A HREF="../ch09_01.htm">9.0. Introduction</A>
<DT><A NAME="input">input</A>
<DD><DL>
  <DT>checking for waiting
: <A HREF="../ch15_10.htm">15.9. Checking for Waiting Input</A>
  <DT>comma-separated, parsing
: <A HREF="../ch01_16.htm">1.15. Parsing Comma-Separated Data</A>
  <DT>controlling for other programs
: <A HREF="../ch16_09.htm">16.8. Controlling Input and Output of Another Program</A>
  <DT>editing
: <A HREF="../ch15_12.htm">15.11. Editing Input</A>
  <DT>executing shell commands from (CGI)
: <A HREF="../ch19_07.htm">19.6. Executing Commands Without Shell Escapes</A>
  <DT>expanding variables in
: <A HREF="../ch01_09.htm">1.8. Expanding Variables in User Input</A>
  <DT>Expect-controlled programs and
: <A HREF="../ch15_14.htm">15.13. Controlling Another Program with Expect</A>
  <DT>extracting variable-length fields
: <A HREF="../ch08_10.htm">8.9. Processing Variable-Length Text Fields</A>
  <DT>from HTML forms
: (see <A HREF="idx_c.htm">CGI programming</A>)
  <DT>parsing command-line arguments
: <A HREF="../ch15_02.htm">15.1. Parsing Program Arguments</A>
  <DT>preprocessing
: <A HREF="../ch16_07.htm">16.6. Preprocessing Input</A>
  <DT>random-access I/O
: <A HREF="../ch08_13.htm">8.12. Using Random-Access I/O</A>
  <DT>reading from keyboard
: <A HREF="../ch15_07.htm">15.6. Reading from the Keyboard</A>
  <DT>reading from other programs
: <A HREF="../ch16_05.htm">16.4. Reading or Writing to Another Program</A>
  <DT>reading passwords
: <A HREF="../ch15_11.htm">15.10. Reading Passwords</A>
  <DT>reading records with pattern separators
: <A HREF="../ch06_08.htm">6.7. Reading Records with a Pattern Separator</A>
  <DT>reading STDERR from programs
: <A HREF="../ch16_08.htm">16.7. Reading STDERR from a Program</A>
</DL>
<DT><A NAME="installing">installing</A>
<DD><DL>
  <DT>modules from CPAN
: <A HREF="../ch12_18.htm">12.17. Building and Installing a CPAN Module</A>
  <DT>signal handlers
: <A HREF="../ch16_16.htm">16.15. Installing a Signal Handler</A>
</DL>
<DT><A NAME="instance-data">instance data</A>
<DD><DL>
  <DT><A HREF="../ch13_01.htm">13.0. Introduction</A>
  <DT><A HREF="../ch13_04.htm">13.3. Managing Instance Data</A>
  <DT>circular data structures
: <A HREF="../ch13_14.htm">13.13. Coping with Circular Data Structures</A>
  <DT>inheritance and
: <A HREF="../ch13_13.htm">13.12. Solving the Data Inheritance Problem</A>
</DL>
<DT><A NAME="instance-methods">instance methods</A>
: <A HREF="../ch13_01.htm">13.0. Introduction</A>
<DT><A NAME="int">int( )</A>
: <A HREF="../ch02_04.htm">2.3. Rounding Floating-Point Numbers</A>
<DT><A NAME="integers">integers</A>
: (see <A HREF="idx_n.htm">numbers</A>)
<DT><A NAME="interactivity">interactivity, testing for</A>
: <A HREF="../ch15_03.htm">15.2. Testing Whether a Program Is Running Interactively</A>
<DT><A NAME="interfaces">interfaces</A>
: (see <A HREF="idx_u.htm">user interfaces</A>)
<DT><A NAME="internet-domain-sockets">Internet domain sockets</A>
: <A HREF="../ch17_01.htm">17.0. Introduction</A>
<DT><A NAME="internet-services">Internet services</A>
: <A HREF="../ch18_01.htm">18.0. Introduction</A>
<DD><DL>
  <DT>DNS lookups
: <A HREF="../ch18_02.htm">18.1. Simple DNS Lookups</A>
  <DT>expn and vrfy programs (examples)
: <A HREF="../ch18_10.htm">18.9. Program: expn and vrfy</A>
  <DT>FTP clients
: <A HREF="../ch18_03.htm">18.2. Being an FTP Client</A>
  <DT>mail
: (see <A HREF="idx_e.htm">email</A>)
  <DT>pinging machines
: <A HREF="../ch18_08.htm">18.7. Pinging a Machine</A>
  <DT>simulating telnet connection
: <A HREF="../ch18_07.htm">18.6. Simulating Telnet from a Program</A>
  <DT>Usenet news
: <A HREF="../ch18_05.htm">18.4. Reading and Posting Usenet News Messages</A>
  <DT>whois service
: <A HREF="../ch18_09.htm">18.8. Using Whois to Retrieve Information from the InterNIC</A>
</DL>
<DT><A NAME="intersections-on-lists">intersections on lists</A>
: <A HREF="../ch04_08.htm">4.7. Finding Elements in One Array but Not Another</A>
<DT><A NAME="inverting-hashes">inverting hashes</A>
: <A HREF="../ch05_09.htm">5.8. Inverting a Hash</A>
<DT><A NAME="io.3a.3afile-module">IO::File module</A>
<DD><DL>
  <DT><A HREF="../ch07_01.htm">7.0. Introduction</A>
  <DT><A HREF="../ch07_02.htm">7.1. Opening a File</A>
  <DT>temporary files
: <A HREF="../ch07_06.htm">7.5. Creating Temporary Files</A>
</DL>
<DT><A NAME="io.3a.3ahandle-module">IO::Handle module</A>
: <A HREF="../ch07_01.htm">7.0. Introduction</A>
<DT><A NAME="io.3a.3apty-module">IO::Pty module</A>
: <A HREF="../ch15_14.htm">15.13. Controlling Another Program with Expect</A>
<DT><A NAME="io.3a.3aselect-module">IO::Select module</A>
<DD><DL>
  <DT><A HREF="../ch07_14.htm">7.13. Reading from Many Filehandles Without Blocking</A>
  <DT><A HREF="../ch16_10.htm">16.9. Controlling the Input, Output, and Error of Another Program</A>
</DL>
<DT><A NAME="io.3a.3asocket-module">IO::Socket module</A>
<DD><DL>
  <DT>closing socket after forking
: <A HREF="../ch17_10.htm">17.9. Closing a Socket After Forking</A>
  <DT>IO::Socket::INET class
: <A HREF="../ch17_02.htm">17.1. Writing a TCP Client</A>
  <DT>UDP clients and servers
: <A HREF="../ch17_05.htm">17.4. Setting Up a UDP Client</A>
</DL>
<DT><A NAME="io.3a.3astty-module">IO::Stty module</A>
: <A HREF="../ch15_14.htm">15.13. Controlling Another Program with Expect</A>
<DT><A NAME="ioctl">ioctl( )</A>
<DD><DL>
  <DT><A HREF="../ch07_16.htm">7.15. Determining the Number of Bytes to Read</A>
  <DT><A HREF="../ch10_11.htm">10.10. Returning Failure</A>
  <DT><A HREF="../ch12_15.htm">12.14. Using h2ph to Translate C #include Files</A>
</DL>
<DT><A NAME="ip-addresses">IP addresses</A>
<DD><DL>
  <DT>determining your own
: <A HREF="../ch17_09.htm">17.8. Finding Your Own Name and Address</A>
  <DT>DNS lookups
: <A HREF="../ch18_02.htm">18.1. Simple DNS Lookups</A>
  <DT>expn and vrfy programs (examples)
: <A HREF="../ch18_10.htm">18.9. Program: expn and vrfy</A>
  <DT>identifying at socket ends
: <A HREF="../ch17_08.htm">17.7. Identifying the Other End of a Socket</A>
  <DT>multi-homed servers
: <A HREF="../ch17_15.htm">17.14. Writing a Multi-Homed Server</A>
  <DT>packed, converting to ASCII strings
: <A HREF="../ch17_01.htm">17.0. Introduction</A>
</DL>
<DT><A NAME="ipc.3a.3aopen.32-module">IPC::Open2 module</A>
: <A HREF="../ch16_09.htm">16.8. Controlling Input and Output of Another Program</A>
<DT><A NAME="ipc.3a.3aopen.33">IPC::Open3</A>
: <A HREF="../ch16_10.htm">16.9. Controlling the Input, Output, and Error of Another Program</A>
<DT><A NAME="ipc.3a.3ashareable">IPC::Shareable</A>
: <A HREF="../ch16_13.htm">16.12. Sharing Variables in Different Processes</A>
<DT><A NAME="is.5fsafe">is_safe( )</A>
: <A HREF="../ch08_18.htm">8.17. Testing a File for Trustworthiness</A>
<DT><A NAME="is.5fverysafe">is_verysafe( )</A>
: <A HREF="../ch08_18.htm">8.17. Testing a File for Trustworthiness</A>
<DT><A NAME=".40isa-array">@ISA array</A>
: <A HREF="../ch13_01.htm">13.0. Introduction</A>
<DT><A NAME="isa">isa( ) (UNIVERSAL)</A>
: <A HREF="../ch13_09.htm">13.8. Determining Subclass Membership</A>
<DT><A NAME="iterations">iterations</A>
: (see <A HREF="idx_a.htm">arrays</A>; <A HREF="idx_l.htm">lists</A>)
<DT><A NAME="iterator-variables">iterator variables</A>
: <A HREF="../ch04_05.htm">4.4. Doing Something with Every Element in a List</A>
</DL>

<P>
<HR WIDTH="515" ALIGN="LEFT">

<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| <A HREF="idx_c.htm">C</A>
| <A HREF="idx_d.htm">D</A>
| <A HREF="idx_e.htm">E</A>
| <A HREF="idx_f.htm">F</A>
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| I
| <A HREF="idx_j.htm">J</A>
| <A HREF="idx_k.htm">K</A>
| <A HREF="idx_l.htm">L</A>
| <A HREF="idx_m.htm">M</A>
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| <A HREF="idx_p.htm">P</A>
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_x.htm">X</A>
| <A HREF="idx_y.htm">Y</A>
| <A HREF="idx_z.htm">Z</A></FONT>



<p><!-- LIBRARY NAV BAR --><font size="-1"> <img src="../../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="../copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../../index.htm"><area shape="rect" coords="84,1,157,108" href="../../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../index.htm"><area shape="rect" coords="414,2,523,103" href="../../sysadmin/index.htm"></map><p>
<P
CLASS="nav"
><FONT
SIZE="-1"
></P
>
</BODY>
</HTML>
