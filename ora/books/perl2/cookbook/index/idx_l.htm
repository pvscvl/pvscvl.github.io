<HTML>
<HEAD>
<TITLE>Index</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
 <IMG SRC="../gifs/smbanner.gif" ALT="Perl Cookbook" USEMAP="#srchmap" BORDER="0"></H1><MAP NAME="srchmap"><AREA SHAPE="RECT" COORDS="0,0,466,54" HREF="../index.htm" ALT="Perl Cookbook"><AREA SHAPE="RECT" COORDS="467,0,514,18" HREF="../jobjects/fsearch.htm" ALT="Search this book"></MAP>

<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| <A HREF="idx_c.htm">C</A>
| <A HREF="idx_d.htm">D</A>
| <A HREF="idx_e.htm">E</A>
| <A HREF="idx_f.htm">F</A>
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| <A HREF="idx_i.htm">I</A>
| <A HREF="idx_j.htm">J</A>
| <A HREF="idx_k.htm">K</A>
| L
| <A HREF="idx_m.htm">M</A>
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| <A HREF="idx_p.htm">P</A>
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_x.htm">X</A>
| <A HREF="idx_y.htm">Y</A>
| <A HREF="idx_z.htm">Z</A></FONT>

<H1>Index: L</H1>

<DL>
<DT><A NAME=".5cl-string-escape">\L string escape</A>
: <A HREF="../ch01_10.htm">1.9. Controlling Case</A>
<DT><A NAME=".5cl-string-escape">\l string escape</A>
: <A HREF="../ch01_10.htm">1.9. Controlling Case</A>
<DT><A NAME="labels">labels, menu</A>
: <A HREF="../ch15_15.htm">15.14. Creating Menus with Tk</A>
<DT><A NAME="last">last( )</A>
: <A HREF="../ch04_13.htm">4.12. Finding the First List Element That Passes a Test</A>
<DT><A NAME="laston-program">laston program</A>
: <A HREF="../ch08_21.htm">8.20. Program: laston</A>
<DT><A NAME="lc">lc( )</A>
: <A HREF="../ch01_10.htm">1.9. Controlling Case</A>
<DT><A NAME="lcfirst">lcfirst( )</A>
: <A HREF="../ch01_10.htm">1.9. Controlling Case</A>
<DT><A NAME="leading-whitespace">leading whitespace, removing</A>
: <A HREF="../ch01_15.htm">1.14. Trimming Blanks from the Ends of a String</A>
<DT><A NAME="lexical-scope">lexical scope</A>
<DD><DL>
  <DT><A HREF="../ch10_03.htm">10.2. Making Variables Private to a Function</A>
  <DT><A HREF="../ch10_14.htm">10.13. Saving Global Values</A>
</DL>
<DT><A NAME="libraries">libraries</A>
: <A HREF="../ch12_01.htm">12.0. Introduction</A>
<DT><A NAME="libwww.2dperl-modules">libwww-perl modules</A>
: <A HREF="../ch20_01.htm">20.0. Introduction</A>
<DT><A NAME="line-breaks">line breaks</A>
<DD><DL>
  <DT>(see also <A HREF="idx_w.htm">whitespace</A>)
  <DT><A HREF="../ch06_07.htm">6.6. Matching Multiple Lines</A>
  <DT>counting lines in files
: <A HREF="../ch08_03.htm">8.2. Counting Lines (or Paragraphs or Records) in a File</A>
  <DT>defining lines
: <A HREF="../ch08_12.htm">8.11. Processing Binary Files</A>
  <DT>deleting last file line
: <A HREF="../ch08_11.htm">8.10. Removing the Last Line of a File</A>
  <DT>extracting ranges of lines
: <A HREF="../ch06_09.htm">6.8. Extracting a Range of Lines</A>
  <DT>matching across multiple lines
: <A HREF="../ch06_07.htm">6.6. Matching Multiple Lines</A>
  <DT>random lines from files
: <A HREF="../ch08_07.htm">8.6. Picking a Random Line from a File</A>
  <DT>randomizing file line order
: <A HREF="../ch08_08.htm">8.7. Randomizing All Lines</A>
  <DT>reading files backwards
: <A HREF="../ch08_05.htm">8.4. Reading a File Backwards by Line or Paragraph</A>
  <DT>reading with continuation characters
: <A HREF="../ch08_02.htm">8.1. Reading Lines with Continuation Characters</A>
</DL>
<DT><A NAME="line-mode-interfaces">line mode interfaces</A>
: <A HREF="../ch15_01.htm">15.0. Introduction</A>
<DT><A NAME=".5f.5fline.5f.5f-symbol">__LINE__ symbol</A>
: <A HREF="../ch10_05.htm">10.4. Determining Current Function Name</A>
<DT><A NAME="line.3a">LINE: (implicit loop label)</A>
: <A HREF="../ch07_08.htm">7.7. Writing a Filter</A>
<DT><A NAME="lingua.3a.3aen.3a.3ainflect-module">Lingua::EN::Inflect module</A>
: <A HREF="../ch02_19.htm">2.18. Printing Correct Plurals</A>
<DT><A NAME="links">links</A>
: (see <A HREF="idx_h.htm">hyperlinks</A>)
<DD><DL>
  <DT>extracting from HTML
: <A HREF="../ch20_04.htm">20.3. Extracting URLs</A>
</DL>
<DT><A NAME="list-assignment">list assignment</A>
: <A HREF="../ch01_04.htm">1.3. Exchanging Values Without Using Temporary Variables</A>
<DT><A NAME="list-context">list context, detecting</A>
: <A HREF="../ch10_07.htm">10.6. Detecting Return Context</A>
<DT><A NAME="listen">listen( )</A>
: <A HREF="../ch17_01.htm">17.0. Introduction</A>
<DT><A NAME="lists">lists</A>
: <A HREF="../ch04_01.htm">4.0. Introduction</A>
<DD><DL>
  <DT>arrays vs.
: <A HREF="../ch04_01.htm">4.0. Introduction</A>
  <DT>circular
: <A HREF="../ch04_17.htm">4.16. Implementing a Circular List</A>
  <DT>extracting particular elements
: <A HREF="../ch04_07.htm">4.6. Extracting Unique Elements from a List</A>
  <DT>extracting particular subsets
: <A HREF="../ch04_14.htm">4.13. Finding All Elements in an Array Matching Certain Criteria</A>
  <DT>flattened
: <A HREF="../ch04_01.htm">4.0. Introduction</A>
  <DT>initializing
: <A HREF="../ch04_02.htm">4.1. Specifying a List In Your Program</A>
  <DT>iterating through all elements
  <DD><DL>
    <DT><A HREF="../ch04_05.htm">4.4. Doing Something with Every Element in a List</A>
    <DT><A HREF="../ch04_13.htm">4.12. Finding the First List Element That Passes a Test</A>
  </DL>
  <DT>permute programs
: <A HREF="../ch04_20.htm">4.19. Program: permute</A>
  <DT>printing with commas
: <A HREF="../ch04_03.htm">4.2. Printing a List with Commas</A>
  <DT>processing multiple elements
: <A HREF="../ch04_12.htm">4.11. Processing Multiple Elements of an Array</A>
  <DT>randomizing element order
: <A HREF="../ch04_18.htm">4.17. Randomizing an Array</A>
  <DT>reversing elements of
: <A HREF="../ch04_11.htm">4.10. Reversing an Array</A>
  <DT>unions, intersections, differences
: <A HREF="../ch04_08.htm">4.7. Finding Elements in One Array but Not Another</A>
  <DT>words program (example)
: <A HREF="../ch04_19.htm">4.18. Program: words</A>
</DL>
<DT><A NAME="loader-program">loader program (example)</A>
: <A HREF="../ch15_18.htm">15.17. Removing the DOS Shell Window with Windows Perl/Tk</A>
<DT><A NAME="loading-modules">loading modules</A>
: (see <A HREF="idx_m.htm">modules</A>)
<DT><A NAME="local">local( )</A>
<DD><DL>
  <DT><A HREF="../ch10_14.htm">10.13. Saving Global Values</A>
  <DT><A HREF="../ch10_15.htm">10.14. Redefining a Function</A>
  <DT><A HREF="../ch16_17.htm">16.16. Temporarily Overriding a Signal Handler</A>
</DL>
<DT><A NAME="locale-settings">locale settings</A>
: <A HREF="../ch06_13.htm">6.12. Honoring Locale Settings in Regular Expressions</A>
<DT><A NAME="localizing-functions">localizing functions</A>
: <A HREF="../ch10_15.htm">10.14. Redefining a Function</A>
<DT><A NAME="localtime">localtime( )</A>
<DD><DL>
  <DT><A HREF="../ch03_01.htm">3.0. Introduction</A>
  <DT><A HREF="../ch03_09.htm">3.8. Printing a Date</A>
</DL>
<DT><A NAME="lockarea-program">lockarea program</A>
: <A HREF="../ch07_23.htm">7.22. Program: lockarea</A>
<DT><A NAME="locking">locking</A>
<DD><DL>
  <DT>blocking signals
: <A HREF="../ch16_21.htm">16.20. Blocking Signals</A>
  <DT>DBK files
: <A HREF="../ch14_06.htm">14.5. Locking DBM Files</A>
  <DT>files
  <DD><DL>
    <DT><A HREF="../ch07_12.htm">7.11. Locking a File</A>
    <DT><A HREF="../ch07_22.htm">7.21. Program: netlock</A>
  </DL>
  <DT>region-specific locks
: <A HREF="../ch07_23.htm">7.22. Program: lockarea</A>
</DL>
<DT><A NAME="log-files">log files (web server)</A>
<DD><DL>
  <DT><A HREF="../ch19_01.htm">19.0. Introduction</A>
  <DT><A HREF="../ch20_13.htm">20.12. Parsing a Web Server Log File</A>
  <DT>processing
: <A HREF="../ch20_14.htm">20.13. Processing Server Logs</A>
</DL>
<DT><A NAME="log">log( )</A>
: <A HREF="../ch02_14.htm">2.13. Taking Logarithms</A>
<DT><A NAME="log.31.30">log10( )</A>
: <A HREF="../ch02_14.htm">2.13. Taking Logarithms</A>
<DT><A NAME="log.5fbase">log_base( ) (example)</A>
: <A HREF="../ch02_14.htm">2.13. Taking Logarithms</A>
<DT><A NAME="logarithms">logarithms</A>
: <A HREF="../ch02_14.htm">2.13. Taking Logarithms</A>
<DT><A NAME="logfile.3a.3aapache">Logfile::Apache</A>
: <A HREF="../ch20_14.htm">20.13. Processing Server Logs</A>
<DT><A NAME="logical-functionality-in-patterns">logical functionality in patterns</A>
: <A HREF="../ch06_18.htm">6.17. Expressing AND, OR, and NOT in a Single Pattern</A>
<DT><A NAME="login-sessions">login sessions</A>
: <A HREF="../ch15_01.htm">15.0. Introduction</A>
<DT><A NAME="logn">logn( ) (Math::Complex)</A>
: <A HREF="../ch02_14.htm">2.13. Taking Logarithms</A>
<DT><A NAME="loop-variables">loop variables</A>
: <A HREF="../ch04_05.htm">4.4. Doing Something with Every Element in a List</A>
<DT><A NAME="lowercase-program">lowercase program (example)</A>
: <A HREF="../ch07_08.htm">7.7. Writing a Filter</A>
<DT><A NAME="lowercase">lowercase, converting to uppercase</A>
: <A HREF="../ch01_10.htm">1.9. Controlling Case</A>
<DT><A NAME="lst-program">lst program</A>
: <A HREF="../ch09_13.htm">9.12. Program: lst</A>
<DT><A NAME="lvaluable-functions">lvaluable functions</A>
: <A HREF="../ch01_02.htm">1.1. Accessing Substrings</A>
<DT><A NAME="lwp-modules">LWP modules</A>
: <A HREF="../ch20_01.htm">20.0. Introduction</A>
<DD><DL>
  <DT>extracting HTML tags
: <A HREF="../ch20_07.htm">20.6. Extracting or Removing HTML Tags</A>
  <DT>LWP::Heuristic module
: <A HREF="../ch20_02.htm">20.1. Fetching a URL from a Perl Script</A>
  <DT>LWP::Request module
: <A HREF="../ch20_02.htm">20.1. Fetching a URL from a Perl Script</A>
  <DT>LWP::Response module
: <A HREF="../ch20_02.htm">20.1. Fetching a URL from a Perl Script</A>
  <DT>LWP::RobotUA module
: <A HREF="../ch20_12.htm">20.11. Creating a Robot</A>
  <DT>LWP::Simple module
: <A HREF="../ch20_02.htm">20.1. Fetching a URL from a Perl Script</A>
  <DD><DL>
    <DT>mirroring web pages
: <A HREF="../ch20_11.htm">20.10. Mirroring Web Pages</A>
  </DL>
  <DT>LWP::UserAgent module
: <A HREF="../ch20_02.htm">20.1. Fetching a URL from a Perl Script</A>
</DL>
</DL>

<P>
<HR WIDTH="515" ALIGN="LEFT">

<A HREF="idx_0.htm">Symbols</A>
| <A HREF="idx_a.htm">A</A>
| <A HREF="idx_b.htm">B</A>
| <A HREF="idx_c.htm">C</A>
| <A HREF="idx_d.htm">D</A>
| <A HREF="idx_e.htm">E</A>
| <A HREF="idx_f.htm">F</A>
| <A HREF="idx_g.htm">G</A>
| <A HREF="idx_h.htm">H</A>
| <A HREF="idx_i.htm">I</A>
| <A HREF="idx_j.htm">J</A>
| <A HREF="idx_k.htm">K</A>
| L
| <A HREF="idx_m.htm">M</A>
| <A HREF="idx_n.htm">N</A>
| <A HREF="idx_o.htm">O</A>
| <A HREF="idx_p.htm">P</A>
| <A HREF="idx_q.htm">Q</A>
| <A HREF="idx_r.htm">R</A>
| <A HREF="idx_s.htm">S</A>
| <A HREF="idx_t.htm">T</A>
| <A HREF="idx_u.htm">U</A>
| <A HREF="idx_v.htm">V</A>
| <A HREF="idx_w.htm">W</A>
| <A HREF="idx_x.htm">X</A>
| <A HREF="idx_y.htm">Y</A>
| <A HREF="idx_z.htm">Z</A></FONT>



<p><!-- LIBRARY NAV BAR --><font size="-1"> <img src="../../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="../copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../../index.htm"><area shape="rect" coords="84,1,157,108" href="../../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../index.htm"><area shape="rect" coords="414,2,523,103" href="../../sysadmin/index.htm"></map><p>
<P
CLASS="nav"
><FONT
SIZE="-1"
></P
>
</BODY>
</HTML>
