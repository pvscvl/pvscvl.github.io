<HTML
><HEAD
>
<TITLE>Recipe 14.10. Executing an SQL Command Using DBI and DBD (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:43:00Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch14_01.htm"
TITLE="14. Database Access"><LINK
REL="prev"
HREF="ch14_10.htm"
TITLE="14.9. Persistent Data"><LINK
REL="next"
HREF="ch14_12.htm"
TITLE="14.11. Program: ggh&nbsp- Grep Netscape Global History"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_10.htm"
TITLE="14.9. Persistent Data"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 14.9. Persistent Data"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch14_01.htm"
TITLE="14. Database Access"
>Chapter 14<BR>Database Access</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_12.htm"
TITLE="14.11. Program: ggh&nbsp- Grep Netscape Global History"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 14.11. Program: ggh&nbsp- Grep Netscape Global History"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch14-77835"
>14.10. Executing an SQL Command Using DBI and DBD</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch14-pgfId-1262"
>Problem<A
CLASS="indexterm"
NAME="ch14-idx-1000005007-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005007-1"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005007-2"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005007-3"
></A
></A
></H3
><P
CLASS="para"
>You want to send SQL queries to a database system such as Oracle, Sybase, mSQL, or MySQL, and process their results.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch14-pgfId-1268"
>Solution</A
></H3
><P
CLASS="para"
>Use the DBI (DataBase Interface) and DBD (DataBase Driver) modules available from CPAN:</P
><PRE
CLASS="programlisting"
><CODE
CLASS="literal"
>use DBI;</CODE
>

<CODE
CLASS="literal"
>$dbh = DBI-&gt;connect('DBI:driver:database', 'username', 'auth',</CODE
>
<CODE
CLASS="literal"
>            { RaiseError =&gt; 1, AutoCommit =&gt; 1});</CODE
>
<CODE
CLASS="literal"
>$dbh-&gt;do($SQL);</CODE
>
<CODE
CLASS="literal"
>$sth = $dbh-&gt;prepare($SQL);</CODE
>
<CODE
CLASS="literal"
>$sth-&gt;execute();</CODE
>
<CODE
CLASS="literal"
>while (@row = $sth-&gt;fetchrow_array) {</CODE
>
<CODE
CLASS="literal"
>    # ...</CODE
>
<CODE
CLASS="literal"
>}</CODE
>
<CODE
CLASS="literal"
>$sth-&gt;finish();</CODE
>
<CODE
CLASS="literal"
>$dbh-&gt;disconnect();</CODE
></PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch14-pgfId-1306"
>Discussion</A
></H3
><P
CLASS="para"
>DBI acts as an intermediary between your program and any number of DBMS-specific drivers. For most actions you need a database handle (<CODE
CLASS="literal"
>$dbh</CODE
> in the example). This is attached to a specific database and driver using the <CODE
CLASS="literal"
>DBI-&gt;connect</CODE
> call.</P
><P
CLASS="para"
>The first argument to <CODE
CLASS="literal"
>DBI-&gt;connect</CODE
> is a single string with three colon-separated fields. It represents the <EM
CLASS="emphasis"
>data source </EM
>&nbsp;-  the DBMS you're connecting to. The first field is always <CODE
CLASS="literal"
>DBI</CODE
>, and the second is the name of the driver you're going to use (<CODE
CLASS="literal"
>Oracle</CODE
>, <CODE
CLASS="literal"
>mysql</CODE
>, etc.). The rest of the string is passed by the DBI module to the requested driver module (DBD::mysql, for example) where it identifies the database.</P
><P
CLASS="para"
>The second and third arguments authenticate the user.</P
><P
CLASS="para"
>The fourth argument is an optional hash reference defining attributes of the connection. Setting PrintError to true makes DBI warn whenever a DBI method fails. Setting RaiseError is like PrintError except that <CODE
CLASS="literal"
>die</CODE
> is used instead of <CODE
CLASS="literal"
>warn</CODE
>. AutoCommit says that you don't want to deal with transactions (smaller DBMSs don't support them, and if you're using a larger DBMS then you can read about transactions in the DBMS documentation).</P
><P
CLASS="para"
>You can execute simple SQL statements (those that don't return rows of data) with a database handle's <CODE
CLASS="literal"
>do</CODE
> method. This returns Boolean true or false. SQL statements that return rows of data (like <CODE
CLASS="literal"
>SELECT</CODE
>) require that you first use the database handle's <CODE
CLASS="literal"
>prepare</CODE
> method to create a statement handle. Then call the <CODE
CLASS="literal"
>execute</CODE
> method on the statement handle to perform the query, and retrieve rows with a fetch method like <CODE
CLASS="literal"
>fetchrow_array</CODE
> or <CODE
CLASS="literal"
>fetchrow_hashref</CODE
> (which returns a reference to a hash mapping column name to value).</P
><P
CLASS="para"
>Statement handles and database handles often correspond to underlying connections to the database, so some care must be taken with them. A connection is automatically cleaned up when its handle goes out of scope. If a database handle goes out of scope while there are active statement handles for that database, though, you will get a warning like this:</P
><PRE
CLASS="programlisting"
>disconnect(DBI::db=HASH(0x9df84)) invalidates 1 active cursor(s) 
    at -e line 1.</PRE
><P
CLASS="para"
>The <CODE
CLASS="literal"
>finish</CODE
> method ensures the statement handle is inactive (some old drivers need this). The <CODE
CLASS="literal"
>disconnect</CODE
> method, er, disconnects from the database.</P
><P
CLASS="para"
>The DBI module comes with a FAQ (<CODE
CLASS="literal"
>perldoc</CODE
> <CODE
CLASS="literal"
>DBI::FAQ</CODE
>) and regular documentation (<CODE
CLASS="literal"
>perldoc</CODE
> <CODE
CLASS="literal"
>DBI</CODE
>). The driver for your DBMS also has documentation (<CODE
CLASS="literal"
>perldoc</CODE
> <CODE
CLASS="literal"
>DBD::mysql</CODE
>, for instance). The DBI API is larger than the simple subset we've shown here; it provides diverse ways of fetching results, and it hooks into DBMS-specific features like stored procedures. Consult the driver module's documentation to learn about these.</P
><P
CLASS="para"
>The program in <A
CLASS="xref"
HREF="ch14_11.htm"
TITLE="dbusers"
>Example 14.7</A
> creates, populates, and searches a MySQL table of users. It uses the RaiseError attribute so it doesn't have to check the return status of every method call.</P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch14-35497"
>Example 14.7: dbusers</A
></H4
><PRE
CLASS="programlisting"
>#!/usr/bin/perl -w
# <A
CLASS="indexterm"
NAME="ch14-idx-1000005013-0"
></A
>dbusers - manage MySQL user table
use DBI;
use User::pwent;

$dbh = DBI-&gt;connect('DBI:mysql:dbname:mysqlserver.domain.com:3306',
                    'user', 'password',
                    { RaiseError =&gt; 1, AutoCommit =&gt; 1 })

$dbh-&gt;do(&quot;CREATE TABLE users (uid INT, login CHAR(8))&quot;);

$sql_fmt = &quot;INSERT INTO users VALUES( %d, %s )&quot;;
while ($user = getpwent) {
    $sql = sprintf($sql_fmt, $user-&gt;uid, $dbh-&gt;quote($user-&gt;name));
    $dbh-&gt;do($sql);
}

$sth = $dbh-&gt;prepare(&quot;SELECT * FROM users WHERE uid &lt; 50&quot;);
$sth-&gt;execute;

while ((@row) = $sth-&gt;fetchrow_array) {
    print join(&quot;, &quot;, map {defined $_ ? $_ : &quot;(null)&quot;} @row), &quot;\n&quot;;
}
$sth-&gt;finish;
    
$dbh-&gt;do(&quot;DROP TABLE users&quot;);

$dbh-&gt;disconnect;<A
CLASS="indexterm"
NAME="ch14-idx-1000005009-0"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005009-1"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005009-2"
></A
><A
CLASS="indexterm"
NAME="ch14-idx-1000005009-3"
></A
></PRE
></DIV
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch14-pgfId-1386"
>See Also</A
></H3
><P
CLASS="para"
>The documentation for the DBI and relevant DBD modules from CPAN; <A
CLASS="systemitem.url"
HREF="../../../../../../../www.hermetica.com/technologia/perl/DBI/"
>http://www.hermetica.com/technologia/perl/DBI/</A
> and <A
CLASS="systemitem.url"
HREF="../../../../../../../www.perl.com/CPAN/modules/ by-category/07_Database_Interfaces/"
>http://www.perl.com/CPAN/modules/ by-category/07_Database_Interfaces/</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_10.htm"
TITLE="14.9. Persistent Data"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 14.9. Persistent Data"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch14_12.htm"
TITLE="14.11. Program: ggh&nbsp- Grep Netscape Global History"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 14.11. Program: ggh&nbsp- Grep Netscape Global History"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>14.9. Persistent Data</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>14.11. Program: ggh&nbsp- Grep Netscape Global History</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
