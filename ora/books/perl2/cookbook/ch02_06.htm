<HTML
><HEAD
>
<TITLE>Recipe 2.5. Operating on a Series of Integers (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:30:07Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch02_01.htm"
TITLE="2. Numbers"><LINK
REL="prev"
HREF="ch02_05.htm"
TITLE="2.4. Converting Between Binary and Decimal"><LINK
REL="next"
HREF="ch02_07.htm"
TITLE="2.6. Working with Roman Numerals"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_05.htm"
TITLE="2.4. Converting Between Binary and Decimal"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.4. Converting Between Binary and Decimal"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch02_01.htm"
TITLE="2. Numbers"
>Chapter 2<BR>Numbers</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_07.htm"
TITLE="2.6. Working with Roman Numerals"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.6. Working with Roman Numerals"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch02-28282"
>2.5. Operating on a Series of Integers</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-371"
>Problem <A
CLASS="indexterm"
NAME="ch02-idx-1000008016-0"
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008016-1"
></A
></A
></H3
><P
CLASS="para"
>You want to perform an operation on all integers between X and Y, such as when you're working on a contiguous section of an array or in any situations where you want to process all numbers[<A
CLASS="footnote"
HREF="#ch02-pgfId-1000005950"
>2</A
>] within a range.</P
><BLOCKQUOTE
CLASS="footnote"
><DIV
CLASS="footnote"
><P
CLASS="para"
><A
CLASS="footnote"
NAME="ch02-pgfId-1000005950"
>[2]</A
> Okay, integers. It's hard to find all the reals. Just ask Cantor.</P
></DIV
></BLOCKQUOTE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-1000005952"
>Solution</A
></H3
><P
CLASS="para"
>Use a <CODE
CLASS="literal"
>for</CODE
> loop, or <CODE
CLASS="literal"
>..</CODE
> in conjunction with a <CODE
CLASS="literal"
>foreach</CODE
> loop:</P
><PRE
CLASS="programlisting"
>foreach ($X .. $Y) {
    # $_ is set to every integer from X to Y, inclusive
}

foreach $i ($X .. $Y) {
    # $i is set to every integer from X to Y, inclusive
    }

for ($i = $X; $i &lt;= $Y; $i++) {
    # $i is set to every integer from X to Y, inclusive
}

for ($i = $X; $i &lt;= $Y; $i += 7) {
    # $i is set to every integer from X to Y, stepsize = 7
}</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-413"
>Discussion</A
></H3
><P
CLASS="para"
>The first two methods use the <CODE
CLASS="literal"
>$X .. $Y</CODE
> construct, which creates a list of integers between <CODE
CLASS="literal"
>$X</CODE
> and <CODE
CLASS="literal"
>$Y</CODE
>. This uses a lot of memory when <CODE
CLASS="literal"
>$X</CODE
> and <CODE
CLASS="literal"
>$Y</CODE
> are far apart. (This is fixed in the 5.005 release.) When iterating over consecutive integers, the explicit <CODE
CLASS="literal"
>for</CODE
> loop in the third method is more memory efficient.</P
><P
CLASS="para"
>The following code shows each technique. Here we only print the numbers we generate:</P
><PRE
CLASS="programlisting"
>print &quot;Infancy is: &quot;;
foreach (0 .. 2) {
    print &quot;$_ &quot;;
}
print &quot;\n&quot;;

print &quot;Toddling is: &quot;;
foreach $i (3 .. 4) {
    print &quot;$i &quot;;
}
print &quot;\n&quot;;

print &quot;Childhood is: &quot;;
for ($i = 5; $i &lt;= 12; $i++) {
    print &quot;$i &quot;;
}
print &quot;\n&quot;;

<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Infancy is: 0 1 2 </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Toddling is: 3 4 </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Childhood is: 5 6 7 8 9 10 11 12 </I
></CODE
></B
></CODE
></PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch02-pgfId-1000007965"
>See Also</A
></H3
><P
CLASS="para"
>The <CODE
CLASS="literal"
>for</CODE
> and <CODE
CLASS="literal"
>foreach</CODE
> operators in <EM
CLASS="emphasis"
>perlsyn </EM
>(1) and the <A
CLASS="olink"
HREF="../prog/ch02_06.htm"
>"For Loops"</A
> and  <A
CLASS="olink"
HREF="../prog/ch02_06.htm"
>"Foreach Loops"</A
> sections of <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
><A
CLASS="indexterm"
NAME="ch02-idx-1000008019-0"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_05.htm"
TITLE="2.4. Converting Between Binary and Decimal"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 2.4. Converting Between Binary and Decimal"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch02_07.htm"
TITLE="2.6. Working with Roman Numerals"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 2.6. Working with Roman Numerals"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>2.4. Converting Between Binary and Decimal</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>2.6. Working with Roman Numerals</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
