<HTML
><HEAD
>
<TITLE>Recipe 19.8. Redirecting to a Different Location (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:45:41Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch19_01.htm"
TITLE="19. CGI Programming"><LINK
REL="prev"
HREF="ch19_08.htm"
TITLE="19.7. Formatting Lists and Tables with HTML Shortcuts"><LINK
REL="next"
HREF="ch19_10.htm"
TITLE="19.9. Debugging the Raw HTTP Exchange"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_08.htm"
TITLE="19.7. Formatting Lists and Tables with HTML Shortcuts"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.7. Formatting Lists and Tables with HTML Shortcuts"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch19_01.htm"
TITLE="19. CGI Programming"
>Chapter 19<BR>CGI Programming</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_10.htm"
TITLE="19.9. Debugging the Raw HTTP Exchange"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 19.9. Debugging the Raw HTTP Exchange"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch19-chap19_redirecting_1"
>19.8. Redirecting to a Different Location</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch19-pgfId-818"
>Problem<A
CLASS="indexterm"
NAME="ch19-idx-1000005466-0"
></A
><A
CLASS="indexterm"
NAME="ch19-idx-1000005466-1"
></A
><A
CLASS="indexterm"
NAME="ch19-idx-1000005466-2"
></A
></A
></H3
><P
CLASS="para"
>You need to tell the client's browser to look elsewhere for a page.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch19-pgfId-824"
>Solution</A
></H3
><P
CLASS="para"
>Instead of a normal header, just issue a location redirect and exit. Don't forget the extra newline at the end of the header.</P
><PRE
CLASS="programlisting"
>$url = &quot;http://www.perl.com/CPAN/&quot;;
print &quot;Location: $url\n\n&quot;;
exit;</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch19-pgfId-836"
>Discussion</A
></H3
><P
CLASS="para"
>Sometimes your CGI program doesn't need to generate the document on its own. It only needs to tell the client at the other end to fetch a different document instead. In that case, the HTTP header needs to include this directive as a <CODE
CLASS="literal"
>Location</CODE
> line followed by the URL you want to send them to. Make sure to use an absolute URL, not a relative one.</P
><P
CLASS="para"
>The direct and literal solution given above is usually sufficient. But if you already have the CGI module loaded, use the <CODE
CLASS="literal"
>redirect</CODE
><A
CLASS="indexterm"
NAME="ch19-idx-1000005481-0"
></A
> function. You might use this code if you are building and setting a cookie, as shown in <A
CLASS="xref"
HREF="ch19_09.htm"
TITLE="oreobounce"
>Example 19.4</A
>.</P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch19-38561"
>Example 19.4: oreobounce</A
></H4
><PRE
CLASS="programlisting"
>#!/usr/bin/perl -w
# <A
CLASS="indexterm"
NAME="ch19-idx-1000005473-0"
></A
>oreobounce - set a cookie and redirect the browser
use CGI qw(:cgi);

$oreo = cookie( -NAME    =&gt; 'filling',
                -VALUE   =&gt; &quot;vanilla crème&quot;,
                -EXPIRES =&gt; '+3M',    # M for month, m for minute
                -DOMAIN  =&gt; '.perl.com');

$whither  = &quot;http://somewhere.perl.com/nonesuch.html&quot;;

print redirect( -URL     =&gt; $whither,
                -COOKIE  =&gt; $oreo);</PRE
></DIV
><P
CLASS="para"
>That would produce:</P
><PRE
CLASS="programlisting"
><CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Status: 302 Moved Temporarily</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Set-Cookie: filling=vanilla%20cr%E4me; domain=.perl.com; </I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>    expires=Tue, 21-Jul-1998 11:58:55 GMT</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Date: Tue, 21 Apr 1998 11:55:55 GMT</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Location: http://somewhere.perl.com/nonesuch.html</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Content-Type: text/html</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>B&lt;&lt;blank line here&gt;&gt;</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
><A
CLASS="xref"
HREF="ch19_09.htm"
TITLE="os_snipe"
>Example 19.5</A
> is a complete program that looks at the client browser name and redirects it to a page in Eric Raymond's <EM
CLASS="emphasis"
>Jargon File</EM
> that talks about the user's browser. It's also a nice example of a different approach to building a <A
CLASS="indexterm"
NAME="ch19-idx-1000005593-0"
></A
>switch statement in Perl.</P
><DIV
CLASS="example"
><H4
CLASS="example"
><A
CLASS="title"
NAME="ch19-33622"
>Example 19.5: os_snipe</A
></H4
><PRE
CLASS="programlisting"
>#!/usr/bin/perl
# <A
CLASS="indexterm"
NAME="ch19-idx-1000005472-0"
></A
>os_snipe - redirect to a Jargon File entry about current OS
$dir = 'http://www.wins.uva.nl/%7Emes/jargon';
for ($ENV{HTTP_USER_AGENT}) {
    $page  =    /Mac/            &amp;&amp; 'm/Macintrash.html'
             || /Win(dows )?NT/  &amp;&amp; 'e/evilandrude.html'
             || /Win|MSIE|WebTV/ &amp;&amp; 'm/MicroslothWindows.html'
             || /Linux/          &amp;&amp; 'l/Linux.html'
             || /HP-UX/          &amp;&amp; 'h/HP-SUX.html'
             || /SunOS/          &amp;&amp; 's/ScumOS.html'
             ||                     'a/AppendixB.html';
}
print &quot;Location: $dir/$page\n\n&quot;;</PRE
></DIV
><P
CLASS="para"
>The <EM
CLASS="emphasis"
>os_snipe</EM
> program shows a good use of dynamic redirection, because you don't always send every user to the same place. If you did, it would usually make more sense to arrange for a static redirect line in the server's configuration file, since that would be easier on the web server than running a CGI script for each redirection.</P
><P
CLASS="para"
>Telling the client's browser that you don't plan to produce any output is not the same as redirecting nowhere:</P
><PRE
CLASS="programlisting"
>use CGI qw(:standard);
print header( -STATUS =&gt; '204 No response' );</PRE
><P
CLASS="para"
>That produces this:</P
><PRE
CLASS="programlisting"
><CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Status: 204 No response</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Content-Type: text/html</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>&lt;blank line here&gt;</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>Use this, for instance, when the user will submit a form request but you don't want their page to change or even update.</P
><P
CLASS="para"
>It may seem silly to provide a content type and then no content, but that's what the module does. If you were hand-coding this, it wouldn't be required.</P
><PRE
CLASS="programlisting"
>#!/bin/sh

cat &lt;&lt;EOCAT
Status: 204 No response
 
EOCAT<A
CLASS="indexterm"
NAME="ch19-idx-1000005468-0"
></A
><A
CLASS="indexterm"
NAME="ch19-idx-1000005468-1"
></A
><A
CLASS="indexterm"
NAME="ch19-idx-1000005468-2"
></A
></PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch19-pgfId-944"
>See Also</A
></H3
><P
CLASS="para"
>The documentation for the standard CGI module</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_08.htm"
TITLE="19.7. Formatting Lists and Tables with HTML Shortcuts"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 19.7. Formatting Lists and Tables with HTML Shortcuts"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch19_10.htm"
TITLE="19.9. Debugging the Raw HTTP Exchange"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 19.9. Debugging the Raw HTTP Exchange"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>19.7. Formatting Lists and Tables with HTML Shortcuts</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>19.9. Debugging the Raw HTTP Exchange</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
