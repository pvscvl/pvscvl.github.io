<HTML
><HEAD
>
<TITLE>Recipe 6.23. Regular Expression Grabbag (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:35:12Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch06_01.htm"
TITLE="6. Pattern Matching"><LINK
REL="prev"
HREF="ch06_23.htm"
TITLE="6.22. Program: tcgrep"><LINK
REL="next"
HREF="ch07_01.htm"
TITLE="7. File Access"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_23.htm"
TITLE="6.22. Program: tcgrep"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.22. Program: tcgrep"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch06_01.htm"
TITLE="6. Pattern Matching"
>Chapter 6<BR>Pattern Matching</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch07_01.htm"
TITLE="7. File Access"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7. File Access"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch06-33146"
>6.23. Regular Expression Grabbag</A
></H2
><P
CLASS="para"
>We have found these <A
CLASS="indexterm"
NAME="ch06-idx-1000007741-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007741-1"
></A
>regular expressions useful or interesting.</P
><DL
CLASS="variablelist"
><DT
CLASS="term"
>Roman numbers </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>m/^m*(d?c{0,3}|c[dm])(l?x{0,3}|x[lc])(v?i{0,3}|i[vx])$/i</PRE
></DD
><DT
CLASS="term"
>Swap first two words </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>s/(\S+)(\s+)(\S+)/$3$2$1/</PRE
></DD
><DT
CLASS="term"
>Keyword = Value </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>m/(\w+)\s*=\s*(.*)\s*$/             # keyword is $1, value is $2</PRE
></DD
><DT
CLASS="term"
>Line of at least 80 characters </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>m/.{80,}/</PRE
></DD
><DT
CLASS="term"
>MM/DD/YY HH:MM:SS </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>m|(\d+)/(\d+)/(\d+) (\d+):(\d+):(\d+)|</PRE
></DD
><DT
CLASS="term"
>Changing directories </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>s(/usr/bin)(/usr/local/bin)g</PRE
></DD
><DT
CLASS="term"
>Expanding %7E (hex) escapes </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>s/%([0-9A-Fa-f][0-9A-Fa-f])/chr hex $1/ge</PRE
></DD
><DT
CLASS="term"
>Deleting C comments (imperfectly) </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>s{
    /\*                    # Match the opening delimiter
    .*?                    # Match a minimal number of characters
    \*/                    # Match the closing delimiter
} []gsx;</PRE
></DD
><DT
CLASS="term"
>Removing leading and trailing whitespace </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>s/^\s+//;
s/\s+$//;</PRE
></DD
><DT
CLASS="term"
>Turning \ followed by n into a real newline </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>s/\\n/\n/g;</PRE
></DD
><DT
CLASS="term"
>Removing package portion of fully qualified symbols </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>s/^.*:://</PRE
></DD
><DT
CLASS="term"
>IP address </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>m/^([01]?\d\d|2[0-4]\d|25[0-5])\.([01]?\d\d|2[0-4]\d|25[0-5])\.
   ([01]?\d\d|2[0-4]\d|25[0-5])\.([01]?\d\d|2[0-4]\d|25[0-5])$/;</PRE
></DD
><DT
CLASS="term"
>Removing leading path from filename </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>s(^.*/)()</PRE
></DD
><DT
CLASS="term"
>Extracting columns setting from TERMCAP </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>$cols = ( ($ENV{TERMCAP} || &quot; &quot;) =~ m/:co#(\d+):/ ) ? $1 : 80;</PRE
></DD
><DT
CLASS="term"
>Removing directory components from program name and arguments </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>($name = &quot; $0 @ARGV&quot;) =~ s,  /\S+/,  ,g;</PRE
></DD
><DT
CLASS="term"
>Checking your operating system </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>die &quot;This isn't Linux&quot; unless $^O =~ m/linux/i;</PRE
></DD
><DT
CLASS="term"
>Joining continuation lines in multiline string </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>s/\n\s+/ /g</PRE
></DD
><DT
CLASS="term"
>Extracting all numbers from a string </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>@nums = m/(\d+\.?\d*|\.\d+)/g;</PRE
></DD
><DT
CLASS="term"
>Finding all-caps words </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>@capwords = m/(\b[^\Wa-z0-9_]+\b)/g;</PRE
></DD
><DT
CLASS="term"
>Finding all-lowercase words </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>@lowords = m/(\b[^\WA-Z0-9_]+\b)/g;</PRE
></DD
><DT
CLASS="term"
>Finding initial-caps word </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>@icwords = m/(\b[^\Wa-z0-9_][^\WA-Z0-9_]*\b)/;</PRE
></DD
><DT
CLASS="term"
>Finding links in simple HTML </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>@links = m/&lt;A[^&gt;]+?HREF\s*=\s*[&quot;']?([^'&quot; &gt;]+?)[ '&quot;]?&gt;/sig;</PRE
></DD
><DT
CLASS="term"
>Finding middle initial in $_ </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>($initial) = m/^\S+\s+(\S)\S*\s+\S/ ? $1 : &quot;&quot;;</PRE
></DD
><DT
CLASS="term"
>Changing inch marks to quotes </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>s/&quot;([^&quot;]*)&quot;/``$1''/g</PRE
></DD
><DT
CLASS="term"
>Extracting sentences (two spaces required) </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>{ local $/ = &quot;&quot;;
  while (&lt;&gt;) {
    s/\n/ /g;
    s/ {3,}/  /g;
    push @sentences, m/(\S.*?[!?.])(?=  |\Z)/g;
  }
}</PRE
></DD
><DT
CLASS="term"
>YYYY-MM-DD </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>m/(\d{4})-(\d\d)-(\d\d)/            # YYYY in $1, MM in $2, DD in $3</PRE
></DD
><DT
CLASS="term"
>North American telephone numbers </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>m/ ^
      (?:
       1 \s (?: \d\d\d \s)?            # 1, or 1 and area code
       |                               # ... or ...
       \(\d\d\d\) \s                   # area code with parens
       |                               # ... or ...
       (?: \+\d\d?\d? \s)?             # optional +country code
       \d\d\d ([\s\-])                 # and area code
      )
      \d\d\d (\s|\1)                   # prefix (and area code separator)
      \d\d\d\d                         # exchange
        $
 /x</PRE
></DD
><DT
CLASS="term"
>Exclamations </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>m/\boh\s+my\s+gh?o(d(dess(es)?|s?)|odness|sh)\b/i</PRE
></DD
><DT
CLASS="term"
>Extracting lines regardless of line terminator </DT
><DD
CLASS="listitem"
><PRE
CLASS="programlisting"
>push(@lines, $1)
    while ($input =~ s/^([^\012\015]*)(\012\015?|\015\012?)//);<A
CLASS="indexterm"
NAME="ch06-idx-1000007753-0"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007753-1"
></A
><A
CLASS="indexterm"
NAME="ch06-idx-1000007753-2"
></A
></PRE
></DD
></DL
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch06_23.htm"
TITLE="6.22. Program: tcgrep"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 6.22. Program: tcgrep"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="chapter"
HREF="ch07_01.htm"
TITLE="7. File Access"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 7. File Access"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>6.22. Program: tcgrep</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>7. File Access</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
