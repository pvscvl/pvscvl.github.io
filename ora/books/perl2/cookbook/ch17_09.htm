<HTML
><HEAD
>
<TITLE>Recipe 17.8. Finding Your Own Name and Address (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:44:33Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch17_01.htm"
TITLE="17. Sockets"><LINK
REL="prev"
HREF="ch17_08.htm"
TITLE="17.7. Identifying the Other End of a Socket"><LINK
REL="next"
HREF="ch17_10.htm"
TITLE="17.9. Closing a Socket After Forking"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_08.htm"
TITLE="17.7. Identifying the Other End of a Socket"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 17.7. Identifying the Other End of a Socket"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch17_01.htm"
TITLE="17. Sockets"
>Chapter 17<BR>Sockets</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_10.htm"
TITLE="17.9. Closing a Socket After Forking"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 17.9. Closing a Socket After Forking"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch17-24022"
>17.8. Finding Your Own Name and Address</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch17-pgfId-996"
>Problem<A
CLASS="indexterm"
NAME="ch17-idx-1000004779-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-1000004779-1"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-1000004779-2"
></A
></A
></H3
><P
CLASS="para"
>You want to find your (fully qualified) hostname.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch17-pgfId-1002"
>Solution</A
></H3
><P
CLASS="para"
>First, get your (possibly qualified) hostname. Either try the standard <A
CLASS="indexterm"
NAME="ch17-idx-1000004780-0"
></A
>Sys::Hostname module:</P
><PRE
CLASS="programlisting"
>use Sys::Hostname;

$hostname = hostname();</PRE
><P
CLASS="para"
>or POSIX's <CODE
CLASS="literal"
>uname</CODE
><A
CLASS="indexterm"
NAME="ch17-idx-1000004781-0"
></A
> function:</P
><PRE
CLASS="programlisting"
>use POSIX qw(uname);
($kernel, $hostname, $release, $version, $hardware) = uname();

$hostname = (uname)[1];             # or just one</PRE
><P
CLASS="para"
>Then turn it into an IP address and convert to its canonical name:</P
><PRE
CLASS="programlisting"
>use Socket;                         # for AF_INET
$address  = gethostbyname($hostname)
    or die &quot;Couldn't resolve $hostname : $!&quot;;
$hostname = gethostbyaddr($address, AF_INET)
    or die &quot;Couldn't re-resolve $hostname : $!&quot;;</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch17-pgfId-1034"
>Discussion</A
></H3
><P
CLASS="para"
>Sys::Hostname tries to be portable by using knowledge about your system to decide how best to find the hostname. It tries many different ways of getting the hostname, but several involve running other programs. This can lead to tainted data (see <A
CLASS="xref"
HREF="ch19_02.htm"
TITLE="Writing a CGI Script"
>Recipe 19.1</A
>).</P
><P
CLASS="para"
><CODE
CLASS="literal"
>POSIX::uname</CODE
>, on the other hand, only works on POSIX systems and isn't guaranteed to provide anything useful in the <CODE
CLASS="literal"
>nodename</CODE
> field that we are examining. That said, the value <EM
CLASS="emphasis"
>is</EM
> useful on many machines and doesn't suffer from the tainted data problem that Sys::Hostname does.</P
><P
CLASS="para"
>Once you have the name, though, you must consider that it might be missing a domain name. For instance, Sys::Hostname may return you <CODE
CLASS="literal"
>guanaco</CODE
> instead of <CODE
CLASS="literal"
>guanaco.camelids.org</CODE
>. To fix this, convert the name back into an IP address with <CODE
CLASS="literal"
>gethostbyname</CODE
> and then back into a name again with <CODE
CLASS="literal"
>gethostbyaddr</CODE
>. By involving the domain name system, you are guaranteed of getting a full name.<A
CLASS="indexterm"
NAME="ch17-idx-1000004783-0"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-1000004783-1"
></A
><A
CLASS="indexterm"
NAME="ch17-idx-1000004783-2"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch17-pgfId-1044"
>See Also</A
></H3
><P
CLASS="para"
>The
<A
CLASS="olink"
HREF="../prog/ch03_047.htm"
>&#13;<CODE
CLASS="literal"
>gethostbyaddr</CODE
></A
>,

<A
CLASS="olink"
HREF="../prog/ch03_048.htm"
>&#13;<CODE
CLASS="literal"
>gethostbyname</CODE
></A
>

functions in <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> and in <I
CLASS="filename"
>perlfunc </I
>(1); the documentation for the standard Net::hostent and Sys::Hostname modules</P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_08.htm"
TITLE="17.7. Identifying the Other End of a Socket"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 17.7. Identifying the Other End of a Socket"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch17_10.htm"
TITLE="17.9. Closing a Socket After Forking"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 17.9. Closing a Socket After Forking"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>17.7. Identifying the Other End of a Socket</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>17.9. Closing a Socket After Forking</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
