<HTML
><HEAD
>
<TITLE>Recipe 10.10. Returning Failure (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:39:58Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch10_01.htm"
TITLE="10. Subroutines"><LINK
REL="prev"
HREF="ch10_10.htm"
TITLE="10.9. Returning More Than One Array or Hash"><LINK
REL="next"
HREF="ch10_12.htm"
TITLE="10.11. Prototyping Functions"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_10.htm"
TITLE="10.9. Returning More Than One Array or Hash"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.9. Returning More Than One Array or Hash"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch10_01.htm"
TITLE="10. Subroutines"
>Chapter 10<BR>Subroutines</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_12.htm"
TITLE="10.11. Prototyping Functions"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.11. Prototyping Functions"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch10-32225"
>10.10. Returning Failure</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-760"
>Problem<A
CLASS="indexterm"
NAME="ch10-idx-1000004702-0"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004702-1"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004702-2"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004702-3"
></A
></A
></H3
><P
CLASS="para"
>You want to return a value indicating that your function failed.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-766"
>Solution</A
></H3
><P
CLASS="para"
>Use a bare <CODE
CLASS="literal"
>return</CODE
><A
CLASS="indexterm"
NAME="ch10-idx-1000004706-0"
></A
> statement without any argument, which returns <CODE
CLASS="literal"
>undef</CODE
> in scalar context and the empty list <CODE
CLASS="literal"
>()</CODE
> in list context.</P
><PRE
CLASS="programlisting"
>return;</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-774"
>Discussion</A
></H3
><P
CLASS="para"
>A <CODE
CLASS="literal"
>return</CODE
> without an argument means:</P
><PRE
CLASS="programlisting"
>sub empty_retval {
    return ( wantarray ? () : undef );
}</PRE
><P
CLASS="para"
>You can't use just <CODE
CLASS="literal"
>return</CODE
> <CODE
CLASS="literal"
>undef</CODE
> because in list context you will get a list of one value: <CODE
CLASS="literal"
>undef</CODE
>. If your caller says:</P
><PRE
CLASS="programlisting"
>if (@a = yourfunc()) { ... }</PRE
><P
CLASS="para"
>Then the "error" condition will be perceived as true, because <CODE
CLASS="literal"
>@a</CODE
> will be assigned (<CODE
CLASS="literal"
>undef</CODE
>) and then evaluated in scalar context. This yields <CODE
CLASS="literal"
>1</CODE
>, the number of elements in <CODE
CLASS="literal"
>@a</CODE
>, which is true. You could use the <CODE
CLASS="literal"
>wantarray</CODE
> function to see what context you were called in, but a bare <CODE
CLASS="literal"
>return</CODE
> is a clear and tidy solution that always works:</P
><PRE
CLASS="programlisting"
>unless ($a = sfunc()) { die &quot;sfunc failed&quot; }
unless (@a = afunc()) { die &quot;afunc failed&quot; }
unless (%a = hfunc()) { die &quot;hfunc failed&quot; }</PRE
><P
CLASS="para"
>Some of Perl's built-in functions have a peculiar return value. Both <CODE
CLASS="literal"
>fcntl</CODE
><A
CLASS="indexterm"
NAME="ch10-idx-1000004707-0"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004707-1"
></A
> and <CODE
CLASS="literal"
>ioctl</CODE
> have the curious habit of returning the string <A
CLASS="indexterm"
NAME="ch10-idx-1000006361-0"
></A
><CODE
CLASS="literal"
>&quot;0</CODE
> <CODE
CLASS="literal"
>but</CODE
> <CODE
CLASS="literal"
>true&quot;</CODE
> in some circumstances. (This magic string is conveniently exempt from the <B
CLASS="emphasis.bold"
>-w</B
> flag's incessant numerical conversion warnings.) This has the advantage of letting you write code like this:</P
><PRE
CLASS="programlisting"
>ioctl(....) or die &quot;can't ioctl: $!&quot;;</PRE
><P
CLASS="para"
>That way, code doesn't have to check for a defined zero as distinct from the undefined value, as it would for the <CODE
CLASS="literal"
>read</CODE
> or <CODE
CLASS="literal"
>glob</CODE
> functions. <CODE
CLASS="literal"
>&quot;0</CODE
> <CODE
CLASS="literal"
>but</CODE
> <CODE
CLASS="literal"
>true&quot;</CODE
> is zero when used numerically. It's rare that this kind of return value is needed. A more common (and spectacular) way to indicate failure in a function is to raise an exception, as described in <A
CLASS="xref"
HREF="ch10_13.htm"
TITLE="Handling Exceptions"
>Recipe 10.12</A
>.<A
CLASS="indexterm"
NAME="ch10-idx-1000004709-0"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004709-1"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004709-2"
></A
><A
CLASS="indexterm"
NAME="ch10-idx-1000004709-3"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch10-pgfId-802"
>See Also</A
></H3
><P
CLASS="para"
>The <A
CLASS="olink"
HREF="../prog/ch03_180.htm"
><CODE
CLASS="literal"
>undef</CODE
></A
>, <A
CLASS="olink"
HREF="../prog/ch03_191.htm"
><CODE
CLASS="literal"
>wantarray</CODE
></A
>, and <A
CLASS="olink"
HREF="../prog/ch03_125.htm"
><CODE
CLASS="literal"
>return</CODE
></A
> functions in <A
CLASS="olink"
HREF="../prog/ch03_01.htm"
>Chapter 3</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
> and <I
CLASS="filename"
>perlfunc </I
>(1); <A
CLASS="xref"
HREF="ch10_13.htm"
TITLE="Handling Exceptions"
>Recipe 10.12</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_10.htm"
TITLE="10.9. Returning More Than One Array or Hash"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 10.9. Returning More Than One Array or Hash"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch10_12.htm"
TITLE="10.11. Prototyping Functions"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 10.11. Prototyping Functions"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>10.9. Returning More Than One Array or Hash</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>10.11. Prototyping Functions</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
