<HTML
><HEAD
>
<TITLE>Recipe 5.1. Adding an Element to a Hash (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:32:28Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch05_01.htm"
TITLE="5. Hashes"><LINK
REL="prev"
HREF="ch05_01.htm"
TITLE="5.0. Introduction"><LINK
REL="next"
HREF="ch05_03.htm"
TITLE="5.2. Testing for the Presence of a Key in a Hash"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_01.htm"
TITLE="5.0. Introduction"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.0. Introduction"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch05_01.htm"
TITLE="5. Hashes"
>Chapter 5<BR>Hashes</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_03.htm"
TITLE="5.2. Testing for the Presence of a Key in a Hash"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.2. Testing for the Presence of a Key in a Hash"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch05-chap05_adding_0"
>5.1. Adding an Element to a Hash</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-70"
>Problem <A
CLASS="indexterm"
NAME="ch05-idx-1000006422-0"
></A
><A
CLASS="indexterm"
NAME="ch05-idx-1000006422-1"
></A
></A
></H3
><P
CLASS="para"
>You need to add an entry to a hash.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-76"
>Solution</A
></H3
><P
CLASS="para"
>Simply assign to the hash key:</P
><PRE
CLASS="programlisting"
>$HASH{$KEY} = $VALUE;</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-84"
>Discussion</A
></H3
><P
CLASS="para"
>Putting something into a hash is straightforward. In languages that don't provide the hash as an intrinsic data type, you have to worry about overflows, resizing, and collisions in your hash table. In Perl, all that is taken care of for you with a simple assignment. If that entry was already occupied (had a previous value), memory for that value is automatically freed, just as when assigning to a simple scalar.</P
><PRE
CLASS="programlisting"
># %food_color defined per the introduction
$food_color{Raspberry} = &quot;pink&quot;;
print &quot;Known foods:\n&quot;;
foreach $food (keys %food_color) {
    print &quot;$food\n&quot;;
}

<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Known foods:</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Banana</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Apple</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Raspberry</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Carrot</I
></CODE
></B
></CODE
>
<CODE
CLASS="userinput"
><B
><CODE
CLASS="replaceable"
><I
>Lemon</I
></CODE
></B
></CODE
></PRE
><P
CLASS="para"
>If you store <CODE
CLASS="literal"
>undef</CODE
> as a hash key, it gets stringified to <CODE
CLASS="literal"
>&quot;&quot;</CODE
> (and generates a warning if your program is running under <B
CLASS="emphasis.bold"
>-w</B
>). Using <CODE
CLASS="literal"
>undef</CODE
> as a key is probably not what you want. On the other hand, <CODE
CLASS="literal"
>undef</CODE
> is a valid <EM
CLASS="emphasis"
>value</EM
> in a hash. But if you fetch the value for a key that isn't in the hash, you'll also get <CODE
CLASS="literal"
>undef</CODE
>. This means you can't use the simple Boolean test <CODE
CLASS="literal"
>if</CODE
> <CODE
CLASS="literal"
>($hash{$key})</CODE
> to see whether there is an entry in <CODE
CLASS="literal"
>%hash</CODE
> for <CODE
CLASS="literal"
>$key</CODE
>. Use <CODE
CLASS="literal"
>exists($hash{$key})</CODE
><A
CLASS="indexterm"
NAME="ch05-idx-1000006424-0"
></A
> to test whether a key is in the hash, <CODE
CLASS="literal"
>defined($hash{$key})</CODE
> to test if the corresponding value is not <CODE
CLASS="literal"
>undef</CODE
>, and <CODE
CLASS="literal"
>if</CODE
> <CODE
CLASS="literal"
>($hash{$key})</CODE
> to test if the corresponding value is a true value.</P
><P
CLASS="para"
>In Perl's hashing algorithm, permutations of a string hash to the same spot internally. If your hash contains as keys many permutations of the same string, like <CODE
CLASS="literal"
>&quot;sparc&quot;</CODE
> and <CODE
CLASS="literal"
>&quot;craps&quot;</CODE
>, hash performance can degrade noticeably. In practice, this seldom occurs.<A
CLASS="indexterm"
NAME="ch05-idx-1000006423-0"
></A
></P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch05-pgfId-120"
>See Also</A
></H3
><P
CLASS="para"
>The "List Value Constructors" section of <I
CLASS="filename"
>perldata </I
>(1); the <A
CLASS="olink"
HREF="../prog/ch02_03.htm"
>"List Values and Arrays"</A
> section of <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>; <A
CLASS="xref"
HREF="ch05_03.htm"
TITLE="Testing for the Presence of a Key in a Hash"
>Recipe 5.2</A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_01.htm"
TITLE="5.0. Introduction"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 5.0. Introduction"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch05_03.htm"
TITLE="5.2. Testing for the Presence of a Key in a Hash"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 5.2. Testing for the Presence of a Key in a Hash"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>5.0. Introduction</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>5.2. Testing for the Presence of a Key in a Hash</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
