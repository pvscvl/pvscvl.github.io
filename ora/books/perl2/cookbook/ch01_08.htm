<HTML
><HEAD
>
<TITLE>Recipe 1.7. Expanding and Compressing Tabs (Perl Cookbook)</TITLE>
<META
NAME="DC.title"
CONTENT="Perl Cookbook"><META
NAME="DC.creator"
CONTENT="Tom Christiansen &amp; Nathan Torkington"><META
NAME="DC.publisher"
CONTENT="O'Reilly &amp; Associates, Inc."><META
NAME="DC.date"
CONTENT="1999-07-02T01:28:52Z"><META
NAME="DC.type"
CONTENT="Text.Monograph"><META
NAME="DC.format"
CONTENT="text/html"
SCHEME="MIME"><META
NAME="DC.source"
CONTENT="1-56592-243-3"
SCHEME="ISBN"><META
NAME="DC.language"
CONTENT="en-US"><META
NAME="generator"
CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINK
REV="made"
HREF="mailto:online-books@oreilly.com"
TITLE="Online Books Comments"><LINK
REL="up"
HREF="ch01_01.htm"
TITLE="1. Strings"><LINK
REL="prev"
HREF="ch01_07.htm"
TITLE="1.6. Reversing a String by Word or Character"><LINK
REL="next"
HREF="ch01_09.htm"
TITLE="1.8. Expanding Variables in User Input"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="htmlnav"
><H1
><IMG
SRC="gifs/smbanner.gif"
ALT="Perl Cookbook"
USEMAP="#srchmap"
BORDER="0"></H1
><MAP
NAME="srchmap"
><AREA
SHAPE="RECT"
COORDS="0,0,466,65"
HREF="index.htm"
ALT="Perl Cookbook"><AREA
SHAPE="RECT"
COORDS="467,0,514,18"
HREF="jobjects/fsearch.htm"
ALT="Search this book"></MAP
><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_07.htm"
TITLE="1.6. Reversing a String by Word or Character"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.6. Reversing a String by Word or Character"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><B
><FONT
FACE="ARIEL,HELVETICA,HELV,SANSERIF"
SIZE="-1"
><A
CLASS="chapter"
REL="up"
HREF="ch01_01.htm"
TITLE="1. Strings"
>Chapter 1<BR>Strings</A
></FONT
></B
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_09.htm"
TITLE="1.8. Expanding Variables in User Input"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.8. Expanding Variables in User Input"
BORDER="0"></A
></TD
></TR
></TABLE
>&nbsp;<HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"></DIV
><DIV
CLASS="sect1"
><H2
CLASS="sect1"
><A
CLASS="title"
NAME="ch01-chap01_expanding_0"
>1.7. Expanding and Compressing Tabs</A
></H2
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-745"
>Problem <A
CLASS="indexterm"
NAME="ch01-idx-1000010242-0"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010242-1"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010242-2"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010242-3"
></A
></A
></H3
><P
CLASS="para"
>You want to convert tabs in a string to the appropriate number of spaces, or vice versa. Converting spaces into tabs can be used to reduce file size when the file has many consecutive spaces. Converting tabs into spaces may be required when producing output for devices that don't understand tabs or think they're at different positions than you do.</P
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-751"
>Solution</A
></H3
><P
CLASS="para"
>Either use a rather funny looking substitution:</P
><PRE
CLASS="programlisting"
>while ($string =~ s/\t+/' ' x (length($&amp;) * 8 - length($`) % 8)/e) {
    # spin in empty loop until substitution finally fails
}</PRE
><P
CLASS="para"
>Or the standard Text::Tabs module:</P
><PRE
CLASS="programlisting"
>use Text::Tabs;
@expanded_lines  = expand(@lines_with_tabs);
@tabulated_lines = unexpand(@lines_without_tabs);</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-771"
>Discussion</A
></H3
><P
CLASS="para"
>Assuming that tab stops are set every <EM
CLASS="emphasis"
>N</EM
> positions (where <EM
CLASS="emphasis"
>N</EM
> is customarily eight), it's easy to convert them into spaces. The standard, textbook method does not use the <A
CLASS="indexterm"
NAME="ch01-idx-1000010248-0"
></A
>Text::Tabs module but suffers from being difficult to understand. Also, it uses the <CODE
CLASS="literal"
>$`</CODE
> variable, whose very mention currently slows down every pattern match in the program. The reason for this is given in the "Special Variables" section of the Introduction to <A
CLASS="xref"
HREF="ch06_01.htm"
TITLE="Pattern Matching"
>Chapter 6</A
>.</P
><PRE
CLASS="programlisting"
>while (&lt;&gt;) {
    1 while s/\t+/' ' x (length($&amp;) * 8 - length($`) % 8)/e;
    print;
}</PRE
><P
CLASS="para"
>If you're looking at the second <CODE
CLASS="literal"
>while</CODE
> loop and wondering why it couldn't have been written as part of a simple <CODE
CLASS="literal"
>s///g</CODE
> instead, it's because you need to recalculate the length from the start of the line again each time (stored in <CODE
CLASS="literal"
>$`</CODE
>) rather than merely from where the last match occurred.</P
><P
CLASS="para"
>The obscure convention <CODE
CLASS="literal"
>1</CODE
> <CODE
CLASS="literal"
>while</CODE
> <A
CLASS="indexterm"
NAME="ch01-idx-1000011494-0"
></A
><CODE
CLASS="literal"
>CONDITION</CODE
> is the same as <CODE
CLASS="literal"
>while</CODE
> <CODE
CLASS="literal"
>(CONDITION)</CODE
> <CODE
CLASS="literal"
>{</CODE
> <CODE
CLASS="literal"
>}</CODE
>, but shorter. Its origins date to when Perl ran the first incredibly faster than the second. While the second is now almost as fast, it remains convenient, and the habit has stuck.</P
><P
CLASS="para"
>The standard Text::Tabs module provides conversion functions to convert both directions, exports a <CODE
CLASS="literal"
>$tabstop</CODE
> variable to control the number of spaces per tab, and does not incur the performance hit because it uses <CODE
CLASS="literal"
>$1</CODE
> and <CODE
CLASS="literal"
>$2</CODE
> rather than <CODE
CLASS="literal"
>$&amp;</CODE
> and <CODE
CLASS="literal"
>$`</CODE
>.</P
><PRE
CLASS="programlisting"
>use Text::Tabs;
$tabstop = 4;
while (&lt;&gt;) { print expand($_) }</PRE
><P
CLASS="para"
>We can also use Text::Tabs to "unexpand" the tabs. This example uses the default <CODE
CLASS="literal"
>$tabstop</CODE
> value of 8:</P
><PRE
CLASS="programlisting"
>use Text::Tabs;
while (&lt;&gt;) { print unexpand($_) }</PRE
></DIV
><DIV
CLASS="sect2"
><H3
CLASS="sect2"
><A
CLASS="title"
NAME="ch01-pgfId-803"
>See Also</A
></H3
><P
CLASS="para"
>The manpage for the Text::Tabs module (also in <A
CLASS="olink"
HREF="../prog/ch07_01.htm"
>Chapter 7</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
>); the <CODE
CLASS="literal"
>s///</CODE
> operator in <EM
CLASS="emphasis"
>perlre </EM
>(1) and <EM
CLASS="emphasis"
>perlop </EM
>(1) and the <A
CLASS="olink"
HREF="../prog/ch02_04.htm"
>"Pattern Matching"</A
> and <A
CLASS="olink"
HREF="../prog/ch02_04.htm"
>"Regular Expressions"</A
> sections of <A
CLASS="olink"
HREF="../prog/ch02_01.htm"
>Chapter 2</A
> of <A
CLASS="citetitle"
HREF="../prog/index.htm"
TITLE="Programming Perl"
><CITE
CLASS="citetitle"
>Programming Perl</CITE
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010244-0"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010244-1"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010244-2"
></A
><A
CLASS="indexterm"
NAME="ch01-idx-1000010244-3"
></A
></P
></DIV
></DIV
><DIV
CLASS="htmlnav"
><P
></P
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><TABLE
WIDTH="515"
BORDER="0"
CELLSPACING="0"
CELLPADDING="0"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_07.htm"
TITLE="1.6. Reversing a String by Word or Character"
><IMG
SRC="../gifs/txtpreva.gif"
ALT="Previous: 1.6. Reversing a String by Word or Character"
BORDER="0"></A
></TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="book"
HREF="index.htm"
TITLE="Perl Cookbook"
><IMG
SRC="../gifs/txthome.gif"
ALT="Perl Cookbook"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
><A
CLASS="sect1"
HREF="ch01_09.htm"
TITLE="1.8. Expanding Variables in User Input"
><IMG
SRC="../gifs/txtnexta.gif"
ALT="Next: 1.8. Expanding Variables in User Input"
BORDER="0"></A
></TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="172"
>1.6. Reversing a String by Word or Character</TD
><TD
ALIGN="CENTER"
VALIGN="TOP"
WIDTH="171"
><A
CLASS="index"
HREF="index/idx_0.htm"
TITLE="Book Index"
><IMG
SRC="../gifs/index.gif"
ALT="Book Index"
BORDER="0"></A
></TD
><TD
ALIGN="RIGHT"
VALIGN="TOP"
WIDTH="172"
>1.8. Expanding Variables in User Input</TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="515"
TITLE="footer"><P
CLASS="nav"
><FONT
SIZE="-1"
></P
></DIV
<!-- LIBRARY NAV BAR --> <img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p> <a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font> </p> <map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm"></map> </BODY
></HTML
>
